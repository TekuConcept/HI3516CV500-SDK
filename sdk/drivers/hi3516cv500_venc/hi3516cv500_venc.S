@
@ -- FILES --
@

@ venc.c
@ venc_ext.c
@ venc_drv.c
@ venc_init.c
@ hi3516cv500_venc.mod.c


unsigned char rodata[4906] = {
    /*0000*/ "VencCheckRcMode\0",
    /*0010*/ "MkpVencCheckNull\0\0\0\0",
    /*0024*/ "MkpVencCheckChn\0",
    /*0034*/ "VencCheckGopAttr\0\0\0\0",
    /*0048*/ "MkpVencCheckChnCreated\0\0",
    /*0060*/ "VenCheckRoiCfg\0\0",
    /*0070*/ "MkpVencCheckChnRegistered\0\0\0",
    /*008c*/ "VencInitRoiCfg\0\0",
    /*009c*/ "VencConfigOneChn\0\0\0\0",
    /*00b0*/ "VencReadOneChn\0\0",
    /*00c0*/ "VencFrmRateCtl\0\0",
    /*00d0*/ "VencCheckCropCfg\0\0\0\0",
    /*00e4*/ "VencReigster2Chnl\0\0\0",
    /*00f8*/ "VencGetFrmAddInfo\0\0\0",
    /*010c*/ "VencGetOverLayEx\0\0\0\0",
    /*0120*/ "VencPutOverLayEx\0\0\0\0",
    /*0134*/ "VencGetOsd\0\0",
    /*0140*/ "VencPutOsd\0\0",
    /*014c*/ "VencPrepareMpfOsdInfo\0\0\0",
    /*0164*/ "VencGetRoi\0\0",
    /*0170*/ "VencUpdateJpegEncodeIndex\0\0\0",
    /*018c*/ "VencQueryOnePic\0",
    /*019c*/ "VencVgsCallback\0",
    /*01ac*/ "VencVgsCallbackByJob\0\0\0\0",
    /*01c4*/ "VencReleaseOnePic\0\0\0",
    /*01d8*/ "VencSendPic2Vgs\0",
    /*01e8*/ "VencSendPic2VgsOfDcf\0\0\0\0",
    /*0200*/ "VencSendPic2VgsOfMpf\0\0\0\0",
    /*0218*/ "VencAddOsdVgsTask\0\0\0",
    /*022c*/ "VencAddMpfVgsTask\0\0\0",
    /*0240*/ "VencSendPic2VgsByJob\0\0\0\0",
    /*0258*/ "VencCheckTimeRef\0\0\0\0",
    /*026c*/ "VencCheckMpf\0\0\0\0",
    /*027c*/ "VencCheckAttr\0\0\0",
    /*028c*/ "YVU420\0\0",
    /*0294*/ "\0\0YVU422\0\0\0\0",
    /*02a0*/ "YVU444\0\0",
    /*02a8*/ "\0\0YUV400\0\0\0\0",
    /*02b4*/ "NA\0\0",
    /*02b8*/ "\0\0\0\0",
    /*02bc*/ "\0\0\0\0",
    /*02c0*/ "NormalP\0",
    /*02c8*/ "\0\0DualP\0",
    /*02d0*/ "\0\0\0\0",
    /*02d4*/ "SmartP\0\0",
    /*02dc*/ "\0\0AdvSmartP\0",
    /*02e8*/ "Bmode\0\0\0",
    /*02f0*/ "\0\0LowdelayB\0",
    /*02fc*/ "N\0Y\0",
    /*0300*/ "ALL\0",
    /*0304*/ "\0SNAP\0NA\0\0\0\0",
    /*0310*/ "N\0Y\0",
    /*0314*/ "VencGetCurrentUniqueID\0\0",
    /*032c*/ "VencSetUniqueID\0",
    /*033c*/ "VencCreateChnByType\0",
    /*0350*/ "VencCreateChn\0\0\0",
    /*0360*/ "VencGetChnlType\0",
    /*0370*/ "VencSetRcParam\0\0",
    /*0380*/ "VencGetRcParam\0\0",
    /*0390*/ "VencGetBufAddr\0\0",
    /*03a0*/ "VencStreamGetInfo\0\0\0",
    /*03b4*/ "VencGetStream\0\0\0",
    /*03c4*/ "VENC_BUF_PutUser\0\0\0\0",
    /*03d8*/ "VencPutStream\0\0\0",
    /*03e8*/ "VencPutOneChnStream\0",
    /*03fc*/ "VENC_BUF_PutFree\0\0\0\0",
    /*0410*/ "VencPacktoVencBuf\0\0\0",
    /*0424*/ "VencGetOneChnStream\0",
    /*0438*/ "VENC_BUF_PutBusy\0\0\0\0",
    /*044c*/ "VencGetStreamInfo\0\0\0",
    /*0460*/ "VencClearAllQueue\0\0\0",
    /*0474*/ "VencResetChn\0\0\0\0",
    /*0484*/ "VENC_BUF_CleanUp\0\0\0\0",
    /*0498*/ "VENC_FRMBUF_CleanUp\0",
    /*04ac*/ "VENC_FrameOverNotify\0\0\0\0",
    /*04c4*/ "VencRequestIDR\0\0",
    /*04d4*/ "VencInsertUserData\0\0",
    /*04e8*/ "VencUnRegisterChn\0\0\0",
    /*04fc*/ "VencDestroyChn\0\0",
    /*050c*/ "VENC_FRMBUF_Release\0",
    /*0520*/ "VENC_BUF_Release\0\0\0\0",
    /*0534*/ "VencStartRecvPic\0\0\0\0",
    /*0548*/ "VencStartRecvFrame\0\0",
    /*055c*/ "VencStopRecvPic\0",
    /*056c*/ "VencQuery\0\0\0",
    /*0578*/ "VencDoPoll\0\0",
    /*0584*/ "VencGetRcnFrame\0",
    /*0594*/ "VencReleaseRcnFrame\0",
    /*05a8*/ "VencGetDeBreathEffect\0\0\0",
    /*05c0*/ "VencGetRoiCfg\0\0\0",
    /*05d0*/ "VencSetRoiCfg\0\0\0",
    /*05e0*/ "VencGetRoiCfgEx\0",
    /*05f0*/ "VencSetRoiCfgEx\0",
    /*0600*/ "VencSetH264SliceSplit\0\0\0",
    /*0618*/ "VencGetH264SliceSplit\0\0\0",
    /*0630*/ "VencSetH264InterPred\0\0\0\0",
    /*0648*/ "VencGetH264InterPred\0\0\0\0",
    /*0660*/ "VencSetH264IntraPred\0\0\0\0",
    /*0678*/ "VencGetH264IntraPred\0\0\0\0",
    /*0690*/ "VencSetH264Trans\0\0\0\0",
    /*06a4*/ "VencGetH264Trans\0\0\0\0",
    /*06b8*/ "VencSetH264Entropy\0\0",
    /*06cc*/ "VencGetH264Entropy\0\0",
    /*06e0*/ "VencSetH264Poc\0\0",
    /*06f0*/ "VencGetH264Poc\0\0",
    /*0700*/ "VencSetH264Dblk\0",
    /*0710*/ "VencGetH264Dblk\0",
    /*0720*/ "VencSetH264Vui\0\0",
    /*0730*/ "VencGetH264Vui\0\0",
    /*0740*/ "VencSetRefParam\0",
    /*0750*/ "VencGetRefParam\0",
    /*0760*/ "VencEnableIDR\0\0\0",
    /*0770*/ "VencSetH264eIDRPicID\0\0\0\0",
    /*0788*/ "VencGetH264eIDRPicID\0\0\0\0",
    /*07a0*/ "VencCheckRoiBgFrameRate\0",
    /*07b8*/ "VencSetRoiBgFrameRate\0\0\0",
    /*07d0*/ "VencGetRoiBgFrameRate\0\0\0",
    /*07e8*/ "VencSetJpegParam\0\0\0\0",
    /*07fc*/ "VencGetJpegParam\0\0\0\0",
    /*0810*/ "VencSetMjpegParam\0\0\0",
    /*0824*/ "VencGetMjpegParam\0\0\0",
    /*0838*/ "VencSetJpegEncodeMode\0\0\0",
    /*0850*/ "VencGetJpegEncodeMode\0\0\0",
    /*0868*/ "VencSetH265Slice\0\0\0\0",
    /*087c*/ "VencGetH265Slice\0\0\0\0",
    /*0890*/ "VencSetH265Pu\0\0\0",
    /*08a0*/ "VencGetH265Pu\0\0\0",
    /*08b0*/ "VencSetH265Tu\0\0\0",
    /*08c0*/ "VencGetH265Tu\0\0\0",
    /*08d0*/ "VencSetH265Entropy\0\0",
    /*08e4*/ "VencGetH265Entropy\0\0",
    /*08f8*/ "VencSetH265Dblk\0",
    /*0908*/ "VencGetH265Dblk\0",
    /*0918*/ "VencSetH265Sao\0\0",
    /*0928*/ "VencGetH265Sao\0\0",
    /*0938*/ "VencSetH265Timing\0\0\0",
    /*094c*/ "VencGetH265Timing\0\0\0",
    /*0960*/ "VencSetH265Vui\0\0",
    /*0970*/ "VencGetH265Vui\0\0",
    /*0980*/ "VencCheckFrmLostStra\0\0\0\0",
    /*0998*/ "VencSetFrmLostStra\0\0",
    /*09ac*/ "VencGetFrmLostStra\0\0",
    /*09c0*/ "VencSetFaceCfg\0\0",
    /*09d0*/ "VencGetFaceCfg\0\0",
    /*09e0*/ "VencSetRcSuperFrmCfg\0\0\0\0",
    /*09f8*/ "VencGetRcSuperFrmCfg\0\0\0\0",
    /*0a10*/ "VencGetGop\0\0",
    /*0a1c*/ "VencSetDeBreathEffect\0\0\0",
    /*0a34*/ "VencCheckDeBreathEffect\0",
    /*0a4c*/ "VencGetDstFrameRate\0",
    /*0a60*/ "VencCheckChnAttr\0\0\0\0",
    /*0a74*/ "VencCheckStaticAttr\0",
    /*0a88*/ "VencStopSchedule\0\0\0\0",
    /*0a9c*/ "VencSetChnAttrVenc\0\0",
    /*0ab0*/ "VencSetChnAttrRes\0\0\0",
    /*0ac4*/ "VencSetChnAttrAll\0\0\0",
    /*0ad8*/ "VencSetChnAttr\0\0",
    /*0ae8*/ "VencGetChnAttr\0\0",
    /*0af8*/ "VENC_AttachVbPool\0\0\0",
    /*0b0c*/ "VENC_DetachVbPool\0\0\0",
    /*0b20*/ "VencCheckIntraRefresh\0\0\0",
    /*0b38*/ "VencSetIntraRefresh\0",
    /*0b4c*/ "VencGetIntraRefresh\0",
    /*0b60*/ "VencSetSobelCfg\0",
    /*0b70*/ "VencGetSobelCfg\0",
    /*0b80*/ "VencSetPatternAdaptiveCfg\0\0\0",
    /*0b9c*/ "VencGetPatternAdaptiveCfg\0\0\0",
    /*0bb8*/ "VencSetPredModeAdaptiveH264\0",
    /*0bd4*/ "VencGetPredModeAdaptiveH264\0",
    /*0bf0*/ "VencSetPredModeAdaptiveH265\0",
    /*0c0c*/ "VencGetPredModeAdaptiveH265\0",
    /*0c28*/ "VencGetOtherModParam\0\0\0\0",
    /*0c40*/ "VencSetOtherModParam\0\0\0\0",
    /*0c58*/ "VencSetSSECfg\0\0\0",
    /*0c68*/ "VencGetSSECfg\0\0\0",
    /*0c78*/ "VencSetSceneMode\0\0\0\0",
    /*0c8c*/ "VencGetSceneMode\0\0\0\0",
    /*0ca0*/ "VencSetChnlPriority\0",
    /*0cb4*/ "VencSetCropCfg\0\0",
    /*0cc4*/ "VencSetFrmRate\0\0",
    /*0cd4*/ "VencSetAdvancedParam\0\0\0\0",
    /*0cec*/ "VencSetChnParam\0",
    /*0cfc*/ "VencGetChnParam\0",
    /*0d0c*/ "VencGetForeground\0\0\0",
    /*0d20*/ "VencCheckForeGround\0",
    /*0d34*/ "VencSetForeground\0\0\0",
    /*0d48*/ "VencCheckPrediction\0",
    /*0d5c*/ "VencSetPrediction\0\0\0",
    /*0d70*/ "VencGetPrediction\0\0\0",
    /*0d84*/ "VencCheckSkipBias\0\0\0",
    /*0d98*/ "VencSetSkipBias\0",
    /*0da8*/ "VencGetSkipBias\0",
    /*0db8*/ "VencCheckHierarchicalQp\0",
    /*0dd0*/ "VencSetHierarchicalQp\0\0\0",
    /*0de8*/ "VencGetHierarchicalQp\0\0\0",
    /*0e00*/ "VencSetRcAdvParam\0\0\0",
    /*0e14*/ "VencGetRcAdvParam\0\0\0",
    /*0e28*/ "VENC_SysReset\0\0\0",
    /*0e38*/ "VencMmap\0\0\0\0",
    /*0e44*/ "VENC_Init\0\0\0",
    /*0e50*/ "VencCheckVideoCfg\0\0\0",
    /*0e64*/ "VENC_Exit\0\0\0",
    /*0e70*/ "VENC_FRMBUF_Release\0",
    /*0e84*/ "VENC_BUF_Release\0\0\0\0",
    /*0e98*/ "VencDealAbnoramlQueue\0\0\0",
    /*0eb0*/ "VencQueryPicQueue\0\0\0",
    /*0ec4*/ "VencCheckJpegeQueue\0",
    /*0ed8*/ "VencCheckVpssQueryInfo\0\0",
    /*0ef0*/ "VENC_VpssQuery\0\0",
    /*0f00*/ "VencCheckFreeNode\0\0\0",
    /*0f14*/ "VENC_GetFreeQueue\0\0\0",
    /*0f28*/ "VencGetFreePicQueueByIndex\0\0",
    /*0f44*/ "VENC_GetBusyQueue\0\0\0",
    /*0f58*/ "VencGetBusyPicQueueByIndex\0\0",
    /*0f74*/ "VENC_CropPic\0\0\0\0",
    /*0f84*/ "VENC_AddOnePic\0\0",
    /*0f94*/ "VENC_NO2VGS_SendPic\0",
    /*0fa8*/ "VencCheckVideoAddr\0\0",
    /*0fbc*/ "VencSendPic\0",
    /*0fc8*/ "HevcCheckPixelFormat\0\0\0\0",
    /*0fe0*/ "AvcCheckPixelFormat\0",
    /*0ff4*/ "JpegCheckPixelFormat\0\0\0\0",
    /*100c*/ "ProresCheckPixelFormat\0\0",
    /*1024*/ "VencCheckPixelFormat\0\0\0\0",
    /*103c*/ "VencCheckVideoBuff\0\0",
    /*1050*/ "VencCheckDynamicRange\0\0\0",
    /*1068*/ "VencCheckVideoInfo\0\0",
    /*107c*/ "VencCheckLowDelayInfo\0\0\0",
    /*1094*/ "VencCheckSendInfo\0\0\0",
    /*10a8*/ "Venc_ReceivePic\0",
    /*10b8*/ "VencCheckVpssSendInfo\0\0\0",
    /*10d0*/ "VENC_VpssSend\0\0\0",
    /*10e0*/ "VENC_UserSend\0\0\0",
    /*10f0*/ "VencCheckUserRcInfo\0",
    /*1104*/ "VENC_UserSendEx\0",
    /*1114*/ "VencIoctl\0\0\0",
    /*1120*/ "VENC_GetChnStreamBufState\0\0\0",
    /*113c*/ "VENC_InsertFrame\0\0\0\0",
    /*1150*/ "VENC_InqTaskCallBack\0\0\0\0",
    /*1168*/ "VencCheckOsd\0\0\0\0",
    /*1178*/ "VencStartDeBreathEffectFrame\0\0\0\0",
    /*1198*/ "VencChangeGopMode\0\0\0",
    /*11ac*/ "VENC_StartOneFrameH264\0\0",
    /*11c4*/ "VENC_IntHandlerH264\0",
    /*11d8*/ "VENC_StartOneFrameJpeg\0\0",
    /*11f0*/ "VENC_IntHandlerJpeg\0",
    /*1204*/ "VENC_ReadRegsCallBack\0\0\0",
    /*121c*/ "VENC_StopChnRecvPic\0",
    /*1230*/ "VENC_ModInit\0\0\0\0",
    /*1240*/ "VENC_DRV_CheckOsdFormat\0",
    /*1258*/ "VENC_DRV_OUTPUTQUERYPICFORMAT\0\0\0",
    /*1278*/ "VENC_DRV_OUTPUTPICFORMAT\0\0\0\0",
    /*1294*/ "VENC_DRV_GetRgnCapacity\0",
    /*12ac*/ "VENC_DRV_RegisterRgnCapacity\0\0\0\0",
    /*12cc*/ "VENC_DRV_CheckDynamicRange\0\0",
    /*12e8*/ "VENC_DRV_CheckColorGamut\0\0\0\0",
    /*1304*/ "VencDrvCheckResolution\0\0",
    /*131c*/ "VencMaxChnNum\0"
};

unsigned char rodata.str1.4[43682] = {
    /*0000*/ "[Func]:%s [Line]:%d [Info]:h265 chn, but rc mode is %d which is not for h265!\n\0\0",
    /*0050*/ "[Func]:%s [Line]:%d [Info]:h265 chn, but rc mode is %d which is not supported!\n\0",
    /*00a0*/ "[Func]:%s [Line]:%d [Info]:h264 chn, but rc mode is %d which is not for h264!\n\0\0",
    /*00f0*/ "[Func]:%s [Line]:%d [Info]:h264 chn, but rc mode is %d which is not supported!\n\0",
    /*0140*/ "[Func]:%s [Line]:%d [Info]:mjpeg  chn, but rc mode is %d which is not for mjpeg!\n\0\0\0",
    /*0194*/ "[Func]:%s [Line]:%d [Info]:NULL pointer detected !\n\0",
    /*01c8*/ "[Func]:%s [Line]:%d [Info]:Unsupport vechn :%d ,should be in [%d,%d) \n\0\0",
    /*0210*/ "[Func]:%s [Line]:%d [Info]:chnl:%d,enGopMode %d is illegal param. \n\0",
    /*0254*/ "[Func]:%s [Line]:%d [Info]:chnl:%d,enGopMode %d isn't supported. \n\0\0",
    /*0298*/ "[Func]:%s [Line]:%d [Info]:venc check create:venc %d chn not create!\n\0\0\0",
    /*02e0*/ "[Func]:%s [Line]:%d [Info]:roi %d bEnable(%d) error! Should be   HI_TRUE or HI_FALSE!\n\0\0",
    /*0338*/ "[Func]:%s [Line]:%d [Info]:roi %d bAbsQp(%d) error! Should be   HI_TRUE or HI_FALSE!\n\0\0\0",
    /*0390*/ "[Func]:%s [Line]:%d [Info]:Chnl %d u32Index is %d, should be [0, 7]!\n\0\0\0",
    /*03d8*/ "[Func]:%s [Line]:%d [Info]:roi %d QP(%d) error! Should be [%d,%d]!\n\0",
    /*041c*/ "[Func]:%s [Line]:%d [Info]:roi %d (width(%d),height(%d)) error! Should be multi of 16!\n\0",
    /*0474*/ "[Func]:%s [Line]:%d [Info]:roi %d (StartX(%d),StartY(%d)) error! Should be multi of 16!\n\0\0\0\0",
    /*04d0*/ "[Func]:%s [Line]:%d [Info]:roi %d (width(%d),height(%d)) (StartX(%d),StartY(%d)) error!Should be in (0,picwidth(%d)),(0,picheight(%d))!\n\0\0\0\0",
    /*055c*/ "[Func]:%s [Line]:%d [Info]:roi %d out of the pic!\n\0\0",
    /*0590*/ "[Func]:%s [Line]:%d [Info]:Check Venc: %d is empty,no Venc chn has been registered \n\0\0\0\0",
    /*05e8*/ "HI_NULL != pstRoiCfg\0\0\0\0",
    /*0600*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*0640*/ "HI_TRUE == pstVencChn->stVeGroupCfg.bVeStart\0\0\0\0",
    /*0670*/ "[Func]:%s [Line]:%d [Info]:start ok, but config fail, chn:%d, \n\0",
    /*06b0*/ "VeChn >= 0 && VeChn < VencMaxChnNum\0",
    /*06d4*/ "0\0\0\0",
    /*06d8*/ "[Func]:%s [Line]:%d [Info]:not surpport coding type\n\0\0\0\0",
    /*0710*/ "[Func]:%s [Line]:%d [Info]:s32VencId %d err\n\0\0\0\0",
    /*0740*/ "s32DiffTR >= 0\0\0",
    /*0750*/ "[Func]:%s [Line]:%d [Info]:Crop enable %d err, shoule be HI_TRUE or HI_FALSE. \n\0",
    /*07a0*/ "[Func]:%s [Line]:%d [Info]:enReceiveMode is %d err, not permit enable crop \n\0\0\0\0",
    /*07f0*/ "[Func]:%s [Line]:%d [Info]:Crop rect startx %d err, should > 0. \n\0\0\0",
    /*0834*/ "[Func]:%s [Line]:%d [Info]:Crop rect starty %d err, shoule > 0. \n\0\0\0",
    /*0878*/ "[Func]:%s [Line]:%d [Info]:Crop rect width %d err, shoule be bigger than %d. \n\0\0",
    /*08c8*/ "[Func]:%s [Line]:%d [Info]:Crop rect Height %d err, shoule be in %d. \n\0\0",
    /*0910*/ "[Func]:%s [Line]:%d [Info]:Crop rect startX %d err, shoule be multi of 16. \n\0\0\0\0",
    /*0960*/ "[Func]:%s [Line]:%d [Info]:Crop rect startY %d err, shoule be multi of 2. \n\0",
    /*09ac*/ "[Func]:%s [Line]:%d [Info]:entype %d ,width:%d and height:%d must be multi of 2. \n\0\0",
    /*0a00*/ "[Func]:%s [Line]:%d [Info]:entype %d ,width:%d and height:%d must be multi of 4. \n\0\0",
    /*0a54*/ "[Func]:%s [Line]:%d [Info]:crop not support entype %d \n\0",
    /*0a8c*/ "[Func]:%s [Line]:%d [Info]:Chn type is(%d) not surpported \n\0",
    /*0ac8*/ "[Func]:%s [Line]:%d [Info]:Venc:%d register chnl err\n\0\0\0",
    /*0b00*/ "[Func]:%s [Line]:%d [Info]:Venc:%d GetFrmAddInfo err\n\0\0\0",
    /*0b38*/ "HI_NULL != pstVencFrameExtInfo\0\0",
    /*0b58*/ "[Func]:%s [Line]:%d [Info]:Venc Get FrmAddInfo err!\n\0\0\0\0",
    /*0b90*/ "[Func]:%s [Line]:%d [Info]:Get OVERLAYEX_RGN err.\n\0\0",
    /*0bc4*/ "[Func]:%s [Line]:%d [Info]:Venc Put FrmAddInfo err!\n\0\0\0\0",
    /*0bfc*/ "HI_SUCCESS == s32Ret\0\0\0\0",
    /*0c14*/ "HI_NULL != pstVeChnCfg\0\0",
    /*0c2c*/ "HI_NULL != pstVeChnCfg->pstDestPicInfo\0\0",
    /*0c54*/ "[Func]:%s [Line]:%d [Info]:Get osd err.\n\0\0\0\0",
    /*0c80*/ "HI_NULL != pstVencChn\0\0\0",
    /*0c98*/ "s32Ret == HI_SUCCESS\0\0\0\0",
    /*0cb0*/ "[Func]:%s [Line]:%d [Info]:Venc Not GetFrmAddInfo\n\0\0",
    /*0ce4*/ "Venc: %d get one picture err,Venc queue is empty\n\0\0\0",
    /*0d18*/ "NULL != pstDsuTask\0\0",
    /*0d2c*/ "[Func]:%s [Line]:%d [Info]:Venc: %d sub vb failed!!.\n\0\0\0",
    /*0d64*/ "[Func]:%s [Line]:%d [Info]:Venc: %d Vgs finish this task error. \n\0\0\0",
    /*0da8*/ "[Func]:%s [Line]:%d [Info]:Venc: %d has reset or destroyed\n\0",
    /*0de4*/ "[Func]:%s [Line]:%d [Info]:Venc: %d has change reso from(w:%u h:%u) to (w:%u h:%u) \n\0\0\0\0",
    /*0e3c*/ "[Func]:%s [Line]:%d [Info]:Venc: %d chn: %d status %d err. \n\0\0\0\0",
    /*0e7c*/ "[Func]:%s [Line]:%d [Info]:Venc: %d add vb failed!!.\n\0\0\0",
    /*0eb4*/ "[Func]:%s [Line]:%d [Info]:Venc %d err\n\0",
    /*0edc*/ "[Func]:%s [Line]:%d [Info]:Venc: %d put node to FreeQueue failed!!.\n\0\0\0\0",
    /*0f24*/ "[Func]:%s [Line]:%d [Info]:Venc: %d put node to BusyQueue failed!!.\n\0\0\0\0",
    /*0f6c*/ "NULL != pstVgsJob\0\0\0",
    /*0f80*/ "[Func]:%s [Line]:%d [Info]:the vgs work of primary image is failed\n\0",
    /*0fc4*/ "[Func]:%s [Line]:%d [Info]:Venc: %d Vgs finish this task error:%u. \n\0\0\0\0",
    /*100c*/ "[Func]:%s [Line]:%d [Info]:Venc: %d has reset or destroyed \n\0\0\0\0",
    /*104c*/ "[Func]:%s [Line]:%d [Info]:Venc: %d Search node from BusyQueue failed!!.\n\0\0\0",
    /*1098*/ "[Func]:%s [Line]:%d [Info]:Venc: %d put node to ThumbNailPicFreeQueue failed!!.\n\0\0\0\0",
    /*10ec*/ "[Func]:%s [Line]:%d [Info]:Venc: %d put node to MPF0PicFreeQueue failed!!.\n\0",
    /*1138*/ "[Func]:%s [Line]:%d [Info]:Venc: %d put node to MPF1PicFreeQueue failed!!.\n\0",
    /*1184*/ "[Func]:%s [Line]:%d [Info]:Venc: %d put node to PicBusyQueue failed!!.\n\0",
    /*11cc*/ "[Func]:%s [Line]:%d [Info]:Venc: %d put node to ThumbNailPicBusyQueue failed!!.\n\0\0\0\0",
    /*1220*/ "[Func]:%s [Line]:%d [Info]:Venc: %d put node to MPF0PicBusyQueue failed!!.\n\0",
    /*126c*/ "[Func]:%s [Line]:%d [Info]:Venc: %d put node to MPF1PicBusyQueue failed!!.\n\0",
    /*12b8*/ "[Func]:%s [Line]:%d [Info]:PicBusyQueue is Empty\n\0\0\0",
    /*12ec*/ "[Func]:%s [Line]:%d [Info]:Sub vb failed\n\0\0\0",
    /*1318*/ "[Func]:%s [Line]:%d [Info]:Get node from PicBusyQueue failed\n\0\0\0",
    /*1358*/ "[Func]:%s [Line]:%d [Info]:Put node to PicFreeQueue failed\n\0",
    /*1394*/ "[Func]:%s [Line]:%d [Info]:VGS module isn't exist. \n\0\0\0\0",
    /*13cc*/ "[Func]:%s [Line]:%d [Info]:VGS begin job err. \n\0",
    /*13fc*/ "[Func]:%s [Line]:%d [Info]:VGS Get Free Task err. \n\0",
    /*1430*/ "[Func]:%s [Line]:%d [Info]:chnl:%d,Get stride fail!\n\0\0\0\0",
    /*1468*/ "[Func]:%s [Line]:%d [Info]:chnl:%d,Get mmz name fail!\n\0\0",
    /*14a0*/ "[Func]:%s [Line]:%d [Info]:get VB fail,for Venc %d Vgs scale\n\0\0\0",
    /*14e0*/ "[Func]:%s [Line]:%d [Info]: VeChn: %d,Vgs Add Online Task err.\n\0",
    /*1520*/ "[Func]:%s [Line]:%d [Info]:Add vb failed. \n\0",
    /*154c*/ "[Func]:%s [Line]:%d [Info]:Vgs Add OSD Task err. \n\0\0",
    /*1580*/ "[Func]:%s [Line]:%d [Info]:Sub vb failed. \n\0",
    /*15ac*/ "[Func]:%s [Line]:%d [Info]:Vgs end job err. \n\0\0\0",
    /*15dc*/ "[Func]:%s [Line]:%d [Info]:Dcf get VB fail,for Venc %d Vgs scale\n\0\0\0",
    /*1620*/ "[Func]:%s [Line]:%d [Info]:Vgs Add 2Scale Task err. \n\0\0\0",
    /*1658*/ "[Func]:%s [Line]:%d [Info]:MPF get VB fail,for Venc %d Vgs scale\n\0\0\0",
    /*169c*/ "[Func]:%s [Line]:%d [Info]:Vgs Add Online Task err. \n\0\0\0",
    /*16d4*/ "[Func]:%s [Line]:%d [Info]:Vgs Add mpf0 Task err. \n\0",
    /*1708*/ "[Func]:%s [Line]:%d [Info]:Vgs Add mpf1 Task err. \n\0",
    /*173c*/ "[Func]:%s [Line]:%d [Info]:not need send to VGS. \n\0\0",
    /*1770*/ "[Func]:%s [Line]:%d [Info]:Addr is NULL!. \n\0",
    /*179c*/ "[Func]:%s [Line]:%d [Info]:Vgs Add Dcf Task err. \n\0\0",
    /*17d0*/ "[Func]:%s [Line]:%d [Info]:Vgs Add mpf Task err. \n\0\0",
    /*1804*/ "[Func]:%s [Line]:%d [Info]:Current timeref(0x%x) is odd number\n\0",
    /*1844*/ "[Func]:%s [Line]:%d [Info]:Current timeref(0x%x) ,GrpTimeRef(0x%x),timeref has return!\n\0",
    /*189c*/ "[Func]:%s [Line]:%d [Info]:Current timeref(0x%x) is not larger than LastRcvTimeRef(0x%x)\n\0\0\0",
    /*18f8*/ "[Func]:%s [Line]:%d [Info]:venc jpege GetOtherModParam err!\n\0\0\0\0",
    /*1938*/ "[Func]:%s [Line]:%d [Info]:when venc jpege enable MPF,don't support OneStreamBuffer !\n\0\0",
    /*1990*/ "[Func]:%s [Line]:%d [Info]:except the primary image and DCF,the range of mpf image num is [0,2],but now is %d ,please check!!\n\0\0",
    /*1a10*/ "[Func]:%s [Line]:%d [Info]:MPF image width err,should be (160,%d]\0\0\0",
    /*1a54*/ "[Func]:%s [Line]:%d [Info]:MPF image height err,should be (120,%d]\0\0",
    /*1a98*/ "[Func]:%s [Line]:%d [Info]:MPF image resolution(w(%d)*h(%d)) err,should be not equal to the src pic(w(%d)*h(%d))\0\0\0\0",
    /*1b0c*/ "[Func]:%s [Line]:%d [Info]:width:%d and height:%d must be multi of 4. \n\0",
    /*1b54*/ "[Func]:%s [Line]:%d [Info]:width:%d and height:%d of MPF0 must be larger than  width:%d and height:%d of MPF1 \n\0",
    /*1bc4*/ "[Func]:%s [Line]:%d [Info]:width:%d and height:%d of MPF0 must be not equal to  width:%d and height:%d of MPF1 \n\0\0\0\0",
    /*1c38*/ "[Func]:%s [Line]:%d [Info]:Entype %d isn't supported. \n\0",
    /*1c70*/ "[Func]:%s [Line]:%d [Info]:mod %d unexist or not support\n\0\0\0",
    /*1cac*/ "[Func]:%s [Line]:%d [Info]: ByFrame(%d) attr is not valid,should be HI_TRUE or HI_FALSE\n\0\0\0\0",
    /*1d08*/ "[Func]:%s [Line]:%d [Info]: enReceiveMode(%d) attr is not valid,should be %d\n\0\0\0",
    /*1d58*/ "[Func]:%s [Line]:%d [Info]:This Chip do NOT SuPport Prores!!!\n\0\0",
    /*1d98*/ "\n----- Detail Debug Info ----------------------------------------------------------------------------------\n\0\0\0\0",
    /*1e08*/ "CtxSize\0",
    /*1e10*/ "ID\0\0",
    /*1e14*/ "%4s%10s%20s%24s\n\0\0\0\0",
    /*1e28*/ "MinTimeCostInSystem\0",
    /*1e3c*/ "TimeCostInSystem\0\0\0\0",
    /*1e50*/ "%4d%10d%20u%20u\n\0\0\0\0",
    /*1e64*/ "-----MODULE PARAM--------------------------------------------------------------\n\0\0\0\0",
    /*1eb8*/ "FrameBufRecycle\0",
    /*1ec8*/ "VencBufferCache\0",
    /*1ed8*/ " %18s%18s%18s\n\0\0",
    /*1ee8*/ "VencMaxChnNum\0\0\0",
    /*1ef8*/ " %18u%18u%18u\n\0\0",
    /*1f08*/ "\n\0\0\0",
    /*1f0c*/ "\n-----VENC CHN ATTR 1-----------------------------------------------------------\n\0\0\0",
    /*1f60*/ "Width\0\0\0",
    /*1f68*/ "%8s%8s%8s%6s%9s%12s%12s%12s%10s%10s%6s\n\0",
    /*1f90*/ "Prio\0\0\0\0",
    /*1f98*/ "GopMode\0",
    /*1fa0*/ "CurPacks\0\0\0\0",
    /*1fac*/ "LeftFrm\0",
    /*1fb4*/ "LeftBytes\0\0\0",
    /*1fc0*/ "Sequence\0\0\0\0",
    /*1fcc*/ "ByFrame\0",
    /*1fd4*/ "Type\0\0\0\0",
    /*1fdc*/ "Height\0\0",
    /*1fe4*/ "-----VENC CHN ATTR 2-----------------------------------------------------------\n\0\0\0\0",
    /*2038*/ "VeStr\0\0\0",
    /*2040*/ "%8s%8s%8s%8s%12s%8s%8s%18s\n\0",
    /*205c*/ "WakeUpFrmCnt\0\0\0\0",
    /*206c*/ "PicAddr\0",
    /*2074*/ "PixFmt\0\0",
    /*207c*/ "Timeref\0",
    /*2084*/ "TarFr\0\0\0",
    /*208c*/ "SrcFr\0\0\0",
    /*2094*/ "%8d%8u%8u%6d%9s%12u%12u%12u%10u%10s%6d\n\0",
    /*20bc*/ "-----VENC JPEGE ATTR -----------------------------------------------------------\n\0\0\0",
    /*2110*/ "MpfCnt\0\0",
    /*2118*/ "%8s%10s%15s%15s%15s%15s\n\0\0\0\0",
    /*2134*/ "Mpf1Height\0\0",
    /*2140*/ "Mpf1Width\0\0\0",
    /*214c*/ "Mpf0Height\0\0",
    /*2158*/ "Mpf0Width\0\0\0",
    /*2164*/ "%8d%8s%8d%8d%12u%8s  0x%8llx%12u\n\0\0\0",
    /*2188*/ "%8d%10d%15d%15d%15d%15d\n\0\0\0\0",
    /*21a4*/ "-----VENC CHN RECEIVE STAT-----------------------------------------------------\n\0\0\0\0",
    /*21f8*/ "Start\0\0\0",
    /*2200*/ "%8s%12s%12s%12s%12s%18s\n\0\0\0\0",
    /*221c*/ "JpegEncodeMode\0\0",
    /*222c*/ "EncLeft\0",
    /*2234*/ "RecvLeft\0\0\0\0",
    /*2240*/ "StartEx\0",
    /*2248*/ "-----VENC VPSS QUERY-----------------------------------------------------------\n\0\0\0\0",
    /*229c*/ "Query\0\0\0",
    /*22a4*/ "%8s%12s%12s%12s%12s%12s%12s%12s%12s%12s\n\0\0\0\0",
    /*22d0*/ "Stop\0\0\0\0",
    /*22d8*/ "InfoErr\0",
    /*22e0*/ "QueryFail\0\0\0",
    /*22ec*/ "VbFail\0\0",
    /*22f4*/ "Full\0\0\0\0",
    /*22fc*/ "Invld\0\0\0",
    /*2304*/ "QueryFR\0",
    /*230c*/ "QueryOk\0",
    /*2314*/ "%8d%12d%12d%12u%12u%18s\n\0\0\0\0",
    /*2330*/ "-----VENC SEND1----------------------------------------------------------------\n\0\0\0\0",
    /*2384*/ "VpssSnd\0",
    /*238c*/ "%8s%12s%12s%12s%12s%12s%12s%12s%12s%12s%12s\n\0\0\0\0",
    /*23bc*/ "SizeErr\0",
    /*23c4*/ "DrectSnd\0\0\0\0",
    /*23d0*/ "CropErr\0",
    /*23d8*/ "Send\0\0\0\0",
    /*23e0*/ "OInfErr\0",
    /*23e8*/ "OthrSnd\0",
    /*23f0*/ "VInfErr\0",
    /*23f8*/ "%8d%12u%12u%12u%12u%12u%12u%12u%12u%12u\n\0\0\0\0",
    /*2424*/ "-----VENC SEND2----------------------------------------------------------------\n\0\0\0\0",
    /*2478*/ "SendVgs\0",
    /*2480*/ "DestSub\0",
    /*2488*/ "DestAdd\0",
    /*2490*/ "SrcSub\0\0",
    /*2498*/ "SrcAdd\0\0",
    /*24a0*/ "IntFail\0",
    /*24a8*/ "IntOk\0\0\0",
    /*24b0*/ "StartFail\0\0\0",
    /*24bc*/ "StartOk\0",
    /*24c4*/ "%8d%12u%12u%12u%12u%12u%12u%12u%12u%12u%12u\n\0\0\0\0",
    /*24f4*/ "-----VENC PIC QUEUE STATE------------------------------------------------------\n\0\0\0\0",
    /*2548*/ "Free\0\0\0\0",
    /*2550*/ "%8s%8s%8s%8s%8s\n\0\0\0\0",
    /*2564*/ "BFrame\0\0",
    /*256c*/ "Vgs\0",
    /*2570*/ "Busy\0\0\0\0",
    /*2578*/ "%8d%8d%8d%8d%8d\n\0\0\0\0",
    /*258c*/ "-----VENC CHNL INFO------------------------------------------------------------\n\0\0\0\0",
    /*25e0*/ "Inq\0",
    /*25e4*/ "Skip\0\0\0\0",
    /*25ec*/ "OverLoad\0\0\0\0",
    /*25f8*/ "ChaResLost\0\0",
    /*2604*/ "VencInt\0",
    /*260c*/ "Config\0\0",
    /*2614*/ "InqOk\0\0\0",
    /*261c*/ "%8d%12u%12u%12u%12u%12u%12u%12d%12d%12u\n\0\0\0\0",
    /*2648*/ "-----VENC CROP INFO------------------------------------------------------------\n\0\0\0\0",
    /*269c*/ "CropEn\0\0",
    /*26a4*/ "%8s%8s%8s%8s%8s%8s\n\0",
    /*26b8*/ "StartY\0\0",
    /*26c0*/ "StartX\0\0",
    /*26c8*/ "%8d%8s%8d%8d%8u%8u\n\0",
    /*26dc*/ "\n-----VENC STREAM STATE---------------------------------------------------------\n\0\0\0",
    /*2730*/ "FreeCnt\0",
    /*2738*/ "%8s%12s%12s%12s%12s%12s%12s%12s%12s\n\0\0\0\0",
    /*2760*/ "FrameRate\0\0\0",
    /*276c*/ "Interval\0\0\0\0",
    /*2778*/ "GetTimes\0\0\0\0",
    /*2784*/ "UserRls\0",
    /*278c*/ "UserGet\0",
    /*2794*/ "UserCnt\0",
    /*279c*/ "BusyCnt\0",
    /*27a4*/ "%8d%12u%12u%12u%12u%12u%12u%12u%12u\n\0\0\0\0",
    /*27cc*/ "\n[VENC] Version: [Hi3516CV500_MPP_V2.0.1.0 B090 Release], Build Time[Jan 14 2019, 20:23:44]\n\n\0\0\0",
    /*282c*/ "\n-----ROI INFO------------------------------------------------------------------\n\0\0\0",
    /*2880*/ "%7s%10s%10s%10s%10s%6s%10s%10s%10s%10s \n\0\0\0\0",
    /*28ac*/ "Qp\0\0",
    /*28b0*/ "bAbsQp\0\0",
    /*28b8*/ "bRoiEn\0\0",
    /*28c0*/ "Index\0\0\0",
    /*28c8*/ "I\0\0\0",
    /*28cc*/ "%7d%10s%10d%10s%10s%6d%10d%10d%10d%10d\n\0",
    /*28f4*/ "P/B\0",
    /*28f8*/ "VI\0\0",
    /*28fc*/ "[Func]:%s [Line]:%d [Info]:VencGetCurrentUniqueID error\n\0\0\0\0",
    /*2938*/ "[Func]:%s [Line]:%d [Info]:chnl(%d) enType(%d),SetUniqueID error\n\0\0\0",
    /*297c*/ "[Func]:%s [Line]:%d [Info]:Venc Set UniqueID error\n\0",
    /*29b0*/ "[Func]:%s [Line]:%d [Info]:rc create chn error\n\0",
    /*29e0*/ "[Func]:%s [Line]:%d [Info]:VencTransInputParm error\n\0\0\0\0",
    /*2a18*/ "[Func]:%s [Line]:%d [Info]:venc user h265 function create chn error\n\0\0\0\0",
    /*2a60*/ "[Func]:%s [Line]:%d [Info]:venc user h264 function create chn error\n\0\0\0\0",
    /*2aa8*/ "[Func]:%s [Line]:%d [Info]:venc user jpeg funtion create chn error\n\0",
    /*2aec*/ "[Func]:%s [Line]:%d [Info]:jpeg create chn error\n\0\0\0",
    /*2b20*/ "[Func]:%s [Line]:%d [Info]:venc user prores funtion create chn error\n\0\0\0",
    /*2b68*/ "[Func]:%s [Line]:%d [Info]:chn :%d,Not Support Type\n\0\0\0\0",
    /*2ba0*/ "[Func]:%s [Line]:%d [Info]:chn:%d had been created!\n\0\0\0\0",
    /*2bd8*/ "[Func]:%s [Line]:%d [Info]:chn:%d Creat chnl failed!!\n\0\0",
    /*2c10*/ "[Func]:%s [Line]:%d [Info]:enType(%d) is not support!!!!\n\0\0\0",
    /*2c4c*/ "[Func]:%s [Line]:%d [Info]:Venc %d register chnl err. \n\0",
    /*2c84*/ "[Func]:%s [Line]:%d [Info]:chn:%d init venc buf err!\n\0\0\0",
    /*2cbc*/ "[Func]:%s [Line]:%d [Info]:Venc %d initialize picture queue fail. \n\0",
    /*2d00*/ "[Func]:%s [Line]:%d [Info]:Venc %d initialize MPF0 picture queue fail. \n\0\0\0\0",
    /*2d4c*/ "[Func]:%s [Line]:%d [Info]:Venc %d initialize MPF1 picture queue fail. \n\0\0\0\0",
    /*2d98*/ "[Func]:%s [Line]:%d [Info]:venc(%d) enType is %d, not support set rcparam!\n\0",
    /*2de4*/ "[Func]:%s [Line]:%d [Info]:venc %d Check Rc parameter error!\n\0\0\0",
    /*2e24*/ "[Func]:%s [Line]:%d [Info]:venc(%d) enType is %d, not support get rcparam!\n\0",
    /*2e70*/ "[Func]:%s [Line]:%d [Info]:enType is %d, not support!\n\0\0",
    /*2ea8*/ "[Func]:%s [Line]:%d [Info]:This Chip do not Support PRORES!!!\n\0\0",
    /*2ee8*/ "The param:s32MilliSec %d should larger than %d\n\0",
    /*2f18*/ "[Func]:%s [Line]:%d [Info]:Get stream failed because time is %d!\n\0\0\0",
    /*2f5c*/ "[Func]:%s [Line]:%d [Info]:wait_event_interruptible_timeout err,line:%d \n\0\0\0",
    /*2fa8*/ "[Func]:%s [Line]:%d [Info]:Venc:%d timeout! \n\0\0\0",
    /*2fd8*/ "[Func]:%s [Line]:%d [Info]:chn:%d Get stream failed because down_interruptible\n\0",
    /*3028*/ "[Func]:%s [Line]:%d [Info]:chn:%d destroyed or reset in get process\n\0\0\0\0",
    /*3070*/ "[Func]:%s [Line]:%d [Info]:VeChn:%d, no frame need to get\n\0\0",
    /*30ac*/ "[Func]:%s [Line]:%d [Info]:input buf is not enough to hold a frame,in count:%d,pack count:%d\n\0\0\0",
    /*310c*/ "[Func]:%s [Line]:%d [Info]:alloc temp pack buf failed\n\0\0",
    /*3144*/ "pNode->u32Magic == MAGIC\0\0\0\0",
    /*3160*/ "[Func]:%s [Line]:%d [Info]:get stream failed because copy_to_user err!\n\0",
    /*31a8*/ "[Func]:%s [Line]:%d [Info]:wait_event_interruptible err,line:%d\n\0\0\0\0",
    /*31ec*/ "[Func]:%s [Line]:%d [Info]:This Chip do NOT support Prores!!!\n\0\0",
    /*322c*/ "[Func]:%s [Line]:%d [Info]:if put by frame,the buf count could not less than 1 \n\0\0\0\0",
    /*3280*/ "[Func]:%s [Line]:%d [Info]:if put by pack,the buf count must be equal to 1 \n\0\0\0\0",
    /*32d0*/ "[Func]:%s [Line]:%d [Info]:hadn't given any buf to user,or user had already released all buf\n\0\0\0",
    /*3330*/ "[Func]:%s [Line]:%d [Info]:chnl:%d,PackCount should be 1\n\0\0\0",
    /*336c*/ "[Func]:%s [Line]:%d [Info]:chnl:%d,no frame to put\n\0",
    /*33a0*/ "[Func]:%s [Line]:%d [Info]:copy from user failed!\n\0\0",
    /*33d4*/ "[Func]:%s [Line]:%d [Info]:had no buf given to user,or user had release all buf\n\0\0\0\0",
    /*3428*/ "[Func]:%s [Line]:%d [Info]:chnl:%d,no pack need to free\n\0\0\0\0",
    /*3464*/ "[Func]:%s [Line]:%d [Info]:the buf(0x%p,len : %d) put by user is not the buf given to user(0x%p,len : %d)\n\0\0",
    /*34d0*/ "[Func]:%s [Line]:%d [Info]:put one chn stream entype err!\n\0\0",
    /*350c*/ "malloc VEN_BUF node failed!\n\0\0\0\0",
    /*352c*/ "pstFrame != NULL\0\0\0\0",
    /*3540*/ "[Func]:%s [Line]:%d [Info]:chn:%d shortage of mem,can't alloc free frame\n\0\0\0",
    /*358c*/ "pstPack != NULL\0",
    /*359c*/ "[Func]:%s [Line]:%d [Info]:get one chn stream entype err!\n\0\0",
    /*35d8*/ "[Func]:%s [Line]:%d [Info]:chn:%d encoder empty\n\0\0\0\0",
    /*360c*/ "[Func]:%s [Line]:%d [Info]:find frame end\n\0\0",
    /*3638*/ "(VeChn >= 0) && (VeChn < VencMaxChnNum)\0",
    /*3660*/ "HI_TRUE == pstVencChn->bCreated\0",
    /*3680*/ "HI_NULL != pstFrame\0",
    /*3694*/ "[Func]:%s [Line]:%d [Info]:chn :%d input NULL PRT\n\0\0",
    /*36c8*/ "[Func]:%s [Line]:%d [Info]:Chnl is registered by chn: %d, can't reset chn :%d. \n\0\0\0\0",
    /*371c*/ "[Func]:%s [Line]:%d [Info]:Venc: %d has been start recive picture, not surpport reset\n\0\0",
    /*3774*/ "[Func]:%s [Line]:%d [Info]:ChnlStopSchedule failed with s32Ret (%d)!enChnlType : %d ,Venc : %d\n\0",
    /*37d4*/ "[Func]:%s [Line]:%d [Info]:Venc: %d enType is %d, not support\n\0\0",
    /*3814*/ "[Func]:%s [Line]:%d [Info]:Chnl(%d),sub vb failed\n\0\0",
    /*3848*/ "[Func]:%s [Line]:%d [Info]:Chnl(%d),resume schedule err \n\0\0\0",
    /*3884*/ "pValue\0\0",
    /*388c*/ "[Func]:%s [Line]:%d [Info]:the packet of curfrm is not all released!\n\0\0\0",
    /*38d4*/ "pstFrame\0\0\0\0",
    /*38e0*/ "g_pstVencChn[VeChn].bCreated == HI_TRUE\0",
    /*3908*/ "[Func]:%s [Line]:%d [Info]:wakeup get stream process u32BusyFrmCnt:%u err\n\0\0",
    /*3954*/ "[Func]:%s [Line]:%d [Info]:wakeup get stream process\n\0\0\0",
    /*398c*/ "[Func]:%s [Line]:%d [Info]:venc %d check bInstant:it must be HI_FALSE or HI_TRUE!\n\0\0",
    /*39e0*/ "[Func]:%s [Line]:%d [Info]:request I coding entype not surpport,chn %d isn't h264 or h265\n\0\0",
    /*3a3c*/ "[Func]:%s [Line]:%d [Info]:Type:%d doesn't support userdata \n\0\0\0",
    /*3a7c*/ "[Func]:%s [Line]:%d [Info]:Chnl is empty! Can't unregister chn :%d! \n\0\0\0",
    /*3ac4*/ "[Func]:%s [Line]:%d [Info]:Chnl is registered by chn: %d, can't unregister chn :%d. \n\0\0\0",
    /*3b1c*/ "[Func]:%s [Line]:%d [Info]:ChnlStopSchedule failed with s32Ret (0x%x)!enChnlType : %d ,Venc : %d\n\0\0\0",
    /*3b80*/ "[Func]:%s [Line]:%d [Info]:ResetChn failed with s32Ret (%d)!enChnlType : %d ,Venc : %d\n\0",
    /*3bd8*/ "[Func]:%s [Line]:%d [Info]:ResumeSchedule failed with s32Ret (%d)!enChnlType : %d ,Venc : %d\n\0\0\0",
    /*3c38*/ "[Func]:%s [Line]:%d [Info]:venc %d chn not create!\n\0",
    /*3c6c*/ "[Func]:%s [Line]:%d [Info]:Venc: %d has been start recive picture, not surpport DestroyChn\n\0",
    /*3cc8*/ "[Func]:%s [Line]:%d [Info]:Because UnRegister venc %d from chnl, can't destroy Venc!\n\0\0\0",
    /*3d20*/ "[Func]:%s [Line]:%d [Info]:venc %d sub vb failed!\n\0\0",
    /*3d54*/ "[Func]:%s [Line]:%d [Info]:Check Venc %d is snapping... \n\0\0\0",
    /*3d90*/ "[Func]:%s [Line]:%d [Info]:Venc %d start recv pic ok \n\0\0",
    /*3dc8*/ "[Func]:%s [Line]:%d [Info]:Check Venc %d is receiving pic. \n\0\0\0\0",
    /*3e08*/ "[Func]:%s [Line]:%d [Info]:Check Venc %d RecvFrameNum %d is illegal. \n\0\0",
    /*3e50*/ "[Func]:%s [Line]:%d [Info]:venc poll: venc chn %d is out of [0,%d)\n\0",
    /*3e94*/ "[Func]:%s [Line]:%d [Info]:venc poll: venc fd is 0x%x\n\0\0",
    /*3ecc*/ "[Func]:%s [Line]:%d [Info]:venc poll venc chn %d not create\n\0\0\0\0",
    /*3f0c*/ "[Func]:%s [Line]:%d [Info]:had not implemented yet\n\0",
    /*3f40*/ "[Func]:%s [Line]:%d [Info]:Not support DeBreathEffect\n\0\0",
    /*3f78*/ "[Func]:%s [Line]:%d [Info]:venc(%d) enType is %d, not support get DeBreathEffect!\n\0\0",
    /*3fcc*/ "[Func]:%s [Line]:%d [Info]:Chnl %d type is %d, not support ROI cfg!\n\0\0\0\0",
    /*4014*/ "[Func]:%s [Line]:%d [Info]:type:%d not surpport set slice split \n\0\0\0",
    /*4058*/ "[Func]:%s [Line]:%d [Info]:type:%d not surpport get slice split \n\0\0\0",
    /*409c*/ "[Func]:%s [Line]:%d [Info]:type:%d not surpport set inter prediction \n\0\0",
    /*40e4*/ "[Func]:%s [Line]:%d [Info]:type:%d not surpport get inter prediction \n\0\0",
    /*412c*/ "[Func]:%s [Line]:%d [Info]:type:%d (not h264)not surpport set intra prediction \n\0\0\0\0",
    /*4180*/ "[Func]:%s [Line]:%d [Info]:type:%d (not h264) not surpport get intra prediction \n\0\0\0",
    /*41d4*/ "[Func]:%s [Line]:%d [Info]:type:%d (not h264) not surpport set trans mode \n\0",
    /*4220*/ "[Func]:%s [Line]:%d [Info]:type:%d (not h264) not surpport get trans mode \n\0",
    /*426c*/ "[Func]:%s [Line]:%d [Info]:type:%d (not h264) not surpport set entropy encode mode \n\0\0\0\0",
    /*42c4*/ "[Func]:%s [Line]:%d [Info]:type:%d (not h264) not surpport get entropy encode mode \n\0\0\0\0",
    /*431c*/ "[Func]:%s [Line]:%d [Info]:type:%d (not h264) not surpport set poc \n\0\0\0\0",
    /*4364*/ "[Func]:%s [Line]:%d [Info]:type:%d (not h264)not surpport get poc \n\0",
    /*43a8*/ "[Func]:%s [Line]:%d [Info]:type:%d (not h264)not surpport set deblocking \n\0\0",
    /*43f4*/ "[Func]:%s [Line]:%d [Info]:type:%d (not h264)not surpport get deblocking \n\0\0",
    /*4440*/ "[Func]:%s [Line]:%d [Info]:type:%d (not h264)not surpport set vui \n\0",
    /*4484*/ "[Func]:%s [Line]:%d [Info]:type:%d (not h264)not surpport get vui \n\0",
    /*44c8*/ "[Func]:%s [Line]:%d [Info]:Chnl:%d, Not Support SetRefParam ! \n\0",
    /*4508*/ "only H.264/H.265 support set ref param,chn %d is not h264\n\0\0",
    /*4544*/ "chnl(%d) check ref param err\n\0\0\0",
    /*4564*/ "only H.264/H.265 support get ref mode,chn %d is not h264\n\0\0\0",
    /*45a0*/ "[Func]:%s [Line]:%d [Info]:venc check create:venc %d gop mode is smartp, don't support EnableIDR is false!!\n\0\0\0\0",
    /*4610*/ "[Func]:%s [Line]:%d [Info]:only H.264/h.265 support enable idr,chn %d is not h.264/h.265\n\0\0\0",
    /*466c*/ "only H.264 support set idr_pic_id,chn %d is not h264\n\0\0\0",
    /*46a4*/ "only H.264 support get idr_pic_id,chn %d is not h264\n\0\0\0",
    /*46dc*/ "[Func]:%s [Line]:%d [Info]:venc %d chn do not support RoibgConfig!\n\0",
    /*4720*/ "[Func]:%s [Line]:%d [Info]:venc %d only h.264 and h.265 support RoibgConfig!\n\0\0\0",
    /*4770*/ "[Func]:%s [Line]:%d [Info]:venc %d: Only NORMALP Mode support RoiBgFrameRate\n\0\0\0",
    /*47c0*/ "[Func]:%s [Line]:%d [Info]:Venc %d: don't set frmrate!\n\0",
    /*47f8*/ "[Func]:%s [Line]:%d [Info]:Venc %d: s32DstFrmRate(%d) should less than s32SrcFrmRate(%d) and bigger than (-1), or both s32DstFrmRate and s32SrcFrmRate are equal to (-1)\n\0\0\0",
    /*48a4*/ "[Func]:%s [Line]:%d [Info]:venc %d chn:    before set roibgframerate,you must close IntraRefresh\n\0\0\0",
    /*4908*/ "[Func]:%s [Line]:%d [Info]:venc %d chn: before set roibgframerate,you must be enble roi\n\0\0\0\0",
    /*4964*/ "[Func]:%s [Line]:%d [Info]:h265 RoiBgFrameRate error\n\0\0\0",
    /*499c*/ "[Func]:%s [Line]:%d [Info]:h264 RoiBgFrameRate error\n\0\0\0",
    /*49d4*/ "[Func]:%s [Line]:%d [Info]:error payload type.\n\0",
    /*4a04*/ "[Func]:%s [Line]:%d [Info]:venc %d GopMode(%d) do not support RoibgConfig!\n\0",
    /*4a50*/ "[Func]:%s [Line]:%d [Info]:type:%d (not jpeg)not surpport set jpeg param \n\0\0",
    /*4a9c*/ "[Func]:%s [Line]:%d [Info]:type:%d (not jpeg)not surpport get jpeg param \n\0\0",
    /*4ae8*/ "[Func]:%s [Line]:%d [Info]:type:%d (not mjpeg)not surpport set mjpeg param \n\0\0\0\0",
    /*4b38*/ "[Func]:%s [Line]:%d [Info]:type:%d (not mjpeg)not surpport get mjpeg param \n\0\0\0\0",
    /*4b88*/ "[Func]:%s [Line]:%d [Info]:Type%d don't support jpeg snap mode. \n\0\0\0",
    /*4bcc*/ "[Func]:%s [Line]:%d [Info]:Jpeg snap mode %d should be [%d, %d]\n\0\0\0\0",
    /*4c10*/ "[Func]:%s [Line]:%d [Info]:Jpeg snap mode %d isn't been supported. \n\0\0\0\0",
    /*4c58*/ "[Func]:%s [Line]:%d [Info]:not surpport! type:%d error! \n\0\0\0",
    /*4c94*/ "[Func]:%s [Line]:%d [Info]:venc %d chn: Only H.264/H.265/MJPEG support LostStrategy\n\0\0\0\0",
    /*4cec*/ "[Func]:%s [Line]:%d [Info]:venc %d chn: type:%d is not support pskip!!\n\0",
    /*4d34*/ "[Func]:%s [Line]:%d [Info]:venc %d chn: Gopmode[%d] not support set LostStragy enFrmLostMode:%d !\n\0\0",
    /*4d98*/ "[Func]:%s [Line]:%d [Info]:venc %d chn: venc rc mode %d err, should be in [%d %d]\0\0\0",
    /*4dec*/ "[Func]:%s [Line]:%d [Info]:venc %d chn: rc mode is %d,which is FIXQP or QPMAP, not support !!\n\0\0",
    /*4e4c*/ "[Func]:%s [Line]:%d [Info]:venc %d chn: when IntraRefresh is open enLostFrmMode(%d) can not be configed PSKIP\n\0\0",
    /*4ebc*/ "[Func]:%s [Line]:%d [Info]:venc %d chn: rc Check FrmLostParam Error!!\n\0\0",
    /*4f04*/ "[Func]:%s [Line]:%d [Info]:venc %d chn: set FrmLostParam Parameter Error!\n\0\0",
    /*4f50*/ "[Func]:%s [Line]:%d [Info]:venc %d chn: type:%d don't support get!!\n\0\0\0\0",
    /*4f98*/ "[Func]:%s [Line]:%d [Info]:venc rc mode %d err, should be in [%d %d]\0\0\0\0",
    /*4fe0*/ "[Func]:%s [Line]:%d [Info]:chn %d :rc mode is %d,not support GetFrmLostStra!!\n\0\0",
    /*5030*/ "[Func]:%s [Line]:%d [Info]:venc chn %d, enType %d not support set RcSuperFrmCfg!\n\0\0\0",
    /*5084*/ "[Func]:%s [Line]:%d [Info]:venc chn %d, enType %d not support get RcSuperFrmCfg!\n\0\0\0",
    /*50d8*/ "[Func]:%s [Line]:%d [Info]:enRcMode(%d) is not support\n\0",
    /*5110*/ "[Func]:%s [Line]:%d [Info]:The DeBreathEffect bEnable(%d) is illegal, please check!\n\0\0\0\0",
    /*5168*/ "[Func]:%s [Line]:%d [Info]:The DeBreathEffect s32Strength0(%d) is illegal, must be in [%d,%d]!\n\0",
    /*51c8*/ "[Func]:%s [Line]:%d [Info]:The DeBreathEffect s32Strength1(%d) is illegal, must be in [%d,%d]!\n\0",
    /*5228*/ "[Func]:%s [Line]:%d [Info]:The eBreathEffect only support H.264 or h.265  ,please check!\n\0\0\0",
    /*5284*/ "[Func]:%s [Line]:%d [Info]:The eBreathEffect should be false when the bRcnRefShareBuf is true!\n\0",
    /*52e4*/ "[Func]:%s [Line]:%d [Info]:The DeBreathEffect not Permit when IntraRefresh is true!\n\0\0\0\0",
    /*533c*/ "[Func]:%s [Line]:%d [Info]:Venc:%d get u32Gop failed\n\0\0\0",
    /*5374*/ "[Func]:%s [Line]:%d [Info]:VeChn: %d,The DeBreathEffect not Permit when gop is 1!\n\0\0",
    /*53c8*/ "[Func]:%s [Line]:%d [Info]:only H.264/h.265 support DeBreathEffect,chn %d is not h.264/h.265\n\0\0\0",
    /*5428*/ "[Func]:%s [Line]:%d [Info]:chn attr is not valid\n\0\0\0",
    /*545c*/ "[Func]:%s [Line]:%d [Info]:chn gop attr is not valid\n\0\0\0",
    /*5494*/ "[Func]:%s [Line]:%d [Info]:chn Rc Mode is not valid\n\0\0\0\0",
    /*54cc*/ "[Func]:%s [Line]:%d [Info]:chn %d :coding entype(%d) can't be changed to %d!\n\0\0\0",
    /*551c*/ "[Func]:%s [Line]:%d [Info]:chn:%d :coding entype(%d) not allow to change static attr bByFrame\n\0\0",
    /*557c*/ "[Func]:%s [Line]:%d [Info]:venc %d, The Gop not allow to set 1 when DeBreathEffect is enable\n\0\0\0",
    /*55dc*/ "[Func]:%s [Line]:%d [Info]:rc attr is not valid\n\0\0\0\0",
    /*5610*/ "[Func]:%s [Line]:%d [Info]:enType is %d,not support\n\0\0\0\0",
    /*5648*/ "[Func]:%s [Line]:%d [Info]:check chn attr err s32Ret:0x%x!Venc:%d\n\0\0",
    /*568c*/ "[Func]:%s [Line]:%d [Info]:chn static attr is not valid\n\0\0\0\0",
    /*56c8*/ "[Func]:%s [Line]:%d [Info]:venc %d Get ClearStreamBufFlag failed!\n\0\0",
    /*570c*/ "[Func]:%s [Line]:%d [Info]:ResetChn failed with s32Ret (0x%x)!enChnlType : %d ,Venc : %d\n\0\0\0",
    /*5768*/ "[Func]:%s [Line]:%d [Info]:ResumeSchedule failed with s32Ret (0x%x)!enChnlType : %d ,Venc : %d\n\0",
    /*57c8*/ "[Func]:%s [Line]:%d [Info]:Chnl(%d) get gop failed\n\0",
    /*57fc*/ "[Func]:%s [Line]:%d [Info]:set chnl[%d] rc attr failed\n\0",
    /*5834*/ "[Func]:%s [Line]:%d [Info]:chnl[%d] set enType(%d) venc attr failed\n\0\0\0\0",
    /*587c*/ "[Func]:%s [Line]:%d [Info]:Venc %d change resolution so lost frame . \n\0\0",
    /*58c4*/ "[Func]:%s [Line]:%d [Info]:Rc Request Idr frame failed\n\0",
    /*58fc*/ "[Func]:%s [Line]:%d [Info]:change StreamBuf failed\n\0",
    /*5930*/ "[Func]:%s [Line]:%d [Info]:Alloc Rc Stat Fifo Buf failed\n\0\0\0",
    /*596c*/ "[Func]:%s [Line]:%d [Info]:change gop mode failed\n\0\0",
    /*59a0*/ "[Func]:%s [Line]:%d [Info]:When Change GopMode, Init chnl[%d] Attr failed\n\0\0",
    /*59ec*/ "[Func]:%s [Line]:%d [Info]:Venc %d set rc venc attr err. \n\0\0",
    /*5a28*/ "[Func]:%s [Line]:%d [Info]:venc %d Init  the Attr of  GopMode  failed!\n\0",
    /*5a70*/ "[Func]:%s [Line]:%d [Info]:set attr is chn: %d, but  chn is :%d. \n\0\0",
    /*5ab4*/ "[Func]:%s [Line]:%d [Info]:when chn change resolution,you must be stop recv or snap\n\0\0\0\0",
    /*5b0c*/ "[Func]:%s [Line]:%d [Info]:Kmalloc err. \n\0\0\0",
    /*5b38*/ "[Func]:%s [Line]:%d [Info]:venc check Parm Failed\n\0\0",
    /*5b6c*/ "[Func]:%s [Line]:%d [Info]:venc Stop Schedule failed because change the resolution\n\0",
    /*5bc0*/ "[Func]:%s [Line]:%d [Info]:venc %d enType is %d, only h.264 and h.265 support AttachVbPool!\n\0\0\0\0",
    /*5c20*/ "[Func]:%s [Line]:%d [Info]:venc %d enType is %d, only h.264 and h.265 support DetachVbPool!\n\0\0\0\0",
    /*5c80*/ "[Func]:%s [Line]:%d [Info]:venc %d chn:    Only H.264 and H.265 Mode support IntraRefresh\n\0\0",
    /*5cdc*/ "[Func]:%s [Line]:%d [Info]:venc %d chn:    Only NORMALP Mode support IntraRefresh\n\0\0",
    /*5d30*/ "[Func]:%s [Line]:%d [Info]:venc %d chn:    before set IntraRefresh,you must close DeBreathEffect\n\0\0\0",
    /*5d94*/ "[Func]:%s [Line]:%d [Info]:venc %d FrmLostMode is PSKIP,IntraRefresh can not be configed\n\0\0\0",
    /*5df0*/ "[Func]:%s [Line]:%d [Info]:chn %d bRefreshEnable %d should be HI_TRUE or HI_FALSE!\n\0",
    /*5e44*/ "[Func]:%s [Line]:%d [Info]:chn %d u32ReqIQp %d should between[0 , 51]!\n\0",
    /*5e8c*/ "[Func]:%s [Line]:%d [Info]:chn %d enIntraRefreshMode[%d] should between[%d , %d]!\n\0\0",
    /*5ee0*/ "[Func]:%s [Line]:%d [Info]:The chn%d not support  set INTRA_REFRESH_COLUMN!\n\0\0\0\0",
    /*5f30*/ "[Func]:%s [Line]:%d [Info]:chn %d RoiBgFrmRate should not be setted\n\0\0\0\0",
    /*5f78*/ "[Func]:%s [Line]:%d [Info]:chn %d skipping reference parameters bEnablePred is FALSE, IntraRefresh not support\n\0",
    /*5fe8*/ "[Func]:%s [Line]:%d [Info]:chn(%d) u32RefreshNum(%d) is small, can't finish refresh in one Gop!\n\0\0\0\0",
    /*604c*/ "[Func]:%s [Line]:%d [Info]:venc h264e %d IntraRefresh err!\n\0",
    /*6088*/ "[Func]:%s [Line]:%d [Info]:venc h265e %d IntraRefresh err!\n\0",
    /*60c4*/ "[Func]:%s [Line]:%d [Info]:venc chn %d, enType %d not support set IntraRefresh!\n\0\0\0\0",
    /*6118*/ "[Func]:%s [Line]:%d [Info]:venc %d chn:Only NORMALP Mode support IntraRefresh\n\0\0",
    /*6168*/ "[Func]:%s [Line]:%d [Info]:venc check enType:venc %d chn enType is %d,not support!\n\0",
    /*61bc*/ "[Func]:%s [Line]:%d [Info]:you don't insert VENC ko,please check!!\n\0",
    /*6200*/ "[Func]:%s [Line]:%d [Info]:you don't insert H264 ko,please check chip is or not support!\n\0\0\0",
    /*625c*/ "[Func]:%s [Line]:%d [Info]:venc h264e GetOtherModParam err!\n\0\0\0\0",
    /*629c*/ "[Func]:%s [Line]:%d [Info]:you don't insert H265 ko,please check chip is or not support!\n\0\0\0",
    /*62f8*/ "[Func]:%s [Line]:%d [Info]:venc h265e GetOtherModParam err!\n\0\0\0\0",
    /*6338*/ "[Func]:%s [Line]:%d [Info]:you donot insert JPEGE ko,please check chip is or not support!\n\0\0",
    /*6394*/ "[Func]:%s [Line]:%d [Info]:you donot insert RC ko,please check chip is or not support!\n\0",
    /*63ec*/ "[Func]:%s [Line]:%d [Info]:venc rc GetOtherModParam err!\n\0\0\0",
    /*6428*/ "[Func]:%s [Line]:%d [Info]:enVencModType %d out of range [1,4]!\n\0\0\0\0",
    /*646c*/ "[Func]:%s [Line]:%d [Info]:you don't insert VENC ko,please check!\n\0\0",
    /*64b0*/ "[Func]:%s [Line]:%d [Info]:mod param u32VencBufferCache %d out of range [0,1]!\n\0",
    /*6500*/ "[Func]:%s [Line]:%d [Info]:mod param u32FrameBufRecycle %d out of range [0,1]!\n\0",
    /*6550*/ "[Func]:%s [Line]:%d [Info]:you donot insert H264 ko,please check chip is or not support!\n\0\0\0",
    /*65ac*/ "[Func]:%s [Line]:%d [Info]:you donot insert H265 ko,please check chip is or not support!\n\0\0\0",
    /*6608*/ "[Func]:%s [Line]:%d [Info]:chn is created, can't set mod param!\n\0\0\0\0",
    /*664c*/ "[Func]:%s [Line]:%d [Info]:venc %d chn enType is %d, not support SSE!\n\0\0",
    /*6694*/ "[Func]:%s [Line]:%d [Info]:Gopmode:%d don't support set SceneMode, except normalp !\n\0\0\0\0",
    /*66ec*/ "[Func]:%s [Line]:%d [Info]:chn(%d) SceneMode(%d) is illgal\n\0",
    /*6728*/ "[Func]:%s [Line]:%d [Info]:chn(%d) SceneMode(%d) don't support, please check!\n\0\0",
    /*6778*/ "[Func]:%s [Line]:%d [Info]:venc h265e %d SetScenceMode err!\n\0\0\0\0",
    /*67b8*/ "[Func]:%s [Line]:%d [Info]:venc Rc %d SetScenceMode err!\n\0\0\0",
    /*67f4*/ "[Func]:%s [Line]:%d [Info]:venc h264e %d SetScenceMode err!\n\0\0\0\0",
    /*6834*/ "[Func]:%s [Line]:%d [Info]:venc(%d) enType is %d, not suppport set scene mode\n\0\0",
    /*6884*/ "[Func]:%s [Line]:%d [Info]:venc h265e %d GetSceneMode err!\n\0",
    /*68c0*/ "[Func]:%s [Line]:%d [Info]:venc Rc %d GetSceneMode err!\n\0\0\0\0",
    /*68fc*/ "[Func]:%s [Line]:%d [Info]:venc h264e %d GetSceneMode err!\n\0",
    /*6938*/ "[Func]:%s [Line]:%d [Info]:venc(%d) enType is %d, not suppport get scene mode\n\0\0",
    /*6988*/ "[Func]:%s [Line]:%d [Info]:venc(%d) get scene mode err\n\0",
    /*69c0*/ "[Func]:%s [Line]:%d [Info]:venc chn %d, chnl priority %d error, should be in [%d, %d] \n\0",
    /*6a18*/ "[Func]:%s [Line]:%d [Info]:set chn Priority err \n\0\0\0",
    /*6a4c*/ "[Func]:%s [Line]:%d [Info]:Venc%d crop cfg info err. \n\0\0",
    /*6a84*/ "[Func]:%s [Line]:%d [Info]:Venc %d: s32SrcFrmRate(%d) wrong,should be [%d, %d]\n\0",
    /*6ad4*/ "[Func]:%s [Line]:%d [Info]:Venc %d: s32DstFrmRate(%d) wrong,should be [%d, %d]\n\0",
    /*6b24*/ "[Func]:%s [Line]:%d [Info]:Venc %d: Only H264/h265/Mjpeg, s32DstFrmRate(%d) should less than s32SrcFrmRate(%d) \n\0\0\0\0",
    /*6b98*/ "[Func]:%s [Line]:%d [Info]:Venc %d: sub vb failed! \n\0\0\0\0",
    /*6bd0*/ "[Func]:%s [Line]:%d [Info]:Venc %d: RcInsertFrm failed! \n\0\0\0",
    /*6c0c*/ "[Func]:%s [Line]:%d [Info]:chn:%u,u32PollWakeUpFrmCnt must be greater than 0\n\0\0\0",
    /*6c5c*/ "[Func]:%s [Line]:%d [Info]:check venc %d chn encode type is prores,not support Color2grey !\n\0\0\0\0",
    /*6cbc*/ "[Func]:%s [Line]:%d [Info]:check venc %d chn Color2grey param!\n\0",
    /*6cfc*/ "[Func]:%s [Line]:%d [Info]:not surpport set max stream\n\0",
    /*6d34*/ "[Func]:%s [Line]:%d [Info]:type:%d not surpport set foreground protection \n\0",
    /*6d80*/ "[Func]:%s [Line]:%d [Info]:venc %d chn get foreground protect err\n\0\0",
    /*6dc4*/ "[Func]:%s [Line]:%d [Info]:chn %d,check foreground protect: bForegroundCuRcEn(%d) should be HI_TRUE or HI_FALSE\n\0\0\0\0",
    /*6e38*/ "[Func]:%s [Line]:%d [Info]:chn %d,check foreground protect: u32ForegroundThreshP[%d](%d) should be [0,255]\n\0",
    /*6ea4*/ "[Func]:%s [Line]:%d [Info]:chn %d,check foreground protect: u32ForegroundThreshB[%d](%d) should be [0,255]\n\0",
    /*6f10*/ "[Func]:%s [Line]:%d [Info]:chn %d,check foreground protect: u32ForegroundThreshGain(%d) should be [0,15]\n\0\0\0",
    /*6f7c*/ "[Func]:%s [Line]:%d [Info]:chn %d,check foreground protect: u32ForegroundThreshOffset(%d) should be [0,255]\n\0\0\0\0",
    /*6fec*/ "[Func]:%s [Line]:%d [Info]:chn %d,check foreground protect: u32ForegroundDirectionThresh(%d) should be [0,16]\n\0\0",
    /*705c*/ "[Func]:%s [Line]:%d [Info]:venc %d chn set foreground protect err\n\0\0",
    /*70a0*/ "[Func]:%s [Line]:%d [Info]:chn %d,check cu prediction: enPredMode(%d) should be %d or %d\n\0\0\0",
    /*70fc*/ "[Func]:%s [Line]:%d [Info]:chn %d,check prediction: u32Intra32Cost (%d) should be [0 15]\n\0\0\0",
    /*7158*/ "[Func]:%s [Line]:%d [Info]:chn %d,check prediction: u32Intra16Cost (%d) should be [0 15]\n\0\0\0",
    /*71b4*/ "[Func]:%s [Line]:%d [Info]:chn %d,check prediction: u32Intra8Cost (%d) should be [0 15]\n\0\0\0\0",
    /*7210*/ "[Func]:%s [Line]:%d [Info]:chn %d,check prediction: u32Intra4Cost (%d) should be [0 15]\n\0\0\0\0",
    /*726c*/ "[Func]:%s [Line]:%d [Info]:chn %d,check prediction: u32Inter64Cost (%d) should be [0 15]\n\0\0\0",
    /*72c8*/ "[Func]:%s [Line]:%d [Info]:chn %d,check prediction: u32Inter32Cost (%d) should be [0 15]\n\0\0\0",
    /*7324*/ "[Func]:%s [Line]:%d [Info]:chn %d,check prediction: u32Inter16Cost (%d) should be [0 15]\n\0\0\0",
    /*7380*/ "[Func]:%s [Line]:%d [Info]:chn %d,check prediction: u32Inter8Cost (%d) should be [0 15]\n\0\0\0\0",
    /*73dc*/ "[Func]:%s [Line]:%d [Info]:type:%d not surpport set prediction\n\0",
    /*741c*/ "[Func]:%s [Line]:%d [Info]:type:%d not surpport get prediction\n\0",
    /*745c*/ "[Func]:%s [Line]:%d [Info]:chn %d,check SkipBias: bSkipBiasEn(%d) should be HI_TRUE or HI_FALSE\n\0\0\0\0",
    /*74c0*/ "[Func]:%s [Line]:%d [Info]:chn %d,check SkipBias: u32SkipThreshGain(%d) should be [0,15]\n\0\0\0",
    /*751c*/ "[Func]:%s [Line]:%d [Info]:chn %d,check SkipBias: u32SkipThreshOffset(%d) should be [0,255]\n\0\0\0\0",
    /*757c*/ "[Func]:%s [Line]:%d [Info]:chn %d,check SkipBias: u32SkipBackgroundCost(%d) should be [0,15]\n\0\0\0",
    /*75dc*/ "[Func]:%s [Line]:%d [Info]:chn %d,check SkipBias: u32SkipForegroundCost(%d) should be [0,15]\n\0\0\0",
    /*763c*/ "[Func]:%s [Line]:%d [Info]:type:%d not surpport set SkipBias\n\0\0\0",
    /*767c*/ "[Func]:%s [Line]:%d [Info]:type:%d not surpport get SkipBias\n\0\0\0",
    /*76bc*/ "[Func]:%s [Line]:%d [Info]:chn %d,bHierarchicalQpEn(%d) should be HI_TRUE or HI_FALSE\n\0\0",
    /*7714*/ "[Func]:%s [Line]:%d [Info]:chn %d,s32HierarchicalQpDelta[%d](%d) should be [-10, 10]\n\0\0\0",
    /*776c*/ "[Func]:%s [Line]:%d [Info]:chn %d,s32HierarchicalFrameNum[%d](%d) should be [0, 5]\n\0",
    /*77c0*/ "[Func]:%s [Line]:%d [Info]:VeChn:%d, type:%d not surpport set HierarchicalQp\n\0\0\0",
    /*7810*/ "[Func]:%s [Line]:%d [Info]:VeChn:%d,GopMode:%d not surpport set HierarchicalQp\n\0",
    /*7860*/ "[Func]:%s [Line]:%d [Info]:type:%d not surpport get HierarchicalQp\n\0",
    /*78a4*/ "[Func]:%s [Line]:%d [Info]:venc chn %d, enType %d not support set RcAdvParam!\n\0\0",
    /*78f4*/ "[Func]:%s [Line]:%d [Info]:venc chn %d, enType %d not support get RcAdvParam!\n\0\0",
    /*7944*/ "[Func]:%s [Line]:%d [Info]:venc check create:venc %d chn not create!\n\0\0\0",
    /*798c*/ "[Func]:%s [Line]:%d [Info]:ChnlStopSchedule failed with s32Ret (%d)!enChnlType : %d ,Venc : %d\n\0",
    /*79ec*/ "[Func]:%s [Line]:%d [Info]:The Venc : %d, enType: %d reset failed !\n\0\0\0\0",
    /*7a34*/ "[Func]:%s [Line]:%d [Info]:The Venc : %d, enType: %d Resume Schedule failed!\n\0\0\0",
    /*7a84*/ "pstVencChn->aVeChn == s32ChnId\0\0",
    /*7aa4*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*7ae4*/ "[Func]:%s [Line]:%d [Info]:VencMmap err, vm_pgoff 0x%lx size 0x%x out of memory!\n\0\0\0",
    /*7b38*/ "[Func]:%s [Line]:%d [Info]:Venc has already been initialized. \n\0",
    /*7b78*/ "[Func]:%s [Line]:%d [Info]:The sys has not been initialized. \n\0\0",
    /*7bb8*/ "[Func]:%s [Line]:%d [Info]:Venc regist to sys failed. \n\0",
    /*7bf0*/ "[Func]:%s [Line]:%d [Info]:Venc regist to vpss failed. \n\0\0\0\0",
    /*7c2c*/ "[Func]:%s [Line]:%d [Info]:Venc regist to rgn failed. \n\0",
    /*7c64*/ "[Func]:%s [Line]:%d [Info]:Venc init success. \n\0",
    /*7c94*/ "[Func]:%s [Line]:%d [Info]:Venc UnRegister to vpss failed. \n\0\0\0\0",
    /*7cd4*/ "[Func]:%s [Line]:%d [Info]:Venc UnRegister sys failed. \n\0\0\0\0",
    /*7d10*/ "[Func]:%s [Line]:%d [Info]:Crop err, rect(X,Y,right, bottom)=(%d %d %d, %d) out of vi img(%d, %d). \n\0\0\0\0",
    /*7d78*/ "[Func]:%s [Line]:%d [Info]:The venc UnRegister Receiver failed!! \n\0\0",
    /*7dbc*/ "pstFrame\0\0\0\0",
    /*7dc8*/ "pValue\0\0",
    /*7dd0*/ "[Func]:%s [Line]:%d [Info]:The venc UnRegister OVERLAY failed!! \n\0\0\0",
    /*7e14*/ "[Func]:%s [Line]:%d [Info]:The venc UnRegister OVERLAYEX failed!! \n\0",
    /*7e58*/ "[Func]:%s [Line]:%d [Info]:The venc Unregister from VPSS failed!! \n\0",
    /*7e9c*/ "s32Ret == HI_SUCCESS\0\0\0\0",
    /*7eb4*/ "[Func]:%s [Line]:%d [Info]:Discard Dcf Pic\n\0",
    /*7ee0*/ "[Func]:%s [Line]:%d [Info]:Discard Mpf0 Pic\n\0\0\0\0",
    /*7f10*/ "[Func]:%s [Line]:%d [Info]:Discard Mpf1 Pic\n\0\0\0\0",
    /*7f40*/ "[Func]:%s [Line]:%d [Info]:Discard Src Pic\n\0",
    /*7f6c*/ "HI_SUCCESS == s32Ret\0\0\0\0",
    /*7f84*/ "[Func]:%s [Line]:%d [Info]:Venc %d only do the whole lowdelay frame(Hy: %u,Hc: %u) ,but it is (Hy: %u,Hc:%u). \n\0",
    /*7ff4*/ "HI_NULL != pstQueryInfo\0",
    /*800c*/ "HI_NULL != pstVencChn\0\0\0",
    /*8024*/ "[Func]:%s [Line]:%d [Info]:Venc  %d : Vpss query info: src picture block: %d err. \n\0",
    /*8078*/ "[Func]:%s [Line]:%d [Info]:Venc  %d : Vpss query info: picture format: %d err. \n\0\0\0\0",
    /*80cc*/ "[Func]:%s [Line]:%d [Info]:venc  %d : GroupCheckTimeRef err. \n\0\0",
    /*810c*/ "[Func]:%s [Line]:%d [Info]:Venc  %d : Vpss query info: bmalloc %d err, shoule be HI_FALSE or HI_TRUE\0\0\0\0",
    /*8174*/ "[Func]:%s [Line]:%d [Info]:Venc  %d :  Vpss query info: bScaleCap %d err, shoule be HI_FALSE or HI_TRUE\0",
    /*81dc*/ "[Func]:%s [Line]:%d [Info]:Venc %d : Vpss query info: bTransCap %d err, shoule be HI_FALSE or HI_TRUE\0\0\0",
    /*8244*/ "[Func]:%s [Line]:%d [Info]:Venc %d : Vpss query info\0\0\0\0",
    /*827c*/ "[Func]:%s [Line]:%d [Info]:Venc %d :Vpss query info err. \n\0\0",
    /*82b8*/ "[Func]:%s [Line]:%d [Info]:Venc %d has stopped to receive pic. \n\0\0\0\0",
    /*82fc*/ "[Func]:%s [Line]:%d [Info]:Venc %d :Vpss query src pic(%d %d) small than Venc pic(%d %d). \n\0",
    /*8358*/ "[Func]:%s [Line]:%d [Info]:Venc %d lost this frame because of frame control \n\0\0\0",
    /*83a8*/ "[Func]:%s [Line]:%d [Info]:Venc %d picture queue is full. \n\0",
    /*83e4*/ "[Func]:%s [Line]:%d [Info]:chnl:%d,Get mmz name fail!\n\0\0",
    /*841c*/ "[Func]:%s [Line]:%d [Info]:get VB fail,for Venc %d Vpss scale\n\0\0",
    /*845c*/ "[Func]:%s [Line]:%d [Info]:Pic Queue,Free:%d,Mpf0:%d,Mpf1:%d,ThumbFree:%d. \n\0\0\0\0",
    /*84ac*/ "enIndex < VENC_QUEUET_BUTT\0\0",
    /*84c8*/ "0\0\0\0",
    /*84cc*/ "MULTI_OF_2_POWER(pstPic->stVFrame.u64PhyAddr[0], BUS_VHB_ALIGN_BYTE)\0\0\0\0",
    /*8514*/ "MULTI_OF_2_POWER(pstPic->stVFrame.u64PhyAddr[1], BUS_VHB_ALIGN_BYTE)\0\0\0\0",
    /*855c*/ "[Func]:%s [Line]:%d [Info]:Venc:%d vb add failed!\n\0\0",
    /*8590*/ "[Func]:%s [Line]:%d [Info]:Venc:%d vb sub failed!\n\0\0",
    /*85c4*/ "[Func]:%s [Line]:%d [Info]:Venc:%d get free node from queue failed!\n\0\0\0\0",
    /*860c*/ "[Func]:%s [Line]:%d [Info]:Venc:%d put free node to queue failed!\n\0\0",
    /*8650*/ "[Func]:%s [Line]:%d [Info]:Venc:%d put to busy queue failed!\n\0\0\0",
    /*8690*/ "[Func]:%s [Line]:%d [Info]:Venc:%d crop do not deal with low delay frame!\n\0\0",
    /*86dc*/ "[Func]:%s [Line]:%d [Info]:Venc:%d soft crop check CompressMode(%d) or VideoFormat(%d) err!\n\0\0\0\0",
    /*873c*/ "[Func]:%s [Line]:%d [Info]:Venc:%d soft scale do not deal with low delay frame!\n\0\0\0\0",
    /*8790*/ "[Func]:%s [Line]:%d [Info]:Venc %d :at least one of u64PhyAddr[0]:0x%llx u64PhyAddr[1]:0x%llx u32Stride[0]:%u u32Stride[1]:%u isn't a multiple of %d. \n\0",
    /*8828*/ "[Func]:%s [Line]:%d [Info]:Venc:%d picture queue is busy. \n\0",
    /*8864*/ "[Func]:%s [Line]:%d [Info]:VencCheckVideoCfg failed\n\0\0\0\0",
    /*889c*/ "[Func]:%s [Line]:%d [Info]:This frame not flashed is dropped while the jpeg mode is flash. \n\0\0\0\0",
    /*88fc*/ "[Func]:%s [Line]:%d [Info]:jpeg not support compress.\n\0\0",
    /*8934*/ "[Func]:%s [Line]:%d [Info]:VencGetFrmAddInfo failed\n\0\0\0\0",
    /*896c*/ "[Func]:%s [Line]:%d [Info]:Venc %d :  h264 and h265 only support OSD; but the rgn type is overlayEx    !!\n\0\0",
    /*89d8*/ "[Func]:%s [Line]:%d [Info]:Venc %d :  prores not support overlay and overlayEx    !!\n\0\0\0",
    /*8a30*/ "[Func]:%s [Line]:%d [Info]:Venc %d : When ReceiveMode is MULTI not support overlay and overlayEx!!\n\0",
    /*8a94*/ "[Func]:%s [Line]:%d [Info]:Venc:%d vgs do not deal with low delay frame!\n\0\0\0",
    /*8ae0*/ "[Func]:%s [Line]:%d [Info]:Venc:%d add vb failed!\n\0\0",
    /*8b14*/ "[Func]:%s [Line]:%d [Info]:Venc:%d send pic to vgs failed!,u64PTS=%llu\n\0",
    /*8b5c*/ "[Func]:%s [Line]:%d [Info]:Venc %d check video addr err. \n\0\0",
    /*8b98*/ "%s,%d,Get Head From PicFreeQueue Failed\n\0\0\0\0",
    /*8bc4*/ "%s,%d,Get Head From ThumbNailPicFreeQueue Failed\n\0\0\0",
    /*8bf8*/ "%s,%d,Get Head From MPF0PicFreeQueue Failed\n\0\0\0\0",
    /*8c28*/ "%s,%d,Get Head From MPF1PicFreeQueue Failed\n\0\0\0\0",
    /*8c58*/ "[Func]:%s [Line]:%d [Info]:Venc:%d put node to FreeQueue failed!\n\0\0\0",
    /*8c9c*/ "[Func]:%s [Line]:%d [Info]:H.265 don't support format %d. \n\0",
    /*8cd8*/ "[Func]:%s [Line]:%d [Info]:H.264 don't support format %d. \n\0",
    /*8d14*/ "[Func]:%s [Line]:%d [Info]:Jpeg/Mjpeg don't support format %d. \n\0\0\0\0",
    /*8d58*/ "[Func]:%s [Line]:%d [Info]:prores don't support format %d. \n\0\0\0\0",
    /*8d98*/ "[Func]:%s [Line]:%d [Info]:not support enType(%d).\n\0",
    /*8dcc*/ "[Func]:%s [Line]:%d [Info]:pic vb is invalid\n\0\0\0",
    /*8dfc*/ "[Func]:%s [Line]:%d [Info]:pic vb is invalid because of frame Header pPhyAddr\n\0\0",
    /*8e4c*/ "[Func]:%s [Line]:%d [Info]:pic's enCompressMode(%d) err\n\0\0\0\0",
    /*8e88*/ "[Func]:%s [Line]:%d [Info]:Venc %d :Pic BitWidth is Changed, before this action,you must reset the chn\n\0",
    /*8ef0*/ "[Func]:%s [Line]:%d [Info]:Venc %d,Video buffer of the VideoFrame is error!!\n\0\0\0",
    /*8f40*/ "[Func]:%s [Line]:%d [Info]:Venc %d,Video buffer of the VideoFrame is a free buffer!!\n\0\0\0",
    /*8f98*/ "[Func]:%s [Line]:%d [Info]:Venc %d :pic enCompressMode:%d is not support\n\0\0\0",
    /*8fe4*/ "[Func]:%s [Line]:%d [Info]:Venc %d :pic enVideoFormat:%d is not support\n\0\0\0\0",
    /*9030*/ "[Func]:%s [Line]:%d [Info]:Venc %d :video field is invalid \n\0\0\0\0",
    /*9070*/ "[Func]:%s [Line]:%d [Info]:Venc %d :Src pic is small,lost this frame,src(%d,%d),Venc(%d,%d). \n\0\0",
    /*90d0*/ "[Func]:%s [Line]:%d [Info]:Venc %d : Sendinfo pic info err. \n\0\0\0",
    /*9110*/ "[Func]:%s [Line]:%d [Info]:Venc %d : check resolution(%d,%d) err in RECEIVE_MULTI mode. \n\0\0\0",
    /*916c*/ "[Func]:%s [Line]:%d [Info]:Venc %d enReceiveMode is %d, LowDelay not support DCF or MPF\n\0\0\0\0",
    /*91c8*/ "[Func]:%s [Line]:%d [Info]:Venc%d Gopmode is B frame, not support LowDelay\n\0",
    /*9214*/ "[Func]:%s [Line]:%d [Info]:Venc%d enType: %d isn't support Low Delay,so lost this frame\n\0\0\0\0",
    /*9270*/ "[Func]:%s [Line]:%d [Info]:Venc %d : Sendinfo bTunl %d err. \n\0\0\0",
    /*92b0*/ "[Func]:%s [Line]:%d [Info]:Venc %d: Video info err. \n\0\0\0",
    /*92e8*/ "[Func]:%s [Line]:%d [Info]:[Venc%d]:Not support enDataType:%d!!\n\0\0\0\0",
    /*932c*/ "[Func]:%s [Line]:%d [Info]:Venc %d s32DevId(%d) only support [0,3]. \n\0\0\0",
    /*9374*/ "[Func]:%s [Line]:%d [Info]:Venc %d s32DevId(%d) only support 0. \n\0\0\0",
    /*93b8*/ "[Func]:%s [Line]:%d [Info]:Venc %d is QpMap Mode. should be not Qpmap map\n\0\0",
    /*9404*/ "[Func]:%s [Line]:%d [Info]:Venc %d bQpmapEn:%d err. bQpmapEn must be HI_FALSE\n\0\0",
    /*9454*/ "[Func]:%s [Line]:%d [Info]:Venc picture queue is busy. \n\0\0\0\0",
    /*9490*/ "[Func]:%s [Line]:%d [Info]:Venc %d receive the same frame.\n\0",
    /*94cc*/ "[Func]:%s [Line]:%d [Info]:Venc %d receive picture err. \n\0\0\0",
    /*9508*/ "[Func]:%s [Line]:%d [Info]:Venc %d : Sendinfo bSuc %d err. \n\0\0\0\0",
    /*9548*/ "[Func]:%s [Line]:%d [Info]:Venc %d :Sendinfo destpic is null. \n\0",
    /*9588*/ "[Func]:%s [Line]:%d [Info]:Venc %d vpss Send info err. \n\0\0\0\0",
    /*95c4*/ "The param:s32MilliSec %d should larger than %d\n\0",
    /*95f4*/ "[Func]:%s [Line]:%d [Info]:Venc %d, JpegSnapMode is %d not permit user send pic to encode jpeg\n\0",
    /*9654*/ "[Func]:%s [Line]:%d [Info]:Venc %d, usersend only support enReceiveMode(%d).\n\0\0\0",
    /*96a4*/ "[Func]:%s [Line]:%d [Info]:Venc %d had interruptible! \n\0",
    /*96dc*/ "[Func]:%s [Line]:%d [Info]:Venc:%d timeout!\n\0\0\0\0",
    /*970c*/ "[Func]:%s [Line]:%d [Info]:chn:%d destroyed in get process\n\0",
    /*9748*/ "[Func]:%s [Line]:%d [Info]:wait_event_interruptible err,line:%d\n\0\0\0\0",
    /*978c*/ "[Func]:%s [Line]:%d [Info]:venc %d chn not support QpMap!\n\0\0",
    /*97c8*/ "[Func]:%s [Line]:%d [Info]:venc %d enType:%d err,just 264/265 support Qpmap!\n\0\0\0",
    /*9818*/ "[Func]:%s [Line]:%d [Info]:venc %d enRcMode:%d err,fixqp doesn't support Qpmap!\n\0\0\0\0",
    /*986c*/ "[Func]:%s [Line]:%d [Info]:venc %d eFrameType:%d err,should between [%d, %d)!\n\0\0",
    /*98bc*/ "[Func]:%s [Line]:%d [Info]:venc %d GopMode is BIPREDB,eFrameType(%d) only support %d!\n\0\0",
    /*9914*/ "[Func]:%s [Line]:%d [Info]:venc %d send pic failed because get QpMapEn flag !\n\0\0",
    /*9964*/ "[Func]:%s [Line]:%d [Info]:venc %d enRcMode:%d bQpMapEn:%d err,bQpMapEn must be HI_TRUE!\n\0\0\0",
    /*99c0*/ "[Func]:%s [Line]:%d [Info]:venc %d u32BlkStartQp:%d should be in [0,51]!\n\0\0\0",
    /*9a0c*/ "[Func]:%s [Line]:%d [Info]:venc %d send pic failed because bQpMapValid(%d) must be HI_TRUE or HI_FALSE!\n\0\0\0\0",
    /*9a78*/ "[Func]:%s [Line]:%d [Info]:venc %d send pic failed because bSkipWeightValid(%d) must be HI_TRUE or HI_FALSE!\n\0\0\0",
    /*9ae8*/ "[Func]:%s [Line]:%d [Info]:venc %d send pic failed because u64QpMapPhyAddr(0x%llx) is not mmz!\n\0",
    /*9b48*/ "[Func]:%s [Line]:%d [Info]:venc %d send pic failed because u64SkipWeightPhyAddr(0x%llx) is not mmz!\n\0\0\0\0",
    /*9bb0*/ "Venc %d ,The param:s32MilliSec %d should larger than %d\n\0\0\0\0",
    /*9bec*/ "[Func]:%s [Line]:%d [Info]:Venc %d check user RcInfo err!!\n\0",
    /*9c28*/ "[Func]:%s [Line]:%d [Info]:Venc %d picture queue is busy. \n\0",
    /*9c64*/ "[Func]:%s [Line]:%d [Info]:chn:%d destroyed or reset in get process\n\0\0\0\0",
    /*9cac*/ "[Func]:%s [Line]:%d [Info]:Error IO ctrl cmd:0x%x.\n\0",
    /*9ce0*/ "[Func]:%s [Line]:%d [Info]:Venc %d  type %d in invaid . \n\0\0\0",
    /*9d1c*/ "[Func]:%s [Line]:%d [Info]:Venc %d,FrmInsertCnt:%d,  Insert Frame\n\0\0",
    /*9d60*/ "[Func]:%s [Line]:%d [Info]:u32StartTileCnt:%d, u32TileNum:%d\n\0\0\0",
    /*9da0*/ "[Func]:%s [Line]:%d [Info]:Venc %d put osd. \n\0\0\0",
    /*9dd0*/ "[Func]:%s [Line]:%d [Info]:Venc %d stream buffer is full. \n\0",
    /*9e0c*/ "[Func]:%s [Line]:%d [Info]:Venc %d frame busy queue is empty. \n\0",
    /*9e4c*/ "[Func]:%s [Line]:%d [Info]:Check Venc :%d PicBusyQueue is empty\n\0\0\0\0",
    /*9e90*/ "[Func]:%s [Line]:%d [Info]:Venc %d :The OSD number of h264 and h265 only support [0,8]!!\n\0\0\0",
    /*9eec*/ "[Func]:%s [Line]:%d [Info]:Venc %d : only  support the same PixelFmt!!\n\0",
    /*9f34*/ "[Func]:%s [Line]:%d [Info]:Venc %d : only h264 and h265 support OSD protection;must set u32AbsQp 0,s32Qp 0 !!\n\0\0",
    /*9fa4*/ "[Func]:%s [Line]:%d [Info]:Venc %d :  Check enAttachDest err,jpeg only support [%d,%d] !!\n\0\0",
    /*a000*/ "HI_NULL != pstVencChn->stVeGroupCfg.pstDestPicInfo\0\0",
    /*a034*/ "pstVencChn->enType == PT_H265\0\0\0",
    /*a054*/ "[Func]:%s [Line]:%d [Info]:detect gop mode change from one to the other \n\0\0\0",
    /*a0a0*/ "[Func]:%s [Line]:%d [Info]:Venc:%d get u32Gop failed\n\0\0\0",
    /*a0d8*/ "[Func]:%s [Line]:%d [Info]:Check Venc:%d Start h265 chnl failed because chang mode\n\0",
    /*a12c*/ "[Func]:%s [Line]:%d [Info]:Check Venc  :%d Start h265 chnl failed because chang mode\n\0\0\0",
    /*a184*/ "[Func]:%s [Line]:%d [Info]:Check Venc  :%d Start h264 chnl failed because chang mode\n\0\0\0",
    /*a1dc*/ "[Func]:%s [Line]:%d [Info]:Check Venc  :%d chnl    enType:%d failed\n\0\0\0\0",
    /*a224*/ "[Func]:%s [Line]:%d [Info]:Check Venc  :%d Start one chnl failed\n\0\0\0",
    /*a268*/ "[Func]:%s [Line]:%d [Info]:chnl ext info is NULL!\n\0\0",
    /*a29c*/ "[Func]:%s [Line]:%d [Info]:Check Venc :%d has not been created \n\0\0\0\0",
    /*a2e0*/ "[Func]:%s [Line]:%d [Info]:Check Venc  :%d is empty,no this Venc chn has beend registered  chnl\n\0\0\0\0",
    /*a344*/ "[Func]:%s [Line]:%d [Info]:This Chip do NOT SuPport Prores!!!\n\0\0",
    /*a384*/ "[Func]:%s [Line]:%d [Info]:not surpport coding type\n\0\0\0\0",
    /*a3bc*/ "pstVencChn->stVeGroupCfg.pstDestPicInfo->stVencFrameExtInfo.u32MPFCnt > 0\0\0\0",
    /*a408*/ "0 == pstVencChn->u8JpegEncSeq\0\0\0",
    /*a428*/ "pstVencChn->bFinishLastFrm == HI_TRUE\0\0\0",
    /*a450*/ "[Func]:%s [Line]:%d [Info]:Venc %d stop recv pic ok \n\0\0\0",
    /*a488*/ "venc\0\0\0\0",
    /*a490*/ "ModuleParam: VencMaxChnNum(%d) is illegal,should be [1, %d]\n\0\0\0\0",
    /*a4d0*/ "[Func]:%s [Line]:%d [Info]:Regist device err. \n\0",
    /*a500*/ "[Func]:%s [Line]:%d [Info]:malloc venc chn context fail! chn num(%d).\n\0\0",
    /*a548*/ "[Func]:%s [Line]:%d [Info]:Regist module err. \n\0",
    /*a578*/ "Hi3516CV500\0",
    /*a584*/ "load venc.ko for %s...OK!\n\0\0",
    /*a5a0*/ "unload venc.ko for %s...OK!\n\0\0\0\0",
    /*a5c0*/ "HI_NULL != pstVencOsdInfo\0\0\0",
    /*a5dc*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*a61c*/ "HI_NULL != pstVencChn\0\0\0",
    /*a634*/ "HI_NULL != pstCapacity\0\0",
    /*a64c*/ "[Func]:%s [Line]:%d [Info]:venc regist to rgn failed. \n\0",
    /*a684*/ "[Func]:%s [Line]:%d [Info]:venc regist to overlayex failed. \n\0\0\0",
    /*a6c4*/ "[Func]:%s [Line]:%d [Info]:Rgn UnRegister Venc failed. \n\0\0\0\0",
    /*a700*/ "HI_SUCCESS == s32RetFail\0\0\0\0",
    /*a71c*/ "[Func]:%s [Line]:%d [Info]:Venc %d :DynamicRange only support %d\n\0\0\0",
    /*a760*/ "[Func]:%s [Line]:%d [Info]:Venc %d :ColorGamut only support %d,%d or %d\n\0\0\0\0",
    /*a7ac*/ "[Func]:%s [Line]:%d [Info]:enType (%d) err! not support!\n\0\0\0",
    /*a7e8*/ "[Func]:%s [Line]:%d [Info]:max picture width (%d) err! should in [%d,%d]!\n\0\0",
    /*a834*/ "[Func]:%s [Line]:%d [Info]:picture width (%d) err! should in [%d,%d]!\n\0\0",
    /*a87c*/ "[Func]:%s [Line]:%d [Info]:max picture height(%d) err! should in [%d,%d]!\n\0\0",
    /*a8c8*/ "[Func]:%s [Line]:%d [Info]:picture height(%d) err! should in [%d,%d]!\n\0\0",
    /*a910*/ "[Func]:%s [Line]:%d [Info]:Max picture width(%d) err! should 2 aligned!\0",
    /*a958*/ "[Func]:%s [Line]:%d [Info]:Max picture height(%d) err! should 2 aligned!\0\0\0\0",
    /*a9a4*/ "[Func]:%s [Line]:%d [Info]:Pic width(%d) err! should 2 aligned!\0",
    /*a9e4*/ "[Func]:%s [Line]:%d [Info]:Pic height(%d) err! should 2 aligned!\0\0\0\0",
    /*aa28*/ "[Func]:%s [Line]:%d [Info]:width(%d) * height(%d) should be smaller than %d!\n\0\0\0",
    /*aa78*/ "[Func]:%s [Line]:%d [Info]:Wrong ChipID!\n\0"
};

unsigned char data[460] = {
    /*0000*/ 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
    /*0010*/ 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
    /*0020*/ 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
    /*0030*/ 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 
    /*0040*/ 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0050*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0060*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0070*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0080*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0090*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00a0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00b0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00c0*/ 0x02, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*00d0*/ 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00e0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00f0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0100*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0110*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0120*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0130*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0140*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0150*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0160*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0170*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0180*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0190*/ 0x76, 0x65, 0x6e, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*01a0*/ 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*01b0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x01, 0x00, 0x00, 
    /*01c0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

unsigned char rel.data[112] = {
    /*0000*/ 0x18, 0x01, 0x00, 0x00, 0x02, 0x70, 0x04, 0x00, 0x28, 0x01, 0x00, 0x00, 0x02, 0x6e, 0x04, 0x00, 
    /*0010*/ 0x2c, 0x01, 0x00, 0x00, 0x02, 0x30, 0x05, 0x00, 0x30, 0x01, 0x00, 0x00, 0x02, 0x5e, 0x04, 0x00, 
    /*0020*/ 0x34, 0x01, 0x00, 0x00, 0x02, 0x5a, 0x04, 0x00, 0x48, 0x01, 0x00, 0x00, 0x02, 0x6f, 0x04, 0x00, 
    /*0030*/ 0x54, 0x01, 0x00, 0x00, 0x02, 0x4e, 0x04, 0x00, 0xa4, 0x01, 0x00, 0x00, 0x02, 0xe7, 0x06, 0x00, 
    /*0040*/ 0xa8, 0x01, 0x00, 0x00, 0x02, 0x87, 0x06, 0x00, 0xac, 0x01, 0x00, 0x00, 0x02, 0x58, 0x04, 0x00, 
    /*0050*/ 0xb0, 0x01, 0x00, 0x00, 0x02, 0x56, 0x04, 0x00, 0xb4, 0x01, 0x00, 0x00, 0x02, 0x4d, 0x04, 0x00, 
    /*0060*/ 0xbc, 0x01, 0x00, 0x00, 0x02, 0x10, 0x00, 0x00, 0xc8, 0x01, 0x00, 0x00, 0x02, 0x28, 0x07, 0x00, 
};

unsigned char bss[180];

@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text
@ Size: 0x26d9c
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN VENC_WaitConditionCallBack0
    /*00000000*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000004*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000008*/ LDR         R3, [R0] 
    /*0000000c*/ MOVW        R1, #36240                  @ 0x8d90 
    /*00000010*/ LDR         R2, [R2] 
    /*00000014*/ MLA         R3, R1, R3, R2 
    /*00000018*/ LDR         R0, [R3, #20] 
    /*0000001c*/ SUB         R0, R0, #1 
    /*00000020*/ CLZ         R0, R0 
    /*00000024*/ LSR         R0, R0, #5 
    /*00000028*/ BX          LR 
FUNC_END VENC_WaitConditionCallBack0


FUNC_BEGIN VencCheckRcMode
    /*0000002c*/ MOVW        R3, #265                    @ 0x109 
    /*00000030*/ CMP         R1, R3 
    /*00000034*/ PUSH        {R4, LR} 
    /*00000038*/ MOV         R4, R0 
    /*0000003c*/ SUB         SP, SP, #8 
    /*00000040*/ BEQ         VencCheckRcMode_x108
    /*00000044*/ MOVW        R3, #1002                   @ 0x3ea 
    /*00000048*/ CMP         R1, R3 
    /*0000004c*/ BEQ         VencCheckRcMode_xc8
    /*00000050*/ CMP         R1, #96                     @ 0x60 
    /*00000054*/ BEQ         VencCheckRcMode_x64
    VencCheckRcMode_x58:
    /*00000058*/ MOV         R0, #0 
    VencCheckRcMode_x5c:
    /*0000005c*/ ADD         SP, SP, #8 
    /*00000060*/ POP         {R4, PC} 
    VencCheckRcMode_x64:
    /*00000064*/ SUB         R3, R0, #1 
    /*00000068*/ CMP         R3, #6 
    /*0000006c*/ BHI         VencCheckRcMode_x1f4
    /*00000070*/ CMP         R0, #7 
    /*00000074*/ BEQ         VencCheckRcMode_x1dc
    /*00000078*/ CMP         R0, #3 
    /*0000007c*/ BEQ         VencCheckRcMode_x184
    /*00000080*/ CMP         R0, #4 
    /*00000084*/ BNE         VencCheckRcMode_x58
    /*00000088*/ BL          0x0000000000000088          @ VENC_DRV_IsSupportQVBR [R_ARM_CALL: .text+0x269f0] 
    /*0000008c*/ CMP         R0, #0 
    /*00000090*/ BNE         VencCheckRcMode_x58
    /*00000094*/ MOVW        R2, #3765                   @ 0xeb5 
    /*00000098*/ STR         R4, [SP, #4] 
    VencCheckRcMode_x9c:
    /*0000009c*/ STR         R2, [SP] 
    /*000000a0*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*000000a4*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf0] 
    /*000000a8*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*000000ac*/ MOV         R1, #8 
    /*000000b0*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf0] 
    /*000000b4*/ MOV         R0, #3 
    /*000000b8*/ BL          0x00000000000000B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000000bc*/ MOVW        R0, #32776                  @ 0x8008 
    /*000000c0*/ MOVT        R0, #40968                  @ 0xa008 
    /*000000c4*/ B           VencCheckRcMode_x5c
    VencCheckRcMode_xc8:
    /*000000c8*/ SUB         R3, R0, #8 
    /*000000cc*/ CMP         R3, #2 
    /*000000d0*/ BLS         VencCheckRcMode_x58
    /*000000d4*/ STR         R0, [SP, #4] 
    /*000000d8*/ MOVW        R2, #3777                   @ 0xec1 
    /*000000dc*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*000000e0*/ STR         R2, [SP] 
    /*000000e4*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*000000e8*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x140] 
    /*000000ec*/ MOV         R1, #8 
    /*000000f0*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x140] 
    /*000000f4*/ MOV         R0, #3 
    /*000000f8*/ BL          0x00000000000000F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000000fc*/ MOVW        R0, #32771                  @ 0x8003 
    /*00000100*/ MOVT        R0, #40968                  @ 0xa008 
    /*00000104*/ B           VencCheckRcMode_x5c
    VencCheckRcMode_x108:
    /*00000108*/ SUB         R3, R0, #11 
    /*0000010c*/ CMP         R3, #6 
    /*00000110*/ BHI         VencCheckRcMode_x228
    /*00000114*/ CMP         R0, #17 
    /*00000118*/ BEQ         VencCheckRcMode_x1c4
    /*0000011c*/ CMP         R0, #13 
    /*00000120*/ BEQ         VencCheckRcMode_x16c
    /*00000124*/ CMP         R0, #14 
    /*00000128*/ BNE         VencCheckRcMode_x58
    /*0000012c*/ BL          0x000000000000012C          @ VENC_DRV_IsSupportQVBR [R_ARM_CALL: .text+0x269f0] 
    /*00000130*/ CMP         R0, #0 
    /*00000134*/ STREQ       R4, [SP, #4] 
    /*00000138*/ MOVWEQ      R2, #3723                   @ 0xe8b 
    /*0000013c*/ BNE         VencCheckRcMode_x58
    VencCheckRcMode_x140:
    /*00000140*/ STR         R2, [SP] 
    /*00000144*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00000148*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x50] 
    /*0000014c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00000150*/ MOV         R1, #8 
    /*00000154*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x50] 
    /*00000158*/ MOV         R0, #3 
    /*0000015c*/ BL          0x000000000000015C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000160*/ MOVW        R0, #32776                  @ 0x8008 
    /*00000164*/ MOVT        R0, #40968                  @ 0xa008 
    /*00000168*/ B           VencCheckRcMode_x5c
    VencCheckRcMode_x16c:
    /*0000016c*/ BL          0x000000000000016C          @ VENC_DRV_IsSupportAVBR [R_ARM_CALL: .text+0x26a20] 
    /*00000170*/ CMP         R0, #0 
    /*00000174*/ BNE         VencCheckRcMode_x58
    /*00000178*/ STR         R4, [SP, #4] 
    /*0000017c*/ MOVW        R2, #3714                   @ 0xe82 
    /*00000180*/ B           VencCheckRcMode_x140
    VencCheckRcMode_x184:
    /*00000184*/ BL          0x0000000000000184          @ VENC_DRV_IsSupportAVBR [R_ARM_CALL: .text+0x26a20] 
    /*00000188*/ CMP         R0, #0 
    /*0000018c*/ BNE         VencCheckRcMode_x58
    /*00000190*/ MOVW        R2, #3756                   @ 0xeac 
    /*00000194*/ STR         R4, [SP, #4] 
    /*00000198*/ STR         R2, [SP] 
    /*0000019c*/ MOV         R0, R4 
    /*000001a0*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*000001a4*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf0] 
    /*000001a8*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*000001ac*/ MOV         R1, #8 
    /*000001b0*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf0] 
    /*000001b4*/ BL          0x00000000000001B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000001b8*/ MOVW        R0, #32776                  @ 0x8008 
    /*000001bc*/ MOVT        R0, #40968                  @ 0xa008 
    /*000001c0*/ B           VencCheckRcMode_x5c
    VencCheckRcMode_x1c4:
    /*000001c4*/ BL          0x00000000000001C4          @ VENC_DRV_IsSupportQpMap [R_ARM_CALL: .text+0x26a24] 
    /*000001c8*/ CMP         R0, #0 
    /*000001cc*/ STREQ       R4, [SP, #4] 
    /*000001d0*/ MOVWEQ      R2, #3705                   @ 0xe79 
    /*000001d4*/ BNE         VencCheckRcMode_x58
    /*000001d8*/ B           VencCheckRcMode_x140
    VencCheckRcMode_x1dc:
    /*000001dc*/ BL          0x00000000000001DC          @ VENC_DRV_IsSupportQpMap [R_ARM_CALL: .text+0x26a24] 
    /*000001e0*/ CMP         R0, #0 
    /*000001e4*/ STREQ       R4, [SP, #4] 
    /*000001e8*/ MOVWEQ      R2, #3747                   @ 0xea3 
    /*000001ec*/ BNE         VencCheckRcMode_x58
    /*000001f0*/ B           VencCheckRcMode_x9c
    VencCheckRcMode_x1f4:
    /*000001f4*/ STR         R0, [SP, #4] 
    /*000001f8*/ MOVW        R2, #3739                   @ 0xe9b 
    /*000001fc*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00000200*/ STR         R2, [SP] 
    /*00000204*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00000208*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa0] 
    /*0000020c*/ MOV         R1, #8 
    /*00000210*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa0] 
    /*00000214*/ MOV         R0, #3 
    /*00000218*/ BL          0x0000000000000218          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000021c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00000220*/ MOVT        R0, #40968                  @ 0xa008 
    /*00000224*/ B           VencCheckRcMode_x5c
    VencCheckRcMode_x228:
    /*00000228*/ STR         R0, [SP, #4] 
    /*0000022c*/ MOVW        R2, #3697                   @ 0xe71 
    /*00000230*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00000234*/ STR         R2, [SP] 
    /*00000238*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*0000023c*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x0] 
    /*00000240*/ MOV         R1, #8 
    /*00000244*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x0] 
    /*00000248*/ MOV         R0, #3 
    /*0000024c*/ BL          0x000000000000024C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000250*/ MOVW        R0, #32771                  @ 0x8003 
    /*00000254*/ MOVT        R0, #40968                  @ 0xa008 
    /*00000258*/ B           VencCheckRcMode_x5c
FUNC_END VencCheckRcMode


FUNC_BEGIN VENC_WaitConditionCallBack1
    /*0000025c*/ LDR         R1, [R0] 
    /*00000260*/ MOVW        R2, #36240                  @ 0x8d90 
    /*00000264*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000268*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000026c*/ MUL         R2, R2, R1 
    /*00000270*/ LDR         R0, [R3] 
    /*00000274*/ ADD         R1, R0, R2 
    /*00000278*/ ADD         R3, R1, #11904              @ 0x2e80 
    /*0000027c*/ ADD         R3, R3, #60                 @ 0x3c 
    /*00000280*/ CMP         R3, #0 
    /*00000284*/ BEQ         VENC_WaitConditionCallBack1_x29c
    /*00000288*/ ADD         R1, R1, #8192               @ 0x2000 
    /*0000028c*/ ADD         R3, R3, #28 
    /*00000290*/ LDR         R1, [R1, #3800]             @ 0xed8 
    /*00000294*/ CMP         R1, R3 
    /*00000298*/ BNE         VENC_WaitConditionCallBack1_x2c0
    VENC_WaitConditionCallBack1_x29c:
    /*0000029c*/ LDR         R3, [R0, R2] 
    /*000002a0*/ CMP         R3, #0 
    /*000002a4*/ BEQ         VENC_WaitConditionCallBack1_x2c0
    /*000002a8*/ MOVW        R3, #0                      @ s_u32VencState [R_ARM_MOVW_ABS_NC: .data+0xc0] 
    /*000002ac*/ MOVT        R3, #0                      @ s_u32VencState [R_ARM_MOVT_ABS: .data+0xc0] 
    /*000002b0*/ LDR         R0, [R3] 
    /*000002b4*/ ADDS        R0, R0, #0 
    /*000002b8*/ MOVNE       R0, #1 
    /*000002bc*/ BX          LR 
    VENC_WaitConditionCallBack1_x2c0:
    /*000002c0*/ MOV         R0, #1 
    /*000002c4*/ BX          LR 
FUNC_END VENC_WaitConditionCallBack1


FUNC_BEGIN MkpVencCheckNull.part.8
    /*000002c8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000002cc*/ SUB         SP, SP, #12 
    /*000002d0*/ MOV         R3, #136                    @ 0x88 
    /*000002d4*/ MOV         R1, #8 
    /*000002d8*/ STR         R3, [SP] 
    /*000002dc*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x194] 
    /*000002e0*/ LDR         R3, [PC, #24]               @ 0x0000000000000300 
    /*000002e4*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x194] 
    /*000002e8*/ MOV         R0, #3 
    /*000002ec*/ BL          0x00000000000002EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000002f0*/ MOVW        R0, #32774                  @ 0x8006 
    /*000002f4*/ MOVT        R0, #40968                  @ 0xa008 
    /*000002f8*/ ADD         SP, SP, #12 
    /*000002fc*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00000300*/ ANDEQ       R0, R0, R0, LSL R0 
FUNC_END MkpVencCheckNull.part.8


FUNC_BEGIN MkpVencCheckChn.part.9
    /*00000304*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00000308*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000030c*/ SUB         SP, SP, #20 
    /*00000310*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00000314*/ MOV         R2, #0 
    /*00000318*/ MOV         R1, #147                    @ 0x93 
    /*0000031c*/ STR         R0, [SP, #4] 
    /*00000320*/ MOV         R0, #3 
    /*00000324*/ LDR         R3, [R3] 
    /*00000328*/ STR         R2, [SP, #8] 
    /*0000032c*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c8] 
    /*00000330*/ STR         R1, [SP] 
    /*00000334*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c8] 
    /*00000338*/ STR         R3, [SP, #12] 
    /*0000033c*/ MOV         R1, #8 
    /*00000340*/ LDR         R3, [PC, #16]               @ 0x0000000000000358 
    /*00000344*/ BL          0x0000000000000344          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000348*/ MOVW        R0, #32770                  @ 0x8002 
    /*0000034c*/ MOVT        R0, #40968                  @ 0xa008 
    /*00000350*/ ADD         SP, SP, #20 
    /*00000354*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00000358*/ ANDEQ       R0, R0, R4, LSR #32 
FUNC_END MkpVencCheckChn.part.9


FUNC_BEGIN VencCheckGopAttr
    /*0000035c*/ PUSH        {R4, R5, R6, LR} 
    /*00000360*/ SUBS        R6, R1, #0 
    /*00000364*/ SUB         SP, SP, #16 
    /*00000368*/ MOV         R4, R0 
    /*0000036c*/ MOV         R5, R2 
    /*00000370*/ BEQ         VencCheckGopAttr_x3e4
    VencCheckGopAttr_x374:
    /*00000374*/ CMP         R4, #0 
    /*00000378*/ BLT         VencCheckGopAttr_x390
    /*0000037c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00000380*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00000384*/ LDR         R3, [R3] 
    /*00000388*/ CMP         R4, R3 
    /*0000038c*/ BCC         VencCheckGopAttr_x3a8
    VencCheckGopAttr_x390:
    /*00000390*/ MOV         R0, R4 
    /*00000394*/ BL          0x0000000000000304 
    /*00000398*/ CMP         R0, #0 
    /*0000039c*/ BEQ         VencCheckGopAttr_x3a8
    VencCheckGopAttr_x3a0:
    /*000003a0*/ ADD         SP, SP, #16 
    /*000003a4*/ POP         {R4, R5, R6, PC} 
    VencCheckGopAttr_x3a8:
    /*000003a8*/ BIC         R3, R5, #4 
    /*000003ac*/ MOVW        R2, #1002                   @ 0x3ea 
    /*000003b0*/ CMP         R5, #26 
    /*000003b4*/ CMPNE       R3, R2 
    /*000003b8*/ BEQ         VencCheckGopAttr_x3d8
    /*000003bc*/ LDR         R0, [R6] 
    /*000003c0*/ CMP         R0, #5 
    /*000003c4*/ BHI         VencCheckGopAttr_x3f4
    /*000003c8*/ MOV         R1, R5 
    /*000003cc*/ BL          0x00000000000003CC          @ VENC_DRV_IsSupportGopMode [R_ARM_CALL: .text+0x26004] 
    /*000003d0*/ CMP         R0, #0 
    /*000003d4*/ BEQ         VencCheckGopAttr_x428
    VencCheckGopAttr_x3d8:
    /*000003d8*/ MOV         R0, #0 
    /*000003dc*/ ADD         SP, SP, #16 
    /*000003e0*/ POP         {R4, R5, R6, PC} 
    VencCheckGopAttr_x3e4:
    /*000003e4*/ BL          0x00000000000002C8 
    /*000003e8*/ CMP         R0, #0 
    /*000003ec*/ BNE         VencCheckGopAttr_x3a0
    /*000003f0*/ B           VencCheckGopAttr_x374
    VencCheckGopAttr_x3f4:
    /*000003f4*/ STR         R0, [SP, #8] 
    /*000003f8*/ MOVW        R3, #3801                   @ 0xed9 
    /*000003fc*/ STR         R4, [SP, #4] 
    /*00000400*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x210] 
    /*00000404*/ STR         R3, [SP] 
    /*00000408*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x210] 
    /*0000040c*/ LDR         R3, [PC, #76]               @ 0x0000000000000460 
    /*00000410*/ MOV         R1, #8 
    /*00000414*/ MOV         R0, #3 
    /*00000418*/ BL          0x0000000000000418          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000041c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00000420*/ MOVT        R0, #40968                  @ 0xa008 
    /*00000424*/ B           VencCheckGopAttr_x3a0
    VencCheckGopAttr_x428:
    /*00000428*/ LDR         R3, [R6] 
    /*0000042c*/ MOV         R1, #3808                   @ 0xee0 
    /*00000430*/ STR         R4, [SP, #4] 
    /*00000434*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x254] 
    /*00000438*/ STR         R1, [SP] 
    /*0000043c*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x254] 
    /*00000440*/ STR         R3, [SP, #8] 
    /*00000444*/ MOV         R1, #8 
    /*00000448*/ LDR         R3, [PC, #16]               @ 0x0000000000000460 
    /*0000044c*/ MOV         R0, #3 
    /*00000450*/ BL          0x0000000000000450          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000454*/ MOVW        R0, #32776                  @ 0x8008 
    /*00000458*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000045c*/ B           VencCheckGopAttr_x3a0
    /*00000460*/ ANDEQ       R0, R0, R4, LSR R0 
FUNC_END VencCheckGopAttr


FUNC_BEGIN MkpVencCheckChnCreated.part.11
    /*00000464*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00000468*/ SUB         SP, SP, #12 
    /*0000046c*/ MOV         R3, #158                    @ 0x9e 
    /*00000470*/ MOV         R1, #8 
    /*00000474*/ STR         R0, [SP, #4] 
    /*00000478*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000047c*/ STR         R3, [SP] 
    /*00000480*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00000484*/ LDR         R3, [PC, #20]               @ 0x00000000000004a0 
    /*00000488*/ MOV         R0, #3 
    /*0000048c*/ BL          0x000000000000048C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000490*/ MOVW        R0, #32773                  @ 0x8005 
    /*00000494*/ MOVT        R0, #40968                  @ 0xa008 
    /*00000498*/ ADD         SP, SP, #12 
    /*0000049c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000004a0*/ ANDEQ       R0, R0, R8, ASR #32 
FUNC_END MkpVencCheckChnCreated.part.11


FUNC_BEGIN VenCheckRoiCfg.part.17
    /*000004a4*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000004a8*/ SUB         SP, SP, #36                 @ 0x24 
    /*000004ac*/ LDR         R3, [R1, #4] 
    /*000004b0*/ CMP         R3, #1 
    /*000004b4*/ BHI         VenCheckRoiCfg.part.17_x698
    /*000004b8*/ LDR         R2, [R1, #8] 
    /*000004bc*/ CMP         R2, #1 
    /*000004c0*/ BHI         VenCheckRoiCfg.part.17_x6d0
    /*000004c4*/ LDR         LR, [R1] 
    /*000004c8*/ CMP         LR, #7 
    /*000004cc*/ BHI         VenCheckRoiCfg.part.17_x744
    /*000004d0*/ CMP         R3, #1 
    /*000004d4*/ BEQ         VenCheckRoiCfg.part.17_x4e4
    VenCheckRoiCfg.part.17_x4d8:
    /*000004d8*/ MOV         R0, #0 
    VenCheckRoiCfg.part.17_x4dc:
    /*000004dc*/ ADD         SP, SP, #36                 @ 0x24 
    /*000004e0*/ POP         {R4, R5, R6, R7, PC} 
    VenCheckRoiCfg.part.17_x4e4:
    /*000004e4*/ CMP         R2, #1 
    /*000004e8*/ LDR         R3, [R1, #12] 
    /*000004ec*/ BEQ         VenCheckRoiCfg.part.17_x64c
    /*000004f0*/ ADD         R2, R3, #51                 @ 0x33 
    /*000004f4*/ CMP         R2, #102                    @ 0x66 
    /*000004f8*/ BHI         VenCheckRoiCfg.part.17_x778
    VenCheckRoiCfg.part.17_x4fc:
    /*000004fc*/ LDR         R4, [R1, #24] 
    /*00000500*/ LDR         R5, [R1, #28] 
    /*00000504*/ TST         R4, #15 
    /*00000508*/ BNE         VenCheckRoiCfg.part.17_x6f0
    /*0000050c*/ TST         R5, #15 
    /*00000510*/ BNE         VenCheckRoiCfg.part.17_x6f0
    /*00000514*/ LDR         R6, [R1, #16] 
    /*00000518*/ LDR         IP, [R1, #20] 
    /*0000051c*/ TST         R6, #15 
    /*00000520*/ BNE         VenCheckRoiCfg.part.17_x728
    /*00000524*/ ANDS        R3, IP, #15 
    /*00000528*/ BNE         VenCheckRoiCfg.part.17_x728
    /*0000052c*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000530*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000534*/ MOVW        R1, #36240                  @ 0x8d90 
    /*00000538*/ CMP         R4, #15 
    /*0000053c*/ LDR         R2, [R2] 
    /*00000540*/ MVN         R7, R6 
    /*00000544*/ LSR         R7, R7, #31 
    /*00000548*/ MOVLS       R7, #0 
    /*0000054c*/ MLA         R0, R1, R0, R2 
    /*00000550*/ ADD         R0, R0, #12288              @ 0x3000 
    /*00000554*/ LDR         R2, [R0, #148]              @ 0x94 
    /*00000558*/ LDR         R1, [R0, #152]              @ 0x98 
    /*0000055c*/ ADD         R2, R2, #15 
    /*00000560*/ BIC         R2, R2, #15 
    /*00000564*/ ADD         R1, R1, #15 
    /*00000568*/ CMP         R2, R4 
    /*0000056c*/ MOVCC       R0, #0 
    /*00000570*/ ANDCS       R0, R7, #1 
    /*00000574*/ BIC         R1, R1, #15 
    /*00000578*/ CMP         R0, #0 
    /*0000057c*/ BEQ         VenCheckRoiCfg.part.17_x5c0
    /*00000580*/ CMP         R5, #15 
    /*00000584*/ MVN         R7, IP 
    /*00000588*/ LSR         R7, R7, #31 
    /*0000058c*/ SUB         R0, R2, #1 
    /*00000590*/ MOVLS       R7, #0 
    /*00000594*/ CMP         R1, R5 
    /*00000598*/ MOVCC       R7, #0 
    /*0000059c*/ ANDCS       R7, R7, #1 
    /*000005a0*/ CMP         R6, R0 
    /*000005a4*/ MOVHI       R0, #0 
    /*000005a8*/ ANDLS       R0, R7, #1 
    /*000005ac*/ CMP         R0, #0 
    /*000005b0*/ BEQ         VenCheckRoiCfg.part.17_x5c0
    /*000005b4*/ SUB         R0, R1, #1 
    /*000005b8*/ CMP         IP, R0 
    /*000005bc*/ BLS         VenCheckRoiCfg.part.17_x604
    VenCheckRoiCfg.part.17_x5c0:
    /*000005c0*/ STR         R1, [SP, #28] 
    /*000005c4*/ MOVW        R3, #8001                   @ 0x1f41 
    /*000005c8*/ STR         R2, [SP, #24] 
    /*000005cc*/ MOV         R1, #8 
    /*000005d0*/ STM         SP, {R3, LR} 
    /*000005d4*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4d0] 
    /*000005d8*/ STR         IP, [SP, #20] 
    /*000005dc*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4d0] 
    /*000005e0*/ STR         R6, [SP, #16] 
    /*000005e4*/ MOV         R0, #3 
    /*000005e8*/ STR         R5, [SP, #12] 
    /*000005ec*/ STR         R4, [SP, #8] 
    /*000005f0*/ LDR         R3, [PC, #412]              @ 0x0000000000000794 
    /*000005f4*/ BL          0x00000000000005F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000005f8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000005fc*/ MOVT        R0, #40968                  @ 0xa008 
    /*00000600*/ B           VenCheckRoiCfg.part.17_x4dc
    VenCheckRoiCfg.part.17_x604:
    /*00000604*/ ADD         R4, R4, R6 
    /*00000608*/ CMP         R2, R4 
    /*0000060c*/ BCC         VenCheckRoiCfg.part.17_x61c
    /*00000610*/ ADD         IP, R5, IP 
    /*00000614*/ CMP         R1, IP 
    /*00000618*/ BCS         VenCheckRoiCfg.part.17_x4d8
    VenCheckRoiCfg.part.17_x61c:
    /*0000061c*/ MOVW        R3, #8010                   @ 0x1f4a 
    /*00000620*/ STR         LR, [SP, #4] 
    /*00000624*/ STR         R3, [SP] 
    /*00000628*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x55c] 
    /*0000062c*/ LDR         R3, [PC, #352]              @ 0x0000000000000794 
    /*00000630*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x55c] 
    /*00000634*/ MOV         R1, #8 
    /*00000638*/ MOV         R0, #3 
    /*0000063c*/ BL          0x000000000000063C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000640*/ MOVW        R0, #32771                  @ 0x8003 
    /*00000644*/ MOVT        R0, #40968                  @ 0xa008 
    /*00000648*/ B           VenCheckRoiCfg.part.17_x4dc
    VenCheckRoiCfg.part.17_x64c:
    /*0000064c*/ CMP         R3, #51                     @ 0x33 
    /*00000650*/ BLS         VenCheckRoiCfg.part.17_x4fc
    /*00000654*/ STR         R3, [SP, #8] 
    /*00000658*/ MOV         R2, #0 
    /*0000065c*/ MOV         R3, #51                     @ 0x33 
    /*00000660*/ STR         R3, [SP, #16] 
    /*00000664*/ MOVW        R3, #7954                   @ 0x1f12 
    /*00000668*/ STR         LR, [SP, #4] 
    VenCheckRoiCfg.part.17_x66c:
    /*0000066c*/ STR         R2, [SP, #12] 
    /*00000670*/ MOV         R1, #8 
    /*00000674*/ STR         R3, [SP] 
    /*00000678*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d8] 
    /*0000067c*/ LDR         R3, [PC, #272]              @ 0x0000000000000794 
    /*00000680*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d8] 
    /*00000684*/ MOV         R0, #3 
    /*00000688*/ BL          0x0000000000000688          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000068c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00000690*/ MOVT        R0, #40968                  @ 0xa008 
    /*00000694*/ B           VenCheckRoiCfg.part.17_x4dc
    VenCheckRoiCfg.part.17_x698:
    /*00000698*/ LDR         R1, [R1] 
    /*0000069c*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e0] 
    /*000006a0*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e0] 
    /*000006a4*/ MOVW        R0, #7925                   @ 0x1ef5 
    /*000006a8*/ STR         R3, [SP, #8] 
    /*000006ac*/ STR         R0, [SP] 
    /*000006b0*/ STR         R1, [SP, #4] 
    VenCheckRoiCfg.part.17_x6b4:
    /*000006b4*/ MOV         R1, #8 
    /*000006b8*/ LDR         R3, [PC, #212]              @ 0x0000000000000794 
    /*000006bc*/ MOV         R0, #3 
    /*000006c0*/ BL          0x00000000000006C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000006c4*/ MOVW        R0, #32771                  @ 0x8003 
    /*000006c8*/ MOVT        R0, #40968                  @ 0xa008 
    /*000006cc*/ B           VenCheckRoiCfg.part.17_x4dc
    VenCheckRoiCfg.part.17_x6d0:
    /*000006d0*/ LDR         R3, [R1] 
    /*000006d4*/ MOVW        R1, #7935                   @ 0x1eff 
    /*000006d8*/ STR         R2, [SP, #8] 
    /*000006dc*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x338] 
    /*000006e0*/ STR         R1, [SP] 
    /*000006e4*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x338] 
    /*000006e8*/ STR         R3, [SP, #4] 
    /*000006ec*/ B           VenCheckRoiCfg.part.17_x6b4
    VenCheckRoiCfg.part.17_x6f0:
    /*000006f0*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x41c] 
    /*000006f4*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x41c] 
    /*000006f8*/ MOVW        R3, #7976                   @ 0x1f28 
    /*000006fc*/ STR         R5, [SP, #12] 
    /*00000700*/ STR         R4, [SP, #8] 
    /*00000704*/ STR         LR, [SP, #4] 
    VenCheckRoiCfg.part.17_x708:
    /*00000708*/ STR         R3, [SP] 
    /*0000070c*/ MOV         R1, #8 
    /*00000710*/ LDR         R3, [PC, #124]              @ 0x0000000000000794 
    /*00000714*/ MOV         R0, #3 
    /*00000718*/ BL          0x0000000000000718          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000071c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00000720*/ MOVT        R0, #40968                  @ 0xa008 
    /*00000724*/ B           VenCheckRoiCfg.part.17_x4dc
    VenCheckRoiCfg.part.17_x728:
    /*00000728*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x474] 
    /*0000072c*/ STR         IP, [SP, #12] 
    /*00000730*/ MOVW        R3, #7986                   @ 0x1f32 
    /*00000734*/ STR         R6, [SP, #8] 
    /*00000738*/ STR         LR, [SP, #4] 
    /*0000073c*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x474] 
    /*00000740*/ B           VenCheckRoiCfg.part.17_x708
    VenCheckRoiCfg.part.17_x744:
    /*00000744*/ MOVW        R3, #7942                   @ 0x1f06 
    /*00000748*/ STR         R0, [SP, #4] 
    /*0000074c*/ STR         R3, [SP] 
    /*00000750*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x390] 
    /*00000754*/ STR         LR, [SP, #8] 
    /*00000758*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x390] 
    /*0000075c*/ LDR         R3, [PC, #48]               @ 0x0000000000000794 
    /*00000760*/ MOV         R1, #8 
    /*00000764*/ MOV         R0, #3 
    /*00000768*/ BL          0x0000000000000768          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000076c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00000770*/ MOVT        R0, #40968                  @ 0xa008 
    /*00000774*/ B           VenCheckRoiCfg.part.17_x4dc
    VenCheckRoiCfg.part.17_x778:
    /*00000778*/ STR         R3, [SP, #8] 
    /*0000077c*/ MVN         R2, #50                     @ 0x32 
    /*00000780*/ MOV         R3, #51                     @ 0x33 
    /*00000784*/ STR         LR, [SP, #4] 
    /*00000788*/ STR         R3, [SP, #16] 
    /*0000078c*/ MOVW        R3, #7965                   @ 0x1f1d 
    /*00000790*/ B           VenCheckRoiCfg.part.17_x66c
    /*00000794*/ ANDEQ       R0, R0, R0, RRX 
FUNC_END VenCheckRoiCfg.part.17


FUNC_BEGIN MkpVencCheckNull
    /*00000798*/ CMP         R0, #0 
    /*0000079c*/ BEQ         MkpVencCheckNull_x7a8
    /*000007a0*/ MOV         R0, #0 
    /*000007a4*/ BX          LR 
    MkpVencCheckNull_x7a8:
    /*000007a8*/ B           0x00000000000002C8 
FUNC_END MkpVencCheckNull


FUNC_BEGIN MkpVencCheckChn
    /*000007ac*/ CMP         R0, #0 
    /*000007b0*/ BLT         MkpVencCheckChn_x7d0
    /*000007b4*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000007b8*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000007bc*/ LDR         R3, [R3] 
    /*000007c0*/ CMP         R0, R3 
    /*000007c4*/ BCS         MkpVencCheckChn_x7d0
    /*000007c8*/ MOV         R0, #0 
    /*000007cc*/ BX          LR 
    MkpVencCheckChn_x7d0:
    /*000007d0*/ B           0x0000000000000304 
FUNC_END MkpVencCheckChn


FUNC_BEGIN MkpVencCheckChnCreated
    /*000007d4*/ MOVW        R3, #36240                  @ 0x8d90 
    /*000007d8*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000007dc*/ MUL         R3, R3, R0 
    /*000007e0*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000007e4*/ LDR         R2, [R2] 
    /*000007e8*/ LDR         R3, [R2, R3] 
    /*000007ec*/ CMP         R3, #1 
    /*000007f0*/ BNE         MkpVencCheckChnCreated_x7fc
    /*000007f4*/ MOV         R0, #0 
    /*000007f8*/ BX          LR 
    MkpVencCheckChnCreated_x7fc:
    /*000007fc*/ B           0x0000000000000464 
FUNC_END MkpVencCheckChnCreated


FUNC_BEGIN MkpVencCheckChnRegistered
    /*00000800*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000804*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000808*/ MOVW        R3, #36240                  @ 0x8d90 
    /*0000080c*/ LDR         R2, [R2] 
    /*00000810*/ MLA         R3, R3, R0, R2 
    /*00000814*/ LDR         R3, [R3, #56]               @ 0x38 
    /*00000818*/ CMN         R3, #1 
    /*0000081c*/ BEQ         MkpVencCheckChnRegistered_x828
    /*00000820*/ MOV         R0, #0 
    /*00000824*/ BX          LR 
    MkpVencCheckChnRegistered_x828:
    /*00000828*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000082c*/ SUB         SP, SP, #12 
    /*00000830*/ MOV         R3, #169                    @ 0xa9 
    /*00000834*/ MOV         R1, #8 
    /*00000838*/ STR         R0, [SP, #4] 
    /*0000083c*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x590] 
    /*00000840*/ STR         R3, [SP] 
    /*00000844*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x590] 
    /*00000848*/ LDR         R3, [PC, #20]               @ 0x0000000000000864 
    /*0000084c*/ MOV         R0, #4 
    /*00000850*/ BL          0x0000000000000850          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000854*/ MOVW        R0, #32773                  @ 0x8005 
    /*00000858*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000085c*/ ADD         SP, SP, #12 
    /*00000860*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00000864*/ ANDEQ       R0, R0, R0, ROR R0 
FUNC_END MkpVencCheckChnRegistered


FUNC_BEGIN VencFrameRateInit
    /*00000868*/ MVN         R3, #0 
    /*0000086c*/ STR         R3, [R0] 
    /*00000870*/ STR         R3, [R0, #4] 
    /*00000874*/ BX          LR 
FUNC_END VencFrameRateInit


FUNC_BEGIN VencInitDeBreathEffect
    /*00000878*/ LDR         R3, [R0] 
    /*0000087c*/ MOVW        R2, #265                    @ 0x109 
    /*00000880*/ CMP         R3, R2 
    /*00000884*/ CMPNE       R3, #96                     @ 0x60 
    /*00000888*/ MOVEQ       R3, #0 
    /*0000088c*/ MOVEQ       R2, #6 
    /*00000890*/ STREQ       R3, [R1] 
    /*00000894*/ MOVNE       R3, #1 
    /*00000898*/ MOVEQ       R3, #16 
    /*0000089c*/ STMIBEQ     R1, {R2, R3} 
    /*000008a0*/ BX          LR 
FUNC_END VencInitDeBreathEffect


FUNC_BEGIN VencInitRoiCfg
    /*000008a4*/ PUSH        {R4, LR} 
    /*000008a8*/ SUBS        R4, R0, #0 
    /*000008ac*/ BEQ         VencInitRoiCfg_x8e8
    VencInitRoiCfg_x8b0:
    /*000008b0*/ MOV         R2, #256                    @ 0x100 
    /*000008b4*/ MOV         R1, #0 
    /*000008b8*/ MOV         R0, R4 
    /*000008bc*/ BL          0x00000000000008BC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000008c0*/ MOV         R3, #0 
    /*000008c4*/ MOV         R1, R3 
    /*000008c8*/ MOV         R2, R4 
    VencInitRoiCfg_x8cc:
    /*000008cc*/ STR         R3, [R4, R3, LSL #5] 
    /*000008d0*/ ADD         R3, R3, #1 
    /*000008d4*/ CMP         R3, #8 
    /*000008d8*/ STR         R1, [R2, #4] 
    /*000008dc*/ ADD         R2, R2, #32 
    /*000008e0*/ BNE         VencInitRoiCfg_x8cc
    /*000008e4*/ POP         {R4, PC} 
    VencInitRoiCfg_x8e8:
    /*000008e8*/ MOVW        R3, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e8] 
    /*000008ec*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*000008f0*/ MOVT        R3, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e8] 
    /*000008f4*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*000008f8*/ MOV         R2, #225                    @ 0xe1 
    /*000008fc*/ LDR         R1, [PC, #4]                @ 0x0000000000000908 
    /*00000900*/ BL          0x0000000000000900          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00000904*/ B           VencInitRoiCfg_x8b0
    /*00000908*/ ANDEQ       R0, R0, IP, LSL #1 
FUNC_END VencInitRoiCfg


FUNC_BEGIN VencConfigOneChn
    /*0000090c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00000910*/ SUBS        R5, R0, #0 
    /*00000914*/ SUB         SP, SP, #8 
    /*00000918*/ MOV         R6, R1 
    /*0000091c*/ MOV         R7, R2 
    /*00000920*/ BLT         VencConfigOneChn_x938
    /*00000924*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00000928*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000092c*/ LDR         R3, [R3] 
    /*00000930*/ CMP         R5, R3 
    /*00000934*/ BCC         VencConfigOneChn_x954
    VencConfigOneChn_x938:
    /*00000938*/ MOV         R0, R5 
    /*0000093c*/ BL          0x0000000000000304 
    /*00000940*/ SUBS        R8, R0, #0 
    /*00000944*/ BEQ         VencConfigOneChn_x954
    VencConfigOneChn_x948:
    /*00000948*/ MOV         R0, R8 
    /*0000094c*/ ADD         SP, SP, #8 
    /*00000950*/ POP         {R4, R5, R6, R7, R8, PC} 
    VencConfigOneChn_x954:
    /*00000954*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000958*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000095c*/ MOVW        R4, #36240                  @ 0x8d90 
    /*00000960*/ LDR         R3, [R3] 
    /*00000964*/ MLA         R4, R4, R5, R3 
    /*00000968*/ LDR         R3, [R4, #68]               @ 0x44 
    /*0000096c*/ CMP         R3, #1 
    /*00000970*/ BEQ         VencConfigOneChn_x990
    /*00000974*/ MOVW        R3, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x640] 
    /*00000978*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000097c*/ MOVT        R3, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x640] 
    /*00000980*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00000984*/ MOVW        R2, #277                    @ 0x115 
    /*00000988*/ LDR         R1, [PC, #284]              @ 0x0000000000000aac 
    /*0000098c*/ BL          0x000000000000098C          @ osal_panic [R_ARM_CALL: +0x0] 
    VencConfigOneChn_x990:
    /*00000990*/ LDR         R3, [R4, #4] 
    /*00000994*/ MOVW        R2, #265                    @ 0x109 
    /*00000998*/ CMP         R3, R2 
    /*0000099c*/ BEQ         VencConfigOneChn_xa5c
    /*000009a0*/ BHI         VencConfigOneChn_x9ec
    /*000009a4*/ CMP         R3, #26 
    /*000009a8*/ BEQ         VencConfigOneChn_xa7c
    /*000009ac*/ CMP         R3, #96                     @ 0x60 
    /*000009b0*/ BNE         VencConfigOneChn_xaa0
    /*000009b4*/ MOV         R0, #10 
    /*000009b8*/ ADD         R4, R4, #32768              @ 0x8000 
    /*000009bc*/ BL          0x00000000000009BC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000009c0*/ MOV         R1, R6 
    /*000009c4*/ LDR         R3, [R4, #3308]             @ 0xcec 
    /*000009c8*/ MOV         R2, R7 
    /*000009cc*/ LDR         R6, [R0, #36]               @ 0x24 
    VencConfigOneChn_x9d0:
    /*000009d0*/ MOV         R0, R5 
    /*000009d4*/ BLX         R6 
    /*000009d8*/ LDR         R3, [R4, #3308]             @ 0xcec 
    /*000009dc*/ ADD         R3, R3, #1 
    /*000009e0*/ STR         R3, [R4, #3308]             @ 0xcec 
    /*000009e4*/ MOV         R8, R0 
    /*000009e8*/ B           VencConfigOneChn_xa24
    VencConfigOneChn_x9ec:
    /*000009ec*/ MOVW        R2, #1002                   @ 0x3ea 
    /*000009f0*/ CMP         R3, R2 
    /*000009f4*/ BEQ         VencConfigOneChn_xa7c
    /*000009f8*/ MOVW        R2, #1006                   @ 0x3ee 
    /*000009fc*/ CMP         R3, R2 
    /*00000a00*/ BNE         VencConfigOneChn_xaa0
    /*00000a04*/ MOV         R0, #44                     @ 0x2c 
    /*00000a08*/ BL          0x0000000000000A08          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00000a0c*/ MOV         R2, R6 
    /*00000a10*/ MOV         R1, #1 
    /*00000a14*/ LDR         R3, [R0, #12] 
    /*00000a18*/ MOV         R0, R5 
    /*00000a1c*/ BLX         R3 
    /*00000a20*/ MOV         R8, R0 
    VencConfigOneChn_xa24:
    /*00000a24*/ CMP         R8, #0 
    /*00000a28*/ BEQ         VencConfigOneChn_x948
    VencConfigOneChn_xa2c:
    /*00000a2c*/ STR         R5, [SP, #4] 
    /*00000a30*/ MOVW        R3, #326                    @ 0x146 
    /*00000a34*/ MOV         R1, #8 
    /*00000a38*/ STR         R3, [SP] 
    /*00000a3c*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x670] 
    /*00000a40*/ LDR         R3, [PC, #100]              @ 0x0000000000000aac 
    /*00000a44*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x670] 
    /*00000a48*/ MOV         R0, #1 
    /*00000a4c*/ BL          0x0000000000000A4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000a50*/ MOV         R0, R8 
    /*00000a54*/ ADD         SP, SP, #8 
    /*00000a58*/ POP         {R4, R5, R6, R7, R8, PC} 
    VencConfigOneChn_xa5c:
    /*00000a5c*/ MOV         R0, #13 
    /*00000a60*/ ADD         R4, R4, #32768              @ 0x8000 
    /*00000a64*/ BL          0x0000000000000A64          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00000a68*/ MOV         R1, R6 
    /*00000a6c*/ MOV         R2, R7 
    /*00000a70*/ LDR         R3, [R4, #3308]             @ 0xcec 
    /*00000a74*/ LDR         R6, [R0, #48]               @ 0x30 
    /*00000a78*/ B           VencConfigOneChn_x9d0
    VencConfigOneChn_xa7c:
    /*00000a7c*/ MOV         R0, #11 
    /*00000a80*/ BL          0x0000000000000A80          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00000a84*/ MOV         R2, R6 
    /*00000a88*/ MOV         R1, #1 
    /*00000a8c*/ LDR         R3, [R0, #40]               @ 0x28 
    /*00000a90*/ MOV         R0, R5 
    /*00000a94*/ BLX         R3 
    /*00000a98*/ MOV         R8, R0 
    /*00000a9c*/ B           VencConfigOneChn_xa24
    VencConfigOneChn_xaa0:
    /*00000aa0*/ MOVW        R8, #32776                  @ 0x8008 
    /*00000aa4*/ MOVT        R8, #40968                  @ 0xa008 
    /*00000aa8*/ B           VencConfigOneChn_xa2c
    /*00000aac*/ MULEQ       R0, IP, R0 
FUNC_END VencConfigOneChn


FUNC_BEGIN VencReadOneChn
    /*00000ab0*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00000ab4*/ SUBS        R5, R0, #0 
    /*00000ab8*/ SUB         SP, SP, #28 
    /*00000abc*/ MOV         R6, R1 
    /*00000ac0*/ MOV         R7, R2 
    /*00000ac4*/ BLT         VencReadOneChn_xc94
    /*00000ac8*/ MOVW        R4, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00000acc*/ MOVT        R4, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00000ad0*/ LDR         R3, [R4] 
    /*00000ad4*/ CMP         R5, R3 
    /*00000ad8*/ BCS         VencReadOneChn_xb78
    VencReadOneChn_xadc:
    /*00000adc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000ae0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000ae4*/ MOVW        R4, #36240                  @ 0x8d90 
    /*00000ae8*/ LDR         R3, [R3] 
    /*00000aec*/ MLA         R4, R4, R5, R3 
    /*00000af0*/ LDR         R3, [R4, #68]               @ 0x44 
    /*00000af4*/ CMP         R3, #1 
    /*00000af8*/ BEQ         VencReadOneChn_xb18
    /*00000afc*/ MOVW        R3, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x640] 
    /*00000b00*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00000b04*/ MOVT        R3, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x640] 
    /*00000b08*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00000b0c*/ MOVW        R2, #353                    @ 0x161 
    /*00000b10*/ LDR         R1, [PC, #420]              @ 0x0000000000000cbc 
    /*00000b14*/ BL          0x0000000000000B14          @ osal_panic [R_ARM_CALL: +0x0] 
    VencReadOneChn_xb18:
    /*00000b18*/ ADD         R3, R4, #32768              @ 0x8000 
    /*00000b1c*/ STR         R7, [SP, #12] 
    /*00000b20*/ STR         R6, [SP, #20] 
    /*00000b24*/ MOVW        R2, #265                    @ 0x109 
    /*00000b28*/ LDR         R3, [R3, #3304]             @ 0xce8 
    /*00000b2c*/ MOV         R7, #1 
    /*00000b30*/ STR         R7, [SP, #8] 
    /*00000b34*/ STR         R3, [SP, #16] 
    /*00000b38*/ LDR         R3, [R4, #4] 
    /*00000b3c*/ CMP         R3, R2 
    /*00000b40*/ BEQ         VencReadOneChn_xc04
    /*00000b44*/ BHI         VencReadOneChn_xbc8
    /*00000b48*/ CMP         R3, #26 
    /*00000b4c*/ BEQ         VencReadOneChn_xc70
    /*00000b50*/ CMP         R3, #96                     @ 0x60 
    /*00000b54*/ BNE         VencReadOneChn_xc24
    /*00000b58*/ MOV         R0, #10 
    /*00000b5c*/ BL          0x0000000000000B5C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00000b60*/ ADD         R1, SP, #8 
    /*00000b64*/ LDR         R3, [R0, #40]               @ 0x28 
    /*00000b68*/ MOV         R0, R5 
    /*00000b6c*/ BLX         R3 
    /*00000b70*/ ADD         SP, SP, #28 
    /*00000b74*/ POP         {R4, R5, R6, R7, PC} 
    VencReadOneChn_xb78:
    /*00000b78*/ MOVW        R3, #347                    @ 0x15b 
    /*00000b7c*/ STR         R5, [SP, #4] 
    /*00000b80*/ STR         R3, [SP] 
    /*00000b84*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x710] 
    /*00000b88*/ LDR         R3, [PC, #300]              @ 0x0000000000000cbc 
    /*00000b8c*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x710] 
    /*00000b90*/ MOV         R1, #8 
    /*00000b94*/ MOV         R0, #3 
    /*00000b98*/ BL          0x0000000000000B98          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000b9c*/ LDR         R3, [R4] 
    /*00000ba0*/ CMP         R5, R3 
    /*00000ba4*/ BCC         VencReadOneChn_xadc
    VencReadOneChn_xba8:
    /*00000ba8*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b0] 
    /*00000bac*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00000bb0*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b0] 
    /*00000bb4*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00000bb8*/ MOV         R2, #348                    @ 0x15c 
    /*00000bbc*/ LDR         R1, [PC, #248]              @ 0x0000000000000cbc 
    /*00000bc0*/ BL          0x0000000000000BC0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00000bc4*/ B           VencReadOneChn_xadc
    VencReadOneChn_xbc8:
    /*00000bc8*/ MOVW        R2, #1002                   @ 0x3ea 
    /*00000bcc*/ CMP         R3, R2 
    /*00000bd0*/ BEQ         VencReadOneChn_xc70
    /*00000bd4*/ MOVW        R2, #1006                   @ 0x3ee 
    /*00000bd8*/ CMP         R3, R2 
    /*00000bdc*/ BNE         VencReadOneChn_xc24
    /*00000be0*/ MOV         R0, #44                     @ 0x2c 
    /*00000be4*/ BL          0x0000000000000BE4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00000be8*/ MOV         R2, R6 
    /*00000bec*/ MOV         R1, R7 
    /*00000bf0*/ LDR         R3, [R0, #24] 
    /*00000bf4*/ MOV         R0, R5 
    /*00000bf8*/ BLX         R3 
    /*00000bfc*/ ADD         SP, SP, #28 
    /*00000c00*/ POP         {R4, R5, R6, R7, PC} 
    VencReadOneChn_xc04:
    /*00000c04*/ MOV         R0, #13 
    /*00000c08*/ BL          0x0000000000000C08          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00000c0c*/ ADD         R1, SP, #8 
    /*00000c10*/ LDR         R3, [R0, #52]               @ 0x34 
    /*00000c14*/ MOV         R0, R5 
    /*00000c18*/ BLX         R3 
    /*00000c1c*/ ADD         SP, SP, #28 
    /*00000c20*/ POP         {R4, R5, R6, R7, PC} 
    VencReadOneChn_xc24:
    /*00000c24*/ MOVW        R2, #387                    @ 0x183 
    /*00000c28*/ LDR         R1, [PC, #140]              @ 0x0000000000000cbc 
    /*00000c2c*/ MOVW        R3, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d4] 
    /*00000c30*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00000c34*/ MOVT        R3, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d4] 
    /*00000c38*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00000c3c*/ BL          0x0000000000000C3C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00000c40*/ MOV         R3, #388                    @ 0x184 
    /*00000c44*/ MOV         R1, #8 
    /*00000c48*/ STR         R3, [SP] 
    /*00000c4c*/ MOVW        R2, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d8] 
    /*00000c50*/ LDR         R3, [PC, #100]              @ 0x0000000000000cbc 
    /*00000c54*/ MOVT        R2, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d8] 
    /*00000c58*/ MOV         R0, #1 
    /*00000c5c*/ BL          0x0000000000000C5C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000c60*/ MOVW        R0, #32776                  @ 0x8008 
    /*00000c64*/ MOVT        R0, #40968                  @ 0xa008 
    /*00000c68*/ ADD         SP, SP, #28 
    /*00000c6c*/ POP         {R4, R5, R6, R7, PC} 
    VencReadOneChn_xc70:
    /*00000c70*/ MOV         R0, #11 
    /*00000c74*/ BL          0x0000000000000C74          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00000c78*/ MOV         R2, R6 
    /*00000c7c*/ MOV         R1, #1 
    /*00000c80*/ LDR         R3, [R0, #44]               @ 0x2c 
    /*00000c84*/ MOV         R0, R5 
    /*00000c88*/ BLX         R3 
    /*00000c8c*/ ADD         SP, SP, #28 
    /*00000c90*/ POP         {R4, R5, R6, R7, PC} 
    VencReadOneChn_xc94:
    /*00000c94*/ MOVW        R3, #347                    @ 0x15b 
    /*00000c98*/ STR         R5, [SP, #4] 
    /*00000c9c*/ STR         R3, [SP] 
    /*00000ca0*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x710] 
    /*00000ca4*/ LDR         R3, [PC, #16]               @ 0x0000000000000cbc 
    /*00000ca8*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x710] 
    /*00000cac*/ MOV         R1, #8 
    /*00000cb0*/ MOV         R0, #3 
    /*00000cb4*/ BL          0x0000000000000CB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000cb8*/ B           VencReadOneChn_xba8
    /*00000cbc*/ STRHEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VencReadOneChn


FUNC_BEGIN VencFrmRateCtl
    /*00000cc0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00000cc4*/ ADD         R5, R0, #12288              @ 0x3000 
    /*00000cc8*/ LDR         R4, [R5, #88]               @ 0x58 
    /*00000ccc*/ LDR         R6, [R5, #92]               @ 0x5c 
    /*00000cd0*/ CMN         R6, #1 
    /*00000cd4*/ CMNEQ       R4, #1 
    /*00000cd8*/ MOVEQ       R3, #1 
    /*00000cdc*/ MOVNE       R3, #0 
    /*00000ce0*/ CMP         R4, R6 
    /*00000ce4*/ ORRLE       R3, R3, #1 
    /*00000ce8*/ CMP         R3, #0 
    /*00000cec*/ BNE         VencFrmRateCtl_xd8c
    /*00000cf0*/ LDR         R3, [R0, #48]               @ 0x30 
    /*00000cf4*/ CMP         R3, #1 
    /*00000cf8*/ BEQ         VencFrmRateCtl_xda4
    /*00000cfc*/ CMP         R3, R1 
    /*00000d00*/ MOV         R9, R1 
    /*00000d04*/ MOV         R8, R0 
    /*00000d08*/ BHI         VencFrmRateCtl_xd94
    /*00000d0c*/ SUBS        R7, R1, R3 
    /*00000d10*/ BMI         VencFrmRateCtl_xdb0
    VencFrmRateCtl_xd14:
    /*00000d14*/ ASR         R3, R7, #1 
    /*00000d18*/ SUB         R3, R3, #1 
    VencFrmRateCtl_xd1c:
    /*00000d1c*/ CMP         R3, #960                    @ 0x3c0 
    /*00000d20*/ STR         R9, [R8, #48]               @ 0x30 
    /*00000d24*/ MOVLT       R1, R3 
    /*00000d28*/ MOVGE       R1, #960                    @ 0x3c0 
    /*00000d2c*/ CMP         R1, #0 
    /*00000d30*/ LDR         R3, [R5, #84]               @ 0x54 
    /*00000d34*/ BLE         VencFrmRateCtl_xd6c
    /*00000d38*/ MOV         R2, #0 
    /*00000d3c*/ MOV         R0, R2 
    VencFrmRateCtl_xd40:
    /*00000d40*/ ADD         R3, R3, R6 
    /*00000d44*/ ADD         R2, R2, #1 
    /*00000d48*/ CMP         R4, R3 
    /*00000d4c*/ SUBLE       R3, R3, R4 
    /*00000d50*/ ADDLE       R0, R0, #1 
    /*00000d54*/ CMP         R2, R1 
    /*00000d58*/ STR         R3, [R5, #84]               @ 0x54 
    /*00000d5c*/ BNE         VencFrmRateCtl_xd40
    /*00000d60*/ CMP         R0, #0 
    /*00000d64*/ ADDGT       R3, R3, R4 
    /*00000d68*/ STRGT       R3, [R5, #84]               @ 0x54 
    VencFrmRateCtl_xd6c:
    /*00000d6c*/ ADD         R3, R6, R3 
    /*00000d70*/ CMP         R4, R3 
    /*00000d74*/ STRGT       R3, [R5, #84]               @ 0x54 
    /*00000d78*/ SUBLE       R3, R3, R4 
    /*00000d7c*/ STRLE       R3, [R5, #84]               @ 0x54 
    /*00000d80*/ MOVGT       R0, #0 
    /*00000d84*/ MOVLE       R0, #1 
    /*00000d88*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencFrmRateCtl_xd8c:
    /*00000d8c*/ MOV         R0, #1 
    /*00000d90*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencFrmRateCtl_xd94:
    /*00000d94*/ SUB         R3, R1, R3 
    /*00000d98*/ ASR         R3, R3, #1 
    /*00000d9c*/ SUB         R3, R3, #1 
    /*00000da0*/ B           VencFrmRateCtl_xd1c
    VencFrmRateCtl_xda4:
    /*00000da4*/ STR         R1, [R0, #48]               @ 0x30 
    /*00000da8*/ LDR         R3, [R5, #84]               @ 0x54 
    /*00000dac*/ B           VencFrmRateCtl_xd6c
    VencFrmRateCtl_xdb0:
    /*00000db0*/ MOVW        R3, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x740] 
    /*00000db4*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00000db8*/ MOVT        R3, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x740] 
    /*00000dbc*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00000dc0*/ MOV         R2, #460                    @ 0x1cc 
    /*00000dc4*/ LDR         R1, [PC, #4]                @ 0x0000000000000dd0 
    /*00000dc8*/ BL          0x0000000000000DC8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00000dcc*/ B           VencFrmRateCtl_xd14
    /*00000dd0*/ ANDEQ       R0, R0, R0, ASR #1 
FUNC_END VencFrmRateCtl


FUNC_BEGIN VencIsSendRateOverflow
    /*00000dd4*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00000dd8*/ ADD         R4, R0, #12288              @ 0x3000 
    /*00000ddc*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*00000de0*/ LDR         R2, [R4, #172]              @ 0xac 
    /*00000de4*/ ADD         R3, R3, #1 
    /*00000de8*/ STR         R3, [R4, #168]              @ 0xa8 
    /*00000dec*/ CMP         R3, R2 
    /*00000df0*/ BHI         VencIsSendRateOverflow_xdfc
    /*00000df4*/ MOV         R0, #0 
    /*00000df8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VencIsSendRateOverflow_xdfc:
    /*00000dfc*/ MOV         R5, R0 
    /*00000e00*/ MOV         R0, #2 
    /*00000e04*/ BL          0x0000000000000E04          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00000e08*/ ADD         R7, PC, #64                 @ 0x40 
    /*00000e0c*/ LDRD        R6, [R7] 
    /*00000e10*/ LDR         R3, [R0, #88]               @ 0x58 
    /*00000e14*/ BLX         R3 
    /*00000e18*/ MOVW        IP, #12448                  @ 0x30a0 
    /*00000e1c*/ LDRD        R2, [R5, IP] 
    /*00000e20*/ SUBS        R2, R0, R2 
    /*00000e24*/ SBC         R3, R1, R3 
    /*00000e28*/ CMP         R3, R7 
    /*00000e2c*/ CMPEQ       R2, R6 
    /*00000e30*/ BLS         VencIsSendRateOverflow_xe48
    /*00000e34*/ STRD        R0, [R5, IP] 
    /*00000e38*/ MOV         R3, #1 
    /*00000e3c*/ MOV         R0, #0 
    /*00000e40*/ STR         R3, [R4, #168]              @ 0xa8 
    /*00000e44*/ POP         {R4, R5, R6, R7, R8, PC} 
    VencIsSendRateOverflow_xe48:
    /*00000e48*/ MOV         R0, #1 
    /*00000e4c*/ POP         {R4, R5, R6, R7, R8, PC} 
    /*00000e50*/ BLCC        0xFFFFFFFFFE6B3654 
    /*00000e54*/ ANDEQ       R0, R0, R0 
FUNC_END VencIsSendRateOverflow


FUNC_BEGIN VencCheckCropCfg
    /*00000e58*/ PUSH        {R4, LR} 
    /*00000e5c*/ SUB         SP, SP, #16 
    /*00000e60*/ LDR         R3, [R1] 
    /*00000e64*/ CMP         R3, #1 
    /*00000e68*/ BHI         VencCheckCropCfg_xfe8
    /*00000e6c*/ MOVNE       R0, #0 
    /*00000e70*/ BEQ         VencCheckCropCfg_xe7c
    VencCheckCropCfg_xe74:
    /*00000e74*/ ADD         SP, SP, #16 
    /*00000e78*/ POP         {R4, PC} 
    VencCheckCropCfg_xe7c:
    /*00000e7c*/ LDR         IP, [R0, #4] 
    /*00000e80*/ CMP         IP, #26 
    /*00000e84*/ BEQ         VencCheckCropCfg_xf78
    VencCheckCropCfg_xe88:
    /*00000e88*/ LDR         R3, [R1, #4] 
    /*00000e8c*/ CMP         R3, #0 
    /*00000e90*/ BLT         VencCheckCropCfg_x1098
    /*00000e94*/ LDR         LR, [R1, #8] 
    /*00000e98*/ CMP         LR, #0 
    /*00000e9c*/ BLT         VencCheckCropCfg_x10b0
    /*00000ea0*/ ADD         R0, R0, #12288              @ 0x3000 
    /*00000ea4*/ LDR         R2, [R1, #12] 
    /*00000ea8*/ LDR         R4, [R0, #148]              @ 0x94 
    /*00000eac*/ CMP         R2, R4 
    /*00000eb0*/ BCC         VencCheckCropCfg_x1018
    /*00000eb4*/ LDR         R1, [R1, #16] 
    /*00000eb8*/ LDR         R0, [R0, #152]              @ 0x98 
    /*00000ebc*/ CMP         R1, R0 
    /*00000ec0*/ BCC         VencCheckCropCfg_x104c
    /*00000ec4*/ TST         R3, #15 
    /*00000ec8*/ BNE         VencCheckCropCfg_x1068
    /*00000ecc*/ TST         LR, #1 
    /*00000ed0*/ BNE         VencCheckCropCfg_x1080
    /*00000ed4*/ MOVW        R3, #265                    @ 0x109 
    /*00000ed8*/ CMP         IP, #96                     @ 0x60 
    /*00000edc*/ CMPNE       IP, R3 
    /*00000ee0*/ MOVW        R0, #1006                   @ 0x3ee 
    /*00000ee4*/ MOVEQ       R3, #1 
    /*00000ee8*/ MOVNE       R3, #0 
    /*00000eec*/ CMP         IP, R0 
    /*00000ef0*/ ORREQ       R3, R3, #1 
    /*00000ef4*/ CMP         R3, #0 
    /*00000ef8*/ BNE         VencCheckCropCfg_xf34
    /*00000efc*/ MOVW        R3, #1002                   @ 0x3ea 
    /*00000f00*/ CMP         IP, R3 
    /*00000f04*/ CMPNE       IP, #26 
    /*00000f08*/ BNE         VencCheckCropCfg_xfb8
    /*00000f0c*/ ORR         R0, R2, R1 
    /*00000f10*/ ANDS        R0, R0, #3 
    /*00000f14*/ BEQ         VencCheckCropCfg_xe74
    /*00000f18*/ STR         R2, [SP, #8] 
    /*00000f1c*/ MOV         R3, #660                    @ 0x294 
    /*00000f20*/ MOVW        R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa00] 
    /*00000f24*/ STR         R1, [SP, #12] 
    /*00000f28*/ STR         IP, [SP, #4] 
    /*00000f2c*/ MOVT        R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa00] 
    /*00000f30*/ B           VencCheckCropCfg_xf58
    VencCheckCropCfg_xf34:
    /*00000f34*/ ORR         R0, R2, R1 
    /*00000f38*/ ANDS        R0, R0, #1 
    /*00000f3c*/ BEQ         VencCheckCropCfg_xe74
    /*00000f40*/ STR         R2, [SP, #8] 
    /*00000f44*/ MOVW        R2, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9ac] 
    /*00000f48*/ MOVT        R2, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9ac] 
    /*00000f4c*/ MOVW        R3, #646                    @ 0x286 
    /*00000f50*/ STR         R1, [SP, #12] 
    /*00000f54*/ STR         IP, [SP, #4] 
    VencCheckCropCfg_xf58:
    /*00000f58*/ STR         R3, [SP] 
    /*00000f5c*/ MOV         R1, #8 
    /*00000f60*/ LDR         R3, [PC, #352]              @ 0x00000000000010c8 
    /*00000f64*/ MOV         R0, #3 
    /*00000f68*/ BL          0x0000000000000F68          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000f6c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00000f70*/ MOVT        R0, #40968                  @ 0xa008 
    /*00000f74*/ B           VencCheckCropCfg_xe74
    VencCheckCropCfg_xf78:
    /*00000f78*/ ADD         R3, R0, #12288              @ 0x3000 
    /*00000f7c*/ LDR         R3, [R3, #672]              @ 0x2a0 
    /*00000f80*/ CMP         R3, #1 
    /*00000f84*/ BNE         VencCheckCropCfg_xe88
    /*00000f88*/ STR         R3, [SP, #4] 
    /*00000f8c*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7a0] 
    /*00000f90*/ MOV         R3, #576                    @ 0x240 
    /*00000f94*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7a0] 
    /*00000f98*/ STR         R3, [SP] 
    /*00000f9c*/ MOV         R1, #8 
    /*00000fa0*/ LDR         R3, [PC, #288]              @ 0x00000000000010c8 
    /*00000fa4*/ MOV         R0, #3 
    /*00000fa8*/ BL          0x0000000000000FA8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000fac*/ MOVW        R0, #32777                  @ 0x8009 
    /*00000fb0*/ MOVT        R0, #40968                  @ 0xa008 
    /*00000fb4*/ B           VencCheckCropCfg_xe74
    VencCheckCropCfg_xfb8:
    /*00000fb8*/ MOVW        R3, #667                    @ 0x29b 
    /*00000fbc*/ STR         IP, [SP, #4] 
    /*00000fc0*/ STR         R3, [SP] 
    /*00000fc4*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa54] 
    /*00000fc8*/ LDR         R3, [PC, #248]              @ 0x00000000000010c8 
    /*00000fcc*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa54] 
    /*00000fd0*/ MOV         R1, #8 
    /*00000fd4*/ MOV         R0, #3 
    /*00000fd8*/ BL          0x0000000000000FD8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000fdc*/ MOVW        R0, #32776                  @ 0x8008 
    /*00000fe0*/ MOVT        R0, #40968                  @ 0xa008 
    /*00000fe4*/ B           VencCheckCropCfg_xe74
    VencCheckCropCfg_xfe8:
    /*00000fe8*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x750] 
    /*00000fec*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x750] 
    /*00000ff0*/ STR         R3, [SP, #4] 
    /*00000ff4*/ MOVW        R3, #565                    @ 0x235 
    /*00000ff8*/ STR         R3, [SP] 
    VencCheckCropCfg_xffc:
    /*00000ffc*/ LDR         R3, [PC, #196]              @ 0x00000000000010c8 
    /*00001000*/ MOV         R1, #8 
    /*00001004*/ MOV         R0, #3 
    /*00001008*/ BL          0x0000000000001008          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000100c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00001010*/ MOVT        R0, #40968                  @ 0xa008 
    /*00001014*/ B           VencCheckCropCfg_xe74
    VencCheckCropCfg_x1018:
    /*00001018*/ STR         R2, [SP, #4] 
    /*0000101c*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x878] 
    /*00001020*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x878] 
    /*00001024*/ MOVW        R3, #603                    @ 0x25b 
    /*00001028*/ STR         R4, [SP, #8] 
    /*0000102c*/ STR         R3, [SP] 
    VencCheckCropCfg_x1030:
    /*00001030*/ LDR         R3, [PC, #144]              @ 0x00000000000010c8 
    /*00001034*/ MOV         R1, #8 
    /*00001038*/ MOV         R0, #3 
    /*0000103c*/ BL          0x000000000000103C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001040*/ MOVW        R0, #32771                  @ 0x8003 
    /*00001044*/ MOVT        R0, #40968                  @ 0xa008 
    /*00001048*/ B           VencCheckCropCfg_xe74
    VencCheckCropCfg_x104c:
    /*0000104c*/ MOV         R3, #612                    @ 0x264 
    /*00001050*/ MOVW        R2, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c8] 
    /*00001054*/ STR         R0, [SP, #8] 
    /*00001058*/ MOVT        R2, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c8] 
    /*0000105c*/ STR         R1, [SP, #4] 
    /*00001060*/ STR         R3, [SP] 
    /*00001064*/ B           VencCheckCropCfg_x1030
    VencCheckCropCfg_x1068:
    /*00001068*/ STR         R3, [SP, #4] 
    /*0000106c*/ MOVW        R2, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x910] 
    /*00001070*/ MOVW        R3, #621                    @ 0x26d 
    /*00001074*/ MOVT        R2, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x910] 
    /*00001078*/ STR         R3, [SP] 
    /*0000107c*/ B           VencCheckCropCfg_xffc
    VencCheckCropCfg_x1080:
    /*00001080*/ MOVW        R3, #630                    @ 0x276 
    /*00001084*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x960] 
    /*00001088*/ STR         LR, [SP, #4] 
    /*0000108c*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x960] 
    /*00001090*/ STR         R3, [SP] 
    /*00001094*/ B           VencCheckCropCfg_xffc
    VencCheckCropCfg_x1098:
    /*00001098*/ STR         R3, [SP, #4] 
    /*0000109c*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f0] 
    /*000010a0*/ MOVW        R3, #585                    @ 0x249 
    /*000010a4*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f0] 
    /*000010a8*/ STR         R3, [SP] 
    /*000010ac*/ B           VencCheckCropCfg_xffc
    VencCheckCropCfg_x10b0:
    /*000010b0*/ MOVW        R3, #594                    @ 0x252 
    /*000010b4*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x834] 
    /*000010b8*/ STR         LR, [SP, #4] 
    /*000010bc*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x834] 
    /*000010c0*/ STR         R3, [SP] 
    /*000010c4*/ B           VencCheckCropCfg_xffc
    /*000010c8*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VencCheckCropCfg


FUNC_BEGIN VencProcGetPixelFormat
    /*000010cc*/ CMP         R0, #26 
    /*000010d0*/ CMPNE       R0, #23 
    /*000010d4*/ MOVEQ       R3, #0 
    /*000010d8*/ MOVNE       R3, #4 
    /*000010dc*/ CMP         R0, #25 
    /*000010e0*/ CMPNE       R0, #22 
    /*000010e4*/ MOVEQ       R3, #1 
    /*000010e8*/ CMP         R0, #27 
    /*000010ec*/ CMPNE       R0, #24 
    /*000010f0*/ MOVEQ       R3, #2 
    /*000010f4*/ CMP         R0, #39                     @ 0x27 
    /*000010f8*/ MOVNE       R0, R3 
    /*000010fc*/ MOVEQ       R0, #3 
    /*00001100*/ BX          LR 
FUNC_END VencProcGetPixelFormat


FUNC_BEGIN VencReigster2Chnl
    /*00001104*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00001108*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000110c*/ PUSH        {R4, R5, LR} 
    /*00001110*/ MOV         R4, R0 
    /*00001114*/ LDR         R3, [R2] 
    /*00001118*/ MOVW        R0, #36240                  @ 0x8d90 
    /*0000111c*/ SUB         SP, SP, #52                 @ 0x34 
    /*00001120*/ MOVW        R1, #0                      @ VENC_InqTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0x232cc] 
    /*00001124*/ MOVT        R1, #0                      @ VENC_InqTaskCallBack [R_ARM_MOVT_ABS: .text+0x232cc] 
    /*00001128*/ MOVW        R2, #0                      @ VENC_ReadRegsCallBack [R_ARM_MOVW_ABS_NC: .text+0x25990] 
    /*0000112c*/ MLA         R3, R0, R4, R3 
    /*00001130*/ STR         R1, [SP, #24] 
    /*00001134*/ MOVT        R2, #0                      @ VENC_ReadRegsCallBack [R_ARM_MOVT_ABS: .text+0x25990] 
    /*00001138*/ STR         R2, [SP, #28] 
    /*0000113c*/ MOVW        R2, #0                      @ VENC_ConfigRegsCallBack [R_ARM_MOVW_ABS_NC: .text+0x2590c] 
    /*00001140*/ MOVT        R2, #0                      @ VENC_ConfigRegsCallBack [R_ARM_MOVT_ABS: .text+0x2590c] 
    /*00001144*/ ADD         R1, R3, #12288              @ 0x3000 
    /*00001148*/ STR         R2, [SP, #32] 
    /*0000114c*/ ADD         R2, R1, #60                 @ 0x3c 
    /*00001150*/ STR         R2, [SP, #44]               @ 0x2c 
    /*00001154*/ LDR         LR, [R1, #1096]             @ 0x448 
    /*00001158*/ MOVW        R0, #265                    @ 0x109 
    /*0000115c*/ LDR         IP, [R3, #12] 
    /*00001160*/ LDR         R2, [R1, #1100]             @ 0x44c 
    /*00001164*/ STR         LR, [SP, #36]               @ 0x24 
    /*00001168*/ STR         IP, [SP, #12] 
    /*0000116c*/ STR         R2, [SP, #40]               @ 0x28 
    /*00001170*/ LDR         R2, [R3, #4] 
    /*00001174*/ CMP         R2, R0 
    /*00001178*/ BEQ         VencReigster2Chnl_x1190
    /*0000117c*/ BHI         VencReigster2Chnl_x1200
    /*00001180*/ CMP         R2, #26 
    /*00001184*/ BEQ         VencReigster2Chnl_x1250
    /*00001188*/ CMP         R2, #96                     @ 0x60 
    /*0000118c*/ BNE         VencReigster2Chnl_x1218
    VencReigster2Chnl_x1190:
    /*00001190*/ MOVW        R1, #0                      @ VENC_StartOneFrameH264 [R_ARM_MOVW_ABS_NC: .text+0x24188] 
    /*00001194*/ MOVW        R2, #0                      @ VENC_IntHandlerH264 [R_ARM_MOVW_ABS_NC: .text+0x24bb4] 
    /*00001198*/ MOVT        R1, #0                      @ VENC_StartOneFrameH264 [R_ARM_MOVT_ABS: .text+0x24188] 
    /*0000119c*/ MOVT        R2, #0                      @ VENC_IntHandlerH264 [R_ARM_MOVT_ABS: .text+0x24bb4] 
    /*000011a0*/ STR         R1, [SP, #16] 
    /*000011a4*/ STR         R2, [SP, #20] 
    /*000011a8*/ LDR         R3, [R3, #8] 
    /*000011ac*/ STR         R3, [SP, #8] 
    VencReigster2Chnl_x11b0:
    /*000011b0*/ MOV         R0, #4 
    /*000011b4*/ BL          0x00000000000011B4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000011b8*/ ADD         R1, SP, #8 
    /*000011bc*/ LDR         R3, [R0] 
    /*000011c0*/ MOV         R0, R4 
    /*000011c4*/ BLX         R3 
    /*000011c8*/ SUBS        R5, R0, #0 
    /*000011cc*/ BEQ         VencReigster2Chnl_x11f4
    /*000011d0*/ MOVW        R3, #769                    @ 0x301 
    /*000011d4*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xac8] 
    /*000011d8*/ STR         R3, [SP] 
    /*000011dc*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0xac8] 
    /*000011e0*/ STR         R4, [SP, #4] 
    /*000011e4*/ MOV         R1, #8 
    /*000011e8*/ LDR         R3, [PC, #132]              @ 0x0000000000001274 
    /*000011ec*/ MOV         R0, #3 
    /*000011f0*/ BL          0x00000000000011F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencReigster2Chnl_x11f4:
    /*000011f4*/ MOV         R0, R5 
    /*000011f8*/ ADD         SP, SP, #52                 @ 0x34 
    /*000011fc*/ POP         {R4, R5, PC} 
    VencReigster2Chnl_x1200:
    /*00001200*/ MOVW        R1, #1002                   @ 0x3ea 
    /*00001204*/ CMP         R2, R1 
    /*00001208*/ BEQ         VencReigster2Chnl_x1250
    /*0000120c*/ MOVW        R1, #1006                   @ 0x3ee 
    /*00001210*/ CMP         R2, R1 
    /*00001214*/ BEQ         VencReigster2Chnl_x1250
    VencReigster2Chnl_x1218:
    /*00001218*/ STR         R2, [SP, #4] 
    /*0000121c*/ MOVW        R3, #761                    @ 0x2f9 
    /*00001220*/ MOV         R1, #8 
    /*00001224*/ STR         R3, [SP] 
    /*00001228*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa8c] 
    /*0000122c*/ LDR         R3, [PC, #64]               @ 0x0000000000001274 
    /*00001230*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa8c] 
    /*00001234*/ MOV         R0, #3 
    /*00001238*/ BL          0x0000000000001238          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000123c*/ MOVW        R5, #32776                  @ 0x8008 
    /*00001240*/ MOVT        R5, #40968                  @ 0xa008 
    /*00001244*/ MOV         R0, R5 
    /*00001248*/ ADD         SP, SP, #52                 @ 0x34 
    /*0000124c*/ POP         {R4, R5, PC} 
    VencReigster2Chnl_x1250:
    /*00001250*/ MOVW        R1, #0                      @ VENC_StartOneFrameJpeg [R_ARM_MOVW_ABS_NC: .text+0x24e44] 
    /*00001254*/ MOVW        R2, #0                      @ VENC_IntHandlerJpeg [R_ARM_MOVW_ABS_NC: .text+0x2534c] 
    /*00001258*/ MOVT        R1, #0                      @ VENC_StartOneFrameJpeg [R_ARM_MOVT_ABS: .text+0x24e44] 
    /*0000125c*/ MOVT        R2, #0                      @ VENC_IntHandlerJpeg [R_ARM_MOVT_ABS: .text+0x2534c] 
    /*00001260*/ STR         R1, [SP, #16] 
    /*00001264*/ STR         R2, [SP, #20] 
    /*00001268*/ LDR         R3, [R3, #8] 
    /*0000126c*/ STR         R3, [SP, #8] 
    /*00001270*/ B           VencReigster2Chnl_x11b0
    /*00001274*/ ANDEQ       R0, R0, R4, ROR #1 
FUNC_END VencReigster2Chnl


FUNC_BEGIN VencGetFrmAddInfo
    /*00001278*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000127c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00001280*/ PUSH        {R4, LR} 
    /*00001284*/ MOVW        LR, #36240                  @ 0x8d90 
    /*00001288*/ LDR         R3, [R3] 
    /*0000128c*/ SUB         SP, SP, #8 
    /*00001290*/ MOV         R2, #0 
    /*00001294*/ MLA         LR, LR, R0, R3 
    /*00001298*/ ADD         R3, LR, #14592              @ 0x3900 
    /*0000129c*/ ADD         R3, R3, #48                 @ 0x30 
    VencGetFrmAddInfo_x12a0:
    /*000012a0*/ LDR         IP, [R3] 
    /*000012a4*/ ADD         R3, R3, #3056               @ 0xbf0 
    /*000012a8*/ CMP         IP, #1 
    /*000012ac*/ BNE         VencGetFrmAddInfo_x12ec
    /*000012b0*/ ADD         R2, R2, #1 
    /*000012b4*/ CMP         R2, #7 
    /*000012b8*/ BNE         VencGetFrmAddInfo_x12a0
    /*000012bc*/ STR         R0, [SP, #4] 
    /*000012c0*/ MOV         R3, #796                    @ 0x31c 
    /*000012c4*/ MOV         R1, #8 
    /*000012c8*/ STR         R3, [SP] 
    /*000012cc*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb00] 
    /*000012d0*/ LDR         R3, [PC, #68]               @ 0x000000000000131c 
    /*000012d4*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb00] 
    /*000012d8*/ MOV         R0, #3 
    /*000012dc*/ BL          0x00000000000012DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000012e0*/ MVN         R0, #0 
    /*000012e4*/ ADD         SP, SP, #8 
    /*000012e8*/ POP         {R4, PC} 
    VencGetFrmAddInfo_x12ec:
    /*000012ec*/ MOV         R3, #3056                   @ 0xbf0 
    /*000012f0*/ MOVW        IP, #14640                  @ 0x3930 
    /*000012f4*/ MUL         R2, R3, R2 
    /*000012f8*/ MOV         R0, #0 
    /*000012fc*/ MOV         R4, #1 
    /*00001300*/ ADD         R3, LR, R2 
    /*00001304*/ ADD         R2, R2, IP 
    /*00001308*/ ADD         LR, LR, R2 
    /*0000130c*/ STR         LR, [R1, #44]               @ 0x2c 
    /*00001310*/ STR         R4, [R3, IP] 
    /*00001314*/ ADD         SP, SP, #8 
    /*00001318*/ POP         {R4, PC} 
    /*0000131c*/ STRDEQ      R0, [R0], -R8 
FUNC_END VencGetFrmAddInfo


FUNC_BEGIN VencPutFrmAddInfo
    /*00001320*/ LDR         R2, [R0, #44]               @ 0x2c 
    /*00001324*/ CMP         R2, #0 
    /*00001328*/ BXEQ        LR 
    /*0000132c*/ MOV         R3, #0 
    /*00001330*/ STR         R3, [R2] 
    /*00001334*/ LDR         R2, [R0, #44]               @ 0x2c 
    /*00001338*/ STR         R3, [R2, #2792]             @ 0xae8 
    /*0000133c*/ STR         R3, [R0] 
    /*00001340*/ STR         R3, [R0, #4] 
    /*00001344*/ STR         R3, [R0, #44]               @ 0x2c 
    /*00001348*/ BX          LR 
FUNC_END VencPutFrmAddInfo


FUNC_BEGIN VencGetOverLayEx
    /*0000134c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00001350*/ SUBS        R6, R1, #0 
    /*00001354*/ SUB         SP, SP, #36                 @ 0x24 
    /*00001358*/ MOV         R7, R0 
    /*0000135c*/ BEQ         VencGetOverLayEx_x1504
    VencGetOverLayEx_x1360:
    /*00001360*/ LDR         R4, [R6, #44]               @ 0x2c 
    /*00001364*/ CMP         R4, #0 
    /*00001368*/ BEQ         VencGetOverLayEx_x14dc
    /*0000136c*/ MOV         R5, #0 
    /*00001370*/ MOV         R0, #3 
    /*00001374*/ STR         R5, [R6, #4] 
    /*00001378*/ STR         R5, [R4, #2340]             @ 0x924 
    /*0000137c*/ STR         R5, [R4, #2336]             @ 0x920 
    /*00001380*/ BL          0x0000000000001380          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00001384*/ CMP         R0, R5 
    /*00001388*/ BEQ         VencGetOverLayEx_x14ac
    /*0000138c*/ MOV         R0, #3 
    /*00001390*/ BL          0x0000000000001390          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00001394*/ LDR         R3, [R0, #8] 
    /*00001398*/ CMP         R3, R5 
    /*0000139c*/ BEQ         VencGetOverLayEx_x14ac
    /*000013a0*/ MOV         R0, #3 
    /*000013a4*/ STR         R5, [SP, #12] 
    /*000013a8*/ STR         R7, [SP, #16] 
    /*000013ac*/ MOV         R5, #8 
    /*000013b0*/ STR         R5, [SP, #8] 
    /*000013b4*/ BL          0x00000000000013B4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000013b8*/ ADD         R2, SP, #20 
    /*000013bc*/ ADD         R1, SP, R5 
    /*000013c0*/ LDR         R3, [R0, #8] 
    /*000013c4*/ MOV         R0, #3 
    /*000013c8*/ BLX         R3 
    /*000013cc*/ CMP         R0, #0 
    /*000013d0*/ BNE         VencGetOverLayEx_x14b4
    /*000013d4*/ LDR         IP, [SP, #20] 
    /*000013d8*/ LDR         R2, [SP, #24] 
    /*000013dc*/ CMP         IP, #0 
    /*000013e0*/ STR         IP, [R4, #2340]             @ 0x924 
    /*000013e4*/ MOVNE       R3, #1 
    /*000013e8*/ MOVEQ       R3, #0 
    /*000013ec*/ STR         R2, [R4, #2336]             @ 0x920 
    /*000013f0*/ STR         R3, [R6, #4] 
    /*000013f4*/ BEQ         VencGetOverLayEx_x14ac
    /*000013f8*/ MOV         R2, #56                     @ 0x38 
    /*000013fc*/ MOV         R3, R4 
    /*00001400*/ MLA         IP, R2, IP, R4 
    /*00001404*/ LDR         R2, [SP, #28] 
    /*00001408*/ MOVW        LR, #2376                   @ 0x948 
    VencGetOverLayEx_x140c:
    /*0000140c*/ LDR         R1, [R2, #8] 
    /*00001410*/ LDR         R1, [R1, #112]              @ 0x70 
    /*00001414*/ STR         R1, [R3, #2396]             @ 0x95c 
    /*00001418*/ LDR         R1, [R2, #8] 
    /*0000141c*/ LDR         R1, [R1, #8] 
    /*00001420*/ STR         R1, [R3, #2344]             @ 0x928 
    /*00001424*/ LDR         R1, [R2, #8] 
    /*00001428*/ LDR         R1, [R1, #12] 
    /*0000142c*/ STR         R1, [R3, #2348]             @ 0x92c 
    /*00001430*/ LDR         R1, [R2, #8] 
    /*00001434*/ LDR         R1, [R1, #16] 
    /*00001438*/ STR         R1, [R3, #2352]             @ 0x930 
    /*0000143c*/ LDR         R1, [R2, #8] 
    /*00001440*/ LDR         R1, [R1, #20] 
    /*00001444*/ STR         R1, [R3, #2356]             @ 0x934 
    /*00001448*/ LDR         R1, [R2, #8] 
    /*0000144c*/ LDR         R1, [R1, #80]               @ 0x50 
    /*00001450*/ STR         R1, [R3, #2372]             @ 0x944 
    /*00001454*/ LDR         R1, [R2, #8] 
    /*00001458*/ LDR         R1, [R1, #76]               @ 0x4c 
    /*0000145c*/ STR         R1, [R3, #2368]             @ 0x940 
    /*00001460*/ LDR         R1, [R2, #8] 
    /*00001464*/ LDR         R1, [R1, #72]               @ 0x48 
    /*00001468*/ STR         R1, [R3, #2364]             @ 0x93c 
    /*0000146c*/ LDR         R1, [R2, #8] 
    /*00001470*/ LDR         R1, [R1, #64]               @ 0x40 
    /*00001474*/ STR         R1, [R3, #2360]             @ 0x938 
    /*00001478*/ LDR         R1, [R2, #8] 
    /*0000147c*/ LDRD        R0, [R1, #88]               @ 0x58 
    /*00001480*/ STRD        R0, [R3, LR] 
    /*00001484*/ ADD         R3, R3, #56                 @ 0x38 
    /*00001488*/ LDR         R1, [R2, #8] 
    /*0000148c*/ LDR         R1, [R1, #104]              @ 0x68 
    /*00001490*/ STR         R1, [R3, #2328]             @ 0x918 
    /*00001494*/ LDR         R1, [R2, #4] 
    /*00001498*/ STR         R1, [R3, #2336]             @ 0x920 
    /*0000149c*/ LDR         R1, [R2], #12 
    /*000014a0*/ STR         R1, [R3, #2332]             @ 0x91c 
    /*000014a4*/ CMP         R3, IP 
    /*000014a8*/ BNE         VencGetOverLayEx_x140c
    VencGetOverLayEx_x14ac:
    /*000014ac*/ ADD         SP, SP, #36                 @ 0x24 
    /*000014b0*/ POP         {R4, R5, R6, R7, PC} 
    VencGetOverLayEx_x14b4:
    /*000014b4*/ MOV         R1, R5 
    /*000014b8*/ MOVW        R3, #850                    @ 0x352 
    /*000014bc*/ MOVW        R2, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb90] 
    /*000014c0*/ STR         R3, [SP] 
    /*000014c4*/ MOVT        R2, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb90] 
    /*000014c8*/ LDR         R3, [PC, #84]               @ 0x0000000000001524 
    /*000014cc*/ MOV         R0, #3 
    /*000014d0*/ BL          0x00000000000014D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000014d4*/ ADD         SP, SP, #36                 @ 0x24 
    /*000014d8*/ POP         {R4, R5, R6, R7, PC} 
    VencGetOverLayEx_x14dc:
    /*000014dc*/ MOVW        R3, #833                    @ 0x341 
    /*000014e0*/ MOV         R1, #8 
    /*000014e4*/ STR         R3, [SP] 
    /*000014e8*/ MOVW        R2, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb58] 
    /*000014ec*/ LDR         R3, [PC, #48]               @ 0x0000000000001524 
    /*000014f0*/ MOVT        R2, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb58] 
    /*000014f4*/ MOV         R0, #3 
    /*000014f8*/ BL          0x00000000000014F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000014fc*/ ADD         SP, SP, #36                 @ 0x24 
    /*00001500*/ POP         {R4, R5, R6, R7, PC} 
    VencGetOverLayEx_x1504:
    /*00001504*/ MOVW        R3, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb38] 
    /*00001508*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000150c*/ MOVT        R3, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb38] 
    /*00001510*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00001514*/ MOV         R2, #828                    @ 0x33c 
    /*00001518*/ LDR         R1, [PC, #4]                @ 0x0000000000001524 
    /*0000151c*/ BL          0x000000000000151C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00001520*/ B           VencGetOverLayEx_x1360
    /*00001524*/ ANDEQ       R0, R0, IP, LSL #2 
FUNC_END VencGetOverLayEx


FUNC_BEGIN VencPutOverLayEx
    /*00001528*/ PUSH        {R4, R5, LR} 
    /*0000152c*/ SUB         SP, SP, #100                @ 0x64 
    /*00001530*/ LDR         R4, [R1, #44]               @ 0x2c 
    /*00001534*/ CMP         R4, #0 
    /*00001538*/ BEQ         VencPutOverLayEx_x161c
    /*0000153c*/ MOV         R3, R0 
    /*00001540*/ MOV         R0, #3 
    /*00001544*/ STR         R3, [SP, #28] 
    /*00001548*/ MOV         R2, #8 
    /*0000154c*/ MOV         R3, #0 
    /*00001550*/ MOV         R5, R1 
    /*00001554*/ STR         R2, [SP, #20] 
    /*00001558*/ STR         R3, [SP, #24] 
    /*0000155c*/ BL          0x000000000000155C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00001560*/ CMP         R0, #0 
    /*00001564*/ BEQ         VencPutOverLayEx_x15ec
    /*00001568*/ LDR         R0, [R4, #2340]             @ 0x924 
    /*0000156c*/ CMP         R0, #0 
    /*00001570*/ STR         R0, [SP, #12] 
    /*00001574*/ BEQ         VencPutOverLayEx_x15a4
    /*00001578*/ MOV         R3, #56                     @ 0x38 
    /*0000157c*/ ADD         R2, SP, #36                 @ 0x24 
    /*00001580*/ MLA         R0, R3, R0, R4 
    /*00001584*/ MOV         R3, R4 
    VencPutOverLayEx_x1588:
    /*00001588*/ LDR         R1, [R3, #2388]             @ 0x954 
    /*0000158c*/ ADD         R3, R3, #56                 @ 0x38 
    /*00001590*/ STR         R1, [R2, #-4] 
    /*00001594*/ LDR         R1, [R3, #2336]             @ 0x920 
    /*00001598*/ CMP         R3, R0 
    /*0000159c*/ STR         R1, [R2], #8 
    /*000015a0*/ BNE         VencPutOverLayEx_x1588
    VencPutOverLayEx_x15a4:
    /*000015a4*/ MOV         R0, #3 
    /*000015a8*/ ADD         R3, SP, #32 
    /*000015ac*/ STR         R3, [SP, #16] 
    /*000015b0*/ BL          0x00000000000015B0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000015b4*/ LDR         R3, [R0, #12] 
    /*000015b8*/ CMP         R3, #0 
    /*000015bc*/ BEQ         VencPutOverLayEx_x15e4
    /*000015c0*/ MOV         R0, #3 
    /*000015c4*/ BL          0x00000000000015C4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000015c8*/ ADD         R2, SP, #12 
    /*000015cc*/ ADD         R1, SP, #20 
    /*000015d0*/ LDR         R3, [R0, #12] 
    /*000015d4*/ MOV         R0, #3 
    /*000015d8*/ BLX         R3 
    /*000015dc*/ CMP         R0, #0 
    /*000015e0*/ BNE         VencPutOverLayEx_x15fc
    VencPutOverLayEx_x15e4:
    /*000015e4*/ MOV         R3, #0 
    /*000015e8*/ STR         R3, [R4, #2340]             @ 0x924 
    VencPutOverLayEx_x15ec:
    /*000015ec*/ MOV         R3, #0 
    /*000015f0*/ STR         R3, [R5, #4] 
    /*000015f4*/ ADD         SP, SP, #100                @ 0x64 
    /*000015f8*/ POP         {R4, R5, PC} 
    VencPutOverLayEx_x15fc:
    /*000015fc*/ MOVW        R3, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbfc] 
    /*00001600*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00001604*/ MOVT        R3, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbfc] 
    /*00001608*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000160c*/ MOVW        R2, #917                    @ 0x395 
    /*00001610*/ LDR         R1, [PC, #44]               @ 0x0000000000001644 
    /*00001614*/ BL          0x0000000000001614          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00001618*/ B           VencPutOverLayEx_x15e4
    VencPutOverLayEx_x161c:
    /*0000161c*/ MOV         R3, #896                    @ 0x380 
    /*00001620*/ MOV         R1, #8 
    /*00001624*/ STR         R3, [SP] 
    /*00001628*/ MOVW        R2, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbc4] 
    /*0000162c*/ LDR         R3, [PC, #16]               @ 0x0000000000001644 
    /*00001630*/ MOVT        R2, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbc4] 
    /*00001634*/ MOV         R0, #3 
    /*00001638*/ BL          0x0000000000001638          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000163c*/ ADD         SP, SP, #100                @ 0x64 
    /*00001640*/ POP         {R4, R5, PC} 
    /*00001644*/ ANDEQ       R0, R0, R0, LSR #2 
FUNC_END VencPutOverLayEx


FUNC_BEGIN VencGetOsd
    /*00001648*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000164c*/ SUBS        SL, R1, #0 
    /*00001650*/ SUB         SP, SP, #36                 @ 0x24 
    /*00001654*/ MOV         R5, R0 
    /*00001658*/ BEQ         VencGetOsd_x1878
    VencGetOsd_x165c:
    /*0000165c*/ LDR         R3, [SL, #12] 
    /*00001660*/ CMP         R3, #0 
    /*00001664*/ BEQ         VencGetOsd_x1898
    VencGetOsd_x1668:
    /*00001668*/ LDR         R9, [R3, #380]              @ 0x17c 
    /*0000166c*/ CMP         R9, #0 
    /*00001670*/ BEQ         VencGetOsd_x1850
    /*00001674*/ MOV         R4, #0 
    /*00001678*/ MOV         R0, #3 
    /*0000167c*/ STR         R4, [R3, #336]              @ 0x150 
    /*00001680*/ STR         R4, [R9, #24] 
    /*00001684*/ STR         R4, [R9, #8] 
    /*00001688*/ STR         R4, [R9, #12] 
    /*0000168c*/ BL          0x000000000000168C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00001690*/ CMP         R0, R4 
    /*00001694*/ BEQ         VencGetOsd_x1820
    /*00001698*/ MOV         R0, #3 
    /*0000169c*/ BL          0x000000000000169C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000016a0*/ LDR         R3, [R0, #8] 
    /*000016a4*/ CMP         R3, R4 
    /*000016a8*/ BEQ         VencGetOsd_x1820
    /*000016ac*/ MOV         R0, #3 
    /*000016b0*/ STR         R5, [SP, #16] 
    /*000016b4*/ MOV         R6, #8 
    /*000016b8*/ STR         R4, [SP, #12] 
    /*000016bc*/ STR         R6, [SP, #8] 
    /*000016c0*/ BL          0x00000000000016C0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000016c4*/ ADD         R2, SP, #20 
    /*000016c8*/ ADD         R1, SP, R6 
    /*000016cc*/ LDR         R3, [R0, #8] 
    /*000016d0*/ MOV         R0, R4 
    /*000016d4*/ BLX         R3 
    /*000016d8*/ SUBS        R5, R0, #0 
    /*000016dc*/ BNE         VencGetOsd_x1828
    /*000016e0*/ LDR         R3, [SP, #20] 
    /*000016e4*/ LDR         R2, [SP, #24] 
    /*000016e8*/ CMP         R3, #0 
    /*000016ec*/ STR         R3, [R9, #24] 
    /*000016f0*/ STR         R2, [R9, #8] 
    /*000016f4*/ BEQ         VencGetOsd_x1820
    /*000016f8*/ ADD         R4, R9, #88                 @ 0x58 
    /*000016fc*/ MOV         R8, R5 
    /*00001700*/ MOV         FP, #1 
    VencGetOsd_x1704:
    /*00001704*/ LDR         R1, [SP, #28] 
    /*00001708*/ MOV         R2, #20 
    /*0000170c*/ MOV         R0, R4 
    /*00001710*/ ADD         R8, R8, #1 
    /*00001714*/ ADD         R3, R1, R5 
    /*00001718*/ ADD         R4, R4, #96                 @ 0x60 
    /*0000171c*/ LDR         IP, [R3, #8] 
    /*00001720*/ LDR         IP, [IP, #112]              @ 0x70 
    /*00001724*/ STR         IP, [R4, #-60]              @ 0xffffffc4 
    /*00001728*/ LDR         IP, [R3, #8] 
    /*0000172c*/ LDR         IP, [IP, #8] 
    /*00001730*/ STR         IP, [R4, #-152]             @ 0xffffff68 
    /*00001734*/ LDR         IP, [R3, #8] 
    /*00001738*/ LDR         IP, [IP, #12] 
    /*0000173c*/ STR         IP, [R4, #-148]             @ 0xffffff6c 
    /*00001740*/ LDR         IP, [R3, #8] 
    /*00001744*/ LDR         IP, [IP, #16] 
    /*00001748*/ STR         IP, [R4, #-144]             @ 0xffffff70 
    /*0000174c*/ LDR         IP, [R3, #8] 
    /*00001750*/ LDR         IP, [IP, #20] 
    /*00001754*/ STR         IP, [R4, #-140]             @ 0xffffff74 
    /*00001758*/ LDR         IP, [R3, #8] 
    /*0000175c*/ LDR         IP, [IP, #80]               @ 0x50 
    /*00001760*/ STR         IP, [R4, #-124]             @ 0xffffff84 
    /*00001764*/ LDR         IP, [R3, #8] 
    /*00001768*/ LDR         IP, [IP, #76]               @ 0x4c 
    /*0000176c*/ STR         IP, [R4, #-128]             @ 0xffffff80 
    /*00001770*/ LDR         IP, [R3, #8] 
    /*00001774*/ LDR         IP, [IP, #72]               @ 0x48 
    /*00001778*/ STR         IP, [R4, #-132]             @ 0xffffff7c 
    /*0000177c*/ LDR         IP, [R3, #8] 
    /*00001780*/ LDR         IP, [IP, #64]               @ 0x40 
    /*00001784*/ STR         IP, [R4, #-136]             @ 0xffffff78 
    /*00001788*/ LDR         IP, [R3, #8] 
    /*0000178c*/ LDRD        R6, [IP, #88]               @ 0x58 
    /*00001790*/ STRD        R6, [R4, #-120]             @ 0xffffff88 
    /*00001794*/ LDR         IP, [R3, #8] 
    /*00001798*/ LDR         IP, [IP, #104]              @ 0x68 
    /*0000179c*/ STR         IP, [R4, #-112]             @ 0xffffff90 
    /*000017a0*/ LDR         IP, [R3, #8] 
    /*000017a4*/ LDR         IP, [IP, #120]              @ 0x78 
    /*000017a8*/ STR         IP, [R4, #-108]             @ 0xffffff94 
    /*000017ac*/ LDR         IP, [R3, #8] 
    /*000017b0*/ LDR         IP, [IP, #124]              @ 0x7c 
    /*000017b4*/ STR         IP, [R4, #-104]             @ 0xffffff98 
    /*000017b8*/ LDR         IP, [R3, #8] 
    /*000017bc*/ LDR         IP, [IP, #128]              @ 0x80 
    /*000017c0*/ STR         IP, [R4, #-100]             @ 0xffffff9c 
    /*000017c4*/ LDR         IP, [R3, #8] 
    /*000017c8*/ LDR         IP, [IP, #152]              @ 0x98 
    /*000017cc*/ STR         IP, [R4, #-76]              @ 0xffffffb4 
    /*000017d0*/ LDR         IP, [R3, #8] 
    /*000017d4*/ LDRH        IP, [IP, #164]              @ 0xa4 
    /*000017d8*/ STRH        IP, [R4, #-72]              @ 0xffffffb8 
    /*000017dc*/ LDR         IP, [R3, #8] 
    /*000017e0*/ LDRH        IP, [IP, #166]              @ 0xa6 
    /*000017e4*/ STRH        IP, [R4, #-70]              @ 0xffffffba 
    /*000017e8*/ LDR         IP, [R3, #4] 
    /*000017ec*/ STR         IP, [R4, #-64]              @ 0xffffffc0 
    /*000017f0*/ LDR         R1, [R1, R5] 
    /*000017f4*/ ADD         R5, R5, #12 
    /*000017f8*/ STR         R1, [R4, #-68]              @ 0xffffffbc 
    /*000017fc*/ LDR         R1, [R3, #8] 
    /*00001800*/ ADD         R1, R1, #132                @ 0x84 
    /*00001804*/ BL          0x0000000000001804          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00001808*/ LDR         R2, [SP, #20] 
    /*0000180c*/ STR         FP, [R9, #12] 
    /*00001810*/ LDR         R3, [SL, #12] 
    /*00001814*/ CMP         R2, R8 
    /*00001818*/ STR         FP, [R3, #336]              @ 0x150 
    /*0000181c*/ BHI         VencGetOsd_x1704
    VencGetOsd_x1820:
    /*00001820*/ ADD         SP, SP, #36                 @ 0x24 
    /*00001824*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencGetOsd_x1828:
    /*00001828*/ MOV         R1, R6 
    /*0000182c*/ MOVW        R3, #961                    @ 0x3c1 
    /*00001830*/ MOVW        R2, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc54] 
    /*00001834*/ STR         R3, [SP] 
    /*00001838*/ MOVT        R2, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc54] 
    /*0000183c*/ LDR         R3, [PC, #120]              @ 0x00000000000018bc 
    /*00001840*/ MOV         R0, #3 
    /*00001844*/ BL          0x0000000000001844          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001848*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000184c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencGetOsd_x1850:
    /*00001850*/ MOVW        R3, #943                    @ 0x3af 
    /*00001854*/ MOV         R1, #8 
    /*00001858*/ STR         R3, [SP] 
    /*0000185c*/ MOVW        R2, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb58] 
    /*00001860*/ LDR         R3, [PC, #84]               @ 0x00000000000018bc 
    /*00001864*/ MOVT        R2, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb58] 
    /*00001868*/ MOV         R0, #3 
    /*0000186c*/ BL          0x000000000000186C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001870*/ ADD         SP, SP, #36                 @ 0x24 
    /*00001874*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencGetOsd_x1878:
    /*00001878*/ MOVW        R3, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc14] 
    /*0000187c*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00001880*/ MOVT        R3, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc14] 
    /*00001884*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00001888*/ MOVW        R2, #934                    @ 0x3a6 
    /*0000188c*/ LDR         R1, [PC, #40]               @ 0x00000000000018bc 
    /*00001890*/ BL          0x0000000000001890          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00001894*/ B           VencGetOsd_x165c
    VencGetOsd_x1898:
    /*00001898*/ MOVW        R3, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc2c] 
    /*0000189c*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*000018a0*/ MOVT        R3, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc2c] 
    /*000018a4*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*000018a8*/ MOVW        R2, #935                    @ 0x3a7 
    /*000018ac*/ LDR         R1, [PC, #8]                @ 0x00000000000018bc 
    /*000018b0*/ BL          0x00000000000018B0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000018b4*/ LDR         R3, [SL, #12] 
    /*000018b8*/ B           VencGetOsd_x1668
    /*000018bc*/ ANDEQ       R0, R0, R4, LSR R1 
FUNC_END VencGetOsd


FUNC_BEGIN VencPutOsd
    /*000018c0*/ PUSH        {R4, R5, LR} 
    /*000018c4*/ SUB         SP, SP, #228                @ 0xe4 
    /*000018c8*/ LDR         R4, [R1, #44]               @ 0x2c 
    /*000018cc*/ CMP         R4, #0 
    /*000018d0*/ BEQ         VencPutOsd_x19b4
    /*000018d4*/ MOV         R3, R0 
    /*000018d8*/ MOV         R0, #3 
    /*000018dc*/ STR         R3, [SP, #28] 
    /*000018e0*/ MOV         R2, #8 
    /*000018e4*/ MOV         R3, #0 
    /*000018e8*/ MOV         R5, R1 
    /*000018ec*/ STR         R2, [SP, #20] 
    /*000018f0*/ STR         R3, [SP, #24] 
    /*000018f4*/ BL          0x00000000000018F4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000018f8*/ CMP         R0, #0 
    /*000018fc*/ BEQ         VencPutOsd_x1984
    /*00001900*/ LDR         R0, [R4, #24] 
    /*00001904*/ ADD         IP, SP, #32 
    /*00001908*/ CMP         R0, #0 
    /*0000190c*/ STR         R0, [SP, #12] 
    /*00001910*/ ADDNE       R0, IP, R0, LSL #3 
    /*00001914*/ MOVNE       R2, R4 
    /*00001918*/ MOVNE       R3, IP 
    /*0000191c*/ BEQ         VencPutOsd_x1940
    VencPutOsd_x1920:
    /*00001920*/ LDR         R1, [R2, #116]              @ 0x74 
    /*00001924*/ ADD         R3, R3, #8 
    /*00001928*/ ADD         R2, R2, #96                 @ 0x60 
    /*0000192c*/ STR         R1, [R3, #-8] 
    /*00001930*/ LDR         R1, [R2, #24] 
    /*00001934*/ STR         R1, [R3, #-4] 
    /*00001938*/ CMP         R3, R0 
    /*0000193c*/ BNE         VencPutOsd_x1920
    VencPutOsd_x1940:
    /*00001940*/ MOV         R0, #3 
    /*00001944*/ STR         IP, [SP, #16] 
    /*00001948*/ BL          0x0000000000001948          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000194c*/ LDR         R3, [R0, #12] 
    /*00001950*/ CMP         R3, #0 
    /*00001954*/ BEQ         VencPutOsd_x197c
    /*00001958*/ MOV         R0, #3 
    /*0000195c*/ BL          0x000000000000195C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00001960*/ ADD         R2, SP, #12 
    /*00001964*/ ADD         R1, SP, #20 
    /*00001968*/ LDR         R3, [R0, #12] 
    /*0000196c*/ MOV         R0, #0 
    /*00001970*/ BLX         R3 
    /*00001974*/ CMP         R0, #0 
    /*00001978*/ BNE         VencPutOsd_x1994
    VencPutOsd_x197c:
    /*0000197c*/ MOV         R3, #0 
    /*00001980*/ STR         R3, [R4, #24] 
    VencPutOsd_x1984:
    /*00001984*/ MOV         R3, #0 
    /*00001988*/ STR         R3, [R5] 
    /*0000198c*/ ADD         SP, SP, #228                @ 0xe4 
    /*00001990*/ POP         {R4, R5, PC} 
    VencPutOsd_x1994:
    /*00001994*/ MOVW        R3, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbfc] 
    /*00001998*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000199c*/ MOVT        R3, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbfc] 
    /*000019a0*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*000019a4*/ MOVW        R2, #1054                   @ 0x41e 
    /*000019a8*/ LDR         R1, [PC, #44]               @ 0x00000000000019dc 
    /*000019ac*/ BL          0x00000000000019AC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000019b0*/ B           VencPutOsd_x197c
    VencPutOsd_x19b4:
    /*000019b4*/ MOVW        R3, #1033                   @ 0x409 
    /*000019b8*/ MOV         R1, #8 
    /*000019bc*/ STR         R3, [SP] 
    /*000019c0*/ MOVW        R2, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbc4] 
    /*000019c4*/ LDR         R3, [PC, #16]               @ 0x00000000000019dc 
    /*000019c8*/ MOVT        R2, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbc4] 
    /*000019cc*/ MOV         R0, #3 
    /*000019d0*/ BL          0x00000000000019D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000019d4*/ ADD         SP, SP, #228                @ 0xe4 
    /*000019d8*/ POP         {R4, R5, PC} 
    /*000019dc*/ ANDEQ       R0, R0, R0, ASR #2 
FUNC_END VencPutOsd


FUNC_BEGIN VencPrepareMpfOsdInfo
    /*000019e0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000019e4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000019e8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000019ec*/ MOVW        R4, #36240                  @ 0x8d90 
    /*000019f0*/ LDR         R3, [R3] 
    /*000019f4*/ SUB         SP, SP, #12 
    /*000019f8*/ MLAS        R4, R0, R4, R3 
    /*000019fc*/ BEQ         VencPrepareMpfOsdInfo_x1ae8
    VencPrepareMpfOsdInfo_x1a00:
    /*00001a00*/ ADD         R6, R4, #32768              @ 0x8000 
    /*00001a04*/ LDR         R3, [R6, #3412]             @ 0xd54 
    /*00001a08*/ CMP         R3, #0 
    /*00001a0c*/ BEQ         VencPrepareMpfOsdInfo_x1b08
    /*00001a10*/ LDR         R2, [R4, #80]               @ 0x50 
    /*00001a14*/ LDR         R2, [R2, #384]              @ 0x180 
    /*00001a18*/ CMP         R2, #0 
    /*00001a1c*/ BEQ         VencPrepareMpfOsdInfo_x1a98
    /*00001a20*/ ADD         R7, R4, #8192               @ 0x2000 
    /*00001a24*/ LDR         R2, [R7, #1036]             @ 0x40c 
    /*00001a28*/ CMP         R2, #0 
    /*00001a2c*/ BLE         VencPrepareMpfOsdInfo_x1ac0
    /*00001a30*/ LDR         R2, [R7, #1032]             @ 0x408 
    /*00001a34*/ SUBS        R2, R2, #1 
    /*00001a38*/ LDRMI       R1, [R7, #1024]             @ 0x400 
    /*00001a3c*/ ADDMI       R2, R2, R1 
    /*00001a40*/ LDR         R1, [R7, #1020]             @ 0x3fc 
    /*00001a44*/ LDR         R5, [R1, R2, LSL #2] 
    VencPrepareMpfOsdInfo_x1a48:
    /*00001a48*/ STR         R3, [R5, #380]              @ 0x17c 
    /*00001a4c*/ LDR         R3, [R6, #3368]             @ 0xd28 
    /*00001a50*/ STR         R3, [R5, #336]              @ 0x150 
    /*00001a54*/ LDR         R3, [R4, #80]               @ 0x50 
    /*00001a58*/ LDR         R3, [R3, #384]              @ 0x180 
    /*00001a5c*/ CMP         R3, #1 
    /*00001a60*/ BLS         VencPrepareMpfOsdInfo_x1a98
    /*00001a64*/ LDR         R3, [R7, #3764]             @ 0xeb4 
    /*00001a68*/ CMP         R3, #0 
    /*00001a6c*/ BLE         VencPrepareMpfOsdInfo_x1aa0
    /*00001a70*/ LDR         R3, [R7, #3760]             @ 0xeb0 
    /*00001a74*/ SUBS        R3, R3, #1 
    /*00001a78*/ LDRMI       R2, [R7, #3752]             @ 0xea8 
    /*00001a7c*/ ADDMI       R3, R3, R2 
    /*00001a80*/ LDR         R2, [R7, #3748]             @ 0xea4 
    /*00001a84*/ LDR         R5, [R2, R3, LSL #2] 
    VencPrepareMpfOsdInfo_x1a88:
    /*00001a88*/ LDR         R3, [R6, #3412]             @ 0xd54 
    /*00001a8c*/ STR         R3, [R5, #380]              @ 0x17c 
    /*00001a90*/ LDR         R3, [R6, #3368]             @ 0xd28 
    /*00001a94*/ STR         R3, [R5, #336]              @ 0x150 
    VencPrepareMpfOsdInfo_x1a98:
    /*00001a98*/ ADD         SP, SP, #12 
    /*00001a9c*/ POP         {R4, R5, R6, R7, PC} 
    VencPrepareMpfOsdInfo_x1aa0:
    /*00001aa0*/ MOVW        R3, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc98] 
    /*00001aa4*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00001aa8*/ MOVT        R3, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc98] 
    /*00001aac*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00001ab0*/ MOVW        R2, #1095                   @ 0x447 
    /*00001ab4*/ LDR         R1, [PC, #112]              @ 0x0000000000001b2c 
    /*00001ab8*/ BL          0x0000000000001AB8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00001abc*/ B           VencPrepareMpfOsdInfo_x1a88
    VencPrepareMpfOsdInfo_x1ac0:
    /*00001ac0*/ MOVW        R3, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc98] 
    /*00001ac4*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00001ac8*/ MOVT        R3, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc98] 
    /*00001acc*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00001ad0*/ MOVW        R2, #1085                   @ 0x43d 
    /*00001ad4*/ LDR         R1, [PC, #80]               @ 0x0000000000001b2c 
    /*00001ad8*/ BL          0x0000000000001AD8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00001adc*/ MOV         R5, #0 
    /*00001ae0*/ LDR         R3, [R6, #3412]             @ 0xd54 
    /*00001ae4*/ B           VencPrepareMpfOsdInfo_x1a48
    VencPrepareMpfOsdInfo_x1ae8:
    /*00001ae8*/ MOVW        R3, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc80] 
    /*00001aec*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00001af0*/ MOVT        R3, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc80] 
    /*00001af4*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00001af8*/ MOVW        R2, #1073                   @ 0x431 
    /*00001afc*/ LDR         R1, [PC, #40]               @ 0x0000000000001b2c 
    /*00001b00*/ BL          0x0000000000001B00          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00001b04*/ B           VencPrepareMpfOsdInfo_x1a00
    VencPrepareMpfOsdInfo_x1b08:
    /*00001b08*/ MOVW        R3, #1078                   @ 0x436 
    /*00001b0c*/ MOVW        R2, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb58] 
    /*00001b10*/ STR         R3, [SP] 
    /*00001b14*/ MOVT        R2, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb58] 
    /*00001b18*/ LDR         R3, [PC, #12]               @ 0x0000000000001b2c 
    /*00001b1c*/ MOV         R1, #8 
    /*00001b20*/ MOV         R0, #3 
    /*00001b24*/ BL          0x0000000000001B24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001b28*/ B           VencPrepareMpfOsdInfo_x1a98
    /*00001b2c*/ ANDEQ       R0, R0, IP, ASR #2 
FUNC_END VencPrepareMpfOsdInfo


FUNC_BEGIN VencGetRoi
    /*00001b30*/ CMP         R3, #5 
    /*00001b34*/ CMPNE       R3, #0 
    /*00001b38*/ PUSH        {R4, R5, LR} 
    /*00001b3c*/ MOVEQ       R2, #0 
    /*00001b40*/ SUB         SP, SP, #12 
    /*00001b44*/ BEQ         VencGetRoi_x1b58
    /*00001b48*/ CMP         R3, #6 
    /*00001b4c*/ MOV         R2, R3 
    /*00001b50*/ MOVEQ       R2, #2 
    /*00001b54*/ MOVNE       R2, #1 
    VencGetRoi_x1b58:
    /*00001b58*/ LDR         IP, [R1, #12] 
    /*00001b5c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00001b60*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00001b64*/ MOVW        R1, #36240                  @ 0x8d90 
    /*00001b68*/ LDR         IP, [IP, #380]              @ 0x17c 
    /*00001b6c*/ LDR         R4, [R3] 
    /*00001b70*/ CMP         IP, #0 
    /*00001b74*/ MLA         R4, R1, R0, R4 
    /*00001b78*/ BEQ         VencGetRoi_x1bb0
    /*00001b7c*/ ADD         R1, R4, R2, LSL #8 
    /*00001b80*/ ADD         R0, IP, #2784               @ 0xae0 
    /*00001b84*/ ADD         R1, R1, #13824              @ 0x3600 
    /*00001b88*/ MOV         R5, #1 
    /*00001b8c*/ ADD         R1, R1, #44                 @ 0x2c 
    /*00001b90*/ MOV         R2, #256                    @ 0x100 
    /*00001b94*/ STR         R5, [IP, #2792]             @ 0xae8 
    /*00001b98*/ ADD         R0, R0, #12 
    /*00001b9c*/ BL          0x0000000000001B9C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00001ba0*/ ADD         R4, R4, #12288              @ 0x3000 
    /*00001ba4*/ STR         R5, [R4, #1576]             @ 0x628 
    /*00001ba8*/ ADD         SP, SP, #12 
    /*00001bac*/ POP         {R4, R5, PC} 
    VencGetRoi_x1bb0:
    /*00001bb0*/ MOVW        R3, #1131                   @ 0x46b 
    /*00001bb4*/ MOV         R1, #8 
    /*00001bb8*/ STR         R3, [SP] 
    /*00001bbc*/ MOVW        R2, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcb0] 
    /*00001bc0*/ LDR         R3, [PC, #16]               @ 0x0000000000001bd8 
    /*00001bc4*/ MOVT        R2, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcb0] 
    /*00001bc8*/ MOV         R0, #3 
    /*00001bcc*/ BL          0x0000000000001BCC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001bd0*/ ADD         SP, SP, #12 
    /*00001bd4*/ POP         {R4, R5, PC} 
    /*00001bd8*/ ANDEQ       R0, R0, R4, ROR #2 
FUNC_END VencGetRoi


FUNC_BEGIN VencUpdateJpegEncodeIndex
    /*00001bdc*/ ADD         R0, R0, #32768              @ 0x8000 
    /*00001be0*/ LDRB        R3, [R0, #3352]             @ 0xd18 
    /*00001be4*/ CMP         R3, #0 
    /*00001be8*/ BNE         VencUpdateJpegEncodeIndex_x1c2c
    /*00001bec*/ LDR         R3, [R0, #3348]             @ 0xd14 
    /*00001bf0*/ CMP         R3, #4 
    /*00001bf4*/ BEQ         VencUpdateJpegEncodeIndex_x1c9c
    /*00001bf8*/ CMP         R3, #3 
    /*00001bfc*/ BEQ         VencUpdateJpegEncodeIndex_x1ca8
    /*00001c00*/ CMP         R3, #0 
    /*00001c04*/ BEQ         VencUpdateJpegEncodeIndex_x1c90
    /*00001c08*/ CMP         R3, #1 
    /*00001c0c*/ BEQ         VencUpdateJpegEncodeIndex_x1cb4
    /*00001c10*/ MOVW        R3, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d4] 
    /*00001c14*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00001c18*/ MOVT        R3, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d4] 
    /*00001c1c*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00001c20*/ MOVW        R2, #1165                   @ 0x48d 
    /*00001c24*/ LDR         R1, [PC, #148]              @ 0x0000000000001cc0 
    VencUpdateJpegEncodeIndex_x1c28:
    /*00001c28*/ B           VencUpdateJpegEncodeIndex_x1c28@ osal_panic [R_ARM_JUMP24: +0x0] 
    VencUpdateJpegEncodeIndex_x1c2c:
    /*00001c2c*/ CMP         R3, #1 
    /*00001c30*/ BEQ         VencUpdateJpegEncodeIndex_x1c50
    /*00001c34*/ MOVW        R3, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d4] 
    /*00001c38*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00001c3c*/ MOVT        R3, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d4] 
    /*00001c40*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00001c44*/ MOVW        R2, #1193                   @ 0x4a9 
    /*00001c48*/ LDR         R1, [PC, #112]              @ 0x0000000000001cc0 
    VencUpdateJpegEncodeIndex_x1c4c:
    /*00001c4c*/ B           VencUpdateJpegEncodeIndex_x1c4c@ osal_panic [R_ARM_JUMP24: +0x0] 
    VencUpdateJpegEncodeIndex_x1c50:
    /*00001c50*/ LDR         R3, [R0, #3348]             @ 0xd14 
    /*00001c54*/ CMP         R3, #4 
    /*00001c58*/ BEQ         VencUpdateJpegEncodeIndex_x1ca8
    /*00001c5c*/ CMP         R3, #0 
    /*00001c60*/ BEQ         VencUpdateJpegEncodeIndex_x1c9c
    /*00001c64*/ CMP         R3, #3 
    /*00001c68*/ BEQ         VencUpdateJpegEncodeIndex_x1c90
    /*00001c6c*/ CMP         R3, #1 
    /*00001c70*/ BEQ         VencUpdateJpegEncodeIndex_x1cb4
    /*00001c74*/ MOVW        R3, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d4] 
    /*00001c78*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00001c7c*/ MOVT        R3, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d4] 
    /*00001c80*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00001c84*/ MOVW        R2, #1188                   @ 0x4a4 
    /*00001c88*/ LDR         R1, [PC, #48]               @ 0x0000000000001cc0 
    VencUpdateJpegEncodeIndex_x1c8c:
    /*00001c8c*/ B           VencUpdateJpegEncodeIndex_x1c8c@ osal_panic [R_ARM_JUMP24: +0x0] 
    VencUpdateJpegEncodeIndex_x1c90:
    /*00001c90*/ MOV         R3, #1 
    /*00001c94*/ STR         R3, [R0, #3348]             @ 0xd14 
    /*00001c98*/ BX          LR 
    VencUpdateJpegEncodeIndex_x1c9c:
    /*00001c9c*/ MOV         R3, #3 
    /*00001ca0*/ STR         R3, [R0, #3348]             @ 0xd14 
    /*00001ca4*/ BX          LR 
    VencUpdateJpegEncodeIndex_x1ca8:
    /*00001ca8*/ MOV         R3, #0 
    /*00001cac*/ STR         R3, [R0, #3348]             @ 0xd14 
    /*00001cb0*/ BX          LR 
    VencUpdateJpegEncodeIndex_x1cb4:
    /*00001cb4*/ MOV         R3, #2 
    /*00001cb8*/ STR         R3, [R0, #3348]             @ 0xd14 
    /*00001cbc*/ BX          LR 
    /*00001cc0*/ ANDEQ       R0, R0, R0, ROR R1 
FUNC_END VencUpdateJpegEncodeIndex


FUNC_BEGIN VencQueryOnePic
    /*00001cc4*/ PUSH        {R4, R5, R6, LR} 
    /*00001cc8*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00001ccc*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00001cd0*/ MOVW        R4, #36240                  @ 0x8d90 
    /*00001cd4*/ MOV         R6, R0 
    /*00001cd8*/ LDR         R3, [R5] 
    /*00001cdc*/ MLA         R4, R4, R0, R3 
    /*00001ce0*/ ADD         R3, R4, #32768              @ 0x8000 
    /*00001ce4*/ LDR         R2, [R3, #3344]             @ 0xd10 
    /*00001ce8*/ CMP         R2, #3 
    /*00001cec*/ ADDEQ       R3, R4, #6400               @ 0x1900 
    /*00001cf0*/ ADDEQ       R3, R3, #36                 @ 0x24 
    /*00001cf4*/ BEQ         VencQueryOnePic_x1d08
    /*00001cf8*/ CMP         R2, #0 
    /*00001cfc*/ ADDEQ       R3, R4, #3696               @ 0xe70 
    /*00001d00*/ ADDEQ       R3, R3, #12 
    /*00001d04*/ BNE         VencQueryOnePic_x1d8c
    VencQueryOnePic_x1d08:
    /*00001d08*/ STR         R2, [R4, #104]              @ 0x68 
    /*00001d0c*/ LDR         R2, [R3, #16] 
    /*00001d10*/ CMP         R2, #0 
    /*00001d14*/ BEQ         VencQueryOnePic_x1dc8
    /*00001d18*/ BLE         VencQueryOnePic_x1da4
    /*00001d1c*/ LDR         R2, [R3, #12] 
    /*00001d20*/ SUBS        R2, R2, #1 
    /*00001d24*/ LDRMI       R1, [R3, #4] 
    /*00001d28*/ LDR         R3, [R3] 
    /*00001d2c*/ ADDMI       R2, R2, R1 
    /*00001d30*/ LDR         R3, [R3, R2, LSL #2] 
    VencQueryOnePic_x1d34:
    /*00001d34*/ STR         R3, [R4, #80]               @ 0x50 
    /*00001d38*/ MOV         R0, #0 
    /*00001d3c*/ LDR         R2, [R3, #12] 
    /*00001d40*/ ADD         IP, R5, R6, LSL #3 
    /*00001d44*/ LDRD        R4, [R3, #120]              @ 0x78 
    /*00001d48*/ MOVW        R1, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00001d4c*/ CMP         R2, #26 
    /*00001d50*/ CMPNE       R2, #23 
    /*00001d54*/ MOVT        R1, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00001d58*/ MOVEQ       R3, R0 
    /*00001d5c*/ MOVNE       R3, #4 
    /*00001d60*/ CMP         R2, #25 
    /*00001d64*/ CMPNE       R2, #22 
    /*00001d68*/ STRD        R4, [IP, #8] 
    /*00001d6c*/ MOVEQ       R3, #1 
    /*00001d70*/ CMP         R2, #27 
    /*00001d74*/ CMPNE       R2, #24 
    /*00001d78*/ MOVEQ       R3, #2 
    /*00001d7c*/ CMP         R2, #39                     @ 0x27 
    /*00001d80*/ MOVEQ       R3, #3 
    /*00001d84*/ STR         R3, [R1, R6, LSL #2] 
    /*00001d88*/ POP         {R4, R5, R6, PC} 
    VencQueryOnePic_x1d8c:
    /*00001d8c*/ CMP         R2, #1 
    /*00001d90*/ ADDEQ       R3, R4, #9152               @ 0x23c0 
    /*00001d94*/ ADDNE       R3, R4, #11904              @ 0x2e80 
    /*00001d98*/ ADDEQ       R3, R3, #60                 @ 0x3c 
    /*00001d9c*/ ADDNE       R3, R3, #36                 @ 0x24 
    /*00001da0*/ B           VencQueryOnePic_x1d08
    VencQueryOnePic_x1da4:
    /*00001da4*/ MOVW        R3, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc98] 
    /*00001da8*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00001dac*/ MOVT        R3, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc98] 
    /*00001db0*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00001db4*/ MOVW        R2, #1246                   @ 0x4de 
    /*00001db8*/ LDR         R1, [PC, #40]               @ 0x0000000000001de8 
    /*00001dbc*/ BL          0x0000000000001DBC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00001dc0*/ MOV         R3, #0 
    /*00001dc4*/ B           VencQueryOnePic_x1d34
    VencQueryOnePic_x1dc8:
    /*00001dc8*/ MOV         R3, R6 
    /*00001dcc*/ MOV         R1, #8 
    /*00001dd0*/ MOVW        R2, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xce4] 
    /*00001dd4*/ MOV         R0, #1 
    /*00001dd8*/ MOVT        R2, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0xce4] 
    /*00001ddc*/ BL          0x0000000000001DDC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001de0*/ MVN         R0, #0 
    /*00001de4*/ POP         {R4, R5, R6, PC} 
    /*00001de8*/ ANDEQ       R0, R0, IP, LSL #3 
FUNC_END VencQueryOnePic


FUNC_BEGIN VencVbSub
    /*00001dec*/ PUSH        {R4, R6, R7, LR} 
    /*00001df0*/ MOV         R3, R0 
    /*00001df4*/ SUB         SP, SP, #8 
    /*00001df8*/ MOV         R0, #1 
    /*00001dfc*/ LDRD        R6, [R3, #120]              @ 0x78 
    /*00001e00*/ LDR         R4, [R3, #328]              @ 0x148 
    /*00001e04*/ BL          0x0000000000001E04          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00001e08*/ MOV         R3, #3 
    /*00001e0c*/ STR         R3, [SP] 
    /*00001e10*/ MOV         R2, R6 
    /*00001e14*/ MOV         R3, R7 
    /*00001e18*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00001e1c*/ MOV         R0, R4 
    /*00001e20*/ BLX         R1 
    /*00001e24*/ ADD         SP, SP, #8 
    /*00001e28*/ POP         {R4, R6, R7, PC} 
FUNC_END VencVbSub


FUNC_BEGIN VencVbAdd
    /*00001e2c*/ PUSH        {R4, R6, R7, LR} 
    /*00001e30*/ MOV         R3, R0 
    /*00001e34*/ SUB         SP, SP, #8 
    /*00001e38*/ MOV         R0, #1 
    /*00001e3c*/ LDRD        R6, [R3, #120]              @ 0x78 
    /*00001e40*/ LDR         R4, [R3, #328]              @ 0x148 
    /*00001e44*/ BL          0x0000000000001E44          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00001e48*/ MOV         R3, #3 
    /*00001e4c*/ STR         R3, [SP] 
    /*00001e50*/ MOV         R2, R6 
    /*00001e54*/ MOV         R3, R7 
    /*00001e58*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*00001e5c*/ MOV         R0, R4 
    /*00001e60*/ BLX         R1 
    /*00001e64*/ ADD         SP, SP, #8 
    /*00001e68*/ POP         {R4, R6, R7, PC} 
FUNC_END VencVbAdd


FUNC_BEGIN VencVgsWakeUpWaitQueue
    /*00001e6c*/ PUSH        {R4, R5, R6, LR} 
    /*00001e70*/ MOV         R4, R0 
    /*00001e74*/ LDR         R3, [R0, #4] 
    /*00001e78*/ CMP         R3, #26 
    /*00001e7c*/ LDR         R3, [R0, #3704]             @ 0xe78 
    /*00001e80*/ BEQ         VencVgsWakeUpWaitQueue_x1ec4
    /*00001e84*/ CMP         R3, #6 
    /*00001e88*/ BEQ         VencVgsWakeUpWaitQueue_x1f28
    VencVgsWakeUpWaitQueue_x1e8c:
    /*00001e8c*/ LDR         R3, [R4, #20] 
    /*00001e90*/ ADD         R5, R4, #12288              @ 0x3000 
    VencVgsWakeUpWaitQueue_x1e94:
    /*00001e94*/ CMP         R3, #0 
    /*00001e98*/ BNE         VencVgsWakeUpWaitQueue_x1eb4
    VencVgsWakeUpWaitQueue_x1e9c:
    /*00001e9c*/ LDR         R3, [R5, #572]              @ 0x23c 
    /*00001ea0*/ CMP         R3, #0 
    /*00001ea4*/ POPEQ       {R4, R5, R6, PC} 
    /*00001ea8*/ ADD         R0, R4, #12864              @ 0x3240 
    /*00001eac*/ POP         {R4, R5, R6, LR} 
    VencVgsWakeUpWaitQueue_x1eb0:
    /*00001eb0*/ B           VencVgsWakeUpWaitQueue_x1eb0@ osal_wakeup [R_ARM_JUMP24: +0x0] 
    VencVgsWakeUpWaitQueue_x1eb4:
    /*00001eb4*/ ADD         R0, R4, #12352              @ 0x3040 
    /*00001eb8*/ ADD         R0, R0, #60                 @ 0x3c 
    /*00001ebc*/ BL          0x0000000000001EBC          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00001ec0*/ B           VencVgsWakeUpWaitQueue_x1e9c
    VencVgsWakeUpWaitQueue_x1ec4:
    /*00001ec4*/ CMP         R3, #6 
    /*00001ec8*/ BNE         VencVgsWakeUpWaitQueue_x1e8c
    /*00001ecc*/ ADD         R3, R0, #8192               @ 0x2000 
    /*00001ed0*/ LDR         R2, [R3, #1016]             @ 0x3f8 
    /*00001ed4*/ CMP         R2, #6 
    /*00001ed8*/ BNE         VencVgsWakeUpWaitQueue_x1e8c
    /*00001edc*/ LDR         R3, [R3, #3744]             @ 0xea0 
    /*00001ee0*/ CMP         R3, #6 
    /*00001ee4*/ BNE         VencVgsWakeUpWaitQueue_x1e8c
    /*00001ee8*/ MOV         R0, #1 
    /*00001eec*/ BL          0x0000000000001EEC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00001ef0*/ LDR         R3, [R0, #104]              @ 0x68 
    /*00001ef4*/ MOV         R0, #1 
    /*00001ef8*/ BLX         R3 
    /*00001efc*/ CMP         R0, #0 
    /*00001f00*/ BEQ         VencVgsWakeUpWaitQueue_x1f28
    /*00001f04*/ ADD         R3, R4, #4096               @ 0x1000 
    /*00001f08*/ LDR         R3, [R3, #2336]             @ 0x920 
    /*00001f0c*/ CMP         R3, #6 
    /*00001f10*/ BEQ         VencVgsWakeUpWaitQueue_x1f58
    /*00001f14*/ MOV         R2, #0 
    /*00001f18*/ ADD         R5, R4, #12288              @ 0x3000 
    /*00001f1c*/ MOV         R3, R2 
    /*00001f20*/ STR         R2, [R4, #20] 
    /*00001f24*/ B           VencVgsWakeUpWaitQueue_x1f50
    VencVgsWakeUpWaitQueue_x1f28:
    /*00001f28*/ LDR         R3, [R4, #24] 
    /*00001f2c*/ ADD         R5, R4, #12288              @ 0x3000 
    /*00001f30*/ SUB         R3, R3, #1 
    /*00001f34*/ CLZ         R3, R3 
    /*00001f38*/ LSR         R3, R3, #5 
    /*00001f3c*/ STR         R3, [R4, #20] 
    /*00001f40*/ LDR         R2, [R5, #568]              @ 0x238 
    /*00001f44*/ SUB         R2, R2, #1 
    /*00001f48*/ CLZ         R2, R2 
    /*00001f4c*/ LSR         R2, R2, #5 
    VencVgsWakeUpWaitQueue_x1f50:
    /*00001f50*/ STR         R2, [R5, #572]              @ 0x23c 
    /*00001f54*/ B           VencVgsWakeUpWaitQueue_x1e94
    VencVgsWakeUpWaitQueue_x1f58:
    /*00001f58*/ LDR         R3, [R4, #24] 
    /*00001f5c*/ ADD         R5, R4, #12288              @ 0x3000 
    /*00001f60*/ CMP         R3, #1 
    /*00001f64*/ MOVNE       R3, #0 
    /*00001f68*/ STR         R3, [R4, #20] 
    /*00001f6c*/ LDR         R2, [R5, #568]              @ 0x238 
    /*00001f70*/ LDR         R3, [R4, #20] 
    /*00001f74*/ SUB         R2, R2, #1 
    /*00001f78*/ CLZ         R2, R2 
    /*00001f7c*/ LSR         R2, R2, #5 
    /*00001f80*/ B           VencVgsWakeUpWaitQueue_x1f50
FUNC_END VencVgsWakeUpWaitQueue


FUNC_BEGIN VencQuickSchedule
    /*00001f84*/ PUSH        {R4, LR} 
    /*00001f88*/ MOV         R4, R0 
    /*00001f8c*/ MOV         R0, #4 
    /*00001f90*/ BL          0x0000000000001F90          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00001f94*/ CMP         R0, #0 
    /*00001f98*/ POPEQ       {R4, PC} 
    /*00001f9c*/ MOV         R0, #4 
    /*00001fa0*/ BL          0x0000000000001FA0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00001fa4*/ LDR         R3, [R0, #24] 
    /*00001fa8*/ CMP         R3, #0 
    /*00001fac*/ POPEQ       {R4, PC} 
    /*00001fb0*/ MOV         R0, #4 
    /*00001fb4*/ BL          0x0000000000001FB4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00001fb8*/ LDR         R3, [R0, #24] 
    /*00001fbc*/ MOV         R0, R4 
    /*00001fc0*/ POP         {R4, LR} 
    /*00001fc4*/ BX          R3 
FUNC_END VencQuickSchedule


FUNC_BEGIN VencVgsCallback
    /*00001fc8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00001fcc*/ SUBS        R5, R3, #0 
    /*00001fd0*/ SUB         SP, SP, #32 
    /*00001fd4*/ MOV         SL, R1 
    /*00001fd8*/ BEQ         VencVgsCallback_x2464
    VencVgsCallback_x1fdc:
    /*00001fdc*/ LDR         R8, [R5, #672]              @ 0x2a0 
    /*00001fe0*/ CMP         R8, #0 
    /*00001fe4*/ BLT         VencVgsCallback_x243c
    /*00001fe8*/ MOVW        R4, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00001fec*/ MOVT        R4, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00001ff0*/ LDR         R3, [R4] 
    /*00001ff4*/ CMP         R8, R3 
    /*00001ff8*/ BCS         VencVgsCallback_x2198
    VencVgsCallback_x1ffc:
    /*00001ffc*/ MOVW        R3, #36240                  @ 0x8d90 
    /*00002000*/ MOVW        R7, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00002004*/ MUL         R6, R3, R8 
    /*00002008*/ MOVT        R7, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000200c*/ ADD         R1, SP, #28 
    /*00002010*/ LDR         R4, [R7] 
    /*00002014*/ ADD         R4, R4, R6 
    /*00002018*/ ADD         R9, R4, #64                 @ 0x40 
    /*0000201c*/ MOV         R0, R9 
    /*00002020*/ BL          0x0000000000002020          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00002024*/ LDR         R3, [R7] 
    /*00002028*/ MOVW        R1, #1002                   @ 0x3ea 
    /*0000202c*/ ADD         R3, R3, R6 
    /*00002030*/ ADD         R3, R3, #8192               @ 0x2000 
    /*00002034*/ LDR         R2, [R3, #4076]             @ 0xfec 
    /*00002038*/ ADD         R2, R2, #1 
    /*0000203c*/ STR         R2, [R3, #4076]             @ 0xfec 
    /*00002040*/ LDR         R3, [R4, #4] 
    /*00002044*/ LDR         R7, [R5, #584]              @ 0x248 
    /*00002048*/ CMP         R3, R1 
    /*0000204c*/ BEQ         VencVgsCallback_x23b4
    VencVgsCallback_x2050:
    /*00002050*/ LDR         R3, [R5, #736]              @ 0x2e0 
    /*00002054*/ CMP         R3, #1 
    /*00002058*/ ADDNE       R6, R4, #12288              @ 0x3000 
    /*0000205c*/ BEQ         VencVgsCallback_x21e8
    VencVgsCallback_x2060:
    /*00002060*/ MOV         R0, R7 
    /*00002064*/ BL          0x0000000000002064          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*00002068*/ CMP         R0, #0 
    /*0000206c*/ BNE         VencVgsCallback_x2364
    VencVgsCallback_x2070:
    /*00002070*/ LDR         R3, [R6, #20] 
    /*00002074*/ ADD         R3, R3, #1 
    /*00002078*/ STR         R3, [R6, #20] 
    /*0000207c*/ LDR         R2, [R7, #380]              @ 0x17c 
    /*00002080*/ CMP         R2, #0 
    /*00002084*/ BEQ         VencVgsCallback_x20a4
    /*00002088*/ MOV         R3, #0 
    /*0000208c*/ STR         R3, [R2] 
    /*00002090*/ LDR         R2, [R7, #380]              @ 0x17c 
    /*00002094*/ STR         R3, [R2, #2792]             @ 0xae8 
    /*00002098*/ STR         R3, [R7, #336]              @ 0x150 
    /*0000209c*/ STR         R3, [R7, #340]              @ 0x154 
    /*000020a0*/ STR         R3, [R7, #380]              @ 0x17c 
    VencVgsCallback_x20a4:
    /*000020a4*/ MOV         R0, R5 
    /*000020a8*/ BL          0x00000000000020A8          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*000020ac*/ CMP         R0, #0 
    /*000020b0*/ BNE         VencVgsCallback_x238c
    VencVgsCallback_x20b4:
    /*000020b4*/ LDR         R3, [R6, #4] 
    /*000020b8*/ ADD         R3, R3, #1 
    /*000020bc*/ STR         R3, [R6, #4] 
    /*000020c0*/ LDR         R3, [R4, #3704]             @ 0xe78 
    /*000020c4*/ LDR         R1, [R4, #3692]             @ 0xe6c 
    /*000020c8*/ CMP         R3, R1 
    /*000020cc*/ BLT         VencVgsCallback_x2174
    /*000020d0*/ MOVW        R3, #1406                   @ 0x57e 
    /*000020d4*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xedc] 
    /*000020d8*/ STR         R3, [SP] 
    /*000020dc*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0xedc] 
    /*000020e0*/ STR         R8, [SP, #4] 
    /*000020e4*/ MOV         R1, #8 
    /*000020e8*/ LDR         R3, [PC, #1304]             @ 0x0000000000002608 
    /*000020ec*/ MOV         R0, #3 
    /*000020f0*/ BL          0x00000000000020F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencVgsCallback_x20f4:
    /*000020f4*/ ADD         R0, R4, #12352              @ 0x3040 
    /*000020f8*/ ADD         R0, R0, #56                 @ 0x38 
    /*000020fc*/ BL          0x00000000000020FC          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00002100*/ LDR         R3, [R6, #132]              @ 0x84 
    /*00002104*/ CMP         R3, #1 
    /*00002108*/ BEQ         VencVgsCallback_x23d0
    VencVgsCallback_x210c:
    /*0000210c*/ LDR         R3, [R5, #736]              @ 0x2e0 
    /*00002110*/ CMP         R3, #2 
    /*00002114*/ BEQ         VencVgsCallback_x2404
    /*00002118*/ LDR         R2, [R6, #176]              @ 0xb0 
    /*0000211c*/ ADD         R5, R5, #688                @ 0x2b0 
    /*00002120*/ LDRD        R0, [R5, #-8] 
    /*00002124*/ ASR         R3, R2, #31 
    /*00002128*/ CMP         R3, R1 
    /*0000212c*/ CMPEQ       R2, R0 
    /*00002130*/ BEQ         VencVgsCallback_x22f8
    VencVgsCallback_x2134:
    /*00002134*/ MOVW        R3, #1436                   @ 0x59c 
    /*00002138*/ MOVW        R2, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xda8] 
    /*0000213c*/ STR         R3, [SP] 
    /*00002140*/ MOVT        R2, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0xda8] 
    /*00002144*/ STR         R8, [SP, #4] 
    /*00002148*/ MOV         R1, #8 
    /*0000214c*/ LDR         R3, [PC, #1204]             @ 0x0000000000002608 
    /*00002150*/ MOV         R0, #3 
    /*00002154*/ BL          0x0000000000002154          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencVgsCallback_x2158:
    /*00002158*/ MOV         R0, R4 
    /*0000215c*/ BL          0x000000000000215C          @ VencVgsWakeUpWaitQueue [R_ARM_CALL: .text+0x1e6c] 
    /*00002160*/ ADD         R1, SP, #28 
    /*00002164*/ MOV         R0, R9 
    /*00002168*/ BL          0x0000000000002168          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VencVgsCallback_x216c:
    /*0000216c*/ ADD         SP, SP, #32 
    /*00002170*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencVgsCallback_x2174:
    /*00002174*/ LDR         R2, [R4, #3696]             @ 0xe70 
    /*00002178*/ ADD         R3, R3, #1 
    /*0000217c*/ SUBS        R2, R2, #1 
    /*00002180*/ ADDMI       R2, R2, R1 
    /*00002184*/ LDR         R1, [R4, #3688]             @ 0xe68 
    /*00002188*/ STR         R7, [R1, R2, LSL #2] 
    /*0000218c*/ STR         R3, [R4, #3704]             @ 0xe78 
    /*00002190*/ STR         R2, [R4, #3696]             @ 0xe70 
    /*00002194*/ B           VencVgsCallback_x20f4
    VencVgsCallback_x2198:
    /*00002198*/ MOVW        R3, #1357                   @ 0x54d 
    /*0000219c*/ STR         R8, [SP, #4] 
    /*000021a0*/ STR         R3, [SP] 
    /*000021a4*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xeb4] 
    /*000021a8*/ LDR         R3, [PC, #1112]             @ 0x0000000000002608 
    /*000021ac*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0xeb4] 
    /*000021b0*/ MOV         R1, #8 
    /*000021b4*/ MOV         R0, #3 
    /*000021b8*/ BL          0x00000000000021B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000021bc*/ LDR         R3, [R4] 
    /*000021c0*/ CMP         R8, R3 
    /*000021c4*/ BCC         VencVgsCallback_x1ffc
    VencVgsCallback_x21c8:
    /*000021c8*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b0] 
    /*000021cc*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*000021d0*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b0] 
    /*000021d4*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*000021d8*/ MOVW        R2, #1358                   @ 0x54e 
    /*000021dc*/ LDR         R1, [PC, #1060]             @ 0x0000000000002608 
    /*000021e0*/ BL          0x00000000000021E0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000021e4*/ B           VencVgsCallback_x1ffc
    VencVgsCallback_x21e8:
    /*000021e8*/ LDR         R2, [R5, #732]              @ 0x2dc 
    /*000021ec*/ ADD         R6, R4, #12288              @ 0x3000 
    /*000021f0*/ LDR         R3, [R4, #56]               @ 0x38 
    /*000021f4*/ CMP         R2, R3 
    /*000021f8*/ BNE         VencVgsCallback_x2060
    /*000021fc*/ ADD         R3, R5, #688                @ 0x2b0 
    /*00002200*/ LDR         R2, [R6, #176]              @ 0xb0 
    /*00002204*/ LDRD        R0, [R3, #-8] 
    /*00002208*/ ASR         R3, R2, #31 
    /*0000220c*/ CMP         R3, R1 
    /*00002210*/ CMPEQ       R2, R0 
    /*00002214*/ BNE         VencVgsCallback_x2060
    /*00002218*/ LDR         R3, [R4, #16] 
    /*0000221c*/ CMP         R3, #0 
    /*00002220*/ BNE         VencVgsCallback_x2230
    /*00002224*/ LDR         R3, [R6, #132]              @ 0x84 
    /*00002228*/ CMP         R3, #0 
    /*0000222c*/ BEQ         VencVgsCallback_x2060
    VencVgsCallback_x2230:
    /*00002230*/ LDR         R2, [R7] 
    /*00002234*/ LDR         R3, [R6, #148]              @ 0x94 
    /*00002238*/ CMP         R2, R3 
    /*0000223c*/ BNE         VencVgsCallback_x2060
    /*00002240*/ LDR         R2, [R7, #4] 
    /*00002244*/ LDR         R3, [R6, #152]              @ 0x98 
    /*00002248*/ CMP         R2, R3 
    /*0000224c*/ BNE         VencVgsCallback_x2060
    /*00002250*/ MOV         R0, R5 
    /*00002254*/ BL          0x0000000000002254          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*00002258*/ CMP         R0, #0 
    /*0000225c*/ BNE         VencVgsCallback_x2508
    VencVgsCallback_x2260:
    /*00002260*/ LDR         R3, [R6, #4] 
    /*00002264*/ MOV         R2, #0 
    /*00002268*/ ADD         R3, R3, #1 
    /*0000226c*/ STR         R3, [R6, #4] 
    /*00002270*/ STR         R2, [R7, #392]              @ 0x188 
    /*00002274*/ LDR         R2, [R4, #3724]             @ 0xe8c 
    /*00002278*/ LDR         R1, [R4, #3712]             @ 0xe80 
    /*0000227c*/ CMP         R2, R1 
    /*00002280*/ BGE         VencVgsCallback_x24e0
    /*00002284*/ LDR         R3, [R4, #3716]             @ 0xe84 
    /*00002288*/ ADD         R2, R2, #1 
    /*0000228c*/ SUBS        R3, R3, #1 
    /*00002290*/ ADDMI       R3, R3, R1 
    /*00002294*/ LDR         R1, [R4, #3708]             @ 0xe7c 
    /*00002298*/ STR         R7, [R1, R3, LSL #2] 
    /*0000229c*/ STR         R2, [R4, #3724]             @ 0xe8c 
    /*000022a0*/ STR         R3, [R4, #3716]             @ 0xe84 
    /*000022a4*/ LDR         R3, [R6, #1108]             @ 0x454 
    /*000022a8*/ CMP         R3, #1 
    /*000022ac*/ BEQ         VencVgsCallback_x256c
    VencVgsCallback_x22b0:
    /*000022b0*/ LDR         R2, [R7, #232]              @ 0xe8 
    /*000022b4*/ ADD         R3, R4, #8192               @ 0x2000 
    /*000022b8*/ STR         R2, [R4, #32] 
    /*000022bc*/ LDR         R1, [R3, #4080]             @ 0xff0 
    /*000022c0*/ LDR         R2, [R3, #4056]             @ 0xfd8 
    /*000022c4*/ ADD         R1, R1, #1 
    /*000022c8*/ STR         R1, [R3, #4080]             @ 0xff0 
    /*000022cc*/ ADD         R2, R2, #1 
    /*000022d0*/ STR         R2, [R3, #4056]             @ 0xfd8 
    VencVgsCallback_x22d4:
    /*000022d4*/ MOVW        R5, #0                      @ QuickSchedule [R_ARM_MOVW_ABS_NC: .data+0xcc] 
    /*000022d8*/ MOVT        R5, #0                      @ QuickSchedule [R_ARM_MOVT_ABS: .data+0xcc] 
    /*000022dc*/ LDR         R3, [R5] 
    /*000022e0*/ CMP         R3, #1 
    /*000022e4*/ BEQ         VencVgsCallback_x2530
    VencVgsCallback_x22e8:
    /*000022e8*/ ADD         R1, SP, #28 
    /*000022ec*/ MOV         R0, R9 
    /*000022f0*/ BL          0x00000000000022F0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000022f4*/ B           VencVgsCallback_x216c
    VencVgsCallback_x22f8:
    /*000022f8*/ LDR         R1, [R6, #148]              @ 0x94 
    /*000022fc*/ LDR         R3, [R7] 
    /*00002300*/ LDR         R2, [R6, #152]              @ 0x98 
    /*00002304*/ CMP         R3, R1 
    /*00002308*/ BNE         VencVgsCallback_x2318
    /*0000230c*/ LDR         R3, [R7, #4] 
    /*00002310*/ CMP         R3, R2 
    /*00002314*/ BEQ         VencVgsCallback_x2484
    VencVgsCallback_x2318:
    /*00002318*/ LDR         R3, [R6, #580]              @ 0x244 
    /*0000231c*/ MOVW        IP, #1444                   @ 0x5a4 
    /*00002320*/ MOV         R0, #4 
    /*00002324*/ ADD         R3, R3, #1 
    /*00002328*/ STR         R3, [R6, #580]              @ 0x244 
    /*0000232c*/ STR         R2, [SP, #20] 
    /*00002330*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xde4] 
    /*00002334*/ STR         R1, [SP, #16] 
    /*00002338*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0xde4] 
    /*0000233c*/ LDR         LR, [R7, #4] 
    /*00002340*/ MOV         R1, #8 
    /*00002344*/ LDR         R3, [PC, #700]              @ 0x0000000000002608 
    /*00002348*/ STR         LR, [SP, #12] 
    /*0000234c*/ LDR         LR, [R7] 
    /*00002350*/ STR         R8, [SP, #4] 
    /*00002354*/ STR         IP, [SP] 
    /*00002358*/ STR         LR, [SP, #8] 
    /*0000235c*/ BL          0x000000000000235C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002360*/ B           VencVgsCallback_x2158
    VencVgsCallback_x2364:
    /*00002364*/ MOVW        R3, #1390                   @ 0x56e 
    /*00002368*/ STR         R8, [SP, #4] 
    /*0000236c*/ STR         R3, [SP] 
    /*00002370*/ MOVW        R2, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd2c] 
    /*00002374*/ LDR         R3, [PC, #652]              @ 0x0000000000002608 
    /*00002378*/ MOVT        R2, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd2c] 
    /*0000237c*/ MOV         R1, #8 
    /*00002380*/ MOV         R0, #3 
    /*00002384*/ BL          0x0000000000002384          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002388*/ B           VencVgsCallback_x2070
    VencVgsCallback_x238c:
    /*0000238c*/ MOVW        R3, #1398                   @ 0x576 
    /*00002390*/ STR         R8, [SP, #4] 
    /*00002394*/ STR         R3, [SP] 
    /*00002398*/ MOVW        R2, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd2c] 
    /*0000239c*/ LDR         R3, [PC, #612]              @ 0x0000000000002608 
    /*000023a0*/ MOVT        R2, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd2c] 
    /*000023a4*/ MOV         R1, #8 
    /*000023a8*/ MOV         R0, #3 
    /*000023ac*/ BL          0x00000000000023AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000023b0*/ B           VencVgsCallback_x20b4
    VencVgsCallback_x23b4:
    /*000023b4*/ LDR         R3, [R7, #340]              @ 0x154 
    /*000023b8*/ CMP         R3, #1 
    /*000023bc*/ BNE         VencVgsCallback_x2050
    /*000023c0*/ ADD         R1, R7, #336                @ 0x150 
    /*000023c4*/ MOV         R0, R8 
    /*000023c8*/ BL          0x00000000000023C8          @ VencPutOverLayEx [R_ARM_CALL: .text+0x1528] 
    /*000023cc*/ B           VencVgsCallback_x2050
    VencVgsCallback_x23d0:
    /*000023d0*/ LDR         R3, [R4, #56]               @ 0x38 
    /*000023d4*/ CMP         R8, R3 
    /*000023d8*/ BNE         VencVgsCallback_x210c
    /*000023dc*/ ADD         R3, R5, #688                @ 0x2b0 
    /*000023e0*/ LDR         R2, [R6, #176]              @ 0xb0 
    /*000023e4*/ LDRD        R0, [R3, #-8] 
    /*000023e8*/ ASR         R3, R2, #31 
    /*000023ec*/ CMP         R3, R1 
    /*000023f0*/ CMPEQ       R2, R0 
    /*000023f4*/ BEQ         VencVgsCallback_x24c8
    /*000023f8*/ LDR         R3, [R5, #736]              @ 0x2e0 
    /*000023fc*/ CMP         R3, #2 
    /*00002400*/ BNE         VencVgsCallback_x2134
    VencVgsCallback_x2404:
    /*00002404*/ ADD         R0, R4, #8192               @ 0x2000 
    /*00002408*/ MOVW        IP, #1431                   @ 0x597 
    /*0000240c*/ MOVW        R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd64] 
    /*00002410*/ MOV         R1, #8 
    /*00002414*/ LDR         R3, [R0, #4084]             @ 0xff4 
    /*00002418*/ MOVT        R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd64] 
    /*0000241c*/ ADD         R3, R3, #1 
    /*00002420*/ STR         R3, [R0, #4084]             @ 0xff4 
    /*00002424*/ STR         R8, [SP, #4] 
    /*00002428*/ MOV         R0, #3 
    /*0000242c*/ STR         IP, [SP] 
    /*00002430*/ LDR         R3, [PC, #464]              @ 0x0000000000002608 
    /*00002434*/ BL          0x0000000000002434          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002438*/ B           VencVgsCallback_x2158
    VencVgsCallback_x243c:
    /*0000243c*/ MOVW        R3, #1357                   @ 0x54d 
    /*00002440*/ STR         R8, [SP, #4] 
    /*00002444*/ STR         R3, [SP] 
    /*00002448*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xeb4] 
    /*0000244c*/ LDR         R3, [PC, #436]              @ 0x0000000000002608 
    /*00002450*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0xeb4] 
    /*00002454*/ MOV         R1, #8 
    /*00002458*/ MOV         R0, #3 
    /*0000245c*/ BL          0x000000000000245C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002460*/ B           VencVgsCallback_x21c8
    VencVgsCallback_x2464:
    /*00002464*/ MOVW        R3, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd18] 
    /*00002468*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000246c*/ MOVT        R3, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd18] 
    /*00002470*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00002474*/ MOVW        R2, #1347                   @ 0x543 
    /*00002478*/ LDR         R1, [PC, #392]              @ 0x0000000000002608 
    /*0000247c*/ BL          0x000000000000247C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00002480*/ B           VencVgsCallback_x1fdc
    VencVgsCallback_x2484:
    /*00002484*/ ADD         R1, R4, #8192               @ 0x2000 
    /*00002488*/ MOVW        IP, #1450                   @ 0x5aa 
    /*0000248c*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe3c] 
    /*00002490*/ MOV         R0, #4 
    /*00002494*/ LDR         R3, [R1, #4092]             @ 0xffc 
    /*00002498*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe3c] 
    /*0000249c*/ ADD         R3, R3, #1 
    /*000024a0*/ STR         R3, [R1, #4092]             @ 0xffc 
    /*000024a4*/ LDR         R3, [R4, #16] 
    /*000024a8*/ MOV         R1, #8 
    /*000024ac*/ STR         R8, [SP, #8] 
    /*000024b0*/ STR         SL, [SP, #4] 
    /*000024b4*/ STR         R3, [SP, #12] 
    /*000024b8*/ STR         IP, [SP] 
    /*000024bc*/ LDR         R3, [PC, #324]              @ 0x0000000000002608 
    /*000024c0*/ BL          0x00000000000024C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000024c4*/ B           VencVgsCallback_x2158
    VencVgsCallback_x24c8:
    /*000024c8*/ LDR         R3, [R6, #140]              @ 0x8c 
    /*000024cc*/ SUB         R3, R3, #1 
    /*000024d0*/ STR         R3, [R6, #140]              @ 0x8c 
    /*000024d4*/ CMP         R3, #0 
    /*000024d8*/ STREQ       R3, [R6, #132]              @ 0x84 
    /*000024dc*/ B           VencVgsCallback_x210c
    VencVgsCallback_x24e0:
    /*000024e0*/ MOVW        R3, #1470                   @ 0x5be 
    /*000024e4*/ STR         R8, [SP, #4] 
    /*000024e8*/ STR         R3, [SP] 
    /*000024ec*/ MOVW        R2, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf24] 
    /*000024f0*/ LDR         R3, [PC, #272]              @ 0x0000000000002608 
    /*000024f4*/ MOVT        R2, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf24] 
    /*000024f8*/ MOV         R1, #8 
    /*000024fc*/ MOV         R0, #3 
    /*00002500*/ BL          0x0000000000002500          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002504*/ B           VencVgsCallback_x22d4
    VencVgsCallback_x2508:
    /*00002508*/ MOVW        R3, #1462                   @ 0x5b6 
    /*0000250c*/ STR         R8, [SP, #4] 
    /*00002510*/ STR         R3, [SP] 
    /*00002514*/ MOVW        R2, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd2c] 
    /*00002518*/ LDR         R3, [PC, #232]              @ 0x0000000000002608 
    /*0000251c*/ MOVT        R2, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd2c] 
    /*00002520*/ MOV         R1, #8 
    /*00002524*/ MOV         R0, #3 
    /*00002528*/ BL          0x0000000000002528          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000252c*/ B           VencVgsCallback_x2260
    VencVgsCallback_x2530:
    /*00002530*/ LDR         R3, [R4, #3724]             @ 0xe8c 
    /*00002534*/ CMP         R3, #1 
    /*00002538*/ BNE         VencVgsCallback_x22e8
    /*0000253c*/ LDR         R3, [R6, #1128]             @ 0x468 
    /*00002540*/ CMP         R3, #0 
    /*00002544*/ BNE         VencVgsCallback_x22e8
    /*00002548*/ ADD         R1, SP, #28 
    /*0000254c*/ MOV         R0, R9 
    /*00002550*/ BL          0x0000000000002550          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002554*/ LDR         R3, [R5] 
    /*00002558*/ CMP         R3, #1 
    /*0000255c*/ BNE         VencVgsCallback_x216c
    /*00002560*/ LDR         R0, [R4, #8] 
    /*00002564*/ BL          0x0000000000002564          @ VencQuickSchedule [R_ARM_CALL: .text+0x1f84] 
    /*00002568*/ B           VencVgsCallback_x216c
    VencVgsCallback_x256c:
    /*0000256c*/ LDR         R3, [R6, #1128]             @ 0x468 
    /*00002570*/ ADD         R5, R4, #13376              @ 0x3440 
    /*00002574*/ ADD         R5, R5, #48                 @ 0x30 
    /*00002578*/ CMP         R3, #1 
    /*0000257c*/ BEQ         VencVgsCallback_x25d0
    VencVgsCallback_x2580:
    /*00002580*/ MOV         R0, R7 
    /*00002584*/ BL          0x0000000000002584          @ VencVbAdd [R_ARM_CALL: .text+0x1e2c] 
    /*00002588*/ CMP         R0, #0 
    /*0000258c*/ BEQ         VencVgsCallback_x25b4
    /*00002590*/ MOVW        R3, #1487                   @ 0x5cf 
    /*00002594*/ MOVW        R2, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe7c] 
    /*00002598*/ STR         R3, [SP] 
    /*0000259c*/ MOVT        R2, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe7c] 
    /*000025a0*/ STR         R8, [SP, #4] 
    /*000025a4*/ MOV         R1, #8 
    /*000025a8*/ LDR         R3, [PC, #88]               @ 0x0000000000002608 
    /*000025ac*/ MOV         R0, #3 
    /*000025b0*/ BL          0x00000000000025B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencVgsCallback_x25b4:
    /*000025b4*/ MOV         R3, #1 
    /*000025b8*/ MOV         R0, R5 
    /*000025bc*/ MOV         R2, #440                    @ 0x1b8 
    /*000025c0*/ STR         R3, [R6, #1128]             @ 0x468 
    /*000025c4*/ MOV         R1, R7 
    /*000025c8*/ BL          0x00000000000025C8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000025cc*/ B           VencVgsCallback_x22b0
    VencVgsCallback_x25d0:
    /*000025d0*/ MOV         R0, R5 
    /*000025d4*/ BL          0x00000000000025D4          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*000025d8*/ CMP         R0, #0 
    /*000025dc*/ BEQ         VencVgsCallback_x2580
    /*000025e0*/ MOVW        R3, #1481                   @ 0x5c9 
    /*000025e4*/ STR         R8, [SP, #4] 
    /*000025e8*/ STR         R3, [SP] 
    /*000025ec*/ MOVW        R2, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd2c] 
    /*000025f0*/ LDR         R3, [PC, #16]               @ 0x0000000000002608 
    /*000025f4*/ MOVT        R2, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd2c] 
    /*000025f8*/ MOV         R1, #8 
    /*000025fc*/ MOV         R0, #3 
    /*00002600*/ BL          0x0000000000002600          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002604*/ B           VencVgsCallback_x2580
    /*00002608*/ MULEQ       R0, IP, R1 
FUNC_END VencVgsCallback


FUNC_BEGIN VencVgsCallbackByJob
    /*0000260c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00002610*/ SUBS        R6, R3, #0 
    /*00002614*/ SUB         SP, SP, #84                 @ 0x54 
    /*00002618*/ STR         R1, [SP, #48]               @ 0x30 
    /*0000261c*/ BEQ         VencVgsCallbackByJob_x2e58
    VencVgsCallbackByJob_x2620:
    /*00002620*/ LDR         R9, [R6, #32] 
    /*00002624*/ CMP         R9, #0 
    /*00002628*/ BLT         VencVgsCallbackByJob_x2e30
    /*0000262c*/ MOVW        R4, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00002630*/ MOVT        R4, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00002634*/ LDR         R3, [R4] 
    /*00002638*/ CMP         R9, R3 
    /*0000263c*/ BCC         VencVgsCallbackByJob_x268c
    /*00002640*/ MOVW        R3, #1546                   @ 0x60a 
    /*00002644*/ STR         R9, [SP, #4] 
    /*00002648*/ STR         R3, [SP] 
    /*0000264c*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xeb4] 
    /*00002650*/ LDR         R3, [PC, #3400]             @ 0x00000000000033a0 
    /*00002654*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0xeb4] 
    /*00002658*/ MOV         R1, #8 
    /*0000265c*/ MOV         R0, #3 
    /*00002660*/ BL          0x0000000000002660          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002664*/ LDR         R3, [R4] 
    /*00002668*/ CMP         R9, R3 
    /*0000266c*/ BCC         VencVgsCallbackByJob_x268c
    VencVgsCallbackByJob_x2670:
    /*00002670*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b0] 
    /*00002674*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00002678*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b0] 
    /*0000267c*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00002680*/ MOVW        R2, #1547                   @ 0x60b 
    /*00002684*/ LDR         R1, [PC, #3348]             @ 0x00000000000033a0 
    /*00002688*/ BL          0x0000000000002688          @ osal_panic [R_ARM_CALL: +0x0] 
    VencVgsCallbackByJob_x268c:
    /*0000268c*/ MOVW        R3, #36240                  @ 0x8d90 
    /*00002690*/ MOVW        R7, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00002694*/ MUL         R5, R3, R9 
    /*00002698*/ MOVT        R7, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000269c*/ ADD         R1, SP, #76                 @ 0x4c 
    /*000026a0*/ LDR         R4, [R7] 
    /*000026a4*/ ADD         R4, R4, R5 
    /*000026a8*/ ADD         R0, R4, #64                 @ 0x40 
    /*000026ac*/ STR         R0, [SP, #36]               @ 0x24 
    /*000026b0*/ BL          0x00000000000026B0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000026b4*/ LDR         R3, [R7] 
    /*000026b8*/ ADD         R3, R3, R5 
    /*000026bc*/ ADD         R3, R3, #8192               @ 0x2000 
    /*000026c0*/ LDR         R2, [R3, #4076]             @ 0xfec 
    /*000026c4*/ ADD         R2, R2, #1 
    /*000026c8*/ STR         R2, [R3, #4076]             @ 0xfec 
    /*000026cc*/ LDR         R5, [R6] 
    /*000026d0*/ LDR         R3, [R4, #4] 
    /*000026d4*/ ADDS        R2, R5, #0 
    /*000026d8*/ LDR         R1, [R6, #8] 
    /*000026dc*/ LDR         SL, [R6, #24] 
    /*000026e0*/ MOVNE       R2, #1 
    /*000026e4*/ STR         R2, [SP, #44]               @ 0x2c 
    /*000026e8*/ CMP         R3, #26 
    /*000026ec*/ MOVNE       R2, #0 
    /*000026f0*/ ANDEQ       R2, R2, #1 
    /*000026f4*/ STR         R1, [SP, #28] 
    /*000026f8*/ MOV         R3, R2 
    /*000026fc*/ LDR         R2, [R6, #16] 
    /*00002700*/ CMP         R3, #0 
    /*00002704*/ STR         R2, [SP, #32] 
    /*00002708*/ BEQ         VencVgsCallbackByJob_x2718
    /*0000270c*/ LDR         R3, [R5, #340]              @ 0x154 
    /*00002710*/ CMP         R3, #1 
    /*00002714*/ BEQ         VencVgsCallbackByJob_x2e8c
    VencVgsCallbackByJob_x2718:
    /*00002718*/ LDR         R3, [R6, #48]               @ 0x30 
    /*0000271c*/ CMP         R3, #1 
    /*00002720*/ ADDNE       FP, R4, #12288              @ 0x3000 
    /*00002724*/ BEQ         VencVgsCallbackByJob_x2a0c
    VencVgsCallbackByJob_x2728:
    /*00002728*/ CMP         R5, #0 
    /*0000272c*/ BEQ         VencVgsCallbackByJob_x2d58
    VencVgsCallbackByJob_x2730:
    /*00002730*/ LDR         R2, [R5, #380]              @ 0x17c 
    /*00002734*/ CMP         R2, #0 
    /*00002738*/ BEQ         VencVgsCallbackByJob_x2758
    /*0000273c*/ MOV         R3, #0 
    /*00002740*/ STR         R3, [R2] 
    /*00002744*/ LDR         R2, [R5, #380]              @ 0x17c 
    /*00002748*/ STR         R3, [R2, #2792]             @ 0xae8 
    /*0000274c*/ STR         R3, [R5, #336]              @ 0x150 
    /*00002750*/ STR         R3, [R5, #340]              @ 0x154 
    /*00002754*/ STR         R3, [R5, #380]              @ 0x17c 
    VencVgsCallbackByJob_x2758:
    /*00002758*/ MOV         R0, R5 
    /*0000275c*/ BL          0x000000000000275C          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*00002760*/ CMP         R0, #0 
    /*00002764*/ BNE         VencVgsCallbackByJob_x2bfc
    VencVgsCallbackByJob_x2768:
    /*00002768*/ LDR         R3, [R4, #3704]             @ 0xe78 
    /*0000276c*/ LDR         R1, [R4, #3692]             @ 0xe6c 
    /*00002770*/ CMP         R3, R1 
    /*00002774*/ BLT         VencVgsCallbackByJob_x2930
    /*00002778*/ MOVW        R3, #1590                   @ 0x636 
    /*0000277c*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xedc] 
    /*00002780*/ STR         R3, [SP] 
    /*00002784*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0xedc] 
    /*00002788*/ STR         R9, [SP, #4] 
    /*0000278c*/ MOV         R1, #8 
    /*00002790*/ LDR         R3, [PC, #3080]             @ 0x00000000000033a0 
    /*00002794*/ MOV         R0, #3 
    /*00002798*/ BL          0x0000000000002798          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencVgsCallbackByJob_x279c:
    /*0000279c*/ ADD         R0, R4, #12352              @ 0x3040 
    /*000027a0*/ ADD         R0, R0, #56                 @ 0x38 
    /*000027a4*/ BL          0x00000000000027A4          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*000027a8*/ CMP         SL, #0 
    /*000027ac*/ BEQ         VencVgsCallbackByJob_x27f4
    VencVgsCallbackByJob_x27b0:
    /*000027b0*/ MOV         R0, SL 
    /*000027b4*/ BL          0x00000000000027B4          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*000027b8*/ CMP         R0, #0 
    /*000027bc*/ BNE         VencVgsCallbackByJob_x2cdc
    VencVgsCallbackByJob_x27c0:
    /*000027c0*/ ADD         R3, R4, #4096               @ 0x1000 
    /*000027c4*/ LDR         R2, [R3, #2336]             @ 0x920 
    /*000027c8*/ LDR         R0, [R3, #2324]             @ 0x914 
    /*000027cc*/ CMP         R2, R0 
    /*000027d0*/ BGE         VencVgsCallbackByJob_x29e4
    /*000027d4*/ LDR         R1, [R3, #2328]             @ 0x918 
    /*000027d8*/ ADD         R2, R2, #1 
    /*000027dc*/ SUBS        R1, R1, #1 
    /*000027e0*/ ADDMI       R1, R1, R0 
    /*000027e4*/ LDR         R0, [R3, #2320]             @ 0x910 
    /*000027e8*/ STR         SL, [R0, R1, LSL #2] 
    /*000027ec*/ STR         R2, [R3, #2336]             @ 0x920 
    /*000027f0*/ STR         R1, [R3, #2328]             @ 0x918 
    VencVgsCallbackByJob_x27f4:
    /*000027f4*/ LDR         R0, [SP, #28] 
    /*000027f8*/ CMP         R0, #0 
    /*000027fc*/ BEQ         VencVgsCallbackByJob_x2844
    /*00002800*/ BL          0x0000000000002800          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*00002804*/ CMP         R0, #0 
    /*00002808*/ BNE         VencVgsCallbackByJob_x2c8c
    VencVgsCallbackByJob_x280c:
    /*0000280c*/ ADD         R7, R4, #8192               @ 0x2000 
    /*00002810*/ LDR         R3, [R7, #1016]             @ 0x3f8 
    /*00002814*/ LDR         R1, [R7, #1004]             @ 0x3ec 
    /*00002818*/ CMP         R3, R1 
    /*0000281c*/ BGE         VencVgsCallbackByJob_x2994
    /*00002820*/ LDR         R2, [R7, #1008]             @ 0x3f0 
    /*00002824*/ ADD         R3, R3, #1 
    /*00002828*/ LDR         R0, [SP, #28] 
    /*0000282c*/ SUBS        R2, R2, #1 
    /*00002830*/ ADDMI       R2, R2, R1 
    /*00002834*/ LDR         R1, [R7, #1000]             @ 0x3e8 
    /*00002838*/ STR         R0, [R1, R2, LSL #2] 
    /*0000283c*/ STR         R3, [R7, #1016]             @ 0x3f8 
    /*00002840*/ STR         R2, [R7, #1008]             @ 0x3f0 
    VencVgsCallbackByJob_x2844:
    /*00002844*/ LDR         R0, [SP, #32] 
    /*00002848*/ CMP         R0, #0 
    /*0000284c*/ BEQ         VencVgsCallbackByJob_x2894
    /*00002850*/ BL          0x0000000000002850          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*00002854*/ CMP         R0, #0 
    /*00002858*/ BNE         VencVgsCallbackByJob_x2cb4
    VencVgsCallbackByJob_x285c:
    /*0000285c*/ ADD         R7, R4, #8192               @ 0x2000 
    /*00002860*/ LDR         R3, [R7, #3744]             @ 0xea0 
    /*00002864*/ LDR         R1, [R7, #3732]             @ 0xe94 
    /*00002868*/ CMP         R3, R1 
    /*0000286c*/ BGE         VencVgsCallbackByJob_x29bc
    /*00002870*/ LDR         R2, [R7, #3736]             @ 0xe98 
    /*00002874*/ ADD         R3, R3, #1 
    /*00002878*/ LDR         R0, [SP, #32] 
    /*0000287c*/ SUBS        R2, R2, #1 
    /*00002880*/ ADDMI       R2, R2, R1 
    /*00002884*/ LDR         R1, [R7, #3728]             @ 0xe90 
    /*00002888*/ STR         R0, [R1, R2, LSL #2] 
    /*0000288c*/ STR         R3, [R7, #3744]             @ 0xea0 
    /*00002890*/ STR         R2, [R7, #3736]             @ 0xe98 
    VencVgsCallbackByJob_x2894:
    /*00002894*/ CMP         SL, #0 
    /*00002898*/ CMPEQ       R5, #0 
    /*0000289c*/ BNE         VencVgsCallbackByJob_x28b4
    /*000028a0*/ LDR         R3, [SP, #28] 
    /*000028a4*/ LDR         R2, [SP, #32] 
    /*000028a8*/ CMP         R2, #0 
    /*000028ac*/ CMPEQ       R3, #0 
    /*000028b0*/ BEQ         VencVgsCallbackByJob_x28c0
    VencVgsCallbackByJob_x28b4:
    /*000028b4*/ LDR         R3, [FP, #20] 
    /*000028b8*/ ADD         R3, R3, #1 
    /*000028bc*/ STR         R3, [FP, #20] 
    VencVgsCallbackByJob_x28c0:
    /*000028c0*/ LDR         R3, [FP, #132]              @ 0x84 
    /*000028c4*/ CMP         R3, #1 
    /*000028c8*/ BEQ         VencVgsCallbackByJob_x2bb0
    VencVgsCallbackByJob_x28cc:
    /*000028cc*/ LDR         R3, [R6, #48]               @ 0x30 
    /*000028d0*/ CMP         R3, #1 
    /*000028d4*/ BEQ         VencVgsCallbackByJob_x2954
    /*000028d8*/ ADD         R1, R4, #8192               @ 0x2000 
    /*000028dc*/ MOV         IP, #1760                   @ 0x6e0 
    /*000028e0*/ MOVW        R2, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfc4] 
    /*000028e4*/ MOV         R0, #3 
    /*000028e8*/ LDR         R3, [R1, #4084]             @ 0xff4 
    /*000028ec*/ MOVT        R2, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfc4] 
    /*000028f0*/ ADD         R3, R3, #1 
    /*000028f4*/ STR         R3, [R1, #4084]             @ 0xff4 
    /*000028f8*/ LDR         R3, [R6, #48]               @ 0x30 
    /*000028fc*/ MOV         R1, #8 
    /*00002900*/ STR         R9, [SP, #4] 
    /*00002904*/ STR         IP, [SP] 
    /*00002908*/ STR         R3, [SP, #8] 
    /*0000290c*/ LDR         R3, [PC, #2700]             @ 0x00000000000033a0 
    /*00002910*/ BL          0x0000000000002910          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencVgsCallbackByJob_x2914:
    /*00002914*/ MOV         R0, R4 
    /*00002918*/ BL          0x0000000000002918          @ VencVgsWakeUpWaitQueue [R_ARM_CALL: .text+0x1e6c] 
    /*0000291c*/ ADD         R1, SP, #76                 @ 0x4c 
    /*00002920*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00002924*/ BL          0x0000000000002924          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VencVgsCallbackByJob_x2928:
    /*00002928*/ ADD         SP, SP, #84                 @ 0x54 
    /*0000292c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencVgsCallbackByJob_x2930:
    /*00002930*/ LDR         R2, [R4, #3696]             @ 0xe70 
    /*00002934*/ ADD         R3, R3, #1 
    /*00002938*/ SUBS        R2, R2, #1 
    /*0000293c*/ ADDMI       R2, R2, R1 
    /*00002940*/ LDR         R1, [R4, #3688]             @ 0xe68 
    /*00002944*/ STR         R5, [R1, R2, LSL #2] 
    /*00002948*/ STR         R3, [R4, #3704]             @ 0xe78 
    /*0000294c*/ STR         R2, [R4, #3696]             @ 0xe70 
    /*00002950*/ B           VencVgsCallbackByJob_x279c
    VencVgsCallbackByJob_x2954:
    /*00002954*/ LDR         R2, [FP, #176]              @ 0xb0 
    /*00002958*/ LDRD        R0, [R6, #40]               @ 0x28 
    /*0000295c*/ ASR         R3, R2, #31 
    /*00002960*/ CMP         R3, R1 
    /*00002964*/ CMPEQ       R2, R0 
    /*00002968*/ BEQ         VencVgsCallbackByJob_x2c24
    /*0000296c*/ MOVW        R3, #1765                   @ 0x6e5 
    /*00002970*/ STR         R9, [SP, #4] 
    /*00002974*/ STR         R3, [SP] 
    /*00002978*/ MOVW        R2, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x100c] 
    /*0000297c*/ LDR         R3, [PC, #2588]             @ 0x00000000000033a0 
    /*00002980*/ MOVT        R2, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0x100c] 
    /*00002984*/ MOV         R1, #8 
    /*00002988*/ MOV         R0, #3 
    /*0000298c*/ BL          0x000000000000298C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002990*/ B           VencVgsCallbackByJob_x2914
    VencVgsCallbackByJob_x2994:
    /*00002994*/ MOVW        R3, #1718                   @ 0x6b6 
    /*00002998*/ STR         R9, [SP, #4] 
    /*0000299c*/ STR         R3, [SP] 
    /*000029a0*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10ec] 
    /*000029a4*/ LDR         R3, [PC, #2548]             @ 0x00000000000033a0 
    /*000029a8*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10ec] 
    /*000029ac*/ MOV         R1, #8 
    /*000029b0*/ MOV         R0, #3 
    /*000029b4*/ BL          0x00000000000029B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000029b8*/ B           VencVgsCallbackByJob_x2844
    VencVgsCallbackByJob_x29bc:
    /*000029bc*/ MOVW        R3, #1733                   @ 0x6c5 
    /*000029c0*/ STR         R9, [SP, #4] 
    /*000029c4*/ STR         R3, [SP] 
    /*000029c8*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1138] 
    /*000029cc*/ LDR         R3, [PC, #2508]             @ 0x00000000000033a0 
    /*000029d0*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1138] 
    /*000029d4*/ MOV         R1, #8 
    /*000029d8*/ MOV         R0, #3 
    /*000029dc*/ BL          0x00000000000029DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000029e0*/ B           VencVgsCallbackByJob_x2894
    VencVgsCallbackByJob_x29e4:
    /*000029e4*/ MOVW        R3, #1703                   @ 0x6a7 
    /*000029e8*/ STR         R9, [SP, #4] 
    /*000029ec*/ STR         R3, [SP] 
    /*000029f0*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1098] 
    /*000029f4*/ LDR         R3, [PC, #2468]             @ 0x00000000000033a0 
    /*000029f8*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1098] 
    /*000029fc*/ MOV         R1, #8 
    /*00002a00*/ MOV         R0, #3 
    /*00002a04*/ BL          0x0000000000002A04          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002a08*/ B           VencVgsCallbackByJob_x27f4
    VencVgsCallbackByJob_x2a0c:
    /*00002a0c*/ LDR         R3, [R4, #56]               @ 0x38 
    /*00002a10*/ ADD         FP, R4, #12288              @ 0x3000 
    /*00002a14*/ CMP         R9, R3 
    /*00002a18*/ BNE         VencVgsCallbackByJob_x2728
    /*00002a1c*/ LDR         R0, [FP, #176]              @ 0xb0 
    /*00002a20*/ LDRD        R2, [R6, #40]               @ 0x28 
    /*00002a24*/ ASR         R1, R0, #31 
    /*00002a28*/ CMP         R1, R3 
    /*00002a2c*/ CMPEQ       R0, R2 
    /*00002a30*/ BNE         VencVgsCallbackByJob_x2728
    /*00002a34*/ LDR         R3, [R4, #16] 
    /*00002a38*/ CMP         R3, #0 
    /*00002a3c*/ BNE         VencVgsCallbackByJob_x2a4c
    /*00002a40*/ LDR         R3, [FP, #132]              @ 0x84 
    /*00002a44*/ CMP         R3, #0 
    /*00002a48*/ BEQ         VencVgsCallbackByJob_x2728
    VencVgsCallbackByJob_x2a4c:
    /*00002a4c*/ CMP         R5, #0 
    /*00002a50*/ BEQ         VencVgsCallbackByJob_x2ab4
    /*00002a54*/ LDR         R2, [R5] 
    /*00002a58*/ LDR         R3, [FP, #148]              @ 0x94 
    /*00002a5c*/ CMP         R2, R3 
    /*00002a60*/ BNE         VencVgsCallbackByJob_x2730
    /*00002a64*/ LDR         R2, [R5, #4] 
    /*00002a68*/ LDR         R3, [FP, #152]              @ 0x98 
    /*00002a6c*/ CMP         R2, R3 
    /*00002a70*/ BNE         VencVgsCallbackByJob_x2730
    /*00002a74*/ MOV         R3, #0 
    /*00002a78*/ STR         R3, [R5, #392]              @ 0x188 
    /*00002a7c*/ LDR         R2, [R4, #3724]             @ 0xe8c 
    /*00002a80*/ LDR         R1, [R4, #3712]             @ 0xe80 
    /*00002a84*/ CMP         R2, R1 
    /*00002a88*/ BGE         VencVgsCallbackByJob_x3314
    /*00002a8c*/ LDR         R3, [R4, #3716]             @ 0xe84 
    /*00002a90*/ ADD         R2, R2, #1 
    /*00002a94*/ SUBS        R3, R3, #1 
    /*00002a98*/ ADDMI       R3, R3, R1 
    /*00002a9c*/ LDR         R1, [R4, #3708]             @ 0xe7c 
    /*00002aa0*/ STR         R5, [R1, R3, LSL #2] 
    /*00002aa4*/ STR         R2, [R4, #3724]             @ 0xe8c 
    /*00002aa8*/ STR         R3, [R4, #3716]             @ 0xe84 
    VencVgsCallbackByJob_x2aac:
    /*00002aac*/ LDR         R3, [R5, #232]              @ 0xe8 
    /*00002ab0*/ STR         R3, [R4, #32] 
    VencVgsCallbackByJob_x2ab4:
    /*00002ab4*/ CMP         SL, #0 
    /*00002ab8*/ BEQ         VencVgsCallbackByJob_x2af0
    /*00002abc*/ ADD         R3, R4, #4096               @ 0x1000 
    /*00002ac0*/ LDR         R1, [R3, #2356]             @ 0x934 
    /*00002ac4*/ LDR         R0, [R3, #2344]             @ 0x928 
    /*00002ac8*/ CMP         R1, R0 
    /*00002acc*/ BGE         VencVgsCallbackByJob_x333c
    /*00002ad0*/ LDR         R2, [R3, #2348]             @ 0x92c 
    /*00002ad4*/ ADD         R1, R1, #1 
    /*00002ad8*/ SUBS        R2, R2, #1 
    /*00002adc*/ ADDMI       R2, R2, R0 
    /*00002ae0*/ LDR         R0, [R3, #2340]             @ 0x924 
    /*00002ae4*/ STR         SL, [R0, R2, LSL #2] 
    /*00002ae8*/ STR         R1, [R3, #2356]             @ 0x934 
    /*00002aec*/ STR         R2, [R3, #2348]             @ 0x92c 
    VencVgsCallbackByJob_x2af0:
    /*00002af0*/ LDR         R3, [SP, #28] 
    /*00002af4*/ ADD         R7, R4, #8192               @ 0x2000 
    /*00002af8*/ CMP         R3, #0 
    /*00002afc*/ BEQ         VencVgsCallbackByJob_x2b34
    /*00002b00*/ LDR         R2, [R7, #1036]             @ 0x40c 
    /*00002b04*/ LDR         R1, [R7, #1024]             @ 0x400 
    /*00002b08*/ CMP         R2, R1 
    /*00002b0c*/ BGE         VencVgsCallbackByJob_x32c4
    /*00002b10*/ LDR         R3, [R7, #1028]             @ 0x404 
    /*00002b14*/ ADD         R2, R2, #1 
    /*00002b18*/ LDR         R0, [SP, #28] 
    /*00002b1c*/ SUBS        R3, R3, #1 
    /*00002b20*/ ADDMI       R3, R3, R1 
    /*00002b24*/ LDR         R1, [R7, #1020]             @ 0x3fc 
    /*00002b28*/ STR         R0, [R1, R3, LSL #2] 
    /*00002b2c*/ STR         R2, [R7, #1036]             @ 0x40c 
    /*00002b30*/ STR         R3, [R7, #1028]             @ 0x404 
    VencVgsCallbackByJob_x2b34:
    /*00002b34*/ LDR         R3, [SP, #32] 
    /*00002b38*/ CMP         R3, #0 
    /*00002b3c*/ BEQ         VencVgsCallbackByJob_x2b74
    /*00002b40*/ LDR         R2, [R7, #3764]             @ 0xeb4 
    /*00002b44*/ LDR         R1, [R7, #3752]             @ 0xea8 
    /*00002b48*/ CMP         R2, R1 
    /*00002b4c*/ BGE         VencVgsCallbackByJob_x32ec
    /*00002b50*/ LDR         R3, [R7, #3756]             @ 0xeac 
    /*00002b54*/ ADD         R2, R2, #1 
    /*00002b58*/ LDR         R0, [SP, #32] 
    /*00002b5c*/ SUBS        R3, R3, #1 
    /*00002b60*/ ADDMI       R3, R3, R1 
    /*00002b64*/ LDR         R1, [R7, #3748]             @ 0xea4 
    /*00002b68*/ STR         R0, [R1, R3, LSL #2] 
    /*00002b6c*/ STR         R2, [R7, #3764]             @ 0xeb4 
    /*00002b70*/ STR         R3, [R7, #3756]             @ 0xeac 
    VencVgsCallbackByJob_x2b74:
    /*00002b74*/ MOVW        R5, #0                      @ QuickSchedule [R_ARM_MOVW_ABS_NC: .data+0xcc] 
    /*00002b78*/ MOVT        R5, #0                      @ QuickSchedule [R_ARM_MOVT_ABS: .data+0xcc] 
    /*00002b7c*/ LDR         R3, [R7, #4080]             @ 0xff0 
    /*00002b80*/ LDR         R2, [R5] 
    /*00002b84*/ ADD         R3, R3, #1 
    /*00002b88*/ STR         R3, [R7, #4080]             @ 0xff0 
    /*00002b8c*/ CMP         R2, #1 
    /*00002b90*/ LDR         R3, [R7, #4056]             @ 0xfd8 
    /*00002b94*/ ADD         R3, R3, #1 
    /*00002b98*/ STR         R3, [R7, #4056]             @ 0xfd8 
    /*00002b9c*/ BEQ         VencVgsCallbackByJob_x3364
    VencVgsCallbackByJob_x2ba0:
    /*00002ba0*/ ADD         R1, SP, #76                 @ 0x4c 
    /*00002ba4*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00002ba8*/ BL          0x0000000000002BA8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002bac*/ B           VencVgsCallbackByJob_x2928
    VencVgsCallbackByJob_x2bb0:
    /*00002bb0*/ LDR         R3, [R4, #56]               @ 0x38 
    /*00002bb4*/ CMP         R9, R3 
    /*00002bb8*/ BNE         VencVgsCallbackByJob_x28cc
    /*00002bbc*/ LDR         R0, [FP, #176]              @ 0xb0 
    /*00002bc0*/ LDRD        R2, [R6, #40]               @ 0x28 
    /*00002bc4*/ ASR         R1, R0, #31 
    /*00002bc8*/ CMP         R3, R1 
    /*00002bcc*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00002bd0*/ CMPEQ       R2, R0 
    /*00002bd4*/ ANDEQ       R3, R3, #1 
    /*00002bd8*/ MOVNE       R3, #0 
    /*00002bdc*/ CMP         R3, #0 
    /*00002be0*/ BEQ         VencVgsCallbackByJob_x28cc
    /*00002be4*/ LDR         R3, [FP, #140]              @ 0x8c 
    /*00002be8*/ SUB         R3, R3, #1 
    /*00002bec*/ STR         R3, [FP, #140]              @ 0x8c 
    /*00002bf0*/ CMP         R3, #0 
    /*00002bf4*/ STREQ       R3, [FP, #132]              @ 0x84 
    /*00002bf8*/ B           VencVgsCallbackByJob_x28cc
    VencVgsCallbackByJob_x2bfc:
    /*00002bfc*/ MOV         R3, #1584                   @ 0x630 
    /*00002c00*/ STR         R9, [SP, #4] 
    /*00002c04*/ STR         R3, [SP] 
    /*00002c08*/ MOVW        R2, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd2c] 
    /*00002c0c*/ LDR         R3, [PC, #1932]             @ 0x00000000000033a0 
    /*00002c10*/ MOVT        R2, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd2c] 
    /*00002c14*/ MOV         R1, #8 
    /*00002c18*/ MOV         R0, #3 
    /*00002c1c*/ BL          0x0000000000002C1C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002c20*/ B           VencVgsCallbackByJob_x2768
    VencVgsCallbackByJob_x2c24:
    /*00002c24*/ CMP         R5, #0 
    /*00002c28*/ BEQ         VencVgsCallbackByJob_x2d10
    /*00002c2c*/ LDR         R1, [FP, #148]              @ 0x94 
    /*00002c30*/ LDR         R3, [R5] 
    /*00002c34*/ LDR         R2, [FP, #152]              @ 0x98 
    /*00002c38*/ CMP         R3, R1 
    /*00002c3c*/ BEQ         VencVgsCallbackByJob_x2d04
    VencVgsCallbackByJob_x2c40:
    /*00002c40*/ LDR         R3, [FP, #580]              @ 0x244 
    /*00002c44*/ MOVW        IP, #1773                   @ 0x6ed 
    /*00002c48*/ MOV         R0, #4 
    /*00002c4c*/ ADD         R3, R3, #1 
    /*00002c50*/ STR         R3, [FP, #580]              @ 0x244 
    /*00002c54*/ STR         R2, [SP, #20] 
    /*00002c58*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xde4] 
    /*00002c5c*/ STR         R1, [SP, #16] 
    /*00002c60*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0xde4] 
    /*00002c64*/ LDR         LR, [R5, #4] 
    /*00002c68*/ MOV         R1, #8 
    /*00002c6c*/ LDR         R3, [PC, #1836]             @ 0x00000000000033a0 
    /*00002c70*/ STR         LR, [SP, #12] 
    /*00002c74*/ LDR         LR, [R5] 
    /*00002c78*/ STR         R9, [SP, #4] 
    /*00002c7c*/ STR         IP, [SP] 
    /*00002c80*/ STR         LR, [SP, #8] 
    /*00002c84*/ BL          0x0000000000002C84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002c88*/ B           VencVgsCallbackByJob_x2914
    VencVgsCallbackByJob_x2c8c:
    /*00002c8c*/ MOV         R3, #1712                   @ 0x6b0 
    /*00002c90*/ STR         R9, [SP, #4] 
    /*00002c94*/ STR         R3, [SP] 
    /*00002c98*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xedc] 
    /*00002c9c*/ LDR         R3, [PC, #1788]             @ 0x00000000000033a0 
    /*00002ca0*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0xedc] 
    /*00002ca4*/ MOV         R1, #8 
    /*00002ca8*/ MOV         R0, #3 
    /*00002cac*/ BL          0x0000000000002CAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002cb0*/ B           VencVgsCallbackByJob_x280c
    VencVgsCallbackByJob_x2cb4:
    /*00002cb4*/ MOVW        R3, #1727                   @ 0x6bf 
    /*00002cb8*/ STR         R9, [SP, #4] 
    /*00002cbc*/ STR         R3, [SP] 
    /*00002cc0*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xedc] 
    /*00002cc4*/ LDR         R3, [PC, #1748]             @ 0x00000000000033a0 
    /*00002cc8*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0xedc] 
    /*00002ccc*/ MOV         R1, #8 
    /*00002cd0*/ MOV         R0, #3 
    /*00002cd4*/ BL          0x0000000000002CD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002cd8*/ B           VencVgsCallbackByJob_x285c
    VencVgsCallbackByJob_x2cdc:
    /*00002cdc*/ MOVW        R3, #1697                   @ 0x6a1 
    /*00002ce0*/ STR         R9, [SP, #4] 
    /*00002ce4*/ STR         R3, [SP] 
    /*00002ce8*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xedc] 
    /*00002cec*/ LDR         R3, [PC, #1708]             @ 0x00000000000033a0 
    /*00002cf0*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0xedc] 
    /*00002cf4*/ MOV         R1, #8 
    /*00002cf8*/ MOV         R0, #3 
    /*00002cfc*/ BL          0x0000000000002CFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002d00*/ B           VencVgsCallbackByJob_x27c0
    VencVgsCallbackByJob_x2d04:
    /*00002d04*/ LDR         R3, [R5, #4] 
    /*00002d08*/ CMP         R3, R2 
    /*00002d0c*/ BNE         VencVgsCallbackByJob_x2c40
    VencVgsCallbackByJob_x2d10:
    /*00002d10*/ ADD         R1, R4, #8192               @ 0x2000 
    /*00002d14*/ LDR         R0, [SP, #48]               @ 0x30 
    /*00002d18*/ MOVW        IP, #1779                   @ 0x6f3 
    /*00002d1c*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe3c] 
    /*00002d20*/ LDR         R3, [R1, #4092]             @ 0xffc 
    /*00002d24*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe3c] 
    /*00002d28*/ ADD         R3, R3, #1 
    /*00002d2c*/ STR         R3, [R1, #4092]             @ 0xffc 
    /*00002d30*/ LDR         R3, [R4, #16] 
    /*00002d34*/ MOV         R1, #8 
    /*00002d38*/ STR         R0, [SP, #4] 
    /*00002d3c*/ MOV         R0, #4 
    /*00002d40*/ STR         R9, [SP, #8] 
    /*00002d44*/ STR         R3, [SP, #12] 
    /*00002d48*/ STR         IP, [SP] 
    /*00002d4c*/ LDR         R3, [PC, #1612]             @ 0x00000000000033a0 
    /*00002d50*/ BL          0x0000000000002D50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002d54*/ B           VencVgsCallbackByJob_x2914
    VencVgsCallbackByJob_x2d58:
    /*00002d58*/ CMP         SL, #0 
    /*00002d5c*/ BEQ         VencVgsCallbackByJob_x2e9c
    /*00002d60*/ MOVW        R3, #1601                   @ 0x641 
    /*00002d64*/ MOVW        R2, #0                      @ .LC69 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf80] 
    /*00002d68*/ STR         R3, [SP] 
    /*00002d6c*/ MOVT        R2, #0                      @ .LC69 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf80] 
    /*00002d70*/ LDR         R3, [PC, #1576]             @ 0x00000000000033a0 
    /*00002d74*/ MOV         R1, #8 
    /*00002d78*/ MOV         R0, #3 
    /*00002d7c*/ BL          0x0000000000002D7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002d80*/ LDR         R3, [R4, #3724]             @ 0xe8c 
    /*00002d84*/ CMP         R3, #0 
    /*00002d88*/ BEQ         VencVgsCallbackByJob_x27b0
    /*00002d8c*/ MOVW        R2, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x104c] 
    /*00002d90*/ MOVT        R2, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x104c] 
    /*00002d94*/ MOV         R7, R5 
    /*00002d98*/ STR         R5, [SP, #52]               @ 0x34 
    /*00002d9c*/ STR         R6, [SP, #56]               @ 0x38 
    /*00002da0*/ MOV         IP, R3 
    /*00002da4*/ STR         SL, [SP, #40]               @ 0x28 
    /*00002da8*/ MOV         R6, R3 
    /*00002dac*/ STR         FP, [SP, #60]               @ 0x3c 
    /*00002db0*/ MOV         R5, R2 
    /*00002db4*/ B           VencVgsCallbackByJob_x2e00
    VencVgsCallbackByJob_x2db8:
    /*00002db8*/ LDR         LR, [R4, #3720]             @ 0xe88 
    /*00002dbc*/ LDR         R0, [R4, #3708]             @ 0xe7c 
    /*00002dc0*/ SUB         LR, LR, R7 
    /*00002dc4*/ SUBS        LR, LR, #1 
    /*00002dc8*/ LDRMI       R3, [R4, #3712]             @ 0xe80 
    /*00002dcc*/ ADDMI       LR, LR, R3 
    /*00002dd0*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00002dd4*/ LDR         R8, [R0, LR, LSL #2] 
    /*00002dd8*/ LSL         R1, LR, #2 
    /*00002ddc*/ LDRD        R2, [R3, #240]              @ 0xf0 
    /*00002de0*/ LDRD        SL, [R8, #240]              @ 0xf0 
    /*00002de4*/ CMP         FP, R3 
    /*00002de8*/ CMPEQ       SL, R2 
    /*00002dec*/ BEQ         VencVgsCallbackByJob_x2f68
    VencVgsCallbackByJob_x2df0:
    /*00002df0*/ ADD         R7, R7, #1 
    /*00002df4*/ CMP         R7, R6 
    /*00002df8*/ BEQ         VencVgsCallbackByJob_x2e78
    /*00002dfc*/ LDR         IP, [R4, #3724]             @ 0xe8c 
    VencVgsCallbackByJob_x2e00:
    /*00002e00*/ BIC         R2, R7, R7, ASR #31 
    /*00002e04*/ LDR         R3, [PC, #1428]             @ 0x00000000000033a0 
    /*00002e08*/ CMP         R2, IP 
    /*00002e0c*/ MOV         R1, #8 
    /*00002e10*/ MOV         R2, R5 
    /*00002e14*/ MOV         R0, #3 
    /*00002e18*/ BLT         VencVgsCallbackByJob_x2db8
    /*00002e1c*/ MOVW        IP, #1609                   @ 0x649 
    /*00002e20*/ STR         R9, [SP, #4] 
    /*00002e24*/ STR         IP, [SP] 
    /*00002e28*/ BL          0x0000000000002E28          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002e2c*/ B           VencVgsCallbackByJob_x2df0
    VencVgsCallbackByJob_x2e30:
    /*00002e30*/ MOVW        R3, #1546                   @ 0x60a 
    /*00002e34*/ STR         R9, [SP, #4] 
    /*00002e38*/ STR         R3, [SP] 
    /*00002e3c*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xeb4] 
    /*00002e40*/ LDR         R3, [PC, #1368]             @ 0x00000000000033a0 
    /*00002e44*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0xeb4] 
    /*00002e48*/ MOV         R1, #8 
    /*00002e4c*/ MOV         R0, #3 
    /*00002e50*/ BL          0x0000000000002E50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002e54*/ B           VencVgsCallbackByJob_x2670
    VencVgsCallbackByJob_x2e58:
    /*00002e58*/ MOVW        R3, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf6c] 
    /*00002e5c*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00002e60*/ MOVT        R3, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf6c] 
    /*00002e64*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00002e68*/ MOVW        R2, #1539                   @ 0x603 
    /*00002e6c*/ LDR         R1, [PC, #1324]             @ 0x00000000000033a0 
    /*00002e70*/ BL          0x0000000000002E70          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00002e74*/ B           VencVgsCallbackByJob_x2620
    VencVgsCallbackByJob_x2e78:
    /*00002e78*/ LDR         R5, [SP, #52]               @ 0x34 
    /*00002e7c*/ LDR         SL, [SP, #40]               @ 0x28 
    /*00002e80*/ LDR         R6, [SP, #56]               @ 0x38 
    /*00002e84*/ LDR         FP, [SP, #60]               @ 0x3c 
    /*00002e88*/ B           VencVgsCallbackByJob_x27b0
    VencVgsCallbackByJob_x2e8c:
    /*00002e8c*/ ADD         R1, R5, #336                @ 0x150 
    /*00002e90*/ MOV         R0, R9 
    /*00002e94*/ BL          0x0000000000002E94          @ VencPutOverLayEx [R_ARM_CALL: .text+0x1528] 
    /*00002e98*/ B           VencVgsCallbackByJob_x2718
    VencVgsCallbackByJob_x2e9c:
    /*00002e9c*/ LDR         R3, [SP, #28] 
    /*00002ea0*/ CMP         R3, #0 
    /*00002ea4*/ BEQ         VencVgsCallbackByJob_x2844
    /*00002ea8*/ LDR         R3, [R4, #3724]             @ 0xe8c 
    /*00002eac*/ CMP         R3, #0 
    /*00002eb0*/ BEQ         VencVgsCallbackByJob_x27f4
    /*00002eb4*/ MOVW        R2, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x104c] 
    /*00002eb8*/ MOVT        R2, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x104c] 
    /*00002ebc*/ STR         R5, [SP, #56]               @ 0x38 
    /*00002ec0*/ MOV         IP, R3 
    /*00002ec4*/ STR         R6, [SP, #64]               @ 0x40 
    /*00002ec8*/ MOV         R7, SL 
    /*00002ecc*/ STR         SL, [SP, #60]               @ 0x3c 
    /*00002ed0*/ MOV         R5, R2 
    /*00002ed4*/ STR         R9, [SP, #52]               @ 0x34 
    /*00002ed8*/ LDR         R6, [SP, #28] 
    /*00002edc*/ STR         FP, [SP, #68]               @ 0x44 
    /*00002ee0*/ STR         R3, [SP, #40]               @ 0x28 
    /*00002ee4*/ B           VencVgsCallbackByJob_x2f34
    VencVgsCallbackByJob_x2ee8:
    /*00002ee8*/ LDR         LR, [R4, #3720]             @ 0xe88 
    /*00002eec*/ LDR         R1, [R4, #3708]             @ 0xe7c 
    /*00002ef0*/ SUB         LR, LR, R7 
    /*00002ef4*/ SUBS        LR, LR, #1 
    /*00002ef8*/ MOV         R0, R1 
    /*00002efc*/ LDRMI       R3, [R4, #3712]             @ 0xe80 
    /*00002f00*/ ADDMI       LR, LR, R3 
    /*00002f04*/ LDRD        R2, [R6, #240]              @ 0xf0 
    /*00002f08*/ LDR         R8, [R1, LR, LSL #2] 
    /*00002f0c*/ LSL         R9, LR, #2 
    /*00002f10*/ LDRD        SL, [R8, #240]              @ 0xf0 
    /*00002f14*/ CMP         FP, R3 
    /*00002f18*/ CMPEQ       SL, R2 
    /*00002f1c*/ BEQ         VencVgsCallbackByJob_x30cc
    VencVgsCallbackByJob_x2f20:
    /*00002f20*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00002f24*/ ADD         R7, R7, #1 
    /*00002f28*/ CMP         R7, R3 
    /*00002f2c*/ BEQ         VencVgsCallbackByJob_x30b4
    /*00002f30*/ LDR         IP, [R4, #3724]             @ 0xe8c 
    VencVgsCallbackByJob_x2f34:
    /*00002f34*/ BIC         R2, R7, R7, ASR #31 
    /*00002f38*/ LDR         R3, [PC, #1120]             @ 0x00000000000033a0 
    /*00002f3c*/ CMP         IP, R2 
    /*00002f40*/ MOV         R1, #8 
    /*00002f44*/ MOV         R2, R5 
    /*00002f48*/ MOV         R0, #3 
    /*00002f4c*/ BGT         VencVgsCallbackByJob_x2ee8
    /*00002f50*/ LDR         IP, [SP, #52]               @ 0x34 
    /*00002f54*/ STR         IP, [SP, #4] 
    /*00002f58*/ MOVW        IP, #1654                   @ 0x676 
    /*00002f5c*/ STR         IP, [SP] 
    /*00002f60*/ BL          0x0000000000002F60          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002f64*/ B           VencVgsCallbackByJob_x2f20
    VencVgsCallbackByJob_x2f68:
    /*00002f68*/ LDR         R7, [R4, #3716]             @ 0xe84 
    /*00002f6c*/ SUB         IP, IP, #1 
    /*00002f70*/ LDR         R5, [SP, #52]               @ 0x34 
    /*00002f74*/ MOV         R3, R1 
    /*00002f78*/ CMP         LR, R7 
    /*00002f7c*/ LDR         SL, [SP, #40]               @ 0x28 
    /*00002f80*/ LDR         R6, [SP, #56]               @ 0x38 
    /*00002f84*/ LDR         FP, [SP, #60]               @ 0x3c 
    /*00002f88*/ STR         IP, [R4, #3724]             @ 0xe8c 
    /*00002f8c*/ BGT         VencVgsCallbackByJob_x301c
    /*00002f90*/ BGE         VencVgsCallbackByJob_x2ffc
    /*00002f94*/ CMP         LR, #0 
    /*00002f98*/ BLE         VencVgsCallbackByJob_x2fb8
    VencVgsCallbackByJob_x2f9c:
    /*00002f9c*/ ADD         R2, R0, R3 
    /*00002fa0*/ SUBS        LR, LR, #1 
    /*00002fa4*/ LDR         R2, [R2, #-4] 
    /*00002fa8*/ STR         R2, [R0, R3] 
    /*00002fac*/ SUB         R3, R3, #4 
    /*00002fb0*/ LDR         R0, [R4, #3708]             @ 0xe7c 
    /*00002fb4*/ BNE         VencVgsCallbackByJob_x2f9c
    VencVgsCallbackByJob_x2fb8:
    /*00002fb8*/ LDR         R2, [R4, #3712]             @ 0xe80 
    /*00002fbc*/ SUB         R2, R2, #-1073741823        @ 0xc0000001 
    /*00002fc0*/ LDR         R2, [R0, R2, LSL #2] 
    /*00002fc4*/ STR         R2, [R0] 
    /*00002fc8*/ LDR         R2, [R4, #3712]             @ 0xe80 
    /*00002fcc*/ SUB         R1, R2, #1 
    /*00002fd0*/ CMP         R7, R1 
    /*00002fd4*/ BGE         VencVgsCallbackByJob_x3000
    /*00002fd8*/ LSL         R2, R1, #2 
    VencVgsCallbackByJob_x2fdc:
    /*00002fdc*/ LDR         R3, [R4, #3708]             @ 0xe7c 
    /*00002fe0*/ SUB         R1, R1, #1 
    /*00002fe4*/ CMP         R7, R1 
    /*00002fe8*/ ADD         R0, R3, R2 
    /*00002fec*/ LDR         R0, [R0, #-4] 
    /*00002ff0*/ STR         R0, [R3, R2] 
    /*00002ff4*/ SUB         R2, R2, #4 
    /*00002ff8*/ BNE         VencVgsCallbackByJob_x2fdc
    VencVgsCallbackByJob_x2ffc:
    /*00002ffc*/ LDR         R2, [R4, #3712]             @ 0xe80 
    VencVgsCallbackByJob_x3000:
    /*00003000*/ ADD         R3, R7, #1 
    /*00003004*/ CMP         R3, R2 
    /*00003008*/ MOVGE       R3, #0 
    /*0000300c*/ STR         R3, [R4, #3716]             @ 0xe84 
    /*00003010*/ B           VencVgsCallbackByJob_x3048
    VencVgsCallbackByJob_x3014:
    /*00003014*/ LDR         R0, [R4, #3708]             @ 0xe7c 
    /*00003018*/ MOV         LR, R2 
    VencVgsCallbackByJob_x301c:
    /*0000301c*/ ADD         R1, R0, R3 
    /*00003020*/ SUB         R2, LR, #1 
    /*00003024*/ CMP         R7, R2 
    /*00003028*/ LDR         R1, [R1, #-4] 
    /*0000302c*/ STR         R1, [R0, R3] 
    /*00003030*/ SUB         R3, R3, #4 
    /*00003034*/ BNE         VencVgsCallbackByJob_x3014
    /*00003038*/ LDR         R3, [R4, #3712]             @ 0xe80 
    /*0000303c*/ CMP         R3, LR 
    /*00003040*/ MOVLE       LR, #0 
    /*00003044*/ STR         LR, [R4, #3716]             @ 0xe84 
    VencVgsCallbackByJob_x3048:
    /*00003048*/ LDR         R2, [R8, #380]              @ 0x17c 
    /*0000304c*/ CMP         R2, #0 
    /*00003050*/ BEQ         VencVgsCallbackByJob_x3070
    /*00003054*/ MOV         R3, #0 
    /*00003058*/ STR         R3, [R2] 
    /*0000305c*/ LDR         R2, [R8, #380]              @ 0x17c 
    /*00003060*/ STR         R3, [R2, #2792]             @ 0xae8 
    /*00003064*/ STR         R3, [R8, #336]              @ 0x150 
    /*00003068*/ STR         R3, [R8, #340]              @ 0x154 
    /*0000306c*/ STR         R3, [R8, #380]              @ 0x17c 
    VencVgsCallbackByJob_x3070:
    /*00003070*/ MOV         R0, R8 
    /*00003074*/ BL          0x0000000000003074          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*00003078*/ CMP         R0, #0 
    /*0000307c*/ BNE         VencVgsCallbackByJob_x3274
    VencVgsCallbackByJob_x3080:
    /*00003080*/ LDR         R3, [R4, #3704]             @ 0xe78 
    /*00003084*/ LDR         R1, [R4, #3692]             @ 0xe6c 
    /*00003088*/ CMP         R3, R1 
    /*0000308c*/ BGE         VencVgsCallbackByJob_x3224
    /*00003090*/ LDR         R2, [R4, #3696]             @ 0xe70 
    /*00003094*/ ADD         R3, R3, #1 
    /*00003098*/ SUBS        R2, R2, #1 
    /*0000309c*/ ADDMI       R2, R2, R1 
    /*000030a0*/ LDR         R1, [R4, #3688]             @ 0xe68 
    /*000030a4*/ STR         R8, [R1, R2, LSL #2] 
    /*000030a8*/ STR         R3, [R4, #3704]             @ 0xe78 
    /*000030ac*/ STR         R2, [R4, #3696]             @ 0xe70 
    /*000030b0*/ B           VencVgsCallbackByJob_x27b0
    VencVgsCallbackByJob_x30b4:
    /*000030b4*/ LDR         R9, [SP, #52]               @ 0x34 
    /*000030b8*/ LDR         R5, [SP, #56]               @ 0x38 
    /*000030bc*/ LDR         SL, [SP, #60]               @ 0x3c 
    /*000030c0*/ LDR         R6, [SP, #64]               @ 0x40 
    /*000030c4*/ LDR         FP, [SP, #68]               @ 0x44 
    /*000030c8*/ B           VencVgsCallbackByJob_x27f4
    VencVgsCallbackByJob_x30cc:
    /*000030cc*/ LDR         R7, [R4, #3716]             @ 0xe84 
    /*000030d0*/ MOV         R3, R9 
    /*000030d4*/ SUB         IP, IP, #1 
    /*000030d8*/ LDR         R5, [SP, #56]               @ 0x38 
    /*000030dc*/ CMP         LR, R7 
    /*000030e0*/ LDR         R9, [SP, #52]               @ 0x34 
    /*000030e4*/ LDR         SL, [SP, #60]               @ 0x3c 
    /*000030e8*/ LDR         R6, [SP, #64]               @ 0x40 
    /*000030ec*/ LDR         FP, [SP, #68]               @ 0x44 
    /*000030f0*/ STR         IP, [R4, #3724]             @ 0xe8c 
    /*000030f4*/ BGT         VencVgsCallbackByJob_x318c
    /*000030f8*/ BGE         VencVgsCallbackByJob_x316c
    /*000030fc*/ CMP         LR, #0 
    /*00003100*/ BGT         VencVgsCallbackByJob_x310c
    /*00003104*/ B           VencVgsCallbackByJob_x3128
    VencVgsCallbackByJob_x3108:
    /*00003108*/ LDR         R0, [R4, #3708]             @ 0xe7c 
    VencVgsCallbackByJob_x310c:
    /*0000310c*/ ADD         R2, R0, R3 
    /*00003110*/ SUBS        LR, LR, #1 
    /*00003114*/ LDR         R2, [R2, #-4] 
    /*00003118*/ STR         R2, [R0, R3] 
    /*0000311c*/ SUB         R3, R3, #4 
    /*00003120*/ BNE         VencVgsCallbackByJob_x3108
    /*00003124*/ LDR         R1, [R4, #3708]             @ 0xe7c 
    VencVgsCallbackByJob_x3128:
    /*00003128*/ LDR         R2, [R4, #3712]             @ 0xe80 
    /*0000312c*/ SUB         R2, R2, #-1073741823        @ 0xc0000001 
    /*00003130*/ LDR         R2, [R1, R2, LSL #2] 
    /*00003134*/ STR         R2, [R1] 
    /*00003138*/ LDR         R2, [R4, #3712]             @ 0xe80 
    /*0000313c*/ SUB         R1, R2, #1 
    /*00003140*/ CMP         R7, R1 
    /*00003144*/ LSLLT       R2, R1, #2 
    /*00003148*/ BGE         VencVgsCallbackByJob_x3170
    VencVgsCallbackByJob_x314c:
    /*0000314c*/ LDR         R3, [R4, #3708]             @ 0xe7c 
    /*00003150*/ SUB         R1, R1, #1 
    /*00003154*/ CMP         R7, R1 
    /*00003158*/ ADD         R0, R3, R2 
    /*0000315c*/ LDR         R0, [R0, #-4] 
    /*00003160*/ STR         R0, [R3, R2] 
    /*00003164*/ SUB         R2, R2, #4 
    /*00003168*/ BNE         VencVgsCallbackByJob_x314c
    VencVgsCallbackByJob_x316c:
    /*0000316c*/ LDR         R2, [R4, #3712]             @ 0xe80 
    VencVgsCallbackByJob_x3170:
    /*00003170*/ ADD         R3, R7, #1 
    /*00003174*/ CMP         R3, R2 
    /*00003178*/ MOVGE       R3, #0 
    /*0000317c*/ STR         R3, [R4, #3716]             @ 0xe84 
    /*00003180*/ B           VencVgsCallbackByJob_x31b8
    VencVgsCallbackByJob_x3184:
    /*00003184*/ LDR         R0, [R4, #3708]             @ 0xe7c 
    /*00003188*/ MOV         LR, R2 
    VencVgsCallbackByJob_x318c:
    /*0000318c*/ ADD         R1, R0, R3 
    /*00003190*/ SUB         R2, LR, #1 
    /*00003194*/ CMP         R7, R2 
    /*00003198*/ LDR         R1, [R1, #-4] 
    /*0000319c*/ STR         R1, [R0, R3] 
    /*000031a0*/ SUB         R3, R3, #4 
    /*000031a4*/ BNE         VencVgsCallbackByJob_x3184
    /*000031a8*/ LDR         R3, [R4, #3712]             @ 0xe80 
    /*000031ac*/ CMP         R3, LR 
    /*000031b0*/ MOVLE       LR, #0 
    /*000031b4*/ STR         LR, [R4, #3716]             @ 0xe84 
    VencVgsCallbackByJob_x31b8:
    /*000031b8*/ LDR         R2, [R8, #380]              @ 0x17c 
    /*000031bc*/ CMP         R2, #0 
    /*000031c0*/ BEQ         VencVgsCallbackByJob_x31e0
    /*000031c4*/ MOV         R3, #0 
    /*000031c8*/ STR         R3, [R2] 
    /*000031cc*/ LDR         R2, [R8, #380]              @ 0x17c 
    /*000031d0*/ STR         R3, [R2, #2792]             @ 0xae8 
    /*000031d4*/ STR         R3, [R8, #336]              @ 0x150 
    /*000031d8*/ STR         R3, [R8, #340]              @ 0x154 
    /*000031dc*/ STR         R3, [R8, #380]              @ 0x17c 
    VencVgsCallbackByJob_x31e0:
    /*000031e0*/ MOV         R0, R8 
    /*000031e4*/ BL          0x00000000000031E4          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*000031e8*/ CMP         R0, #0 
    /*000031ec*/ BNE         VencVgsCallbackByJob_x329c
    VencVgsCallbackByJob_x31f0:
    /*000031f0*/ LDR         R3, [R4, #3704]             @ 0xe78 
    /*000031f4*/ LDR         R1, [R4, #3692]             @ 0xe6c 
    /*000031f8*/ CMP         R3, R1 
    /*000031fc*/ BGE         VencVgsCallbackByJob_x324c
    /*00003200*/ LDR         R2, [R4, #3696]             @ 0xe70 
    /*00003204*/ ADD         R3, R3, #1 
    /*00003208*/ SUBS        R2, R2, #1 
    /*0000320c*/ ADDMI       R2, R2, R1 
    /*00003210*/ LDR         R1, [R4, #3688]             @ 0xe68 
    /*00003214*/ STR         R8, [R1, R2, LSL #2] 
    /*00003218*/ STR         R3, [R4, #3704]             @ 0xe78 
    /*0000321c*/ STR         R2, [R4, #3696]             @ 0xe70 
    /*00003220*/ B           VencVgsCallbackByJob_x27f4
    VencVgsCallbackByJob_x3224:
    /*00003224*/ MOVW        R3, #1635                   @ 0x663 
    /*00003228*/ STR         R9, [SP, #4] 
    /*0000322c*/ STR         R3, [SP] 
    /*00003230*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xedc] 
    /*00003234*/ LDR         R3, [PC, #356]              @ 0x00000000000033a0 
    /*00003238*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0xedc] 
    /*0000323c*/ MOV         R1, #8 
    /*00003240*/ MOV         R0, #3 
    /*00003244*/ BL          0x0000000000003244          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003248*/ B           VencVgsCallbackByJob_x27b0
    VencVgsCallbackByJob_x324c:
    /*0000324c*/ MOVW        R3, #1681                   @ 0x691 
    /*00003250*/ STR         R9, [SP, #4] 
    /*00003254*/ STR         R3, [SP] 
    /*00003258*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xedc] 
    /*0000325c*/ LDR         R3, [PC, #316]              @ 0x00000000000033a0 
    /*00003260*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0xedc] 
    /*00003264*/ MOV         R1, #8 
    /*00003268*/ MOV         R0, #3 
    /*0000326c*/ BL          0x000000000000326C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003270*/ B           VencVgsCallbackByJob_x27f4
    VencVgsCallbackByJob_x3274:
    /*00003274*/ MOVW        R3, #1630                   @ 0x65e 
    /*00003278*/ STR         R9, [SP, #4] 
    /*0000327c*/ STR         R3, [SP] 
    /*00003280*/ MOVW        R2, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd2c] 
    /*00003284*/ LDR         R3, [PC, #276]              @ 0x00000000000033a0 
    /*00003288*/ MOVT        R2, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd2c] 
    /*0000328c*/ MOV         R1, #8 
    /*00003290*/ MOV         R0, #3 
    /*00003294*/ BL          0x0000000000003294          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003298*/ B           VencVgsCallbackByJob_x3080
    VencVgsCallbackByJob_x329c:
    /*0000329c*/ MOVW        R3, #1675                   @ 0x68b 
    /*000032a0*/ STR         R9, [SP, #4] 
    /*000032a4*/ STR         R3, [SP] 
    /*000032a8*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xedc] 
    /*000032ac*/ LDR         R3, [PC, #236]              @ 0x00000000000033a0 
    /*000032b0*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0xedc] 
    /*000032b4*/ MOV         R1, #8 
    /*000032b8*/ MOV         R0, #3 
    /*000032bc*/ BL          0x00000000000032BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000032c0*/ B           VencVgsCallbackByJob_x31f0
    VencVgsCallbackByJob_x32c4:
    /*000032c4*/ MOVW        R3, #1815                   @ 0x717 
    /*000032c8*/ STR         R9, [SP, #4] 
    /*000032cc*/ STR         R3, [SP] 
    /*000032d0*/ MOVW        R2, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1220] 
    /*000032d4*/ LDR         R3, [PC, #196]              @ 0x00000000000033a0 
    /*000032d8*/ MOVT        R2, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1220] 
    /*000032dc*/ MOV         R1, #8 
    /*000032e0*/ MOV         R0, #3 
    /*000032e4*/ BL          0x00000000000032E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000032e8*/ B           VencVgsCallbackByJob_x2b34
    VencVgsCallbackByJob_x32ec:
    /*000032ec*/ MOVW        R3, #1823                   @ 0x71f 
    /*000032f0*/ STR         R9, [SP, #4] 
    /*000032f4*/ STR         R3, [SP] 
    /*000032f8*/ MOVW        R2, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x126c] 
    /*000032fc*/ LDR         R3, [PC, #156]              @ 0x00000000000033a0 
    /*00003300*/ MOVT        R2, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x126c] 
    /*00003304*/ MOV         R1, #8 
    /*00003308*/ MOV         R0, #3 
    /*0000330c*/ BL          0x000000000000330C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003310*/ B           VencVgsCallbackByJob_x2b74
    VencVgsCallbackByJob_x3314:
    /*00003314*/ MOVW        R3, #1794                   @ 0x702 
    /*00003318*/ STR         R9, [SP, #4] 
    /*0000331c*/ STR         R3, [SP] 
    /*00003320*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1184] 
    /*00003324*/ LDR         R3, [PC, #116]              @ 0x00000000000033a0 
    /*00003328*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1184] 
    /*0000332c*/ MOV         R1, #8 
    /*00003330*/ MOV         R0, #3 
    /*00003334*/ BL          0x0000000000003334          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003338*/ B           VencVgsCallbackByJob_x2aac
    VencVgsCallbackByJob_x333c:
    /*0000333c*/ MOVW        R3, #1806                   @ 0x70e 
    /*00003340*/ STR         R9, [SP, #4] 
    /*00003344*/ STR         R3, [SP] 
    /*00003348*/ MOVW        R2, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11cc] 
    /*0000334c*/ LDR         R3, [PC, #76]               @ 0x00000000000033a0 
    /*00003350*/ MOVT        R2, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11cc] 
    /*00003354*/ MOV         R1, #8 
    /*00003358*/ MOV         R0, #3 
    /*0000335c*/ BL          0x000000000000335C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003360*/ B           VencVgsCallbackByJob_x2af0
    VencVgsCallbackByJob_x3364:
    /*00003364*/ LDR         R3, [R4, #3724]             @ 0xe8c 
    /*00003368*/ CMP         R3, #1 
    /*0000336c*/ BNE         VencVgsCallbackByJob_x2ba0
    /*00003370*/ LDR         R3, [FP, #1128]             @ 0x468 
    /*00003374*/ CMP         R3, #0 
    /*00003378*/ BNE         VencVgsCallbackByJob_x2ba0
    /*0000337c*/ ADD         R1, SP, #76                 @ 0x4c 
    /*00003380*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00003384*/ BL          0x0000000000003384          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003388*/ LDR         R3, [R5] 
    /*0000338c*/ CMP         R3, #1 
    /*00003390*/ BNE         VencVgsCallbackByJob_x2928
    /*00003394*/ LDR         R0, [R4, #8] 
    /*00003398*/ BL          0x0000000000003398          @ VencQuickSchedule [R_ARM_CALL: .text+0x1f84] 
    /*0000339c*/ B           VencVgsCallbackByJob_x2928
    /*000033a0*/ ANDEQ       R0, R0, IP, LSR #3 
FUNC_END VencVgsCallbackByJob


FUNC_BEGIN VencDecSnapEnc
    /*000033a4*/ ADD         R0, R0, #12288              @ 0x3000 
    /*000033a8*/ LDR         R3, [R0, #140]              @ 0x8c 
    /*000033ac*/ SUB         R3, R3, #1 
    /*000033b0*/ STR         R3, [R0, #140]              @ 0x8c 
    /*000033b4*/ CMP         R3, #0 
    /*000033b8*/ STREQ       R3, [R0, #132]              @ 0x84 
    /*000033bc*/ BX          LR 
FUNC_END VencDecSnapEnc


FUNC_BEGIN VencReleaseOnePic
    /*000033c0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000033c4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000033c8*/ PUSH        {R4, R5, R6, LR} 
    /*000033cc*/ CMP         R1, #3 
    /*000033d0*/ LDR         R3, [R3] 
    /*000033d4*/ MOVW        R4, #36240                  @ 0x8d90 
    /*000033d8*/ SUB         SP, SP, #8 
    /*000033dc*/ MLA         R4, R4, R0, R3 
    /*000033e0*/ BEQ         VencReleaseOnePic_x3534
    /*000033e4*/ CMP         R1, #0 
    /*000033e8*/ BEQ         VencReleaseOnePic_x34c4
    /*000033ec*/ CMP         R1, #1 
    /*000033f0*/ ADDEQ       R3, R4, #9152               @ 0x23c0 
    /*000033f4*/ ADDNE       R3, R4, #11904              @ 0x2e80 
    /*000033f8*/ MOVEQ       R4, R3 
    /*000033fc*/ MOVNE       R4, R3 
    /*00003400*/ ADDEQ       R3, R3, #60                 @ 0x3c 
    /*00003404*/ ADDEQ       R4, R4, #40                 @ 0x28 
    /*00003408*/ ADDNE       R3, R3, #36                 @ 0x24 
    /*0000340c*/ ADDNE       R4, R4, #16 
    VencReleaseOnePic_x3410:
    /*00003410*/ LDR         IP, [R3, #16] 
    /*00003414*/ CMP         IP, #0 
    /*00003418*/ MOVWEQ      R3, #1948                   @ 0x79c 
    /*0000341c*/ MOVWEQ      R2, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12b8] 
    /*00003420*/ STREQ       R3, [SP] 
    /*00003424*/ MOVTEQ      R2, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12b8] 
    /*00003428*/ BEQ         VencReleaseOnePic_x3514
    /*0000342c*/ BLE         VencReleaseOnePic_x3504
    /*00003430*/ LDR         R2, [R3, #12] 
    /*00003434*/ SUB         IP, IP, #1 
    /*00003438*/ SUBS        R2, R2, #1 
    /*0000343c*/ LDRMI       R1, [R3, #4] 
    /*00003440*/ ADDMI       R2, R2, R1 
    /*00003444*/ LDR         R1, [R3] 
    /*00003448*/ LDR         R6, [R1, R2, LSL #2] 
    /*0000344c*/ STR         IP, [R3, #16] 
    /*00003450*/ STR         R2, [R3, #12] 
    /*00003454*/ MOV         R0, R6 
    /*00003458*/ MOV         R5, R6 
    /*0000345c*/ BL          0x000000000000345C          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*00003460*/ CMP         R0, #0 
    /*00003464*/ BEQ         VencReleaseOnePic_x3488
    /*00003468*/ MOVW        R3, #1963                   @ 0x7ab 
    /*0000346c*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12ec] 
    /*00003470*/ STR         R3, [SP] 
    /*00003474*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12ec] 
    /*00003478*/ LDR         R3, [PC, #200]              @ 0x0000000000003548 
    /*0000347c*/ MOV         R1, #8 
    /*00003480*/ MOV         R0, #3 
    /*00003484*/ BL          0x0000000000003484          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencReleaseOnePic_x3488:
    /*00003488*/ LDR         R3, [R4, #16] 
    /*0000348c*/ LDR         R1, [R4, #4] 
    /*00003490*/ CMP         R3, R1 
    /*00003494*/ BGE         VencReleaseOnePic_x34d8
    /*00003498*/ LDR         R2, [R4, #8] 
    /*0000349c*/ ADD         R3, R3, #1 
    /*000034a0*/ MOV         R0, R5 
    /*000034a4*/ SUBS        R2, R2, #1 
    /*000034a8*/ ADDMI       R2, R2, R1 
    /*000034ac*/ LDR         R1, [R4] 
    /*000034b0*/ STR         R6, [R1, R2, LSL #2] 
    /*000034b4*/ STR         R3, [R4, #16] 
    /*000034b8*/ STR         R2, [R4, #8] 
    /*000034bc*/ ADD         SP, SP, #8 
    /*000034c0*/ POP         {R4, R5, R6, PC} 
    VencReleaseOnePic_x34c4:
    /*000034c4*/ ADD         R3, R4, #3696               @ 0xe70 
    /*000034c8*/ ADD         R4, R4, #3680               @ 0xe60 
    /*000034cc*/ ADD         R3, R3, #12 
    /*000034d0*/ ADD         R4, R4, #8 
    /*000034d4*/ B           VencReleaseOnePic_x3410
    VencReleaseOnePic_x34d8:
    /*000034d8*/ MOVW        R3, #1969                   @ 0x7b1 
    /*000034dc*/ MOV         R1, #8 
    /*000034e0*/ STR         R3, [SP] 
    /*000034e4*/ MOVW        R2, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1358] 
    /*000034e8*/ LDR         R3, [PC, #88]               @ 0x0000000000003548 
    /*000034ec*/ MOVT        R2, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1358] 
    /*000034f0*/ MOV         R0, #3 
    /*000034f4*/ BL          0x00000000000034F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000034f8*/ MOV         R0, R5 
    /*000034fc*/ ADD         SP, SP, #8 
    /*00003500*/ POP         {R4, R5, R6, PC} 
    VencReleaseOnePic_x3504:
    /*00003504*/ MOVW        R2, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1318] 
    /*00003508*/ MOVT        R2, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1318] 
    /*0000350c*/ MOVW        R3, #1954                   @ 0x7a2 
    /*00003510*/ STR         R3, [SP] 
    VencReleaseOnePic_x3514:
    /*00003514*/ LDR         R3, [PC, #44]               @ 0x0000000000003548 
    /*00003518*/ MOV         R1, #8 
    /*0000351c*/ MOV         R0, #3 
    /*00003520*/ MOV         R5, #0 
    /*00003524*/ BL          0x0000000000003524          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003528*/ MOV         R0, R5 
    /*0000352c*/ ADD         SP, SP, #8 
    /*00003530*/ POP         {R4, R5, R6, PC} 
    VencReleaseOnePic_x3534:
    /*00003534*/ ADD         R3, R4, #6400               @ 0x1900 
    /*00003538*/ MOV         R4, R3 
    /*0000353c*/ ADD         R3, R3, #36                 @ 0x24 
    /*00003540*/ ADD         R4, R4, #16 
    /*00003544*/ B           VencReleaseOnePic_x3410
    /*00003548*/ ANDEQ       R0, R0, R4, ASR #3 
FUNC_END VencReleaseOnePic


FUNC_BEGIN VencSendPic2Vgs
    /*0000354c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00003550*/ SUBS        FP, R1, #0 
    /*00003554*/ SUB         SP, SP, #260                @ 0x104 
    /*00003558*/ MOV         R6, R0 
    /*0000355c*/ STR         R3, [SP, #16] 
    /*00003560*/ MOV         R3, #0 
    /*00003564*/ STR         R2, [SP, #12] 
    /*00003568*/ STR         R3, [SP, #112]              @ 0x70 
    /*0000356c*/ STR         R3, [SP, #108]              @ 0x6c 
    /*00003570*/ STR         R3, [SP, #116]              @ 0x74 
    /*00003574*/ STR         R3, [SP, #104]              @ 0x68 
    /*00003578*/ BEQ         VencSendPic2Vgs_x3be8
    VencSendPic2Vgs_x357c:
    /*0000357c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00003580*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00003584*/ MOVW        R2, #36240                  @ 0x8d90 
    /*00003588*/ MOV         R0, #45                     @ 0x2d 
    /*0000358c*/ LDR         R3, [R3] 
    /*00003590*/ MLA         SL, R2, R6, R3 
    /*00003594*/ ADD         R4, SL, #8192               @ 0x2000 
    /*00003598*/ LDR         R3, [R4, #4060]             @ 0xfdc 
    /*0000359c*/ ADD         R3, R3, #1 
    /*000035a0*/ STR         R3, [R4, #4060]             @ 0xfdc 
    /*000035a4*/ BL          0x00000000000035A4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000035a8*/ SUBS        R7, R0, #0 
    /*000035ac*/ BEQ         VencSendPic2Vgs_x3c28
    /*000035b0*/ MOV         R2, #0 
    /*000035b4*/ MOV         R9, #1 
    /*000035b8*/ STR         R2, [SP, #248]              @ 0xf8 
    /*000035bc*/ MOV         R3, R2 
    /*000035c0*/ STR         R6, [SP] 
    /*000035c4*/ ADD         R0, SP, #192                @ 0xc0 
    /*000035c8*/ STR         R9, [SP, #244]              @ 0xf4 
    /*000035cc*/ MOV         R1, R9 
    /*000035d0*/ STR         R0, [SP, #4] 
    /*000035d4*/ MOV         R2, #8 
    /*000035d8*/ LDR         R5, [R7] 
    /*000035dc*/ ADD         R0, SP, #100                @ 0x64 
    /*000035e0*/ BLX         R5 
    /*000035e4*/ SUBS        R5, R0, #0 
    /*000035e8*/ STR         R5, [SP, #24] 
    /*000035ec*/ BNE         VencSendPic2Vgs_x36c0
    /*000035f0*/ LDR         R3, [R7, #64]               @ 0x40 
    /*000035f4*/ BLX         R3 
    /*000035f8*/ SUBS        R5, R0, #0 
    /*000035fc*/ BEQ         VencSendPic2Vgs_x3ca4
    /*00003600*/ LDR         R2, [FP] 
    /*00003604*/ ADD         R3, SL, #12288              @ 0x3000 
    /*00003608*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000360c*/ MOV         R0, #2 
    /*00003610*/ STR         R2, [SP, #32] 
    /*00003614*/ LDR         R2, [R3, #148]              @ 0x94 
    /*00003618*/ LDR         R3, [R3, #152]              @ 0x98 
    /*0000361c*/ MOV         R8, R2 
    /*00003620*/ STR         R2, [SP, #40]               @ 0x28 
    /*00003624*/ STR         R3, [SP, #48]               @ 0x30 
    /*00003628*/ BL          0x0000000000003628          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000362c*/ ADD         R1, SP, #96                 @ 0x60 
    /*00003630*/ LDR         R3, [R0, #16] 
    /*00003634*/ MOV         R0, R8 
    /*00003638*/ BLX         R3 
    /*0000363c*/ SUBS        R3, R0, #0 
    /*00003640*/ STR         R3, [SP, #56]               @ 0x38 
    /*00003644*/ BEQ         VencSendPic2Vgs_x3720
    /*00003648*/ MOV         R0, R5 
    /*0000364c*/ LDR         R3, [R7, #68]               @ 0x44 
    /*00003650*/ BLX         R3 
    /*00003654*/ MOVW        R3, #2107                   @ 0x83b 
    /*00003658*/ STR         R6, [SP, #4] 
    /*0000365c*/ MOVW        R2, #0                      @ .LC87 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1430] 
    /*00003660*/ STR         R3, [SP] 
    /*00003664*/ MOVT        R2, #0                      @ .LC87 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1430] 
    /*00003668*/ LDR         R3, [PC, #3028]             @ 0x0000000000004244 
    /*0000366c*/ MOV         R1, #44                     @ 0x2c 
    /*00003670*/ MOV         R0, #3 
    /*00003674*/ LDR         R5, [SP, #24] 
    /*00003678*/ BL          0x0000000000003678          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000367c*/ MOVW        R9, #32784                  @ 0x8010 
    /*00003680*/ MOVT        R9, #40968                  @ 0xa008 
    VencSendPic2Vgs_x3684:
    /*00003684*/ LDR         R3, [R7, #4] 
    /*00003688*/ LDR         R0, [SP, #100]              @ 0x64 
    /*0000368c*/ BLX         R3 
    /*00003690*/ LDR         R2, [SL, #4] 
    /*00003694*/ MOVW        R3, #1002                   @ 0x3ea 
    /*00003698*/ CMP         R2, R3 
    /*0000369c*/ BEQ         VencSendPic2Vgs_x3c94
    VencSendPic2Vgs_x36a0:
    /*000036a0*/ LDR         R3, [R4, #4068]             @ 0xfe4 
    /*000036a4*/ CMP         R9, #0 
    /*000036a8*/ ADD         R3, R3, #1 
    /*000036ac*/ STR         R3, [R4, #4068]             @ 0xfe4 
    /*000036b0*/ BNE         VencSendPic2Vgs_x3708
    VencSendPic2Vgs_x36b4:
    /*000036b4*/ MOV         R0, R5 
    /*000036b8*/ ADD         SP, SP, #260                @ 0x104 
    /*000036bc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSendPic2Vgs_x36c0:
    /*000036c0*/ MOVW        R3, #2082                   @ 0x822 
    /*000036c4*/ MOVW        R2, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13cc] 
    /*000036c8*/ STR         R3, [SP] 
    /*000036cc*/ MOVT        R2, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13cc] 
    /*000036d0*/ LDR         R3, [PC, #2924]             @ 0x0000000000004244 
    /*000036d4*/ MOV         R1, #8 
    /*000036d8*/ MOV         R0, #3 
    /*000036dc*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*000036e0*/ BL          0x00000000000036E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000036e4*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*000036e8*/ ORR         R9, R5, #524288             @ 0x80000 
    VencSendPic2Vgs_x36ec:
    /*000036ec*/ LDR         R2, [SL, #4] 
    /*000036f0*/ MOVW        R3, #1002                   @ 0x3ea 
    /*000036f4*/ CMP         R2, R3 
    /*000036f8*/ BEQ         VencSendPic2Vgs_x3bf8
    VencSendPic2Vgs_x36fc:
    /*000036fc*/ LDR         R3, [R4, #4068]             @ 0xfe4 
    /*00003700*/ ADD         R3, R3, #1 
    /*00003704*/ STR         R3, [R4, #4068]             @ 0xfe4 
    VencSendPic2Vgs_x3708:
    /*00003708*/ BIC         R5, R9, #267386880          @ 0xff00000 
    /*0000370c*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00003710*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00003714*/ MOV         R0, R5 
    /*00003718*/ ADD         SP, SP, #260                @ 0x104 
    /*0000371c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSendPic2Vgs_x3720:
    /*00003720*/ LDR         R8, [SP, #32] 
    /*00003724*/ ADD         R3, R5, #336                @ 0x150 
    /*00003728*/ MOV         R2, #336                    @ 0x150 
    /*0000372c*/ STR         R3, [SP, #68]               @ 0x44 
    /*00003730*/ MOV         R0, R3 
    /*00003734*/ MOV         R1, R8 
    /*00003738*/ BL          0x0000000000003738          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000373c*/ MOV         R2, R8 
    /*00003740*/ LDR         R1, [SP, #68]               @ 0x44 
    /*00003744*/ MOV         R0, R6 
    /*00003748*/ BL          0x0000000000003748          @ VENC_DRV_OUTPUTPICFORMAT [R_ARM_CALL: .text+0x262e4] 
    /*0000374c*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00003750*/ LDR         LR, [SP, #48]               @ 0x30 
    /*00003754*/ MOV         R0, #2 
    /*00003758*/ LDR         IP, [R5, #356]              @ 0x164 
    /*0000375c*/ LDR         R2, [R5, #348]              @ 0x15c 
    /*00003760*/ LDR         R8, [SP, #56]               @ 0x38 
    /*00003764*/ LDR         R1, [R5, #360]              @ 0x168 
    /*00003768*/ STR         R3, [R5, #336]              @ 0x150 
    /*0000376c*/ STR         R3, [SP, #124]              @ 0x7c 
    /*00003770*/ LDR         R3, [R5, #352]              @ 0x160 
    /*00003774*/ STR         LR, [R5, #340]              @ 0x154 
    /*00003778*/ STR         LR, [SP, #128]              @ 0x80 
    /*0000377c*/ STR         IP, [SP, #144]              @ 0x90 
    /*00003780*/ STR         R2, [SP, #120]              @ 0x78 
    /*00003784*/ STR         R1, [SP, #140]              @ 0x8c 
    /*00003788*/ STR         R3, [SP, #148]              @ 0x94 
    /*0000378c*/ STR         R8, [SP, #152]              @ 0x98 
    /*00003790*/ STR         R8, [SP, #136]              @ 0x88 
    /*00003794*/ STR         R8, [SP, #132]              @ 0x84 
    /*00003798*/ BL          0x0000000000003798          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000379c*/ ADD         R1, SP, #156                @ 0x9c 
    /*000037a0*/ LDR         R3, [R0, #120]              @ 0x78 
    /*000037a4*/ ADD         R0, SP, #120                @ 0x78 
    /*000037a8*/ BLX         R3 
    /*000037ac*/ MOV         R0, #2 
    /*000037b0*/ MOV         R3, #8 
    /*000037b4*/ STR         R8, [SP, #112]              @ 0x70 
    /*000037b8*/ STR         R3, [SP, #108]              @ 0x6c 
    /*000037bc*/ STR         R6, [SP, #116]              @ 0x74 
    /*000037c0*/ BL          0x00000000000037C0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000037c4*/ ADD         R1, SP, #104                @ 0x68 
    /*000037c8*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*000037cc*/ ADD         R0, SP, #108                @ 0x6c 
    /*000037d0*/ BLX         R3 
    /*000037d4*/ SUBS        R3, R0, #0 
    /*000037d8*/ STR         R3, [SP, #24] 
    /*000037dc*/ BNE         VencSendPic2Vgs_x3c54
    /*000037e0*/ MOV         R0, R9 
    /*000037e4*/ BL          0x00000000000037E4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000037e8*/ LDR         R3, [SP, #104]              @ 0x68 
    /*000037ec*/ MOV         R2, #3 
    /*000037f0*/ LDR         R1, [SP, #24] 
    /*000037f4*/ LDR         IP, [R0, #12] 
    /*000037f8*/ LDR         R0, [SP, #156]              @ 0x9c 
    /*000037fc*/ BLX         IP 
    /*00003800*/ CMN         R0, #1 
    /*00003804*/ STR         R0, [SP, #40]               @ 0x28 
    /*00003808*/ BEQ         VencSendPic2Vgs_x3cd0
    /*0000380c*/ LDR         R2, [SP, #64]               @ 0x40 
    /*00003810*/ MOV         R0, R9 
    /*00003814*/ ADD         R8, SL, #12416              @ 0x3080 
    /*00003818*/ LDR         R3, [R2, #16] 
    /*0000381c*/ ADD         R3, R3, #1 
    /*00003820*/ STR         R3, [R2, #16] 
    /*00003824*/ BL          0x0000000000003824          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00003828*/ ADD         R3, R8, #56                 @ 0x38 
    /*0000382c*/ LDR         R8, [SP, #40]               @ 0x28 
    /*00003830*/ STR         R3, [SP, #80]               @ 0x50 
    /*00003834*/ LDR         R3, [R0, #40]               @ 0x28 
    /*00003838*/ MOV         R0, R8 
    /*0000383c*/ BLX         R3 
    /*00003840*/ MOV         R3, #45                     @ 0x2d 
    /*00003844*/ STR         R3, [R5, #668]              @ 0x29c 
    /*00003848*/ STR         R0, [SP, #84]               @ 0x54 
    /*0000384c*/ STR         R0, [R5, #664]              @ 0x298 
    /*00003850*/ MOV         R0, R9 
    /*00003854*/ BL          0x0000000000003854          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00003858*/ LDR         R3, [R0, #52]               @ 0x34 
    /*0000385c*/ MOV         R0, R8 
    /*00003860*/ BLX         R3 
    /*00003864*/ MOV         R2, R0 
    /*00003868*/ MOV         R0, R9 
    /*0000386c*/ LDR         R9, [SP, #68]               @ 0x44 
    /*00003870*/ MOV         R3, R1 
    /*00003874*/ LDR         R1, [SP, #168]              @ 0xa8 
    /*00003878*/ STRD        R2, [SP, #88]               @ 0x58 
    /*0000387c*/ STRD        R2, [R9, #72]               @ 0x48 
    /*00003880*/ ADDS        R2, R2, R1 
    /*00003884*/ ADC         R3, R3, #0 
    /*00003888*/ STRD        R2, [R9, #80]               @ 0x50 
    /*0000388c*/ BL          0x000000000000388C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00003890*/ LDR         R3, [R0, #48]               @ 0x30 
    /*00003894*/ MOV         R0, R8 
    /*00003898*/ BLX         R3 
    /*0000389c*/ LDR         IP, [SP, #168]              @ 0xa8 
    /*000038a0*/ LDR         LR, [SP, #164]              @ 0xa4 
    /*000038a4*/ MOV         R2, R0 
    /*000038a8*/ MOV         R3, R1 
    /*000038ac*/ LDR         R1, [SP, #32] 
    /*000038b0*/ STRD        R2, [R9, #96]               @ 0x60 
    /*000038b4*/ STRD        R2, [SP, #32] 
    /*000038b8*/ ADDS        R2, R2, IP 
    /*000038bc*/ ADC         R3, R3, #0 
    /*000038c0*/ STRD        R2, [SP, #40]               @ 0x28 
    /*000038c4*/ MOV         R2, LR 
    /*000038c8*/ MOV         LR, R9 
    /*000038cc*/ LDRD        R8, [SP, #40]               @ 0x28 
    /*000038d0*/ MOV         R3, #0 
    /*000038d4*/ LDR         R0, [SP, #160]              @ 0xa0 
    /*000038d8*/ LDR         IP, [SP, #176]              @ 0xb0 
    /*000038dc*/ STRD        R8, [LR, #104]              @ 0x68 
    /*000038e0*/ LDRD        R8, [SP, #32] 
    /*000038e4*/ STRD        R2, [SP, #40]               @ 0x28 
    /*000038e8*/ ADDS        R8, R8, R2 
    /*000038ec*/ STR         R0, [R5, #368]              @ 0x170 
    /*000038f0*/ ADC         R9, R9, R3 
    /*000038f4*/ STR         R0, [R5, #372]              @ 0x174 
    /*000038f8*/ STR         R0, [R5, #376]              @ 0x178 
    /*000038fc*/ MOV         R2, R8 
    /*00003900*/ MOV         R3, R9 
    /*00003904*/ MOV         R8, IP 
    /*00003908*/ STRD        R2, [SP, #48]               @ 0x30 
    /*0000390c*/ MOV         R9, #0 
    /*00003910*/ LDRD        R2, [LR, #72]               @ 0x48 
    /*00003914*/ STRD        R8, [SP, #56]               @ 0x38 
    /*00003918*/ LDRD        R8, [SP, #40]               @ 0x28 
    /*0000391c*/ LDR         R0, [SP, #180]              @ 0xb4 
    /*00003920*/ ADDS        R8, R8, R2 
    /*00003924*/ LDR         IP, [SP, #188]              @ 0xbc 
    /*00003928*/ ADC         R9, R9, R3 
    /*0000392c*/ MOV         R2, R8 
    /*00003930*/ MOV         R8, R0 
    /*00003934*/ MOV         R3, R9 
    /*00003938*/ MOV         R9, #0 
    /*0000393c*/ STRD        R8, [SP, #32] 
    /*00003940*/ LDRD        R8, [SP, #48]               @ 0x30 
    /*00003944*/ STRD        R2, [LR, #120]              @ 0x78 
    /*00003948*/ STRD        R8, [LR, #144]              @ 0x90 
    /*0000394c*/ LDRD        R8, [SP, #32] 
    /*00003950*/ ADDS        R8, R8, R2 
    /*00003954*/ ADC         R9, R9, R3 
    /*00003958*/ STRD        R8, [SP, #40]               @ 0x28 
    /*0000395c*/ LDRD        R8, [SP, #56]               @ 0x38 
    /*00003960*/ ADDS        R8, R8, R2 
    /*00003964*/ ADC         R9, R9, R3 
    /*00003968*/ LDRD        R2, [SP, #48]               @ 0x30 
    /*0000396c*/ STRD        R8, [SP, #72]               @ 0x48 
    /*00003970*/ LDRD        R8, [SP, #56]               @ 0x38 
    /*00003974*/ ADDS        R8, R8, R2 
    /*00003978*/ ADC         R9, R9, R3 
    /*0000397c*/ STRD        R8, [SP, #48]               @ 0x30 
    /*00003980*/ LDRD        R8, [SP, #40]               @ 0x28 
    /*00003984*/ LDR         R0, [SP, #172]              @ 0xac 
    /*00003988*/ STRD        R8, [LR, #128]              @ 0x80 
    /*0000398c*/ LDRD        R8, [SP, #32] 
    /*00003990*/ ADDS        R8, R8, R2 
    /*00003994*/ ADC         R9, R9, R3 
    /*00003998*/ LDRD        R2, [SP, #40]               @ 0x28 
    /*0000399c*/ STRD        R8, [SP, #56]               @ 0x38 
    /*000039a0*/ LDRD        R8, [SP, #72]               @ 0x48 
    /*000039a4*/ STRD        R2, [LR, #136]              @ 0x88 
    /*000039a8*/ MOV         R2, IP 
    /*000039ac*/ MOV         R3, #0 
    /*000039b0*/ STRD        R2, [SP, #32] 
    /*000039b4*/ LDRD        R2, [SP, #56]               @ 0x38 
    /*000039b8*/ LDR         IP, [SP, #184]              @ 0xb8 
    /*000039bc*/ STRD        R2, [LR, #152]              @ 0x98 
    /*000039c0*/ STRD        R2, [LR, #160]              @ 0xa0 
    /*000039c4*/ LDRD        R2, [SP, #32] 
    /*000039c8*/ STR         R0, [R5, #380]              @ 0x17c 
    /*000039cc*/ ADDS        R8, R8, R2 
    /*000039d0*/ STR         R0, [R5, #384]              @ 0x180 
    /*000039d4*/ ADC         R9, R9, R3 
    /*000039d8*/ STR         R0, [R5, #388]              @ 0x184 
    /*000039dc*/ MOV         R2, R8 
    /*000039e0*/ MOV         R0, R5 
    /*000039e4*/ MOV         R3, R9 
    /*000039e8*/ LDRD        R8, [SP, #32] 
    /*000039ec*/ STRD        R2, [SP, #40]               @ 0x28 
    /*000039f0*/ LDRD        R2, [SP, #48]               @ 0x30 
    /*000039f4*/ ADDS        R2, R2, R8 
    /*000039f8*/ ADC         R3, R3, R9 
    /*000039fc*/ LDRD        R8, [SP, #40]               @ 0x28 
    /*00003a00*/ STRD        R2, [SP, #32] 
    /*00003a04*/ LDRD        R2, [SP, #72]               @ 0x48 
    /*00003a08*/ STRD        R8, [LR, #176]              @ 0xb0 
    /*00003a0c*/ STRD        R8, [LR, #184]              @ 0xb8 
    /*00003a10*/ LDRD        R8, [SP, #32] 
    /*00003a14*/ STRD        R2, [LR, #168]              @ 0xa8 
    /*00003a18*/ MOV         R2, #336                    @ 0x150 
    /*00003a1c*/ STRD        R8, [LR, #200]              @ 0xc8 
    /*00003a20*/ STRD        R8, [LR, #208]              @ 0xd0 
    /*00003a24*/ LDRD        R8, [SP, #48]               @ 0x30 
    /*00003a28*/ STRD        R8, [LR, #192]              @ 0xc0 
    /*00003a2c*/ MOV         R9, LR 
    /*00003a30*/ STR         IP, [R5, #392]              @ 0x188 
    /*00003a34*/ STR         IP, [R5, #396]              @ 0x18c 
    /*00003a38*/ LDR         R8, [SP, #12] 
    /*00003a3c*/ LDR         LR, [SP, #16] 
    /*00003a40*/ STR         IP, [R5, #400]              @ 0x190 
    /*00003a44*/ STR         R8, [R9, #248]              @ 0xf8 
    /*00003a48*/ STR         LR, [R9, #252]              @ 0xfc 
    /*00003a4c*/ BL          0x0000000000003A4C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00003a50*/ MOV         R1, R9 
    /*00003a54*/ MOV         R2, #336                    @ 0x150 
    /*00003a58*/ MOV         R0, R8 
    /*00003a5c*/ BL          0x0000000000003A5C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00003a60*/ MOV         R9, R8 
    /*00003a64*/ LDR         R8, [SP, #24] 
    /*00003a68*/ MOV         R3, R9 
    /*00003a6c*/ LDR         R0, [SP, #100]              @ 0x64 
    /*00003a70*/ ADD         R2, R9, #352                @ 0x160 
    /*00003a74*/ ADD         IP, R9, #368                @ 0x170 
    /*00003a78*/ STR         R8, [R9, #336]              @ 0x150 
    /*00003a7c*/ STR         R8, [R9, #340]              @ 0x154 
    /*00003a80*/ LDR         R1, [FP, #16] 
    /*00003a84*/ STR         R1, [R9, #344]              @ 0x158 
    /*00003a88*/ MOV         R1, R8 
    /*00003a8c*/ LDR         LR, [FP, #32] 
    /*00003a90*/ MOV         R8, R0 
    /*00003a94*/ ASR         R9, R0, #31 
    /*00003a98*/ STRD        R8, [SP, #16] 
    /*00003a9c*/ LDR         R0, [SP, #80]               @ 0x50 
    /*00003aa0*/ STR         LR, [R3, #360]              @ 0x168 
    /*00003aa4*/ MOVW        LR, #0                      @ VencVgsCallback [R_ARM_MOVW_ABS_NC: .text+0x1fc8] 
    /*00003aa8*/ LDR         R9, [FP, #20] 
    /*00003aac*/ MOVT        LR, #0                      @ VencVgsCallback [R_ARM_MOVT_ABS: .text+0x1fc8] 
    /*00003ab0*/ STR         R9, [R3, #348]              @ 0x15c 
    /*00003ab4*/ LDRD        R8, [FP, #24] 
    /*00003ab8*/ STRD        R8, [R2] 
    /*00003abc*/ MOV         R2, #320                    @ 0x140 
    /*00003ac0*/ LDRD        R8, [FP, #40]               @ 0x28 
    /*00003ac4*/ STRD        R8, [IP] 
    /*00003ac8*/ MOV         R9, #8 
    /*00003acc*/ LDR         IP, [FP, #52]               @ 0x34 
    /*00003ad0*/ MOV         R8, R6 
    /*00003ad4*/ STR         R1, [R3, #384]              @ 0x180 
    /*00003ad8*/ STR         IP, [R3, #380]              @ 0x17c 
    /*00003adc*/ ADD         IP, R5, #672                @ 0x2a0 
    /*00003ae0*/ STR         R9, [R5, #724]              @ 0x2d4 
    /*00003ae4*/ ASR         R9, R6, #31 
    /*00003ae8*/ STR         R1, [R5, #728]              @ 0x2d8 
    /*00003aec*/ ADD         R3, R5, #688                @ 0x2b0 
    /*00003af0*/ STR         R6, [R5, #732]              @ 0x2dc 
    /*00003af4*/ STRD        R8, [IP] 
    /*00003af8*/ LDR         IP, [SP, #64]               @ 0x40 
    /*00003afc*/ LDRD        R8, [SP, #16] 
    /*00003b00*/ LDR         IP, [IP, #176]              @ 0xb0 
    /*00003b04*/ STRD        R8, [R3] 
    /*00003b08*/ MOV         R8, IP 
    /*00003b0c*/ ASR         R9, IP, #31 
    /*00003b10*/ STRD        R8, [R3, #-8] 
    /*00003b14*/ STR         LR, [R5, #720]              @ 0x2d0 
    /*00003b18*/ BL          0x0000000000003B18          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00003b1c*/ LDR         R2, [SP, #64]               @ 0x40 
    /*00003b20*/ LDR         R3, [R2, #508]              @ 0x1fc 
    /*00003b24*/ CMP         R3, #1 
    /*00003b28*/ BEQ         VencSendPic2Vgs_x3ebc
    VencSendPic2Vgs_x3b2c:
    /*00003b2c*/ LDR         R2, [R5] 
    /*00003b30*/ LDR         R3, [R5, #336]              @ 0x150 
    /*00003b34*/ CMP         R2, R3 
    /*00003b38*/ BEQ         VencSendPic2Vgs_x3d88
    VencSendPic2Vgs_x3b3c:
    /*00003b3c*/ LDR         R2, [SL, #4] 
    /*00003b40*/ MOVW        R3, #1002                   @ 0x3ea 
    /*00003b44*/ CMP         R2, R3 
    /*00003b48*/ BEQ         VencSendPic2Vgs_x413c
    VencSendPic2Vgs_x3b4c:
    /*00003b4c*/ MOV         R3, #0 
    /*00003b50*/ STR         R3, [SP, #16] 
    /*00003b54*/ MOV         R8, R3 
    VencSendPic2Vgs_x3b58:
    /*00003b58*/ LDR         R2, [SP, #80]               @ 0x50 
    /*00003b5c*/ MOV         R1, R5 
    /*00003b60*/ LDR         R3, [R7, #32] 
    /*00003b64*/ LDR         R0, [SP, #100]              @ 0x64 
    /*00003b68*/ BLX         R3 
    /*00003b6c*/ SUBS        R9, R0, #0 
    /*00003b70*/ BNE         VencSendPic2Vgs_x3d1c
    /*00003b74*/ LDR         R2, [SL, #4] 
    /*00003b78*/ MOVW        R3, #1002                   @ 0x3ea 
    /*00003b7c*/ CMP         R2, R3 
    /*00003b80*/ BNE         VencSendPic2Vgs_x3b90
    /*00003b84*/ LDR         R0, [FP, #12] 
    /*00003b88*/ CMP         R0, #1 
    /*00003b8c*/ BEQ         VencSendPic2Vgs_x3ed8
    VencSendPic2Vgs_x3b90:
    /*00003b90*/ LDR         R3, [R7, #12] 
    /*00003b94*/ MOV         R2, #0 
    /*00003b98*/ MOV         R1, #1 
    /*00003b9c*/ LDR         R0, [SP, #100]              @ 0x64 
    /*00003ba0*/ BLX         R3 
    /*00003ba4*/ SUBS        R5, R0, #0 
    /*00003ba8*/ BEQ         VencSendPic2Vgs_x3db8
    /*00003bac*/ MOVW        R3, #2351                   @ 0x92f 
    /*00003bb0*/ MOV         R1, #8 
    /*00003bb4*/ STR         R3, [SP] 
    /*00003bb8*/ MOVW        R2, #0                      @ .LC94 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x15ac] 
    /*00003bbc*/ LDR         R3, [PC, #1664]             @ 0x0000000000004244 
    /*00003bc0*/ MOVT        R2, #0                      @ .LC94 [R_ARM_MOVT_ABS: .rodata.str1.4+0x15ac] 
    /*00003bc4*/ MOV         R0, #3 
    /*00003bc8*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00003bcc*/ BL          0x0000000000003BCC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003bd0*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00003bd4*/ LDR         R3, [R7, #4] 
    /*00003bd8*/ ORR         R9, R5, #524288             @ 0x80000 
    /*00003bdc*/ LDR         R0, [SP, #100]              @ 0x64 
    /*00003be0*/ BLX         R3 
    /*00003be4*/ B           VencSendPic2Vgs_x36ec
    VencSendPic2Vgs_x3be8:
    /*00003be8*/ BL          0x00000000000002C8 
    /*00003bec*/ SUBS        R5, R0, #0 
    /*00003bf0*/ BNE         VencSendPic2Vgs_x36b4
    /*00003bf4*/ B           VencSendPic2Vgs_x357c
    VencSendPic2Vgs_x3bf8:
    /*00003bf8*/ LDR         R3, [FP, #12] 
    /*00003bfc*/ CMP         R3, #1 
    /*00003c00*/ BNE         VencSendPic2Vgs_x36fc
    /*00003c04*/ MOV         R5, #0 
    VencSendPic2Vgs_x3c08:
    /*00003c08*/ LDR         R3, [FP, #52]               @ 0x34 
    /*00003c0c*/ LDR         R3, [R3, #2340]             @ 0x924 
    /*00003c10*/ CMP         R3, #0 
    /*00003c14*/ BEQ         VencSendPic2Vgs_x36a0
    /*00003c18*/ ADD         R1, FP, #8 
    /*00003c1c*/ MOV         R0, R6 
    /*00003c20*/ BL          0x0000000000003C20          @ VencPutOverLayEx [R_ARM_CALL: .text+0x1528] 
    /*00003c24*/ B           VencSendPic2Vgs_x36a0
    VencSendPic2Vgs_x3c28:
    /*00003c28*/ MOVW        R3, #2070                   @ 0x816 
    /*00003c2c*/ MOVW        R2, #0                      @ .LC84 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1394] 
    /*00003c30*/ STR         R3, [SP] 
    /*00003c34*/ MOVT        R2, #0                      @ .LC84 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1394] 
    /*00003c38*/ LDR         R3, [PC, #1540]             @ 0x0000000000004244 
    /*00003c3c*/ MOV         R1, #8 
    /*00003c40*/ MOV         R0, #3 
    /*00003c44*/ MOVW        R9, #32784                  @ 0x8010 
    /*00003c48*/ BL          0x0000000000003C48          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003c4c*/ MOVT        R9, #40968                  @ 0xa008 
    /*00003c50*/ B           VencSendPic2Vgs_x36ec
    VencSendPic2Vgs_x3c54:
    /*00003c54*/ MOV         R0, R5 
    /*00003c58*/ LDR         R3, [R7, #68]               @ 0x44 
    /*00003c5c*/ BLX         R3 
    /*00003c60*/ MOVW        R3, #2140                   @ 0x85c 
    /*00003c64*/ STR         R6, [SP, #4] 
    /*00003c68*/ MOV         R1, #8 
    /*00003c6c*/ STR         R3, [SP] 
    /*00003c70*/ MOVW        R2, #0                      @ .LC88 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1468] 
    /*00003c74*/ LDR         R3, [PC, #1480]             @ 0x0000000000004244 
    /*00003c78*/ MOVT        R2, #0                      @ .LC88 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1468] 
    /*00003c7c*/ MOV         R0, #3 
    /*00003c80*/ MOVW        R9, #32784                  @ 0x8010 
    /*00003c84*/ MOV         R5, R8 
    /*00003c88*/ BL          0x0000000000003C88          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003c8c*/ MOVT        R9, #40968                  @ 0xa008 
    /*00003c90*/ B           VencSendPic2Vgs_x3684
    VencSendPic2Vgs_x3c94:
    /*00003c94*/ LDR         R3, [FP, #12] 
    /*00003c98*/ CMP         R3, #1 
    /*00003c9c*/ BNE         VencSendPic2Vgs_x36a0
    /*00003ca0*/ B           VencSendPic2Vgs_x3c08
    VencSendPic2Vgs_x3ca4:
    /*00003ca4*/ MOVW        R3, #2090                   @ 0x82a 
    /*00003ca8*/ MOVW        R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13fc] 
    /*00003cac*/ STR         R3, [SP] 
    /*00003cb0*/ MOVT        R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13fc] 
    /*00003cb4*/ LDR         R3, [PC, #1416]             @ 0x0000000000004244 
    /*00003cb8*/ MOV         R1, #8 
    /*00003cbc*/ MOV         R0, #3 
    /*00003cc0*/ MOVW        R9, #32781                  @ 0x800d 
    /*00003cc4*/ BL          0x0000000000003CC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003cc8*/ MOVT        R9, #40968                  @ 0xa008 
    /*00003ccc*/ B           VencSendPic2Vgs_x3684
    VencSendPic2Vgs_x3cd0:
    /*00003cd0*/ MOV         R0, R5 
    /*00003cd4*/ LDR         R3, [R7, #68]               @ 0x44 
    /*00003cd8*/ BLX         R3 
    /*00003cdc*/ LDR         R3, [R4, #4072]             @ 0xfe8 
    /*00003ce0*/ MOV         R0, R9 
    /*00003ce4*/ MOVW        IP, #2151                   @ 0x867 
    /*00003ce8*/ ADD         R3, R3, #1 
    /*00003cec*/ MOV         R1, #8 
    /*00003cf0*/ STR         R3, [R4, #4072]             @ 0xfe8 
    /*00003cf4*/ MOVW        R2, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14a0] 
    /*00003cf8*/ STR         R6, [SP, #4] 
    /*00003cfc*/ MOVT        R2, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14a0] 
    /*00003d00*/ STR         IP, [SP] 
    /*00003d04*/ MOVW        R9, #32781                  @ 0x800d 
    /*00003d08*/ LDR         R3, [PC, #1332]             @ 0x0000000000004244 
    /*00003d0c*/ MOVT        R9, #40968                  @ 0xa008 
    /*00003d10*/ LDR         R5, [SP, #24] 
    /*00003d14*/ BL          0x0000000000003D14          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003d18*/ B           VencSendPic2Vgs_x3684
    VencSendPic2Vgs_x3d1c:
    /*00003d1c*/ MOVW        R3, #2264                   @ 0x8d8 
    /*00003d20*/ STR         R6, [SP, #4] 
    /*00003d24*/ STR         R3, [SP] 
    /*00003d28*/ MOVW        R2, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14e0] 
    /*00003d2c*/ LDR         R3, [PC, #1296]             @ 0x0000000000004244 
    /*00003d30*/ MOVT        R2, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14e0] 
    /*00003d34*/ MOV         R1, #8 
    /*00003d38*/ MOV         R0, #3 
    /*00003d3c*/ BL          0x0000000000003D3C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003d40*/ BIC         R9, R9, #267386880          @ 0xff00000 
    /*00003d44*/ BIC         R9, R9, #983040             @ 0xf0000 
    /*00003d48*/ ORR         R9, R9, #524288             @ 0x80000 
    VencSendPic2Vgs_x3d4c:
    /*00003d4c*/ MOV         R0, #1 
    /*00003d50*/ MOV         R8, #3 
    /*00003d54*/ BL          0x0000000000003D54          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00003d58*/ STR         R8, [SP] 
    /*00003d5c*/ LDRD        R2, [SP, #88]               @ 0x58 
    /*00003d60*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00003d64*/ LDR         R0, [SP, #84]               @ 0x54 
    /*00003d68*/ BLX         R1 
    /*00003d6c*/ SUBS        R5, R0, #0 
    /*00003d70*/ BNE         VencSendPic2Vgs_x4118
    VencSendPic2Vgs_x3d74:
    /*00003d74*/ LDR         R2, [SP, #64]               @ 0x40 
    /*00003d78*/ LDR         R3, [R2, #20] 
    /*00003d7c*/ ADD         R3, R3, #1 
    /*00003d80*/ STR         R3, [R2, #20] 
    /*00003d84*/ B           VencSendPic2Vgs_x3684
    VencSendPic2Vgs_x3d88:
    /*00003d88*/ LDR         R2, [R5, #4] 
    /*00003d8c*/ LDR         R3, [R5, #340]              @ 0x154 
    /*00003d90*/ CMP         R2, R3 
    /*00003d94*/ BNE         VencSendPic2Vgs_x3b3c
    /*00003d98*/ LDR         R2, [SL, #4] 
    /*00003d9c*/ MOVW        R3, #1002                   @ 0x3ea 
    /*00003da0*/ CMP         R2, R3 
    /*00003da4*/ BEQ         VencSendPic2Vgs_x3de0
    VencSendPic2Vgs_x3da8:
    /*00003da8*/ MOV         R3, #1 
    /*00003dac*/ STR         R3, [SP, #16] 
    /*00003db0*/ MOV         R8, R3 
    /*00003db4*/ B           VencSendPic2Vgs_x3b58
    VencSendPic2Vgs_x3db8:
    /*00003db8*/ MOV         R0, #1 
    /*00003dbc*/ BL          0x0000000000003DBC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00003dc0*/ LDR         R1, [FP] 
    /*00003dc4*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*00003dc8*/ LDR         R0, [SP, #68]               @ 0x44 
    /*00003dcc*/ BLX         R3 
    /*00003dd0*/ LDR         R3, [R4, #4064]             @ 0xfe0 
    /*00003dd4*/ ADD         R3, R3, #1 
    /*00003dd8*/ STR         R3, [R4, #4064]             @ 0xfe0 
    /*00003ddc*/ B           VencSendPic2Vgs_x36b4
    VencSendPic2Vgs_x3de0:
    /*00003de0*/ LDR         R1, [FP, #12] 
    /*00003de4*/ CMP         R1, #1 
    /*00003de8*/ BNE         VencSendPic2Vgs_x3da8
    /*00003dec*/ LDR         R3, [FP, #52]               @ 0x34 
    /*00003df0*/ LDR         R3, [R3, #2340]             @ 0x924 
    /*00003df4*/ CMP         R3, #0 
    /*00003df8*/ BEQ         VencSendPic2Vgs_x4170
    /*00003dfc*/ LDR         R2, [SP, #64]               @ 0x40 
    /*00003e00*/ MOVW        IP, #12560                  @ 0x3110 
    /*00003e04*/ STR         R1, [SP, #16] 
    /*00003e08*/ MOVW        R0, #0                      @ VencVgsCallback [R_ARM_MOVW_ABS_NC: .text+0x1fc8] 
    /*00003e0c*/ MOV         R8, R1 
    /*00003e10*/ MOVT        R0, #0                      @ VencVgsCallback [R_ARM_MOVT_ABS: .text+0x1fc8] 
    /*00003e14*/ STR         R1, [R2, #260]              @ 0x104 
    /*00003e18*/ MOV         LR, R2 
    /*00003e1c*/ STR         R1, [R2, #264]              @ 0x108 
    /*00003e20*/ LDR         R3, [FP, #52]               @ 0x34 
    /*00003e24*/ LDR         R3, [R3, #2344]             @ 0x928 
    /*00003e28*/ STR         R3, [R2, #296]              @ 0x128 
    /*00003e2c*/ LDR         R3, [FP, #52]               @ 0x34 
    /*00003e30*/ LDR         R3, [R3, #2348]             @ 0x92c 
    /*00003e34*/ STR         R3, [R2, #300]              @ 0x12c 
    /*00003e38*/ LDR         R3, [FP, #52]               @ 0x34 
    /*00003e3c*/ LDR         R3, [R3, #2352]             @ 0x930 
    /*00003e40*/ STR         R3, [R2, #304]              @ 0x130 
    /*00003e44*/ LDR         R3, [FP, #52]               @ 0x34 
    /*00003e48*/ LDR         R3, [R3, #2356]             @ 0x934 
    /*00003e4c*/ STR         R3, [R2, #308]              @ 0x134 
    /*00003e50*/ LDR         R3, [FP, #52]               @ 0x34 
    /*00003e54*/ LDR         R3, [R3, #2396]             @ 0x95c 
    /*00003e58*/ STR         R3, [R2, #280]              @ 0x118 
    /*00003e5c*/ LDR         R3, [FP, #52]               @ 0x34 
    /*00003e60*/ LDR         R3, [R3, #2372]             @ 0x944 
    /*00003e64*/ STRB        R3, [R2, #292]              @ 0x124 
    /*00003e68*/ LDR         R3, [FP, #52]               @ 0x34 
    /*00003e6c*/ LDR         R3, [R3, #2368]             @ 0x940 
    /*00003e70*/ STRB        R3, [R2, #293]              @ 0x125 
    /*00003e74*/ LDR         R3, [FP, #52]               @ 0x34 
    /*00003e78*/ ADD         R3, R3, #2384               @ 0x950 
    /*00003e7c*/ LDRD        R2, [R3, #-8] 
    /*00003e80*/ STRD        R2, [SL, IP] 
    /*00003e84*/ LDR         R3, [FP, #52]               @ 0x34 
    /*00003e88*/ LDR         R3, [R3, #2384]             @ 0x950 
    /*00003e8c*/ STR         R3, [LR, #284]              @ 0x11c 
    /*00003e90*/ LDR         R3, [FP, #52]               @ 0x34 
    /*00003e94*/ LDR         R3, [R3, #2364]             @ 0x93c 
    /*00003e98*/ STRB        R3, [LR, #268]              @ 0x10c 
    /*00003e9c*/ LDR         R3, [FP, #52]               @ 0x34 
    /*00003ea0*/ LDR         R3, [R3, #2340]             @ 0x924 
    /*00003ea4*/ CMP         R3, #2 
    /*00003ea8*/ LDR         R3, [SP, #12] 
    /*00003eac*/ MOVCS       R0, #0 
    /*00003eb0*/ STR         R0, [R5, #720]              @ 0x2d0 
    /*00003eb4*/ STR         R1, [R3, #340]              @ 0x154 
    /*00003eb8*/ B           VencSendPic2Vgs_x3b58
    VencSendPic2Vgs_x3ebc:
    /*00003ebc*/ ADD         R0, SL, #12416              @ 0x3080 
    /*00003ec0*/ STR         R3, [R2, #184]              @ 0xb8 
    /*00003ec4*/ ADD         R1, SL, #12800              @ 0x3200 
    /*00003ec8*/ MOV         R2, #16 
    /*00003ecc*/ ADD         R0, R0, #60                 @ 0x3c 
    /*00003ed0*/ BL          0x0000000000003ED0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00003ed4*/ B           VencSendPic2Vgs_x3b2c
    VencSendPic2Vgs_x3ed8:
    /*00003ed8*/ LDR         R3, [FP, #52]               @ 0x34 
    /*00003edc*/ LDR         R3, [R3, #2340]             @ 0x924 
    /*00003ee0*/ CMP         R3, R8 
    /*00003ee4*/ BLS         VencSendPic2Vgs_x3b90
    /*00003ee8*/ LDRD        R2, [R5, #120]              @ 0x78 
    /*00003eec*/ ADD         R1, R5, #464                @ 0x1d0 
    /*00003ef0*/ STRD        R2, [SP, #72]               @ 0x48 
    /*00003ef4*/ LDRD        R2, [R1, #-8] 
    /*00003ef8*/ STRD        R2, [SP, #24] 
    /*00003efc*/ LDR         R3, [R5, #328]              @ 0x148 
    /*00003f00*/ STR         R3, [SP, #80]               @ 0x50 
    /*00003f04*/ LDR         R3, [R5, #664]              @ 0x298 
    /*00003f08*/ MOV         R8, R3 
    /*00003f0c*/ BL          0x0000000000003F0C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00003f10*/ MOV         R1, #3 
    /*00003f14*/ LDRD        R2, [SP, #24] 
    /*00003f18*/ STR         R1, [SP] 
    /*00003f1c*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*00003f20*/ MOV         R0, R8 
    /*00003f24*/ BLX         R1 
    /*00003f28*/ CMP         R0, #0 
    /*00003f2c*/ BNE         VencSendPic2Vgs_x417c
    /*00003f30*/ LDR         R3, [FP, #52]               @ 0x34 
    /*00003f34*/ LDR         R9, [SP, #16] 
    /*00003f38*/ LDR         R3, [R3, #2340]             @ 0x924 
    /*00003f3c*/ STR         R9, [SP, #24] 
    /*00003f40*/ CMP         R9, R3 
    /*00003f44*/ BCS         VencSendPic2Vgs_x41b0
    /*00003f48*/ ADD         R3, SL, #12544              @ 0x3100 
    /*00003f4c*/ LDR         R8, [SP, #12] 
    /*00003f50*/ STR         SL, [SP, #32] 
    /*00003f54*/ MOV         R2, R3 
    /*00003f58*/ STR         R4, [SP, #12] 
    /*00003f5c*/ MOVW        R3, #0                      @ VencVgsCallback [R_ARM_MOVW_ABS_NC: .text+0x1fc8] 
    /*00003f60*/ ADD         R2, R2, #16 
    /*00003f64*/ MOVT        R3, #0                      @ VencVgsCallback [R_ARM_MOVT_ABS: .text+0x1fc8] 
    /*00003f68*/ STR         R2, [SP, #40]               @ 0x28 
    /*00003f6c*/ STR         R3, [SP, #48]               @ 0x30 
    /*00003f70*/ STR         R7, [SP, #16] 
    /*00003f74*/ STR         R6, [SP, #56]               @ 0x38 
    /*00003f78*/ LDR         R4, [SP, #64]               @ 0x40 
    /*00003f7c*/ B           VencSendPic2Vgs_x40bc
    VencSendPic2Vgs_x3f80:
    /*00003f80*/ BL          0x0000000000003F80          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00003f84*/ ADD         R1, R5, #336                @ 0x150 
    /*00003f88*/ MOV         R2, #336                    @ 0x150 
    /*00003f8c*/ MOV         R0, SL 
    /*00003f90*/ BL          0x0000000000003F90          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00003f94*/ MOV         LR, #56                     @ 0x38 
    /*00003f98*/ MUL         R3, LR, R9 
    /*00003f9c*/ MOV         IP, #1 
    /*00003fa0*/ STR         IP, [R4, #264]              @ 0x108 
    /*00003fa4*/ MOV         R9, R6 
    /*00003fa8*/ LDR         R0, [FP, #52]               @ 0x34 
    /*00003fac*/ MOV         R1, SL 
    /*00003fb0*/ LDR         R2, [SP, #32] 
    /*00003fb4*/ MOV         R5, SL 
    /*00003fb8*/ ADD         R0, R0, R3 
    /*00003fbc*/ ADD         R2, R2, #12544              @ 0x3100 
    /*00003fc0*/ LDR         R0, [R0, #2344]             @ 0x928 
    /*00003fc4*/ ADD         R2, R2, #8 
    /*00003fc8*/ STR         R0, [R4, #296]              @ 0x128 
    /*00003fcc*/ LDR         R0, [FP, #52]               @ 0x34 
    /*00003fd0*/ ADD         R0, R0, R3 
    /*00003fd4*/ LDR         R0, [R0, #2348]             @ 0x92c 
    /*00003fd8*/ STR         R0, [R4, #300]              @ 0x12c 
    /*00003fdc*/ LDR         R0, [FP, #52]               @ 0x34 
    /*00003fe0*/ ADD         R0, R0, R3 
    /*00003fe4*/ LDR         R0, [R0, #2352]             @ 0x930 
    /*00003fe8*/ STR         R0, [R4, #304]              @ 0x130 
    /*00003fec*/ LDR         R0, [FP, #52]               @ 0x34 
    /*00003ff0*/ ADD         R0, R0, R3 
    /*00003ff4*/ LDR         R0, [R0, #2356]             @ 0x934 
    /*00003ff8*/ STR         R0, [R4, #308]              @ 0x134 
    /*00003ffc*/ LDR         R0, [FP, #52]               @ 0x34 
    /*00004000*/ MLA         R0, LR, R6, R0 
    /*00004004*/ MOVW        LR, #2376                   @ 0x948 
    /*00004008*/ LDR         R0, [R0, #2340]             @ 0x924 
    /*0000400c*/ STR         R0, [R4, #280]              @ 0x118 
    /*00004010*/ LDR         R0, [FP, #52]               @ 0x34 
    /*00004014*/ ADD         R0, R0, R3 
    /*00004018*/ LDR         R0, [R0, #2372]             @ 0x944 
    /*0000401c*/ STRB        R0, [R4, #292]              @ 0x124 
    /*00004020*/ LDR         R0, [FP, #52]               @ 0x34 
    /*00004024*/ ADD         R0, R0, R3 
    /*00004028*/ LDR         R0, [R0, #2368]             @ 0x940 
    /*0000402c*/ STRB        R0, [R4, #293]              @ 0x125 
    /*00004030*/ LDR         R0, [FP, #52]               @ 0x34 
    /*00004034*/ ADD         R0, R0, R3 
    /*00004038*/ LDRD        R6, [R0, LR] 
    /*0000403c*/ LDR         R0, [SP, #40]               @ 0x28 
    /*00004040*/ STRD        R6, [R0] 
    /*00004044*/ LDR         R0, [FP, #52]               @ 0x34 
    /*00004048*/ ADD         R0, R0, R3 
    /*0000404c*/ LDR         R0, [R0, #2384]             @ 0x950 
    /*00004050*/ STR         R0, [R4, #284]              @ 0x11c 
    /*00004054*/ LDR         R0, [FP, #52]               @ 0x34 
    /*00004058*/ ADD         R3, R0, R3 
    /*0000405c*/ LDR         R3, [R3, #2364]             @ 0x93c 
    /*00004060*/ STRB        R3, [R4, #268]              @ 0x10c 
    /*00004064*/ LDR         R3, [FP, #52]               @ 0x34 
    /*00004068*/ LDR         R6, [SP, #24] 
    /*0000406c*/ LDR         LR, [SP, #48]               @ 0x30 
    /*00004070*/ LDR         R3, [R3, #2340]             @ 0x924 
    /*00004074*/ LDR         R0, [SP, #100]              @ 0x64 
    /*00004078*/ SUB         R3, R3, #1 
    /*0000407c*/ STR         R9, [SP, #24] 
    /*00004080*/ CMP         R6, R3 
    /*00004084*/ MOVNE       LR, #0 
    /*00004088*/ STR         LR, [SL, #720]              @ 0x2d0 
    /*0000408c*/ LDR         R3, [R8, #340]              @ 0x154 
    /*00004090*/ CMP         R3, #0 
    /*00004094*/ LDR         R3, [SP, #16] 
    /*00004098*/ STREQ       IP, [R8, #340]              @ 0x154 
    /*0000409c*/ LDR         R3, [R3, #20] 
    /*000040a0*/ BLX         R3 
    /*000040a4*/ CMP         R0, #0 
    /*000040a8*/ BNE         VencSendPic2Vgs_x4200
    /*000040ac*/ LDR         R3, [FP, #52]               @ 0x34 
    /*000040b0*/ LDR         R3, [R3, #2340]             @ 0x924 
    /*000040b4*/ CMP         R3, R9 
    /*000040b8*/ BLS         VencSendPic2Vgs_x41a0
    VencSendPic2Vgs_x40bc:
    /*000040bc*/ LDR         R3, [SP, #16] 
    /*000040c0*/ ADD         R6, R9, #1 
    /*000040c4*/ LDR         R3, [R3, #64]               @ 0x40 
    /*000040c8*/ BLX         R3 
    /*000040cc*/ MOV         R1, R5 
    /*000040d0*/ MOV         R2, #744                    @ 0x2e8 
    /*000040d4*/ SUBS        SL, R0, #0 
    /*000040d8*/ BNE         VencSendPic2Vgs_x3f80
    /*000040dc*/ MOVW        R3, #2295                   @ 0x8f7 
    /*000040e0*/ MOVW        R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13fc] 
    /*000040e4*/ STR         R3, [SP] 
    /*000040e8*/ MOVT        R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13fc] 
    /*000040ec*/ LDR         R3, [PC, #336]              @ 0x0000000000004244 
    /*000040f0*/ MOV         R1, #8 
    /*000040f4*/ MOV         R0, #3 
    /*000040f8*/ LDR         SL, [SP, #32] 
    /*000040fc*/ LDR         R7, [SP, #16] 
    /*00004100*/ MOVW        R9, #32781                  @ 0x800d 
    /*00004104*/ LDR         R6, [SP, #56]               @ 0x38 
    /*00004108*/ MOVT        R9, #40968                  @ 0xa008 
    /*0000410c*/ LDR         R4, [SP, #12] 
    /*00004110*/ BL          0x0000000000004110          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004114*/ B           VencSendPic2Vgs_x3d4c
    VencSendPic2Vgs_x4118:
    /*00004118*/ MOVW        R3, #2370                   @ 0x942 
    /*0000411c*/ MOV         R0, R8 
    /*00004120*/ STR         R3, [SP] 
    /*00004124*/ MOVW        R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1580] 
    /*00004128*/ LDR         R3, [PC, #276]              @ 0x0000000000004244 
    /*0000412c*/ MOVT        R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1580] 
    /*00004130*/ MOV         R1, #8 
    /*00004134*/ BL          0x0000000000004134          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004138*/ B           VencSendPic2Vgs_x3d74
    VencSendPic2Vgs_x413c:
    /*0000413c*/ LDR         R3, [FP, #12] 
    /*00004140*/ CMP         R3, #1 
    /*00004144*/ BNE         VencSendPic2Vgs_x3b4c
    /*00004148*/ LDR         R3, [FP, #52]               @ 0x34 
    /*0000414c*/ LDR         R3, [R3, #2340]             @ 0x924 
    /*00004150*/ SUBS        R8, R3, #0 
    /*00004154*/ MOVEQ       R3, R8 
    /*00004158*/ STREQ       R3, [SP, #16] 
    /*0000415c*/ MOVNE       R3, #0 
    /*00004160*/ STRNE       R3, [R5, #720]              @ 0x2d0 
    /*00004164*/ MOVNE       R8, R3 
    /*00004168*/ STRNE       R3, [SP, #16] 
    /*0000416c*/ B           VencSendPic2Vgs_x3b58
    VencSendPic2Vgs_x4170:
    /*00004170*/ MOV         R8, R1 
    /*00004174*/ STR         R1, [SP, #16] 
    /*00004178*/ B           VencSendPic2Vgs_x3b58
    VencSendPic2Vgs_x417c:
    /*0000417c*/ MOVW        R3, #2286                   @ 0x8ee 
    /*00004180*/ MOVW        R2, #0                      @ .LC91 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1520] 
    /*00004184*/ STR         R3, [SP] 
    /*00004188*/ MOVT        R2, #0                      @ .LC91 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1520] 
    /*0000418c*/ LDR         R3, [PC, #176]              @ 0x0000000000004244 
    /*00004190*/ MOV         R1, #8 
    /*00004194*/ MOV         R0, #3 
    /*00004198*/ BL          0x0000000000004198          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000419c*/ B           VencSendPic2Vgs_x3d4c
    VencSendPic2Vgs_x41a0:
    /*000041a0*/ LDR         SL, [SP, #32] 
    /*000041a4*/ LDR         R7, [SP, #16] 
    /*000041a8*/ LDR         R6, [SP, #56]               @ 0x38 
    /*000041ac*/ LDR         R4, [SP, #12] 
    VencSendPic2Vgs_x41b0:
    /*000041b0*/ MOV         R0, #1 
    /*000041b4*/ MOV         R5, #3 
    /*000041b8*/ BL          0x00000000000041B8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000041bc*/ STR         R5, [SP] 
    /*000041c0*/ LDRD        R2, [SP, #72]               @ 0x48 
    /*000041c4*/ LDR         R1, [R0, #64]               @ 0x40 
    /*000041c8*/ LDR         R0, [SP, #80]               @ 0x50 
    /*000041cc*/ BLX         R1 
    /*000041d0*/ CMP         R0, #0 
    /*000041d4*/ BEQ         VencSendPic2Vgs_x3b90
    /*000041d8*/ MOVW        R3, #2340                   @ 0x924 
    /*000041dc*/ MOV         R0, R5 
    /*000041e0*/ STR         R3, [SP] 
    /*000041e4*/ MOVW        R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1580] 
    /*000041e8*/ LDR         R3, [PC, #84]               @ 0x0000000000004244 
    /*000041ec*/ MOVT        R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1580] 
    /*000041f0*/ MOV         R1, #8 
    /*000041f4*/ MOV         R9, #0 
    /*000041f8*/ BL          0x00000000000041F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000041fc*/ B           VencSendPic2Vgs_x3d4c
    VencSendPic2Vgs_x4200:
    /*00004200*/ MOV         R5, R0 
    /*00004204*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00004208*/ MOVW        R3, #2328                   @ 0x918 
    /*0000420c*/ MOVW        R2, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154c] 
    /*00004210*/ STR         R3, [SP] 
    /*00004214*/ MOVT        R2, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154c] 
    /*00004218*/ LDR         R3, [PC, #36]               @ 0x0000000000004244 
    /*0000421c*/ MOV         R1, #8 
    /*00004220*/ MOV         R0, #3 
    /*00004224*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00004228*/ LDR         SL, [SP, #32] 
    /*0000422c*/ ORR         R9, R5, #524288             @ 0x80000 
    /*00004230*/ LDR         R7, [SP, #16] 
    /*00004234*/ LDR         R6, [SP, #56]               @ 0x38 
    /*00004238*/ LDR         R4, [SP, #12] 
    /*0000423c*/ BL          0x000000000000423C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004240*/ B           VencSendPic2Vgs_x3d4c
    /*00004244*/ LDRDEQ      R0, [R0], -R8 
FUNC_END VencSendPic2Vgs


FUNC_BEGIN VencSendPic2VgsOfDcf
    /*00004248*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000424c*/ SUBS        R4, R1, #0 
    /*00004250*/ SUB         SP, SP, #156                @ 0x9c 
    /*00004254*/ MOV         R7, R0 
    /*00004258*/ MOV         R6, R2 
    /*0000425c*/ STR         R3, [SP, #16] 
    /*00004260*/ MOV         R3, #0 
    /*00004264*/ STR         R3, [SP, #72]               @ 0x48 
    /*00004268*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000426c*/ STR         R3, [SP, #76]               @ 0x4c 
    /*00004270*/ STR         R3, [SP, #64]               @ 0x40 
    /*00004274*/ BEQ         VencSendPic2VgsOfDcf_x463c
    VencSendPic2VgsOfDcf_x4278:
    /*00004278*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000427c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00004280*/ MOV         R0, #45                     @ 0x2d 
    /*00004284*/ LDR         R3, [R3] 
    /*00004288*/ STR         R3, [SP, #20] 
    /*0000428c*/ BL          0x000000000000428C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004290*/ LDR         R3, [SP, #196]              @ 0xc4 
    /*00004294*/ CMP         R3, #0 
    /*00004298*/ STR         R0, [SP, #12] 
    /*0000429c*/ BEQ         VencSendPic2VgsOfDcf_x45e0
    /*000042a0*/ ADD         R5, R4, #336                @ 0x150 
    /*000042a4*/ MOV         R2, R4 
    /*000042a8*/ MOV         R0, R7 
    /*000042ac*/ MOV         R8, #0 
    /*000042b0*/ MOV         R1, R5 
    /*000042b4*/ BL          0x00000000000042B4          @ VENC_DRV_OUTPUTPICFORMAT [R_ARM_CALL: .text+0x262e4] 
    /*000042b8*/ LDR         R1, [R4, #348]              @ 0x15c 
    /*000042bc*/ LDR         R3, [R4, #356]              @ 0x164 
    /*000042c0*/ MOV         R2, #160                    @ 0xa0 
    /*000042c4*/ LDR         R0, [R4, #360]              @ 0x168 
    /*000042c8*/ STR         R1, [SP, #80]               @ 0x50 
    /*000042cc*/ LDR         R1, [R4, #352]              @ 0x160 
    /*000042d0*/ STR         R2, [R4, #336]              @ 0x150 
    /*000042d4*/ STR         R3, [SP, #104]              @ 0x68 
    /*000042d8*/ MOV         R3, #120                    @ 0x78 
    /*000042dc*/ STR         R0, [SP, #100]              @ 0x64 
    /*000042e0*/ MOV         R0, #2 
    /*000042e4*/ STR         R3, [R4, #340]              @ 0x154 
    /*000042e8*/ STR         R2, [SP, #84]               @ 0x54 
    /*000042ec*/ STR         R3, [SP, #88]               @ 0x58 
    /*000042f0*/ STR         R1, [SP, #108]              @ 0x6c 
    /*000042f4*/ STR         R8, [SP, #112]              @ 0x70 
    /*000042f8*/ STR         R8, [SP, #96]               @ 0x60 
    /*000042fc*/ STR         R8, [SP, #92]               @ 0x5c 
    /*00004300*/ BL          0x0000000000004300          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004304*/ ADD         R1, SP, #116                @ 0x74 
    /*00004308*/ LDR         R3, [R0, #120]              @ 0x78 
    /*0000430c*/ ADD         R0, SP, #80                 @ 0x50 
    /*00004310*/ BLX         R3 
    /*00004314*/ MOV         R0, #2 
    /*00004318*/ MOV         R3, #8 
    /*0000431c*/ STR         R8, [SP, #72]               @ 0x48 
    /*00004320*/ STR         R3, [SP, #68]               @ 0x44 
    /*00004324*/ STR         R7, [SP, #76]               @ 0x4c 
    /*00004328*/ BL          0x0000000000004328          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000432c*/ ADD         R1, SP, #64                 @ 0x40 
    /*00004330*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*00004334*/ ADD         R0, SP, #68                 @ 0x44 
    /*00004338*/ BLX         R3 
    /*0000433c*/ SUBS        R3, R0, #0 
    /*00004340*/ STR         R3, [SP, #48]               @ 0x30 
    /*00004344*/ BNE         VencSendPic2VgsOfDcf_x46b8
    /*00004348*/ MOV         R0, #1 
    /*0000434c*/ BL          0x000000000000434C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004350*/ LDR         R3, [SP, #64]               @ 0x40 
    /*00004354*/ MOV         R2, #3 
    /*00004358*/ LDR         R1, [SP, #48]               @ 0x30 
    /*0000435c*/ LDR         FP, [R0, #12] 
    /*00004360*/ LDR         R0, [SP, #116]              @ 0x74 
    /*00004364*/ BLX         FP 
    /*00004368*/ CMN         R0, #1 
    /*0000436c*/ MOV         FP, R0 
    /*00004370*/ BEQ         VencSendPic2VgsOfDcf_x46f8
    /*00004374*/ MOV         R0, #1 
    /*00004378*/ BL          0x0000000000004378          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000437c*/ LDR         R3, [R0, #40]               @ 0x28 
    /*00004380*/ MOV         R0, FP 
    /*00004384*/ BLX         R3 
    /*00004388*/ MOV         R3, #45                     @ 0x2d 
    /*0000438c*/ STR         R3, [R4, #668]              @ 0x29c 
    /*00004390*/ STR         R0, [SP, #52]               @ 0x34 
    /*00004394*/ STR         R0, [R4, #664]              @ 0x298 
    /*00004398*/ MOV         R0, #1 
    /*0000439c*/ BL          0x000000000000439C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000043a0*/ LDR         R3, [R0, #52]               @ 0x34 
    /*000043a4*/ MOV         R0, FP 
    /*000043a8*/ BLX         R3 
    /*000043ac*/ MOV         R3, R1 
    /*000043b0*/ LDR         R1, [SP, #128]              @ 0x80 
    /*000043b4*/ MOV         R2, R0 
    /*000043b8*/ STRD        R2, [R5, #72]               @ 0x48 
    /*000043bc*/ STRD        R2, [SP, #56]               @ 0x38 
    /*000043c0*/ ADDS        R2, R2, R1 
    /*000043c4*/ ADC         R3, R3, #0 
    /*000043c8*/ MOV         R0, #1 
    /*000043cc*/ STRD        R2, [R5, #80]               @ 0x50 
    /*000043d0*/ BL          0x00000000000043D0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000043d4*/ LDR         R3, [R0, #48]               @ 0x30 
    /*000043d8*/ MOV         R0, FP 
    /*000043dc*/ BLX         R3 
    /*000043e0*/ LDR         IP, [SP, #128]              @ 0x80 
    /*000043e4*/ LDR         LR, [SP, #124]              @ 0x7c 
    /*000043e8*/ MOV         FP, #0 
    /*000043ec*/ MOV         R2, R0 
    /*000043f0*/ LDR         R0, [SP, #120]              @ 0x78 
    /*000043f4*/ ADDS        R8, R2, IP 
    /*000043f8*/ MOV         R3, R1 
    /*000043fc*/ ADC         R9, R3, #0 
    /*00004400*/ ADDS        SL, LR, R2 
    /*00004404*/ STRD        R8, [R5, #104]              @ 0x68 
    /*00004408*/ MOV         R9, FP 
    /*0000440c*/ STRD        R2, [R5, #96]               @ 0x60 
    /*00004410*/ ADC         FP, FP, R3 
    /*00004414*/ STR         R0, [R4, #368]              @ 0x170 
    /*00004418*/ MOV         R1, R5 
    /*0000441c*/ STR         R0, [R4, #372]              @ 0x174 
    /*00004420*/ STR         R0, [R4, #376]              @ 0x178 
    /*00004424*/ LDRD        R2, [R5, #72]               @ 0x48 
    /*00004428*/ LDR         R0, [SP, #140]              @ 0x8c 
    /*0000442c*/ ADDS        R8, LR, R2 
    /*00004430*/ LDR         IP, [SP, #136]              @ 0x88 
    /*00004434*/ ADC         R9, R9, R3 
    /*00004438*/ STRD        SL, [SP, #32] 
    /*0000443c*/ MOV         R2, R8 
    /*00004440*/ MOV         FP, #0 
    /*00004444*/ MOV         R3, R9 
    /*00004448*/ MOV         R9, #0 
    /*0000444c*/ MOV         SL, IP 
    /*00004450*/ STRD        SL, [SP, #24] 
    /*00004454*/ MOV         SL, R0 
    /*00004458*/ MOV         FP, R9 
    /*0000445c*/ LDRD        R8, [SP, #32] 
    /*00004460*/ STRD        SL, [SP, #32] 
    /*00004464*/ ADDS        SL, R0, R2 
    /*00004468*/ ADC         FP, FP, R3 
    /*0000446c*/ STRD        SL, [R5, #136]              @ 0x88 
    /*00004470*/ LDRD        SL, [SP, #24] 
    /*00004474*/ MOV         R0, R6 
    /*00004478*/ STRD        R2, [R5, #120]              @ 0x78 
    /*0000447c*/ ADDS        SL, SL, R2 
    /*00004480*/ LDR         IP, [SP, #148]              @ 0x94 
    /*00004484*/ ADC         FP, FP, R3 
    /*00004488*/ LDRD        R2, [SP, #24] 
    /*0000448c*/ STRD        R8, [R5, #144]              @ 0x90 
    /*00004490*/ ADDS        R2, R2, R8 
    /*00004494*/ ADC         R3, R3, R9 
    /*00004498*/ STRD        R2, [SP, #24] 
    /*0000449c*/ LDRD        R2, [R5, #136]              @ 0x88 
    /*000044a0*/ STRD        R2, [R5, #128]              @ 0x80 
    /*000044a4*/ LDRD        R2, [SP, #32] 
    /*000044a8*/ STRD        SL, [SP, #32] 
    /*000044ac*/ ADDS        R2, R2, R8 
    /*000044b0*/ MOV         R8, IP 
    /*000044b4*/ ADC         R3, R3, R9 
    /*000044b8*/ MOV         R9, #0 
    /*000044bc*/ STRD        R2, [R5, #160]              @ 0xa0 
    /*000044c0*/ STRD        R8, [SP, #40]               @ 0x28 
    /*000044c4*/ LDRD        R8, [R5, #160]              @ 0xa0 
    /*000044c8*/ LDR         R2, [SP, #132]              @ 0x84 
    /*000044cc*/ LDR         R3, [SP, #144]              @ 0x90 
    /*000044d0*/ STRD        R8, [R5, #152]              @ 0x98 
    /*000044d4*/ LDRD        R8, [SP, #40]               @ 0x28 
    /*000044d8*/ STR         R2, [R4, #380]              @ 0x17c 
    /*000044dc*/ ADDS        SL, SL, R8 
    /*000044e0*/ STR         R2, [R4, #384]              @ 0x180 
    /*000044e4*/ ADC         FP, FP, R9 
    /*000044e8*/ STRD        SL, [SP, #40]               @ 0x28 
    /*000044ec*/ LDRD        SL, [SP, #24] 
    /*000044f0*/ STR         R2, [R4, #388]              @ 0x184 
    /*000044f4*/ MOV         R2, #336                    @ 0x150 
    /*000044f8*/ ADDS        SL, SL, R8 
    /*000044fc*/ ADC         FP, FP, R9 
    /*00004500*/ MOV         R8, SL 
    /*00004504*/ MOV         R9, FP 
    /*00004508*/ LDRD        SL, [SP, #32] 
    /*0000450c*/ STRD        SL, [R5, #168]              @ 0xa8 
    /*00004510*/ LDRD        SL, [SP, #40]               @ 0x28 
    /*00004514*/ STRD        SL, [R5, #176]              @ 0xb0 
    /*00004518*/ STRD        SL, [R5, #184]              @ 0xb8 
    /*0000451c*/ MOV         SL, R8 
    /*00004520*/ MOV         FP, R9 
    /*00004524*/ STRD        SL, [R5, #200]              @ 0xc8 
    /*00004528*/ STRD        SL, [R5, #208]              @ 0xd0 
    /*0000452c*/ LDRD        SL, [SP, #24] 
    /*00004530*/ STRD        SL, [R5, #192]              @ 0xc0 
    /*00004534*/ STR         R3, [R4, #392]              @ 0x188 
    /*00004538*/ STR         R3, [R4, #396]              @ 0x18c 
    /*0000453c*/ STR         R3, [R4, #400]              @ 0x190 
    /*00004540*/ LDR         R3, [SP, #16] 
    /*00004544*/ STR         R6, [R5, #248]              @ 0xf8 
    /*00004548*/ STR         R3, [R5, #252]              @ 0xfc 
    /*0000454c*/ ADD         R5, R4, #672                @ 0x2a0 
    /*00004550*/ BL          0x0000000000004550          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00004554*/ LDR         R3, [SP, #20] 
    /*00004558*/ MOVW        LR, #36240                  @ 0x8d90 
    /*0000455c*/ LDR         R8, [SP, #48]               @ 0x30 
    /*00004560*/ MOV         R2, R7 
    /*00004564*/ MOV         R0, #8 
    /*00004568*/ MLA         LR, LR, R7, R3 
    /*0000456c*/ STR         R8, [R6, #336]              @ 0x150 
    /*00004570*/ STR         R8, [R6, #340]              @ 0x154 
    /*00004574*/ ASR         R3, R7, #31 
    /*00004578*/ STR         R8, [R6, #344]              @ 0x158 
    /*0000457c*/ ADD         IP, R4, #688                @ 0x2b0 
    /*00004580*/ ADD         LR, LR, #12288              @ 0x3000 
    /*00004584*/ STR         R8, [R6, #360]              @ 0x168 
    /*00004588*/ STR         R8, [R6, #380]              @ 0x17c 
    /*0000458c*/ MOV         R1, R4 
    /*00004590*/ STR         R0, [R4, #724]              @ 0x2d4 
    /*00004594*/ STR         R7, [R4, #732]              @ 0x2dc 
    /*00004598*/ STRD        R2, [R5] 
    /*0000459c*/ LDR         R2, [LR, #176]              @ 0xb0 
    /*000045a0*/ LDR         SL, [SP, #192]              @ 0xc0 
    /*000045a4*/ LDR         R0, [SP, #192]              @ 0xc0 
    /*000045a8*/ ASR         R3, R2, #31 
    /*000045ac*/ STRD        R2, [IP, #-8] 
    /*000045b0*/ LDR         R3, [SP, #12] 
    /*000045b4*/ ASR         FP, SL, #31 
    /*000045b8*/ STRD        SL, [IP] 
    /*000045bc*/ STR         R8, [R4, #720]              @ 0x2d0 
    /*000045c0*/ LDR         R3, [R3, #36]               @ 0x24 
    /*000045c4*/ BLX         R3 
    /*000045c8*/ SUBS        R5, R0, #0 
    /*000045cc*/ BNE         VencSendPic2VgsOfDcf_x464c
    VencSendPic2VgsOfDcf_x45d0:
    /*000045d0*/ MOV         R5, #0 
    /*000045d4*/ MOV         R0, R5 
    /*000045d8*/ ADD         SP, SP, #156                @ 0x9c 
    /*000045dc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSendPic2VgsOfDcf_x45e0:
    /*000045e0*/ LDR         R3, [SP, #12] 
    /*000045e4*/ MOV         R1, R4 
    /*000045e8*/ LDR         R0, [SP, #192]              @ 0xc0 
    /*000045ec*/ LDR         R3, [R3, #36]               @ 0x24 
    /*000045f0*/ BLX         R3 
    /*000045f4*/ SUBS        R5, R0, #0 
    /*000045f8*/ BEQ         VencSendPic2VgsOfDcf_x45d0
    /*000045fc*/ MOVW        R3, #2523                   @ 0x9db 
    /*00004600*/ MOVW        R2, #0                      @ .LC96 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1620] 
    /*00004604*/ STR         R3, [SP] 
    /*00004608*/ MOVT        R2, #0                      @ .LC96 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1620] 
    /*0000460c*/ LDR         R3, [PC, #292]              @ 0x0000000000004738 
    /*00004610*/ MOV         R1, #8 
    /*00004614*/ MOV         R0, #3 
    /*00004618*/ BL          0x0000000000004618          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencSendPic2VgsOfDcf_x461c:
    /*0000461c*/ MVN         R1, #0 
    /*00004620*/ MOV         R2, #0 
    /*00004624*/ MOV         R3, #0 
    /*00004628*/ STR         R1, [R6, #328]              @ 0x148 
    /*0000462c*/ STRD        R2, [R6, #120]              @ 0x78 
    VencSendPic2VgsOfDcf_x4630:
    /*00004630*/ MOV         R0, R5 
    /*00004634*/ ADD         SP, SP, #156                @ 0x9c 
    /*00004638*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSendPic2VgsOfDcf_x463c:
    /*0000463c*/ BL          0x00000000000002C8 
    /*00004640*/ SUBS        R5, R0, #0 
    /*00004644*/ BNE         VencSendPic2VgsOfDcf_x4630
    /*00004648*/ B           VencSendPic2VgsOfDcf_x4278
    VencSendPic2VgsOfDcf_x464c:
    /*0000464c*/ MOV         R1, #8 
    /*00004650*/ MOVW        R3, #2523                   @ 0x9db 
    /*00004654*/ MOV         R0, #3 
    /*00004658*/ STR         R3, [SP] 
    /*0000465c*/ MOVW        R2, #0                      @ .LC96 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1620] 
    /*00004660*/ LDR         R3, [PC, #208]              @ 0x0000000000004738 
    /*00004664*/ MOVT        R2, #0                      @ .LC96 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1620] 
    /*00004668*/ MOV         R4, R0 
    /*0000466c*/ BL          0x000000000000466C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004670*/ MOV         R0, #1 
    /*00004674*/ BL          0x0000000000004674          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004678*/ STR         R4, [SP] 
    /*0000467c*/ LDRD        R2, [SP, #56]               @ 0x38 
    /*00004680*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00004684*/ LDR         R0, [SP, #52]               @ 0x34 
    /*00004688*/ BLX         R1 
    /*0000468c*/ CMP         R0, #0 
    /*00004690*/ BEQ         VencSendPic2VgsOfDcf_x461c
    /*00004694*/ MOVW        R3, #2529                   @ 0x9e1 
    /*00004698*/ MOV         R1, #8 
    /*0000469c*/ STR         R3, [SP] 
    /*000046a0*/ MOV         R0, R4 
    /*000046a4*/ MOVW        R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1580] 
    /*000046a8*/ LDR         R3, [PC, #136]              @ 0x0000000000004738 
    /*000046ac*/ MOVT        R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1580] 
    /*000046b0*/ BL          0x00000000000046B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000046b4*/ B           VencSendPic2VgsOfDcf_x461c
    VencSendPic2VgsOfDcf_x46b8:
    /*000046b8*/ LDR         R3, [SP, #12] 
    /*000046bc*/ MOV         R0, R4 
    /*000046c0*/ MOVW        R5, #32784                  @ 0x8010 
    /*000046c4*/ MOVT        R5, #40968                  @ 0xa008 
    /*000046c8*/ LDR         R3, [R3, #68]               @ 0x44 
    /*000046cc*/ BLX         R3 
    /*000046d0*/ MOVW        R3, #2459                   @ 0x99b 
    /*000046d4*/ STR         R7, [SP, #4] 
    /*000046d8*/ MOV         R1, #8 
    /*000046dc*/ STR         R3, [SP] 
    /*000046e0*/ MOVW        R2, #0                      @ .LC88 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1468] 
    /*000046e4*/ LDR         R3, [PC, #76]               @ 0x0000000000004738 
    /*000046e8*/ MOVT        R2, #0                      @ .LC88 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1468] 
    /*000046ec*/ MOV         R0, #3 
    /*000046f0*/ BL          0x00000000000046F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000046f4*/ B           VencSendPic2VgsOfDcf_x4630
    VencSendPic2VgsOfDcf_x46f8:
    /*000046f8*/ MOV         R1, #8 
    /*000046fc*/ MOVW        R3, #2467                   @ 0x9a3 
    /*00004700*/ STR         R7, [SP, #4] 
    /*00004704*/ MOVW        R2, #0                      @ .LC95 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x15dc] 
    /*00004708*/ STR         R3, [SP] 
    /*0000470c*/ MOVT        R2, #0                      @ .LC95 [R_ARM_MOVT_ABS: .rodata.str1.4+0x15dc] 
    /*00004710*/ LDR         R3, [PC, #32]               @ 0x0000000000004738 
    /*00004714*/ MOV         R0, #1 
    /*00004718*/ BL          0x0000000000004718          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000471c*/ LDR         R3, [SP, #12] 
    /*00004720*/ MOV         R0, R4 
    /*00004724*/ MOVW        R5, #32781                  @ 0x800d 
    /*00004728*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000472c*/ LDR         R3, [R3, #68]               @ 0x44 
    /*00004730*/ BLX         R3 
    /*00004734*/ B           VencSendPic2VgsOfDcf_x4630
    /*00004738*/ ANDEQ       R0, R0, R8, ROR #3 
FUNC_END VencSendPic2VgsOfDcf


FUNC_BEGIN VencSendPic2VgsOfMpf
    /*0000473c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00004740*/ SUBS        R4, R1, #0 
    /*00004744*/ SUB         SP, SP, #164                @ 0xa4 
    /*00004748*/ MOV         R6, R0 
    /*0000474c*/ MOV         R7, R2 
    /*00004750*/ STR         R3, [SP, #16] 
    /*00004754*/ MOV         R3, #0 
    /*00004758*/ STR         R3, [SP, #80]               @ 0x50 
    /*0000475c*/ STR         R3, [SP, #76]               @ 0x4c 
    /*00004760*/ STR         R3, [SP, #84]               @ 0x54 
    /*00004764*/ STR         R3, [SP, #72]               @ 0x48 
    /*00004768*/ BEQ         VencSendPic2VgsOfMpf_x4b8c
    VencSendPic2VgsOfMpf_x476c:
    /*0000476c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00004770*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00004774*/ MOVW        R2, #36240                  @ 0x8d90 
    /*00004778*/ MOV         R0, #45                     @ 0x2d 
    /*0000477c*/ LDR         R3, [R3] 
    /*00004780*/ MLA         R3, R2, R6, R3 
    /*00004784*/ STR         R3, [SP, #8] 
    /*00004788*/ BL          0x0000000000004788          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000478c*/ LDR         R3, [SP, #208]              @ 0xd0 
    /*00004790*/ CMP         R3, #0 
    /*00004794*/ STR         R0, [SP, #12] 
    /*00004798*/ BEQ         VencSendPic2VgsOfMpf_x4b24
    /*0000479c*/ LDR         R3, [SP, #204]              @ 0xcc 
    /*000047a0*/ MOV         R0, #2 
    /*000047a4*/ LDR         R8, [R3] 
    /*000047a8*/ LDR         R3, [R3, #4] 
    /*000047ac*/ MOV         R9, R3 
    /*000047b0*/ BL          0x00000000000047B0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000047b4*/ ADD         R1, SP, #68                 @ 0x44 
    /*000047b8*/ LDR         R3, [R0, #16] 
    /*000047bc*/ MOV         R0, R8 
    /*000047c0*/ BLX         R3 
    /*000047c4*/ SUBS        FP, R0, #0 
    /*000047c8*/ BNE         VencSendPic2VgsOfMpf_x4c08
    /*000047cc*/ ADD         R5, R4, #336                @ 0x150 
    /*000047d0*/ MOV         R2, R4 
    /*000047d4*/ MOV         R0, R6 
    /*000047d8*/ MOV         R1, R5 
    /*000047dc*/ BL          0x00000000000047DC          @ VENC_DRV_OUTPUTPICFORMAT [R_ARM_CALL: .text+0x262e4] 
    /*000047e0*/ LDR         LR, [R4, #356]              @ 0x164 
    /*000047e4*/ LDR         IP, [R4, #360]              @ 0x168 
    /*000047e8*/ MOV         R0, #2 
    /*000047ec*/ LDR         R1, [R4, #348]              @ 0x15c 
    /*000047f0*/ LDR         R2, [R4, #352]              @ 0x160 
    /*000047f4*/ STR         R8, [R4, #336]              @ 0x150 
    /*000047f8*/ STR         R9, [R4, #340]              @ 0x154 
    /*000047fc*/ STR         LR, [SP, #112]              @ 0x70 
    /*00004800*/ STR         IP, [SP, #108]              @ 0x6c 
    /*00004804*/ STR         R1, [SP, #88]               @ 0x58 
    /*00004808*/ STR         R2, [SP, #116]              @ 0x74 
    /*0000480c*/ STR         FP, [SP, #120]              @ 0x78 
    /*00004810*/ STR         R8, [SP, #92]               @ 0x5c 
    /*00004814*/ STR         R9, [SP, #96]               @ 0x60 
    /*00004818*/ STR         FP, [SP, #104]              @ 0x68 
    /*0000481c*/ STR         FP, [SP, #100]              @ 0x64 
    /*00004820*/ BL          0x0000000000004820          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004824*/ ADD         R1, SP, #124                @ 0x7c 
    /*00004828*/ LDR         R2, [R0, #120]              @ 0x78 
    /*0000482c*/ ADD         R0, SP, #88                 @ 0x58 
    /*00004830*/ BLX         R2 
    /*00004834*/ MOV         R0, #2 
    /*00004838*/ MOV         R3, #8 
    /*0000483c*/ STR         FP, [SP, #80]               @ 0x50 
    /*00004840*/ STR         R3, [SP, #76]               @ 0x4c 
    /*00004844*/ STR         R6, [SP, #84]               @ 0x54 
    /*00004848*/ BL          0x0000000000004848          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000484c*/ ADD         R1, SP, #72                 @ 0x48 
    /*00004850*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*00004854*/ ADD         R0, SP, #76                 @ 0x4c 
    /*00004858*/ BLX         R3 
    /*0000485c*/ SUBS        R3, R0, #0 
    /*00004860*/ STR         R3, [SP, #20] 
    /*00004864*/ BNE         VencSendPic2VgsOfMpf_x4c48
    /*00004868*/ MOV         R0, #1 
    /*0000486c*/ BL          0x000000000000486C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004870*/ LDR         R3, [SP, #72]               @ 0x48 
    /*00004874*/ MOV         R2, #3 
    /*00004878*/ LDR         R1, [SP, #20] 
    /*0000487c*/ LDR         FP, [R0, #12] 
    /*00004880*/ LDR         R0, [SP, #124]              @ 0x7c 
    /*00004884*/ BLX         FP 
    /*00004888*/ CMN         R0, #1 
    /*0000488c*/ MOV         FP, R0 
    /*00004890*/ BEQ         VencSendPic2VgsOfMpf_x4c88
    /*00004894*/ LDR         R3, [SP, #8] 
    /*00004898*/ MOV         R0, #1 
    /*0000489c*/ ADD         R3, R3, #12416              @ 0x3080 
    /*000048a0*/ MOV         R8, R3 
    /*000048a4*/ BL          0x00000000000048A4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000048a8*/ ADD         R3, R8, #56                 @ 0x38 
    /*000048ac*/ STR         R3, [SP, #48]               @ 0x30 
    /*000048b0*/ LDR         R3, [R0, #40]               @ 0x28 
    /*000048b4*/ MOV         R0, FP 
    /*000048b8*/ BLX         R3 
    /*000048bc*/ MOV         R3, #45                     @ 0x2d 
    /*000048c0*/ STR         R3, [R4, #668]              @ 0x29c 
    /*000048c4*/ STR         R0, [SP, #52]               @ 0x34 
    /*000048c8*/ STR         R0, [R4, #664]              @ 0x298 
    /*000048cc*/ MOV         R0, #1 
    /*000048d0*/ BL          0x00000000000048D0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000048d4*/ LDR         R3, [R0, #52]               @ 0x34 
    /*000048d8*/ MOV         R0, FP 
    /*000048dc*/ BLX         R3 
    /*000048e0*/ MOV         R3, R1 
    /*000048e4*/ LDR         R1, [SP, #136]              @ 0x88 
    /*000048e8*/ MOV         R2, R0 
    /*000048ec*/ STRD        R2, [R5, #72]               @ 0x48 
    /*000048f0*/ STRD        R2, [SP, #56]               @ 0x38 
    /*000048f4*/ ADDS        R2, R2, R1 
    /*000048f8*/ ADC         R3, R3, #0 
    /*000048fc*/ MOV         R0, #1 
    /*00004900*/ STRD        R2, [R5, #80]               @ 0x50 
    /*00004904*/ BL          0x0000000000004904          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004908*/ LDR         R3, [R0, #48]               @ 0x30 
    /*0000490c*/ MOV         R0, FP 
    /*00004910*/ BLX         R3 
    /*00004914*/ LDR         LR, [SP, #136]              @ 0x88 
    /*00004918*/ LDR         IP, [SP, #128]              @ 0x80 
    /*0000491c*/ LDR         FP, [SP, #132]              @ 0x84 
    /*00004920*/ ADDS        R2, R0, LR 
    /*00004924*/ STRD        R0, [R5, #96]               @ 0x60 
    /*00004928*/ ADC         R3, R1, #0 
    /*0000492c*/ ADDS        R8, R0, FP 
    /*00004930*/ STRD        R2, [R5, #104]              @ 0x68 
    /*00004934*/ MOV         R3, #0 
    /*00004938*/ STR         IP, [R4, #368]              @ 0x170 
    /*0000493c*/ ADC         R9, R1, R3 
    /*00004940*/ STR         IP, [R4, #372]              @ 0x174 
    /*00004944*/ MOV         R2, FP 
    /*00004948*/ STR         IP, [R4, #376]              @ 0x178 
    /*0000494c*/ MOV         FP, #0 
    /*00004950*/ LDRD        R0, [R5, #72]               @ 0x48 
    /*00004954*/ STRD        R8, [SP, #24] 
    /*00004958*/ ADDS        R0, R0, R2 
    /*0000495c*/ LDR         IP, [SP, #148]              @ 0x94 
    /*00004960*/ ADC         R1, R1, R3 
    /*00004964*/ LDR         LR, [SP, #144]              @ 0x90 
    /*00004968*/ MOV         R8, R0 
    /*0000496c*/ MOV         R3, #0 
    /*00004970*/ MOV         R9, R1 
    /*00004974*/ LDRD        R0, [SP, #24] 
    /*00004978*/ MOV         SL, LR 
    /*0000497c*/ MOV         R2, IP 
    /*00004980*/ STRD        R2, [SP, #40]               @ 0x28 
    /*00004984*/ MOV         R2, SL 
    /*00004988*/ STRD        R0, [R5, #144]              @ 0x90 
    /*0000498c*/ ADDS        R0, IP, R8 
    /*00004990*/ ADC         R1, R3, R9 
    /*00004994*/ STRD        R0, [R5, #136]              @ 0x88 
    /*00004998*/ LDRD        R0, [SP, #24] 
    /*0000499c*/ ADDS        SL, SL, R8 
    /*000049a0*/ MOV         R3, FP 
    /*000049a4*/ ADC         FP, FP, R9 
    /*000049a8*/ ADDS        R0, R0, R2 
    /*000049ac*/ STRD        SL, [SP, #32] 
    /*000049b0*/ ADC         R1, R1, R3 
    /*000049b4*/ LDRD        R2, [SP, #24] 
    /*000049b8*/ MOV         SL, R0 
    /*000049bc*/ LDR         LR, [SP, #156]              @ 0x9c 
    /*000049c0*/ MOV         FP, R1 
    /*000049c4*/ LDRD        R0, [SP, #40]               @ 0x28 
    /*000049c8*/ STRD        R8, [R5, #120]              @ 0x78 
    /*000049cc*/ ADDS        R2, R2, R0 
    /*000049d0*/ LDRD        R8, [R5, #136]              @ 0x88 
    /*000049d4*/ ADC         R3, R3, R1 
    /*000049d8*/ STRD        SL, [SP, #40]               @ 0x28 
    /*000049dc*/ MOV         R0, R2 
    /*000049e0*/ LDR         R2, [SP, #140]              @ 0x8c 
    /*000049e4*/ MOV         R1, R3 
    /*000049e8*/ STRD        R0, [R5, #152]              @ 0x98 
    /*000049ec*/ STRD        R0, [R5, #160]              @ 0xa0 
    /*000049f0*/ LDRD        R0, [SP, #32] 
    /*000049f4*/ STRD        R8, [R5, #128]              @ 0x80 
    /*000049f8*/ MOV         R9, #0 
    /*000049fc*/ ADDS        R0, R0, LR 
    /*00004a00*/ LDR         R3, [SP, #152]              @ 0x98 
    /*00004a04*/ ADC         R1, R1, R9 
    /*00004a08*/ ADDS        SL, SL, LR 
    /*00004a0c*/ ADC         FP, FP, R9 
    /*00004a10*/ STRD        R0, [SP, #24] 
    /*00004a14*/ MOV         R8, SL 
    /*00004a18*/ STR         R2, [R4, #380]              @ 0x17c 
    /*00004a1c*/ MOV         R9, FP 
    /*00004a20*/ STR         R2, [R4, #384]              @ 0x180 
    /*00004a24*/ LDRD        SL, [SP, #24] 
    /*00004a28*/ STR         R2, [R4, #388]              @ 0x184 
    /*00004a2c*/ MOV         R2, #336                    @ 0x150 
    /*00004a30*/ LDRD        R0, [SP, #32] 
    /*00004a34*/ STRD        SL, [R5, #176]              @ 0xb0 
    /*00004a38*/ STRD        SL, [R5, #184]              @ 0xb8 
    /*00004a3c*/ MOV         SL, R8 
    /*00004a40*/ MOV         FP, R9 
    /*00004a44*/ LDR         IP, [SP, #16] 
    /*00004a48*/ STRD        SL, [R5, #200]              @ 0xc8 
    /*00004a4c*/ STRD        SL, [R5, #208]              @ 0xd0 
    /*00004a50*/ LDRD        SL, [SP, #40]               @ 0x28 
    /*00004a54*/ STRD        R0, [R5, #168]              @ 0xa8 
    /*00004a58*/ MOV         R1, R5 
    /*00004a5c*/ MOV         R0, R7 
    /*00004a60*/ STRD        SL, [R5, #192]              @ 0xc0 
    /*00004a64*/ MOV         SL, R6 
    /*00004a68*/ STR         R3, [R4, #392]              @ 0x188 
    /*00004a6c*/ ASR         FP, R6, #31 
    /*00004a70*/ STR         R3, [R4, #396]              @ 0x18c 
    /*00004a74*/ STR         R3, [R4, #400]              @ 0x190 
    /*00004a78*/ STR         IP, [R5, #252]              @ 0xfc 
    /*00004a7c*/ STR         R7, [R5, #248]              @ 0xf8 
    /*00004a80*/ BL          0x0000000000004A80          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00004a84*/ LDR         R0, [SP, #200]              @ 0xc8 
    /*00004a88*/ LDR         R3, [SP, #8] 
    /*00004a8c*/ ADD         IP, R4, #672                @ 0x2a0 
    /*00004a90*/ LDR         R2, [SP, #20] 
    /*00004a94*/ ADD         LR, R3, #12288              @ 0x3000 
    /*00004a98*/ ASR         R1, R0, #31 
    /*00004a9c*/ LDR         R5, [SP, #48]               @ 0x30 
    /*00004aa0*/ ADD         R3, R4, #688                @ 0x2b0 
    /*00004aa4*/ STR         R2, [R7, #336]              @ 0x150 
    /*00004aa8*/ MOV         R9, R1 
    /*00004aac*/ STR         R2, [R7, #340]              @ 0x154 
    /*00004ab0*/ MOV         R1, R2 
    /*00004ab4*/ STR         R2, [R7, #344]              @ 0x158 
    /*00004ab8*/ MOV         R8, R0 
    /*00004abc*/ STR         R2, [R7, #360]              @ 0x168 
    /*00004ac0*/ MOV         R0, R5 
    /*00004ac4*/ STR         R2, [R7, #380]              @ 0x17c 
    /*00004ac8*/ MOV         R2, #8 
    /*00004acc*/ STR         R6, [R4, #732]              @ 0x2dc 
    /*00004ad0*/ STR         R2, [R4, #724]              @ 0x2d4 
    /*00004ad4*/ MOV         R2, #320                    @ 0x140 
    /*00004ad8*/ STRD        SL, [IP] 
    /*00004adc*/ LDR         SL, [LR, #176]              @ 0xb0 
    /*00004ae0*/ STRD        R8, [R3] 
    /*00004ae4*/ ASR         FP, SL, #31 
    /*00004ae8*/ STRD        SL, [R3, #-8] 
    /*00004aec*/ STR         R1, [R4, #720]              @ 0x2d0 
    /*00004af0*/ BL          0x0000000000004AF0          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00004af4*/ LDR         R3, [SP, #12] 
    /*00004af8*/ MOV         R2, R5 
    /*00004afc*/ MOV         R1, R4 
    /*00004b00*/ LDR         R0, [SP, #200]              @ 0xc8 
    /*00004b04*/ LDR         R3, [R3, #32] 
    /*00004b08*/ BLX         R3 
    /*00004b0c*/ SUBS        R5, R0, #0 
    /*00004b10*/ BNE         VencSendPic2VgsOfMpf_x4b9c
    VencSendPic2VgsOfMpf_x4b14:
    /*00004b14*/ MOV         R5, #0 
    /*00004b18*/ MOV         R0, R5 
    /*00004b1c*/ ADD         SP, SP, #164                @ 0xa4 
    /*00004b20*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSendPic2VgsOfMpf_x4b24:
    /*00004b24*/ LDR         R3, [SP, #8] 
    /*00004b28*/ MOV         R1, R4 
    /*00004b2c*/ LDR         R0, [SP, #200]              @ 0xc8 
    /*00004b30*/ ADD         R2, R3, #12416              @ 0x3080 
    /*00004b34*/ LDR         R3, [SP, #12] 
    /*00004b38*/ ADD         R2, R2, #56                 @ 0x38 
    /*00004b3c*/ LDR         R3, [R3, #32] 
    /*00004b40*/ BLX         R3 
    /*00004b44*/ SUBS        R5, R0, #0 
    /*00004b48*/ BEQ         VencSendPic2VgsOfMpf_x4b14
    /*00004b4c*/ MOVW        R3, #2677                   @ 0xa75 
    /*00004b50*/ MOVW        R2, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x169c] 
    /*00004b54*/ STR         R3, [SP] 
    /*00004b58*/ MOVT        R2, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0x169c] 
    /*00004b5c*/ LDR         R3, [PC, #356]              @ 0x0000000000004cc8 
    /*00004b60*/ MOV         R1, #8 
    /*00004b64*/ MOV         R0, #3 
    /*00004b68*/ BL          0x0000000000004B68          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencSendPic2VgsOfMpf_x4b6c:
    /*00004b6c*/ MVN         R1, #0 
    /*00004b70*/ MOV         R2, #0 
    /*00004b74*/ MOV         R3, #0 
    /*00004b78*/ STR         R1, [R7, #328]              @ 0x148 
    /*00004b7c*/ STRD        R2, [R7, #120]              @ 0x78 
    VencSendPic2VgsOfMpf_x4b80:
    /*00004b80*/ MOV         R0, R5 
    /*00004b84*/ ADD         SP, SP, #164                @ 0xa4 
    /*00004b88*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSendPic2VgsOfMpf_x4b8c:
    /*00004b8c*/ BL          0x00000000000002C8 
    /*00004b90*/ SUBS        R5, R0, #0 
    /*00004b94*/ BNE         VencSendPic2VgsOfMpf_x4b80
    /*00004b98*/ B           VencSendPic2VgsOfMpf_x476c
    VencSendPic2VgsOfMpf_x4b9c:
    /*00004b9c*/ MOV         R1, #8 
    /*00004ba0*/ MOVW        R3, #2677                   @ 0xa75 
    /*00004ba4*/ MOV         R0, #3 
    /*00004ba8*/ STR         R3, [SP] 
    /*00004bac*/ MOVW        R2, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x169c] 
    /*00004bb0*/ LDR         R3, [PC, #272]              @ 0x0000000000004cc8 
    /*00004bb4*/ MOVT        R2, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0x169c] 
    /*00004bb8*/ MOV         R4, R0 
    /*00004bbc*/ BL          0x0000000000004BBC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004bc0*/ MOV         R0, #1 
    /*00004bc4*/ BL          0x0000000000004BC4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004bc8*/ STR         R4, [SP] 
    /*00004bcc*/ LDRD        R2, [SP, #56]               @ 0x38 
    /*00004bd0*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00004bd4*/ LDR         R0, [SP, #52]               @ 0x34 
    /*00004bd8*/ BLX         R1 
    /*00004bdc*/ CMP         R0, #0 
    /*00004be0*/ BEQ         VencSendPic2VgsOfMpf_x4b6c
    /*00004be4*/ MOVW        R3, #2683                   @ 0xa7b 
    /*00004be8*/ MOV         R1, #8 
    /*00004bec*/ STR         R3, [SP] 
    /*00004bf0*/ MOV         R0, R4 
    /*00004bf4*/ MOVW        R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1580] 
    /*00004bf8*/ LDR         R3, [PC, #200]              @ 0x0000000000004cc8 
    /*00004bfc*/ MOVT        R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1580] 
    /*00004c00*/ BL          0x0000000000004C00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004c04*/ B           VencSendPic2VgsOfMpf_x4b6c
    VencSendPic2VgsOfMpf_x4c08:
    /*00004c08*/ LDR         R3, [SP, #12] 
    /*00004c0c*/ MOV         R0, R4 
    /*00004c10*/ MOVW        R5, #32784                  @ 0x8010 
    /*00004c14*/ MOVT        R5, #40968                  @ 0xa008 
    /*00004c18*/ LDR         R3, [R3, #68]               @ 0x44 
    /*00004c1c*/ BLX         R3 
    /*00004c20*/ MOVW        R3, #2584                   @ 0xa18 
    /*00004c24*/ STR         R6, [SP, #4] 
    /*00004c28*/ MOVW        R2, #0                      @ .LC87 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1430] 
    /*00004c2c*/ STR         R3, [SP] 
    /*00004c30*/ MOVT        R2, #0                      @ .LC87 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1430] 
    /*00004c34*/ LDR         R3, [PC, #140]              @ 0x0000000000004cc8 
    /*00004c38*/ MOV         R1, #8 
    /*00004c3c*/ MOV         R0, #3 
    /*00004c40*/ BL          0x0000000000004C40          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004c44*/ B           VencSendPic2VgsOfMpf_x4b80
    VencSendPic2VgsOfMpf_x4c48:
    /*00004c48*/ LDR         R3, [SP, #12] 
    /*00004c4c*/ MOV         R0, R4 
    /*00004c50*/ MOVW        R5, #32784                  @ 0x8010 
    /*00004c54*/ MOVT        R5, #40968                  @ 0xa008 
    /*00004c58*/ LDR         R3, [R3, #68]               @ 0x44 
    /*00004c5c*/ BLX         R3 
    /*00004c60*/ MOVW        R3, #2612                   @ 0xa34 
    /*00004c64*/ STR         R6, [SP, #4] 
    /*00004c68*/ MOV         R1, #8 
    /*00004c6c*/ STR         R3, [SP] 
    /*00004c70*/ MOVW        R2, #0                      @ .LC88 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1468] 
    /*00004c74*/ LDR         R3, [PC, #76]               @ 0x0000000000004cc8 
    /*00004c78*/ MOVT        R2, #0                      @ .LC88 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1468] 
    /*00004c7c*/ MOV         R0, #3 
    /*00004c80*/ BL          0x0000000000004C80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004c84*/ B           VencSendPic2VgsOfMpf_x4b80
    VencSendPic2VgsOfMpf_x4c88:
    /*00004c88*/ LDR         R3, [SP, #12] 
    /*00004c8c*/ MOV         R0, R4 
    /*00004c90*/ MOVW        R5, #32781                  @ 0x800d 
    /*00004c94*/ MOVT        R5, #40968                  @ 0xa008 
    /*00004c98*/ LDR         R3, [R3, #68]               @ 0x44 
    /*00004c9c*/ BLX         R3 
    /*00004ca0*/ MOVW        R3, #2621                   @ 0xa3d 
    /*00004ca4*/ STR         R6, [SP, #4] 
    /*00004ca8*/ MOV         R1, #8 
    /*00004cac*/ STR         R3, [SP] 
    /*00004cb0*/ MOVW        R2, #0                      @ .LC97 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1658] 
    /*00004cb4*/ LDR         R3, [PC, #12]               @ 0x0000000000004cc8 
    /*00004cb8*/ MOVT        R2, #0                      @ .LC97 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1658] 
    /*00004cbc*/ MOV         R0, #1 
    /*00004cc0*/ BL          0x0000000000004CC0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004cc4*/ B           VencSendPic2VgsOfMpf_x4b80
    /*00004cc8*/ ANDEQ       R0, R0, R0, LSL #4 
FUNC_END VencSendPic2VgsOfMpf


FUNC_BEGIN VencAddOsdVgsTask
    /*00004ccc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00004cd0*/ SUB         SP, SP, #12 
    /*00004cd4*/ MOV         R9, R3 
    /*00004cd8*/ LDR         R3, [R3, #4] 
    /*00004cdc*/ LDR         R6, [SP, #48]               @ 0x30 
    /*00004ce0*/ CMP         R6, R3 
    /*00004ce4*/ BCS         VencAddOsdVgsTask_x4e4c
    /*00004ce8*/ MOV         R4, #56                     @ 0x38 
    /*00004cec*/ ADD         SL, R1, #12544              @ 0x3100 
    /*00004cf0*/ MOV         FP, R0 
    /*00004cf4*/ MOV         R8, R1 
    /*00004cf8*/ MOV         R7, R2 
    /*00004cfc*/ ADD         SL, SL, #16 
    /*00004d00*/ MLA         R4, R4, R6, R9 
    /*00004d04*/ B           VencAddOsdVgsTask_x4d14
    VencAddOsdVgsTask_x4d08:
    /*00004d08*/ LDR         R3, [R9, #4] 
    /*00004d0c*/ CMP         R3, R6 
    /*00004d10*/ BLS         VencAddOsdVgsTask_x4e0c
    VencAddOsdVgsTask_x4d14:
    /*00004d14*/ MOV         R0, #45                     @ 0x2d 
    /*00004d18*/ ADD         R6, R6, #1 
    /*00004d1c*/ BL          0x0000000000004D1C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004d20*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00004d24*/ BLX         R3 
    /*00004d28*/ MOV         R1, R7 
    /*00004d2c*/ MOV         R2, #744                    @ 0x2e8 
    /*00004d30*/ SUBS        R5, R0, #0 
    /*00004d34*/ BEQ         VencAddOsdVgsTask_x4e18
    /*00004d38*/ BL          0x0000000000004D38          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00004d3c*/ ADD         R1, R7, #336                @ 0x150 
    /*00004d40*/ MOV         R2, #336                    @ 0x150 
    /*00004d44*/ MOV         R0, R5 
    /*00004d48*/ BL          0x0000000000004D48          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00004d4c*/ ADD         R1, R8, #12288              @ 0x3000 
    /*00004d50*/ MOV         R3, #1 
    /*00004d54*/ MOV         IP, #0 
    /*00004d58*/ STR         R3, [R1, #264]              @ 0x108 
    /*00004d5c*/ MOV         R0, #45                     @ 0x2d 
    /*00004d60*/ LDR         R3, [R4, #8] 
    /*00004d64*/ MOV         R7, R5 
    /*00004d68*/ ADD         R4, R4, #56                 @ 0x38 
    /*00004d6c*/ STR         R3, [R1, #296]              @ 0x128 
    /*00004d70*/ LDR         R3, [R4, #-44]              @ 0xffffffd4 
    /*00004d74*/ STR         R3, [R1, #300]              @ 0x12c 
    /*00004d78*/ LDR         R3, [R4, #-40]              @ 0xffffffd8 
    /*00004d7c*/ STR         R3, [R1, #304]              @ 0x130 
    /*00004d80*/ LDR         R3, [R4, #-36]              @ 0xffffffdc 
    /*00004d84*/ STR         R3, [R1, #308]              @ 0x134 
    /*00004d88*/ LDR         R3, [R4, #4] 
    /*00004d8c*/ STR         R3, [R1, #280]              @ 0x118 
    /*00004d90*/ LDR         R3, [R4, #-20]              @ 0xffffffec 
    /*00004d94*/ STRB        R3, [R1, #292]              @ 0x124 
    /*00004d98*/ LDR         R3, [R4, #-24]              @ 0xffffffe8 
    /*00004d9c*/ STRB        R3, [R1, #293]              @ 0x125 
    /*00004da0*/ LDRD        R2, [R4, #-16] 
    /*00004da4*/ STRD        R2, [SL] 
    /*00004da8*/ LDR         R3, [R4, #-8] 
    /*00004dac*/ STR         R3, [R1, #284]              @ 0x11c 
    /*00004db0*/ LDR         R3, [R4, #-28]              @ 0xffffffe4 
    /*00004db4*/ STRB        R3, [R1, #268]              @ 0x10c 
    /*00004db8*/ STR         IP, [R5, #720]              @ 0x2d0 
    /*00004dbc*/ BL          0x0000000000004DBC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004dc0*/ ADD         R2, R8, #12544              @ 0x3100 
    /*00004dc4*/ MOV         R1, R5 
    /*00004dc8*/ ADD         R2, R2, #8 
    /*00004dcc*/ LDR         R3, [R0, #20] 
    /*00004dd0*/ MOV         R0, FP 
    /*00004dd4*/ BLX         R3 
    /*00004dd8*/ SUBS        R5, R0, #0 
    /*00004ddc*/ BEQ         VencAddOsdVgsTask_x4d08
    /*00004de0*/ MOVW        R3, #2734                   @ 0xaae 
    /*00004de4*/ MOVW        R2, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154c] 
    /*00004de8*/ STR         R3, [SP] 
    /*00004dec*/ MOVT        R2, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154c] 
    /*00004df0*/ LDR         R3, [PC, #92]               @ 0x0000000000004e54 
    /*00004df4*/ MOV         R1, #8 
    /*00004df8*/ MOV         R0, #3 
    /*00004dfc*/ BL          0x0000000000004DFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004e00*/ LDR         R3, [R9, #4] 
    /*00004e04*/ CMP         R3, R6 
    /*00004e08*/ BHI         VencAddOsdVgsTask_x4d14
    VencAddOsdVgsTask_x4e0c:
    /*00004e0c*/ MOV         R0, R5 
    /*00004e10*/ ADD         SP, SP, #12 
    /*00004e14*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencAddOsdVgsTask_x4e18:
    /*00004e18*/ MOVW        R3, #2709                   @ 0xa95 
    /*00004e1c*/ MOV         R1, #8 
    /*00004e20*/ STR         R3, [SP] 
    /*00004e24*/ MOVW        R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13fc] 
    /*00004e28*/ LDR         R3, [PC, #36]               @ 0x0000000000004e54 
    /*00004e2c*/ MOVT        R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13fc] 
    /*00004e30*/ MOV         R0, #3 
    /*00004e34*/ MOVW        R5, #32781                  @ 0x800d 
    /*00004e38*/ BL          0x0000000000004E38          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004e3c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00004e40*/ MOV         R0, R5 
    /*00004e44*/ ADD         SP, SP, #12 
    /*00004e48*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencAddOsdVgsTask_x4e4c:
    /*00004e4c*/ MOV         R5, #0 
    /*00004e50*/ B           VencAddOsdVgsTask_x4e0c
    /*00004e54*/ ANDEQ       R0, R0, R8, LSL R2 
FUNC_END VencAddOsdVgsTask


FUNC_BEGIN VencAddMpfVgsTask
    /*00004e58*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00004e5c*/ SUB         SP, SP, #20 
    /*00004e60*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00004e64*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00004e68*/ LDR         R7, [SP, #60]               @ 0x3c 
    /*00004e6c*/ MOV         R6, R0 
    /*00004e70*/ LDR         R0, [IP] 
    /*00004e74*/ MOVW        IP, #36240                  @ 0x8d90 
    /*00004e78*/ CMP         R7, #0 
    /*00004e7c*/ MOV         R8, R1 
    /*00004e80*/ MOV         R5, R2 
    /*00004e84*/ MOV         R9, R3 
    /*00004e88*/ MLA         R4, IP, R6, R0 
    /*00004e8c*/ LDR         SL, [SP, #56]               @ 0x38 
    /*00004e90*/ BEQ         VencAddMpfVgsTask_x4ed0
    /*00004e94*/ MOV         R0, #45                     @ 0x2d 
    /*00004e98*/ BL          0x0000000000004E98          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004e9c*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00004ea0*/ BLX         R3 
    /*00004ea4*/ SUBS        FP, R0, #0 
    /*00004ea8*/ MOVWEQ      R3, #2755                   @ 0xac3 
    /*00004eac*/ BEQ         VencAddMpfVgsTask_x4fd0
    /*00004eb0*/ MOV         R1, R5 
    /*00004eb4*/ MOV         R2, #744                    @ 0x2e8 
    /*00004eb8*/ BL          0x0000000000004EB8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00004ebc*/ ADD         R1, R5, #336                @ 0x150 
    /*00004ec0*/ MOV         R2, #336                    @ 0x150 
    /*00004ec4*/ MOV         R0, FP 
    /*00004ec8*/ BL          0x0000000000004EC8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00004ecc*/ MOV         R5, FP 
    VencAddMpfVgsTask_x4ed0:
    /*00004ed0*/ LDRD        R2, [R9] 
    /*00004ed4*/ ADD         R0, SL, #4 
    /*00004ed8*/ STR         R7, [SP, #8] 
    /*00004edc*/ MOV         R1, R5 
    /*00004ee0*/ STR         R0, [SP, #4] 
    /*00004ee4*/ MOV         R0, R6 
    /*00004ee8*/ STR         R8, [SP] 
    /*00004eec*/ BL          0x0000000000004EEC          @ VencSendPic2VgsOfMpf [R_ARM_CALL: .text+0x473c] 
    /*00004ef0*/ SUBS        FP, R0, #0 
    /*00004ef4*/ BNE         VencAddMpfVgsTask_x4f18
    /*00004ef8*/ ADD         R4, R4, #12288              @ 0x3000 
    /*00004efc*/ STR         R5, [R4, #504]              @ 0x1f8 
    /*00004f00*/ LDRB        R3, [SL] 
    /*00004f04*/ CMP         R3, #2 
    /*00004f08*/ BEQ         VencAddMpfVgsTask_x4f44
    VencAddMpfVgsTask_x4f0c:
    /*00004f0c*/ MOV         R0, FP 
    /*00004f10*/ ADD         SP, SP, #20 
    /*00004f14*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencAddMpfVgsTask_x4f18:
    /*00004f18*/ MOVW        R3, #2770                   @ 0xad2 
    /*00004f1c*/ MOV         R1, #8 
    /*00004f20*/ STR         R3, [SP] 
    /*00004f24*/ MOVW        R2, #0                      @ .LC99 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x16d4] 
    /*00004f28*/ LDR         R3, [PC, #200]              @ 0x0000000000004ff8 
    /*00004f2c*/ MOVT        R2, #0                      @ .LC99 [R_ARM_MOVT_ABS: .rodata.str1.4+0x16d4] 
    /*00004f30*/ MOV         R0, #3 
    /*00004f34*/ BL          0x0000000000004F34          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004f38*/ MOV         R0, FP 
    /*00004f3c*/ ADD         SP, SP, #20 
    /*00004f40*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencAddMpfVgsTask_x4f44:
    /*00004f44*/ MOV         R0, #45                     @ 0x2d 
    /*00004f48*/ BL          0x0000000000004F48          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004f4c*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00004f50*/ BLX         R3 
    /*00004f54*/ SUBS        R7, R0, #0 
    /*00004f58*/ BEQ         VencAddMpfVgsTask_x4fcc
    /*00004f5c*/ MOV         R2, #744                    @ 0x2e8 
    /*00004f60*/ MOV         R1, R5 
    /*00004f64*/ BL          0x0000000000004F64          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00004f68*/ ADD         R1, R5, #336                @ 0x150 
    /*00004f6c*/ MOV         R2, #336                    @ 0x150 
    /*00004f70*/ MOV         R0, R7 
    /*00004f74*/ BL          0x0000000000004F74          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00004f78*/ LDRD        R2, [R9, #8] 
    /*00004f7c*/ ADD         R1, SL, #12 
    /*00004f80*/ MOV         IP, #1 
    /*00004f84*/ STR         R1, [SP, #4] 
    /*00004f88*/ MOV         R0, R6 
    /*00004f8c*/ STR         R8, [SP] 
    /*00004f90*/ MOV         R1, R7 
    /*00004f94*/ STR         IP, [SP, #8] 
    /*00004f98*/ BL          0x0000000000004F98          @ VencSendPic2VgsOfMpf [R_ARM_CALL: .text+0x473c] 
    /*00004f9c*/ SUBS        FP, R0, #0 
    /*00004fa0*/ STREQ       R7, [R4, #504]              @ 0x1f8 
    /*00004fa4*/ BEQ         VencAddMpfVgsTask_x4f0c
    /*00004fa8*/ MOVW        R3, #2793                   @ 0xae9 
    /*00004fac*/ MOVW        R2, #0                      @ .LC100 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1708] 
    /*00004fb0*/ STR         R3, [SP] 
    /*00004fb4*/ MOVT        R2, #0                      @ .LC100 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1708] 
    /*00004fb8*/ LDR         R3, [PC, #56]               @ 0x0000000000004ff8 
    /*00004fbc*/ MOV         R1, #8 
    /*00004fc0*/ MOV         R0, #3 
    /*00004fc4*/ BL          0x0000000000004FC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004fc8*/ B           VencAddMpfVgsTask_x4f0c
    VencAddMpfVgsTask_x4fcc:
    /*00004fcc*/ MOVW        R3, #2781                   @ 0xadd 
    VencAddMpfVgsTask_x4fd0:
    /*00004fd0*/ STR         R3, [SP] 
    /*00004fd4*/ MOVW        R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13fc] 
    /*00004fd8*/ LDR         R3, [PC, #24]               @ 0x0000000000004ff8 
    /*00004fdc*/ MOVT        R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13fc] 
    /*00004fe0*/ MOV         R1, #8 
    /*00004fe4*/ MOV         R0, #3 
    /*00004fe8*/ MOVW        FP, #32781                  @ 0x800d 
    /*00004fec*/ BL          0x0000000000004FEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004ff0*/ MOVT        FP, #40968                  @ 0xa008 
    /*00004ff4*/ B           VencAddMpfVgsTask_x4f0c
    /*00004ff8*/ ANDEQ       R0, R0, IP, LSR #4 
FUNC_END VencAddMpfVgsTask


FUNC_BEGIN VencSendPic2VgsByJob
    /*00004ffc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00005000*/ SUB         SP, SP, #292                @ 0x124 
    /*00005004*/ SUBS        R7, R1, #0 
    /*00005008*/ MOV         R6, R0 
    /*0000500c*/ STR         R3, [SP, #24] 
    /*00005010*/ MOV         R3, #0 
    /*00005014*/ STR         R3, [SP, #128]              @ 0x80 
    /*00005018*/ STR         R3, [SP, #124]              @ 0x7c 
    /*0000501c*/ STR         R3, [SP, #132]              @ 0x84 
    /*00005020*/ STR         R3, [SP, #120]              @ 0x78 
    /*00005024*/ LDR         R3, [SP, #328]              @ 0x148 
    /*00005028*/ STR         R2, [SP, #20] 
    /*0000502c*/ STR         R3, [SP, #40]               @ 0x28 
    /*00005030*/ LDR         R3, [SP, #332]              @ 0x14c 
    /*00005034*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00005038*/ LDR         R3, [SP, #336]              @ 0x150 
    /*0000503c*/ STR         R3, [SP, #32] 
    /*00005040*/ LDR         R3, [SP, #340]              @ 0x154 
    /*00005044*/ STR         R3, [SP, #36]               @ 0x24 
    /*00005048*/ BEQ         VencSendPic2VgsByJob_x56d8
    VencSendPic2VgsByJob_x504c:
    /*0000504c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00005050*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00005054*/ MOVW        R4, #36240                  @ 0x8d90 
    /*00005058*/ MOV         R0, #45                     @ 0x2d 
    /*0000505c*/ LDR         R3, [R3] 
    /*00005060*/ MLA         R4, R4, R6, R3 
    /*00005064*/ ADD         R5, R4, #8192               @ 0x2000 
    /*00005068*/ LDR         R3, [R5, #4060]             @ 0xfdc 
    /*0000506c*/ ADD         R3, R3, #1 
    /*00005070*/ STR         R3, [R5, #4060]             @ 0xfdc 
    /*00005074*/ BL          0x0000000000005074          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005078*/ SUBS        R3, R0, #0 
    /*0000507c*/ STR         R3, [SP, #8] 
    /*00005080*/ BEQ         VencSendPic2VgsByJob_x56e8
    /*00005084*/ ADD         R3, R4, #12288              @ 0x3000 
    /*00005088*/ ADD         R0, SP, #256                @ 0x100 
    /*0000508c*/ MOVW        R1, #0                      @ VencVgsCallbackByJob [R_ARM_MOVW_ABS_NC: .text+0x260c] 
    /*00005090*/ MOVT        R1, #0                      @ VencVgsCallbackByJob [R_ARM_MOVT_ABS: .text+0x260c] 
    /*00005094*/ LDR         R2, [R3, #176]              @ 0xb0 
    /*00005098*/ MOV         SL, #0 
    /*0000509c*/ STR         R1, [SP, #280]              @ 0x118 
    /*000050a0*/ ADD         R1, SP, #264                @ 0x108 
    /*000050a4*/ MOV         FP, #0 
    /*000050a8*/ STR         R6, [SP] 
    /*000050ac*/ STRD        SL, [SP, #224]              @ 0xe0 
    /*000050b0*/ ADD         IP, SP, #224                @ 0xe0 
    /*000050b4*/ STRD        SL, [SP, #232]              @ 0xe8 
    /*000050b8*/ MOV         R8, #1 
    /*000050bc*/ STRD        SL, [SP, #240]              @ 0xf0 
    /*000050c0*/ STRD        SL, [SP, #248]              @ 0xf8 
    /*000050c4*/ MOV         SL, R6 
    /*000050c8*/ STR         R3, [SP, #28] 
    /*000050cc*/ ASR         FP, R6, #31 
    /*000050d0*/ ASR         R3, R2, #31 
    /*000050d4*/ STRD        SL, [R0] 
    /*000050d8*/ STRD        R2, [R1] 
    /*000050dc*/ ADD         R0, SP, #116                @ 0x74 
    /*000050e0*/ STR         IP, [SP, #4] 
    /*000050e4*/ MOV         R2, R6 
    /*000050e8*/ LDR         IP, [SP, #8] 
    /*000050ec*/ ASR         R3, R6, #31 
    /*000050f0*/ STR         R8, [SP, #276]              @ 0x114 
    /*000050f4*/ MOV         R1, R8 
    /*000050f8*/ STRD        R2, [SP, #48]               @ 0x30 
    /*000050fc*/ MOV         R3, #0 
    /*00005100*/ LDR         SL, [IP] 
    /*00005104*/ MOV         R2, #8 
    /*00005108*/ BLX         SL 
    /*0000510c*/ SUBS        SL, R0, #0 
    /*00005110*/ BNE         VencSendPic2VgsByJob_x51f8
    /*00005114*/ LDR         R3, [SP, #352]              @ 0x160 
    /*00005118*/ CMP         R3, #0 
    /*0000511c*/ BEQ         VencSendPic2VgsByJob_x51b4
    VencSendPic2VgsByJob_x5120:
    /*00005120*/ LDR         R3, [SP, #20] 
    /*00005124*/ STR         R3, [SP, #48]               @ 0x30 
    /*00005128*/ LDR         R3, [SP, #28] 
    /*0000512c*/ LDR         R2, [R3, #148]              @ 0x94 
    /*00005130*/ LDR         R8, [R3, #152]              @ 0x98 
    /*00005134*/ STR         R2, [SP, #64]               @ 0x40 
    /*00005138*/ LDR         R2, [SP, #24] 
    /*0000513c*/ STR         R2, [SP, #52]               @ 0x34 
    VencSendPic2VgsByJob_x5140:
    /*00005140*/ LDRD        R2, [SP, #48]               @ 0x30 
    /*00005144*/ ORRS        R3, R2, R3 
    /*00005148*/ BNE         VencSendPic2VgsByJob_x5228
    /*0000514c*/ MOVW        R3, #2904                   @ 0xb58 
    /*00005150*/ MOVW        R2, #0                      @ .LC102 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1770] 
    /*00005154*/ STR         R3, [SP] 
    /*00005158*/ MOVT        R2, #0                      @ .LC102 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1770] 
    /*0000515c*/ LDR         R3, [PC, #3712]             @ 0x0000000000005fe4 
    /*00005160*/ MOV         R1, #8 
    /*00005164*/ MOV         R0, #3 
    /*00005168*/ MOVW        R8, #32774                  @ 0x8006 
    /*0000516c*/ BL          0x000000000000516C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005170*/ MOVT        R8, #40968                  @ 0xa008 
    VencSendPic2VgsByJob_x5174:
    /*00005174*/ LDR         R3, [SP, #8] 
    /*00005178*/ LDR         R0, [SP, #116]              @ 0x74 
    /*0000517c*/ LDR         R3, [R3, #4] 
    /*00005180*/ BLX         R3 
    VencSendPic2VgsByJob_x5184:
    /*00005184*/ LDR         R3, [R7, #12] 
    /*00005188*/ CMP         R3, #1 
    /*0000518c*/ BEQ         VencSendPic2VgsByJob_x56b8
    VencSendPic2VgsByJob_x5190:
    /*00005190*/ LDR         R2, [SP, #28] 
    /*00005194*/ MOV         R3, #0 
    /*00005198*/ STR         R3, [R2, #504]              @ 0x1f8 
    /*0000519c*/ LDR         R3, [R5, #4068]             @ 0xfe4 
    /*000051a0*/ ADD         R3, R3, #1 
    /*000051a4*/ STR         R3, [R5, #4068]             @ 0xfe4 
    VencSendPic2VgsByJob_x51a8:
    /*000051a8*/ MOV         R0, R8 
    /*000051ac*/ ADD         SP, SP, #292                @ 0x124 
    /*000051b0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSendPic2VgsByJob_x51b4:
    /*000051b4*/ LDR         R3, [R7, #12] 
    /*000051b8*/ CMP         R3, #0 
    /*000051bc*/ BNE         VencSendPic2VgsByJob_x5120
    /*000051c0*/ LDR         R3, [SP, #356]              @ 0x164 
    /*000051c4*/ LDRB        R3, [R3] 
    /*000051c8*/ CMP         R3, #0 
    /*000051cc*/ BEQ         VencSendPic2VgsByJob_x575c
    /*000051d0*/ LDR         R3, [SP, #32] 
    /*000051d4*/ STR         R3, [SP, #48]               @ 0x30 
    /*000051d8*/ LDR         R3, [SP, #356]              @ 0x164 
    /*000051dc*/ LDR         R3, [R3, #4] 
    /*000051e0*/ STR         R3, [SP, #64]               @ 0x40 
    /*000051e4*/ LDR         R3, [SP, #36]               @ 0x24 
    /*000051e8*/ STR         R3, [SP, #52]               @ 0x34 
    /*000051ec*/ LDR         R3, [SP, #356]              @ 0x164 
    /*000051f0*/ LDR         R8, [R3, #8] 
    /*000051f4*/ B           VencSendPic2VgsByJob_x5140
    VencSendPic2VgsByJob_x51f8:
    /*000051f8*/ BIC         R8, SL, #267386880          @ 0xff00000 
    /*000051fc*/ MOVW        R3, #2865                   @ 0xb31 
    /*00005200*/ MOVW        R2, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13cc] 
    /*00005204*/ STR         R3, [SP] 
    /*00005208*/ MOVT        R2, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13cc] 
    /*0000520c*/ LDR         R3, [PC, #3536]             @ 0x0000000000005fe4 
    /*00005210*/ MOV         R1, #8 
    /*00005214*/ MOV         R0, #3 
    /*00005218*/ BIC         R8, R8, #983040             @ 0xf0000 
    /*0000521c*/ BL          0x000000000000521C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005220*/ ORR         R8, R8, #524288             @ 0x80000 
    /*00005224*/ B           VencSendPic2VgsByJob_x5184
    VencSendPic2VgsByJob_x5228:
    /*00005228*/ LDR         R3, [SP, #8] 
    /*0000522c*/ LDR         R3, [R3, #64]               @ 0x40 
    /*00005230*/ BLX         R3 
    /*00005234*/ SUBS        SL, R0, #0 
    /*00005238*/ BEQ         VencSendPic2VgsByJob_x5940
    /*0000523c*/ LDR         R3, [R7] 
    /*00005240*/ ADD         FP, SL, #336                @ 0x150 
    /*00005244*/ MOV         R2, #336                    @ 0x150 
    /*00005248*/ MOV         R0, FP 
    /*0000524c*/ MOV         R9, R3 
    /*00005250*/ MOV         R3, #0 
    /*00005254*/ MOV         R1, R9 
    /*00005258*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000525c*/ BL          0x000000000000525C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00005260*/ MOV         R2, R9 
    /*00005264*/ MOV         R1, FP 
    /*00005268*/ MOV         R0, R6 
    /*0000526c*/ BL          0x000000000000526C          @ VENC_DRV_OUTPUTPICFORMAT [R_ARM_CALL: .text+0x262e4] 
    /*00005270*/ LDR         R3, [SP, #64]               @ 0x40 
    /*00005274*/ LDR         LR, [SL, #356]              @ 0x164 
    /*00005278*/ MOV         R0, #2 
    /*0000527c*/ LDR         IP, [SL, #360]              @ 0x168 
    /*00005280*/ LDR         R1, [SL, #348]              @ 0x15c 
    /*00005284*/ LDR         R2, [SL, #352]              @ 0x160 
    /*00005288*/ STR         R3, [SL, #336]              @ 0x150 
    /*0000528c*/ STR         R3, [SP, #192]              @ 0xc0 
    /*00005290*/ LDR         R3, [SP, #56]               @ 0x38 
    /*00005294*/ STR         R8, [SL, #340]              @ 0x154 
    /*00005298*/ STR         LR, [SP, #212]              @ 0xd4 
    /*0000529c*/ STR         IP, [SP, #208]              @ 0xd0 
    /*000052a0*/ STR         R3, [SP, #220]              @ 0xdc 
    /*000052a4*/ STR         R3, [SP, #204]              @ 0xcc 
    /*000052a8*/ STR         R3, [SP, #200]              @ 0xc8 
    /*000052ac*/ STR         R3, [SP, #64]               @ 0x40 
    /*000052b0*/ STR         R1, [SP, #188]              @ 0xbc 
    /*000052b4*/ STR         R2, [SP, #216]              @ 0xd8 
    /*000052b8*/ STR         R8, [SP, #196]              @ 0xc4 
    /*000052bc*/ BL          0x00000000000052BC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000052c0*/ ADD         R1, SP, #152                @ 0x98 
    /*000052c4*/ LDR         R2, [R0, #120]              @ 0x78 
    /*000052c8*/ ADD         R0, SP, #188                @ 0xbc 
    /*000052cc*/ BLX         R2 
    /*000052d0*/ LDR         R3, [SP, #64]               @ 0x40 
    /*000052d4*/ MOV         R0, #2 
    /*000052d8*/ STR         R6, [SP, #132]              @ 0x84 
    /*000052dc*/ STR         R3, [SP, #128]              @ 0x80 
    /*000052e0*/ MOV         R3, #8 
    /*000052e4*/ STR         R3, [SP, #124]              @ 0x7c 
    /*000052e8*/ BL          0x00000000000052E8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000052ec*/ ADD         R1, SP, #120                @ 0x78 
    /*000052f0*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*000052f4*/ ADD         R0, SP, #124                @ 0x7c 
    /*000052f8*/ BLX         R3 
    /*000052fc*/ SUBS        R3, R0, #0 
    /*00005300*/ STR         R3, [SP, #64]               @ 0x40 
    /*00005304*/ BNE         VencSendPic2VgsByJob_x571c
    /*00005308*/ MOV         R0, #1 
    /*0000530c*/ BL          0x000000000000530C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005310*/ LDR         R3, [SP, #120]              @ 0x78 
    /*00005314*/ MOV         R2, #3 
    /*00005318*/ LDR         R1, [SP, #64]               @ 0x40 
    /*0000531c*/ LDR         R8, [R0, #12] 
    /*00005320*/ LDR         R0, [SP, #152]              @ 0x98 
    /*00005324*/ BLX         R8 
    /*00005328*/ CMN         R0, #1 
    /*0000532c*/ MOV         R8, R0 
    /*00005330*/ BEQ         VencSendPic2VgsByJob_x5a04
    /*00005334*/ LDR         R2, [SP, #28] 
    /*00005338*/ MOV         R0, #1 
    /*0000533c*/ LDR         R1, [SP, #48]               @ 0x30 
    /*00005340*/ LDR         R3, [R2, #16] 
    /*00005344*/ STR         R1, [SP, #68]               @ 0x44 
    /*00005348*/ ADD         R3, R3, R0 
    /*0000534c*/ STR         R3, [R2, #16] 
    /*00005350*/ BL          0x0000000000005350          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005354*/ ADD         R3, R4, #12416              @ 0x3080 
    /*00005358*/ ADD         R3, R3, #56                 @ 0x38 
    /*0000535c*/ STR         R3, [SP, #96]               @ 0x60 
    /*00005360*/ LDR         R3, [R0, #40]               @ 0x28 
    /*00005364*/ MOV         R0, R8 
    /*00005368*/ BLX         R3 
    /*0000536c*/ MOV         R3, R0 
    /*00005370*/ STR         R0, [SP, #100]              @ 0x64 
    /*00005374*/ STR         R3, [SL, #664]              @ 0x298 
    /*00005378*/ MOV         R0, #1 
    /*0000537c*/ BL          0x000000000000537C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005380*/ LDR         R3, [R0, #52]               @ 0x34 
    /*00005384*/ MOV         R0, R8 
    /*00005388*/ BLX         R3 
    /*0000538c*/ MOV         R3, #45                     @ 0x2d 
    /*00005390*/ STRD        R0, [FP, #120]              @ 0x78 
    /*00005394*/ STRD        R0, [SP, #104]              @ 0x68 
    /*00005398*/ MOV         R0, #1 
    /*0000539c*/ STR         R3, [SL, #668]              @ 0x29c 
    /*000053a0*/ BL          0x00000000000053A0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000053a4*/ LDR         R3, [R0, #52]               @ 0x34 
    /*000053a8*/ MOV         R0, R8 
    /*000053ac*/ BLX         R3 
    /*000053b0*/ MOV         R3, R1 
    /*000053b4*/ LDR         R1, [SP, #164]              @ 0xa4 
    /*000053b8*/ MOV         R2, R0 
    /*000053bc*/ STRD        R2, [FP, #72]               @ 0x48 
    /*000053c0*/ ADDS        R2, R2, R1 
    /*000053c4*/ MOV         R0, #1 
    /*000053c8*/ ADC         R3, R3, #0 
    /*000053cc*/ STRD        R2, [FP, #80]               @ 0x50 
    /*000053d0*/ BL          0x00000000000053D0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000053d4*/ LDR         R3, [R0, #48]               @ 0x30 
    /*000053d8*/ MOV         R0, R8 
    /*000053dc*/ BLX         R3 
    /*000053e0*/ LDR         LR, [SP, #160]              @ 0xa0 
    /*000053e4*/ LDR         IP, [SP, #164]              @ 0xa4 
    /*000053e8*/ MOV         R2, R0 
    /*000053ec*/ LDR         R0, [SP, #156]              @ 0x9c 
    /*000053f0*/ ADDS        R8, R2, IP 
    /*000053f4*/ MOV         R3, R1 
    /*000053f8*/ MOV         R1, R9 
    /*000053fc*/ STRD        R2, [FP, #96]               @ 0x60 
    /*00005400*/ ADC         R9, R3, #0 
    /*00005404*/ STRD        R8, [FP, #104]              @ 0x68 
    /*00005408*/ STR         R0, [SL, #368]              @ 0x170 
    /*0000540c*/ MOV         R8, LR 
    /*00005410*/ STR         R0, [SL, #372]              @ 0x174 
    /*00005414*/ MOV         R9, #0 
    /*00005418*/ STR         R0, [SL, #376]              @ 0x178 
    /*0000541c*/ STRD        R8, [SP, #72]               @ 0x48 
    /*00005420*/ ADDS        R8, LR, R2 
    /*00005424*/ ADC         R9, R9, R3 
    /*00005428*/ LDRD        R2, [FP, #72]               @ 0x48 
    /*0000542c*/ STRD        R8, [SP, #56]               @ 0x38 
    /*00005430*/ LDRD        R8, [SP, #72]               @ 0x48 
    /*00005434*/ LDR         LR, [SP, #176]              @ 0xb0 
    /*00005438*/ ADDS        R8, R8, R2 
    /*0000543c*/ LDR         IP, [SP, #172]              @ 0xac 
    /*00005440*/ ADC         R9, R9, R3 
    /*00005444*/ LDR         R0, [SP, #184]              @ 0xb8 
    /*00005448*/ MOV         R2, R8 
    /*0000544c*/ MOV         R8, LR 
    /*00005450*/ MOV         R3, R9 
    /*00005454*/ MOV         R9, #0 
    /*00005458*/ STRD        R8, [SP, #72]               @ 0x48 
    /*0000545c*/ LDRD        R8, [SP, #56]               @ 0x38 
    /*00005460*/ STRD        R2, [SP, #80]               @ 0x50 
    /*00005464*/ STRD        R2, [FP, #120]              @ 0x78 
    /*00005468*/ STRD        R8, [FP, #144]              @ 0x90 
    /*0000546c*/ LDRD        R8, [SP, #72]               @ 0x48 
    /*00005470*/ ADDS        R8, R8, R2 
    /*00005474*/ ADC         R9, R9, R3 
    /*00005478*/ LDRD        R2, [SP, #72]               @ 0x48 
    /*0000547c*/ STRD        R8, [SP, #88]               @ 0x58 
    /*00005480*/ LDRD        R8, [SP, #56]               @ 0x38 
    /*00005484*/ ADDS        R2, R2, R8 
    /*00005488*/ ADC         R3, R3, R9 
    /*0000548c*/ LDRD        R8, [SP, #80]               @ 0x50 
    /*00005490*/ STRD        R2, [FP, #160]              @ 0xa0 
    /*00005494*/ LDRD        R2, [SP, #88]               @ 0x58 
    /*00005498*/ ADDS        R8, R8, IP 
    /*0000549c*/ STRD        R2, [FP, #128]              @ 0x80 
    /*000054a0*/ STRD        R2, [FP, #136]              @ 0x88 
    /*000054a4*/ MOV         R3, #0 
    /*000054a8*/ ADC         R9, R9, R3 
    /*000054ac*/ STRD        R8, [SP, #72]               @ 0x48 
    /*000054b0*/ LDRD        R8, [SP, #56]               @ 0x38 
    /*000054b4*/ MOV         R2, #336                    @ 0x150 
    /*000054b8*/ ADDS        R8, R8, IP 
    /*000054bc*/ ADC         R9, R9, R3 
    /*000054c0*/ STRD        R8, [SP, #56]               @ 0x38 
    /*000054c4*/ MOV         R9, #0 
    /*000054c8*/ LDR         LR, [SP, #168]              @ 0xa8 
    /*000054cc*/ MOV         R3, R9 
    /*000054d0*/ LDRD        R8, [FP, #160]              @ 0xa0 
    /*000054d4*/ LDR         IP, [SP, #180]              @ 0xb4 
    /*000054d8*/ STRD        R8, [FP, #152]              @ 0x98 
    /*000054dc*/ LDRD        R8, [SP, #72]               @ 0x48 
    /*000054e0*/ STR         LR, [SL, #380]              @ 0x17c 
    /*000054e4*/ ADDS        R8, R8, R0 
    /*000054e8*/ STR         LR, [SL, #384]              @ 0x180 
    /*000054ec*/ ADC         R9, R9, R3 
    /*000054f0*/ STRD        R8, [SP, #80]               @ 0x50 
    /*000054f4*/ LDRD        R8, [SP, #56]               @ 0x38 
    /*000054f8*/ STR         LR, [SL, #388]              @ 0x184 
    /*000054fc*/ ADDS        R8, R8, R0 
    /*00005500*/ MOV         R0, SL 
    /*00005504*/ ADC         R9, R9, R3 
    /*00005508*/ STRD        R8, [SP, #88]               @ 0x58 
    /*0000550c*/ LDRD        R8, [SP, #72]               @ 0x48 
    /*00005510*/ STRD        R8, [FP, #168]              @ 0xa8 
    /*00005514*/ LDRD        R8, [SP, #80]               @ 0x50 
    /*00005518*/ STRD        R8, [FP, #176]              @ 0xb0 
    /*0000551c*/ STRD        R8, [FP, #184]              @ 0xb8 
    /*00005520*/ LDRD        R8, [SP, #88]               @ 0x58 
    /*00005524*/ STRD        R8, [FP, #200]              @ 0xc8 
    /*00005528*/ STRD        R8, [FP, #208]              @ 0xd0 
    /*0000552c*/ LDRD        R8, [SP, #56]               @ 0x38 
    /*00005530*/ STRD        R8, [FP, #192]              @ 0xc0 
    /*00005534*/ LDRD        R8, [SP, #48]               @ 0x30 
    /*00005538*/ STR         IP, [SL, #392]              @ 0x188 
    /*0000553c*/ STR         IP, [SL, #396]              @ 0x18c 
    /*00005540*/ STR         IP, [SL, #400]              @ 0x190 
    /*00005544*/ STRD        R8, [FP, #248]              @ 0xf8 
    /*00005548*/ BL          0x0000000000005548          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000554c*/ MOV         R2, #336                    @ 0x150 
    /*00005550*/ MOV         R1, FP 
    /*00005554*/ MOV         R0, R8 
    /*00005558*/ BL          0x0000000000005558          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000555c*/ LDR         R9, [SP, #64]               @ 0x40 
    /*00005560*/ LDR         R1, [SP, #68]               @ 0x44 
    /*00005564*/ ADD         IP, SL, #672                @ 0x2a0 
    /*00005568*/ LDR         LR, [SP, #116]              @ 0x74 
    /*0000556c*/ ADD         R3, SL, #688                @ 0x2b0 
    /*00005570*/ MOV         R2, #320                    @ 0x140 
    /*00005574*/ LDR         R0, [SP, #96]               @ 0x60 
    /*00005578*/ STR         R9, [R1, #336]              @ 0x150 
    /*0000557c*/ STR         R9, [R1, #340]              @ 0x154 
    /*00005580*/ STR         R9, [R1, #344]              @ 0x158 
    /*00005584*/ STR         R9, [R1, #360]              @ 0x168 
    /*00005588*/ MOV         R1, R9 
    /*0000558c*/ LDR         R8, [R7, #56]               @ 0x38 
    /*00005590*/ LDR         R9, [SP, #68]               @ 0x44 
    /*00005594*/ STR         R8, [R9, #384]              @ 0x180 
    /*00005598*/ MOV         R8, LR 
    /*0000559c*/ STR         R6, [SL, #732]              @ 0x2dc 
    /*000055a0*/ ASR         R9, LR, #31 
    /*000055a4*/ STR         R1, [SL, #728]              @ 0x2d8 
    /*000055a8*/ MOV         LR, #8 
    /*000055ac*/ STRD        R8, [SP, #48]               @ 0x30 
    /*000055b0*/ MOV         R8, R6 
    /*000055b4*/ STR         LR, [SL, #724]              @ 0x2d4 
    /*000055b8*/ ASR         R9, R6, #31 
    /*000055bc*/ STRD        R8, [IP] 
    /*000055c0*/ LDR         IP, [SP, #28] 
    /*000055c4*/ LDRD        R8, [SP, #48]               @ 0x30 
    /*000055c8*/ LDR         IP, [IP, #176]              @ 0xb0 
    /*000055cc*/ STRD        R8, [R3] 
    /*000055d0*/ MOV         R8, IP 
    /*000055d4*/ ASR         R9, IP, #31 
    /*000055d8*/ STRD        R8, [R3, #-8] 
    /*000055dc*/ STR         R1, [SL, #720]              @ 0x2d0 
    /*000055e0*/ BL          0x00000000000055E0          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000055e4*/ LDR         R2, [SP, #28] 
    /*000055e8*/ LDR         R3, [R2, #508]              @ 0x1fc 
    /*000055ec*/ STR         SL, [R2, #504]              @ 0x1f8 
    /*000055f0*/ CMP         R3, #1 
    /*000055f4*/ BEQ         VencSendPic2VgsByJob_x5b48
    VencSendPic2VgsByJob_x55f8:
    /*000055f8*/ LDR         R3, [SP, #352]              @ 0x160 
    /*000055fc*/ CMP         R3, #0 
    /*00005600*/ BEQ         VencSendPic2VgsByJob_x57a4
    /*00005604*/ LDR         R2, [SL] 
    /*00005608*/ LDR         R3, [SL, #336]              @ 0x150 
    /*0000560c*/ CMP         R2, R3 
    /*00005610*/ BNE         VencSendPic2VgsByJob_x5624
    /*00005614*/ LDR         R2, [SL, #4] 
    /*00005618*/ LDR         R3, [SL, #340]              @ 0x154 
    /*0000561c*/ CMP         R2, R3 
    /*00005620*/ BEQ         VencSendPic2VgsByJob_x596c
    VencSendPic2VgsByJob_x5624:
    /*00005624*/ LDR         R3, [SP, #8] 
    /*00005628*/ MOV         R1, SL 
    /*0000562c*/ LDR         R2, [SP, #96]               @ 0x60 
    /*00005630*/ LDR         R0, [SP, #116]              @ 0x74 
    /*00005634*/ LDR         R3, [R3, #32] 
    /*00005638*/ BLX         R3 
    /*0000563c*/ SUBS        R8, R0, #0 
    /*00005640*/ MOVWNE      R3, #3034                   @ 0xbda 
    /*00005644*/ BNE         VencSendPic2VgsByJob_x5ab0
    /*00005648*/ LDR         R3, [R5, #3768]             @ 0xeb8 
    /*0000564c*/ CMP         R3, #0 
    /*00005650*/ BNE         VencSendPic2VgsByJob_x5d7c
    VencSendPic2VgsByJob_x5654:
    /*00005654*/ LDR         FP, [R7, #12] 
    /*00005658*/ CMP         FP, #1 
    /*0000565c*/ BEQ         VencSendPic2VgsByJob_x5e30
    VencSendPic2VgsByJob_x5660:
    /*00005660*/ LDR         R3, [SP, #356]              @ 0x164 
    /*00005664*/ LDR         R2, [SP, #20] 
    /*00005668*/ LDRB        R3, [R3] 
    /*0000566c*/ STR         R2, [SP, #224]              @ 0xe0 
    /*00005670*/ CMP         R3, #0 
    /*00005674*/ LDR         R3, [SP, #24] 
    /*00005678*/ STR         R3, [SP, #228]              @ 0xe4 
    /*0000567c*/ BNE         VencSendPic2VgsByJob_x5ad0
    VencSendPic2VgsByJob_x5680:
    /*00005680*/ LDR         R3, [SP, #8] 
    /*00005684*/ ADD         R2, SP, #224                @ 0xe0 
    /*00005688*/ MOV         R1, #1 
    /*0000568c*/ LDR         R0, [SP, #116]              @ 0x74 
    /*00005690*/ LDR         R3, [R3, #12] 
    /*00005694*/ BLX         R3 
    /*00005698*/ SUBS        R8, R0, #0 
    /*0000569c*/ BNE         VencSendPic2VgsByJob_x5a7c
    /*000056a0*/ LDR         R3, [SP, #28] 
    /*000056a4*/ STR         R8, [R3, #504]              @ 0x1f8 
    /*000056a8*/ LDR         R3, [R5, #4064]             @ 0xfe0 
    /*000056ac*/ ADD         R3, R3, #1 
    /*000056b0*/ STR         R3, [R5, #4064]             @ 0xfe0 
    /*000056b4*/ B           VencSendPic2VgsByJob_x51a8
    VencSendPic2VgsByJob_x56b8:
    /*000056b8*/ LDR         R3, [R7, #52]               @ 0x34 
    /*000056bc*/ LDR         R3, [R3, #2340]             @ 0x924 
    /*000056c0*/ CMP         R3, #0 
    /*000056c4*/ BEQ         VencSendPic2VgsByJob_x5190
    /*000056c8*/ ADD         R1, R7, #8 
    /*000056cc*/ MOV         R0, R6 
    /*000056d0*/ BL          0x00000000000056D0          @ VencPutOverLayEx [R_ARM_CALL: .text+0x1528] 
    /*000056d4*/ B           VencSendPic2VgsByJob_x5190
    VencSendPic2VgsByJob_x56d8:
    /*000056d8*/ BL          0x00000000000002C8 
    /*000056dc*/ SUBS        R8, R0, #0 
    /*000056e0*/ BNE         VencSendPic2VgsByJob_x51a8
    /*000056e4*/ B           VencSendPic2VgsByJob_x504c
    VencSendPic2VgsByJob_x56e8:
    /*000056e8*/ MOVW        R3, #2847                   @ 0xb1f 
    /*000056ec*/ MOVW        R2, #0                      @ .LC84 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1394] 
    /*000056f0*/ STR         R3, [SP] 
    /*000056f4*/ MOVT        R2, #0                      @ .LC84 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1394] 
    /*000056f8*/ LDR         R3, [PC, #2276]             @ 0x0000000000005fe4 
    /*000056fc*/ MOV         R1, #8 
    /*00005700*/ MOV         R0, #3 
    /*00005704*/ ADD         IP, R4, #12288              @ 0x3000 
    /*00005708*/ MOVW        R8, #32784                  @ 0x8010 
    /*0000570c*/ STR         IP, [SP, #28] 
    /*00005710*/ MOVT        R8, #40968                  @ 0xa008 
    /*00005714*/ BL          0x0000000000005714          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005718*/ B           VencSendPic2VgsByJob_x5184
    VencSendPic2VgsByJob_x571c:
    /*0000571c*/ LDR         R3, [SP, #8] 
    /*00005720*/ MOV         R0, SL 
    /*00005724*/ MOVW        R8, #32784                  @ 0x8010 
    /*00005728*/ MOVT        R8, #40968                  @ 0xa008 
    /*0000572c*/ LDR         R3, [R3, #68]               @ 0x44 
    /*00005730*/ BLX         R3 
    /*00005734*/ MOVW        R3, #2946                   @ 0xb82 
    /*00005738*/ STR         R6, [SP, #4] 
    /*0000573c*/ MOV         R1, #8 
    /*00005740*/ STR         R3, [SP] 
    /*00005744*/ MOVW        R2, #0                      @ .LC88 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1468] 
    /*00005748*/ LDR         R3, [PC, #2196]             @ 0x0000000000005fe4 
    /*0000574c*/ MOVT        R2, #0                      @ .LC88 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1468] 
    /*00005750*/ MOV         R0, #3 
    /*00005754*/ BL          0x0000000000005754          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005758*/ B           VencSendPic2VgsByJob_x5174
    VencSendPic2VgsByJob_x575c:
    /*0000575c*/ MOV         R0, R8 
    /*00005760*/ BL          0x0000000000005760          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005764*/ LDR         R3, [R0, #104]              @ 0x68 
    /*00005768*/ MOV         R0, R8 
    /*0000576c*/ BLX         R3 
    /*00005770*/ CMP         R0, #0 
    /*00005774*/ BEQ         VencSendPic2VgsByJob_x5a50
    /*00005778*/ LDR         R3, [R5, #3768]             @ 0xeb8 
    /*0000577c*/ CMP         R3, #0 
    /*00005780*/ BEQ         VencSendPic2VgsByJob_x5a50
    /*00005784*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00005788*/ MOV         R8, #120                    @ 0x78 
    /*0000578c*/ STR         R3, [SP, #48]               @ 0x30 
    /*00005790*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00005794*/ STR         R3, [SP, #52]               @ 0x34 
    /*00005798*/ MOV         R3, #160                    @ 0xa0 
    /*0000579c*/ STR         R3, [SP, #64]               @ 0x40 
    /*000057a0*/ B           VencSendPic2VgsByJob_x5140
    VencSendPic2VgsByJob_x57a4:
    /*000057a4*/ LDR         R3, [R7, #12] 
    /*000057a8*/ CMP         R3, #0 
    /*000057ac*/ BNE         VencSendPic2VgsByJob_x596c
    /*000057b0*/ LDR         R3, [SP, #356]              @ 0x164 
    /*000057b4*/ LDRB        R3, [R3] 
    /*000057b8*/ CMP         R3, #0 
    /*000057bc*/ BNE         VencSendPic2VgsByJob_x5ce4
    VencSendPic2VgsByJob_x57c0:
    /*000057c0*/ LDR         R3, [R5, #3768]             @ 0xeb8 
    /*000057c4*/ CMP         R3, #0 
    /*000057c8*/ BEQ         VencSendPic2VgsByJob_x5680
    /*000057cc*/ MOV         R0, #1 
    /*000057d0*/ BL          0x00000000000057D0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000057d4*/ LDR         R3, [R0, #104]              @ 0x68 
    /*000057d8*/ MOV         R0, #1 
    /*000057dc*/ BLX         R3 
    /*000057e0*/ CMP         R0, #0 
    /*000057e4*/ BEQ         VencSendPic2VgsByJob_x5680
    /*000057e8*/ LDR         R3, [SP, #356]              @ 0x164 
    /*000057ec*/ LDRB        R3, [R3] 
    /*000057f0*/ CMP         R3, #0 
    /*000057f4*/ BEQ         VencSendPic2VgsByJob_x5828
    /*000057f8*/ MOV         R0, #45                     @ 0x2d 
    /*000057fc*/ BL          0x00000000000057FC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005800*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00005804*/ BLX         R3 
    /*00005808*/ SUBS        SL, R0, #0 
    /*0000580c*/ BEQ         VencSendPic2VgsByJob_x5fb8
    /*00005810*/ LDR         R3, [SP, #28] 
    /*00005814*/ MOV         R2, #744                    @ 0x2e8 
    /*00005818*/ LDR         R1, [R3, #504]              @ 0x1f8 
    /*0000581c*/ BL          0x000000000000581C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00005820*/ LDR         R3, [SP, #356]              @ 0x164 
    /*00005824*/ LDRB        R3, [R3] 
    VencSendPic2VgsByJob_x5828:
    /*00005828*/ LDR         R0, [SP, #116]              @ 0x74 
    /*0000582c*/ ADDS        R3, R3, #0 
    /*00005830*/ LDR         R2, [SP, #40]               @ 0x28 
    /*00005834*/ MOV         R1, SL 
    /*00005838*/ MOVNE       R3, #1 
    /*0000583c*/ STR         R3, [SP, #4] 
    /*00005840*/ STR         R0, [SP] 
    /*00005844*/ MOV         R0, R6 
    /*00005848*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000584c*/ BL          0x000000000000584C          @ VencSendPic2VgsOfDcf [R_ARM_CALL: .text+0x4248] 
    /*00005850*/ SUBS        R8, R0, #0 
    /*00005854*/ BEQ         VencSendPic2VgsByJob_x5f4c
    /*00005858*/ MOVW        R3, #3251                   @ 0xcb3 
    /*0000585c*/ MOVW        R2, #0                      @ .LC103 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x179c] 
    /*00005860*/ STR         R3, [SP] 
    /*00005864*/ MOVT        R2, #0                      @ .LC103 [R_ARM_MOVT_ABS: .rodata.str1.4+0x179c] 
    /*00005868*/ LDR         R3, [PC, #1908]             @ 0x0000000000005fe4 
    /*0000586c*/ MOV         R1, #8 
    /*00005870*/ MOV         R0, #3 
    /*00005874*/ BL          0x0000000000005874          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005878*/ MOV         R2, #0 
    /*0000587c*/ MOV         R3, #0 
    /*00005880*/ STRD        R2, [SP, #232]              @ 0xe8 
    VencSendPic2VgsByJob_x5884:
    /*00005884*/ MOV         R0, #1 
    /*00005888*/ MOV         R4, #3 
    /*0000588c*/ BL          0x000000000000588C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005890*/ STR         R4, [SP] 
    /*00005894*/ LDRD        R2, [SP, #104]              @ 0x68 
    /*00005898*/ LDR         R1, [R0, #64]               @ 0x40 
    /*0000589c*/ LDR         R0, [SP, #100]              @ 0x64 
    /*000058a0*/ BLX         R1 
    /*000058a4*/ CMP         R0, #0 
    /*000058a8*/ BNE         VencSendPic2VgsByJob_x5cc0
    VencSendPic2VgsByJob_x58ac:
    /*000058ac*/ LDR         R9, [SP, #8] 
    /*000058b0*/ ADD         R4, SP, #232                @ 0xe8 
    /*000058b4*/ ADD         SL, SP, #256                @ 0x100 
    /*000058b8*/ MOVW        FP, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1580] 
    /*000058bc*/ STR         R5, [SP, #20] 
    /*000058c0*/ MOVT        FP, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1580] 
    /*000058c4*/ STR         FP, [SP, #24] 
    VencSendPic2VgsByJob_x58c8:
    /*000058c8*/ LDRD        R2, [R4], #8 
    /*000058cc*/ ORRS        R1, R2, R3 
    /*000058d0*/ BEQ         VencSendPic2VgsByJob_x5910
    /*000058d4*/ LDR         FP, [R2, #328]              @ 0x148 
    /*000058d8*/ MOV         R0, #1 
    /*000058dc*/ MOV         R5, #3 
    /*000058e0*/ CMN         FP, #1 
    /*000058e4*/ BEQ         VencSendPic2VgsByJob_x5910
    /*000058e8*/ LDRD        R2, [R2, #120]              @ 0x78 
    /*000058ec*/ STRD        R2, [SP, #8] 
    /*000058f0*/ BL          0x00000000000058F0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000058f4*/ STR         R5, [SP] 
    /*000058f8*/ LDRD        R2, [SP, #8] 
    /*000058fc*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00005900*/ MOV         R0, FP 
    /*00005904*/ BLX         R1 
    /*00005908*/ CMP         R0, #0 
    /*0000590c*/ BNE         VencSendPic2VgsByJob_x5d5c
    VencSendPic2VgsByJob_x5910:
    /*00005910*/ CMP         SL, R4 
    /*00005914*/ BNE         VencSendPic2VgsByJob_x58c8
    /*00005918*/ LDR         R2, [SP, #28] 
    /*0000591c*/ BIC         R8, R8, #267386880          @ 0xff00000 
    /*00005920*/ BIC         R8, R8, #983040             @ 0xf0000 
    /*00005924*/ STR         R9, [SP, #8] 
    /*00005928*/ LDR         R5, [SP, #20] 
    /*0000592c*/ ORR         R8, R8, #524288             @ 0x80000 
    /*00005930*/ LDR         R3, [R2, #20] 
    /*00005934*/ ADD         R3, R3, #1 
    /*00005938*/ STR         R3, [R2, #20] 
    /*0000593c*/ B           VencSendPic2VgsByJob_x5174
    VencSendPic2VgsByJob_x5940:
    /*00005940*/ MOVW        R3, #2911                   @ 0xb5f 
    /*00005944*/ MOVW        R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13fc] 
    /*00005948*/ STR         R3, [SP] 
    /*0000594c*/ MOVT        R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13fc] 
    /*00005950*/ LDR         R3, [PC, #1676]             @ 0x0000000000005fe4 
    /*00005954*/ MOV         R1, #8 
    /*00005958*/ MOV         R0, #3 
    /*0000595c*/ MOVW        R8, #32781                  @ 0x800d 
    /*00005960*/ BL          0x0000000000005960          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005964*/ MOVT        R8, #40968                  @ 0xa008 
    /*00005968*/ B           VencSendPic2VgsByJob_x5174
    VencSendPic2VgsByJob_x596c:
    /*0000596c*/ LDR         R3, [R5, #3768]             @ 0xeb8 
    /*00005970*/ CMP         R3, #0 
    /*00005974*/ BNE         VencSendPic2VgsByJob_x5b64
    VencSendPic2VgsByJob_x5978:
    /*00005978*/ LDR         R2, [R7, #12] 
    /*0000597c*/ CMP         R2, #1 
    /*00005980*/ BEQ         VencSendPic2VgsByJob_x5c0c
    /*00005984*/ LDR         R3, [R7] 
    /*00005988*/ LDR         R8, [R3, #16] 
    /*0000598c*/ CMP         R8, #0 
    /*00005990*/ MOVNE       FP, #0 
    /*00005994*/ BEQ         VencSendPic2VgsByJob_x5bf8
    VencSendPic2VgsByJob_x5998:
    /*00005998*/ LDR         R3, [SP, #8] 
    /*0000599c*/ MOV         R1, SL 
    /*000059a0*/ LDR         R2, [SP, #96]               @ 0x60 
    /*000059a4*/ LDR         R0, [SP, #116]              @ 0x74 
    /*000059a8*/ LDR         R3, [R3, #32] 
    /*000059ac*/ BLX         R3 
    /*000059b0*/ SUBS        R8, R0, #0 
    /*000059b4*/ BNE         VencSendPic2VgsByJob_x5aac
    /*000059b8*/ LDR         R3, [R7, #12] 
    /*000059bc*/ CMP         R3, #1 
    /*000059c0*/ LDREQ       R3, [R7, #52]               @ 0x34 
    /*000059c4*/ BNE         VencSendPic2VgsByJob_x5660
    VencSendPic2VgsByJob_x59c8:
    /*000059c8*/ LDR         R2, [R3, #2340]             @ 0x924 
    /*000059cc*/ CMP         R2, #1 
    /*000059d0*/ BLS         VencSendPic2VgsByJob_x5660
    /*000059d4*/ LDR         R0, [SP, #116]              @ 0x74 
    /*000059d8*/ ADD         R3, R3, #2336               @ 0x920 
    /*000059dc*/ STR         FP, [SP] 
    /*000059e0*/ MOV         R1, R4 
    /*000059e4*/ MOV         R2, SL 
    /*000059e8*/ BL          0x00000000000059E8          @ VencAddOsdVgsTask [R_ARM_CALL: .text+0x4ccc] 
    /*000059ec*/ SUBS        R8, R0, #0 
    /*000059f0*/ BNE         VencSendPic2VgsByJob_x5f28
    /*000059f4*/ LDR         R2, [SP, #20] 
    /*000059f8*/ MOV         R3, #1 
    /*000059fc*/ STR         R3, [R2, #340]              @ 0x154 
    /*00005a00*/ B           VencSendPic2VgsByJob_x5660
    VencSendPic2VgsByJob_x5a04:
    /*00005a04*/ LDR         R3, [SP, #8] 
    /*00005a08*/ MOV         R0, SL 
    /*00005a0c*/ MOVW        R8, #32781                  @ 0x800d 
    /*00005a10*/ MOVT        R8, #40968                  @ 0xa008 
    /*00005a14*/ LDR         R3, [R3, #68]               @ 0x44 
    /*00005a18*/ BLX         R3 
    /*00005a1c*/ LDR         R3, [R5, #4072]             @ 0xfe8 
    /*00005a20*/ MOVW        IP, #2957                   @ 0xb8d 
    /*00005a24*/ MOV         R1, #8 
    /*00005a28*/ ADD         R3, R3, #1 
    /*00005a2c*/ MOVW        R2, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14a0] 
    /*00005a30*/ STR         R3, [R5, #4072]             @ 0xfe8 
    /*00005a34*/ MOVT        R2, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14a0] 
    /*00005a38*/ STR         R6, [SP, #4] 
    /*00005a3c*/ MOV         R0, #1 
    /*00005a40*/ STR         IP, [SP] 
    /*00005a44*/ LDR         R3, [PC, #1432]             @ 0x0000000000005fe4 
    /*00005a48*/ BL          0x0000000000005A48          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005a4c*/ B           VencSendPic2VgsByJob_x5174
    VencSendPic2VgsByJob_x5a50:
    /*00005a50*/ MOVW        R3, #2897                   @ 0xb51 
    /*00005a54*/ MOVW        R2, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x173c] 
    /*00005a58*/ STR         R3, [SP] 
    /*00005a5c*/ MOVT        R2, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0x173c] 
    /*00005a60*/ LDR         R3, [PC, #1404]             @ 0x0000000000005fe4 
    /*00005a64*/ MOV         R1, #8 
    /*00005a68*/ MOV         R0, #3 
    /*00005a6c*/ MOVW        R8, #32777                  @ 0x8009 
    /*00005a70*/ BL          0x0000000000005A70          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005a74*/ MOVT        R8, #40968                  @ 0xa008 
    /*00005a78*/ B           VencSendPic2VgsByJob_x5174
    VencSendPic2VgsByJob_x5a7c:
    /*00005a7c*/ BIC         R8, R8, #267386880          @ 0xff00000 
    /*00005a80*/ MOVW        R3, #3271                   @ 0xcc7 
    /*00005a84*/ MOVW        R2, #0                      @ .LC94 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x15ac] 
    /*00005a88*/ STR         R3, [SP] 
    /*00005a8c*/ MOVT        R2, #0                      @ .LC94 [R_ARM_MOVT_ABS: .rodata.str1.4+0x15ac] 
    /*00005a90*/ LDR         R3, [PC, #1356]             @ 0x0000000000005fe4 
    /*00005a94*/ MOV         R1, #8 
    /*00005a98*/ MOV         R0, #3 
    /*00005a9c*/ BIC         R8, R8, #983040             @ 0xf0000 
    /*00005aa0*/ BL          0x0000000000005AA0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005aa4*/ ORR         R8, R8, #524288             @ 0x80000 
    /*00005aa8*/ B           VencSendPic2VgsByJob_x5174
    VencSendPic2VgsByJob_x5aac:
    /*00005aac*/ MOV         R3, #3152                   @ 0xc50 
    VencSendPic2VgsByJob_x5ab0:
    /*00005ab0*/ STR         R3, [SP] 
    /*00005ab4*/ MOVW        R2, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x169c] 
    /*00005ab8*/ LDR         R3, [PC, #1316]             @ 0x0000000000005fe4 
    /*00005abc*/ MOVT        R2, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0x169c] 
    /*00005ac0*/ MOV         R1, #8 
    /*00005ac4*/ MOV         R0, #3 
    /*00005ac8*/ BL          0x0000000000005AC8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005acc*/ B           VencSendPic2VgsByJob_x5884
    VencSendPic2VgsByJob_x5ad0:
    /*00005ad0*/ LDR         IP, [SP, #32] 
    /*00005ad4*/ MOV         R0, #1 
    /*00005ad8*/ LDR         R3, [SP, #356]              @ 0x164 
    /*00005adc*/ MOV         R2, SL 
    /*00005ae0*/ STR         R0, [SP, #4] 
    /*00005ae4*/ MOV         R0, R6 
    /*00005ae8*/ STR         IP, [SP, #136]              @ 0x88 
    /*00005aec*/ LDR         IP, [SP, #36]               @ 0x24 
    /*00005af0*/ STR         R3, [SP] 
    /*00005af4*/ ADD         R3, SP, #136                @ 0x88 
    /*00005af8*/ LDR         R1, [SP, #116]              @ 0x74 
    /*00005afc*/ STR         IP, [SP, #140]              @ 0x8c 
    /*00005b00*/ ADD         IP, SP, #344                @ 0x158 
    /*00005b04*/ LDRD        R8, [IP] 
    /*00005b08*/ STRD        R8, [SP, #144]              @ 0x90 
    /*00005b0c*/ BL          0x0000000000005B0C          @ VencAddMpfVgsTask [R_ARM_CALL: .text+0x4e58] 
    /*00005b10*/ SUBS        R8, R0, #0 
    /*00005b14*/ BNE         VencSendPic2VgsByJob_x5e98
    /*00005b18*/ LDR         R3, [SP, #356]              @ 0x164 
    /*00005b1c*/ LDR         R2, [SP, #32] 
    /*00005b20*/ LDRB        R3, [R3] 
    /*00005b24*/ STR         R2, [SP, #232]              @ 0xe8 
    /*00005b28*/ CMP         R3, #1 
    /*00005b2c*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00005b30*/ STR         R3, [SP, #236]              @ 0xec 
    /*00005b34*/ BLS         VencSendPic2VgsByJob_x5ee0
    VencSendPic2VgsByJob_x5b38:
    /*00005b38*/ ADD         R3, SP, #344                @ 0x158 
    /*00005b3c*/ LDRD        R2, [R3] 
    /*00005b40*/ STRD        R2, [SP, #240]              @ 0xf0 
    /*00005b44*/ B           VencSendPic2VgsByJob_x5680
    VencSendPic2VgsByJob_x5b48:
    /*00005b48*/ ADD         R0, R4, #12416              @ 0x3080 
    /*00005b4c*/ STR         R3, [R2, #184]              @ 0xb8 
    /*00005b50*/ ADD         R1, R4, #12800              @ 0x3200 
    /*00005b54*/ MOV         R2, #16 
    /*00005b58*/ ADD         R0, R0, #60                 @ 0x3c 
    /*00005b5c*/ BL          0x0000000000005B5C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00005b60*/ B           VencSendPic2VgsByJob_x55f8
    VencSendPic2VgsByJob_x5b64:
    /*00005b64*/ MOV         R0, #1 
    /*00005b68*/ BL          0x0000000000005B68          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005b6c*/ LDR         R3, [R0, #104]              @ 0x68 
    /*00005b70*/ MOV         R0, #1 
    /*00005b74*/ BLX         R3 
    /*00005b78*/ CMP         R0, #0 
    /*00005b7c*/ BEQ         VencSendPic2VgsByJob_x5978
    /*00005b80*/ MOV         R0, #45                     @ 0x2d 
    /*00005b84*/ BL          0x0000000000005B84          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005b88*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00005b8c*/ BLX         R3 
    /*00005b90*/ SUBS        FP, R0, #0 
    /*00005b94*/ MOVWEQ      R3, #3101                   @ 0xc1d 
    /*00005b98*/ BEQ         VencSendPic2VgsByJob_x5fbc
    /*00005b9c*/ MOV         R2, #744                    @ 0x2e8 
    /*00005ba0*/ MOV         R1, SL 
    /*00005ba4*/ BL          0x0000000000005BA4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00005ba8*/ LDR         R1, [SP, #116]              @ 0x74 
    /*00005bac*/ MOV         R3, #1 
    /*00005bb0*/ LDR         R2, [SP, #40]               @ 0x28 
    /*00005bb4*/ STR         R3, [SP, #4] 
    /*00005bb8*/ MOV         R0, R6 
    /*00005bbc*/ STR         R1, [SP] 
    /*00005bc0*/ MOV         R1, FP 
    /*00005bc4*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00005bc8*/ BL          0x0000000000005BC8          @ VencSendPic2VgsOfDcf [R_ARM_CALL: .text+0x4248] 
    /*00005bcc*/ SUBS        R8, R0, #0 
    /*00005bd0*/ BEQ         VencSendPic2VgsByJob_x5f8c
    /*00005bd4*/ MOVW        R3, #3110                   @ 0xc26 
    VencSendPic2VgsByJob_x5bd8:
    /*00005bd8*/ STR         R3, [SP] 
    /*00005bdc*/ MOVW        R2, #0                      @ .LC103 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x179c] 
    /*00005be0*/ LDR         R3, [PC, #1020]             @ 0x0000000000005fe4 
    /*00005be4*/ MOVT        R2, #0                      @ .LC103 [R_ARM_MOVT_ABS: .rodata.str1.4+0x179c] 
    /*00005be8*/ MOV         R1, #8 
    /*00005bec*/ MOV         R0, #3 
    /*00005bf0*/ BL          0x0000000000005BF0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005bf4*/ B           VencSendPic2VgsByJob_x5884
    VencSendPic2VgsByJob_x5bf8:
    /*00005bf8*/ LDR         R3, [R3, #24] 
    /*00005bfc*/ CMP         R3, #0 
    /*00005c00*/ BEQ         VencSendPic2VgsByJob_x5660
    /*00005c04*/ MOV         FP, R8 
    /*00005c08*/ B           VencSendPic2VgsByJob_x5998
    VencSendPic2VgsByJob_x5c0c:
    /*00005c0c*/ LDR         R3, [R7, #52]               @ 0x34 
    /*00005c10*/ LDR         FP, [R3, #2340]             @ 0x924 
    /*00005c14*/ CMP         FP, #0 
    /*00005c18*/ BEQ         VencSendPic2VgsByJob_x5e78
    /*00005c1c*/ LDR         R8, [SP, #28] 
    /*00005c20*/ MOVW        LR, #12560                  @ 0x3110 
    /*00005c24*/ MOV         IP, #0 
    /*00005c28*/ MOV         FP, R2 
    /*00005c2c*/ STR         R2, [R8, #260]              @ 0x104 
    /*00005c30*/ STR         R2, [R8, #264]              @ 0x108 
    /*00005c34*/ LDR         R3, [R7, #52]               @ 0x34 
    /*00005c38*/ LDR         R3, [R3, #2344]             @ 0x928 
    /*00005c3c*/ STR         R3, [R8, #296]              @ 0x128 
    /*00005c40*/ LDR         R3, [R7, #52]               @ 0x34 
    /*00005c44*/ LDR         R3, [R3, #2348]             @ 0x92c 
    /*00005c48*/ STR         R3, [R8, #300]              @ 0x12c 
    /*00005c4c*/ LDR         R3, [R7, #52]               @ 0x34 
    /*00005c50*/ LDR         R3, [R3, #2352]             @ 0x930 
    /*00005c54*/ STR         R3, [R8, #304]              @ 0x130 
    /*00005c58*/ LDR         R3, [R7, #52]               @ 0x34 
    /*00005c5c*/ LDR         R3, [R3, #2356]             @ 0x934 
    /*00005c60*/ STR         R3, [R8, #308]              @ 0x134 
    /*00005c64*/ LDR         R3, [R7, #52]               @ 0x34 
    /*00005c68*/ LDR         R3, [R3, #2396]             @ 0x95c 
    /*00005c6c*/ STR         R3, [R8, #280]              @ 0x118 
    /*00005c70*/ LDR         R3, [R7, #52]               @ 0x34 
    /*00005c74*/ LDR         R3, [R3, #2372]             @ 0x944 
    /*00005c78*/ STRB        R3, [R8, #292]              @ 0x124 
    /*00005c7c*/ LDR         R3, [R7, #52]               @ 0x34 
    /*00005c80*/ LDR         R3, [R3, #2368]             @ 0x940 
    /*00005c84*/ STRB        R3, [R8, #293]              @ 0x125 
    /*00005c88*/ LDR         R3, [R7, #52]               @ 0x34 
    /*00005c8c*/ ADD         R3, R3, #2384               @ 0x950 
    /*00005c90*/ LDRD        R0, [R3, #-8] 
    /*00005c94*/ STRD        R0, [R4, LR] 
    /*00005c98*/ LDR         R3, [R7, #52]               @ 0x34 
    /*00005c9c*/ LDR         R3, [R3, #2384]             @ 0x950 
    /*00005ca0*/ STR         R3, [R8, #284]              @ 0x11c 
    /*00005ca4*/ LDR         R3, [R7, #52]               @ 0x34 
    /*00005ca8*/ LDR         R3, [R3, #2364]             @ 0x93c 
    /*00005cac*/ STRB        R3, [R8, #268]              @ 0x10c 
    /*00005cb0*/ LDR         R3, [SP, #20] 
    /*00005cb4*/ STR         IP, [SL, #720]              @ 0x2d0 
    /*00005cb8*/ STR         R2, [R3, #340]              @ 0x154 
    /*00005cbc*/ B           VencSendPic2VgsByJob_x5998
    VencSendPic2VgsByJob_x5cc0:
    /*00005cc0*/ MOVW        R3, #3286                   @ 0xcd6 
    /*00005cc4*/ MOV         R0, R4 
    /*00005cc8*/ STR         R3, [SP] 
    /*00005ccc*/ MOVW        R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1580] 
    /*00005cd0*/ LDR         R3, [PC, #780]              @ 0x0000000000005fe4 
    /*00005cd4*/ MOVT        R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1580] 
    /*00005cd8*/ MOV         R1, #8 
    /*00005cdc*/ BL          0x0000000000005CDC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005ce0*/ B           VencSendPic2VgsByJob_x58ac
    VencSendPic2VgsByJob_x5ce4:
    /*00005ce4*/ LDR         IP, [SP, #32] 
    /*00005ce8*/ ADD         R3, SP, #136                @ 0x88 
    /*00005cec*/ LDR         R2, [SP, #352]              @ 0x160 
    /*00005cf0*/ LDR         R0, [SP, #356]              @ 0x164 
    /*00005cf4*/ STR         IP, [SP, #136]              @ 0x88 
    /*00005cf8*/ LDR         IP, [SP, #36]               @ 0x24 
    /*00005cfc*/ STR         R2, [SP, #4] 
    /*00005d00*/ MOV         R2, SL 
    /*00005d04*/ STR         R0, [SP] 
    /*00005d08*/ MOV         R0, R6 
    /*00005d0c*/ STR         IP, [SP, #140]              @ 0x8c 
    /*00005d10*/ ADD         IP, SP, #344                @ 0x158 
    /*00005d14*/ LDR         R1, [SP, #116]              @ 0x74 
    /*00005d18*/ LDRD        R8, [IP] 
    /*00005d1c*/ STRD        R8, [SP, #144]              @ 0x90 
    /*00005d20*/ BL          0x0000000000005D20          @ VencAddMpfVgsTask [R_ARM_CALL: .text+0x4e58] 
    /*00005d24*/ SUBS        R8, R0, #0 
    /*00005d28*/ BNE         VencSendPic2VgsByJob_x5ef4
    /*00005d2c*/ LDR         R3, [SP, #356]              @ 0x164 
    /*00005d30*/ LDR         R2, [SP, #32] 
    /*00005d34*/ LDRB        R3, [R3] 
    /*00005d38*/ STR         R2, [SP, #232]              @ 0xe8 
    /*00005d3c*/ CMP         R3, #1 
    /*00005d40*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00005d44*/ STR         R3, [SP, #236]              @ 0xec 
    /*00005d48*/ BLS         VencSendPic2VgsByJob_x5f78
    VencSendPic2VgsByJob_x5d4c:
    /*00005d4c*/ ADD         R3, SP, #344                @ 0x158 
    /*00005d50*/ LDRD        R2, [R3] 
    /*00005d54*/ STRD        R2, [SP, #240]              @ 0xf0 
    /*00005d58*/ B           VencSendPic2VgsByJob_x57c0
    VencSendPic2VgsByJob_x5d5c:
    /*00005d5c*/ MOVW        R2, #3300                   @ 0xce4 
    /*00005d60*/ MOV         R0, R5 
    /*00005d64*/ STR         R2, [SP] 
    /*00005d68*/ MOV         R1, #8 
    /*00005d6c*/ LDR         R3, [PC, #624]              @ 0x0000000000005fe4 
    /*00005d70*/ LDR         R2, [SP, #24] 
    /*00005d74*/ BL          0x0000000000005D74          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005d78*/ B           VencSendPic2VgsByJob_x5910
    VencSendPic2VgsByJob_x5d7c:
    /*00005d7c*/ MOV         R0, #1 
    /*00005d80*/ BL          0x0000000000005D80          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005d84*/ LDR         R3, [R0, #104]              @ 0x68 
    /*00005d88*/ MOV         R0, #1 
    /*00005d8c*/ BLX         R3 
    /*00005d90*/ CMP         R0, #0 
    /*00005d94*/ BEQ         VencSendPic2VgsByJob_x5654
    /*00005d98*/ MOV         R0, #45                     @ 0x2d 
    /*00005d9c*/ BL          0x0000000000005D9C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005da0*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00005da4*/ BLX         R3 
    /*00005da8*/ SUBS        R3, R0, #0 
    /*00005dac*/ MOV         R9, R3 
    /*00005db0*/ MOVWEQ      R3, #3046                   @ 0xbe6 
    /*00005db4*/ BEQ         VencSendPic2VgsByJob_x5fbc
    /*00005db8*/ MOV         R2, #744                    @ 0x2e8 
    /*00005dbc*/ MOV         R1, SL 
    /*00005dc0*/ BL          0x0000000000005DC0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00005dc4*/ MOV         R1, FP 
    /*00005dc8*/ MOV         R2, #336                    @ 0x150 
    /*00005dcc*/ MOV         R0, R9 
    /*00005dd0*/ BL          0x0000000000005DD0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00005dd4*/ LDR         R1, [SP, #116]              @ 0x74 
    /*00005dd8*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00005ddc*/ MOV         FP, #1 
    /*00005de0*/ LDR         R2, [SP, #40]               @ 0x28 
    /*00005de4*/ MOV         R0, R6 
    /*00005de8*/ STR         R1, [SP] 
    /*00005dec*/ MOV         R1, R9 
    /*00005df0*/ STR         FP, [SP, #4] 
    /*00005df4*/ BL          0x0000000000005DF4          @ VencSendPic2VgsOfDcf [R_ARM_CALL: .text+0x4248] 
    /*00005df8*/ SUBS        R8, R0, #0 
    /*00005dfc*/ MOVWNE      R3, #3058                   @ 0xbf2 
    /*00005e00*/ BNE         VencSendPic2VgsByJob_x5bd8
    /*00005e04*/ MOV         R0, FP 
    /*00005e08*/ BL          0x0000000000005E08          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005e0c*/ LDR         R1, [R7] 
    /*00005e10*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*00005e14*/ ADD         R0, R9, #336                @ 0x150 
    /*00005e18*/ BLX         R3 
    /*00005e1c*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00005e20*/ STR         R3, [SP, #248]              @ 0xf8 
    /*00005e24*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00005e28*/ STR         R3, [SP, #252]              @ 0xfc 
    /*00005e2c*/ B           VencSendPic2VgsByJob_x5654
    VencSendPic2VgsByJob_x5e30:
    /*00005e30*/ LDR         R3, [R7, #52]               @ 0x34 
    /*00005e34*/ LDR         R2, [R3, #2340]             @ 0x924 
    /*00005e38*/ CMP         R2, #0 
    /*00005e3c*/ BEQ         VencSendPic2VgsByJob_x5660
    /*00005e40*/ ADD         R3, R3, #2336               @ 0x920 
    /*00005e44*/ MOV         R0, #0 
    /*00005e48*/ MOV         R1, R4 
    /*00005e4c*/ STR         R0, [SP] 
    /*00005e50*/ MOV         R2, SL 
    /*00005e54*/ LDR         R0, [SP, #116]              @ 0x74 
    /*00005e58*/ BL          0x0000000000005E58          @ VencAddOsdVgsTask [R_ARM_CALL: .text+0x4ccc] 
    /*00005e5c*/ SUBS        R8, R0, #0 
    /*00005e60*/ MOVWNE      R3, #3081                   @ 0xc09 
    /*00005e64*/ BNE         VencSendPic2VgsByJob_x5f2c
    /*00005e68*/ LDR         R3, [SP, #20] 
    /*00005e6c*/ STR         R8, [R3, #336]              @ 0x150 
    /*00005e70*/ STR         FP, [R3, #340]              @ 0x154 
    /*00005e74*/ B           VencSendPic2VgsByJob_x5660
    VencSendPic2VgsByJob_x5e78:
    /*00005e78*/ LDR         R2, [R7] 
    /*00005e7c*/ LDR         R1, [R2, #16] 
    /*00005e80*/ CMP         R1, #0 
    /*00005e84*/ BNE         VencSendPic2VgsByJob_x5998
    /*00005e88*/ LDR         R2, [R2, #24] 
    /*00005e8c*/ CMP         R2, #0 
    /*00005e90*/ BNE         VencSendPic2VgsByJob_x5998
    /*00005e94*/ B           VencSendPic2VgsByJob_x59c8
    VencSendPic2VgsByJob_x5e98:
    /*00005e98*/ MOVW        R3, #3191                   @ 0xc77 
    /*00005e9c*/ MOVW        R2, #0                      @ .LC104 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x17d0] 
    /*00005ea0*/ STR         R3, [SP] 
    /*00005ea4*/ MOVT        R2, #0                      @ .LC104 [R_ARM_MOVT_ABS: .rodata.str1.4+0x17d0] 
    /*00005ea8*/ LDR         R3, [PC, #308]              @ 0x0000000000005fe4 
    /*00005eac*/ MOV         R1, #8 
    /*00005eb0*/ MOV         R0, #3 
    /*00005eb4*/ BL          0x0000000000005EB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005eb8*/ LDR         R2, [SP, #32] 
    /*00005ebc*/ LDR         R3, [R2, #328]              @ 0x148 
    /*00005ec0*/ CMN         R3, #1 
    /*00005ec4*/ STRNE       R2, [SP, #232]              @ 0xe8 
    /*00005ec8*/ MOV         R2, #0 
    /*00005ecc*/ LDRNE       R3, [SP, #36]               @ 0x24 
    /*00005ed0*/ STRNE       R3, [SP, #236]              @ 0xec 
    /*00005ed4*/ MOV         R3, #0 
    /*00005ed8*/ STRD        R2, [SP, #240]              @ 0xf0 
    /*00005edc*/ B           VencSendPic2VgsByJob_x5884
    VencSendPic2VgsByJob_x5ee0:
    /*00005ee0*/ ADD         R1, SP, #344                @ 0x158 
    /*00005ee4*/ MOV         R2, #0 
    /*00005ee8*/ MOV         R3, #0 
    /*00005eec*/ STRD        R2, [R1] 
    /*00005ef0*/ B           VencSendPic2VgsByJob_x5b38
    VencSendPic2VgsByJob_x5ef4:
    /*00005ef4*/ MOV         R3, #3216                   @ 0xc90 
    /*00005ef8*/ MOVW        R2, #0                      @ .LC104 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x17d0] 
    /*00005efc*/ STR         R3, [SP] 
    /*00005f00*/ MOVT        R2, #0                      @ .LC104 [R_ARM_MOVT_ABS: .rodata.str1.4+0x17d0] 
    /*00005f04*/ LDR         R3, [PC, #216]              @ 0x0000000000005fe4 
    /*00005f08*/ MOV         R1, #8 
    /*00005f0c*/ MOV         R0, #3 
    /*00005f10*/ BL          0x0000000000005F10          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005f14*/ MOV         R2, #0 
    /*00005f18*/ MOV         R3, #0 
    /*00005f1c*/ STRD        R2, [SP, #232]              @ 0xe8 
    /*00005f20*/ STRD        R2, [SP, #240]              @ 0xf0 
    /*00005f24*/ B           VencSendPic2VgsByJob_x5884
    VencSendPic2VgsByJob_x5f28:
    /*00005f28*/ MOV         R3, #3168                   @ 0xc60 
    VencSendPic2VgsByJob_x5f2c:
    /*00005f2c*/ STR         R3, [SP] 
    /*00005f30*/ MOVW        R2, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154c] 
    /*00005f34*/ LDR         R3, [PC, #168]              @ 0x0000000000005fe4 
    /*00005f38*/ MOVT        R2, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154c] 
    /*00005f3c*/ MOV         R1, #8 
    /*00005f40*/ MOV         R0, #3 
    /*00005f44*/ BL          0x0000000000005F44          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005f48*/ B           VencSendPic2VgsByJob_x5884
    VencSendPic2VgsByJob_x5f4c:
    /*00005f4c*/ MOV         R0, #1 
    /*00005f50*/ BL          0x0000000000005F50          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005f54*/ LDR         R1, [R7] 
    /*00005f58*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*00005f5c*/ ADD         R0, SL, #336                @ 0x150 
    /*00005f60*/ BLX         R3 
    /*00005f64*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00005f68*/ STR         R3, [SP, #248]              @ 0xf8 
    /*00005f6c*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00005f70*/ STR         R3, [SP, #252]              @ 0xfc 
    /*00005f74*/ B           VencSendPic2VgsByJob_x5680
    VencSendPic2VgsByJob_x5f78:
    /*00005f78*/ ADD         R1, SP, #344                @ 0x158 
    /*00005f7c*/ MOV         R2, #0 
    /*00005f80*/ MOV         R3, #0 
    /*00005f84*/ STRD        R2, [R1] 
    /*00005f88*/ B           VencSendPic2VgsByJob_x5d4c
    VencSendPic2VgsByJob_x5f8c:
    /*00005f8c*/ MOV         R0, #1 
    /*00005f90*/ BL          0x0000000000005F90          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00005f94*/ LDR         R1, [R7] 
    /*00005f98*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*00005f9c*/ ADD         R0, FP, #336                @ 0x150 
    /*00005fa0*/ BLX         R3 
    /*00005fa4*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00005fa8*/ STR         R3, [SP, #248]              @ 0xf8 
    /*00005fac*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00005fb0*/ STR         R3, [SP, #252]              @ 0xfc 
    /*00005fb4*/ B           VencSendPic2VgsByJob_x5978
    VencSendPic2VgsByJob_x5fb8:
    /*00005fb8*/ MOVW        R3, #3237                   @ 0xca5 
    VencSendPic2VgsByJob_x5fbc:
    /*00005fbc*/ STR         R3, [SP] 
    /*00005fc0*/ MOVW        R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13fc] 
    /*00005fc4*/ LDR         R3, [PC, #24]               @ 0x0000000000005fe4 
    /*00005fc8*/ MOVT        R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13fc] 
    /*00005fcc*/ MOV         R1, #8 
    /*00005fd0*/ MOV         R0, #3 
    /*00005fd4*/ MOVW        R8, #32781                  @ 0x800d 
    /*00005fd8*/ BL          0x0000000000005FD8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005fdc*/ MOVT        R8, #40968                  @ 0xa008 
    /*00005fe0*/ B           VencSendPic2VgsByJob_x5884
    /*00005fe4*/ ANDEQ       R0, R0, R0, ASR #4 
FUNC_END VencSendPic2VgsByJob


FUNC_BEGIN VencCheckTimeRef
    /*00005fe8*/ PUSH        {R4, LR} 
    /*00005fec*/ ANDS        R4, R1, #1 
    /*00005ff0*/ SUB         SP, SP, #16 
    /*00005ff4*/ BNE         VencCheckTimeRef_x6080
    /*00005ff8*/ SUBS        R3, R0, #1 
    /*00005ffc*/ MOVNE       R3, #1 
    /*00006000*/ CMP         R1, R0 
    /*00006004*/ MOVHI       R3, #0 
    /*00006008*/ CMP         R3, #0 
    /*0000600c*/ MOVEQ       R0, R3 
    /*00006010*/ BEQ         VencCheckTimeRef_x604c
    /*00006014*/ SUB         R3, R0, R1 
    /*00006018*/ STR         R0, [SP, #8] 
    /*0000601c*/ CMN         R3, #-536870910             @ 0xe0000002 
    /*00006020*/ BLS         VencCheckTimeRef_x6054
    /*00006024*/ MOVW        R3, #3350                   @ 0xd16 
    /*00006028*/ STR         R1, [SP, #4] 
    /*0000602c*/ STR         R3, [SP] 
    /*00006030*/ MOVW        R2, #0                      @ .LC106 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1844] 
    /*00006034*/ LDR         R3, [PC, #112]              @ 0x00000000000060ac 
    /*00006038*/ MOVT        R2, #0                      @ .LC106 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1844] 
    /*0000603c*/ MOV         R1, #8 
    /*00006040*/ MOV         R0, #3 
    /*00006044*/ BL          0x0000000000006044          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006048*/ MOV         R0, R4 
    VencCheckTimeRef_x604c:
    /*0000604c*/ ADD         SP, SP, #16 
    /*00006050*/ POP         {R4, PC} 
    VencCheckTimeRef_x6054:
    /*00006054*/ MOVW        R3, #3355                   @ 0xd1b 
    /*00006058*/ STR         R1, [SP, #4] 
    /*0000605c*/ STR         R3, [SP] 
    /*00006060*/ MOVW        R2, #0                      @ .LC107 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x189c] 
    /*00006064*/ LDR         R3, [PC, #64]               @ 0x00000000000060ac 
    /*00006068*/ MOVT        R2, #0                      @ .LC107 [R_ARM_MOVT_ABS: .rodata.str1.4+0x189c] 
    /*0000606c*/ MOV         R1, #8 
    /*00006070*/ MOV         R0, #3 
    /*00006074*/ BL          0x0000000000006074          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006078*/ MVN         R0, #0 
    /*0000607c*/ B           VencCheckTimeRef_x604c
    VencCheckTimeRef_x6080:
    /*00006080*/ STR         R1, [SP, #4] 
    /*00006084*/ MOVW        R3, #3335                   @ 0xd07 
    /*00006088*/ MOVW        R2, #0                      @ .LC105 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1804] 
    /*0000608c*/ STR         R3, [SP] 
    /*00006090*/ MOVT        R2, #0                      @ .LC105 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1804] 
    /*00006094*/ LDR         R3, [PC, #16]               @ 0x00000000000060ac 
    /*00006098*/ MOV         R1, #8 
    /*0000609c*/ MOV         R0, #3 
    /*000060a0*/ BL          0x00000000000060A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000060a4*/ MVN         R0, #0 
    /*000060a8*/ B           VencCheckTimeRef_x604c
    /*000060ac*/ ANDEQ       R0, R0, R8, ASR R2 
FUNC_END VencCheckTimeRef


FUNC_BEGIN VencCheckMpf
    /*000060b0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000060b4*/ SUB         SP, SP, #52                 @ 0x34 
    /*000060b8*/ MOV         R8, R0 
    /*000060bc*/ MOV         R0, #11 
    /*000060c0*/ MOV         R3, #4 
    /*000060c4*/ STR         R3, [SP, #24] 
    /*000060c8*/ BL          0x00000000000060C8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000060cc*/ LDR         R3, [R0, #104]              @ 0x68 
    /*000060d0*/ ADD         R0, SP, #28 
    /*000060d4*/ BLX         R3 
    /*000060d8*/ SUBS        R5, R0, #0 
    /*000060dc*/ BNE         VencCheckMpf_x6264
    /*000060e0*/ LDR         R3, [SP, #28] 
    /*000060e4*/ CMP         R3, #1 
    /*000060e8*/ BEQ         VencCheckMpf_x61dc
    /*000060ec*/ LDRB        R7, [R8, #36]               @ 0x24 
    /*000060f0*/ CMP         R7, #2 
    /*000060f4*/ BHI         VencCheckMpf_x62d8
    /*000060f8*/ CMP         R7, #0 
    /*000060fc*/ BEQ         VencCheckMpf_x61d0
    /*00006100*/ LDR         R4, [R8, #40]               @ 0x28 
    /*00006104*/ LDR         IP, [R8, #24] 
    /*00006108*/ CMP         R4, #160                    @ 0xa0 
    /*0000610c*/ BLS         VencCheckMpf_x6214
    /*00006110*/ CMP         IP, R4 
    /*00006114*/ BCC         VencCheckMpf_x6214
    /*00006118*/ LDR         R9, [R8, #44]               @ 0x2c 
    /*0000611c*/ LDR         R6, [R8, #28] 
    /*00006120*/ CMP         R9, #120                    @ 0x78 
    /*00006124*/ BLS         VencCheckMpf_x624c
    /*00006128*/ CMP         R9, R6 
    /*0000612c*/ MOVLS       R1, R8 
    /*00006130*/ MOVLS       R2, R9 
    /*00006134*/ MOVLS       R3, R4 
    /*00006138*/ MOVLS       R0, R5 
    /*0000613c*/ BLS         VencCheckMpf_x6180
    /*00006140*/ B           VencCheckMpf_x624c
    VencCheckMpf_x6144:
    /*00006144*/ TST         LR, #3 
    /*00006148*/ BNE         VencCheckMpf_x629c
    /*0000614c*/ CMP         R0, R7 
    /*00006150*/ BGE         VencCheckMpf_x62f0
    /*00006154*/ LDR         R3, [R1, #48]               @ 0x30 
    /*00006158*/ CMP         R3, #160                    @ 0xa0 
    /*0000615c*/ BLS         VencCheckMpf_x6214
    /*00006160*/ CMP         R3, IP 
    /*00006164*/ BHI         VencCheckMpf_x6214
    /*00006168*/ LDR         R2, [R1, #52]               @ 0x34 
    /*0000616c*/ ADD         R1, R1, #8 
    /*00006170*/ CMP         R2, #120                    @ 0x78 
    /*00006174*/ BLS         VencCheckMpf_x624c
    /*00006178*/ CMP         R2, R6 
    /*0000617c*/ BHI         VencCheckMpf_x624c
    VencCheckMpf_x6180:
    /*00006180*/ CMP         IP, R4 
    /*00006184*/ ORR         LR, R2, R3 
    /*00006188*/ ADD         R0, R0, #1 
    /*0000618c*/ BNE         VencCheckMpf_x6144
    /*00006190*/ CMP         R9, R6 
    /*00006194*/ BNE         VencCheckMpf_x6144
    /*00006198*/ MOVW        R2, #0                      @ .LC113 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a98] 
    /*0000619c*/ MOVT        R2, #0                      @ .LC113 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a98] 
    /*000061a0*/ MOV         R1, #8 
    /*000061a4*/ MOVW        R3, #3551                   @ 0xddf 
    /*000061a8*/ STR         R9, [SP, #16] 
    /*000061ac*/ STR         IP, [SP, #12] 
    /*000061b0*/ STR         R9, [SP, #8] 
    /*000061b4*/ STR         IP, [SP, #4] 
    /*000061b8*/ STR         R3, [SP] 
    VencCheckMpf_x61bc:
    /*000061bc*/ MOV         R0, #3 
    /*000061c0*/ LDR         R3, [PC, #424]              @ 0x0000000000006370 
    /*000061c4*/ BL          0x00000000000061C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000061c8*/ MOVW        R5, #32771                  @ 0x8003 
    /*000061cc*/ MOVT        R5, #40968                  @ 0xa008 
    VencCheckMpf_x61d0:
    /*000061d0*/ MOV         R0, R5 
    /*000061d4*/ ADD         SP, SP, #52                 @ 0x34 
    /*000061d8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencCheckMpf_x61dc:
    /*000061dc*/ LDRB        R3, [R8, #36]               @ 0x24 
    /*000061e0*/ CMP         R3, #0 
    /*000061e4*/ BEQ         VencCheckMpf_x61d0
    /*000061e8*/ MOVW        R3, #3522                   @ 0xdc2 
    /*000061ec*/ MOVW        R2, #0                      @ .LC109 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1938] 
    /*000061f0*/ STR         R3, [SP] 
    /*000061f4*/ MOVT        R2, #0                      @ .LC109 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1938] 
    /*000061f8*/ LDR         R3, [PC, #368]              @ 0x0000000000006370 
    /*000061fc*/ MOV         R1, #8 
    /*00006200*/ MOV         R0, #3 
    /*00006204*/ MOVW        R5, #32776                  @ 0x8008 
    /*00006208*/ BL          0x0000000000006208          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000620c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00006210*/ B           VencCheckMpf_x61d0
    VencCheckMpf_x6214:
    /*00006214*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a10] 
    /*00006218*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a10] 
    /*0000621c*/ MOVW        R3, #3537                   @ 0xdd1 
    /*00006220*/ STR         IP, [SP, #4] 
    /*00006224*/ STR         R3, [SP] 
    VencCheckMpf_x6228:
    /*00006228*/ LDR         R3, [PC, #320]              @ 0x0000000000006370 
    /*0000622c*/ MOV         R1, #8 
    /*00006230*/ MOV         R0, #3 
    /*00006234*/ MOVW        R5, #32771                  @ 0x8003 
    /*00006238*/ BL          0x0000000000006238          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000623c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00006240*/ MOV         R0, R5 
    /*00006244*/ ADD         SP, SP, #52                 @ 0x34 
    /*00006248*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencCheckMpf_x624c:
    /*0000624c*/ MOVW        R3, #3543                   @ 0xdd7 
    /*00006250*/ MOVW        R2, #0                      @ .LC112 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a54] 
    /*00006254*/ STR         R6, [SP, #4] 
    /*00006258*/ MOVT        R2, #0                      @ .LC112 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a54] 
    /*0000625c*/ STR         R3, [SP] 
    /*00006260*/ B           VencCheckMpf_x6228
    VencCheckMpf_x6264:
    /*00006264*/ MOVW        R3, #3516                   @ 0xdbc 
    /*00006268*/ MOV         R1, #8 
    /*0000626c*/ STR         R3, [SP] 
    /*00006270*/ MOVW        R2, #0                      @ .LC108 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x18f8] 
    /*00006274*/ LDR         R3, [PC, #244]              @ 0x0000000000006370 
    /*00006278*/ MOVT        R2, #0                      @ .LC108 [R_ARM_MOVT_ABS: .rodata.str1.4+0x18f8] 
    /*0000627c*/ MOV         R0, #3 
    /*00006280*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00006284*/ BL          0x0000000000006284          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006288*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*0000628c*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00006290*/ MOV         R0, R5 
    /*00006294*/ ADD         SP, SP, #52                 @ 0x34 
    /*00006298*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencCheckMpf_x629c:
    /*0000629c*/ STR         R2, [SP, #8] 
    /*000062a0*/ MOVW        R1, #3561                   @ 0xde9 
    /*000062a4*/ STR         R3, [SP, #4] 
    /*000062a8*/ MOVW        R2, #0                      @ .LC114 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b0c] 
    /*000062ac*/ STR         R1, [SP] 
    /*000062b0*/ MOVT        R2, #0                      @ .LC114 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b0c] 
    /*000062b4*/ LDR         R3, [PC, #180]              @ 0x0000000000006370 
    /*000062b8*/ MOV         R1, #8 
    /*000062bc*/ MOV         R0, #3 
    /*000062c0*/ MOVW        R5, #32771                  @ 0x8003 
    /*000062c4*/ BL          0x00000000000062C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000062c8*/ MOVT        R5, #40968                  @ 0xa008 
    /*000062cc*/ MOV         R0, R5 
    /*000062d0*/ ADD         SP, SP, #52                 @ 0x34 
    /*000062d4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencCheckMpf_x62d8:
    /*000062d8*/ MOVW        R3, #3528                   @ 0xdc8 
    /*000062dc*/ MOVW        R2, #0                      @ .LC110 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1990] 
    /*000062e0*/ STR         R7, [SP, #4] 
    /*000062e4*/ MOVT        R2, #0                      @ .LC110 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1990] 
    /*000062e8*/ STR         R3, [SP] 
    /*000062ec*/ B           VencCheckMpf_x6228
    VencCheckMpf_x62f0:
    /*000062f0*/ CMP         R7, #2 
    /*000062f4*/ BNE         VencCheckMpf_x61d0
    /*000062f8*/ LDR         R3, [R8, #48]               @ 0x30 
    /*000062fc*/ LDR         R2, [R8, #52]               @ 0x34 
    /*00006300*/ CMP         R4, R3 
    /*00006304*/ BCC         VencCheckMpf_x6354
    /*00006308*/ CMP         R9, R2 
    /*0000630c*/ BCC         VencCheckMpf_x6354
    /*00006310*/ MOVEQ       R1, #1 
    /*00006314*/ MOVNE       R1, #0 
    /*00006318*/ CMP         R4, R3 
    /*0000631c*/ MOVNE       R1, #0 
    /*00006320*/ ANDEQ       R1, R1, #1 
    /*00006324*/ CMP         R1, #0 
    /*00006328*/ BEQ         VencCheckMpf_x61d0
    /*0000632c*/ STR         R2, [SP, #16] 
    /*00006330*/ MOVW        R2, #0                      @ .LC116 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1bc4] 
    /*00006334*/ MOVT        R2, #0                      @ .LC116 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1bc4] 
    /*00006338*/ MOVW        R0, #3592                   @ 0xe08 
    /*0000633c*/ STR         R3, [SP, #12] 
    /*00006340*/ STR         R9, [SP, #8] 
    VencCheckMpf_x6344:
    /*00006344*/ STR         R4, [SP, #4] 
    /*00006348*/ MOV         R1, #8 
    /*0000634c*/ STR         R0, [SP] 
    /*00006350*/ B           VencCheckMpf_x61bc
    VencCheckMpf_x6354:
    /*00006354*/ STR         R2, [SP, #16] 
    /*00006358*/ MOVW        R0, #3578                   @ 0xdfa 
    /*0000635c*/ MOVW        R2, #0                      @ .LC115 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b54] 
    /*00006360*/ STR         R3, [SP, #12] 
    /*00006364*/ STR         R9, [SP, #8] 
    /*00006368*/ MOVT        R2, #0                      @ .LC115 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b54] 
    /*0000636c*/ B           VencCheckMpf_x6344
    /*00006370*/ ANDEQ       R0, R0, IP, ROR #4 
FUNC_END VencCheckMpf


FUNC_BEGIN VencCheckAttr
    /*00006374*/ PUSH        {R4, R5, LR} 
    /*00006378*/ SUBS        R4, R0, #0 
    /*0000637c*/ SUB         SP, SP, #20 
    /*00006380*/ BEQ         VencCheckAttr_x6484
    VencCheckAttr_x6384:
    /*00006384*/ LDR         R0, [R4] 
    /*00006388*/ BL          0x0000000000006388          @ VENC_DRV_CheckType [R_ARM_CALL: .text+0x25fc8] 
    /*0000638c*/ CMP         R0, #0 
    /*00006390*/ BEQ         VencCheckAttr_x6534
    /*00006394*/ LDR         R3, [R4] 
    /*00006398*/ MOVW        R2, #265                    @ 0x109 
    /*0000639c*/ CMP         R3, R2 
    /*000063a0*/ BEQ         VencCheckAttr_x646c
    /*000063a4*/ BHI         VencCheckAttr_x6410
    /*000063a8*/ CMP         R3, #26 
    /*000063ac*/ BEQ         VencCheckAttr_x64c0
    /*000063b0*/ CMP         R3, #96                     @ 0x60 
    /*000063b4*/ BNE         VencCheckAttr_x64b4
    /*000063b8*/ MOV         R0, #10 
    /*000063bc*/ BL          0x00000000000063BC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000063c0*/ CMP         R0, #0 
    /*000063c4*/ MOVEQ       R2, #10 
    /*000063c8*/ BEQ         VencCheckAttr_x643c
    VencCheckAttr_x63cc:
    /*000063cc*/ MOV         R0, #19 
    /*000063d0*/ BL          0x00000000000063D0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000063d4*/ CMP         R0, #0 
    /*000063d8*/ BEQ         VencCheckAttr_x6594
    VencCheckAttr_x63dc:
    /*000063dc*/ LDR         R3, [R4, #20] 
    /*000063e0*/ CMP         R3, #1 
    /*000063e4*/ BHI         VencCheckAttr_x6504
    /*000063e8*/ LDR         R3, [R4] 
    /*000063ec*/ CMP         R3, #26 
    /*000063f0*/ BEQ         VencCheckAttr_x64d4
    VencCheckAttr_x63f4:
    /*000063f4*/ MOVW        R2, #1006                   @ 0x3ee 
    /*000063f8*/ CMP         R3, R2 
    /*000063fc*/ BEQ         VencCheckAttr_x6568
    /*00006400*/ MOV         R0, R4 
    /*00006404*/ ADD         SP, SP, #20 
    /*00006408*/ POP         {R4, R5, LR} 
    VencCheckAttr_x640c:
    /*0000640c*/ B           VencCheckAttr_x640c         @ VencDrvCheckResolution [R_ARM_JUMP24: .text+0x26a74] 
    VencCheckAttr_x6410:
    /*00006410*/ MOVW        R2, #1002                   @ 0x3ea 
    /*00006414*/ CMP         R3, R2 
    /*00006418*/ BEQ         VencCheckAttr_x649c
    /*0000641c*/ MOVW        R2, #1006                   @ 0x3ee 
    /*00006420*/ CMP         R3, R2 
    /*00006424*/ BNE         VencCheckAttr_x64b4
    /*00006428*/ MOV         R0, #44                     @ 0x2c 
    /*0000642c*/ BL          0x000000000000642C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00006430*/ CMP         R0, #0 
    /*00006434*/ MOVEQ       R2, #44                     @ 0x2c 
    /*00006438*/ BNE         VencCheckAttr_x63dc
    VencCheckAttr_x643c:
    /*0000643c*/ MOVW        R3, #3636                   @ 0xe34 
    /*00006440*/ STR         R2, [SP, #4] 
    /*00006444*/ STR         R3, [SP] 
    /*00006448*/ MOVW        R2, #0                      @ .LC118 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c70] 
    /*0000644c*/ LDR         R3, [PC, #380]              @ 0x00000000000065d0 
    /*00006450*/ MOVT        R2, #0                      @ .LC118 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c70] 
    /*00006454*/ MOV         R1, #8 
    /*00006458*/ MOV         R0, #3 
    /*0000645c*/ MOVW        R5, #32784                  @ 0x8010 
    /*00006460*/ BL          0x0000000000006460          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006464*/ MOVT        R5, #40968                  @ 0xa008 
    /*00006468*/ B           VencCheckAttr_x6490
    VencCheckAttr_x646c:
    /*0000646c*/ MOV         R0, #13 
    /*00006470*/ BL          0x0000000000006470          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00006474*/ CMP         R0, #0 
    /*00006478*/ MOVEQ       R2, #13 
    /*0000647c*/ BNE         VencCheckAttr_x63cc
    /*00006480*/ B           VencCheckAttr_x643c
    VencCheckAttr_x6484:
    /*00006484*/ BL          0x00000000000002C8 
    /*00006488*/ SUBS        R5, R0, #0 
    /*0000648c*/ BEQ         VencCheckAttr_x6384
    VencCheckAttr_x6490:
    /*00006490*/ MOV         R0, R5 
    /*00006494*/ ADD         SP, SP, #20 
    /*00006498*/ POP         {R4, R5, PC} 
    VencCheckAttr_x649c:
    /*0000649c*/ MOV         R0, #11 
    /*000064a0*/ BL          0x00000000000064A0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000064a4*/ CMP         R0, #0 
    /*000064a8*/ BNE         VencCheckAttr_x63cc
    VencCheckAttr_x64ac:
    /*000064ac*/ MOV         R2, #11 
    /*000064b0*/ B           VencCheckAttr_x643c
    VencCheckAttr_x64b4:
    /*000064b4*/ MOVW        R5, #32776                  @ 0x8008 
    /*000064b8*/ MOVT        R5, #40968                  @ 0xa008 
    /*000064bc*/ B           VencCheckAttr_x6490
    VencCheckAttr_x64c0:
    /*000064c0*/ MOV         R0, #11 
    /*000064c4*/ BL          0x00000000000064C4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000064c8*/ CMP         R0, #0 
    /*000064cc*/ BNE         VencCheckAttr_x63dc
    /*000064d0*/ B           VencCheckAttr_x64ac
    VencCheckAttr_x64d4:
    /*000064d4*/ MOV         R0, R4 
    /*000064d8*/ BL          0x00000000000064D8          @ VencCheckMpf [R_ARM_CALL: .text+0x60b0] 
    /*000064dc*/ SUBS        R5, R0, #0 
    /*000064e0*/ BNE         VencCheckAttr_x6490
    /*000064e4*/ BL          0x00000000000064E4          @ VENC_DRV_IsSupportRecvMult [R_ARM_CALL: .text+0x26a38] 
    /*000064e8*/ CMP         R0, #0 
    /*000064ec*/ BNE         VencCheckAttr_x64fc
    /*000064f0*/ LDR         R3, [R4, #56]               @ 0x38 
    /*000064f4*/ CMP         R3, #1 
    /*000064f8*/ BEQ         VencCheckAttr_x659c
    VencCheckAttr_x64fc:
    /*000064fc*/ LDR         R3, [R4] 
    /*00006500*/ B           VencCheckAttr_x63f4
    VencCheckAttr_x6504:
    /*00006504*/ STR         R3, [SP, #4] 
    /*00006508*/ MOVW        R2, #0                      @ .LC119 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cac] 
    /*0000650c*/ MOVW        R3, #3641                   @ 0xe39 
    /*00006510*/ MOVT        R2, #0                      @ .LC119 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cac] 
    /*00006514*/ STR         R3, [SP] 
    /*00006518*/ MOV         R1, #8 
    /*0000651c*/ LDR         R3, [PC, #172]              @ 0x00000000000065d0 
    /*00006520*/ MOV         R0, #3 
    /*00006524*/ MOVW        R5, #32771                  @ 0x8003 
    /*00006528*/ BL          0x0000000000006528          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000652c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00006530*/ B           VencCheckAttr_x6490
    VencCheckAttr_x6534:
    /*00006534*/ LDR         R1, [R4] 
    /*00006538*/ MOVW        R3, #3631                   @ 0xe2f 
    /*0000653c*/ MOVW        R2, #0                      @ .LC117 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c38] 
    /*00006540*/ STR         R3, [SP] 
    /*00006544*/ MOVT        R2, #0                      @ .LC117 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c38] 
    /*00006548*/ LDR         R3, [PC, #128]              @ 0x00000000000065d0 
    /*0000654c*/ STR         R1, [SP, #4] 
    /*00006550*/ MOV         R0, #3 
    /*00006554*/ MOV         R1, #8 
    /*00006558*/ MOVW        R5, #32776                  @ 0x8008 
    /*0000655c*/ BL          0x000000000000655C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006560*/ MOVT        R5, #40968                  @ 0xa008 
    /*00006564*/ B           VencCheckAttr_x6490
    VencCheckAttr_x6568:
    /*00006568*/ MOVW        R3, #3673                   @ 0xe59 
    /*0000656c*/ MOVW        R2, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d58] 
    /*00006570*/ STR         R3, [SP] 
    /*00006574*/ MOVT        R2, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d58] 
    /*00006578*/ LDR         R3, [PC, #80]               @ 0x00000000000065d0 
    /*0000657c*/ MOV         R1, #8 
    /*00006580*/ MOV         R0, #3 
    /*00006584*/ MOVW        R5, #32776                  @ 0x8008 
    /*00006588*/ BL          0x0000000000006588          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000658c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00006590*/ B           VencCheckAttr_x6490
    VencCheckAttr_x6594:
    /*00006594*/ MOV         R2, #19 
    /*00006598*/ B           VencCheckAttr_x643c
    VencCheckAttr_x659c:
    /*0000659c*/ STR         R5, [SP, #8] 
    /*000065a0*/ MOVW        R1, #3659                   @ 0xe4b 
    /*000065a4*/ STR         R3, [SP, #4] 
    /*000065a8*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d08] 
    /*000065ac*/ STR         R1, [SP] 
    /*000065b0*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d08] 
    /*000065b4*/ LDR         R3, [PC, #20]               @ 0x00000000000065d0 
    /*000065b8*/ MOV         R1, #8 
    /*000065bc*/ MOV         R0, #3 
    /*000065c0*/ MOVW        R5, #32771                  @ 0x8003 
    /*000065c4*/ BL          0x00000000000065C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000065c8*/ MOVT        R5, #40968                  @ 0xa008 
    /*000065cc*/ B           VencCheckAttr_x6490
    /*000065d0*/ ANDEQ       R0, R0, IP, ROR R2 
FUNC_END VencCheckAttr


FUNC_BEGIN VencProcDebugInfo
    /*000065d4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000065d8*/ SUB         SP, SP, #8 
    /*000065dc*/ MOV         SL, R0 
    /*000065e0*/ MOVW        R1, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d98] 
    /*000065e4*/ MOVW        R6, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000065e8*/ MOVT        R1, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d98] 
    /*000065ec*/ MOVT        R6, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000065f0*/ BL          0x00000000000065F0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000065f4*/ MOVW        R2, #0                      @ .LC126 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e28] 
    /*000065f8*/ MOVW        R3, #0                      @ .LC127 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e3c] 
    /*000065fc*/ MOVT        R2, #0                      @ .LC126 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e28] 
    /*00006600*/ MOVT        R3, #0                      @ .LC127 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e3c] 
    /*00006604*/ STR         R2, [SP, #4] 
    /*00006608*/ MOV         R0, SL 
    /*0000660c*/ STR         R3, [SP] 
    /*00006610*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e10] 
    /*00006614*/ MOVW        R3, #0                      @ .LC123 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e08] 
    /*00006618*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e10] 
    /*0000661c*/ MOVT        R3, #0                      @ .LC123 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e08] 
    /*00006620*/ MOVW        R1, #0                      @ .LC125 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e14] 
    /*00006624*/ MOVT        R1, #0                      @ .LC125 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e14] 
    /*00006628*/ BL          0x0000000000006628          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000662c*/ LDR         R3, [R6] 
    /*00006630*/ CMP         R3, #0 
    /*00006634*/ BEQ         VencProcDebugInfo_x66b8
    /*00006638*/ MOV         R4, #0 
    /*0000663c*/ MOVW        R7, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006640*/ MOVW        R9, #0                      @ .LC128 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e50] 
    /*00006644*/ MOVT        R7, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006648*/ MOVT        R9, #0                      @ .LC128 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e50] 
    /*0000664c*/ MOV         R5, R4 
    /*00006650*/ MOVW        R8, #36240                  @ 0x8d90 
    /*00006654*/ B           VencProcDebugInfo_x6668
    VencProcDebugInfo_x6658:
    /*00006658*/ LDR         R3, [R6] 
    /*0000665c*/ ADD         R5, R5, #1 
    /*00006660*/ CMP         R5, R3 
    /*00006664*/ BCS         VencProcDebugInfo_x66b8
    VencProcDebugInfo_x6668:
    /*00006668*/ LDR         R3, [R7] 
    /*0000666c*/ ADD         R2, R3, R4 
    /*00006670*/ LDR         R3, [R3, R4] 
    /*00006674*/ ADD         R4, R4, R8 
    /*00006678*/ CMP         R3, #1 
    /*0000667c*/ BNE         VencProcDebugInfo_x6658
    /*00006680*/ ADD         IP, R2, #8192               @ 0x2000 
    /*00006684*/ MOVW        R3, #36240                  @ 0x8d90 
    /*00006688*/ MOV         R2, R5 
    /*0000668c*/ MOV         R1, R9 
    /*00006690*/ LDR         LR, [IP, #3976]             @ 0xf88 
    /*00006694*/ MOV         R0, SL 
    /*00006698*/ ADD         R5, R5, #1 
    /*0000669c*/ STR         LR, [SP, #4] 
    /*000066a0*/ LDR         IP, [IP, #3972]             @ 0xf84 
    /*000066a4*/ STR         IP, [SP] 
    /*000066a8*/ BL          0x00000000000066A8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000066ac*/ LDR         R3, [R6] 
    /*000066b0*/ CMP         R5, R3 
    /*000066b4*/ BCC         VencProcDebugInfo_x6668
    VencProcDebugInfo_x66b8:
    /*000066b8*/ ADD         SP, SP, #8 
    /*000066bc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END VencProcDebugInfo


FUNC_BEGIN VencProcShowModuleParam
    /*000066c0*/ PUSH        {R4, LR} 
    /*000066c4*/ SUB         SP, SP, #8 
    /*000066c8*/ MOV         R4, R0 
    /*000066cc*/ MOVW        R1, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e64] 
    /*000066d0*/ MOVT        R1, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e64] 
    /*000066d4*/ BL          0x00000000000066D4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000066d8*/ MOV         R0, R4 
    /*000066dc*/ MOVW        R2, #0                      @ .LC133 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ee8] 
    /*000066e0*/ MOVW        R3, #0                      @ .LC130 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1eb8] 
    /*000066e4*/ MOVT        R2, #0                      @ .LC133 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ee8] 
    /*000066e8*/ MOVT        R3, #0                      @ .LC130 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1eb8] 
    /*000066ec*/ STR         R2, [SP] 
    /*000066f0*/ MOVW        R1, #0                      @ .LC132 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ed8] 
    /*000066f4*/ MOVW        R2, #0                      @ .LC131 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ec8] 
    /*000066f8*/ MOVT        R1, #0                      @ .LC132 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ed8] 
    /*000066fc*/ MOVT        R2, #0                      @ .LC131 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ec8] 
    /*00006700*/ BL          0x0000000000006700          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006704*/ MOVW        R1, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00006708*/ MOVT        R1, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000670c*/ MOVW        R3, #0                      @ FrameBufRecycle [R_ARM_MOVW_ABS_NC: .bss+0xac] 
    /*00006710*/ MOVW        R2, #0                      @ VencBufferCache [R_ARM_MOVW_ABS_NC: .bss+0x9c] 
    /*00006714*/ MOVT        R3, #0                      @ FrameBufRecycle [R_ARM_MOVT_ABS: .bss+0xac] 
    /*00006718*/ LDR         IP, [R1] 
    /*0000671c*/ MOVT        R2, #0                      @ VencBufferCache [R_ARM_MOVT_ABS: .bss+0x9c] 
    /*00006720*/ LDR         R3, [R3] 
    /*00006724*/ MOV         R0, R4 
    /*00006728*/ LDR         R2, [R2] 
    /*0000672c*/ MOVW        R1, #0                      @ .LC134 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ef8] 
    /*00006730*/ STR         IP, [SP] 
    /*00006734*/ MOVT        R1, #0                      @ .LC134 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ef8] 
    /*00006738*/ BL          0x0000000000006738          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000673c*/ MOV         R0, R4 
    /*00006740*/ MOVW        R1, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f08] 
    /*00006744*/ MOVT        R1, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f08] 
    /*00006748*/ ADD         SP, SP, #8 
    /*0000674c*/ POP         {R4, LR} 
    VencProcShowModuleParam_x6750:
    /*00006750*/ B           VencProcShowModuleParam_x6750@ osal_seq_printf [R_ARM_JUMP24: +0x0] 
FUNC_END VencProcShowModuleParam


FUNC_BEGIN VencProcShowChnlAttr
    /*00006754*/ LDR         R3, [PC, #1168]             @ 0x0000000000006bec 
    /*00006758*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000675c*/ SUB         SP, SP, #172                @ 0xac 
    /*00006760*/ ADD         R1, R3, #48                 @ 0x30 
    /*00006764*/ ADD         R2, SP, #58                 @ 0x3a 
    /*00006768*/ MOV         R8, R0 
    VencProcShowChnlAttr_x676c:
    /*0000676c*/ LDR         R4, [R3] 
    /*00006770*/ ADD         R3, R3, #16 
    /*00006774*/ LDR         LR, [R3, #-12] 
    /*00006778*/ ADD         R2, R2, #16 
    /*0000677c*/ LDR         IP, [R3, #-8] 
    /*00006780*/ LDR         R0, [R3, #-4] 
    /*00006784*/ CMP         R3, R1 
    /*00006788*/ STR         R4, [R2, #-16] 
    /*0000678c*/ STR         LR, [R2, #-12] 
    /*00006790*/ STR         IP, [R2, #-8] 
    /*00006794*/ STR         R0, [R2, #-4] 
    /*00006798*/ BNE         VencProcShowChnlAttr_x676c
    /*0000679c*/ LDR         IP, [PC, #1100]             @ 0x0000000000006bf0 
    /*000067a0*/ ADD         R4, SP, #108                @ 0x6c 
    /*000067a4*/ LDRH        R3, [R3] 
    /*000067a8*/ ADD         R5, IP, #48                 @ 0x30 
    /*000067ac*/ STRH        R3, [R2] 
    VencProcShowChnlAttr_x67b0:
    /*000067b0*/ LDR         R0, [IP] 
    /*000067b4*/ ADD         IP, IP, #16 
    /*000067b8*/ LDR         R1, [IP, #-12] 
    /*000067bc*/ MOV         LR, R4 
    /*000067c0*/ LDR         R2, [IP, #-8] 
    /*000067c4*/ ADD         R4, R4, #16 
    /*000067c8*/ LDR         R3, [IP, #-4] 
    /*000067cc*/ CMP         IP, R5 
    /*000067d0*/ STMIA       LR!, {R0, R1, R2, R3} 
    /*000067d4*/ BNE         VencProcShowChnlAttr_x67b0
    /*000067d8*/ LDR         R3, [PC, #1044]             @ 0x0000000000006bf4 
    /*000067dc*/ MOVW        R7, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000067e0*/ LDR         R0, [IP] 
    /*000067e4*/ MOVT        R7, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000067e8*/ LDR         R1, [IP, #4] 
    /*000067ec*/ LDR         R2, [IP, #8] 
    /*000067f0*/ LDR         R3, [R3] 
    /*000067f4*/ STMIA       R4!, {R0, R1, R2} 
    /*000067f8*/ MOVW        R1, #0                      @ .LC136 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f0c] 
    /*000067fc*/ MOV         R0, R8 
    /*00006800*/ MOVT        R1, #0                      @ .LC136 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f0c] 
    /*00006804*/ STR         R3, [SP, #54]               @ 0x36 
    /*00006808*/ BL          0x0000000000006808          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000680c*/ MOVW        R2, #0                      @ .LC139 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f90] 
    /*00006810*/ MOVW        R3, #0                      @ .LC140 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f98] 
    /*00006814*/ MOVT        R2, #0                      @ .LC139 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f90] 
    /*00006818*/ MOVT        R3, #0                      @ .LC140 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f98] 
    /*0000681c*/ STR         R2, [SP, #32] 
    /*00006820*/ MOVW        R1, #0                      @ .LC138 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f68] 
    /*00006824*/ STR         R3, [SP, #28] 
    /*00006828*/ MOVW        R2, #0                      @ .LC141 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fa0] 
    /*0000682c*/ MOVW        R3, #0                      @ .LC142 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fac] 
    /*00006830*/ MOVT        R2, #0                      @ .LC141 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fa0] 
    /*00006834*/ MOVT        R3, #0                      @ .LC142 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fac] 
    /*00006838*/ STR         R2, [SP, #24] 
    /*0000683c*/ STR         R3, [SP, #20] 
    /*00006840*/ MOVW        R2, #0                      @ .LC143 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fb4] 
    /*00006844*/ MOVW        R3, #0                      @ .LC144 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fc0] 
    /*00006848*/ MOVT        R2, #0                      @ .LC143 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fb4] 
    /*0000684c*/ MOVT        R3, #0                      @ .LC144 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fc0] 
    /*00006850*/ STR         R2, [SP, #16] 
    /*00006854*/ STR         R3, [SP, #12] 
    /*00006858*/ MOVW        R2, #0                      @ .LC145 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fcc] 
    /*0000685c*/ MOVW        R3, #0                      @ .LC146 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fd4] 
    /*00006860*/ MOVT        R2, #0                      @ .LC145 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fcc] 
    /*00006864*/ MOVT        R3, #0                      @ .LC146 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fd4] 
    /*00006868*/ STR         R2, [SP, #8] 
    /*0000686c*/ STR         R3, [SP, #4] 
    /*00006870*/ MOVW        R2, #0                      @ .LC147 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fdc] 
    /*00006874*/ MOVW        R3, #0                      @ .LC137 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f60] 
    /*00006878*/ MOVT        R2, #0                      @ .LC147 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fdc] 
    /*0000687c*/ MOVT        R3, #0                      @ .LC137 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f60] 
    /*00006880*/ STR         R2, [SP] 
    /*00006884*/ MOVT        R1, #0                      @ .LC138 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f68] 
    /*00006888*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e10] 
    /*0000688c*/ MOV         R0, R8 
    /*00006890*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e10] 
    /*00006894*/ BL          0x0000000000006894          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006898*/ LDR         R3, [R7] 
    /*0000689c*/ CMP         R3, #0 
    /*000068a0*/ BEQ         VencProcShowChnlAttr_x6978
    /*000068a4*/ MOV         R4, #0 
    /*000068a8*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000068ac*/ MOVW        R9, #0                      @ .LC157 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2094] 
    /*000068b0*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000068b4*/ MOVT        R9, #0                      @ .LC157 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2094] 
    /*000068b8*/ MOV         R6, R4 
    /*000068bc*/ STR         R9, [SP, #40]               @ 0x28 
    /*000068c0*/ B           VencProcShowChnlAttr_x68d4
    VencProcShowChnlAttr_x68c4:
    /*000068c4*/ LDR         R3, [R7] 
    /*000068c8*/ ADD         R6, R6, #1 
    /*000068cc*/ CMP         R6, R3 
    /*000068d0*/ BCS         VencProcShowChnlAttr_x6978
    VencProcShowChnlAttr_x68d4:
    /*000068d4*/ LDR         R3, [R5] 
    /*000068d8*/ ADD         IP, R3, R4 
    /*000068dc*/ LDR         R3, [R3, R4] 
    /*000068e0*/ ADD         R4, R4, #36096              @ 0x8d00 
    /*000068e4*/ ADD         R4, R4, #144                @ 0x90 
    /*000068e8*/ CMP         R3, #0 
    /*000068ec*/ BEQ         VencProcShowChnlAttr_x68c4
    /*000068f0*/ LDR         R1, [IP, #12] 
    /*000068f4*/ ADD         SL, IP, #12288              @ 0x3000 
    /*000068f8*/ ADD         R9, SP, #108                @ 0x6c 
    /*000068fc*/ MOV         R0, #10 
    /*00006900*/ LDR         R3, [SL, #148]              @ 0x94 
    /*00006904*/ ADD         LR, IP, #8192               @ 0x2000 
    /*00006908*/ STR         R1, [SP, #32] 
    /*0000690c*/ MOV         R2, R6 
    /*00006910*/ LDR         FP, [SL, #608]              @ 0x260 
    /*00006914*/ ADD         R6, R6, #1 
    /*00006918*/ LDR         R1, [SP, #40]               @ 0x28 
    /*0000691c*/ MLA         FP, R0, FP, R9 
    /*00006920*/ ADD         R9, SP, #54                 @ 0x36 
    /*00006924*/ MOV         R0, R8 
    /*00006928*/ STR         FP, [SP, #28] 
    /*0000692c*/ LDR         FP, [LR, #3836]             @ 0xefc 
    /*00006930*/ STR         FP, [SP, #24] 
    /*00006934*/ LDR         FP, [LR, #3832]             @ 0xef8 
    /*00006938*/ STR         FP, [SP, #20] 
    /*0000693c*/ LDR         FP, [LR, #3828]             @ 0xef4 
    /*00006940*/ STR         FP, [SP, #16] 
    /*00006944*/ LDR         LR, [LR, #3968]             @ 0xf80 
    /*00006948*/ STR         LR, [SP, #12] 
    /*0000694c*/ LDR         LR, [IP, #28] 
    /*00006950*/ ADD         LR, R9, LR, LSL #1 
    /*00006954*/ STR         LR, [SP, #8] 
    /*00006958*/ LDR         IP, [IP, #4] 
    /*0000695c*/ STR         IP, [SP, #4] 
    /*00006960*/ LDR         IP, [SL, #152]              @ 0x98 
    /*00006964*/ STR         IP, [SP] 
    /*00006968*/ BL          0x0000000000006968          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000696c*/ LDR         R3, [R7] 
    /*00006970*/ CMP         R6, R3 
    /*00006974*/ BCC         VencProcShowChnlAttr_x68d4
    VencProcShowChnlAttr_x6978:
    /*00006978*/ MOVW        R1, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f08] 
    /*0000697c*/ MOV         R0, R8 
    /*00006980*/ MOVT        R1, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f08] 
    /*00006984*/ BL          0x0000000000006984          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006988*/ MOVW        R1, #0                      @ .LC148 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fe4] 
    /*0000698c*/ MOV         R0, R8 
    /*00006990*/ MOVT        R1, #0                      @ .LC148 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fe4] 
    /*00006994*/ BL          0x0000000000006994          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006998*/ MOVW        R2, #0                      @ .LC151 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x205c] 
    /*0000699c*/ MOVW        R3, #0                      @ .LC152 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x206c] 
    /*000069a0*/ MOVT        R2, #0                      @ .LC151 [R_ARM_MOVT_ABS: .rodata.str1.4+0x205c] 
    /*000069a4*/ MOVT        R3, #0                      @ .LC152 [R_ARM_MOVT_ABS: .rodata.str1.4+0x206c] 
    /*000069a8*/ STR         R2, [SP, #20] 
    /*000069ac*/ STR         R3, [SP, #16] 
    /*000069b0*/ MOVW        R2, #0                      @ .LC153 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2074] 
    /*000069b4*/ MOVW        R3, #0                      @ .LC154 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x207c] 
    /*000069b8*/ MOVT        R2, #0                      @ .LC153 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2074] 
    /*000069bc*/ MOVT        R3, #0                      @ .LC154 [R_ARM_MOVT_ABS: .rodata.str1.4+0x207c] 
    /*000069c0*/ STR         R2, [SP, #12] 
    /*000069c4*/ STR         R3, [SP, #8] 
    /*000069c8*/ MOVW        R2, #0                      @ .LC155 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2084] 
    /*000069cc*/ MOVW        R3, #0                      @ .LC156 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x208c] 
    /*000069d0*/ MOVT        R2, #0                      @ .LC155 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2084] 
    /*000069d4*/ MOVT        R3, #0                      @ .LC156 [R_ARM_MOVT_ABS: .rodata.str1.4+0x208c] 
    /*000069d8*/ STR         R2, [SP, #4] 
    /*000069dc*/ STR         R3, [SP] 
    /*000069e0*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e10] 
    /*000069e4*/ MOVW        R3, #0                      @ .LC149 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2038] 
    /*000069e8*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e10] 
    /*000069ec*/ MOVT        R3, #0                      @ .LC149 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2038] 
    /*000069f0*/ MOVW        R1, #0                      @ .LC150 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2040] 
    /*000069f4*/ MOV         R0, R8 
    /*000069f8*/ MOVT        R1, #0                      @ .LC150 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2040] 
    /*000069fc*/ BL          0x00000000000069FC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006a00*/ LDR         R3, [R7] 
    /*00006a04*/ CMP         R3, #0 
    /*00006a08*/ BEQ         VencProcShowChnlAttr_x6acc
    /*00006a0c*/ LDR         R9, [PC, #484]              @ 0x0000000000006bf8 
    /*00006a10*/ MOV         R4, #0 
    /*00006a14*/ MOVW        FP, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00006a18*/ MOVW        SL, #0                      @ .LC165 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2164] 
    /*00006a1c*/ MOVT        FP, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00006a20*/ MOVT        SL, #0                      @ .LC165 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2164] 
    /*00006a24*/ SUB         R5, R9, #8 
    /*00006a28*/ MOV         R6, R4 
    /*00006a2c*/ STR         FP, [SP, #40]               @ 0x28 
    /*00006a30*/ STR         SL, [SP, #44]               @ 0x2c 
    /*00006a34*/ B           VencProcShowChnlAttr_x6a4c
    VencProcShowChnlAttr_x6a38:
    /*00006a38*/ LDR         R3, [R7] 
    /*00006a3c*/ ADD         R6, R6, #1 
    /*00006a40*/ ADD         R9, R9, #8 
    /*00006a44*/ CMP         R6, R3 
    /*00006a48*/ BCS         VencProcShowChnlAttr_x6acc
    VencProcShowChnlAttr_x6a4c:
    /*00006a4c*/ LDR         R3, [R5] 
    /*00006a50*/ ADD         IP, R3, R4 
    /*00006a54*/ LDR         R3, [R3, R4] 
    /*00006a58*/ ADD         R4, R4, #36096              @ 0x8d00 
    /*00006a5c*/ ADD         R4, R4, #144                @ 0x90 
    /*00006a60*/ CMP         R3, #0 
    /*00006a64*/ BEQ         VencProcShowChnlAttr_x6a38
    /*00006a68*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00006a6c*/ ADD         LR, IP, #12288              @ 0x3000 
    /*00006a70*/ ADD         SL, SP, #58                 @ 0x3a 
    /*00006a74*/ MOV         R1, #10 
    /*00006a78*/ MOV         R2, R6 
    /*00006a7c*/ LDR         R0, [R3, R6, LSL #2] 
    /*00006a80*/ LDR         R3, [IP, #68]               @ 0x44 
    /*00006a84*/ MLA         R0, R1, R0, SL 
    /*00006a88*/ LDR         R1, [LR, #1104]             @ 0x450 
    /*00006a8c*/ ADD         SL, SP, #54                 @ 0x36 
    /*00006a90*/ ADD         R3, SL, R3, LSL #1 
    /*00006a94*/ STR         R1, [SP, #24] 
    /*00006a98*/ LDRD        SL, [R9] 
    /*00006a9c*/ STR         R0, [SP, #12] 
    /*00006aa0*/ MOV         R0, R8 
    /*00006aa4*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*00006aa8*/ STRD        SL, [SP, #16] 
    /*00006aac*/ LDR         IP, [IP, #32] 
    /*00006ab0*/ STR         IP, [SP, #8] 
    /*00006ab4*/ LDR         IP, [LR, #92]               @ 0x5c 
    /*00006ab8*/ STR         IP, [SP, #4] 
    /*00006abc*/ LDR         IP, [LR, #88]               @ 0x58 
    /*00006ac0*/ STR         IP, [SP] 
    /*00006ac4*/ BL          0x0000000000006AC4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006ac8*/ B           VencProcShowChnlAttr_x6a38
    VencProcShowChnlAttr_x6acc:
    /*00006acc*/ MOVW        R1, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f08] 
    /*00006ad0*/ MOV         R0, R8 
    /*00006ad4*/ MOVT        R1, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f08] 
    /*00006ad8*/ BL          0x0000000000006AD8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006adc*/ MOVW        R1, #0                      @ .LC158 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20bc] 
    /*00006ae0*/ MOV         R0, R8 
    /*00006ae4*/ MOVT        R1, #0                      @ .LC158 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20bc] 
    /*00006ae8*/ BL          0x0000000000006AE8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006aec*/ MOVW        R2, #0                      @ .LC161 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2134] 
    /*00006af0*/ MOVW        R3, #0                      @ .LC162 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2140] 
    /*00006af4*/ MOVT        R2, #0                      @ .LC161 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2134] 
    /*00006af8*/ MOVT        R3, #0                      @ .LC162 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2140] 
    /*00006afc*/ STR         R2, [SP, #12] 
    /*00006b00*/ STR         R3, [SP, #8] 
    /*00006b04*/ MOVW        R2, #0                      @ .LC163 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x214c] 
    /*00006b08*/ MOVW        R3, #0                      @ .LC164 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2158] 
    /*00006b0c*/ MOVT        R2, #0                      @ .LC163 [R_ARM_MOVT_ABS: .rodata.str1.4+0x214c] 
    /*00006b10*/ MOVT        R3, #0                      @ .LC164 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2158] 
    /*00006b14*/ STR         R2, [SP, #4] 
    /*00006b18*/ STR         R3, [SP] 
    /*00006b1c*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e10] 
    /*00006b20*/ MOVW        R3, #0                      @ .LC159 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2110] 
    /*00006b24*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e10] 
    /*00006b28*/ MOVT        R3, #0                      @ .LC159 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2110] 
    /*00006b2c*/ MOVW        R1, #0                      @ .LC160 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2118] 
    /*00006b30*/ MOV         R0, R8 
    /*00006b34*/ MOVT        R1, #0                      @ .LC160 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2118] 
    /*00006b38*/ BL          0x0000000000006B38          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006b3c*/ LDR         R3, [R7] 
    /*00006b40*/ CMP         R3, #0 
    /*00006b44*/ BEQ         VencProcShowChnlAttr_x6b98
    /*00006b48*/ MOV         R4, #0 
    /*00006b4c*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006b50*/ MOVW        SL, #0                      @ .LC166 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2188] 
    /*00006b54*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006b58*/ MOVT        SL, #0                      @ .LC166 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2188] 
    /*00006b5c*/ MOV         R6, R4 
    /*00006b60*/ MOVW        R9, #36240                  @ 0x8d90 
    VencProcShowChnlAttr_x6b64:
    /*00006b64*/ LDR         R3, [R5] 
    /*00006b68*/ ADD         R2, R3, R4 
    /*00006b6c*/ LDR         R3, [R3, R4] 
    /*00006b70*/ ADD         R4, R4, R9 
    /*00006b74*/ CMP         R3, #0 
    /*00006b78*/ BEQ         VencProcShowChnlAttr_x6b88
    /*00006b7c*/ LDR         R3, [R2, #4] 
    /*00006b80*/ CMP         R3, #26 
    /*00006b84*/ BEQ         VencProcShowChnlAttr_x6bb0
    VencProcShowChnlAttr_x6b88:
    /*00006b88*/ LDR         R3, [R7] 
    /*00006b8c*/ ADD         R6, R6, #1 
    /*00006b90*/ CMP         R6, R3 
    /*00006b94*/ BCC         VencProcShowChnlAttr_x6b64
    VencProcShowChnlAttr_x6b98:
    /*00006b98*/ MOV         R0, R8 
    /*00006b9c*/ MOVW        R1, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f08] 
    /*00006ba0*/ MOVT        R1, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f08] 
    /*00006ba4*/ BL          0x0000000000006BA4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006ba8*/ ADD         SP, SP, #172                @ 0xac 
    /*00006bac*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencProcShowChnlAttr_x6bb0:
    /*00006bb0*/ ADD         IP, R2, #32768              @ 0x8000 
    /*00006bb4*/ MOV         R1, SL 
    /*00006bb8*/ MOV         R2, R6 
    /*00006bbc*/ MOV         R0, R8 
    /*00006bc0*/ LDR         LR, [IP, #3280]             @ 0xcd0 
    /*00006bc4*/ LDRB        R3, [IP, #3264]             @ 0xcc0 
    /*00006bc8*/ STR         LR, [SP, #12] 
    /*00006bcc*/ LDR         LR, [IP, #3276]             @ 0xccc 
    /*00006bd0*/ STR         LR, [SP, #8] 
    /*00006bd4*/ LDR         LR, [IP, #3272]             @ 0xcc8 
    /*00006bd8*/ STR         LR, [SP, #4] 
    /*00006bdc*/ LDR         IP, [IP, #3268]             @ 0xcc4 
    /*00006be0*/ STR         IP, [SP] 
    /*00006be4*/ BL          0x0000000000006BE4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006be8*/ B           VencProcShowChnlAttr_x6b88
    /*00006bec*/ ANDEQ       R0, R0, IP, LSL #5 
    /*00006bf0*/ ANDEQ       R0, R0, R0, ASR #5 
    /*00006bf4*/ STRDEQ      R0, [R0], -IP 
    /*00006bf8*/ ANDEQ       R0, R0, R8 
FUNC_END VencProcShowChnlAttr


FUNC_BEGIN VencProcShowReciveStatus
    /*00006bfc*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00006c00*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00006c04*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00006c08*/ SUB         SP, SP, #68                 @ 0x44 
    /*00006c0c*/ LDRB        R2, [R3, #782]              @ 0x30e 
    /*00006c10*/ MOV         R8, R0 
    /*00006c14*/ LDR         LR, [R3, #768]!             @ 0x300 
    /*00006c18*/ MOVW        R1, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f08] 
    /*00006c1c*/ MOVT        R1, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f08] 
    /*00006c20*/ MOVW        R5, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00006c24*/ STRB        R2, [SP, #63]               @ 0x3f 
    /*00006c28*/ MOVT        R5, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00006c2c*/ LDR         IP, [R3, #4] 
    /*00006c30*/ LDR         R2, [R3, #8] 
    /*00006c34*/ LDRH        R3, [R3, #12] 
    /*00006c38*/ STR         LR, [SP, #49]               @ 0x31 
    /*00006c3c*/ STR         IP, [SP, #53]               @ 0x35 
    /*00006c40*/ STR         R2, [SP, #57]               @ 0x39 
    /*00006c44*/ STRH        R3, [SP, #61]               @ 0x3d 
    /*00006c48*/ BL          0x0000000000006C48          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006c4c*/ MOV         R0, R8 
    /*00006c50*/ MOVW        R1, #0                      @ .LC167 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x21a4] 
    /*00006c54*/ MOVT        R1, #0                      @ .LC167 [R_ARM_MOVT_ABS: .rodata.str1.4+0x21a4] 
    /*00006c58*/ BL          0x0000000000006C58          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006c5c*/ MOVW        R2, #0                      @ .LC170 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x221c] 
    /*00006c60*/ MOVW        R3, #0                      @ .LC171 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x222c] 
    /*00006c64*/ MOVT        R2, #0                      @ .LC170 [R_ARM_MOVT_ABS: .rodata.str1.4+0x221c] 
    /*00006c68*/ MOVT        R3, #0                      @ .LC171 [R_ARM_MOVT_ABS: .rodata.str1.4+0x222c] 
    /*00006c6c*/ STR         R2, [SP, #12] 
    /*00006c70*/ STR         R3, [SP, #8] 
    /*00006c74*/ MOVW        R2, #0                      @ .LC172 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2234] 
    /*00006c78*/ MOVW        R3, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2240] 
    /*00006c7c*/ MOVT        R2, #0                      @ .LC172 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2234] 
    /*00006c80*/ MOVT        R3, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2240] 
    /*00006c84*/ STR         R2, [SP, #4] 
    /*00006c88*/ STR         R3, [SP] 
    /*00006c8c*/ MOV         R0, R8 
    /*00006c90*/ MOVW        R3, #0                      @ .LC168 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x21f8] 
    /*00006c94*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e10] 
    /*00006c98*/ MOVT        R3, #0                      @ .LC168 [R_ARM_MOVT_ABS: .rodata.str1.4+0x21f8] 
    /*00006c9c*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e10] 
    /*00006ca0*/ MOVW        R1, #0                      @ .LC169 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2200] 
    /*00006ca4*/ MOVT        R1, #0                      @ .LC169 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2200] 
    /*00006ca8*/ BL          0x0000000000006CA8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006cac*/ LDR         R3, [R5] 
    /*00006cb0*/ CMP         R3, #0 
    /*00006cb4*/ BEQ         VencProcShowReciveStatus_x6d4c
    /*00006cb8*/ MOV         R6, #0 
    /*00006cbc*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006cc0*/ MOVW        SL, #0                      @ .LC185 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2314] 
    /*00006cc4*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006cc8*/ MOVT        SL, #0                      @ .LC185 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2314] 
    /*00006ccc*/ MOV         R7, R6 
    /*00006cd0*/ MOVW        R9, #36240                  @ 0x8d90 
    VencProcShowReciveStatus_x6cd4:
    /*00006cd4*/ LDR         R3, [R4] 
    /*00006cd8*/ ADD         R2, R3, R6 
    /*00006cdc*/ LDR         R3, [R3, R6] 
    /*00006ce0*/ CMP         R3, #0 
    /*00006ce4*/ BEQ         VencProcShowReciveStatus_x6d38
    /*00006ce8*/ LDR         R3, [R2, #4] 
    /*00006cec*/ ADD         IP, R2, #12288              @ 0x3000 
    /*00006cf0*/ MOV         R1, #10 
    /*00006cf4*/ MOV         R0, R8 
    /*00006cf8*/ CMP         R3, #26 
    /*00006cfc*/ LDR         R3, [R2, #16] 
    /*00006d00*/ ADD         R2, SP, #49                 @ 0x31 
    /*00006d04*/ LDRBEQ      R1, [IP, #128]              @ 0x80 
    /*00006d08*/ ADDEQ       R1, R1, R1, LSL #2 
    /*00006d0c*/ ADD         R1, R2, R1 
    /*00006d10*/ STR         R1, [SP, #12] 
    /*00006d14*/ LDR         LR, [IP, #140]              @ 0x8c 
    /*00006d18*/ MOV         R2, R7 
    /*00006d1c*/ MOV         R1, SL 
    /*00006d20*/ STR         LR, [SP, #8] 
    /*00006d24*/ LDR         LR, [IP, #136]              @ 0x88 
    /*00006d28*/ STR         LR, [SP, #4] 
    /*00006d2c*/ LDR         IP, [IP, #132]              @ 0x84 
    /*00006d30*/ STR         IP, [SP] 
    /*00006d34*/ BL          0x0000000000006D34          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VencProcShowReciveStatus_x6d38:
    /*00006d38*/ LDR         R3, [R5] 
    /*00006d3c*/ ADD         R7, R7, #1 
    /*00006d40*/ ADD         R6, R6, R9 
    /*00006d44*/ CMP         R7, R3 
    /*00006d48*/ BCC         VencProcShowReciveStatus_x6cd4
    VencProcShowReciveStatus_x6d4c:
    /*00006d4c*/ MOVW        R1, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f08] 
    /*00006d50*/ MOV         R0, R8 
    /*00006d54*/ MOVT        R1, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f08] 
    /*00006d58*/ MOVW        FP, #0                      @ .LC177 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22d0] 
    /*00006d5c*/ BL          0x0000000000006D5C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006d60*/ MOVW        R1, #0                      @ .LC174 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2248] 
    /*00006d64*/ MOV         R0, R8 
    /*00006d68*/ MOVT        R1, #0                      @ .LC174 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2248] 
    /*00006d6c*/ BL          0x0000000000006D6C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006d70*/ MOVW        R2, #0                      @ .LC179 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22e0] 
    /*00006d74*/ MOVT        R2, #0                      @ .LC179 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22e0] 
    /*00006d78*/ STR         R2, [SP, #20] 
    /*00006d7c*/ MOVW        R2, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22f4] 
    /*00006d80*/ MOVT        R2, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22f4] 
    /*00006d84*/ MOVT        FP, #0                      @ .LC177 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22d0] 
    /*00006d88*/ STR         R2, [SP, #44]               @ 0x2c 
    /*00006d8c*/ MOVW        R3, #0                      @ .LC178 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22d8] 
    /*00006d90*/ STR         FP, [SP, #28] 
    /*00006d94*/ MOVT        R3, #0                      @ .LC178 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22d8] 
    /*00006d98*/ MOVW        R1, #0                      @ .LC176 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22a4] 
    /*00006d9c*/ STR         R3, [SP, #24] 
    /*00006da0*/ MOVT        R1, #0                      @ .LC176 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22a4] 
    /*00006da4*/ MOVW        R3, #0                      @ .LC180 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22ec] 
    /*00006da8*/ MOV         R0, R8 
    /*00006dac*/ MOVT        R3, #0                      @ .LC180 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22ec] 
    /*00006db0*/ STR         R3, [SP, #16] 
    /*00006db4*/ MOV         R3, R2 
    /*00006db8*/ MOVW        R2, #0                      @ .LC182 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22fc] 
    /*00006dbc*/ STR         R3, [SP, #12] 
    /*00006dc0*/ MOVT        R2, #0                      @ .LC182 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22fc] 
    /*00006dc4*/ MOVW        R3, #0                      @ .LC183 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2304] 
    /*00006dc8*/ STR         R2, [SP, #8] 
    /*00006dcc*/ MOVT        R3, #0                      @ .LC183 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2304] 
    /*00006dd0*/ MOVW        R2, #0                      @ .LC184 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x230c] 
    /*00006dd4*/ STR         R3, [SP, #4] 
    /*00006dd8*/ MOVT        R2, #0                      @ .LC184 [R_ARM_MOVT_ABS: .rodata.str1.4+0x230c] 
    /*00006ddc*/ MOVW        R3, #0                      @ .LC175 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x229c] 
    /*00006de0*/ STR         R2, [SP] 
    /*00006de4*/ MOVT        R3, #0                      @ .LC175 [R_ARM_MOVT_ABS: .rodata.str1.4+0x229c] 
    /*00006de8*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e10] 
    /*00006dec*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e10] 
    /*00006df0*/ BL          0x0000000000006DF0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006df4*/ LDR         R3, [R5] 
    /*00006df8*/ CMP         R3, #0 
    /*00006dfc*/ BEQ         VencProcShowReciveStatus_x6eb0
    /*00006e00*/ MOV         R6, #0 
    /*00006e04*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006e08*/ MOVW        SL, #0                      @ .LC196 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23f8] 
    /*00006e0c*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006e10*/ MOVT        SL, #0                      @ .LC196 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23f8] 
    /*00006e14*/ MOV         R7, R6 
    /*00006e18*/ MOVW        R9, #36240                  @ 0x8d90 
    /*00006e1c*/ B           VencProcShowReciveStatus_x6e30
    VencProcShowReciveStatus_x6e20:
    /*00006e20*/ LDR         R3, [R5] 
    /*00006e24*/ ADD         R7, R7, #1 
    /*00006e28*/ CMP         R7, R3 
    /*00006e2c*/ BCS         VencProcShowReciveStatus_x6eb0
    VencProcShowReciveStatus_x6e30:
    /*00006e30*/ LDR         R3, [R4] 
    /*00006e34*/ ADD         IP, R3, R6 
    /*00006e38*/ LDR         R3, [R3, R6] 
    /*00006e3c*/ ADD         R6, R6, R9 
    /*00006e40*/ CMP         R3, #0 
    /*00006e44*/ BEQ         VencProcShowReciveStatus_x6e20
    /*00006e48*/ ADD         IP, IP, #8192               @ 0x2000 
    /*00006e4c*/ MOV         R2, R7 
    /*00006e50*/ MOV         R1, SL 
    /*00006e54*/ MOV         R0, R8 
    /*00006e58*/ LDR         LR, [IP, #3996]             @ 0xf9c 
    /*00006e5c*/ ADD         R7, R7, #1 
    /*00006e60*/ LDR         R3, [IP, #3980]             @ 0xf8c 
    /*00006e64*/ STR         LR, [SP, #28] 
    /*00006e68*/ LDR         LR, [IP, #3992]             @ 0xf98 
    /*00006e6c*/ STR         LR, [SP, #24] 
    /*00006e70*/ LDR         LR, [IP, #3988]             @ 0xf94 
    /*00006e74*/ STR         LR, [SP, #20] 
    /*00006e78*/ LDR         LR, [IP, #4012]             @ 0xfac 
    /*00006e7c*/ STR         LR, [SP, #16] 
    /*00006e80*/ LDR         LR, [IP, #4008]             @ 0xfa8 
    /*00006e84*/ STR         LR, [SP, #12] 
    /*00006e88*/ LDR         LR, [IP, #4000]             @ 0xfa0 
    /*00006e8c*/ STR         LR, [SP, #8] 
    /*00006e90*/ LDR         LR, [IP, #4004]             @ 0xfa4 
    /*00006e94*/ STR         LR, [SP, #4] 
    /*00006e98*/ LDR         IP, [IP, #3984]             @ 0xf90 
    /*00006e9c*/ STR         IP, [SP] 
    /*00006ea0*/ BL          0x0000000000006EA0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006ea4*/ LDR         R3, [R5] 
    /*00006ea8*/ CMP         R7, R3 
    /*00006eac*/ BCC         VencProcShowReciveStatus_x6e30
    VencProcShowReciveStatus_x6eb0:
    /*00006eb0*/ MOVW        R1, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f08] 
    /*00006eb4*/ MOV         R0, R8 
    /*00006eb8*/ MOVT        R1, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f08] 
    /*00006ebc*/ BL          0x0000000000006EBC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006ec0*/ MOVW        R1, #0                      @ .LC186 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2330] 
    /*00006ec4*/ MOV         R0, R8 
    /*00006ec8*/ MOVT        R1, #0                      @ .LC186 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2330] 
    /*00006ecc*/ BL          0x0000000000006ECC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006ed0*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00006ed4*/ STR         FP, [SP, #16] 
    /*00006ed8*/ MOVW        R2, #0                      @ .LC189 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23bc] 
    /*00006edc*/ MOVW        R1, #0                      @ .LC188 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x238c] 
    /*00006ee0*/ MOVT        R2, #0                      @ .LC189 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23bc] 
    /*00006ee4*/ STR         R3, [SP, #20] 
    /*00006ee8*/ MOVT        R1, #0                      @ .LC188 [R_ARM_MOVT_ABS: .rodata.str1.4+0x238c] 
    /*00006eec*/ STR         R2, [SP, #32] 
    /*00006ef0*/ MOVW        R3, #0                      @ .LC190 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23c4] 
    /*00006ef4*/ MOVW        R2, #0                      @ .LC191 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23d0] 
    /*00006ef8*/ MOVT        R3, #0                      @ .LC190 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23c4] 
    /*00006efc*/ MOVT        R2, #0                      @ .LC191 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23d0] 
    /*00006f00*/ STR         R3, [SP, #28] 
    /*00006f04*/ STR         R2, [SP, #24] 
    /*00006f08*/ MOVW        R3, #0                      @ .LC192 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23d8] 
    /*00006f0c*/ MOVW        R2, #0                      @ .LC193 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23e0] 
    /*00006f10*/ MOVT        R3, #0                      @ .LC192 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23d8] 
    /*00006f14*/ MOVT        R2, #0                      @ .LC193 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23e0] 
    /*00006f18*/ STR         R3, [SP, #12] 
    /*00006f1c*/ STR         R2, [SP, #8] 
    /*00006f20*/ MOVW        R3, #0                      @ .LC194 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23e8] 
    /*00006f24*/ MOVW        R2, #0                      @ .LC195 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23f0] 
    /*00006f28*/ MOVT        R3, #0                      @ .LC194 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23e8] 
    /*00006f2c*/ MOVT        R2, #0                      @ .LC195 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23f0] 
    /*00006f30*/ STR         R3, [SP, #4] 
    /*00006f34*/ STR         R2, [SP] 
    /*00006f38*/ MOVW        R3, #0                      @ .LC187 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2384] 
    /*00006f3c*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e10] 
    /*00006f40*/ MOVT        R3, #0                      @ .LC187 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2384] 
    /*00006f44*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e10] 
    /*00006f48*/ MOV         R0, R8 
    /*00006f4c*/ BL          0x0000000000006F4C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00006f50*/ LDR         R3, [R5] 
    /*00006f54*/ CMP         R3, #0 
    /*00006f58*/ BEQ         VencProcShowReciveStatus_x7014
    /*00006f5c*/ MOV         R6, #0 
    /*00006f60*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00006f64*/ MOVW        SL, #0                      @ .LC207 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x24c4] 
    /*00006f68*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00006f6c*/ MOVT        SL, #0                      @ .LC207 [R_ARM_MOVT_ABS: .rodata.str1.4+0x24c4] 
    /*00006f70*/ MOV         R7, R6 
    /*00006f74*/ MOVW        R9, #36240                  @ 0x8d90 
    /*00006f78*/ B           VencProcShowReciveStatus_x6f8c
    VencProcShowReciveStatus_x6f7c:
    /*00006f7c*/ LDR         R3, [R5] 
    /*00006f80*/ ADD         R7, R7, #1 
    /*00006f84*/ CMP         R7, R3 
    /*00006f88*/ BCS         VencProcShowReciveStatus_x7014
    VencProcShowReciveStatus_x6f8c:
    /*00006f8c*/ LDR         R3, [R4] 
    /*00006f90*/ ADD         IP, R3, R6 
    /*00006f94*/ LDR         R3, [R3, R6] 
    /*00006f98*/ ADD         R6, R6, R9 
    /*00006f9c*/ CMP         R3, #0 
    /*00006fa0*/ BEQ         VencProcShowReciveStatus_x6f7c
    /*00006fa4*/ ADD         IP, IP, #8192               @ 0x2000 
    /*00006fa8*/ MOV         R2, R7 
    /*00006fac*/ MOV         R1, SL 
    /*00006fb0*/ MOV         R0, R8 
    /*00006fb4*/ LDR         LR, [IP, #4020]             @ 0xfb4 
    /*00006fb8*/ ADD         R7, R7, #1 
    /*00006fbc*/ LDR         R3, [IP, #4016]             @ 0xfb0 
    /*00006fc0*/ STR         LR, [SP, #32] 
    /*00006fc4*/ LDR         LR, [IP, #4052]             @ 0xfd4 
    /*00006fc8*/ STR         LR, [SP, #28] 
    /*00006fcc*/ LDR         LR, [IP, #4048]             @ 0xfd0 
    /*00006fd0*/ STR         LR, [SP, #24] 
    /*00006fd4*/ LDR         LR, [IP, #4044]             @ 0xfcc 
    /*00006fd8*/ STR         LR, [SP, #20] 
    /*00006fdc*/ LDR         LR, [IP, #4040]             @ 0xfc8 
    /*00006fe0*/ STR         LR, [SP, #16] 
    /*00006fe4*/ LDR         LR, [IP, #4036]             @ 0xfc4 
    /*00006fe8*/ STR         LR, [SP, #12] 
    /*00006fec*/ LDR         LR, [IP, #4032]             @ 0xfc0 
    /*00006ff0*/ STR         LR, [SP, #8] 
    /*00006ff4*/ LDR         LR, [IP, #4028]             @ 0xfbc 
    /*00006ff8*/ STR         LR, [SP, #4] 
    /*00006ffc*/ LDR         IP, [IP, #4024]             @ 0xfb8 
    /*00007000*/ STR         IP, [SP] 
    /*00007004*/ BL          0x0000000000007004          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00007008*/ LDR         R3, [R5] 
    /*0000700c*/ CMP         R7, R3 
    /*00007010*/ BCC         VencProcShowReciveStatus_x6f8c
    VencProcShowReciveStatus_x7014:
    /*00007014*/ MOVW        R1, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f08] 
    /*00007018*/ MOV         R0, R8 
    /*0000701c*/ MOVT        R1, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f08] 
    /*00007020*/ BL          0x0000000000007020          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00007024*/ MOVW        R1, #0                      @ .LC197 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2424] 
    /*00007028*/ MOV         R0, R8 
    /*0000702c*/ MOVT        R1, #0                      @ .LC197 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2424] 
    /*00007030*/ BL          0x0000000000007030          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00007034*/ MOVW        R2, #0                      @ .LC199 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2480] 
    /*00007038*/ MOVW        R3, #0                      @ .LC200 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2488] 
    /*0000703c*/ MOVT        R2, #0                      @ .LC199 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2480] 
    /*00007040*/ MOVT        R3, #0                      @ .LC200 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2488] 
    /*00007044*/ STR         R2, [SP, #28] 
    /*00007048*/ STR         R3, [SP, #24] 
    /*0000704c*/ MOVW        R2, #0                      @ .LC201 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2490] 
    /*00007050*/ MOVW        R3, #0                      @ .LC202 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2498] 
    /*00007054*/ MOVT        R2, #0                      @ .LC201 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2490] 
    /*00007058*/ MOVT        R3, #0                      @ .LC202 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2498] 
    /*0000705c*/ STR         R2, [SP, #20] 
    /*00007060*/ STR         R3, [SP, #16] 
    /*00007064*/ MOVW        R2, #0                      @ .LC203 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x24a0] 
    /*00007068*/ MOVW        R3, #0                      @ .LC204 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x24a8] 
    /*0000706c*/ MOVT        R2, #0                      @ .LC203 [R_ARM_MOVT_ABS: .rodata.str1.4+0x24a0] 
    /*00007070*/ MOVT        R3, #0                      @ .LC204 [R_ARM_MOVT_ABS: .rodata.str1.4+0x24a8] 
    /*00007074*/ STR         R2, [SP, #12] 
    /*00007078*/ STR         R3, [SP, #8] 
    /*0000707c*/ MOVW        R2, #0                      @ .LC205 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x24b0] 
    /*00007080*/ MOVW        R3, #0                      @ .LC206 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x24bc] 
    /*00007084*/ MOVT        R2, #0                      @ .LC205 [R_ARM_MOVT_ABS: .rodata.str1.4+0x24b0] 
    /*00007088*/ MOVT        R3, #0                      @ .LC206 [R_ARM_MOVT_ABS: .rodata.str1.4+0x24bc] 
    /*0000708c*/ STR         R2, [SP, #4] 
    /*00007090*/ STR         R3, [SP] 
    /*00007094*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e10] 
    /*00007098*/ MOVW        R3, #0                      @ .LC198 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2478] 
    /*0000709c*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e10] 
    /*000070a0*/ MOVT        R3, #0                      @ .LC198 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2478] 
    /*000070a4*/ MOVW        R1, #0                      @ .LC176 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22a4] 
    /*000070a8*/ MOV         R0, R8 
    /*000070ac*/ MOVT        R1, #0                      @ .LC176 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22a4] 
    /*000070b0*/ BL          0x00000000000070B0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000070b4*/ LDR         R3, [R5] 
    /*000070b8*/ CMP         R3, #0 
    /*000070bc*/ BEQ         VencProcShowReciveStatus_x7174
    /*000070c0*/ MOV         R6, #0 
    /*000070c4*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000070c8*/ MOVW        SL, #0                      @ .LC196 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23f8] 
    /*000070cc*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000070d0*/ MOVT        SL, #0                      @ .LC196 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23f8] 
    /*000070d4*/ MOV         R7, R6 
    /*000070d8*/ MOVW        R9, #36240                  @ 0x8d90 
    /*000070dc*/ B           VencProcShowReciveStatus_x70f0
    VencProcShowReciveStatus_x70e0:
    /*000070e0*/ LDR         R3, [R5] 
    /*000070e4*/ ADD         R7, R7, #1 
    /*000070e8*/ CMP         R7, R3 
    /*000070ec*/ BCS         VencProcShowReciveStatus_x7174
    VencProcShowReciveStatus_x70f0:
    /*000070f0*/ LDR         R3, [R4] 
    /*000070f4*/ ADD         IP, R3, R6 
    /*000070f8*/ LDR         R3, [R3, R6] 
    /*000070fc*/ ADD         R6, R6, R9 
    /*00007100*/ CMP         R3, #0 
    /*00007104*/ BEQ         VencProcShowReciveStatus_x70e0
    /*00007108*/ ADD         LR, IP, #12288              @ 0x3000 
    /*0000710c*/ ADD         IP, IP, #8192               @ 0x2000 
    /*00007110*/ MOV         R2, R7 
    /*00007114*/ MOV         R1, SL 
    /*00007118*/ LDR         R0, [LR, #20] 
    /*0000711c*/ ADD         R7, R7, #1 
    /*00007120*/ LDR         R3, [IP, #4060]             @ 0xfdc 
    /*00007124*/ STR         R0, [SP, #28] 
    /*00007128*/ LDR         R0, [LR, #16] 
    /*0000712c*/ STR         R0, [SP, #24] 
    /*00007130*/ MOV         R0, R8 
    /*00007134*/ LDR         FP, [LR, #4] 
    /*00007138*/ STR         FP, [SP, #20] 
    /*0000713c*/ LDR         LR, [LR] 
    /*00007140*/ STR         LR, [SP, #16] 
    /*00007144*/ LDR         LR, [IP, #4084]             @ 0xff4 
    /*00007148*/ STR         LR, [SP, #12] 
    /*0000714c*/ LDR         LR, [IP, #4080]             @ 0xff0 
    /*00007150*/ STR         LR, [SP, #8] 
    /*00007154*/ LDR         LR, [IP, #4068]             @ 0xfe4 
    /*00007158*/ STR         LR, [SP, #4] 
    /*0000715c*/ LDR         IP, [IP, #4064]             @ 0xfe0 
    /*00007160*/ STR         IP, [SP] 
    /*00007164*/ BL          0x0000000000007164          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00007168*/ LDR         R3, [R5] 
    /*0000716c*/ CMP         R7, R3 
    /*00007170*/ BCC         VencProcShowReciveStatus_x70f0
    VencProcShowReciveStatus_x7174:
    /*00007174*/ MOVW        R1, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f08] 
    /*00007178*/ MOV         R0, R8 
    /*0000717c*/ MOVT        R1, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f08] 
    /*00007180*/ BL          0x0000000000007180          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00007184*/ MOVW        R1, #0                      @ .LC208 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x24f4] 
    /*00007188*/ MOV         R0, R8 
    /*0000718c*/ MOVT        R1, #0                      @ .LC208 [R_ARM_MOVT_ABS: .rodata.str1.4+0x24f4] 
    /*00007190*/ BL          0x0000000000007190          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00007194*/ MOVW        R2, #0                      @ .LC211 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2564] 
    /*00007198*/ MOVW        R3, #0                      @ .LC212 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x256c] 
    /*0000719c*/ MOVT        R2, #0                      @ .LC211 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2564] 
    /*000071a0*/ MOVT        R3, #0                      @ .LC212 [R_ARM_MOVT_ABS: .rodata.str1.4+0x256c] 
    /*000071a4*/ STR         R2, [SP, #8] 
    /*000071a8*/ STR         R3, [SP, #4] 
    /*000071ac*/ MOVW        R2, #0                      @ .LC213 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2570] 
    /*000071b0*/ MOVW        R3, #0                      @ .LC209 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2548] 
    /*000071b4*/ MOVT        R2, #0                      @ .LC213 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2570] 
    /*000071b8*/ MOVT        R3, #0                      @ .LC209 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2548] 
    /*000071bc*/ STR         R2, [SP] 
    /*000071c0*/ MOVW        R1, #0                      @ .LC210 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2550] 
    /*000071c4*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e10] 
    /*000071c8*/ MOVT        R1, #0                      @ .LC210 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2550] 
    /*000071cc*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e10] 
    /*000071d0*/ MOV         R0, R8 
    /*000071d4*/ BL          0x00000000000071D4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000071d8*/ LDR         R3, [R5] 
    /*000071dc*/ CMP         R3, #0 
    /*000071e0*/ BEQ         VencProcShowReciveStatus_x726c
    /*000071e4*/ MOV         R6, #0 
    /*000071e8*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000071ec*/ MOVW        SL, #0                      @ .LC214 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2578] 
    /*000071f0*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000071f4*/ MOVT        SL, #0                      @ .LC214 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2578] 
    /*000071f8*/ MOV         R7, R6 
    /*000071fc*/ MOV         FP, R6 
    /*00007200*/ MOVW        R9, #36240                  @ 0x8d90 
    /*00007204*/ B           VencProcShowReciveStatus_x7218
    VencProcShowReciveStatus_x7208:
    /*00007208*/ LDR         R3, [R5] 
    /*0000720c*/ ADD         R7, R7, #1 
    /*00007210*/ CMP         R7, R3 
    /*00007214*/ BCS         VencProcShowReciveStatus_x726c
    VencProcShowReciveStatus_x7218:
    /*00007218*/ LDR         R3, [R4] 
    /*0000721c*/ ADD         R1, R3, R6 
    /*00007220*/ LDR         R3, [R3, R6] 
    /*00007224*/ ADD         R6, R6, R9 
    /*00007228*/ CMP         R3, #0 
    /*0000722c*/ BEQ         VencProcShowReciveStatus_x7208
    /*00007230*/ LDR         R3, [R1, #3704]             @ 0xe78 
    /*00007234*/ MOV         R2, R7 
    /*00007238*/ LDR         R0, [R1, #3724]             @ 0xe8c 
    /*0000723c*/ MOV         R1, SL 
    /*00007240*/ RSB         IP, R3, #6 
    /*00007244*/ STR         FP, [SP, #8] 
    /*00007248*/ SUB         IP, IP, R0 
    /*0000724c*/ STR         IP, [SP, #4] 
    /*00007250*/ STR         R0, [SP] 
    /*00007254*/ MOV         R0, R8 
    /*00007258*/ BL          0x0000000000007258          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000725c*/ LDR         R3, [R5] 
    /*00007260*/ ADD         R7, R7, #1 
    /*00007264*/ CMP         R7, R3 
    /*00007268*/ BCC         VencProcShowReciveStatus_x7218
    VencProcShowReciveStatus_x726c:
    /*0000726c*/ MOV         R0, R8 
    /*00007270*/ MOVW        R1, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f08] 
    /*00007274*/ MOVT        R1, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f08] 
    /*00007278*/ BL          0x0000000000007278          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000727c*/ ADD         SP, SP, #68                 @ 0x44 
    /*00007280*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END VencProcShowReciveStatus


FUNC_BEGIN VencProcShowChnlInfo
    /*00007284*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00007288*/ SUB         SP, SP, #32 
    /*0000728c*/ MOV         R9, R0 
    /*00007290*/ MOVW        R1, #0                      @ .LC215 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x258c] 
    /*00007294*/ MOVW        R6, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00007298*/ MOVT        R1, #0                      @ .LC215 [R_ARM_MOVT_ABS: .rodata.str1.4+0x258c] 
    /*0000729c*/ MOVT        R6, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000072a0*/ BL          0x00000000000072A0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000072a4*/ MOVW        R2, #0                      @ .LC217 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x25e4] 
    /*000072a8*/ MOVW        R3, #0                      @ .LC218 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x25ec] 
    /*000072ac*/ MOVT        R2, #0                      @ .LC217 [R_ARM_MOVT_ABS: .rodata.str1.4+0x25e4] 
    /*000072b0*/ MOVT        R3, #0                      @ .LC218 [R_ARM_MOVT_ABS: .rodata.str1.4+0x25ec] 
    /*000072b4*/ STR         R2, [SP, #28] 
    /*000072b8*/ MOV         R0, R9 
    /*000072bc*/ STR         R3, [SP, #24] 
    /*000072c0*/ MOVW        R2, #0                      @ .LC219 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x25f8] 
    /*000072c4*/ MOVW        R3, #0                      @ .LC220 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2604] 
    /*000072c8*/ MOVT        R2, #0                      @ .LC219 [R_ARM_MOVT_ABS: .rodata.str1.4+0x25f8] 
    /*000072cc*/ MOVT        R3, #0                      @ .LC220 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2604] 
    /*000072d0*/ STR         R2, [SP, #20] 
    /*000072d4*/ STR         R3, [SP, #16] 
    /*000072d8*/ MOVW        R2, #0                      @ .LC221 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x260c] 
    /*000072dc*/ MOVW        R3, #0                      @ .LC206 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x24bc] 
    /*000072e0*/ MOVT        R2, #0                      @ .LC221 [R_ARM_MOVT_ABS: .rodata.str1.4+0x260c] 
    /*000072e4*/ MOVT        R3, #0                      @ .LC206 [R_ARM_MOVT_ABS: .rodata.str1.4+0x24bc] 
    /*000072e8*/ STR         R2, [SP, #12] 
    /*000072ec*/ STR         R3, [SP, #8] 
    /*000072f0*/ MOVW        R2, #0                      @ .LC168 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x21f8] 
    /*000072f4*/ MOVW        R3, #0                      @ .LC222 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2614] 
    /*000072f8*/ MOVT        R2, #0                      @ .LC168 [R_ARM_MOVT_ABS: .rodata.str1.4+0x21f8] 
    /*000072fc*/ MOVT        R3, #0                      @ .LC222 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2614] 
    /*00007300*/ STR         R2, [SP, #4] 
    /*00007304*/ STR         R3, [SP] 
    /*00007308*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e10] 
    /*0000730c*/ MOVW        R3, #0                      @ .LC216 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x25e0] 
    /*00007310*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e10] 
    /*00007314*/ MOVT        R3, #0                      @ .LC216 [R_ARM_MOVT_ABS: .rodata.str1.4+0x25e0] 
    /*00007318*/ MOVW        R1, #0                      @ .LC176 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22a4] 
    /*0000731c*/ MOVT        R1, #0                      @ .LC176 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22a4] 
    /*00007320*/ BL          0x0000000000007320          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00007324*/ LDR         R3, [R6] 
    /*00007328*/ CMP         R3, #0 
    /*0000732c*/ BEQ         VencProcShowChnlInfo_x73e0
    /*00007330*/ MOV         R4, #0 
    /*00007334*/ MOVW        R7, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00007338*/ MOVW        SL, #0                      @ .LC223 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x261c] 
    /*0000733c*/ MOVT        R7, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007340*/ MOVT        SL, #0                      @ .LC223 [R_ARM_MOVT_ABS: .rodata.str1.4+0x261c] 
    /*00007344*/ MOV         R5, R4 
    /*00007348*/ MOVW        R8, #36240                  @ 0x8d90 
    /*0000734c*/ B           VencProcShowChnlInfo_x7360
    VencProcShowChnlInfo_x7350:
    /*00007350*/ LDR         R3, [R6] 
    /*00007354*/ ADD         R5, R5, #1 
    /*00007358*/ CMP         R5, R3 
    /*0000735c*/ BCS         VencProcShowChnlInfo_x73e0
    VencProcShowChnlInfo_x7360:
    /*00007360*/ LDR         R3, [R7] 
    /*00007364*/ ADD         IP, R3, R4 
    /*00007368*/ LDR         R3, [R3, R4] 
    /*0000736c*/ ADD         R4, R4, R8 
    /*00007370*/ CMP         R3, #0 
    /*00007374*/ BEQ         VencProcShowChnlInfo_x7350
    /*00007378*/ ADD         IP, IP, #12288              @ 0x3000 
    /*0000737c*/ MOV         R2, R5 
    /*00007380*/ MOV         R1, SL 
    /*00007384*/ MOV         R0, R9 
    /*00007388*/ LDR         LR, [IP, #56]               @ 0x38 
    /*0000738c*/ ADD         R5, R5, #1 
    /*00007390*/ LDR         R3, [IP, #28] 
    /*00007394*/ STR         LR, [SP, #28] 
    /*00007398*/ LDR         LR, [IP, #584]              @ 0x248 
    /*0000739c*/ STR         LR, [SP, #24] 
    /*000073a0*/ LDR         LR, [IP, #580]              @ 0x244 
    /*000073a4*/ STR         LR, [SP, #20] 
    /*000073a8*/ LDR         LR, [IP, #48]               @ 0x30 
    /*000073ac*/ STR         LR, [SP, #16] 
    /*000073b0*/ LDR         LR, [IP, #44]               @ 0x2c 
    /*000073b4*/ STR         LR, [SP, #12] 
    /*000073b8*/ LDR         LR, [IP, #40]               @ 0x28 
    /*000073bc*/ STR         LR, [SP, #8] 
    /*000073c0*/ LDR         LR, [IP, #36]               @ 0x24 
    /*000073c4*/ STR         LR, [SP, #4] 
    /*000073c8*/ LDR         IP, [IP, #32] 
    /*000073cc*/ STR         IP, [SP] 
    /*000073d0*/ BL          0x00000000000073D0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000073d4*/ LDR         R3, [R6] 
    /*000073d8*/ CMP         R5, R3 
    /*000073dc*/ BCC         VencProcShowChnlInfo_x7360
    VencProcShowChnlInfo_x73e0:
    /*000073e0*/ MOV         R0, R9 
    /*000073e4*/ MOVW        R1, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f08] 
    /*000073e8*/ MOVT        R1, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f08] 
    /*000073ec*/ ADD         SP, SP, #32 
    /*000073f0*/ POP         {R4, R5, R6, R7, R8, R9, SL, LR} 
    VencProcShowChnlInfo_x73f4:
    /*000073f4*/ B           VencProcShowChnlInfo_x73f4  @ osal_seq_printf [R_ARM_JUMP24: +0x0] 
FUNC_END VencProcShowChnlInfo


FUNC_BEGIN VencProcShowCropInfo
    /*000073f8*/ LDR         R3, [PC, #308]              @ 0x0000000000007534 
    /*000073fc*/ MOVW        R1, #0                      @ .LC224 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2648] 
    /*00007400*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00007404*/ MOV         R9, R0 
    /*00007408*/ LDR         R0, [R3] 
    /*0000740c*/ SUB         SP, SP, #28 
    /*00007410*/ MOVT        R1, #0                      @ .LC224 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2648] 
    /*00007414*/ MOVW        R6, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00007418*/ MOVT        R6, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000741c*/ STR         R0, [SP, #20] 
    /*00007420*/ MOV         R0, R9 
    /*00007424*/ BL          0x0000000000007424          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00007428*/ MOVW        R2, #0                      @ .LC147 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fdc] 
    /*0000742c*/ MOVW        R3, #0                      @ .LC137 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f60] 
    /*00007430*/ MOVT        R2, #0                      @ .LC147 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fdc] 
    /*00007434*/ MOVT        R3, #0                      @ .LC137 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f60] 
    /*00007438*/ STR         R2, [SP, #12] 
    /*0000743c*/ STR         R3, [SP, #8] 
    /*00007440*/ MOVW        R2, #0                      @ .LC227 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x26b8] 
    /*00007444*/ MOVW        R3, #0                      @ .LC228 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x26c0] 
    /*00007448*/ MOVT        R2, #0                      @ .LC227 [R_ARM_MOVT_ABS: .rodata.str1.4+0x26b8] 
    /*0000744c*/ MOVT        R3, #0                      @ .LC228 [R_ARM_MOVT_ABS: .rodata.str1.4+0x26c0] 
    /*00007450*/ STR         R2, [SP, #4] 
    /*00007454*/ STR         R3, [SP] 
    /*00007458*/ MOV         R0, R9 
    /*0000745c*/ MOVW        R3, #0                      @ .LC225 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x269c] 
    /*00007460*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e10] 
    /*00007464*/ MOVT        R3, #0                      @ .LC225 [R_ARM_MOVT_ABS: .rodata.str1.4+0x269c] 
    /*00007468*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e10] 
    /*0000746c*/ MOVW        R1, #0                      @ .LC226 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x26a4] 
    /*00007470*/ MOVT        R1, #0                      @ .LC226 [R_ARM_MOVT_ABS: .rodata.str1.4+0x26a4] 
    /*00007474*/ BL          0x0000000000007474          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00007478*/ LDR         R3, [R6] 
    /*0000747c*/ CMP         R3, #0 
    /*00007480*/ BEQ         VencProcShowCropInfo_x751c
    /*00007484*/ MOV         R4, #0 
    /*00007488*/ MOVW        R7, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000748c*/ MOVW        SL, #0                      @ .LC229 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x26c8] 
    /*00007490*/ MOVT        R7, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007494*/ MOVT        SL, #0                      @ .LC229 [R_ARM_MOVT_ABS: .rodata.str1.4+0x26c8] 
    /*00007498*/ MOV         R5, R4 
    /*0000749c*/ MOVW        R8, #36240                  @ 0x8d90 
    /*000074a0*/ B           VencProcShowCropInfo_x74b4
    VencProcShowCropInfo_x74a4:
    /*000074a4*/ LDR         R3, [R6] 
    /*000074a8*/ ADD         R5, R5, #1 
    /*000074ac*/ CMP         R5, R3 
    /*000074b0*/ BCS         VencProcShowCropInfo_x751c
    VencProcShowCropInfo_x74b4:
    /*000074b4*/ LDR         R3, [R7] 
    /*000074b8*/ ADD         IP, R3, R4 
    /*000074bc*/ LDR         R3, [R3, R4] 
    /*000074c0*/ ADD         R4, R4, R8 
    /*000074c4*/ CMP         R3, #0 
    /*000074c8*/ BEQ         VencProcShowCropInfo_x74a4
    /*000074cc*/ ADD         IP, IP, #12288              @ 0x3000 
    /*000074d0*/ ADD         FP, SP, #20 
    /*000074d4*/ MOV         R2, R5 
    /*000074d8*/ MOV         R1, SL 
    /*000074dc*/ LDR         LR, [IP, #524]              @ 0x20c 
    /*000074e0*/ MOV         R0, R9 
    /*000074e4*/ LDR         R3, [IP, #508]              @ 0x1fc 
    /*000074e8*/ ADD         R5, R5, #1 
    /*000074ec*/ STR         LR, [SP, #12] 
    /*000074f0*/ LDR         LR, [IP, #520]              @ 0x208 
    /*000074f4*/ ADD         R3, FP, R3, LSL #1 
    /*000074f8*/ STR         LR, [SP, #8] 
    /*000074fc*/ LDR         LR, [IP, #516]              @ 0x204 
    /*00007500*/ STR         LR, [SP, #4] 
    /*00007504*/ LDR         IP, [IP, #512]              @ 0x200 
    /*00007508*/ STR         IP, [SP] 
    /*0000750c*/ BL          0x000000000000750C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00007510*/ LDR         R3, [R6] 
    /*00007514*/ CMP         R5, R3 
    /*00007518*/ BCC         VencProcShowCropInfo_x74b4
    VencProcShowCropInfo_x751c:
    /*0000751c*/ MOV         R0, R9 
    /*00007520*/ MOVW        R1, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f08] 
    /*00007524*/ MOVT        R1, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f08] 
    /*00007528*/ BL          0x0000000000007528          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000752c*/ ADD         SP, SP, #28 
    /*00007530*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*00007534*/ STRDEQ      R0, [R0], -IP 
FUNC_END VencProcShowCropInfo


FUNC_BEGIN VencProcShowStreamStatus
    /*00007538*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000753c*/ SUB         SP, SP, #36                 @ 0x24 
    /*00007540*/ MOV         R9, R0 
    /*00007544*/ MOVW        R1, #0                      @ .LC230 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x26dc] 
    /*00007548*/ MOVW        R6, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000754c*/ MOVT        R1, #0                      @ .LC230 [R_ARM_MOVT_ABS: .rodata.str1.4+0x26dc] 
    /*00007550*/ MOVT        R6, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00007554*/ BL          0x0000000000007554          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00007558*/ MOVW        R3, #0                      @ .LC233 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2760] 
    /*0000755c*/ MOVW        R2, #0                      @ .LC234 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x276c] 
    /*00007560*/ MOVT        R3, #0                      @ .LC233 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2760] 
    /*00007564*/ MOVT        R2, #0                      @ .LC234 [R_ARM_MOVT_ABS: .rodata.str1.4+0x276c] 
    /*00007568*/ STR         R3, [SP, #24] 
    /*0000756c*/ MOV         R0, R9 
    /*00007570*/ STR         R2, [SP, #20] 
    /*00007574*/ MOVW        R3, #0                      @ .LC235 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2778] 
    /*00007578*/ MOVW        R2, #0                      @ .LC236 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2784] 
    /*0000757c*/ MOVT        R3, #0                      @ .LC235 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2778] 
    /*00007580*/ MOVT        R2, #0                      @ .LC236 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2784] 
    /*00007584*/ STR         R3, [SP, #16] 
    /*00007588*/ STR         R2, [SP, #12] 
    /*0000758c*/ MOVW        R3, #0                      @ .LC237 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x278c] 
    /*00007590*/ MOVW        R2, #0                      @ .LC238 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2794] 
    /*00007594*/ MOVT        R3, #0                      @ .LC237 [R_ARM_MOVT_ABS: .rodata.str1.4+0x278c] 
    /*00007598*/ MOVT        R2, #0                      @ .LC238 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2794] 
    /*0000759c*/ STR         R3, [SP, #8] 
    /*000075a0*/ STR         R2, [SP, #4] 
    /*000075a4*/ MOVW        R3, #0                      @ .LC239 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x279c] 
    /*000075a8*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e10] 
    /*000075ac*/ MOVT        R3, #0                      @ .LC239 [R_ARM_MOVT_ABS: .rodata.str1.4+0x279c] 
    /*000075b0*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e10] 
    /*000075b4*/ STR         R3, [SP] 
    /*000075b8*/ MOVW        R1, #0                      @ .LC232 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2738] 
    /*000075bc*/ MOVW        R3, #0                      @ .LC231 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2730] 
    /*000075c0*/ MOVT        R1, #0                      @ .LC232 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2738] 
    /*000075c4*/ MOVT        R3, #0                      @ .LC231 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2730] 
    /*000075c8*/ BL          0x00000000000075C8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000075cc*/ LDR         R3, [R6] 
    /*000075d0*/ CMP         R3, #0 
    /*000075d4*/ BEQ         VencProcShowStreamStatus_x7684
    /*000075d8*/ MOV         R4, #0 
    /*000075dc*/ MOVW        R7, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000075e0*/ MOVW        SL, #0                      @ .LC240 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x27a4] 
    /*000075e4*/ MOVT        R7, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000075e8*/ MOVT        SL, #0                      @ .LC240 [R_ARM_MOVT_ABS: .rodata.str1.4+0x27a4] 
    /*000075ec*/ MOV         R5, R4 
    /*000075f0*/ MOVW        R8, #36240                  @ 0x8d90 
    /*000075f4*/ B           VencProcShowStreamStatus_x7608
    VencProcShowStreamStatus_x75f8:
    /*000075f8*/ LDR         R3, [R6] 
    /*000075fc*/ ADD         R5, R5, #1 
    /*00007600*/ CMP         R5, R3 
    /*00007604*/ BCS         VencProcShowStreamStatus_x7684
    VencProcShowStreamStatus_x7608:
    /*00007608*/ LDR         R3, [R7] 
    /*0000760c*/ ADD         R2, R3, R4 
    /*00007610*/ LDR         R3, [R3, R4] 
    /*00007614*/ ADD         R4, R4, R8 
    /*00007618*/ CMP         R3, #0 
    /*0000761c*/ BEQ         VencProcShowStreamStatus_x75f8
    /*00007620*/ ADD         IP, R2, #12288              @ 0x3000 
    /*00007624*/ ADD         LR, R2, #8192               @ 0x2000 
    /*00007628*/ MOV         R1, SL 
    /*0000762c*/ MOV         R2, R5 
    /*00007630*/ LDR         R0, [IP, #600]              @ 0x258 
    /*00007634*/ ADD         R5, R5, #1 
    /*00007638*/ LDR         R3, [LR, #3780]             @ 0xec4 
    /*0000763c*/ STR         R0, [SP, #24] 
    /*00007640*/ LDR         R0, [IP, #112]              @ 0x70 
    /*00007644*/ STR         R0, [SP, #20] 
    /*00007648*/ MOV         R0, R9 
    /*0000764c*/ LDR         FP, [IP, #104]              @ 0x68 
    /*00007650*/ STR         FP, [SP, #16] 
    /*00007654*/ LDR         FP, [IP, #108]              @ 0x6c 
    /*00007658*/ STR         FP, [SP, #12] 
    /*0000765c*/ LDR         IP, [IP, #100]              @ 0x64 
    /*00007660*/ STR         IP, [SP, #8] 
    /*00007664*/ LDR         IP, [LR, #3788]             @ 0xecc 
    /*00007668*/ STR         IP, [SP, #4] 
    /*0000766c*/ LDR         IP, [LR, #3784]             @ 0xec8 
    /*00007670*/ STR         IP, [SP] 
    /*00007674*/ BL          0x0000000000007674          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00007678*/ LDR         R3, [R6] 
    /*0000767c*/ CMP         R5, R3 
    /*00007680*/ BCC         VencProcShowStreamStatus_x7608
    VencProcShowStreamStatus_x7684:
    /*00007684*/ MOV         R0, R9 
    /*00007688*/ MOVW        R1, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f08] 
    /*0000768c*/ MOVT        R1, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f08] 
    /*00007690*/ ADD         SP, SP, #36                 @ 0x24 
    /*00007694*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    VencProcShowStreamStatus_x7698:
    /*00007698*/ B           VencProcShowStreamStatus_x7698@ osal_seq_printf [R_ARM_JUMP24: +0x0] 
FUNC_END VencProcShowStreamStatus


FUNC_BEGIN VencProcShow
    /*0000769c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000076a0*/ MOVW        R1, #0                      @ .LC241 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x27cc] 
    /*000076a4*/ SUB         SP, SP, #44                 @ 0x2c 
    /*000076a8*/ MOV         R9, R0 
    /*000076ac*/ MOVT        R1, #0                      @ .LC241 [R_ARM_MOVT_ABS: .rodata.str1.4+0x27cc] 
    /*000076b0*/ MOVW        SL, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000076b4*/ BL          0x00000000000076B4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000076b8*/ MOV         R0, R9 
    /*000076bc*/ BL          0x00000000000076BC          @ VencProcShowModuleParam [R_ARM_CALL: .text+0x66c0] 
    /*000076c0*/ MOV         R0, R9 
    /*000076c4*/ BL          0x00000000000076C4          @ VencProcShowChnlAttr [R_ARM_CALL: .text+0x6754] 
    /*000076c8*/ MOV         R0, R9 
    /*000076cc*/ BL          0x00000000000076CC          @ VencProcShowReciveStatus [R_ARM_CALL: .text+0x6bfc] 
    /*000076d0*/ MOV         R0, R9 
    /*000076d4*/ BL          0x00000000000076D4          @ VencProcShowChnlInfo [R_ARM_CALL: .text+0x7284] 
    /*000076d8*/ MOV         R0, R9 
    /*000076dc*/ BL          0x00000000000076DC          @ VencProcShowCropInfo [R_ARM_CALL: .text+0x73f8] 
    /*000076e0*/ MOVT        SL, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000076e4*/ MOV         R0, R9 
    /*000076e8*/ MOVW        R1, #0                      @ .LC242 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x282c] 
    /*000076ec*/ MOVT        R1, #0                      @ .LC242 [R_ARM_MOVT_ABS: .rodata.str1.4+0x282c] 
    /*000076f0*/ BL          0x00000000000076F0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000076f4*/ MOVW        R2, #0                      @ .LC227 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x26b8] 
    /*000076f8*/ MOVW        R3, #0                      @ .LC228 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x26c0] 
    /*000076fc*/ MOVT        R2, #0                      @ .LC227 [R_ARM_MOVT_ABS: .rodata.str1.4+0x26b8] 
    /*00007700*/ MOVT        R3, #0                      @ .LC228 [R_ARM_MOVT_ABS: .rodata.str1.4+0x26c0] 
    /*00007704*/ STR         R2, [SP, #28] 
    /*00007708*/ STR         R3, [SP, #24] 
    /*0000770c*/ MOVW        R2, #0                      @ .LC147 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fdc] 
    /*00007710*/ MOVW        R3, #0                      @ .LC137 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f60] 
    /*00007714*/ MOVT        R2, #0                      @ .LC147 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fdc] 
    /*00007718*/ MOVT        R3, #0                      @ .LC137 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f60] 
    /*0000771c*/ STR         R2, [SP, #20] 
    /*00007720*/ STR         R3, [SP, #16] 
    /*00007724*/ MOVW        R2, #0                      @ .LC244 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28ac] 
    /*00007728*/ MOVW        R3, #0                      @ .LC245 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28b0] 
    /*0000772c*/ MOVT        R2, #0                      @ .LC244 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28ac] 
    /*00007730*/ MOVT        R3, #0                      @ .LC245 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28b0] 
    /*00007734*/ STR         R2, [SP, #12] 
    /*00007738*/ STR         R3, [SP, #8] 
    /*0000773c*/ MOVW        R2, #0                      @ .LC246 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28b8] 
    /*00007740*/ MOVW        R3, #0                      @ .LC247 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28c0] 
    /*00007744*/ MOVT        R2, #0                      @ .LC246 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28b8] 
    /*00007748*/ MOVT        R3, #0                      @ .LC247 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28c0] 
    /*0000774c*/ STR         R2, [SP, #4] 
    /*00007750*/ STR         R3, [SP] 
    /*00007754*/ MOV         R0, R9 
    /*00007758*/ MOVW        R3, #0                      @ .LC146 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fd4] 
    /*0000775c*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e10] 
    /*00007760*/ MOVT        R3, #0                      @ .LC146 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fd4] 
    /*00007764*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e10] 
    /*00007768*/ MOVW        R1, #0                      @ .LC243 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2880] 
    /*0000776c*/ MOVT        R1, #0                      @ .LC243 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2880] 
    /*00007770*/ BL          0x0000000000007770          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00007774*/ LDR         R3, [SL] 
    /*00007778*/ CMP         R3, #0 
    /*0000777c*/ BEQ         VencProcShow_x799c
    /*00007780*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00007784*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007788*/ MOV         R7, #0 
    /*0000778c*/ STR         R9, [SP, #36]               @ 0x24 
    /*00007790*/ MOV         R8, R7 
    /*00007794*/ MOV         R9, R3 
    VencProcShow_x7798:
    /*00007798*/ LDR         R3, [R9] 
    /*0000779c*/ ADD         R4, R3, R7 
    /*000077a0*/ LDR         R3, [R3, R7] 
    /*000077a4*/ CMP         R3, #0 
    /*000077a8*/ BEQ         VencProcShow_x7980
    /*000077ac*/ ADD         R5, R4, #13824              @ 0x3600 
    /*000077b0*/ MOVW        FP, #0                      @ .LC248 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28c8] 
    /*000077b4*/ ADD         R5, R5, #48                 @ 0x30 
    /*000077b8*/ MOVT        FP, #0                      @ .LC248 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28c8] 
    /*000077bc*/ MOV         R6, #0 
    /*000077c0*/ B           VencProcShow_x77d4
    VencProcShow_x77c4:
    /*000077c4*/ ADD         R6, R6, #1 
    /*000077c8*/ ADD         R5, R5, #32 
    /*000077cc*/ CMP         R6, #8 
    /*000077d0*/ BEQ         VencProcShow_x7848
    VencProcShow_x77d4:
    /*000077d4*/ LDR         R3, [R5] 
    /*000077d8*/ CMP         R3, #1 
    /*000077dc*/ BNE         VencProcShow_x77c4
    /*000077e0*/ LDR         IP, [R5, #16] 
    /*000077e4*/ MOVW        R1, #0                      @ .LC249 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28cc] 
    /*000077e8*/ LDR         LR, [PC, #464]              @ 0x00000000000079c0 
    /*000077ec*/ MOV         R3, FP 
    /*000077f0*/ MOVT        R1, #0                      @ .LC249 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28cc] 
    /*000077f4*/ MOV         R2, R8 
    /*000077f8*/ STR         IP, [SP, #28] 
    /*000077fc*/ ADD         R5, R5, #32 
    /*00007800*/ LDR         IP, [R5, #-20]              @ 0xffffffec 
    /*00007804*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00007808*/ STR         IP, [SP, #24] 
    /*0000780c*/ LDR         IP, [R5, #-8] 
    /*00007810*/ STR         IP, [SP, #20] 
    /*00007814*/ LDR         IP, [R5, #-12] 
    /*00007818*/ STR         IP, [SP, #16] 
    /*0000781c*/ LDR         IP, [R5, #-24]              @ 0xffffffe8 
    /*00007820*/ STR         IP, [SP, #12] 
    /*00007824*/ LDR         IP, [R5, #-28]              @ 0xffffffe4 
    /*00007828*/ STM         SP, {R6, LR} 
    /*0000782c*/ SUB         LR, LR, #2 
    /*00007830*/ ADD         R6, R6, #1 
    /*00007834*/ ADD         IP, LR, IP, LSL #1 
    /*00007838*/ STR         IP, [SP, #8] 
    /*0000783c*/ BL          0x000000000000783C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00007840*/ CMP         R6, #8 
    /*00007844*/ BNE         VencProcShow_x77d4
    VencProcShow_x7848:
    /*00007848*/ ADD         R5, R4, #14080              @ 0x3700 
    /*0000784c*/ MOVW        FP, #0                      @ .LC250 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28f4] 
    /*00007850*/ ADD         R5, R5, #48                 @ 0x30 
    /*00007854*/ MOVT        FP, #0                      @ .LC250 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28f4] 
    /*00007858*/ MOV         R6, #0 
    /*0000785c*/ B           VencProcShow_x7870
    VencProcShow_x7860:
    /*00007860*/ ADD         R6, R6, #1 
    /*00007864*/ ADD         R5, R5, #32 
    /*00007868*/ CMP         R6, #8 
    /*0000786c*/ BEQ         VencProcShow_x78e4
    VencProcShow_x7870:
    /*00007870*/ LDR         R3, [R5] 
    /*00007874*/ CMP         R3, #1 
    /*00007878*/ BNE         VencProcShow_x7860
    /*0000787c*/ LDR         IP, [R5, #16] 
    /*00007880*/ MOVW        R1, #0                      @ .LC249 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28cc] 
    /*00007884*/ LDR         LR, [PC, #308]              @ 0x00000000000079c0 
    /*00007888*/ MOV         R3, FP 
    /*0000788c*/ MOVT        R1, #0                      @ .LC249 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28cc] 
    /*00007890*/ MOV         R2, R8 
    /*00007894*/ STR         IP, [SP, #28] 
    /*00007898*/ ADD         R5, R5, #32 
    /*0000789c*/ LDR         IP, [R5, #-20]              @ 0xffffffec 
    /*000078a0*/ LDR         R0, [SP, #36]               @ 0x24 
    /*000078a4*/ STR         IP, [SP, #24] 
    /*000078a8*/ LDR         IP, [R5, #-8] 
    /*000078ac*/ STR         IP, [SP, #20] 
    /*000078b0*/ LDR         IP, [R5, #-12] 
    /*000078b4*/ STR         IP, [SP, #16] 
    /*000078b8*/ LDR         IP, [R5, #-24]              @ 0xffffffe8 
    /*000078bc*/ STR         IP, [SP, #12] 
    /*000078c0*/ LDR         IP, [R5, #-28]              @ 0xffffffe4 
    /*000078c4*/ STM         SP, {R6, LR} 
    /*000078c8*/ SUB         LR, LR, #2 
    /*000078cc*/ ADD         R6, R6, #1 
    /*000078d0*/ ADD         IP, LR, IP, LSL #1 
    /*000078d4*/ STR         IP, [SP, #8] 
    /*000078d8*/ BL          0x00000000000078D8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000078dc*/ CMP         R6, #8 
    /*000078e0*/ BNE         VencProcShow_x7870
    VencProcShow_x78e4:
    /*000078e4*/ ADD         R4, R4, #14336              @ 0x3800 
    /*000078e8*/ MOVW        R6, #0                      @ .LC251 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28f8] 
    /*000078ec*/ ADD         R4, R4, #48                 @ 0x30 
    /*000078f0*/ MOVT        R6, #0                      @ .LC251 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28f8] 
    /*000078f4*/ MOV         R5, #0 
    /*000078f8*/ B           VencProcShow_x790c
    VencProcShow_x78fc:
    /*000078fc*/ ADD         R5, R5, #1 
    /*00007900*/ ADD         R4, R4, #32 
    /*00007904*/ CMP         R5, #8 
    /*00007908*/ BEQ         VencProcShow_x7980
    VencProcShow_x790c:
    /*0000790c*/ LDR         R3, [R4] 
    /*00007910*/ CMP         R3, #1 
    /*00007914*/ BNE         VencProcShow_x78fc
    /*00007918*/ LDR         IP, [R4, #16] 
    /*0000791c*/ MOVW        R1, #0                      @ .LC249 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28cc] 
    /*00007920*/ LDR         LR, [PC, #152]              @ 0x00000000000079c0 
    /*00007924*/ MOV         R3, R6 
    /*00007928*/ MOVT        R1, #0                      @ .LC249 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28cc] 
    /*0000792c*/ MOV         R2, R8 
    /*00007930*/ STR         IP, [SP, #28] 
    /*00007934*/ ADD         R4, R4, #32 
    /*00007938*/ LDR         IP, [R4, #-20]              @ 0xffffffec 
    /*0000793c*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00007940*/ STR         IP, [SP, #24] 
    /*00007944*/ LDR         IP, [R4, #-8] 
    /*00007948*/ STR         IP, [SP, #20] 
    /*0000794c*/ LDR         IP, [R4, #-12] 
    /*00007950*/ STR         IP, [SP, #16] 
    /*00007954*/ LDR         IP, [R4, #-24]              @ 0xffffffe8 
    /*00007958*/ STR         IP, [SP, #12] 
    /*0000795c*/ LDR         IP, [R4, #-28]              @ 0xffffffe4 
    /*00007960*/ STM         SP, {R5, LR} 
    /*00007964*/ SUB         LR, LR, #2 
    /*00007968*/ ADD         R5, R5, #1 
    /*0000796c*/ ADD         IP, LR, IP, LSL #1 
    /*00007970*/ STR         IP, [SP, #8] 
    /*00007974*/ BL          0x0000000000007974          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00007978*/ CMP         R5, #8 
    /*0000797c*/ BNE         VencProcShow_x790c
    VencProcShow_x7980:
    /*00007980*/ LDR         R3, [SL] 
    /*00007984*/ ADD         R8, R8, #1 
    /*00007988*/ ADD         R7, R7, #36096              @ 0x8d00 
    /*0000798c*/ CMP         R8, R3 
    /*00007990*/ ADD         R7, R7, #144                @ 0x90 
    /*00007994*/ BCC         VencProcShow_x7798
    /*00007998*/ LDR         R9, [SP, #36]               @ 0x24 
    VencProcShow_x799c:
    /*0000799c*/ MOV         R0, R9 
    /*000079a0*/ MOVW        R1, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f08] 
    /*000079a4*/ MOVT        R1, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f08] 
    /*000079a8*/ BL          0x00000000000079A8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000079ac*/ MOV         R0, R9 
    /*000079b0*/ BL          0x00000000000079B0          @ VencProcShowStreamStatus [R_ARM_CALL: .text+0x7538] 
    /*000079b4*/ MOV         R0, #0 
    /*000079b8*/ ADD         SP, SP, #44                 @ 0x2c 
    /*000079bc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*000079c0*/ ANDEQ       R0, R0, R2, LSL R3 
FUNC_END VencProcShow


FUNC_BEGIN VencGetCurrentUniqueID
    /*000079c4*/ PUSH        {R4, R5, R6, LR} 
    /*000079c8*/ SUBS        R6, R1, #0 
    /*000079cc*/ SUB         SP, SP, #16 
    /*000079d0*/ MOV         R3, #0 
    /*000079d4*/ MOV         R5, R0 
    /*000079d8*/ STR         R3, [SP, #12] 
    /*000079dc*/ BEQ         VencGetCurrentUniqueID_x7a94
    VencGetCurrentUniqueID_x79e0:
    /*000079e0*/ MOV         R0, #19 
    /*000079e4*/ BL          0x00000000000079E4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000079e8*/ CMP         R0, #0 
    /*000079ec*/ BEQ         VencGetCurrentUniqueID_x7aa4
    /*000079f0*/ MOV         R0, #10 
    /*000079f4*/ BL          0x00000000000079F4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000079f8*/ SUBS        R4, R0, #0 
    /*000079fc*/ BEQ         VencGetCurrentUniqueID_x7a1c
    /*00007a00*/ MOV         R0, #10 
    /*00007a04*/ BL          0x0000000000007A04          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007a08*/ ADD         R1, SP, #12 
    /*00007a0c*/ LDR         R3, [R0, #128]              @ 0x80 
    /*00007a10*/ MOV         R0, R5 
    /*00007a14*/ BLX         R3 
    /*00007a18*/ LDR         R4, [SP, #12] 
    VencGetCurrentUniqueID_x7a1c:
    /*00007a1c*/ MOV         R0, #13 
    /*00007a20*/ BL          0x0000000000007A20          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007a24*/ CMP         R0, #0 
    /*00007a28*/ BEQ         VencGetCurrentUniqueID_x7a50
    /*00007a2c*/ MOV         R0, #13 
    /*00007a30*/ BL          0x0000000000007A30          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007a34*/ ADD         R1, SP, #12 
    /*00007a38*/ LDR         R3, [R0, #140]              @ 0x8c 
    /*00007a3c*/ MOV         R0, R5 
    /*00007a40*/ BLX         R3 
    /*00007a44*/ LDR         R3, [SP, #12] 
    /*00007a48*/ CMP         R4, R3 
    /*00007a4c*/ MOVCC       R4, R3 
    VencGetCurrentUniqueID_x7a50:
    /*00007a50*/ MOV         R0, #11 
    /*00007a54*/ BL          0x0000000000007A54          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007a58*/ CMP         R0, #0 
    /*00007a5c*/ BEQ         VencGetCurrentUniqueID_x7a84
    /*00007a60*/ MOV         R0, #11 
    /*00007a64*/ BL          0x0000000000007A64          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007a68*/ ADD         R1, SP, #12 
    /*00007a6c*/ LDR         R3, [R0, #72]               @ 0x48 
    /*00007a70*/ MOV         R0, R5 
    /*00007a74*/ BLX         R3 
    /*00007a78*/ LDR         R3, [SP, #12] 
    /*00007a7c*/ CMP         R4, R3 
    /*00007a80*/ MOVCC       R4, R3 
    VencGetCurrentUniqueID_x7a84:
    /*00007a84*/ MOV         R0, #0 
    /*00007a88*/ STR         R4, [R6] 
    VencGetCurrentUniqueID_x7a8c:
    /*00007a8c*/ ADD         SP, SP, #16 
    /*00007a90*/ POP         {R4, R5, R6, PC} 
    VencGetCurrentUniqueID_x7a94:
    /*00007a94*/ BL          0x00000000000002C8 
    /*00007a98*/ CMP         R0, #0 
    /*00007a9c*/ BNE         VencGetCurrentUniqueID_x7a8c
    /*00007aa0*/ B           VencGetCurrentUniqueID_x79e0
    VencGetCurrentUniqueID_x7aa4:
    /*00007aa4*/ MOV         R2, #19 
    /*00007aa8*/ MOVW        R3, #4489                   @ 0x1189 
    /*00007aac*/ STR         R2, [SP, #4] 
    /*00007ab0*/ MOV         R1, #8 
    /*00007ab4*/ STR         R3, [SP] 
    /*00007ab8*/ MOVW        R2, #0                      @ .LC118 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c70] 
    /*00007abc*/ LDR         R3, [PC, #20]               @ 0x0000000000007ad8 
    /*00007ac0*/ MOVT        R2, #0                      @ .LC118 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c70] 
    /*00007ac4*/ MOV         R0, #3 
    /*00007ac8*/ BL          0x0000000000007AC8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007acc*/ MOVW        R0, #32784                  @ 0x8010 
    /*00007ad0*/ MOVT        R0, #40968                  @ 0xa008 
    /*00007ad4*/ B           VencGetCurrentUniqueID_x7a8c
    /*00007ad8*/ ANDEQ       R0, R0, R4, LSL R3 
FUNC_END VencGetCurrentUniqueID


FUNC_BEGIN VencSetUniqueID
    /*00007adc*/ PUSH        {R4, R5, R6, LR} 
    /*00007ae0*/ SUB         SP, SP, #24 
    /*00007ae4*/ MOV         R5, R1 
    /*00007ae8*/ ADD         R1, SP, #20 
    /*00007aec*/ MOV         R6, R0 
    /*00007af0*/ BL          0x0000000000007AF0          @ VencGetCurrentUniqueID [R_ARM_CALL: .text+0x79c4] 
    /*00007af4*/ SUBS        R4, R0, #0 
    /*00007af8*/ BNE         VencSetUniqueID_x7b68
    /*00007afc*/ MOVW        R3, #265                    @ 0x109 
    /*00007b00*/ CMP         R5, R3 
    /*00007b04*/ BEQ         VencSetUniqueID_x7bb4
    /*00007b08*/ CMP         R5, #96                     @ 0x60 
    /*00007b0c*/ BEQ         VencSetUniqueID_x7b94
    /*00007b10*/ MOV         R0, #11 
    /*00007b14*/ BL          0x0000000000007B14          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007b18*/ LDR         R1, [SP, #20] 
    /*00007b1c*/ LDR         R3, [R0, #68]               @ 0x44 
    /*00007b20*/ MOV         R0, R6 
    /*00007b24*/ BLX         R3 
    /*00007b28*/ MOV         R4, R0 
    VencSetUniqueID_x7b2c:
    /*00007b2c*/ CMP         R4, #0 
    /*00007b30*/ BEQ         VencSetUniqueID_x7b5c
    /*00007b34*/ MOVW        R3, #4549                   @ 0x11c5 
    /*00007b38*/ MOVW        R2, #0                      @ .LC253 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2938] 
    /*00007b3c*/ STR         R3, [SP] 
    /*00007b40*/ MOVT        R2, #0                      @ .LC253 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2938] 
    /*00007b44*/ STR         R5, [SP, #8] 
    /*00007b48*/ MOV         R1, #8 
    /*00007b4c*/ STR         R6, [SP, #4] 
    /*00007b50*/ MOV         R0, #3 
    /*00007b54*/ LDR         R3, [PC, #120]              @ 0x0000000000007bd4 
    /*00007b58*/ BL          0x0000000000007B58          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencSetUniqueID_x7b5c:
    /*00007b5c*/ MOV         R0, R4 
    /*00007b60*/ ADD         SP, SP, #24 
    /*00007b64*/ POP         {R4, R5, R6, PC} 
    VencSetUniqueID_x7b68:
    /*00007b68*/ MOVW        R3, #4529                   @ 0x11b1 
    /*00007b6c*/ MOV         R1, #8 
    /*00007b70*/ STR         R3, [SP] 
    /*00007b74*/ MOVW        R2, #0                      @ .LC252 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28fc] 
    /*00007b78*/ LDR         R3, [PC, #84]               @ 0x0000000000007bd4 
    /*00007b7c*/ MOVT        R2, #0                      @ .LC252 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28fc] 
    /*00007b80*/ MOV         R0, #3 
    /*00007b84*/ BL          0x0000000000007B84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007b88*/ MOV         R0, R4 
    /*00007b8c*/ ADD         SP, SP, #24 
    /*00007b90*/ POP         {R4, R5, R6, PC} 
    VencSetUniqueID_x7b94:
    /*00007b94*/ MOV         R0, #10 
    /*00007b98*/ BL          0x0000000000007B98          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007b9c*/ LDR         R1, [SP, #20] 
    /*00007ba0*/ LDR         R3, [R0, #124]              @ 0x7c 
    /*00007ba4*/ MOV         R0, R6 
    /*00007ba8*/ BLX         R3 
    /*00007bac*/ MOV         R4, R0 
    /*00007bb0*/ B           VencSetUniqueID_x7b2c
    VencSetUniqueID_x7bb4:
    /*00007bb4*/ MOV         R0, #13 
    /*00007bb8*/ BL          0x0000000000007BB8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007bbc*/ LDR         R1, [SP, #20] 
    /*00007bc0*/ LDR         R3, [R0, #136]              @ 0x88 
    /*00007bc4*/ MOV         R0, R6 
    /*00007bc8*/ BLX         R3 
    /*00007bcc*/ MOV         R4, R0 
    /*00007bd0*/ B           VencSetUniqueID_x7b2c
    /*00007bd4*/ ANDEQ       R0, R0, IP, LSR #6 
FUNC_END VencSetUniqueID


FUNC_BEGIN VencTransInputParm
    /*00007bd8*/ LDR         IP, [R0, #60]               @ 0x3c 
    /*00007bdc*/ CMP         IP, #11 
    /*00007be0*/ BEQ         VencTransInputParm_x7c9c
    /*00007be4*/ CMP         IP, #12 
    /*00007be8*/ BEQ         VencTransInputParm_x7c70
    /*00007bec*/ CMP         IP, #13 
    /*00007bf0*/ LDREQ       R1, [R1, #248]              @ 0xf8 
    /*00007bf4*/ BEQ         VencTransInputParm_x7c74
    /*00007bf8*/ CMP         IP, #14 
    /*00007bfc*/ BEQ         VencTransInputParm_x7c94
    /*00007c00*/ CMP         IP, #15 
    /*00007c04*/ BEQ         VencTransInputParm_x7c94
    /*00007c08*/ CMP         IP, #17 
    /*00007c0c*/ BEQ         VencTransInputParm_x7ca4
    /*00007c10*/ CMP         IP, #16 
    /*00007c14*/ BEQ         VencTransInputParm_x7c4c
    /*00007c18*/ CMP         IP, #1 
    /*00007c1c*/ BEQ         VencTransInputParm_x7c9c
    /*00007c20*/ CMP         IP, #2 
    /*00007c24*/ BEQ         VencTransInputParm_x7c94
    /*00007c28*/ CMP         IP, #3 
    /*00007c2c*/ LDREQ       R1, [R1, #252]              @ 0xfc 
    /*00007c30*/ BEQ         VencTransInputParm_x7c74
    /*00007c34*/ CMP         IP, #4 
    /*00007c38*/ BEQ         VencTransInputParm_x7c70
    /*00007c3c*/ CMP         IP, #5 
    /*00007c40*/ BEQ         VencTransInputParm_x7c70
    /*00007c44*/ CMP         IP, #7 
    /*00007c48*/ BEQ         VencTransInputParm_x7ca4
    VencTransInputParm_x7c4c:
    /*00007c4c*/ LDR         R1, [R0, #76]               @ 0x4c 
    /*00007c50*/ STR         R1, [R2] 
    /*00007c54*/ LDR         R2, [R0, #64]               @ 0x40 
    /*00007c58*/ STR         R2, [R3] 
    /*00007c5c*/ LDR         R2, [SP] 
    /*00007c60*/ LDR         R3, [R0, #72]               @ 0x48 
    /*00007c64*/ MOV         R0, #0 
    /*00007c68*/ STR         R3, [R2] 
    /*00007c6c*/ BX          LR 
    VencTransInputParm_x7c70:
    /*00007c70*/ LDR         R1, [R1, #236]              @ 0xec 
    VencTransInputParm_x7c74:
    /*00007c74*/ STR         R1, [R2] 
    /*00007c78*/ LDR         R2, [R0, #64]               @ 0x40 
    /*00007c7c*/ STR         R2, [R3] 
    /*00007c80*/ LDR         R2, [SP] 
    /*00007c84*/ LDR         R3, [R0, #76]               @ 0x4c 
    /*00007c88*/ MOV         R0, #0 
    /*00007c8c*/ STR         R3, [R2] 
    /*00007c90*/ BX          LR 
    VencTransInputParm_x7c94:
    /*00007c94*/ LDR         R1, [R1, #240]              @ 0xf0 
    /*00007c98*/ B           VencTransInputParm_x7c74
    VencTransInputParm_x7c9c:
    /*00007c9c*/ LDR         R1, [R1, #228]              @ 0xe4 
    /*00007ca0*/ B           VencTransInputParm_x7c74
    VencTransInputParm_x7ca4:
    /*00007ca4*/ MOV         R1, #51                     @ 0x33 
    /*00007ca8*/ B           VencTransInputParm_x7c74
FUNC_END VencTransInputParm


FUNC_BEGIN VencCreateChnByType
    /*00007cac*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00007cb0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00007cb4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00007cb8*/ MOV         R4, R1 
    /*00007cbc*/ LDR         R1, [R1] 
    /*00007cc0*/ MOVW        R2, #265                    @ 0x109 
    /*00007cc4*/ LDR         R3, [R3] 
    /*00007cc8*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00007ccc*/ CMP         R1, R2 
    /*00007cd0*/ SUB         SP, SP, #296                @ 0x128 
    /*00007cd4*/ MOV         R7, R0 
    /*00007cd8*/ ADD         R8, R4, #100                @ 0x64 
    /*00007cdc*/ ADD         R9, R4, #60                 @ 0x3c 
    /*00007ce0*/ MLA         R5, R5, R0, R3 
    /*00007ce4*/ BEQ         VencCreateChnByType_x81e0
    /*00007ce8*/ BHI         VencCreateChnByType_x7e64
    /*00007cec*/ CMP         R1, #26 
    /*00007cf0*/ BEQ         VencCreateChnByType_x7ff0
    /*00007cf4*/ CMP         R1, #96                     @ 0x60 
    /*00007cf8*/ BNE         VencCreateChnByType_x7f8c
    /*00007cfc*/ BL          0x0000000000007CFC          @ VencSetUniqueID [R_ARM_CALL: .text+0x7adc] 
    /*00007d00*/ SUBS        R6, R0, #0 
    /*00007d04*/ BNE         VencCreateChnByType_x7fc4
    /*00007d08*/ LDR         R1, [R4, #24] 
    /*00007d0c*/ ADD         SL, R5, #12992              @ 0x32c0 
    /*00007d10*/ LDR         R2, [R4, #28] 
    /*00007d14*/ MOV         R0, #19 
    /*00007d18*/ LDR         R3, [R4, #32] 
    /*00007d1c*/ ADD         SL, SL, #28 
    /*00007d20*/ STR         R1, [SP, #32] 
    /*00007d24*/ STR         R2, [SP, #36]               @ 0x24 
    /*00007d28*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00007d2c*/ STR         R9, [SP, #24] 
    /*00007d30*/ STR         R8, [SP, #28] 
    /*00007d34*/ STR         SL, [SP, #40]               @ 0x28 
    /*00007d38*/ BL          0x0000000000007D38          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007d3c*/ ADD         R1, SP, #24 
    /*00007d40*/ LDR         R3, [R0] 
    /*00007d44*/ MOV         R0, R7 
    /*00007d48*/ BLX         R3 
    /*00007d4c*/ SUBS        R6, R0, #0 
    /*00007d50*/ BNE         VencCreateChnByType_x81b4
    /*00007d54*/ ADD         R2, SP, #20 
    /*00007d58*/ MOV         R1, SL 
    /*00007d5c*/ STR         R2, [SP] 
    /*00007d60*/ ADD         R3, SP, #16 
    /*00007d64*/ ADD         R2, SP, #12 
    /*00007d68*/ MOV         R0, R4 
    /*00007d6c*/ BL          0x0000000000007D6C          @ VencTransInputParm [R_ARM_CALL: .text+0x7bd8] 
    /*00007d70*/ SUBS        R6, R0, #0 
    /*00007d74*/ BNE         VencCreateChnByType_x8354
    /*00007d78*/ LDR         LR, [SP, #12] 
    /*00007d7c*/ ADD         R3, R5, #12800              @ 0x3200 
    /*00007d80*/ LDR         IP, [SP, #16] 
    /*00007d84*/ ADD         R3, R3, #16 
    /*00007d88*/ LDR         R2, [SP, #20] 
    /*00007d8c*/ LDR         R1, [R4, #28] 
    /*00007d90*/ LDR         R0, [R4, #24] 
    /*00007d94*/ STR         R3, [SP, #48]               @ 0x30 
    /*00007d98*/ STR         LR, [SP, #56]               @ 0x38 
    /*00007d9c*/ STR         IP, [SP, #60]               @ 0x3c 
    /*00007da0*/ STR         R4, [SP, #68]               @ 0x44 
    /*00007da4*/ STR         R8, [SP, #52]               @ 0x34 
    /*00007da8*/ BL          0x0000000000007DA8          @ VencGetAvcTileNum [R_ARM_CALL: .text+0x26998] 
    /*00007dac*/ STR         R0, [SP, #64]               @ 0x40 
    /*00007db0*/ MOV         R0, #10 
    /*00007db4*/ BL          0x0000000000007DB4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007db8*/ ADD         R1, SP, #48                 @ 0x30 
    /*00007dbc*/ LDR         R3, [R0] 
    /*00007dc0*/ MOV         R0, R7 
    /*00007dc4*/ BLX         R3 
    /*00007dc8*/ SUBS        R6, R0, #0 
    /*00007dcc*/ BNE         VencCreateChnByType_x83f8
    /*00007dd0*/ ADD         R2, R5, #32768              @ 0x8000 
    /*00007dd4*/ LDR         R1, [SP, #12] 
    /*00007dd8*/ ADD         R3, R5, #12288              @ 0x3000 
    /*00007ddc*/ MOV         R0, #6 
    /*00007de0*/ STR         R6, [R2, #3300]             @ 0xce4 
    /*00007de4*/ MOV         IP, #4 
    /*00007de8*/ STR         R6, [R2, #3308]             @ 0xcec 
    /*00007dec*/ STR         R6, [R2, #3304]             @ 0xce8 
    /*00007df0*/ LDR         LR, [SP, #64]               @ 0x40 
    /*00007df4*/ STR         LR, [R2, #3296]             @ 0xce0 
    /*00007df8*/ STR         R1, [R3, #1024]             @ 0x400 
    /*00007dfc*/ STR         R6, [R3, #1004]             @ 0x3ec 
    /*00007e00*/ STR         R6, [R3, #1012]             @ 0x3f4 
    /*00007e04*/ STR         R6, [R3, #1016]             @ 0x3f8 
    /*00007e08*/ LDR         R1, [R4, #28] 
    /*00007e0c*/ ADD         R1, R1, #15 
    /*00007e10*/ LSR         R1, R1, R0 
    /*00007e14*/ STR         R1, [R3, #1020]             @ 0x3fc 
    /*00007e18*/ LDR         R1, [R4, #24] 
    /*00007e1c*/ STR         R1, [R3, #148]              @ 0x94 
    /*00007e20*/ LDR         R1, [R4, #28] 
    /*00007e24*/ STR         R1, [R3, #152]              @ 0x98 
    /*00007e28*/ LDR         R1, [R4, #4] 
    /*00007e2c*/ STR         R1, [R3, #1096]             @ 0x448 
    /*00007e30*/ LDR         R1, [R4, #8] 
    /*00007e34*/ STR         R1, [R3, #1100]             @ 0x44c 
    /*00007e38*/ LDR         R1, [R4, #16] 
    /*00007e3c*/ STR         R1, [R2, #3320]             @ 0xcf8 
    /*00007e40*/ LDR         R1, [R4, #100]              @ 0x64 
    /*00007e44*/ STR         R1, [R3, #608]              @ 0x260 
    /*00007e48*/ LDR         R3, [R4, #20] 
    /*00007e4c*/ STR         R3, [R5, #28] 
    /*00007e50*/ LDR         R3, [R4, #60]               @ 0x3c 
    /*00007e54*/ STR         IP, [R2, #3292]             @ 0xcdc 
    /*00007e58*/ STR         R0, [R2, #3288]             @ 0xcd8 
    /*00007e5c*/ STR         R3, [R2, #3332]             @ 0xd04 
    /*00007e60*/ B           VencCreateChnByType_x7f80
    VencCreateChnByType_x7e64:
    /*00007e64*/ MOVW        R3, #1002                   @ 0x3ea 
    /*00007e68*/ CMP         R1, R3 
    /*00007e6c*/ BEQ         VencCreateChnByType_x8098
    /*00007e70*/ MOVW        R3, #1006                   @ 0x3ee 
    /*00007e74*/ CMP         R1, R3 
    /*00007e78*/ BNE         VencCreateChnByType_x7f8c
    /*00007e7c*/ LDR         R1, [R4, #24] 
    /*00007e80*/ LDR         R2, [R4, #28] 
    /*00007e84*/ LDR         R3, [R4, #36]               @ 0x24 
    /*00007e88*/ LDR         LR, [R4, #16] 
    /*00007e8c*/ MOV         R0, R1 
    /*00007e90*/ LDR         IP, [R4, #12] 
    /*00007e94*/ STR         R1, [SP, #68]               @ 0x44 
    /*00007e98*/ MOV         R1, R2 
    /*00007e9c*/ STR         R2, [SP, #72]               @ 0x48 
    /*00007ea0*/ MOV         R2, R3 
    /*00007ea4*/ STR         R3, [SP, #80]               @ 0x50 
    /*00007ea8*/ LDR         R3, [R4, #4] 
    /*00007eac*/ STR         LR, [SP, #48]               @ 0x30 
    /*00007eb0*/ STR         IP, [SP, #56]               @ 0x38 
    /*00007eb4*/ LDR         LR, [R4, #8] 
    /*00007eb8*/ LDRB        IP, [R4, #32] 
    /*00007ebc*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00007ec0*/ LDRB        R3, [R4, #33]               @ 0x21 
    /*00007ec4*/ STR         LR, [SP, #64]               @ 0x40 
    /*00007ec8*/ STRB        IP, [SP, #76]               @ 0x4c 
    /*00007ecc*/ LDRB        LR, [R4, #34]               @ 0x22 
    /*00007ed0*/ LDRB        IP, [R4, #35]               @ 0x23 
    /*00007ed4*/ STRB        R3, [SP, #77]               @ 0x4d 
    /*00007ed8*/ LDR         R3, [R4, #40]               @ 0x28 
    /*00007edc*/ STRB        LR, [SP, #78]               @ 0x4e 
    /*00007ee0*/ STRB        IP, [SP, #79]               @ 0x4f 
    /*00007ee4*/ STR         R3, [SP, #84]               @ 0x54 
    /*00007ee8*/ BL          0x0000000000007EE8          @ VencGetProResTileNum [R_ARM_CALL: .text+0x26990] 
    /*00007eec*/ LDR         R1, [R4] 
    /*00007ef0*/ STR         R0, [SP, #52]               @ 0x34 
    /*00007ef4*/ MOV         R0, R7 
    /*00007ef8*/ BL          0x0000000000007EF8          @ VencSetUniqueID [R_ARM_CALL: .text+0x7adc] 
    /*00007efc*/ SUBS        R6, R0, #0 
    /*00007f00*/ MOVWNE      R3, #4989                   @ 0x137d 
    /*00007f04*/ BNE         VencCreateChnByType_x7fc8
    /*00007f08*/ MOV         R0, #44                     @ 0x2c 
    /*00007f0c*/ BL          0x0000000000007F0C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007f10*/ ADD         R2, R5, #12800              @ 0x3200 
    /*00007f14*/ ADD         R2, R2, #16 
    /*00007f18*/ ADD         R1, SP, #48                 @ 0x30 
    /*00007f1c*/ LDR         R3, [R0] 
    /*00007f20*/ MOV         R0, R7 
    /*00007f24*/ BLX         R3 
    /*00007f28*/ SUBS        R6, R0, #0 
    /*00007f2c*/ BNE         VencCreateChnByType_x839c
    /*00007f30*/ ADD         R1, R5, #8192               @ 0x2000 
    /*00007f34*/ ADD         R3, R5, #12288              @ 0x3000 
    /*00007f38*/ ADD         R2, R5, #32768              @ 0x8000 
    /*00007f3c*/ MOV         R0, #4 
    /*00007f40*/ STR         R6, [R1, #3768]             @ 0xeb8 
    VencCreateChnByType_x7f44:
    /*00007f44*/ LDR         IP, [R4, #24] 
    /*00007f48*/ MOV         R1, #6 
    /*00007f4c*/ STR         IP, [R3, #148]              @ 0x94 
    /*00007f50*/ LDR         IP, [R4, #28] 
    /*00007f54*/ STR         IP, [R3, #152]              @ 0x98 
    /*00007f58*/ LDR         IP, [R4, #4] 
    /*00007f5c*/ STR         IP, [R3, #1096]             @ 0x448 
    /*00007f60*/ LDR         IP, [R4, #8] 
    /*00007f64*/ STR         IP, [R3, #1100]             @ 0x44c 
    /*00007f68*/ LDR         R3, [R4, #20] 
    /*00007f6c*/ STR         R3, [R5, #28] 
    /*00007f70*/ STR         R0, [R2, #3292]             @ 0xcdc 
    /*00007f74*/ STR         R1, [R2, #3288]             @ 0xcd8 
    /*00007f78*/ LDR         R3, [R4, #16] 
    /*00007f7c*/ STR         R3, [R2, #3320]             @ 0xcf8 
    VencCreateChnByType_x7f80:
    /*00007f80*/ MOV         R0, R6 
    /*00007f84*/ ADD         SP, SP, #296                @ 0x128 
    /*00007f88*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencCreateChnByType_x7f8c:
    /*00007f8c*/ STR         R7, [SP, #4] 
    /*00007f90*/ MOVW        R3, #5017                   @ 0x1399 
    /*00007f94*/ MOV         R1, #8 
    /*00007f98*/ STR         R3, [SP] 
    /*00007f9c*/ MOVW        R2, #0                      @ .LC262 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b68] 
    /*00007fa0*/ LDR         R3, [PC, #1176]             @ 0x0000000000008440 
    /*00007fa4*/ MOVT        R2, #0                      @ .LC262 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b68] 
    /*00007fa8*/ MOV         R0, #3 
    /*00007fac*/ BL          0x0000000000007FAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007fb0*/ MOVW        R6, #32776                  @ 0x8008 
    /*00007fb4*/ MOVT        R6, #40968                  @ 0xa008 
    /*00007fb8*/ MOV         R0, R6 
    /*00007fbc*/ ADD         SP, SP, #296                @ 0x128 
    /*00007fc0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencCreateChnByType_x7fc4:
    /*00007fc4*/ MOVW        R3, #4806                   @ 0x12c6 
    VencCreateChnByType_x7fc8:
    /*00007fc8*/ STR         R3, [SP] 
    /*00007fcc*/ MOV         R1, #8 
    /*00007fd0*/ LDR         R3, [PC, #1128]             @ 0x0000000000008440 
    /*00007fd4*/ MOVW        R2, #0                      @ .LC254 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x297c] 
    /*00007fd8*/ MOV         R0, #3 
    /*00007fdc*/ MOVT        R2, #0                      @ .LC254 [R_ARM_MOVT_ABS: .rodata.str1.4+0x297c] 
    /*00007fe0*/ BL          0x0000000000007FE0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007fe4*/ MOV         R0, R6 
    /*00007fe8*/ ADD         SP, SP, #296                @ 0x128 
    /*00007fec*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencCreateChnByType_x7ff0:
    /*00007ff0*/ MOV         R2, #248                    @ 0xf8 
    /*00007ff4*/ MOV         R1, #0 
    /*00007ff8*/ ADD         R0, SP, #48                 @ 0x30 
    /*00007ffc*/ BL          0x0000000000007FFC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00008000*/ LDR         R1, [R4, #28] 
    /*00008004*/ LDMIB       R4, {R2, IP} 
    /*00008008*/ MOV         R0, R7 
    /*0000800c*/ LDR         R3, [R4, #24] 
    /*00008010*/ STR         R1, [SP, #72]               @ 0x48 
    /*00008014*/ LDR         R1, [R4, #20] 
    /*00008018*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000801c*/ STR         R2, [SP, #60]               @ 0x3c 
    /*00008020*/ LDR         R3, [R4, #12] 
    /*00008024*/ LDR         R2, [R4, #32] 
    /*00008028*/ STR         R1, [SP, #76]               @ 0x4c 
    /*0000802c*/ LDR         R1, [R4] 
    /*00008030*/ STR         R3, [SP, #56]               @ 0x38 
    /*00008034*/ MOV         R3, #0 
    /*00008038*/ STR         IP, [SP, #64]               @ 0x40 
    /*0000803c*/ STR         R3, [SP, #48]               @ 0x30 
    /*00008040*/ STR         R2, [SP, #80]               @ 0x50 
    /*00008044*/ BL          0x0000000000008044          @ VencSetUniqueID [R_ARM_CALL: .text+0x7adc] 
    /*00008048*/ SUBS        R6, R0, #0 
    /*0000804c*/ MOVWNE      R3, #4890                   @ 0x131a 
    /*00008050*/ BNE         VencCreateChnByType_x7fc8
    /*00008054*/ MOV         R0, #11 
    /*00008058*/ BL          0x0000000000008058          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000805c*/ ADD         R2, R5, #12800              @ 0x3200 
    /*00008060*/ ADD         R1, SP, #48                 @ 0x30 
    /*00008064*/ ADD         R2, R2, #16 
    /*00008068*/ LDR         R3, [R0] 
    /*0000806c*/ MOV         R0, R7 
    /*00008070*/ BLX         R3 
    /*00008074*/ SUBS        R6, R0, #0 
    /*00008078*/ BNE         VencCreateChnByType_x8378
    /*0000807c*/ LDR         IP, [SP, #80]               @ 0x50 
    /*00008080*/ ADD         R1, R5, #8192               @ 0x2000 
    /*00008084*/ ADD         R3, R5, #12288              @ 0x3000 
    /*00008088*/ ADD         R2, R5, #32768              @ 0x8000 
    /*0000808c*/ MOV         R0, #4 
    /*00008090*/ STR         IP, [R1, #3768]             @ 0xeb8 
    /*00008094*/ B           VencCreateChnByType_x7f44
    VencCreateChnByType_x8098:
    /*00008098*/ BL          0x0000000000008098          @ VencSetUniqueID [R_ARM_CALL: .text+0x7adc] 
    /*0000809c*/ SUBS        R6, R0, #0 
    /*000080a0*/ MOVWNE      R3, #4926                   @ 0x133e 
    /*000080a4*/ BNE         VencCreateChnByType_x7fc8
    /*000080a8*/ LDR         R1, [R4, #24] 
    /*000080ac*/ ADD         R3, R5, #12992              @ 0x32c0 
    /*000080b0*/ LDR         R2, [R4, #28] 
    /*000080b4*/ MOV         R0, #19 
    /*000080b8*/ ADD         R3, R3, #28 
    /*000080bc*/ STR         R9, [SP, #24] 
    /*000080c0*/ STR         R3, [SP, #40]               @ 0x28 
    /*000080c4*/ STR         R1, [SP, #32] 
    /*000080c8*/ STR         R2, [SP, #36]               @ 0x24 
    /*000080cc*/ STR         R8, [SP, #28] 
    /*000080d0*/ BL          0x00000000000080D0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000080d4*/ ADD         R1, SP, #24 
    /*000080d8*/ LDR         R3, [R0] 
    /*000080dc*/ MOV         R0, R7 
    /*000080e0*/ BLX         R3 
    /*000080e4*/ SUBS        R6, R0, #0 
    /*000080e8*/ MOVWNE      R3, #4939                   @ 0x134b 
    /*000080ec*/ BNE         VencCreateChnByType_x81b8
    /*000080f0*/ MOV         R1, R6 
    /*000080f4*/ MOV         R2, #248                    @ 0xf8 
    /*000080f8*/ ADD         R0, SP, #48                 @ 0x30 
    /*000080fc*/ BL          0x00000000000080FC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00008100*/ LDR         R1, [R4, #28] 
    /*00008104*/ LDR         R2, [R4, #24] 
    /*00008108*/ MOV         R0, #11 
    /*0000810c*/ LDMIB       R4, {R3, IP} 
    /*00008110*/ STR         R1, [SP, #72]               @ 0x48 
    /*00008114*/ STR         R2, [SP, #68]               @ 0x44 
    /*00008118*/ LDR         R1, [R4, #12] 
    /*0000811c*/ LDR         R2, [R4, #20] 
    /*00008120*/ STR         IP, [SP, #64]               @ 0x40 
    /*00008124*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00008128*/ MOV         R3, #1 
    /*0000812c*/ STR         R1, [SP, #56]               @ 0x38 
    /*00008130*/ STR         R2, [SP, #76]               @ 0x4c 
    /*00008134*/ STR         R3, [SP, #48]               @ 0x30 
    /*00008138*/ BL          0x0000000000008138          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000813c*/ ADD         R2, R5, #12800              @ 0x3200 
    /*00008140*/ ADD         R1, SP, #48                 @ 0x30 
    /*00008144*/ ADD         R2, R2, #16 
    /*00008148*/ LDR         R3, [R0] 
    /*0000814c*/ MOV         R0, R7 
    /*00008150*/ BLX         R3 
    /*00008154*/ SUBS        R6, R0, #0 
    /*00008158*/ BNE         VencCreateChnByType_x83c0
    /*0000815c*/ ADD         R3, R5, #12288              @ 0x3000 
    /*00008160*/ ADD         R2, R5, #32768              @ 0x8000 
    /*00008164*/ MOV         R0, #4 
    /*00008168*/ MOV         R1, #6 
    /*0000816c*/ STR         R6, [R3, #1004]             @ 0x3ec 
    /*00008170*/ LDR         IP, [R4, #24] 
    /*00008174*/ STR         IP, [R3, #148]              @ 0x94 
    /*00008178*/ LDR         IP, [R4, #28] 
    /*0000817c*/ STR         IP, [R3, #152]              @ 0x98 
    /*00008180*/ LDR         IP, [R4, #4] 
    /*00008184*/ STR         IP, [R3, #1096]             @ 0x448 
    /*00008188*/ LDR         IP, [R4, #8] 
    /*0000818c*/ STR         IP, [R3, #1100]             @ 0x44c 
    /*00008190*/ LDR         R3, [R4, #20] 
    /*00008194*/ STR         R3, [R5, #28] 
    /*00008198*/ STR         R0, [R2, #3292]             @ 0xcdc 
    /*0000819c*/ STR         R1, [R2, #3288]             @ 0xcd8 
    /*000081a0*/ LDR         R3, [R4, #16] 
    /*000081a4*/ STR         R3, [R2, #3320]             @ 0xcf8 
    /*000081a8*/ LDR         R3, [R4, #60]               @ 0x3c 
    /*000081ac*/ STR         R3, [R2, #3332]             @ 0xd04 
    /*000081b0*/ B           VencCreateChnByType_x7f80
    VencCreateChnByType_x81b4:
    /*000081b4*/ MOVW        R3, #4821                   @ 0x12d5 
    VencCreateChnByType_x81b8:
    /*000081b8*/ STR         R3, [SP] 
    /*000081bc*/ MOV         R1, #8 
    /*000081c0*/ LDR         R3, [PC, #632]              @ 0x0000000000008440 
    /*000081c4*/ MOVW        R2, #0                      @ .LC255 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x29b0] 
    /*000081c8*/ MOV         R0, #3 
    /*000081cc*/ MOVT        R2, #0                      @ .LC255 [R_ARM_MOVT_ABS: .rodata.str1.4+0x29b0] 
    /*000081d0*/ BL          0x00000000000081D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000081d4*/ MOV         R0, R6 
    /*000081d8*/ ADD         SP, SP, #296                @ 0x128 
    /*000081dc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencCreateChnByType_x81e0:
    /*000081e0*/ BL          0x00000000000081E0          @ VencSetUniqueID [R_ARM_CALL: .text+0x7adc] 
    /*000081e4*/ SUBS        R6, R0, #0 
    /*000081e8*/ MOVWNE      R3, #4729                   @ 0x1279 
    /*000081ec*/ BNE         VencCreateChnByType_x7fc8
    /*000081f0*/ LDR         R1, [R4, #24] 
    /*000081f4*/ ADD         SL, R5, #12992              @ 0x32c0 
    /*000081f8*/ LDR         R2, [R4, #28] 
    /*000081fc*/ MOV         R0, #19 
    /*00008200*/ LDR         R3, [R4, #32] 
    /*00008204*/ ADD         SL, SL, #28 
    /*00008208*/ STR         R1, [SP, #32] 
    /*0000820c*/ STR         R2, [SP, #36]               @ 0x24 
    /*00008210*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00008214*/ STR         R9, [SP, #24] 
    /*00008218*/ STR         R8, [SP, #28] 
    /*0000821c*/ STR         SL, [SP, #40]               @ 0x28 
    /*00008220*/ BL          0x0000000000008220          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00008224*/ ADD         R1, SP, #24 
    /*00008228*/ LDR         R3, [R0] 
    /*0000822c*/ MOV         R0, R7 
    /*00008230*/ BLX         R3 
    /*00008234*/ SUBS        R6, R0, #0 
    /*00008238*/ MOVWNE      R3, #4743                   @ 0x1287 
    /*0000823c*/ BNE         VencCreateChnByType_x81b8
    /*00008240*/ ADD         R2, SP, #20 
    /*00008244*/ ADD         R3, SP, #16 
    /*00008248*/ STR         R2, [SP] 
    /*0000824c*/ MOV         R1, SL 
    /*00008250*/ ADD         R2, SP, #12 
    /*00008254*/ MOV         R0, R4 
    /*00008258*/ BL          0x0000000000008258          @ VencTransInputParm [R_ARM_CALL: .text+0x7bd8] 
    /*0000825c*/ SUBS        R6, R0, #0 
    /*00008260*/ MOVWNE      R3, #4752                   @ 0x1290 
    /*00008264*/ BNE         VencCreateChnByType_x8358
    /*00008268*/ LDR         LR, [SP, #12] 
    /*0000826c*/ ADD         R3, R5, #12800              @ 0x3200 
    /*00008270*/ LDR         IP, [SP, #16] 
    /*00008274*/ ADD         R3, R3, #16 
    /*00008278*/ LDR         R2, [SP, #20] 
    /*0000827c*/ LDR         R1, [R4, #28] 
    /*00008280*/ LDR         R0, [R4, #24] 
    /*00008284*/ STR         R3, [SP, #48]               @ 0x30 
    /*00008288*/ STR         LR, [SP, #56]               @ 0x38 
    /*0000828c*/ STR         IP, [SP, #60]               @ 0x3c 
    /*00008290*/ STR         R4, [SP, #68]               @ 0x44 
    /*00008294*/ STR         R8, [SP, #52]               @ 0x34 
    /*00008298*/ BL          0x0000000000008298          @ VencGetHevcTileNum [R_ARM_CALL: .text+0x269a0] 
    /*0000829c*/ STR         R0, [SP, #64]               @ 0x40 
    /*000082a0*/ MOV         R0, #13 
    /*000082a4*/ BL          0x00000000000082A4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000082a8*/ ADD         R1, SP, #48                 @ 0x30 
    /*000082ac*/ LDR         R3, [R0] 
    /*000082b0*/ MOV         R0, R7 
    /*000082b4*/ BLX         R3 
    /*000082b8*/ SUBS        R6, R0, #0 
    /*000082bc*/ BNE         VencCreateChnByType_x841c
    /*000082c0*/ ADD         R3, R5, #12288              @ 0x3000 
    /*000082c4*/ ADD         R2, R5, #32768              @ 0x8000 
    /*000082c8*/ LDR         LR, [SP, #12] 
    /*000082cc*/ MOV         IP, #4 
    /*000082d0*/ STR         R6, [R3, #1004]             @ 0x3ec 
    /*000082d4*/ MOV         R0, #6 
    /*000082d8*/ STR         R6, [R2, #3300]             @ 0xce4 
    /*000082dc*/ STR         R6, [R2, #3308]             @ 0xcec 
    /*000082e0*/ STR         R6, [R2, #3304]             @ 0xce8 
    /*000082e4*/ LDR         R1, [SP, #64]               @ 0x40 
    /*000082e8*/ STR         R1, [R2, #3296]             @ 0xce0 
    /*000082ec*/ LDR         R1, [R4, #28] 
    /*000082f0*/ STR         R6, [R3, #1016]             @ 0x3f8 
    /*000082f4*/ ADD         R1, R1, #63                 @ 0x3f 
    /*000082f8*/ STR         R6, [R3, #1012]             @ 0x3f4 
    /*000082fc*/ STR         LR, [R3, #1024]             @ 0x400 
    /*00008300*/ LSR         R1, R1, #8 
    /*00008304*/ STR         R1, [R3, #1020]             @ 0x3fc 
    /*00008308*/ LDR         R1, [R4, #24] 
    /*0000830c*/ STR         R1, [R3, #148]              @ 0x94 
    /*00008310*/ LDR         R1, [R4, #28] 
    /*00008314*/ STR         R1, [R3, #152]              @ 0x98 
    /*00008318*/ LDR         R1, [R4, #4] 
    /*0000831c*/ STR         R1, [R3, #1096]             @ 0x448 
    /*00008320*/ LDR         R1, [R4, #8] 
    /*00008324*/ STR         R1, [R3, #1100]             @ 0x44c 
    /*00008328*/ LDR         R1, [R4, #100]              @ 0x64 
    /*0000832c*/ STR         R1, [R3, #608]              @ 0x260 
    /*00008330*/ LDR         R3, [R4, #20] 
    /*00008334*/ STR         R3, [R5, #28] 
    /*00008338*/ LDR         R3, [R4, #16] 
    /*0000833c*/ STR         R3, [R2, #3320]             @ 0xcf8 
    /*00008340*/ LDR         R3, [R4, #60]               @ 0x3c 
    /*00008344*/ STR         IP, [R2, #3292]             @ 0xcdc 
    /*00008348*/ STR         R0, [R2, #3288]             @ 0xcd8 
    /*0000834c*/ STR         R3, [R2, #3332]             @ 0xd04 
    /*00008350*/ B           VencCreateChnByType_x7f80
    VencCreateChnByType_x8354:
    /*00008354*/ MOVW        R3, #4830                   @ 0x12de 
    VencCreateChnByType_x8358:
    /*00008358*/ STR         R3, [SP] 
    /*0000835c*/ MOVW        R2, #0                      @ .LC256 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x29e0] 
    /*00008360*/ LDR         R3, [PC, #216]              @ 0x0000000000008440 
    /*00008364*/ MOVT        R2, #0                      @ .LC256 [R_ARM_MOVT_ABS: .rodata.str1.4+0x29e0] 
    /*00008368*/ MOV         R1, #8 
    /*0000836c*/ MOV         R0, #3 
    /*00008370*/ BL          0x0000000000008370          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008374*/ B           VencCreateChnByType_x7f80
    VencCreateChnByType_x8378:
    /*00008378*/ MOVW        R3, #4900                   @ 0x1324 
    /*0000837c*/ MOVW        R2, #0                      @ .LC259 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2aa8] 
    /*00008380*/ STR         R3, [SP] 
    /*00008384*/ MOVT        R2, #0                      @ .LC259 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2aa8] 
    /*00008388*/ LDR         R3, [PC, #176]              @ 0x0000000000008440 
    /*0000838c*/ MOV         R1, #8 
    /*00008390*/ MOV         R0, #3 
    /*00008394*/ BL          0x0000000000008394          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008398*/ B           VencCreateChnByType_x7f80
    VencCreateChnByType_x839c:
    /*0000839c*/ MOVW        R3, #4998                   @ 0x1386 
    /*000083a0*/ MOVW        R2, #0                      @ .LC261 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b20] 
    /*000083a4*/ STR         R3, [SP] 
    /*000083a8*/ MOVT        R2, #0                      @ .LC261 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b20] 
    /*000083ac*/ LDR         R3, [PC, #140]              @ 0x0000000000008440 
    /*000083b0*/ MOV         R1, #8 
    /*000083b4*/ MOV         R0, #3 
    /*000083b8*/ BL          0x00000000000083B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000083bc*/ B           VencCreateChnByType_x7f80
    VencCreateChnByType_x83c0:
    /*000083c0*/ MOVW        R3, #4949                   @ 0x1355 
    /*000083c4*/ MOVW        R2, #0                      @ .LC260 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2aec] 
    /*000083c8*/ STR         R3, [SP] 
    /*000083cc*/ MOVT        R2, #0                      @ .LC260 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2aec] 
    /*000083d0*/ LDR         R3, [PC, #104]              @ 0x0000000000008440 
    /*000083d4*/ MOV         R1, #8 
    /*000083d8*/ MOV         R0, #3 
    /*000083dc*/ BL          0x00000000000083DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencCreateChnByType_x83e0:
    /*000083e0*/ MOV         R0, #19 
    /*000083e4*/ BL          0x00000000000083E4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000083e8*/ LDR         R3, [R0, #4] 
    /*000083ec*/ MOV         R0, R7 
    /*000083f0*/ BLX         R3 
    /*000083f4*/ B           VencCreateChnByType_x7f80
    VencCreateChnByType_x83f8:
    /*000083f8*/ MOVW        R3, #4846                   @ 0x12ee 
    /*000083fc*/ MOVW        R2, #0                      @ .LC258 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a60] 
    /*00008400*/ STR         R3, [SP] 
    /*00008404*/ MOVT        R2, #0                      @ .LC258 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a60] 
    /*00008408*/ LDR         R3, [PC, #48]               @ 0x0000000000008440 
    /*0000840c*/ MOV         R1, #8 
    /*00008410*/ MOV         R0, #3 
    /*00008414*/ BL          0x0000000000008414          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008418*/ B           VencCreateChnByType_x83e0
    VencCreateChnByType_x841c:
    /*0000841c*/ MOVW        R3, #4767                   @ 0x129f 
    /*00008420*/ MOVW        R2, #0                      @ .LC257 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a18] 
    /*00008424*/ STR         R3, [SP] 
    /*00008428*/ MOVT        R2, #0                      @ .LC257 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a18] 
    /*0000842c*/ LDR         R3, [PC, #12]               @ 0x0000000000008440 
    /*00008430*/ MOV         R1, #8 
    /*00008434*/ MOV         R0, #3 
    /*00008438*/ BL          0x0000000000008438          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000843c*/ B           VencCreateChnByType_x83e0
    /*00008440*/ ANDEQ       R0, R0, IP, LSR R3 
FUNC_END VencCreateChnByType


FUNC_BEGIN VencCreateChn
    /*00008444*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00008448*/ SUBS        R4, R0, #0 
    /*0000844c*/ SUB         SP, SP, #36                 @ 0x24 
    /*00008450*/ MOV         R5, R1 
    /*00008454*/ BLT         VencCreateChn_x84c8
    /*00008458*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000845c*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00008460*/ LDR         R3, [R3] 
    /*00008464*/ CMP         R4, R3 
    /*00008468*/ BCS         VencCreateChn_x84c8
    VencCreateChn_x846c:
    /*0000846c*/ CMP         R5, #0 
    /*00008470*/ BEQ         VencCreateChn_x86a0
    VencCreateChn_x8474:
    /*00008474*/ MOV         R0, #2 
    /*00008478*/ BL          0x0000000000008478          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000847c*/ CMP         R0, #0 
    /*00008480*/ BEQ         VencCreateChn_x8c94
    /*00008484*/ MOV         R0, #4 
    /*00008488*/ BL          0x0000000000008488          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000848c*/ CMP         R0, #0 
    /*00008490*/ BEQ         VencCreateChn_x866c
    /*00008494*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00008498*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000849c*/ MOV         R0, R5 
    /*000084a0*/ LDR         R6, [R3] 
    /*000084a4*/ BL          0x0000000000006374 
    /*000084a8*/ CMP         R0, #0 
    /*000084ac*/ BEQ         VencCreateChn_x84e4
    VencCreateChn_x84b0:
    /*000084b0*/ BIC         R8, R0, #267386880          @ 0xff00000 
    /*000084b4*/ BIC         R8, R8, #983040             @ 0xf0000 
    /*000084b8*/ ORR         R8, R8, #524288             @ 0x80000 
    VencCreateChn_x84bc:
    /*000084bc*/ MOV         R0, R8 
    /*000084c0*/ ADD         SP, SP, #36                 @ 0x24 
    /*000084c4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencCreateChn_x84c8:
    /*000084c8*/ MOV         R0, R4 
    /*000084cc*/ BL          0x0000000000000304 
    /*000084d0*/ SUBS        R8, R0, #0 
    /*000084d4*/ BEQ         VencCreateChn_x846c
    /*000084d8*/ MOV         R0, R8 
    /*000084dc*/ ADD         SP, SP, #36                 @ 0x24 
    /*000084e0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencCreateChn_x84e4:
    /*000084e4*/ MOV         R1, R5 
    /*000084e8*/ MOV         R0, R4 
    /*000084ec*/ LDR         R2, [R1], #100              @ 0x64 
    /*000084f0*/ BL          0x000000000000035C 
    /*000084f4*/ CMP         R0, #0 
    /*000084f8*/ BNE         VencCreateChn_x84b0
    /*000084fc*/ LDR         R1, [R5] 
    /*00008500*/ LDR         R0, [R5, #60]               @ 0x3c 
    /*00008504*/ BL          0x000000000000002C 
    /*00008508*/ CMP         R0, #0 
    /*0000850c*/ BNE         VencCreateChn_x84b0
    /*00008510*/ MOVW        R3, #36240                  @ 0x8d90 
    /*00008514*/ MUL         R8, R3, R4 
    /*00008518*/ ADD         R7, R6, R8 
    /*0000851c*/ ADD         R3, R7, #12416              @ 0x3080 
    /*00008520*/ ADD         R0, R3, #16 
    /*00008524*/ STR         R8, [SP, #16] 
    /*00008528*/ STR         R0, [SP, #12] 
    /*0000852c*/ BL          0x000000000000852C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008530*/ SUBS        R9, R0, #0 
    /*00008534*/ BNE         VencCreateChn_x8ef0
    /*00008538*/ LDR         R3, [R6, R8] 
    /*0000853c*/ CMP         R3, #1 
    /*00008540*/ BEQ         VencCreateChn_x8c64
    /*00008544*/ ADD         R3, R7, #11904              @ 0x2e80 
    /*00008548*/ ADD         R3, R3, #60                 @ 0x3c 
    /*0000854c*/ CMP         R3, #0 
    /*00008550*/ BEQ         VencCreateChn_x86b0
    /*00008554*/ ADD         R2, R7, #12288              @ 0x3000 
    /*00008558*/ ADD         R8, R7, #8192               @ 0x2000 
    /*0000855c*/ ADD         R0, R7, #12800              @ 0x3200 
    /*00008560*/ STR         R2, [SP, #8] 
    /*00008564*/ MOV         IP, R2 
    /*00008568*/ MOV         R1, #416                    @ 0x1a0 
    /*0000856c*/ ADD         R2, R3, #20 
    /*00008570*/ STR         R1, [R8, #3776]             @ 0xec0 
    /*00008574*/ STR         R2, [R8, #3792]             @ 0xed0 
    /*00008578*/ ADD         R1, R3, #28 
    /*0000857c*/ STR         R2, [R8, #3796]             @ 0xed4 
    /*00008580*/ ADD         R3, R3, #36                 @ 0x24 
    /*00008584*/ STR         R1, [R8, #3800]             @ 0xed8 
    /*00008588*/ MOV         R2, #32 
    /*0000858c*/ STR         R3, [R8, #3808]             @ 0xee0 
    /*00008590*/ ADD         R0, R0, #16 
    /*00008594*/ STR         R3, [R8, #3812]             @ 0xee4 
    /*00008598*/ STR         R1, [R8, #3804]             @ 0xedc 
    /*0000859c*/ MOV         R1, R9 
    /*000085a0*/ STR         R9, [R8, #3772]             @ 0xebc 
    /*000085a4*/ STR         R9, [R8, #3780]             @ 0xec4 
    /*000085a8*/ STR         R9, [R8, #3784]             @ 0xec8 
    /*000085ac*/ STR         R9, [R8, #3788]             @ 0xecc 
    /*000085b0*/ STR         R9, [R8, #3768]             @ 0xeb8 
    /*000085b4*/ STR         R9, [IP, #608]              @ 0x260 
    /*000085b8*/ BL          0x00000000000085B8          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000085bc*/ ADD         R0, R7, #11968              @ 0x2ec0 
    /*000085c0*/ MOV         R2, #88                     @ 0x58 
    /*000085c4*/ MOV         R1, R9 
    /*000085c8*/ ADD         R0, R0, #48                 @ 0x30 
    /*000085cc*/ BL          0x00000000000085CC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000085d0*/ ADD         R0, R7, #12096              @ 0x2f40 
    /*000085d4*/ MOV         R2, #56                     @ 0x38 
    /*000085d8*/ MOV         R1, R9 
    /*000085dc*/ ADD         R0, R0, #8 
    /*000085e0*/ BL          0x00000000000085E0          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000085e4*/ ADD         R0, R7, #12160              @ 0x2f80 
    /*000085e8*/ MOV         R2, #176                    @ 0xb0 
    /*000085ec*/ MOV         R1, R9 
    /*000085f0*/ ADD         R0, R0, #12 
    /*000085f4*/ BL          0x00000000000085F4          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000085f8*/ MOV         R2, #48                     @ 0x30 
    /*000085fc*/ MOV         R1, R9 
    /*00008600*/ ADD         R0, R7, #68                 @ 0x44 
    /*00008604*/ BL          0x0000000000008604          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00008608*/ ADD         R0, R7, #12288              @ 0x3000 
    /*0000860c*/ MOV         R2, #24 
    /*00008610*/ MOV         R1, R9 
    /*00008614*/ ADD         R0, R0, #60                 @ 0x3c 
    /*00008618*/ BL          0x0000000000008618          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000861c*/ MOV         R1, R5 
    /*00008620*/ MOV         R0, R4 
    /*00008624*/ BL          0x0000000000008624          @ VencCreateChnByType [R_ARM_CALL: .text+0x7cac] 
    /*00008628*/ SUBS        FP, R0, #0 
    /*0000862c*/ BEQ         VencCreateChn_x86e0
    /*00008630*/ MOVW        R3, #5140                   @ 0x1414 
    /*00008634*/ STR         R4, [SP, #4] 
    /*00008638*/ STR         R3, [SP] 
    /*0000863c*/ MOVW        R2, #0                      @ .LC264 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bd8] 
    /*00008640*/ LDR         R3, [PC, #2432]             @ 0x0000000000008fc8 
    /*00008644*/ MOVT        R2, #0                      @ .LC264 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bd8] 
    /*00008648*/ MOV         R1, #8 
    /*0000864c*/ MOV         R0, #3 
    /*00008650*/ BL          0x0000000000008650          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008654*/ BIC         R8, FP, #267386880          @ 0xff00000 
    /*00008658*/ BIC         R8, R8, #983040             @ 0xf0000 
    /*0000865c*/ ORR         R8, R8, #524288             @ 0x80000 
    VencCreateChn_x8660:
    /*00008660*/ LDR         R0, [SP, #12] 
    /*00008664*/ BL          0x0000000000008664          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008668*/ B           VencCreateChn_x84bc
    VencCreateChn_x866c:
    /*0000866c*/ MOV         R2, #4 
    /*00008670*/ MOVW        R3, #5080                   @ 0x13d8 
    VencCreateChn_x8674:
    /*00008674*/ STR         R2, [SP, #4] 
    /*00008678*/ MOV         R1, #8 
    /*0000867c*/ STR         R3, [SP] 
    /*00008680*/ MOVW        R2, #0                      @ .LC118 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c70] 
    /*00008684*/ LDR         R3, [PC, #2364]             @ 0x0000000000008fc8 
    /*00008688*/ MOVT        R2, #0                      @ .LC118 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c70] 
    /*0000868c*/ MOV         R0, #3 
    /*00008690*/ MOVW        R8, #32784                  @ 0x8010 
    /*00008694*/ BL          0x0000000000008694          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008698*/ MOVT        R8, #40968                  @ 0xa008 
    /*0000869c*/ B           VencCreateChn_x84bc
    VencCreateChn_x86a0:
    /*000086a0*/ BL          0x00000000000002C8 
    /*000086a4*/ SUBS        R8, R0, #0 
    /*000086a8*/ BNE         VencCreateChn_x84bc
    /*000086ac*/ B           VencCreateChn_x8474
    VencCreateChn_x86b0:
    /*000086b0*/ MOVW        R3, #5122                   @ 0x1402 
    /*000086b4*/ STR         R4, [SP, #4] 
    /*000086b8*/ STR         R3, [SP] 
    /*000086bc*/ MOVW        R2, #0                      @ .LC267 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c84] 
    /*000086c0*/ LDR         R3, [PC, #2304]             @ 0x0000000000008fc8 
    /*000086c4*/ MOVT        R2, #0                      @ .LC267 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c84] 
    /*000086c8*/ MOV         R1, #8 
    /*000086cc*/ MOV         R0, #3 
    /*000086d0*/ MOVW        R8, #32781                  @ 0x800d 
    /*000086d4*/ BL          0x00000000000086D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000086d8*/ MOVT        R8, #40968                  @ 0xa008 
    /*000086dc*/ B           VencCreateChn_x8660
    VencCreateChn_x86e0:
    /*000086e0*/ ADD         R0, R7, #12864              @ 0x3240 
    /*000086e4*/ MOV         R2, #116                    @ 0x74 
    /*000086e8*/ MOV         R1, R5 
    /*000086ec*/ ADD         R0, R0, #40                 @ 0x28 
    /*000086f0*/ BL          0x00000000000086F0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000086f4*/ MOVW        R2, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*000086f8*/ MOVT        R2, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*000086fc*/ LDR         R0, [SP, #8] 
    /*00008700*/ STR         R9, [R8, #3968]             @ 0xf80 
    /*00008704*/ MVN         R3, #0 
    /*00008708*/ LDR         R2, [R2] 
    /*0000870c*/ MOV         R1, #83886080               @ 0x5000000 
    /*00008710*/ STR         R9, [R8, #3816]             @ 0xee8 
    /*00008714*/ STR         R9, [R7, #20] 
    /*00008718*/ STR         R9, [R7, #16] 
    /*0000871c*/ STR         R9, [R7, #24] 
    /*00008720*/ STR         R9, [R0, #568]              @ 0x238 
    /*00008724*/ STR         R9, [R0, #572]              @ 0x23c 
    /*00008728*/ STR         R9, [R0, #592]              @ 0x250 
    /*0000872c*/ STR         R9, [R0, #96]               @ 0x60 
    /*00008730*/ STR         R9, [R0, #100]              @ 0x64 
    /*00008734*/ STR         R9, [R0, #104]              @ 0x68 
    /*00008738*/ STR         R9, [R0, #108]              @ 0x6c 
    /*0000873c*/ STR         R9, [R0, #600]              @ 0x258 
    /*00008740*/ STR         R9, [R8, #3972]             @ 0xf84 
    /*00008744*/ STR         R3, [R8, #3976]             @ 0xf88 
    /*00008748*/ STR         R3, [R0, #560]              @ 0x230 
    /*0000874c*/ STR         R3, [R0, #564]              @ 0x234 
    /*00008750*/ STR         R9, [R0, #1028]             @ 0x404 
    /*00008754*/ STR         R9, [R0, #1036]             @ 0x40c 
    /*00008758*/ STR         R9, [R0, #1040]             @ 0x410 
    /*0000875c*/ STR         R1, [R0, #1032]             @ 0x408 
    /*00008760*/ LDRB        R3, [R2, #40]               @ 0x28 
    /*00008764*/ CMP         R3, #2 
    /*00008768*/ BHI         VencCreateChn_x8d94
    /*0000876c*/ MOV         R3, #0 
    VencCreateChn_x8770:
    /*00008770*/ LDR         R1, [SP, #8] 
    /*00008774*/ MOV         R2, #1 
    /*00008778*/ STR         R3, [R1, #1056]             @ 0x420 
    /*0000877c*/ MOV         R3, #0 
    /*00008780*/ STR         R2, [R1, #596]              @ 0x254 
    /*00008784*/ STR         R3, [R1, #1060]             @ 0x424 
    /*00008788*/ MOVW        R1, #265                    @ 0x109 
    /*0000878c*/ LDR         R2, [R5] 
    /*00008790*/ STR         R2, [R7, #4] 
    /*00008794*/ LDR         R2, [R5] 
    /*00008798*/ CMP         R2, R1 
    /*0000879c*/ MOVEQ       R3, #2 
    /*000087a0*/ BEQ         VencCreateChn_x87b8
    /*000087a4*/ BHI         VencCreateChn_x8e58
    /*000087a8*/ CMP         R2, #26 
    /*000087ac*/ BEQ         VencCreateChn_x8ee8
    /*000087b0*/ CMP         R2, #96                     @ 0x60 
    /*000087b4*/ BNE         VencCreateChn_x8e74
    VencCreateChn_x87b8:
    /*000087b8*/ LDR         SL, [SP, #8] 
    /*000087bc*/ ADD         R2, R7, #32768              @ 0x8000 
    /*000087c0*/ MOVW        IP, #12448                  @ 0x30a0 
    /*000087c4*/ STR         R3, [R7, #8] 
    /*000087c8*/ MOV         LR, R2 
    /*000087cc*/ MOV         R3, #0 
    /*000087d0*/ STR         R2, [SP, #24] 
    /*000087d4*/ MOV         R0, #0 
    /*000087d8*/ STR         R3, [R7, #12] 
    /*000087dc*/ MOV         R2, #1 
    /*000087e0*/ STR         R3, [SL, #176]              @ 0xb0 
    /*000087e4*/ MOV         R1, #0 
    /*000087e8*/ STR         R3, [SL, #168]              @ 0xa8 
    /*000087ec*/ MOV         FP, #0 
    /*000087f0*/ STRD        R0, [R7, IP] 
    /*000087f4*/ MOV         R1, #6 
    /*000087f8*/ STR         R2, [R7, #32] 
    /*000087fc*/ MVN         R0, #0 
    /*00008800*/ STR         R2, [R7, #36]               @ 0x24 
    /*00008804*/ STR         R2, [R7, #40]               @ 0x28 
    /*00008808*/ STR         R2, [R7, #44]               @ 0x2c 
    /*0000880c*/ STR         R2, [R7, #48]               @ 0x30 
    /*00008810*/ MOVW        R2, #265                    @ 0x109 
    /*00008814*/ STR         R3, [SL, #84]               @ 0x54 
    /*00008818*/ STR         R3, [R7, #52]               @ 0x34 
    /*0000881c*/ STR         R1, [LR, #3316]             @ 0xcf4 
    /*00008820*/ MOV         LR, #0 
    /*00008824*/ STR         R0, [SL, #88]               @ 0x58 
    /*00008828*/ STR         R0, [SL, #92]               @ 0x5c 
    /*0000882c*/ ADD         R0, R7, #13376              @ 0x3440 
    /*00008830*/ LDR         R3, [R5] 
    /*00008834*/ ADD         R0, R0, #48                 @ 0x30 
    /*00008838*/ LDR         IP, [SP, #8] 
    /*0000883c*/ CMP         R3, R2 
    /*00008840*/ CMPNE       R3, #96                     @ 0x60 
    /*00008844*/ MOVEQ       R2, SL 
    /*00008848*/ MOVEQ       R3, #0 
    /*0000884c*/ STREQ       R1, [R2, #1048]             @ 0x418 
    /*00008850*/ MOVNE       R3, #1 
    /*00008854*/ STREQ       R3, [R2, #1044]             @ 0x414 
    /*00008858*/ MOVEQ       R3, #16 
    /*0000885c*/ STREQ       R3, [R2, #1052]             @ 0x41c 
    /*00008860*/ MOVW        R3, #13408                  @ 0x3460 
    /*00008864*/ ADD         R2, R7, R3 
    /*00008868*/ STR         LR, [IP, #1108]             @ 0x454 
    /*0000886c*/ MOV         SL, #0 
    /*00008870*/ MOV         R1, LR 
    /*00008874*/ STRD        SL, [R2, #-8] 
    /*00008878*/ MOV         R2, #440                    @ 0x1b8 
    /*0000887c*/ STRD        SL, [R7, R3] 
    /*00008880*/ MOV         R3, IP 
    /*00008884*/ STR         LR, [R3, #1128]             @ 0x468 
    /*00008888*/ STR         LR, [R3, #1132]             @ 0x46c 
    /*0000888c*/ ADD         R3, R7, #120                @ 0x78 
    /*00008890*/ STR         R3, [SP, #20] 
    /*00008894*/ BL          0x0000000000008894          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00008898*/ ADD         R3, R7, #3632               @ 0xe30 
    /*0000889c*/ ADD         R0, R7, #13824              @ 0x3600 
    /*000088a0*/ ADD         R0, R0, #44                 @ 0x2c 
    /*000088a4*/ MOV         SL, R3 
    /*000088a8*/ BL          0x00000000000088A8          @ VencInitRoiCfg [R_ARM_CALL: .text+0x8a4] 
    /*000088ac*/ ADD         R3, SL, #8 
    /*000088b0*/ ADD         R0, R7, #14080              @ 0x3700 
    /*000088b4*/ ADD         R0, R0, #44                 @ 0x2c 
    /*000088b8*/ MOV         SL, R3 
    /*000088bc*/ BL          0x00000000000088BC          @ VencInitRoiCfg [R_ARM_CALL: .text+0x8a4] 
    /*000088c0*/ ADD         R0, R7, #14336              @ 0x3800 
    /*000088c4*/ ADD         R0, R0, #44                 @ 0x2c 
    /*000088c8*/ BL          0x00000000000088C8          @ VencInitRoiCfg [R_ARM_CALL: .text+0x8a4] 
    /*000088cc*/ LDR         R3, [SP, #20] 
    /*000088d0*/ LDR         R2, [SP, #8] 
    /*000088d4*/ MOV         R1, #0 
    /*000088d8*/ MOV         FP, R3 
    /*000088dc*/ MOV         R0, R3 
    /*000088e0*/ MOV         R3, #1 
    /*000088e4*/ STR         R3, [R2, #1576]             @ 0x628 
    /*000088e8*/ MOV         R2, #3520                   @ 0xdc0 
    /*000088ec*/ BL          0x00000000000088EC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000088f0*/ MOV         R0, SL 
    /*000088f4*/ MOV         R1, #0 
    /*000088f8*/ MOV         R2, #24 
    /*000088fc*/ STR         SL, [SP, #20] 
    /*00008900*/ BL          0x0000000000008900          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00008904*/ ADD         R2, R7, #3664               @ 0xe50 
    /*00008908*/ MOV         R1, #0 
    /*0000890c*/ MOV         SL, R2 
    /*00008910*/ MOV         R0, R2 
    /*00008914*/ MOV         R2, #24 
    /*00008918*/ BL          0x0000000000008918          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000891c*/ RSB         IP, FP, #560                @ 0x230 
    /*00008920*/ LDR         R0, [SP, #20] 
    /*00008924*/ MOV         R3, #0 
    /*00008928*/ STR         SL, [R7, #3708]             @ 0xe7c 
    /*0000892c*/ MOV         LR, #6 
    /*00008930*/ LDR         SL, [SP, #8] 
    /*00008934*/ MOV         R1, FP 
    /*00008938*/ MOV         FP, IP 
    /*0000893c*/ STR         LR, [R7, #3692]             @ 0xe6c 
    /*00008940*/ MOV         IP, LR 
    /*00008944*/ STR         LR, [R7, #3712]             @ 0xe80 
    /*00008948*/ MOV         R2, R3 
    /*0000894c*/ MOV         LR, FP 
    /*00008950*/ STR         R0, [R7, #3688]             @ 0xe68 
    /*00008954*/ STR         R3, [R7, #3700]             @ 0xe74 
    /*00008958*/ STR         R3, [R7, #3716]             @ 0xe84 
    /*0000895c*/ STR         R3, [R7, #3720]             @ 0xe88 
    /*00008960*/ STR         R3, [R7, #3724]             @ 0xe8c 
    VencCreateChn_x8964:
    /*00008964*/ SUB         R2, R2, #1 
    /*00008968*/ ADD         R3, R3, #1 
    /*0000896c*/ CMN         R2, #1 
    /*00008970*/ SUBEQ       R2, IP, #1 
    /*00008974*/ CMP         R3, #6 
    /*00008978*/ STR         R1, [R0, R2, LSL #2] 
    /*0000897c*/ STR         R2, [R7, #3696]             @ 0xe70 
    /*00008980*/ STR         R3, [R7, #3704]             @ 0xe78 
    /*00008984*/ BEQ         VencCreateChn_x8a28
    /*00008988*/ LDR         IP, [R7, #3692]             @ 0xe6c 
    /*0000898c*/ CMP         IP, R3 
    /*00008990*/ BGT         VencCreateChn_x8a18
    /*00008994*/ MOVW        R3, #5225                   @ 0x1469 
    /*00008998*/ STR         R4, [SP, #4] 
    VencCreateChn_x899c:
    /*0000899c*/ MOVW        R2, #0                      @ .LC268 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2cbc] 
    /*000089a0*/ MOVT        R2, #0                      @ .LC268 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2cbc] 
    /*000089a4*/ STR         R3, [SP] 
    VencCreateChn_x89a8:
    /*000089a8*/ LDR         R3, [PC, #1560]             @ 0x0000000000008fc8 
    /*000089ac*/ MOV         R1, #8 
    /*000089b0*/ MOV         R0, #3 
    /*000089b4*/ MVN         R8, #0 
    /*000089b8*/ BL          0x00000000000089B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencCreateChn_x89bc:
    /*000089bc*/ LDR         R3, [R5] 
    /*000089c0*/ MOVW        R2, #265                    @ 0x109 
    /*000089c4*/ CMP         R3, R2 
    /*000089c8*/ BEQ         VencCreateChn_x8f98
    /*000089cc*/ BHI         VencCreateChn_x8ea0
    /*000089d0*/ CMP         R3, #26 
    /*000089d4*/ BEQ         VencCreateChn_x8ed0
    /*000089d8*/ CMP         R3, #96                     @ 0x60 
    /*000089dc*/ BNE         VencCreateChn_x8f68
    /*000089e0*/ MOV         R0, #10 
    /*000089e4*/ BL          0x00000000000089E4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000089e8*/ LDR         R3, [R0, #4] 
    /*000089ec*/ MOV         R0, R4 
    /*000089f0*/ BLX         R3 
    VencCreateChn_x89f4:
    /*000089f4*/ MOV         R0, #19 
    /*000089f8*/ BIC         R8, R8, #267386880          @ 0xff00000 
    /*000089fc*/ BL          0x00000000000089FC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00008a00*/ BIC         R8, R8, #983040             @ 0xf0000 
    /*00008a04*/ ORR         R8, R8, #524288             @ 0x80000 
    /*00008a08*/ LDR         R3, [R0, #4] 
    /*00008a0c*/ MOV         R0, R4 
    /*00008a10*/ BLX         R3 
    /*00008a14*/ B           VencCreateChn_x8660
    VencCreateChn_x8a18:
    /*00008a18*/ ADD         R1, LR, R1 
    /*00008a1c*/ LDR         R0, [R7, #3688]             @ 0xe68 
    /*00008a20*/ ADD         R1, R7, R1 
    /*00008a24*/ B           VencCreateChn_x8964
    VencCreateChn_x8a28:
    /*00008a28*/ ADD         R0, R7, #14592              @ 0x3900 
    /*00008a2c*/ MOVW        R2, #21392                  @ 0x5390 
    /*00008a30*/ MOV         R1, #0 
    /*00008a34*/ ADD         R0, R0, #48                 @ 0x30 
    /*00008a38*/ STR         R3, [SP, #20] 
    /*00008a3c*/ MOV         FP, #1 
    /*00008a40*/ STR         SL, [SP, #8] 
    /*00008a44*/ BL          0x0000000000008A44          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00008a48*/ MOV         R3, #0 
    /*00008a4c*/ ADD         R0, R7, #12416              @ 0x3080 
    /*00008a50*/ MOV         R1, R3 
    /*00008a54*/ MOV         R2, #320                    @ 0x140 
    /*00008a58*/ STR         R3, [SL, #112]              @ 0x70 
    /*00008a5c*/ ADD         R0, R0, #56                 @ 0x38 
    /*00008a60*/ STR         R3, [SL, #580]              @ 0x244 
    /*00008a64*/ STR         R3, [SL, #584]              @ 0x248 
    /*00008a68*/ STR         FP, [SL, #1104]             @ 0x450 
    /*00008a6c*/ BL          0x0000000000008A6C          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00008a70*/ MOV         R3, #0 
    /*00008a74*/ MOV         R0, FP 
    /*00008a78*/ STR         R3, [SL, #504]              @ 0x1f8 
    /*00008a7c*/ BL          0x0000000000008A7C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00008a80*/ LDR         R2, [R0, #104]              @ 0x68 
    /*00008a84*/ MOV         R0, FP 
    /*00008a88*/ BLX         R2 
    /*00008a8c*/ LDR         R3, [SP, #20] 
    /*00008a90*/ CMP         R0, #0 
    /*00008a94*/ BEQ         VencCreateChn_x8b74
    /*00008a98*/ ADD         IP, R7, #3728               @ 0xe90 
    /*00008a9c*/ STR         R3, [SP, #28] 
    /*00008aa0*/ ADD         FP, R7, #6336               @ 0x18c0 
    /*00008aa4*/ ADD         R3, R7, #6336               @ 0x18c0 
    /*00008aa8*/ ADD         R3, R3, #56                 @ 0x38 
    /*00008aac*/ ADD         FP, FP, #32 
    /*00008ab0*/ MOV         R0, IP 
    /*00008ab4*/ MOV         R2, #2640                   @ 0xa50 
    /*00008ab8*/ MOV         R1, #0 
    /*00008abc*/ MOV         SL, R3 
    /*00008ac0*/ STR         IP, [SP, #20] 
    /*00008ac4*/ BL          0x0000000000008AC4          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00008ac8*/ MOV         R2, #24 
    /*00008acc*/ MOV         R1, #0 
    /*00008ad0*/ MOV         R0, FP 
    /*00008ad4*/ BL          0x0000000000008AD4          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00008ad8*/ MOV         R0, SL 
    /*00008adc*/ MOV         R2, #24 
    /*00008ae0*/ MOV         R1, #0 
    /*00008ae4*/ BL          0x0000000000008AE4          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00008ae8*/ LDR         IP, [SP, #20] 
    /*00008aec*/ ADD         R2, R7, #4096               @ 0x1000 
    /*00008af0*/ MOV         R1, #0 
    /*00008af4*/ RSB         R3, IP, #4160               @ 0x1040 
    /*00008af8*/ STR         SL, [R2, #2340]             @ 0x924 
    /*00008afc*/ MOV         R0, R3 
    /*00008b00*/ LDR         R3, [SP, #28] 
    /*00008b04*/ LDR         SL, [SP, #8] 
    /*00008b08*/ ADD         R0, R0, #8 
    /*00008b0c*/ STR         R0, [SP, #20] 
    /*00008b10*/ MOV         R0, R1 
    /*00008b14*/ MOV         LR, R3 
    /*00008b18*/ STR         FP, [R2, #2320]             @ 0x910 
    /*00008b1c*/ STR         R3, [R2, #2324]             @ 0x914 
    /*00008b20*/ STR         R1, [R2, #2332]             @ 0x91c 
    /*00008b24*/ STR         R3, [R2, #2344]             @ 0x928 
    /*00008b28*/ STR         R1, [R2, #2348]             @ 0x92c 
    /*00008b2c*/ STR         R1, [R2, #2352]             @ 0x930 
    /*00008b30*/ STR         R1, [R2, #2356]             @ 0x934 
    VencCreateChn_x8b34:
    /*00008b34*/ SUB         R0, R0, #1 
    /*00008b38*/ ADD         R1, R1, #1 
    /*00008b3c*/ CMN         R0, #1 
    /*00008b40*/ SUBEQ       R0, LR, #1 
    /*00008b44*/ CMP         R1, #6 
    /*00008b48*/ STR         IP, [FP, R0, LSL #2] 
    /*00008b4c*/ STR         R0, [R2, #2328]             @ 0x918 
    /*00008b50*/ STR         R1, [R2, #2336]             @ 0x920 
    /*00008b54*/ BEQ         VencCreateChn_x8b70
    /*00008b58*/ LDR         LR, [R2, #2324]             @ 0x914 
    /*00008b5c*/ CMP         LR, R1 
    /*00008b60*/ BGT         VencCreateChn_x8da8
    /*00008b64*/ STR         R4, [SP, #4] 
    /*00008b68*/ MOVW        R3, #5254                   @ 0x1486 
    /*00008b6c*/ B           VencCreateChn_x899c
    VencCreateChn_x8b70:
    /*00008b70*/ STR         SL, [SP, #8] 
    VencCreateChn_x8b74:
    /*00008b74*/ ADD         FP, R7, #6400               @ 0x1900 
    /*00008b78*/ STR         R3, [SP, #28] 
    /*00008b7c*/ ADD         FP, FP, #56                 @ 0x38 
    /*00008b80*/ ADD         R3, R7, #9088               @ 0x2380 
    /*00008b84*/ ADD         IP, R3, #8 
    /*00008b88*/ ADD         R3, R3, #56                 @ 0x38 
    /*00008b8c*/ MOV         R2, #2640                   @ 0xa50 
    /*00008b90*/ MOV         R0, FP 
    /*00008b94*/ MOV         R1, #0 
    /*00008b98*/ MOV         SL, R3 
    /*00008b9c*/ STR         IP, [SP, #20] 
    /*00008ba0*/ BL          0x0000000000008BA0          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00008ba4*/ MOV         R2, #24 
    /*00008ba8*/ MOV         R1, #0 
    /*00008bac*/ LDR         R0, [SP, #20] 
    /*00008bb0*/ BL          0x0000000000008BB0          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00008bb4*/ MOV         R0, SL 
    /*00008bb8*/ MOV         R2, #24 
    /*00008bbc*/ MOV         R1, #0 
    /*00008bc0*/ BL          0x0000000000008BC0          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00008bc4*/ MOV         R3, #6 
    /*00008bc8*/ MOV         R1, FP 
    /*00008bcc*/ LDR         IP, [SP, #20] 
    /*00008bd0*/ RSB         LR, R1, #6848               @ 0x1ac0 
    /*00008bd4*/ STR         SL, [R8, #1020]             @ 0x3fc 
    /*00008bd8*/ STR         R3, [R8, #1004]             @ 0x3ec 
    /*00008bdc*/ MOV         R0, #0 
    /*00008be0*/ STR         R3, [R8, #1024]             @ 0x400 
    /*00008be4*/ ADD         LR, LR, #48                 @ 0x30 
    /*00008be8*/ LDR         R3, [SP, #28] 
    /*00008bec*/ MOV         FP, R0 
    /*00008bf0*/ LDR         SL, [SP, #8] 
    /*00008bf4*/ MOV         R2, R0 
    /*00008bf8*/ STR         IP, [R8, #1000]             @ 0x3e8 
    /*00008bfc*/ STR         R0, [R8, #1012]             @ 0x3f4 
    /*00008c00*/ STR         R0, [R8, #1028]             @ 0x404 
    /*00008c04*/ STR         R0, [R8, #1032]             @ 0x408 
    /*00008c08*/ STR         R0, [R8, #1036]             @ 0x40c 
    VencCreateChn_x8c0c:
    /*00008c0c*/ SUB         R2, R2, #1 
    /*00008c10*/ ADD         FP, FP, #1 
    /*00008c14*/ CMN         R2, #1 
    /*00008c18*/ SUBEQ       R2, R3, #1 
    /*00008c1c*/ CMP         FP, #6 
    /*00008c20*/ STR         R1, [IP, R2, LSL #2] 
    /*00008c24*/ STR         R2, [R8, #1008]             @ 0x3f0 
    /*00008c28*/ STR         FP, [R8, #1016]             @ 0x3f8 
    /*00008c2c*/ BEQ         VencCreateChn_x8ca0
    /*00008c30*/ LDR         R3, [R8, #1004]             @ 0x3ec 
    /*00008c34*/ CMP         R3, FP 
    /*00008c38*/ BGT         VencCreateChn_x8c54
    /*00008c3c*/ MOVW        R3, #5274                   @ 0x149a 
    /*00008c40*/ MOVW        R2, #0                      @ .LC269 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d00] 
    /*00008c44*/ STR         R4, [SP, #4] 
    /*00008c48*/ MOVT        R2, #0                      @ .LC269 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d00] 
    /*00008c4c*/ STR         R3, [SP] 
    /*00008c50*/ B           VencCreateChn_x89a8
    VencCreateChn_x8c54:
    /*00008c54*/ ADD         R1, LR, R1 
    /*00008c58*/ LDR         IP, [R8, #1000]             @ 0x3e8 
    /*00008c5c*/ ADD         R1, R7, R1 
    /*00008c60*/ B           VencCreateChn_x8c0c
    VencCreateChn_x8c64:
    /*00008c64*/ MOVW        R3, #5113                   @ 0x13f9 
    /*00008c68*/ STR         R4, [SP, #4] 
    /*00008c6c*/ STR         R3, [SP] 
    /*00008c70*/ MOVW        R2, #0                      @ .LC263 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ba0] 
    /*00008c74*/ LDR         R3, [PC, #844]              @ 0x0000000000008fc8 
    /*00008c78*/ MOVT        R2, #0                      @ .LC263 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ba0] 
    /*00008c7c*/ MOV         R1, #8 
    /*00008c80*/ MOV         R0, #3 
    /*00008c84*/ MOVW        R8, #32772                  @ 0x8004 
    /*00008c88*/ BL          0x0000000000008C88          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008c8c*/ MOVT        R8, #40968                  @ 0xa008 
    /*00008c90*/ B           VencCreateChn_x8660
    VencCreateChn_x8c94:
    /*00008c94*/ MOV         R2, #2 
    /*00008c98*/ MOVW        R3, #5079                   @ 0x13d7 
    /*00008c9c*/ B           VencCreateChn_x8674
    VencCreateChn_x8ca0:
    /*00008ca0*/ ADD         R2, R7, #11840              @ 0x2e40 
    /*00008ca4*/ ADD         R3, R7, #9216               @ 0x2400 
    /*00008ca8*/ ADD         R2, R2, #32 
    /*00008cac*/ ADD         R3, R3, #16 
    /*00008cb0*/ STR         SL, [SP, #8] 
    /*00008cb4*/ MOV         R1, #0 
    /*00008cb8*/ MOV         SL, R2 
    /*00008cbc*/ ADD         R2, R7, #11840              @ 0x2e40 
    /*00008cc0*/ MOV         R0, R3 
    /*00008cc4*/ STR         R3, [SP, #28] 
    /*00008cc8*/ MOV         IP, R2 
    /*00008ccc*/ MOV         R2, #2640                   @ 0xa50 
    /*00008cd0*/ ADD         R3, IP, #56                 @ 0x38 
    /*00008cd4*/ STR         R3, [SP, #20] 
    /*00008cd8*/ BL          0x0000000000008CD8          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00008cdc*/ MOV         R0, SL 
    /*00008ce0*/ MOV         R2, #24 
    /*00008ce4*/ MOV         R1, #0 
    /*00008ce8*/ BL          0x0000000000008CE8          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00008cec*/ MOV         R2, #24 
    /*00008cf0*/ MOV         R1, #0 
    /*00008cf4*/ LDR         R0, [SP, #20] 
    /*00008cf8*/ BL          0x0000000000008CF8          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00008cfc*/ LDR         R3, [SP, #28] 
    /*00008d00*/ LDR         R2, [SP, #20] 
    /*00008d04*/ MOV         R1, SL 
    /*00008d08*/ RSB         R0, R3, #9664               @ 0x25c0 
    /*00008d0c*/ STR         SL, [R8, #3728]             @ 0xe90 
    /*00008d10*/ LDR         SL, [SP, #8] 
    /*00008d14*/ MOV         IP, #0 
    /*00008d18*/ ADD         R0, R0, #8 
    /*00008d1c*/ STR         R2, [R8, #3748]             @ 0xea4 
    /*00008d20*/ MOV         R2, IP 
    /*00008d24*/ STR         FP, [R8, #3732]             @ 0xe94 
    /*00008d28*/ STR         FP, [R8, #3752]             @ 0xea8 
    /*00008d2c*/ STR         IP, [R8, #3740]             @ 0xe9c 
    /*00008d30*/ STR         IP, [R8, #3756]             @ 0xeac 
    /*00008d34*/ STR         IP, [R8, #3760]             @ 0xeb0 
    /*00008d38*/ STR         IP, [R8, #3764]             @ 0xeb4 
    VencCreateChn_x8d3c:
    /*00008d3c*/ SUB         R9, R9, #1 
    /*00008d40*/ ADD         R2, R2, #1 
    /*00008d44*/ CMN         R9, #1 
    /*00008d48*/ SUBEQ       R9, FP, #1 
    /*00008d4c*/ CMP         R2, #6 
    /*00008d50*/ STR         R3, [R1, R9, LSL #2] 
    /*00008d54*/ STR         R9, [R8, #3736]             @ 0xe98 
    /*00008d58*/ STR         R2, [R8, #3744]             @ 0xea0 
    /*00008d5c*/ BEQ         VencCreateChn_x8dbc
    /*00008d60*/ LDR         FP, [R8, #3732]             @ 0xe94 
    /*00008d64*/ CMP         FP, R2 
    /*00008d68*/ BGT         VencCreateChn_x8d84
    /*00008d6c*/ MOVW        R3, #5294                   @ 0x14ae 
    /*00008d70*/ MOVW        R2, #0                      @ .LC270 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d4c] 
    /*00008d74*/ STR         R4, [SP, #4] 
    /*00008d78*/ MOVT        R2, #0                      @ .LC270 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d4c] 
    /*00008d7c*/ STR         R3, [SP] 
    /*00008d80*/ B           VencCreateChn_x89a8
    VencCreateChn_x8d84:
    /*00008d84*/ ADD         R3, R0, R3 
    /*00008d88*/ LDR         R1, [R8, #3728]             @ 0xe90 
    /*00008d8c*/ ADD         R3, R7, R3 
    /*00008d90*/ B           VencCreateChn_x8d3c
    VencCreateChn_x8d94:
    /*00008d94*/ SUB         R3, R3, #5 
    /*00008d98*/ CMP         R3, #1 
    /*00008d9c*/ MOVLS       R3, #0 
    /*00008da0*/ MOVHI       R3, #1 
    /*00008da4*/ B           VencCreateChn_x8770
    VencCreateChn_x8da8:
    /*00008da8*/ LDR         FP, [SP, #20] 
    /*00008dac*/ ADD         IP, FP, IP 
    /*00008db0*/ LDR         FP, [R2, #2320]             @ 0x910 
    /*00008db4*/ ADD         IP, R7, IP 
    /*00008db8*/ B           VencCreateChn_x8b34
    VencCreateChn_x8dbc:
    /*00008dbc*/ MOV         R3, #0 
    /*00008dc0*/ STR         R3, [SL, #612]              @ 0x264 
    /*00008dc4*/ STR         R3, [SL, #508]              @ 0x1fc 
    /*00008dc8*/ STR         R3, [SL, #512]              @ 0x200 
    /*00008dcc*/ STR         R3, [SL, #516]              @ 0x204 
    /*00008dd0*/ STR         R3, [SL, #520]              @ 0x208 
    /*00008dd4*/ STR         R3, [SL, #524]              @ 0x20c 
    /*00008dd8*/ STR         R3, [SL, #128]              @ 0x80 
    /*00008ddc*/ LDR         R2, [R5] 
    /*00008de0*/ STR         SL, [SP, #8] 
    /*00008de4*/ CMP         R2, #26 
    /*00008de8*/ BEQ         VencCreateChn_x8fb0
    /*00008dec*/ LDR         R2, [SP, #24] 
    /*00008df0*/ STRB        R3, [R2, #3264]             @ 0xcc0 
    /*00008df4*/ STR         R3, [R2, #3268]             @ 0xcc4 
    /*00008df8*/ STR         R3, [R2, #3272]             @ 0xcc8 
    /*00008dfc*/ STR         R3, [R2, #3276]             @ 0xccc 
    /*00008e00*/ STR         R3, [R2, #3280]             @ 0xcd0 
    VencCreateChn_x8e04:
    /*00008e04*/ LDR         R2, [SP, #8] 
    /*00008e08*/ MVN         R3, #0 
    /*00008e0c*/ MOV         R0, R4 
    /*00008e10*/ STR         R3, [R2, #172]              @ 0xac 
    /*00008e14*/ MOV         R3, #0 
    /*00008e18*/ STR         R3, [R2, #180]              @ 0xb4 
    /*00008e1c*/ LDR         R2, [SP, #24] 
    /*00008e20*/ STR         R3, [R2, #3344]             @ 0xd10 
    /*00008e24*/ BL          0x0000000000008E24          @ VencReigster2Chnl [R_ARM_CALL: .text+0x1104] 
    /*00008e28*/ SUBS        R8, R0, #0 
    /*00008e2c*/ BEQ         VencCreateChn_x8efc
    /*00008e30*/ MOVW        R3, #5348                   @ 0x14e4 
    /*00008e34*/ STR         R4, [SP, #4] 
    /*00008e38*/ STR         R3, [SP] 
    /*00008e3c*/ MOVW        R2, #0                      @ .LC266 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c4c] 
    /*00008e40*/ LDR         R3, [PC, #384]              @ 0x0000000000008fc8 
    /*00008e44*/ MOVT        R2, #0                      @ .LC266 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c4c] 
    /*00008e48*/ MOV         R1, #8 
    /*00008e4c*/ MOV         R0, #3 
    /*00008e50*/ BL          0x0000000000008E50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008e54*/ B           VencCreateChn_x89bc
    VencCreateChn_x8e58:
    /*00008e58*/ MOVW        R3, #1002                   @ 0x3ea 
    /*00008e5c*/ CMP         R2, R3 
    /*00008e60*/ BEQ         VencCreateChn_x8ee8
    /*00008e64*/ MOVW        R3, #1006                   @ 0x3ee 
    /*00008e68*/ CMP         R2, R3 
    /*00008e6c*/ MOVEQ       R3, #6 
    /*00008e70*/ BEQ         VencCreateChn_x87b8
    VencCreateChn_x8e74:
    /*00008e74*/ STR         R2, [SP, #4] 
    /*00008e78*/ MOVW        R3, #4695                   @ 0x1257 
    /*00008e7c*/ MOVW        R2, #0                      @ .LC265 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c10] 
    /*00008e80*/ STR         R3, [SP] 
    /*00008e84*/ MOVT        R2, #0                      @ .LC265 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c10] 
    /*00008e88*/ LDR         R3, [PC, #316]              @ 0x0000000000008fcc 
    /*00008e8c*/ MOV         R1, #8 
    /*00008e90*/ MOV         R0, #3 
    /*00008e94*/ BL          0x0000000000008E94          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008e98*/ MOV         R3, #7 
    /*00008e9c*/ B           VencCreateChn_x87b8
    VencCreateChn_x8ea0:
    /*00008ea0*/ MOVW        R2, #1002                   @ 0x3ea 
    /*00008ea4*/ CMP         R3, R2 
    /*00008ea8*/ BEQ         VencCreateChn_x8ed0
    /*00008eac*/ MOVW        R2, #1006                   @ 0x3ee 
    /*00008eb0*/ CMP         R3, R2 
    /*00008eb4*/ BNE         VencCreateChn_x8f68
    /*00008eb8*/ MOV         R0, #44                     @ 0x2c 
    /*00008ebc*/ BL          0x0000000000008EBC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00008ec0*/ LDR         R3, [R0, #4] 
    /*00008ec4*/ MOV         R0, R4 
    /*00008ec8*/ BLX         R3 
    /*00008ecc*/ B           VencCreateChn_x89f4
    VencCreateChn_x8ed0:
    /*00008ed0*/ MOV         R0, #11 
    /*00008ed4*/ BL          0x0000000000008ED4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00008ed8*/ LDR         R3, [R0, #4] 
    /*00008edc*/ MOV         R0, R4 
    /*00008ee0*/ BLX         R3 
    /*00008ee4*/ B           VencCreateChn_x89f4
    VencCreateChn_x8ee8:
    /*00008ee8*/ MOV         R3, #4 
    /*00008eec*/ B           VencCreateChn_x87b8
    VencCreateChn_x8ef0:
    /*00008ef0*/ MOV         R8, #65024                  @ 0xfe00 
    /*00008ef4*/ MOVT        R8, #65535                  @ 0xffff 
    /*00008ef8*/ B           VencCreateChn_x84bc
    VencCreateChn_x8efc:
    /*00008efc*/ LDM         R5, {R0, R1, R2} 
    /*00008f00*/ BL          0x0000000000008F00          @ VencDrvConfigNnie [R_ARM_CALL: .text+0x26d90] 
    /*00008f04*/ MOV         R2, #1 
    /*00008f08*/ LDR         R1, [SP, #24] 
    /*00008f0c*/ LDR         R3, [SP, #16] 
    /*00008f10*/ LDR         IP, [SP, #8] 
    /*00008f14*/ LDR         R0, [SP, #12] 
    /*00008f18*/ STR         R2, [R6, R3] 
    /*00008f1c*/ STR         R8, [R1, #3284]             @ 0xcd4 
    /*00008f20*/ STR         R8, [R1, #3328]             @ 0xd00 
    /*00008f24*/ STR         R8, [R1, #3336]             @ 0xd08 
    /*00008f28*/ LDR         R3, [R5, #60]               @ 0x3c 
    /*00008f2c*/ CMP         R3, #17 
    /*00008f30*/ CMPNE       R3, #7 
    /*00008f34*/ MOVEQ       R3, #1 
    /*00008f38*/ MOVNE       R3, #0 
    /*00008f3c*/ STR         R3, [IP, #1008]             @ 0x3f0 
    /*00008f40*/ STR         R4, [R7, #56]               @ 0x38 
    /*00008f44*/ STR         R8, [R7, #16] 
    /*00008f48*/ STR         R8, [IP, #132]              @ 0x84 
    /*00008f4c*/ STR         R8, [IP, #140]              @ 0x8c 
    /*00008f50*/ STR         R8, [IP, #136]              @ 0x88 
    /*00008f54*/ STR         R2, [R1, #3360]             @ 0xd20 
    /*00008f58*/ STRB        R8, [R1, #3352]             @ 0xd18 
    /*00008f5c*/ STR         R8, [R1, #3356]             @ 0xd1c 
    /*00008f60*/ BL          0x0000000000008F60          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008f64*/ B           VencCreateChn_x84bc
    VencCreateChn_x8f68:
    /*00008f68*/ MOVW        R3, #5404                   @ 0x151c 
    /*00008f6c*/ STR         R4, [SP, #4] 
    /*00008f70*/ STR         R3, [SP] 
    /*00008f74*/ MOVW        R2, #0                      @ .LC262 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b68] 
    /*00008f78*/ LDR         R3, [PC, #72]               @ 0x0000000000008fc8 
    /*00008f7c*/ MOVT        R2, #0                      @ .LC262 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b68] 
    /*00008f80*/ MOV         R1, #8 
    /*00008f84*/ MOV         R0, #3 
    /*00008f88*/ MOVW        R8, #32776                  @ 0x8008 
    /*00008f8c*/ BL          0x0000000000008F8C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008f90*/ MOVT        R8, #40968                  @ 0xa008 
    /*00008f94*/ B           VencCreateChn_x8660
    VencCreateChn_x8f98:
    /*00008f98*/ MOV         R0, #13 
    /*00008f9c*/ BL          0x0000000000008F9C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00008fa0*/ LDR         R3, [R0, #4] 
    /*00008fa4*/ MOV         R0, R4 
    /*00008fa8*/ BLX         R3 
    /*00008fac*/ B           VencCreateChn_x89f4
    VencCreateChn_x8fb0:
    /*00008fb0*/ ADD         R0, R7, #35840              @ 0x8c00 
    /*00008fb4*/ MOV         R2, #20 
    /*00008fb8*/ ADD         R1, R5, #36                 @ 0x24 
    /*00008fbc*/ ADD         R0, R0, #192                @ 0xc0 
    /*00008fc0*/ BL          0x0000000000008FC0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00008fc4*/ B           VencCreateChn_x8e04
    /*00008fc8*/ ANDEQ       R0, R0, R0, ASR R3 
    /*00008fcc*/ ANDEQ       R0, R0, R0, ROR #6 
FUNC_END VencCreateChn


FUNC_BEGIN VencSetRcParam
    /*00008fd0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00008fd4*/ SUBS        R7, R1, #0 
    /*00008fd8*/ SUB         SP, SP, #36                 @ 0x24 
    /*00008fdc*/ MOV         R4, R0 
    /*00008fe0*/ BEQ         VencSetRcParam_x9134
    VencSetRcParam_x8fe4:
    /*00008fe4*/ CMP         R4, #0 
    /*00008fe8*/ BLT         VencSetRcParam_x90c8
    /*00008fec*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00008ff0*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00008ff4*/ LDR         R3, [R3] 
    /*00008ff8*/ CMP         R4, R3 
    /*00008ffc*/ BCS         VencSetRcParam_x90c8
    VencSetRcParam_x9000:
    /*00009000*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00009004*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00009008*/ MUL         R5, R5, R4 
    /*0000900c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00009010*/ LDR         R9, [R3] 
    /*00009014*/ ADD         R6, R9, R5 
    /*00009018*/ ADD         R8, R6, #12416              @ 0x3080 
    /*0000901c*/ ADD         R8, R8, #16 
    /*00009020*/ MOV         R0, R8 
    /*00009024*/ BL          0x0000000000009024          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00009028*/ CMP         R0, #0 
    /*0000902c*/ BNE         VencSetRcParam_x9144
    /*00009030*/ LDR         R9, [R9, R5] 
    /*00009034*/ CMP         R9, #1 
    /*00009038*/ BNE         VencSetRcParam_x91ac
    /*0000903c*/ LDR         R3, [R6, #4] 
    /*00009040*/ MOVW        R2, #1006                   @ 0x3ee 
    /*00009044*/ CMP         R3, R2 
    /*00009048*/ CMPNE       R3, #26 
    /*0000904c*/ BEQ         VencSetRcParam_x91e4
    /*00009050*/ MOV         R0, #19 
    /*00009054*/ BL          0x0000000000009054          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00009058*/ ADD         R2, R6, #12992              @ 0x32c0 
    /*0000905c*/ ADD         R1, R6, #12928              @ 0x3280 
    /*00009060*/ ADD         R2, R2, #12 
    /*00009064*/ ADD         R1, R1, #36                 @ 0x24 
    /*00009068*/ LDR         R3, [R0, #40]               @ 0x28 
    /*0000906c*/ MOV         R0, R7 
    /*00009070*/ BLX         R3 
    /*00009074*/ SUBS        R5, R0, #0 
    /*00009078*/ BEQ         VencSetRcParam_x90e4
    /*0000907c*/ MOVW        R3, #5867                   @ 0x16eb 
    /*00009080*/ MOV         R1, #8 
    /*00009084*/ STR         R3, [SP] 
    /*00009088*/ MOVW        R2, #0                      @ .LC272 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2de4] 
    /*0000908c*/ LDR         R3, [PC, #396]              @ 0x0000000000009220 
    /*00009090*/ MOVT        R2, #0                      @ .LC272 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2de4] 
    /*00009094*/ STR         R4, [SP, #4] 
    /*00009098*/ MOV         R0, #3 
    /*0000909c*/ BL          0x000000000000909C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000090a0*/ MOV         R0, R8 
    /*000090a4*/ BL          0x00000000000090A4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000090a8*/ CMN         R5, #512                    @ 0x200 
    /*000090ac*/ BEQ         VencSetRcParam_x9144
    VencSetRcParam_x90b0:
    /*000090b0*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*000090b4*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*000090b8*/ ORR         R5, R5, #524288             @ 0x80000 
    /*000090bc*/ MOV         R0, R5 
    /*000090c0*/ ADD         SP, SP, #36                 @ 0x24 
    /*000090c4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSetRcParam_x90c8:
    /*000090c8*/ MOV         R0, R4 
    /*000090cc*/ BL          0x0000000000000304 
    /*000090d0*/ SUBS        R5, R0, #0 
    /*000090d4*/ BEQ         VencSetRcParam_x9000
    VencSetRcParam_x90d8:
    /*000090d8*/ MOV         R0, R5 
    /*000090dc*/ ADD         SP, SP, #36                 @ 0x24 
    /*000090e0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSetRcParam_x90e4:
    /*000090e4*/ ADD         FP, R6, #64                 @ 0x40 
    /*000090e8*/ ADD         SL, R6, #12288              @ 0x3000 
    /*000090ec*/ ADD         R1, SP, #28 
    /*000090f0*/ MOV         R0, FP 
    /*000090f4*/ BL          0x00000000000090F4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000090f8*/ LDR         R3, [SL, #612]              @ 0x264 
    /*000090fc*/ CMP         R3, #0 
    /*00009100*/ BEQ         VencSetRcParam_x9150
    /*00009104*/ ADD         R0, R6, #12992              @ 0x32c0 
    /*00009108*/ MOV         R1, R7 
    /*0000910c*/ MOV         R2, #272                    @ 0x110 
    /*00009110*/ STR         R9, [SL, #1004]             @ 0x3ec 
    /*00009114*/ ADD         R0, R0, #28 
    /*00009118*/ BL          0x0000000000009118          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000911c*/ MOV         R0, FP 
    /*00009120*/ ADD         R1, SP, #28 
    /*00009124*/ BL          0x0000000000009124          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009128*/ MOV         R0, R8 
    /*0000912c*/ BL          0x000000000000912C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009130*/ B           VencSetRcParam_x90d8
    VencSetRcParam_x9134:
    /*00009134*/ BL          0x00000000000002C8 
    /*00009138*/ SUBS        R5, R0, #0 
    /*0000913c*/ BNE         VencSetRcParam_x90d8
    /*00009140*/ B           VencSetRcParam_x8fe4
    VencSetRcParam_x9144:
    /*00009144*/ MOV         R5, #65024                  @ 0xfe00 
    /*00009148*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000914c*/ B           VencSetRcParam_x90d8
    VencSetRcParam_x9150:
    /*00009150*/ MOV         R0, #19 
    /*00009154*/ STR         R3, [SP, #20] 
    /*00009158*/ BL          0x0000000000009158          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000915c*/ MOV         R1, R7 
    /*00009160*/ LDR         R2, [R0, #44]               @ 0x2c 
    /*00009164*/ MOV         R0, R4 
    /*00009168*/ BLX         R2 
    /*0000916c*/ LDR         R3, [SP, #20] 
    /*00009170*/ MOV         R2, #272                    @ 0x110 
    /*00009174*/ MOV         R1, R7 
    /*00009178*/ STR         R3, [SL, #1004]             @ 0x3ec 
    /*0000917c*/ MOV         R5, R0 
    /*00009180*/ ADD         R0, R6, #12992              @ 0x32c0 
    /*00009184*/ ADD         R0, R0, #28 
    /*00009188*/ BL          0x0000000000009188          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000918c*/ ADD         R1, SP, #28 
    /*00009190*/ MOV         R0, FP 
    /*00009194*/ BL          0x0000000000009194          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009198*/ MOV         R0, R8 
    /*0000919c*/ BL          0x000000000000919C          @ osal_up [R_ARM_CALL: +0x0] 
    /*000091a0*/ CMP         R5, #0 
    /*000091a4*/ BNE         VencSetRcParam_x90b0
    /*000091a8*/ B           VencSetRcParam_x90d8
    VencSetRcParam_x91ac:
    /*000091ac*/ MOVW        R3, #5852                   @ 0x16dc 
    /*000091b0*/ MOV         R1, #8 
    /*000091b4*/ STR         R3, [SP] 
    /*000091b8*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*000091bc*/ LDR         R3, [PC, #92]               @ 0x0000000000009220 
    /*000091c0*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*000091c4*/ STR         R4, [SP, #4] 
    /*000091c8*/ MOV         R0, #3 
    /*000091cc*/ BL          0x00000000000091CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000091d0*/ MOV         R0, R8 
    /*000091d4*/ MOVW        R5, #32773                  @ 0x8005 
    /*000091d8*/ BL          0x00000000000091D8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000091dc*/ MOVT        R5, #40968                  @ 0xa008 
    /*000091e0*/ B           VencSetRcParam_x90d8
    VencSetRcParam_x91e4:
    /*000091e4*/ STR         R3, [SP, #8] 
    /*000091e8*/ MOV         R1, #8 
    /*000091ec*/ MOVW        R3, #5859                   @ 0x16e3 
    /*000091f0*/ STR         R4, [SP, #4] 
    /*000091f4*/ STR         R3, [SP] 
    /*000091f8*/ MOVW        R2, #0                      @ .LC271 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d98] 
    /*000091fc*/ LDR         R3, [PC, #28]               @ 0x0000000000009220 
    /*00009200*/ MOVT        R2, #0                      @ .LC271 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d98] 
    /*00009204*/ MOV         R0, #3 
    /*00009208*/ MOVW        R5, #32776                  @ 0x8008 
    /*0000920c*/ BL          0x000000000000920C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009210*/ MOV         R0, R8 
    /*00009214*/ BL          0x0000000000009214          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009218*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000921c*/ B           VencSetRcParam_x90d8
    /*00009220*/ ANDEQ       R0, R0, R0, ROR R3 
FUNC_END VencSetRcParam


FUNC_BEGIN VencGetRcParam
    /*00009224*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00009228*/ SUBS        R6, R1, #0 
    /*0000922c*/ SUB         SP, SP, #20 
    /*00009230*/ MOV         R4, R0 
    /*00009234*/ BEQ         VencGetRcParam_x92ec
    VencGetRcParam_x9238:
    /*00009238*/ CMP         R4, #0 
    /*0000923c*/ BLT         VencGetRcParam_x92d4
    /*00009240*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00009244*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00009248*/ LDR         R3, [R3] 
    /*0000924c*/ CMP         R4, R3 
    /*00009250*/ BCS         VencGetRcParam_x92d4
    VencGetRcParam_x9254:
    /*00009254*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00009258*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000925c*/ MUL         R5, R5, R4 
    /*00009260*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00009264*/ LDR         R9, [R3] 
    /*00009268*/ ADD         R8, R9, R5 
    /*0000926c*/ ADD         R7, R8, #12416              @ 0x3080 
    /*00009270*/ ADD         R7, R7, #16 
    /*00009274*/ MOV         R0, R7 
    /*00009278*/ BL          0x0000000000009278          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000927c*/ CMP         R0, #0 
    /*00009280*/ BNE         VencGetRcParam_x9334
    /*00009284*/ LDR         R3, [R9, R5] 
    /*00009288*/ CMP         R3, #1 
    /*0000928c*/ BNE         VencGetRcParam_x92fc
    /*00009290*/ LDR         R3, [R8, #4] 
    /*00009294*/ MOVW        R0, #1006                   @ 0x3ee 
    /*00009298*/ CMP         R3, R0 
    /*0000929c*/ CMPNE       R3, #26 
    /*000092a0*/ MOVEQ       R5, #1 
    /*000092a4*/ MOVNE       R5, #0 
    /*000092a8*/ BEQ         VencGetRcParam_x9340
    /*000092ac*/ ADD         R1, R8, #12992              @ 0x32c0 
    /*000092b0*/ MOV         R2, #272                    @ 0x110 
    /*000092b4*/ ADD         R1, R1, #28 
    /*000092b8*/ MOV         R0, R6 
    /*000092bc*/ BL          0x00000000000092BC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000092c0*/ MOV         R0, R7 
    /*000092c4*/ BL          0x00000000000092C4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000092c8*/ MOV         R0, R5 
    /*000092cc*/ ADD         SP, SP, #20 
    /*000092d0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetRcParam_x92d4:
    /*000092d4*/ MOV         R0, R4 
    /*000092d8*/ BL          0x0000000000000304 
    /*000092dc*/ CMP         R0, #0 
    /*000092e0*/ BEQ         VencGetRcParam_x9254
    VencGetRcParam_x92e4:
    /*000092e4*/ ADD         SP, SP, #20 
    /*000092e8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetRcParam_x92ec:
    /*000092ec*/ BL          0x00000000000002C8 
    /*000092f0*/ CMP         R0, #0 
    /*000092f4*/ BNE         VencGetRcParam_x92e4
    /*000092f8*/ B           VencGetRcParam_x9238
    VencGetRcParam_x92fc:
    /*000092fc*/ MOVW        R3, #5912                   @ 0x1718 
    /*00009300*/ MOV         R1, #8 
    /*00009304*/ STR         R3, [SP] 
    /*00009308*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000930c*/ LDR         R3, [PC, #104]              @ 0x000000000000937c 
    /*00009310*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00009314*/ STR         R4, [SP, #4] 
    /*00009318*/ MOV         R0, #3 
    /*0000931c*/ BL          0x000000000000931C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009320*/ MOV         R0, R7 
    /*00009324*/ BL          0x0000000000009324          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009328*/ MOVW        R0, #32773                  @ 0x8005 
    /*0000932c*/ MOVT        R0, #40968                  @ 0xa008 
    /*00009330*/ B           VencGetRcParam_x92e4
    VencGetRcParam_x9334:
    /*00009334*/ MOV         R0, #65024                  @ 0xfe00 
    /*00009338*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000933c*/ B           VencGetRcParam_x92e4
    VencGetRcParam_x9340:
    /*00009340*/ STR         R3, [SP, #8] 
    /*00009344*/ MOV         R1, #8 
    /*00009348*/ MOVW        R3, #5919                   @ 0x171f 
    /*0000934c*/ STR         R4, [SP, #4] 
    /*00009350*/ STR         R3, [SP] 
    /*00009354*/ MOVW        R2, #0                      @ .LC273 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e24] 
    /*00009358*/ LDR         R3, [PC, #28]               @ 0x000000000000937c 
    /*0000935c*/ MOVT        R2, #0                      @ .LC273 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e24] 
    /*00009360*/ MOV         R0, #3 
    /*00009364*/ BL          0x0000000000009364          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009368*/ MOV         R0, R7 
    /*0000936c*/ BL          0x000000000000936C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009370*/ MOVW        R0, #32776                  @ 0x8008 
    /*00009374*/ MOVT        R0, #40968                  @ 0xa008 
    /*00009378*/ B           VencGetRcParam_x92e4
    /*0000937c*/ ANDEQ       R0, R0, R0, LSL #7 
FUNC_END VencGetRcParam


FUNC_BEGIN VencGetBufAddr
    /*00009380*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00009384*/ SUBS        R6, R1, #0 
    /*00009388*/ SUB         SP, SP, #8 
    /*0000938c*/ MOV         R4, R0 
    /*00009390*/ BEQ         VencGetBufAddr_x942c
    VencGetBufAddr_x9394:
    /*00009394*/ CMP         R4, #0 
    /*00009398*/ BLT         VencGetBufAddr_x9414
    /*0000939c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000093a0*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000093a4*/ LDR         R3, [R3] 
    /*000093a8*/ CMP         R4, R3 
    /*000093ac*/ BCS         VencGetBufAddr_x9414
    VencGetBufAddr_x93b0:
    /*000093b0*/ MOVW        R8, #36240                  @ 0x8d90 
    /*000093b4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000093b8*/ MUL         R8, R8, R4 
    /*000093bc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000093c0*/ LDR         R9, [R3] 
    /*000093c4*/ ADD         SL, R9, R8 
    /*000093c8*/ ADD         R7, SL, #12416              @ 0x3080 
    /*000093cc*/ ADD         R7, R7, #16 
    /*000093d0*/ MOV         R0, R7 
    /*000093d4*/ BL          0x00000000000093D4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000093d8*/ SUBS        R5, R0, #0 
    /*000093dc*/ BNE         VencGetBufAddr_x9474
    /*000093e0*/ LDR         R3, [R9, R8] 
    /*000093e4*/ CMP         R3, #1 
    /*000093e8*/ BNE         VencGetBufAddr_x943c
    /*000093ec*/ ADD         R1, SL, #12800              @ 0x3200 
    /*000093f0*/ MOV         R2, #32 
    /*000093f4*/ ADD         R1, R1, #16 
    /*000093f8*/ MOV         R0, R6 
    /*000093fc*/ BL          0x00000000000093FC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009400*/ MOV         R0, R7 
    /*00009404*/ BL          0x0000000000009404          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009408*/ MOV         R0, R5 
    /*0000940c*/ ADD         SP, SP, #8 
    /*00009410*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencGetBufAddr_x9414:
    /*00009414*/ MOV         R0, R4 
    /*00009418*/ BL          0x0000000000000304 
    /*0000941c*/ CMP         R0, #0 
    /*00009420*/ BEQ         VencGetBufAddr_x93b0
    VencGetBufAddr_x9424:
    /*00009424*/ ADD         SP, SP, #8 
    /*00009428*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencGetBufAddr_x942c:
    /*0000942c*/ BL          0x00000000000002C8 
    /*00009430*/ CMP         R0, #0 
    /*00009434*/ BNE         VencGetBufAddr_x9424
    /*00009438*/ B           VencGetBufAddr_x9394
    VencGetBufAddr_x943c:
    /*0000943c*/ MOVW        R3, #5964                   @ 0x174c 
    /*00009440*/ MOV         R1, #8 
    /*00009444*/ STR         R3, [SP] 
    /*00009448*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000944c*/ LDR         R3, [PC, #44]               @ 0x0000000000009480 
    /*00009450*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00009454*/ STR         R4, [SP, #4] 
    /*00009458*/ MOV         R0, #3 
    /*0000945c*/ BL          0x000000000000945C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009460*/ MOV         R0, R7 
    /*00009464*/ BL          0x0000000000009464          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009468*/ MOVW        R0, #32773                  @ 0x8005 
    /*0000946c*/ MOVT        R0, #40968                  @ 0xa008 
    /*00009470*/ B           VencGetBufAddr_x9424
    VencGetBufAddr_x9474:
    /*00009474*/ MOV         R0, #65024                  @ 0xfe00 
    /*00009478*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000947c*/ B           VencGetBufAddr_x9424
    /*00009480*/ MULEQ       R0, R0, R3 
FUNC_END VencGetBufAddr


FUNC_BEGIN VencStreamGetInfo
    /*00009484*/ PUSH        {R4, R5, LR} 
    /*00009488*/ MOVW        R2, #265                    @ 0x109 
    /*0000948c*/ LDR         R3, [R1, #4] 
    /*00009490*/ SUB         SP, SP, #12 
    /*00009494*/ MOV         R5, R0 
    /*00009498*/ CMP         R3, R2 
    /*0000949c*/ BEQ         VencStreamGetInfo_x9594
    /*000094a0*/ BHI         VencStreamGetInfo_x9548
    /*000094a4*/ CMP         R3, #26 
    /*000094a8*/ BEQ         VencStreamGetInfo_x961c
    /*000094ac*/ CMP         R3, #96                     @ 0x60 
    /*000094b0*/ BNE         VencStreamGetInfo_x95f0
    /*000094b4*/ ADD         R4, R1, #8192               @ 0x2000 
    /*000094b8*/ MOV         R2, #44                     @ 0x2c 
    /*000094bc*/ ADD         R0, R0, #12 
    /*000094c0*/ LDR         R1, [R4, #3816]             @ 0xee8 
    /*000094c4*/ ADD         R1, R1, #48                 @ 0x30 
    /*000094c8*/ BL          0x00000000000094C8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000094cc*/ LDR         R1, [R4, #3816]             @ 0xee8 
    /*000094d0*/ MOV         R2, #312                    @ 0x138 
    /*000094d4*/ ADD         R0, R5, #72                 @ 0x48 
    /*000094d8*/ ADD         R1, R1, #104                @ 0x68 
    /*000094dc*/ BL          0x00000000000094DC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000094e0*/ LDR         R3, [R4, #3968]             @ 0xf80 
    /*000094e4*/ STR         R3, [R4, #3920]             @ 0xf50 
    /*000094e8*/ LDR         R3, [R5, #36]               @ 0x24 
    /*000094ec*/ STR         R3, [R4, #3912]             @ 0xf48 
    /*000094f0*/ LDR         R3, [R5, #12] 
    /*000094f4*/ STR         R3, [R4, #3916]             @ 0xf4c 
    /*000094f8*/ LDR         R3, [R5, #52]               @ 0x34 
    /*000094fc*/ STR         R3, [R4, #3932]             @ 0xf5c 
    /*00009500*/ LDR         R3, [R5, #44]               @ 0x2c 
    /*00009504*/ STR         R3, [R4, #3924]             @ 0xf54 
    /*00009508*/ LDR         R3, [R5, #48]               @ 0x30 
    VencStreamGetInfo_x950c:
    /*0000950c*/ STR         R3, [R4, #3928]             @ 0xf58 
    /*00009510*/ LDR         R3, [R5, #76]               @ 0x4c 
    /*00009514*/ STR         R3, [R4, #3940]             @ 0xf64 
    /*00009518*/ LDR         R3, [R5, #72]               @ 0x48 
    /*0000951c*/ STR         R3, [R4, #3936]             @ 0xf60 
    /*00009520*/ LDR         R3, [R5, #80]               @ 0x50 
    /*00009524*/ STR         R3, [R4, #3944]             @ 0xf68 
    /*00009528*/ LDR         R3, [R5, #84]               @ 0x54 
    /*0000952c*/ STR         R3, [R4, #3948]             @ 0xf6c 
    /*00009530*/ LDR         R3, [R5, #100]              @ 0x64 
    /*00009534*/ STR         R3, [R4, #3952]             @ 0xf70 
    /*00009538*/ LDR         R3, [R5, #96]               @ 0x60 
    /*0000953c*/ STR         R3, [R4, #3956]             @ 0xf74 
    /*00009540*/ ADD         SP, SP, #12 
    /*00009544*/ POP         {R4, R5, PC} 
    VencStreamGetInfo_x9548:
    /*00009548*/ MOVW        R2, #1002                   @ 0x3ea 
    /*0000954c*/ CMP         R3, R2 
    /*00009550*/ BEQ         VencStreamGetInfo_x961c
    /*00009554*/ MOVW        R2, #1006                   @ 0x3ee 
    /*00009558*/ CMP         R3, R2 
    /*0000955c*/ ADDEQ       R4, R1, #8192               @ 0x2000 
    /*00009560*/ ADDEQ       R0, R0, #12 
    /*00009564*/ MOVEQ       R2, #8 
    /*00009568*/ BNE         VencStreamGetInfo_x95f0
    VencStreamGetInfo_x956c:
    /*0000956c*/ LDR         R1, [R4, #3816]             @ 0xee8 
    /*00009570*/ ADD         R1, R1, #48                 @ 0x30 
    /*00009574*/ BL          0x0000000000009574          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009578*/ LDR         R1, [R4, #3816]             @ 0xee8 
    /*0000957c*/ ADD         R0, R5, #72                 @ 0x48 
    /*00009580*/ MOV         R2, #0 
    /*00009584*/ ADD         R1, R1, #104                @ 0x68 
    /*00009588*/ ADD         SP, SP, #12 
    /*0000958c*/ POP         {R4, R5, LR} 
    VencStreamGetInfo_x9590:
    /*00009590*/ B           VencStreamGetInfo_x9590     @ osal_memcpy [R_ARM_JUMP24: +0x0] 
    VencStreamGetInfo_x9594:
    /*00009594*/ ADD         R4, R1, #8192               @ 0x2000 
    /*00009598*/ MOV         R2, #56                     @ 0x38 
    /*0000959c*/ ADD         R0, R0, #12 
    /*000095a0*/ LDR         R1, [R4, #3816]             @ 0xee8 
    /*000095a4*/ ADD         R1, R1, #48                 @ 0x30 
    /*000095a8*/ BL          0x00000000000095A8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000095ac*/ LDR         R1, [R4, #3816]             @ 0xee8 
    /*000095b0*/ MOV         R2, #312                    @ 0x138 
    /*000095b4*/ ADD         R0, R5, #72                 @ 0x48 
    /*000095b8*/ ADD         R1, R1, #104                @ 0x68 
    /*000095bc*/ BL          0x00000000000095BC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000095c0*/ LDR         R3, [R4, #3968]             @ 0xf80 
    /*000095c4*/ STR         R3, [R4, #3920]             @ 0xf50 
    /*000095c8*/ LDR         R3, [R5, #48]               @ 0x30 
    /*000095cc*/ STR         R3, [R4, #3912]             @ 0xf48 
    /*000095d0*/ LDR         R3, [R5, #12] 
    /*000095d4*/ STR         R3, [R4, #3916]             @ 0xf4c 
    /*000095d8*/ LDR         R3, [R5, #64]               @ 0x40 
    /*000095dc*/ STR         R3, [R4, #3932]             @ 0xf5c 
    /*000095e0*/ LDR         R3, [R5, #56]               @ 0x38 
    /*000095e4*/ STR         R3, [R4, #3924]             @ 0xf54 
    /*000095e8*/ LDR         R3, [R5, #60]               @ 0x3c 
    /*000095ec*/ B           VencStreamGetInfo_x950c
    VencStreamGetInfo_x95f0:
    /*000095f0*/ STR         R3, [SP, #4] 
    /*000095f4*/ MOV         R1, #8 
    /*000095f8*/ MOVW        R3, #6044                   @ 0x179c 
    /*000095fc*/ MOVW        R2, #0                      @ .LC274 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e70] 
    /*00009600*/ STR         R3, [SP] 
    /*00009604*/ MOVT        R2, #0                      @ .LC274 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e70] 
    /*00009608*/ LDR         R3, [PC, #28]               @ 0x000000000000962c 
    /*0000960c*/ MOV         R0, #3 
    /*00009610*/ BL          0x0000000000009610          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009614*/ ADD         SP, SP, #12 
    /*00009618*/ POP         {R4, R5, PC} 
    VencStreamGetInfo_x961c:
    /*0000961c*/ MOV         R2, #12 
    /*00009620*/ ADD         R4, R1, #8192               @ 0x2000 
    /*00009624*/ ADD         R0, R5, R2 
    /*00009628*/ B           VencStreamGetInfo_x956c
    /*0000962c*/ ANDEQ       R0, R0, R0, LSR #7 
FUNC_END VencStreamGetInfo


FUNC_BEGIN VencGetStream
    /*00009630*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00009634*/ SUBS        IP, R0, #0 
    /*00009638*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0000963c*/ MOV         R9, R2 
    /*00009640*/ STR         R0, [SP, #60]               @ 0x3c 
    /*00009644*/ STR         R1, [SP, #20] 
    /*00009648*/ BLT         VencGetStream_x9820
    /*0000964c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00009650*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00009654*/ LDR         R3, [R3] 
    /*00009658*/ CMP         R3, IP 
    /*0000965c*/ BLS         VencGetStream_x9820
    VencGetStream_x9660:
    /*00009660*/ LDR         R3, [SP, #20] 
    /*00009664*/ CMP         R3, #0 
    /*00009668*/ BEQ         VencGetStream_x98ac
    VencGetStream_x966c:
    /*0000966c*/ LDR         R3, [SP, #20] 
    /*00009670*/ LDR         R3, [R3] 
    /*00009674*/ CMP         R3, #0 
    /*00009678*/ BEQ         VencGetStream_x98bc
    VencGetStream_x967c:
    /*0000967c*/ LDR         R2, [SP, #60]               @ 0x3c 
    /*00009680*/ MOVW        R4, #36240                  @ 0x8d90 
    /*00009684*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00009688*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000968c*/ MUL         R4, R4, R2 
    /*00009690*/ LDR         R5, [R3] 
    /*00009694*/ ADD         FP, R5, R4 
    /*00009698*/ ADD         SL, FP, #12416              @ 0x3080 
    /*0000969c*/ ADD         SL, SL, #16 
    /*000096a0*/ MOV         R0, SL 
    /*000096a4*/ BL          0x00000000000096A4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000096a8*/ SUBS        R3, R0, #0 
    /*000096ac*/ STR         R3, [SP, #36]               @ 0x24 
    /*000096b0*/ BNE         VencGetStream_x989c
    /*000096b4*/ LDR         R3, [R5, R4] 
    /*000096b8*/ CMP         R3, #1 
    /*000096bc*/ BNE         VencGetStream_x9e30
    /*000096c0*/ LDR         R2, [FP, #4] 
    /*000096c4*/ MOVW        R3, #1006                   @ 0x3ee 
    /*000096c8*/ CMP         R2, R3 
    /*000096cc*/ BEQ         VencGetStream_x9fe4
    /*000096d0*/ ADD         R3, FP, #12288              @ 0x3000 
    /*000096d4*/ CMN         R9, #1 
    /*000096d8*/ STR         R3, [SP, #40]               @ 0x28 
    /*000096dc*/ MOV         R2, R3 
    /*000096e0*/ LDR         R3, [R3, #104]              @ 0x68 
    /*000096e4*/ ADD         R3, R3, #1 
    /*000096e8*/ STR         R3, [R2, #104]              @ 0x68 
    /*000096ec*/ BLT         VencGetStream_x9fb0
    /*000096f0*/ ADD         R3, FP, #11904              @ 0x2e80 
    /*000096f4*/ ADD         R8, FP, #8192               @ 0x2000 
    /*000096f8*/ ADD         R3, R3, #60                 @ 0x3c 
    /*000096fc*/ STR         R3, [SP, #24] 
    /*00009700*/ ADD         R3, R3, #28 
    /*00009704*/ STR         R3, [SP, #28] 
    VencGetStream_x9708:
    /*00009708*/ LDR         R3, [R8, #3816]             @ 0xee8 
    /*0000970c*/ CMP         R3, #0 
    /*00009710*/ BNE         VencGetStream_x98cc
    /*00009714*/ LDR         R3, [SP, #24] 
    /*00009718*/ CMP         R3, #0 
    /*0000971c*/ BEQ         VencGetStream_x9730
    /*00009720*/ LDR         R3, [R8, #3800]             @ 0xed8 
    /*00009724*/ LDR         R4, [SP, #28] 
    /*00009728*/ CMP         R4, R3 
    /*0000972c*/ BNE         VencGetStream_x9c18
    VencGetStream_x9730:
    /*00009730*/ MOV         R0, SL 
    /*00009734*/ BL          0x0000000000009734          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009738*/ CMP         R9, #0 
    /*0000973c*/ BEQ         VencGetStream_x9bb4
    /*00009740*/ CMN         R9, #1 
    /*00009744*/ BEQ         VencGetStream_x9838
    /*00009748*/ ADD         R7, FP, #12352              @ 0x3040 
    /*0000974c*/ MOVW        R6, #0                      @ VENC_WaitConditionCallBack1 [R_ARM_MOVW_ABS_NC: .text+0x25c] 
    /*00009750*/ ADD         R7, R7, #52                 @ 0x34 
    /*00009754*/ MOVT        R6, #0                      @ VENC_WaitConditionCallBack1 [R_ARM_MOVT_ABS: .text+0x25c] 
    /*00009758*/ ADD         R5, SP, #60                 @ 0x3c 
    /*0000975c*/ MOV         R4, R9 
    /*00009760*/ B           VencGetStream_x9778
    VencGetStream_x9764:
    /*00009764*/ BL          0x0000000000009764          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*00009768*/ ADD         R3, R0, #512                @ 0x200 
    /*0000976c*/ MOV         R4, R0 
    /*00009770*/ BICS        R3, R3, #512                @ 0x200 
    /*00009774*/ BEQ         VencGetStream_x97a4
    VencGetStream_x9778:
    /*00009778*/ MOV         R0, R5 
    /*0000977c*/ BL          0x000000000000977C          @ VENC_WaitConditionCallBack1 [R_ARM_CALL: .text+0x25c] 
    /*00009780*/ MOV         R3, R4 
    /*00009784*/ MOV         R2, R5 
    /*00009788*/ MOV         R1, R6 
    /*0000978c*/ CMP         R0, #0 
    /*00009790*/ MOV         R0, R7 
    /*00009794*/ BEQ         VencGetStream_x9764
    /*00009798*/ MOV         R0, R4 
    /*0000979c*/ BL          0x000000000000979C          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*000097a0*/ MOV         R4, R0 
    VencGetStream_x97a4:
    /*000097a4*/ CMP         R4, #0 
    /*000097a8*/ BLT         VencGetStream_x9d74
    /*000097ac*/ BEQ         VencGetStream_x9d88
    VencGetStream_x97b0:
    /*000097b0*/ MOV         R0, SL 
    /*000097b4*/ BL          0x00000000000097B4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000097b8*/ CMP         R0, #0 
    /*000097bc*/ BNE         VencGetStream_x9be4
    /*000097c0*/ LDR         R3, [FP] 
    /*000097c4*/ CMP         R3, #1 
    /*000097c8*/ BNE         VencGetStream_x97e0
    /*000097cc*/ MOVW        R3, #0                      @ s_u32VencState [R_ARM_MOVW_ABS_NC: .data+0xc0] 
    /*000097d0*/ MOVT        R3, #0                      @ s_u32VencState [R_ARM_MOVT_ABS: .data+0xc0] 
    /*000097d4*/ LDR         R3, [R3] 
    /*000097d8*/ CMP         R3, #0 
    /*000097dc*/ BEQ         VencGetStream_x9708
    VencGetStream_x97e0:
    /*000097e0*/ LDR         R1, [SP, #60]               @ 0x3c 
    /*000097e4*/ MOVW        R2, #0                      @ .LC281 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3028] 
    /*000097e8*/ MOVT        R2, #0                      @ .LC281 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3028] 
    /*000097ec*/ MOVW        R3, #6165                   @ 0x1815 
    /*000097f0*/ STR         R3, [SP] 
    VencGetStream_x97f4:
    /*000097f4*/ LDR         R3, [PC, #2152]             @ 0x000000000000a064 
    /*000097f8*/ MOV         R0, #3 
    /*000097fc*/ STR         R1, [SP, #4] 
    /*00009800*/ MOV         R1, #8 
    /*00009804*/ BL          0x0000000000009804          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009808*/ MOV         R0, SL 
    /*0000980c*/ BL          0x000000000000980C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009810*/ MOVW        R0, #32773                  @ 0x8005 
    /*00009814*/ MOVT        R0, #40968                  @ 0xa008 
    VencGetStream_x9818:
    /*00009818*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000981c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencGetStream_x9820:
    /*00009820*/ MOV         R0, IP 
    /*00009824*/ BL          0x0000000000000304 
    /*00009828*/ CMP         R0, #0 
    /*0000982c*/ BEQ         VencGetStream_x9660
    /*00009830*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00009834*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencGetStream_x9838:
    /*00009838*/ ADD         R6, FP, #12352              @ 0x3040 
    /*0000983c*/ MOVW        R4, #0                      @ VENC_WaitConditionCallBack1 [R_ARM_MOVW_ABS_NC: .text+0x25c] 
    /*00009840*/ ADD         R6, R6, #52                 @ 0x34 
    /*00009844*/ MOVT        R4, #0                      @ VENC_WaitConditionCallBack1 [R_ARM_MOVT_ABS: .text+0x25c] 
    /*00009848*/ ADD         R5, SP, #60                 @ 0x3c 
    VencGetStream_x984c:
    /*0000984c*/ MOV         R0, R5 
    /*00009850*/ BL          0x0000000000009850          @ VENC_WaitConditionCallBack1 [R_ARM_CALL: .text+0x25c] 
    /*00009854*/ MOV         R3, #100                    @ 0x64 
    /*00009858*/ MOV         R2, R5 
    /*0000985c*/ MOV         R1, R4 
    /*00009860*/ CMP         R0, #0 
    /*00009864*/ MOV         R0, R6 
    /*00009868*/ BNE         VencGetStream_x97b0
    /*0000986c*/ BL          0x000000000000986C          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*00009870*/ CMP         R0, #0 
    /*00009874*/ BGE         VencGetStream_x984c
    /*00009878*/ MOVW        R2, #0                      @ .LC287 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31a8] 
    /*0000987c*/ MOVT        R2, #0                      @ .LC287 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31a8] 
    /*00009880*/ MOVW        R3, #6136                   @ 0x17f8 
    /*00009884*/ STR         R3, [SP, #4] 
    VencGetStream_x9888:
    /*00009888*/ STR         R3, [SP] 
    /*0000988c*/ MOV         R1, #8 
    /*00009890*/ LDR         R3, [PC, #1996]             @ 0x000000000000a064 
    /*00009894*/ MOV         R0, #1 
    /*00009898*/ BL          0x0000000000009898          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencGetStream_x989c:
    /*0000989c*/ MOV         R0, #65024                  @ 0xfe00 
    /*000098a0*/ MOVT        R0, #65535                  @ 0xffff 
    /*000098a4*/ ADD         SP, SP, #76                 @ 0x4c 
    /*000098a8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencGetStream_x98ac:
    /*000098ac*/ BL          0x00000000000002C8 
    /*000098b0*/ CMP         R0, #0 
    /*000098b4*/ BNE         VencGetStream_x9818
    /*000098b8*/ B           VencGetStream_x966c
    VencGetStream_x98bc:
    /*000098bc*/ BL          0x00000000000002C8 
    /*000098c0*/ CMP         R0, #0 
    /*000098c4*/ BNE         VencGetStream_x9818
    /*000098c8*/ B           VencGetStream_x967c
    VencGetStream_x98cc:
    /*000098cc*/ ADD         R3, FP, #60                 @ 0x3c 
    /*000098d0*/ ADD         R2, SP, #68                 @ 0x44 
    /*000098d4*/ STR         R3, [SP, #24] 
    /*000098d8*/ MOV         R0, R3 
    /*000098dc*/ MOV         R1, R2 
    /*000098e0*/ STR         R2, [SP, #28] 
    /*000098e4*/ BL          0x00000000000098E4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000098e8*/ LDR         R3, [R8, #3816]             @ 0xee8 
    /*000098ec*/ CMP         R3, #0 
    /*000098f0*/ BEQ         VencGetStream_x9f5c
    VencGetStream_x98f4:
    /*000098f4*/ LDR         R2, [FP, #28] 
    /*000098f8*/ LDR         R1, [SP, #28] 
    /*000098fc*/ CMP         R2, #1 
    /*00009900*/ LDR         R0, [SP, #24] 
    /*00009904*/ LDREQ       R3, [R3, #12] 
    /*00009908*/ MOVNE       R9, #1 
    /*0000990c*/ STRNE       R9, [SP, #48]               @ 0x30 
    /*00009910*/ STREQ       R3, [SP, #48]               @ 0x30 
    /*00009914*/ MOVEQ       R9, R3 
    /*00009918*/ BL          0x0000000000009918          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000991c*/ LDR         R3, [SP, #20] 
    /*00009920*/ LDR         R2, [SP, #48]               @ 0x30 
    /*00009924*/ LDR         R3, [R3, #4] 
    /*00009928*/ CMP         R2, R3 
    /*0000992c*/ BHI         VencGetStream_x9f74
    /*00009930*/ CMP         R9, #10 
    /*00009934*/ MOV         R0, #136                    @ 0x88 
    /*00009938*/ MOV         R1, #0 
    /*0000993c*/ MOVLT       R3, R9 
    /*00009940*/ MOVGE       R3, #10 
    /*00009944*/ MUL         R0, R0, R3 
    /*00009948*/ BL          0x0000000000009948          @ osal_kmalloc [R_ARM_CALL: +0x0] 
    /*0000994c*/ SUBS        R7, R0, #0 
    /*00009950*/ BEQ         VencGetStream_xa018
    /*00009954*/ LDR         R1, [SP, #28] 
    /*00009958*/ LDR         R0, [SP, #24] 
    /*0000995c*/ BL          0x000000000000995C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009960*/ LDR         R3, [SP, #20] 
    /*00009964*/ LDR         R2, [SP, #48]               @ 0x30 
    /*00009968*/ STR         R2, [R3, #4] 
    /*0000996c*/ LDR         R3, [R8, #3816]             @ 0xee8 
    /*00009970*/ CMP         R3, #0 
    /*00009974*/ BEQ         VencGetStream_x9e48
    VencGetStream_x9978:
    /*00009978*/ CMP         R9, #0 
    /*0000997c*/ MOVLE       R5, #0 
    /*00009980*/ BLE         VencGetStream_x9ca8
    /*00009984*/ LDR         R1, [R8, #3816]             @ 0xee8 
    /*00009988*/ MOV         R2, R1 
    /*0000998c*/ LDR         R3, [R2, #28]! 
    /*00009990*/ CMP         R3, R2 
    /*00009994*/ BEQ         VencGetStream_x9b1c
    /*00009998*/ LDR         IP, [R3, #4] 
    /*0000999c*/ MOV         R0, #256                    @ 0x100 
    /*000099a0*/ LDR         LR, [R3] 
    /*000099a4*/ MOVT        R0, #16 
    /*000099a8*/ MOV         R2, #512                    @ 0x200 
    /*000099ac*/ MOVT        R2, #32 
    /*000099b0*/ STR         IP, [LR, #4] 
    /*000099b4*/ STR         LR, [IP] 
    /*000099b8*/ STM         R3, {R0, R2} 
    /*000099bc*/ LDR         R2, [R1, #12] 
    /*000099c0*/ SUB         R2, R2, #1 
    /*000099c4*/ STR         R2, [R1, #12] 
    /*000099c8*/ LDR         R4, [R3, #-8] 
    /*000099cc*/ CMP         R4, #0 
    /*000099d0*/ BEQ         VencGetStream_x9b1c
    /*000099d4*/ MOV         R3, #0 
    /*000099d8*/ LDR         R6, [SP, #36]               @ 0x24 
    /*000099dc*/ MOVT        R3, #13590                  @ 0x3516 
    /*000099e0*/ STR         R3, [SP, #32] 
    /*000099e4*/ MOVW        R3, #26215                  @ 0x6667 
    /*000099e8*/ MOVT        R3, #26214                  @ 0x6666 
    /*000099ec*/ STR         FP, [SP, #56]               @ 0x38 
    /*000099f0*/ MOV         R5, #0 
    /*000099f4*/ MOV         FP, R3 
    /*000099f8*/ MOVW        R2, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*000099fc*/ STR         SL, [SP, #44]               @ 0x2c 
    /*00009a00*/ MOVT        R2, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*00009a04*/ STR         R2, [SP, #52]               @ 0x34 
    VencGetStream_x9a08:
    /*00009a08*/ MOV         R2, #136                    @ 0x88 
    /*00009a0c*/ MOV         R1, R4 
    /*00009a10*/ MLA         R0, R2, R5, R7 
    /*00009a14*/ BL          0x0000000000009A14          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009a18*/ LDR         SL, [R8, #3816]             @ 0xee8 
    /*00009a1c*/ CMP         SL, #0 
    /*00009a20*/ BEQ         VencGetStream_x9a70
    /*00009a24*/ LDR         R3, [R4, #-12] 
    /*00009a28*/ LDR         R2, [SP, #32] 
    /*00009a2c*/ CMP         R3, R2 
    /*00009a30*/ BEQ         VencGetStream_x9a4c
    /*00009a34*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00009a38*/ LDR         R3, [SP, #52]               @ 0x34 
    /*00009a3c*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00009a40*/ MOV         R2, #179                    @ 0xb3 
    /*00009a44*/ LDR         R1, [PC, #1564]             @ 0x000000000000a068 
    /*00009a48*/ BL          0x0000000000009A48          @ osal_panic [R_ARM_CALL: +0x0] 
    VencGetStream_x9a4c:
    /*00009a4c*/ LDR         R2, [SL, #40]               @ 0x28 
    /*00009a50*/ SUB         R3, R4, #8 
    /*00009a54*/ ADD         R1, SL, #36                 @ 0x24 
    /*00009a58*/ STR         R3, [SL, #40]               @ 0x28 
    /*00009a5c*/ STMDB       R4, {R1, R2} 
    /*00009a60*/ STR         R3, [R2] 
    /*00009a64*/ LDR         R3, [SL, #16] 
    /*00009a68*/ ADD         R3, R3, #1 
    /*00009a6c*/ STR         R3, [SL, #16] 
    VencGetStream_x9a70:
    /*00009a70*/ LDR         R2, [R4, #12] 
    /*00009a74*/ ADD         R6, R6, #1 
    /*00009a78*/ LDR         R3, [R8, #3828]             @ 0xef4 
    /*00009a7c*/ SMULL       R0, R1, R6, FP 
    /*00009a80*/ SUB         R3, R3, R2 
    /*00009a84*/ STR         R3, [R8, #3828]             @ 0xef4 
    /*00009a88*/ MOV         R2, #10 
    /*00009a8c*/ LDR         R3, [R4, #24] 
    /*00009a90*/ CMP         R3, #1 
    /*00009a94*/ LDREQ       R3, [R8, #3832]             @ 0xef8 
    /*00009a98*/ SUBEQ       R3, R3, #1 
    /*00009a9c*/ STREQ       R3, [R8, #3832]             @ 0xef8 
    /*00009aa0*/ ASR         R3, R6, #31 
    /*00009aa4*/ RSB         R3, R3, R1, ASR #2 
    /*00009aa8*/ MLS         R3, R2, R3, R6 
    /*00009aac*/ CMP         R3, #0 
    /*00009ab0*/ ADDNE       R5, R5, #1 
    /*00009ab4*/ BEQ         VencGetStream_x9b6c
    VencGetStream_x9ab8:
    /*00009ab8*/ CMP         R9, R6 
    /*00009abc*/ BEQ         VencGetStream_x9ca0
    /*00009ac0*/ LDR         R2, [R8, #3816]             @ 0xee8 
    /*00009ac4*/ CMP         R2, #0 
    /*00009ac8*/ BEQ         VencGetStream_x9b18
    /*00009acc*/ MOV         R1, R2 
    /*00009ad0*/ LDR         R3, [R1, #28]! 
    /*00009ad4*/ CMP         R3, R1 
    /*00009ad8*/ BEQ         VencGetStream_x9b18
    /*00009adc*/ LDR         IP, [R3, #4] 
    /*00009ae0*/ MOV         R0, #256                    @ 0x100 
    /*00009ae4*/ LDR         LR, [R3] 
    /*00009ae8*/ MOVT        R0, #16 
    /*00009aec*/ MOV         R1, #512                    @ 0x200 
    /*00009af0*/ MOVT        R1, #32 
    /*00009af4*/ STR         IP, [LR, #4] 
    /*00009af8*/ STR         LR, [IP] 
    /*00009afc*/ STM         R3, {R0, R1} 
    /*00009b00*/ LDR         R1, [R2, #12] 
    /*00009b04*/ SUB         R1, R1, #1 
    /*00009b08*/ STR         R1, [R2, #12] 
    /*00009b0c*/ LDR         R4, [R3, #-8] 
    /*00009b10*/ CMP         R4, #0 
    /*00009b14*/ BNE         VencGetStream_x9a08
    VencGetStream_x9b18:
    /*00009b18*/ LDR         SL, [SP, #44]               @ 0x2c 
    VencGetStream_x9b1c:
    /*00009b1c*/ MOV         R0, R7 
    /*00009b20*/ BL          0x0000000000009B20          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*00009b24*/ LDR         R1, [SP, #28] 
    /*00009b28*/ LDR         R0, [SP, #24] 
    /*00009b2c*/ BL          0x0000000000009B2C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009b30*/ MOV         R0, SL 
    /*00009b34*/ BL          0x0000000000009B34          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009b38*/ LDR         R3, [SP, #60]               @ 0x3c 
    /*00009b3c*/ MOVW        R1, #6257                   @ 0x1871 
    /*00009b40*/ MOVW        R2, #0                      @ .LC282 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3070] 
    /*00009b44*/ STR         R1, [SP] 
    /*00009b48*/ MOVT        R2, #0                      @ .LC282 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3070] 
    /*00009b4c*/ STR         R3, [SP, #4] 
    /*00009b50*/ MOV         R1, #8 
    /*00009b54*/ LDR         R3, [PC, #1288]             @ 0x000000000000a064 
    /*00009b58*/ MOV         R0, #3 
    /*00009b5c*/ BL          0x0000000000009B5C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009b60*/ MOVW        R0, #32782                  @ 0x800e 
    /*00009b64*/ MOVT        R0, #40968                  @ 0xa008 
    /*00009b68*/ B           VencGetStream_x9818
    VencGetStream_x9b6c:
    /*00009b6c*/ LDR         R1, [SP, #28] 
    /*00009b70*/ LDR         R0, [SP, #24] 
    /*00009b74*/ BL          0x0000000000009B74          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009b78*/ MOV         R3, #136                    @ 0x88 
    /*00009b7c*/ LDR         R2, [SP, #20] 
    /*00009b80*/ MOV         R1, R7 
    /*00009b84*/ MUL         R3, R3, R6 
    /*00009b88*/ LDR         R0, [R2] 
    /*00009b8c*/ MOV         R2, #1360                   @ 0x550 
    /*00009b90*/ SUB         R3, R3, #1360               @ 0x550 
    /*00009b94*/ ADD         R0, R0, R3 
    /*00009b98*/ BL          0x0000000000009B98          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*00009b9c*/ SUBS        R5, R0, #0 
    /*00009ba0*/ BNE         VencGetStream_x9edc
    /*00009ba4*/ LDR         R1, [SP, #28] 
    /*00009ba8*/ LDR         R0, [SP, #24] 
    /*00009bac*/ BL          0x0000000000009BAC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009bb0*/ B           VencGetStream_x9ab8
    VencGetStream_x9bb4:
    /*00009bb4*/ MOVW        R3, #6127                   @ 0x17ef 
    /*00009bb8*/ STR         R9, [SP, #4] 
    /*00009bbc*/ STR         R3, [SP] 
    /*00009bc0*/ MOVW        R2, #0                      @ .LC277 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f18] 
    /*00009bc4*/ LDR         R3, [PC, #1176]             @ 0x000000000000a064 
    /*00009bc8*/ MOVT        R2, #0                      @ .LC277 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f18] 
    /*00009bcc*/ MOV         R1, #8 
    /*00009bd0*/ MOV         R0, #3 
    /*00009bd4*/ BL          0x0000000000009BD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009bd8*/ MOVW        R0, #32782                  @ 0x800e 
    /*00009bdc*/ MOVT        R0, #40968                  @ 0xa008 
    /*00009be0*/ B           VencGetStream_x9818
    VencGetStream_x9be4:
    /*00009be4*/ LDR         R1, [SP, #60]               @ 0x3c 
    /*00009be8*/ MOVW        R3, #6159                   @ 0x180f 
    /*00009bec*/ MOVW        R2, #0                      @ .LC280 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2fd8] 
    /*00009bf0*/ STR         R3, [SP] 
    /*00009bf4*/ MOVT        R2, #0                      @ .LC280 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2fd8] 
    /*00009bf8*/ LDR         R3, [PC, #1124]             @ 0x000000000000a064 
    /*00009bfc*/ STR         R1, [SP, #4] 
    /*00009c00*/ MOV         R0, #3 
    /*00009c04*/ MOV         R1, #8 
    /*00009c08*/ BL          0x0000000000009C08          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009c0c*/ MOV         R0, #65024                  @ 0xfe00 
    /*00009c10*/ MOVT        R0, #65535                  @ 0xffff 
    /*00009c14*/ B           VencGetStream_x9818
    VencGetStream_x9c18:
    /*00009c18*/ ADD         R3, FP, #60                 @ 0x3c 
    /*00009c1c*/ ADD         R2, SP, #68                 @ 0x44 
    /*00009c20*/ STR         R3, [SP, #24] 
    /*00009c24*/ MOV         R0, R3 
    /*00009c28*/ MOV         R1, R2 
    /*00009c2c*/ STR         R2, [SP, #28] 
    /*00009c30*/ BL          0x0000000000009C30          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009c34*/ LDR         R3, [R8, #3816]             @ 0xee8 
    /*00009c38*/ CMP         R3, #0 
    /*00009c3c*/ BNE         VencGetStream_x98f4
    VencGetStream_x9c40:
    /*00009c40*/ LDR         R3, [R8, #3800]             @ 0xed8 
    /*00009c44*/ CMP         R3, R4 
    /*00009c48*/ BEQ         VencGetStream_x9c58
    /*00009c4c*/ LDR         R3, [R3, #-8] 
    /*00009c50*/ CMP         R3, #0 
    /*00009c54*/ BNE         VencGetStream_x98f4
    VencGetStream_x9c58:
    /*00009c58*/ LDR         R1, [SP, #60]               @ 0x3c 
    /*00009c5c*/ MOVW        R3, #6187                   @ 0x182b 
    /*00009c60*/ MOVW        R2, #0                      @ .LC282 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3070] 
    /*00009c64*/ STR         R3, [SP] 
    /*00009c68*/ MOVT        R2, #0                      @ .LC282 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3070] 
    /*00009c6c*/ LDR         R3, [PC, #1008]             @ 0x000000000000a064 
    /*00009c70*/ STR         R1, [SP, #4] 
    /*00009c74*/ MOV         R0, #3 
    /*00009c78*/ MOV         R1, #8 
    /*00009c7c*/ BL          0x0000000000009C7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencGetStream_x9c80:
    /*00009c80*/ LDR         R1, [SP, #28] 
    /*00009c84*/ LDR         R0, [SP, #24] 
    /*00009c88*/ BL          0x0000000000009C88          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009c8c*/ MOV         R0, SL 
    /*00009c90*/ BL          0x0000000000009C90          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009c94*/ MOVW        R0, #32782                  @ 0x800e 
    /*00009c98*/ MOVT        R0, #40968                  @ 0xa008 
    /*00009c9c*/ B           VencGetStream_x9818
    VencGetStream_x9ca0:
    /*00009ca0*/ LDR         FP, [SP, #56]               @ 0x38 
    /*00009ca4*/ LDR         SL, [SP, #44]               @ 0x2c 
    VencGetStream_x9ca8:
    /*00009ca8*/ MOV         R1, FP 
    /*00009cac*/ LDR         R0, [SP, #20] 
    /*00009cb0*/ BL          0x0000000000009CB0          @ VencStreamGetInfo [R_ARM_CALL: .text+0x9484] 
    /*00009cb4*/ LDR         R4, [R8, #3816]             @ 0xee8 
    /*00009cb8*/ CMP         R4, #0 
    /*00009cbc*/ BEQ         VencGetStream_x9e24
    /*00009cc0*/ LDR         R2, [R4, #28] 
    /*00009cc4*/ ADD         R3, R4, #28 
    /*00009cc8*/ CMP         R2, R3 
    /*00009ccc*/ BEQ         VencGetStream_x9dbc
    VencGetStream_x9cd0:
    /*00009cd0*/ LDR         R1, [SP, #28] 
    /*00009cd4*/ LDR         R0, [SP, #24] 
    /*00009cd8*/ BL          0x0000000000009CD8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009cdc*/ CMP         R5, #0 
    /*00009ce0*/ BLE         VencGetStream_x9d10
    /*00009ce4*/ LDR         R3, [SP, #20] 
    /*00009ce8*/ MOV         R1, R7 
    /*00009cec*/ LDR         R0, [R3] 
    /*00009cf0*/ LDR         R3, [SP, #48]               @ 0x30 
    /*00009cf4*/ SUB         IP, R3, R5 
    /*00009cf8*/ MOV         R3, #136                    @ 0x88 
    /*00009cfc*/ MUL         R2, R3, R5 
    /*00009d00*/ MLA         R0, R3, IP, R0 
    /*00009d04*/ BL          0x0000000000009D04          @ osal_copy_to_user [R_ARM_CALL: +0x0] 
    /*00009d08*/ CMP         R0, #0 
    /*00009d0c*/ BNE         VencGetStream_xa04c
    VencGetStream_x9d10:
    /*00009d10*/ MOV         R0, R7 
    /*00009d14*/ BL          0x0000000000009D14          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*00009d18*/ LDR         R3, [R8, #3968]             @ 0xf80 
    /*00009d1c*/ LDR         IP, [SP, #48]               @ 0x30 
    /*00009d20*/ ADD         R2, R3, #1 
    /*00009d24*/ STR         R2, [R8, #3968]             @ 0xf80 
    /*00009d28*/ LDR         R2, [SP, #20] 
    /*00009d2c*/ LDR         R1, [SP, #28] 
    /*00009d30*/ LDR         R0, [SP, #24] 
    /*00009d34*/ STR         R3, [R2, #8] 
    /*00009d38*/ LDR         R2, [SP, #40]               @ 0x28 
    /*00009d3c*/ LDR         R3, [R2, #100]              @ 0x64 
    /*00009d40*/ ADD         R3, R3, IP 
    /*00009d44*/ STR         R3, [R2, #100]              @ 0x64 
    /*00009d48*/ BL          0x0000000000009D48          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009d4c*/ LDR         R3, [FP, #4] 
    /*00009d50*/ CMP         R3, #26 
    /*00009d54*/ BEQ         VencGetStream_x9f18
    VencGetStream_x9d58:
    /*00009d58*/ LDR         R1, [SP, #28] 
    /*00009d5c*/ LDR         R0, [SP, #24] 
    /*00009d60*/ BL          0x0000000000009D60          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009d64*/ MOV         R0, SL 
    /*00009d68*/ BL          0x0000000000009D68          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009d6c*/ MOV         R0, #0 
    /*00009d70*/ B           VencGetStream_x9818
    VencGetStream_x9d74:
    /*00009d74*/ MOVW        R3, #6147                   @ 0x1803 
    /*00009d78*/ MOVW        R2, #0                      @ .LC278 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f5c] 
    /*00009d7c*/ STR         R3, [SP, #4] 
    /*00009d80*/ MOVT        R2, #0                      @ .LC278 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f5c] 
    /*00009d84*/ B           VencGetStream_x9888
    VencGetStream_x9d88:
    /*00009d88*/ LDR         R1, [SP, #60]               @ 0x3c 
    /*00009d8c*/ MOVW        R3, #6152                   @ 0x1808 
    /*00009d90*/ MOVW        R2, #0                      @ .LC279 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2fa8] 
    /*00009d94*/ STR         R3, [SP] 
    /*00009d98*/ MOVT        R2, #0                      @ .LC279 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2fa8] 
    /*00009d9c*/ LDR         R3, [PC, #704]              @ 0x000000000000a064 
    /*00009da0*/ STR         R1, [SP, #4] 
    /*00009da4*/ MOV         R0, #1 
    /*00009da8*/ MOV         R1, #8 
    /*00009dac*/ BL          0x0000000000009DAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009db0*/ MOVW        R0, #32786                  @ 0x8012 
    /*00009db4*/ MOVT        R0, #40968                  @ 0xa008 
    /*00009db8*/ B           VencGetStream_x9818
    VencGetStream_x9dbc:
    /*00009dbc*/ ADD         R6, FP, #11904              @ 0x2e80 
    /*00009dc0*/ ADD         R6, R6, #60                 @ 0x3c 
    /*00009dc4*/ CMP         R6, #0 
    /*00009dc8*/ BEQ         VencGetStream_x9e24
    /*00009dcc*/ LDR         R2, [R4, #-12] 
    /*00009dd0*/ MOV         R3, #0 
    /*00009dd4*/ MOVT        R3, #13590                  @ 0x3516 
    /*00009dd8*/ CMP         R2, R3 
    /*00009ddc*/ BEQ         VencGetStream_x9dfc
    /*00009de0*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*00009de4*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00009de8*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*00009dec*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00009df0*/ MOV         R2, #179                    @ 0xb3 
    /*00009df4*/ LDR         R1, [PC, #620]              @ 0x000000000000a068 
    /*00009df8*/ BL          0x0000000000009DF8          @ osal_panic [R_ARM_CALL: +0x0] 
    VencGetStream_x9dfc:
    /*00009dfc*/ LDR         R3, [R8, #3812]             @ 0xee4 
    /*00009e00*/ SUB         R2, R4, #8 
    /*00009e04*/ ADD         R6, R6, #36                 @ 0x24 
    /*00009e08*/ STR         R2, [R8, #3812]             @ 0xee4 
    /*00009e0c*/ STR         R6, [R4, #-8] 
    /*00009e10*/ STR         R3, [R4, #-4] 
    /*00009e14*/ STR         R2, [R3] 
    /*00009e18*/ LDR         R3, [R8, #3788]             @ 0xecc 
    /*00009e1c*/ ADD         R3, R3, #1 
    /*00009e20*/ STR         R3, [R8, #3788]             @ 0xecc 
    VencGetStream_x9e24:
    /*00009e24*/ MOV         R3, #0 
    /*00009e28*/ STR         R3, [R8, #3816]             @ 0xee8 
    /*00009e2c*/ B           VencGetStream_x9cd0
    VencGetStream_x9e30:
    /*00009e30*/ MOVW        R3, #6090                   @ 0x17ca 
    /*00009e34*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00009e38*/ LDR         R1, [SP, #60]               @ 0x3c 
    /*00009e3c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00009e40*/ STR         R3, [SP] 
    /*00009e44*/ B           VencGetStream_x97f4
    VencGetStream_x9e48:
    /*00009e48*/ ADD         R2, FP, #11904              @ 0x2e80 
    /*00009e4c*/ ADD         R2, R2, #60                 @ 0x3c 
    /*00009e50*/ CMP         R2, #0 
    /*00009e54*/ BEQ         VencGetStream_x9ea8
    /*00009e58*/ LDR         R3, [R8, #3800]             @ 0xed8 
    /*00009e5c*/ ADD         R2, R2, #28 
    /*00009e60*/ CMP         R3, R2 
    /*00009e64*/ BEQ         VencGetStream_x9ea8
    /*00009e68*/ LDR         R0, [R3, #4] 
    /*00009e6c*/ MOV         R1, #256                    @ 0x100 
    /*00009e70*/ LDR         IP, [R3] 
    /*00009e74*/ MOVT        R1, #16 
    /*00009e78*/ MOV         R2, #512                    @ 0x200 
    /*00009e7c*/ MOVT        R2, #32 
    /*00009e80*/ STR         R0, [IP, #4] 
    /*00009e84*/ STR         IP, [R0] 
    /*00009e88*/ STM         R3, {R1, R2} 
    /*00009e8c*/ LDR         R2, [R8, #3784]             @ 0xec8 
    /*00009e90*/ SUB         R2, R2, #1 
    /*00009e94*/ STR         R2, [R8, #3784]             @ 0xec8 
    /*00009e98*/ LDR         R3, [R3, #-8] 
    /*00009e9c*/ CMP         R3, #0 
    /*00009ea0*/ STR         R3, [R8, #3816]             @ 0xee8 
    /*00009ea4*/ BNE         VencGetStream_x9978
    VencGetStream_x9ea8:
    /*00009ea8*/ LDR         R1, [SP, #60]               @ 0x3c 
    /*00009eac*/ MOVW        R3, #6238                   @ 0x185e 
    /*00009eb0*/ MOVW        R2, #0                      @ .LC282 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3070] 
    /*00009eb4*/ STR         R3, [SP] 
    /*00009eb8*/ MOVT        R2, #0                      @ .LC282 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3070] 
    /*00009ebc*/ LDR         R3, [PC, #416]              @ 0x000000000000a064 
    /*00009ec0*/ STR         R1, [SP, #4] 
    /*00009ec4*/ MOV         R0, #3 
    /*00009ec8*/ MOV         R1, #8 
    /*00009ecc*/ BL          0x0000000000009ECC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009ed0*/ MOV         R0, R7 
    /*00009ed4*/ BL          0x0000000000009ED4          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*00009ed8*/ B           VencGetStream_x9c80
    VencGetStream_x9edc:
    /*00009edc*/ LDR         SL, [SP, #44]               @ 0x2c 
    /*00009ee0*/ MOV         R0, R7 
    /*00009ee4*/ BL          0x0000000000009EE4          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*00009ee8*/ MOV         R0, SL 
    /*00009eec*/ BL          0x0000000000009EEC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009ef0*/ MOVW        R3, #6282                   @ 0x188a 
    VencGetStream_x9ef4:
    /*00009ef4*/ STR         R3, [SP] 
    /*00009ef8*/ MOVW        R2, #0                      @ .LC286 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3160] 
    /*00009efc*/ LDR         R3, [PC, #352]              @ 0x000000000000a064 
    /*00009f00*/ MOVT        R2, #0                      @ .LC286 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3160] 
    /*00009f04*/ MOV         R1, #8 
    /*00009f08*/ MOV         R0, #1 
    /*00009f0c*/ BL          0x0000000000009F0C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009f10*/ MVN         R0, #0 
    /*00009f14*/ B           VencGetStream_x9818
    VencGetStream_x9f18:
    /*00009f18*/ ADD         R2, FP, #32768              @ 0x8000 
    /*00009f1c*/ LDR         R3, [R2, #3284]             @ 0xcd4 
    /*00009f20*/ CMP         R3, #0 
    /*00009f24*/ BEQ         VencGetStream_x9d58
    /*00009f28*/ ADD         R3, FP, #11904              @ 0x2e80 
    /*00009f2c*/ ADD         R3, R3, #60                 @ 0x3c 
    /*00009f30*/ CMP         R3, #0 
    /*00009f34*/ BEQ         VencGetStream_x9f48
    /*00009f38*/ LDR         R1, [R8, #3800]             @ 0xed8 
    /*00009f3c*/ ADD         R3, R3, #28 
    /*00009f40*/ CMP         R1, R3 
    /*00009f44*/ BNE         VencGetStream_x9d58
    VencGetStream_x9f48:
    /*00009f48*/ LDR         R3, [FP, #3704]             @ 0xe78 
    /*00009f4c*/ CMP         R3, #6 
    /*00009f50*/ MOVEQ       R3, #0 
    /*00009f54*/ STREQ       R3, [R2, #3284]             @ 0xcd4 
    /*00009f58*/ B           VencGetStream_x9d58
    VencGetStream_x9f5c:
    /*00009f5c*/ ADD         R4, FP, #11904              @ 0x2e80 
    /*00009f60*/ ADD         R4, R4, #60                 @ 0x3c 
    /*00009f64*/ CMP         R4, #0 
    /*00009f68*/ BEQ         VencGetStream_x9c58
    /*00009f6c*/ ADD         R4, R4, #28 
    /*00009f70*/ B           VencGetStream_x9c40
    VencGetStream_x9f74:
    /*00009f74*/ MOVW        R1, #6209                   @ 0x1841 
    /*00009f78*/ STR         R3, [SP, #4] 
    /*00009f7c*/ STR         R1, [SP] 
    /*00009f80*/ MOVW        R2, #0                      @ .LC283 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30ac] 
    /*00009f84*/ LDR         R3, [PC, #216]              @ 0x000000000000a064 
    /*00009f88*/ MOVT        R2, #0                      @ .LC283 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30ac] 
    /*00009f8c*/ MOV         R1, #8 
    /*00009f90*/ STR         R9, [SP, #8] 
    /*00009f94*/ MOV         R0, #3 
    /*00009f98*/ BL          0x0000000000009F98          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009f9c*/ MOV         R0, SL 
    /*00009fa0*/ BL          0x0000000000009FA0          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009fa4*/ MOVW        R0, #32771                  @ 0x8003 
    /*00009fa8*/ MOVT        R0, #40968                  @ 0xa008 
    /*00009fac*/ B           VencGetStream_x9818
    VencGetStream_x9fb0:
    /*00009fb0*/ MOV         R3, R9 
    /*00009fb4*/ MVN         R1, #0 
    /*00009fb8*/ MOVW        R2, #0                      @ .LC276 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ee8] 
    /*00009fbc*/ STR         R1, [SP] 
    /*00009fc0*/ MOVT        R2, #0                      @ .LC276 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ee8] 
    /*00009fc4*/ MOV         R1, #8 
    /*00009fc8*/ MOV         R0, #3 
    /*00009fcc*/ BL          0x0000000000009FCC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009fd0*/ MOV         R0, SL 
    /*00009fd4*/ BL          0x0000000000009FD4          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009fd8*/ MOVW        R0, #32776                  @ 0x8008 
    /*00009fdc*/ MOVT        R0, #40968                  @ 0xa008 
    /*00009fe0*/ B           VencGetStream_x9818
    VencGetStream_x9fe4:
    /*00009fe4*/ MOV         R0, SL 
    /*00009fe8*/ BL          0x0000000000009FE8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009fec*/ MOVW        R3, #6101                   @ 0x17d5 
    /*00009ff0*/ MOVW        R2, #0                      @ .LC275 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ea8] 
    /*00009ff4*/ STR         R3, [SP] 
    /*00009ff8*/ MOVT        R2, #0                      @ .LC275 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ea8] 
    /*00009ffc*/ LDR         R3, [PC, #96]               @ 0x000000000000a064 
    /*0000a000*/ MOV         R1, #8 
    /*0000a004*/ MOV         R0, #3 
    /*0000a008*/ BL          0x000000000000A008          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a00c*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000a010*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000a014*/ B           VencGetStream_x9818
    VencGetStream_xa018:
    /*0000a018*/ MOVW        R3, #6221                   @ 0x184d 
    /*0000a01c*/ MOV         R1, #8 
    /*0000a020*/ STR         R3, [SP] 
    /*0000a024*/ MOVW        R2, #0                      @ .LC284 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x310c] 
    /*0000a028*/ LDR         R3, [PC, #52]               @ 0x000000000000a064 
    /*0000a02c*/ MOVT        R2, #0                      @ .LC284 [R_ARM_MOVT_ABS: .rodata.str1.4+0x310c] 
    /*0000a030*/ MOV         R0, #1 
    /*0000a034*/ BL          0x000000000000A034          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a038*/ MOV         R0, SL 
    /*0000a03c*/ BL          0x000000000000A03C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a040*/ MOVW        R0, #32780                  @ 0x800c 
    /*0000a044*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000a048*/ B           VencGetStream_x9818
    VencGetStream_xa04c:
    /*0000a04c*/ MOV         R0, R7 
    /*0000a050*/ BL          0x000000000000A050          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0000a054*/ MOV         R0, SL 
    /*0000a058*/ BL          0x000000000000A058          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a05c*/ MOVW        R3, #6309                   @ 0x18a5 
    /*0000a060*/ B           VencGetStream_x9ef4
    /*0000a064*/ @           <UNDEFINED> instruction: 0x000003b4 
    /*0000a068*/ ANDEQ       R0, R0, R4, ASR #7 
FUNC_END VencGetStream


FUNC_BEGIN VencPutStream
    /*0000a06c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000a070*/ SUBS        R8, R0, #0 
    /*0000a074*/ SUB         SP, SP, #204                @ 0xcc 
    /*0000a078*/ MOV         R5, R1 
    /*0000a07c*/ BLT         VencPutStream_xa314
    /*0000a080*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000a084*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000a088*/ LDR         R3, [R3] 
    /*0000a08c*/ CMP         R3, R8 
    /*0000a090*/ BLS         VencPutStream_xa314
    VencPutStream_xa094:
    /*0000a094*/ CMP         R5, #0 
    /*0000a098*/ BEQ         VencPutStream_xa4d4
    VencPutStream_xa09c:
    /*0000a09c*/ LDR         R3, [R5] 
    /*0000a0a0*/ CMP         R3, #0 
    /*0000a0a4*/ BEQ         VencPutStream_xa54c
    VencPutStream_xa0a8:
    /*0000a0a8*/ MOVW        R7, #36240                  @ 0x8d90 
    /*0000a0ac*/ MOVW        SL, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000a0b0*/ MUL         R7, R7, R8 
    /*0000a0b4*/ MOVT        SL, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000a0b8*/ LDR         R4, [SL] 
    /*0000a0bc*/ ADD         R3, R4, R7 
    /*0000a0c0*/ STR         R3, [SP, #28] 
    /*0000a0c4*/ ADD         R3, R3, #12416              @ 0x3080 
    /*0000a0c8*/ ADD         R3, R3, #16 
    /*0000a0cc*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000a0d0*/ MOV         R0, R3 
    /*0000a0d4*/ BL          0x000000000000A0D4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000a0d8*/ CMP         R0, #0 
    /*0000a0dc*/ BNE         VencPutStream_xa4c8
    /*0000a0e0*/ LDR         R3, [R4, R7] 
    /*0000a0e4*/ CMP         R3, #1 
    /*0000a0e8*/ BNE         VencPutStream_xa714
    /*0000a0ec*/ LDR         R3, [SP, #28] 
    /*0000a0f0*/ LDR         R2, [R3, #4] 
    /*0000a0f4*/ MOVW        R3, #1006                   @ 0x3ee 
    /*0000a0f8*/ CMP         R2, R3 
    /*0000a0fc*/ BEQ         VencPutStream_xa82c
    /*0000a100*/ LDR         R3, [SP, #28] 
    /*0000a104*/ LDR         R3, [R3, #28] 
    /*0000a108*/ CMP         R3, #0 
    /*0000a10c*/ LDR         R3, [R5, #4] 
    /*0000a110*/ BEQ         VencPutStream_xa48c
    /*0000a114*/ CMP         R3, #0 
    /*0000a118*/ MOVWEQ      R3, #6404                   @ 0x1904 
    /*0000a11c*/ MOVWEQ      R2, #0                      @ .LC289 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x322c] 
    /*0000a120*/ STREQ       R3, [SP] 
    /*0000a124*/ MOVTEQ      R2, #0                      @ .LC289 [R_ARM_MOVT_ABS: .rodata.str1.4+0x322c] 
    /*0000a128*/ BEQ         VencPutStream_xa4a4
    VencPutStream_xa12c:
    /*0000a12c*/ LDR         R2, [SP, #28] 
    /*0000a130*/ ADD         R3, R2, #11904              @ 0x2e80 
    /*0000a134*/ ADD         R3, R3, #60                 @ 0x3c 
    /*0000a138*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000a13c*/ CMP         R3, #0 
    /*0000a140*/ BEQ         VencPutStream_xa3bc
    /*0000a144*/ ADD         R2, R2, #8192               @ 0x2000 
    /*0000a148*/ ADD         R4, R3, #36                 @ 0x24 
    /*0000a14c*/ STR         R2, [SP, #44]               @ 0x2c 
    /*0000a150*/ LDR         R3, [R2, #3808]             @ 0xee0 
    /*0000a154*/ CMP         R4, R3 
    /*0000a158*/ BNE         VencPutStream_xa16c
    /*0000a15c*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000a160*/ LDR         R3, [R3, #3816]             @ 0xee8 
    /*0000a164*/ CMP         R3, #0 
    /*0000a168*/ BEQ         VencPutStream_xa878
    VencPutStream_xa16c:
    /*0000a16c*/ LDR         R3, [SP, #28] 
    /*0000a170*/ ADD         FP, R3, #60                 @ 0x3c 
    /*0000a174*/ ADD         R3, SP, #60                 @ 0x3c 
    /*0000a178*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000a17c*/ MOV         R1, R3 
    /*0000a180*/ MOV         R0, FP 
    /*0000a184*/ BL          0x000000000000A184          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000a188*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000a18c*/ LDR         R3, [R3, #3808]             @ 0xee0 
    /*0000a190*/ CMP         R4, R3 
    /*0000a194*/ BEQ         VencPutStream_xa3f0
    /*0000a198*/ LDR         R4, [R3, #-8] 
    VencPutStream_xa19c:
    /*0000a19c*/ CMP         R4, #0 
    /*0000a1a0*/ BEQ         VencPutStream_xa7e8
    /*0000a1a4*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0000a1a8*/ MOV         R0, FP 
    /*0000a1ac*/ BL          0x000000000000A1AC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000a1b0*/ LDR         R3, [R5, #4] 
    /*0000a1b4*/ CMP         R3, #0 
    /*0000a1b8*/ BEQ         VencPutStream_xa560
    /*0000a1bc*/ MOVW        R3, #0                      @ .LC298 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34d0] 
    /*0000a1c0*/ MOV         R2, #256                    @ 0x100 
    /*0000a1c4*/ MOVT        R3, #0                      @ .LC298 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34d0] 
    /*0000a1c8*/ MOVT        R2, #16 
    /*0000a1cc*/ STR         R3, [SP, #48]               @ 0x30 
    /*0000a1d0*/ MOV         R6, #0 
    /*0000a1d4*/ STR         R2, [SP, #32] 
    /*0000a1d8*/ STR         R8, [SP, #24] 
    /*0000a1dc*/ LDR         R9, [SP, #36]               @ 0x24 
    /*0000a1e0*/ B           VencPutStream_xa280
    VencPutStream_xa1e4:
    /*0000a1e4*/ LDR         R3, [R2, #4] 
    /*0000a1e8*/ MOVW        R2, #265                    @ 0x109 
    /*0000a1ec*/ CMP         R3, R2 
    /*0000a1f0*/ BEQ         VencPutStream_xa484
    /*0000a1f4*/ BHI         VencPutStream_xa388
    /*0000a1f8*/ CMP         R3, #26 
    /*0000a1fc*/ BEQ         VencPutStream_xa448
    /*0000a200*/ CMP         R3, #96                     @ 0x60 
    /*0000a204*/ MOVEQ       R0, #10 
    /*0000a208*/ BNE         VencPutStream_xa464
    VencPutStream_xa20c:
    /*0000a20c*/ BL          0x000000000000A20C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000a210*/ ADD         R1, SP, #64                 @ 0x40 
    /*0000a214*/ LDR         R3, [R0, #24] 
    /*0000a218*/ LDR         R0, [SP, #24] 
    /*0000a21c*/ BLX         R3 
    VencPutStream_xa220:
    /*0000a220*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000a224*/ CMP         R8, R3 
    /*0000a228*/ BEQ         VencPutStream_xa264
    /*0000a22c*/ LDR         R1, [R3, #4] 
    /*0000a230*/ MOV         R2, #512                    @ 0x200 
    /*0000a234*/ LDR         R0, [R3] 
    /*0000a238*/ MOVT        R2, #32 
    /*0000a23c*/ STR         R1, [R0, #4] 
    /*0000a240*/ STR         R0, [R1] 
    /*0000a244*/ LDR         R1, [SP, #32] 
    /*0000a248*/ STM         R3, {R1, R2} 
    /*0000a24c*/ LDR         R2, [R4, #16] 
    /*0000a250*/ SUB         R2, R2, #1 
    /*0000a254*/ STR         R2, [R4, #16] 
    /*0000a258*/ LDR         R8, [R3, #-8] 
    /*0000a25c*/ CMP         R8, #0 
    /*0000a260*/ BNE         VencPutStream_xa32c
    VencPutStream_xa264:
    /*0000a264*/ MOV         R1, R9 
    /*0000a268*/ MOV         R0, FP 
    /*0000a26c*/ BL          0x000000000000A26C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000a270*/ LDR         R3, [R5, #4] 
    /*0000a274*/ ADD         R6, R6, #1 
    /*0000a278*/ CMP         R3, R6 
    /*0000a27c*/ BLS         VencPutStream_xa55c
    VencPutStream_xa280:
    /*0000a280*/ LDR         R1, [R5] 
    /*0000a284*/ MOV         R2, #136                    @ 0x88 
    /*0000a288*/ ADD         R0, SP, #64                 @ 0x40 
    /*0000a28c*/ MLA         R1, R2, R6, R1 
    /*0000a290*/ BL          0x000000000000A290          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*0000a294*/ CMP         R0, #0 
    /*0000a298*/ BNE         VencPutStream_xa628
    /*0000a29c*/ MOV         R1, R9 
    /*0000a2a0*/ MOV         R0, FP 
    /*0000a2a4*/ BL          0x000000000000A2A4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000a2a8*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000a2ac*/ ADD         R8, R4, #36                 @ 0x24 
    /*0000a2b0*/ CMP         R8, R3 
    /*0000a2b4*/ BEQ         VencPutStream_xa658
    /*0000a2b8*/ LDR         R3, [R3, #-8] 
    /*0000a2bc*/ CMP         R3, #0 
    /*0000a2c0*/ BEQ         VencPutStream_xa698
    /*0000a2c4*/ LDR         R1, [R3, #8] 
    /*0000a2c8*/ LDR         R2, [SP, #72]               @ 0x48 
    /*0000a2cc*/ CMP         R1, R2 
    /*0000a2d0*/ BNE         VencPutStream_xa4e4
    /*0000a2d4*/ LDR         R1, [R3, #12] 
    /*0000a2d8*/ LDR         R2, [SP, #76]               @ 0x4c 
    /*0000a2dc*/ CMP         R1, R2 
    /*0000a2e0*/ BNE         VencPutStream_xa4e4
    /*0000a2e4*/ LDR         R3, [SL] 
    /*0000a2e8*/ ADD         R2, R3, R7 
    /*0000a2ec*/ LDR         R3, [R3, R7] 
    /*0000a2f0*/ CMP         R3, #1 
    /*0000a2f4*/ BEQ         VencPutStream_xa1e4
    /*0000a2f8*/ LDR         R0, [SP, #24] 
    /*0000a2fc*/ BL          0x0000000000000464 
    /*0000a300*/ CMP         R0, #0 
    /*0000a304*/ BNE         VencPutStream_xa220
    /*0000a308*/ LDR         R2, [SL] 
    /*0000a30c*/ ADD         R2, R2, R7 
    /*0000a310*/ B           VencPutStream_xa1e4
    VencPutStream_xa314:
    /*0000a314*/ MOV         R0, R8 
    /*0000a318*/ BL          0x0000000000000304 
    /*0000a31c*/ CMP         R0, #0 
    /*0000a320*/ BEQ         VencPutStream_xa094
    VencPutStream_xa324:
    /*0000a324*/ ADD         SP, SP, #204                @ 0xcc 
    /*0000a328*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencPutStream_xa32c:
    /*0000a32c*/ LDR         R2, [R8, #-12] 
    /*0000a330*/ MOV         R3, #0 
    /*0000a334*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000a338*/ CMP         R2, R3 
    /*0000a33c*/ BEQ         VencPutStream_xa35c
    /*0000a340*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000a344*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000a348*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000a34c*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000a350*/ MOV         R2, #141                    @ 0x8d 
    /*0000a354*/ LDR         R1, [PC, #1328]             @ 0x000000000000a88c 
    /*0000a358*/ BL          0x000000000000A358          @ osal_panic [R_ARM_CALL: +0x0] 
    VencPutStream_xa35c:
    /*0000a35c*/ LDR         R2, [R4, #24] 
    /*0000a360*/ SUB         R1, R8, #8 
    /*0000a364*/ ADD         R3, R4, #20 
    /*0000a368*/ STR         R1, [R4, #24] 
    /*0000a36c*/ STR         R3, [R8, #-8] 
    /*0000a370*/ STR         R2, [R8, #-4] 
    /*0000a374*/ STR         R1, [R2] 
    /*0000a378*/ LDR         R3, [R4, #8] 
    /*0000a37c*/ ADD         R3, R3, #1 
    /*0000a380*/ STR         R3, [R4, #8] 
    /*0000a384*/ B           VencPutStream_xa264
    VencPutStream_xa388:
    /*0000a388*/ MOVW        R2, #1002                   @ 0x3ea 
    /*0000a38c*/ CMP         R3, R2 
    /*0000a390*/ BEQ         VencPutStream_xa448
    /*0000a394*/ MOVW        R2, #1006                   @ 0x3ee 
    /*0000a398*/ CMP         R3, R2 
    /*0000a39c*/ BNE         VencPutStream_xa464
    /*0000a3a0*/ MOV         R0, #44                     @ 0x2c 
    /*0000a3a4*/ BL          0x000000000000A3A4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000a3a8*/ ADD         R1, SP, #64                 @ 0x40 
    /*0000a3ac*/ LDR         R3, [R0, #32] 
    /*0000a3b0*/ LDR         R0, [SP, #24] 
    /*0000a3b4*/ BLX         R3 
    /*0000a3b8*/ B           VencPutStream_xa220
    VencPutStream_xa3bc:
    /*0000a3bc*/ LDR         R3, [SP, #28] 
    /*0000a3c0*/ ADD         R3, R3, #8192               @ 0x2000 
    /*0000a3c4*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000a3c8*/ LDR         R3, [R3, #3816]             @ 0xee8 
    /*0000a3cc*/ CMP         R3, #0 
    /*0000a3d0*/ BEQ         VencPutStream_xa878
    /*0000a3d4*/ LDR         R3, [SP, #28] 
    /*0000a3d8*/ ADD         FP, R3, #60                 @ 0x3c 
    /*0000a3dc*/ ADD         R3, SP, #60                 @ 0x3c 
    /*0000a3e0*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000a3e4*/ MOV         R0, FP 
    /*0000a3e8*/ MOV         R1, R3 
    /*0000a3ec*/ BL          0x000000000000A3EC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    VencPutStream_xa3f0:
    /*0000a3f0*/ LDR         R3, [R5, #4] 
    /*0000a3f4*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000a3f8*/ CMP         R3, #1 
    /*0000a3fc*/ LDR         R4, [R2, #3816]             @ 0xee8 
    /*0000a400*/ BEQ         VencPutStream_xa19c
    /*0000a404*/ MOVW        R3, #6444                   @ 0x192c 
    /*0000a408*/ MOV         R1, #8 
    /*0000a40c*/ STR         R3, [SP] 
    /*0000a410*/ MOVW        R2, #0                      @ .LC292 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3330] 
    /*0000a414*/ LDR         R3, [PC, #1140]             @ 0x000000000000a890 
    /*0000a418*/ MOVT        R2, #0                      @ .LC292 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3330] 
    /*0000a41c*/ STR         R8, [SP, #4] 
    /*0000a420*/ MOV         R0, #3 
    /*0000a424*/ BL          0x000000000000A424          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a428*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0000a42c*/ MOV         R0, FP 
    /*0000a430*/ BL          0x000000000000A430          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000a434*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000a438*/ BL          0x000000000000A438          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a43c*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000a440*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000a444*/ B           VencPutStream_xa324
    VencPutStream_xa448:
    /*0000a448*/ MOV         R0, #11 
    /*0000a44c*/ BL          0x000000000000A44C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000a450*/ ADD         R1, SP, #64                 @ 0x40 
    /*0000a454*/ LDR         R3, [R0, #28] 
    /*0000a458*/ LDR         R0, [SP, #24] 
    /*0000a45c*/ BLX         R3 
    /*0000a460*/ B           VencPutStream_xa220
    VencPutStream_xa464:
    /*0000a464*/ MOVW        R2, #3960                   @ 0xf78 
    /*0000a468*/ LDR         R3, [PC, #1060]             @ 0x000000000000a894 
    /*0000a46c*/ STR         R2, [SP] 
    /*0000a470*/ MOV         R1, #8 
    /*0000a474*/ LDR         R2, [SP, #48]               @ 0x30 
    /*0000a478*/ MOV         R0, #3 
    /*0000a47c*/ BL          0x000000000000A47C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a480*/ B           VencPutStream_xa220
    VencPutStream_xa484:
    /*0000a484*/ MOV         R0, #13 
    /*0000a488*/ B           VencPutStream_xa20c
    VencPutStream_xa48c:
    /*0000a48c*/ CMP         R3, #1 
    /*0000a490*/ BEQ         VencPutStream_xa12c
    /*0000a494*/ MOVW        R2, #0                      @ .LC290 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3280] 
    /*0000a498*/ MOVT        R2, #0                      @ .LC290 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3280] 
    /*0000a49c*/ MOVW        R3, #6415                   @ 0x190f 
    /*0000a4a0*/ STR         R3, [SP] 
    VencPutStream_xa4a4:
    /*0000a4a4*/ LDR         R3, [PC, #996]              @ 0x000000000000a890 
    /*0000a4a8*/ MOV         R1, #8 
    /*0000a4ac*/ MOV         R0, #3 
    /*0000a4b0*/ BL          0x000000000000A4B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a4b4*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000a4b8*/ BL          0x000000000000A4B8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a4bc*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000a4c0*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000a4c4*/ B           VencPutStream_xa324
    VencPutStream_xa4c8:
    /*0000a4c8*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000a4cc*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000a4d0*/ B           VencPutStream_xa324
    VencPutStream_xa4d4:
    /*0000a4d4*/ BL          0x00000000000002C8 
    /*0000a4d8*/ CMP         R0, #0 
    /*0000a4dc*/ BNE         VencPutStream_xa324
    /*0000a4e0*/ B           VencPutStream_xa09c
    VencPutStream_xa4e4:
    /*0000a4e4*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0000a4e8*/ MOV         R0, FP 
    /*0000a4ec*/ STR         R3, [SP, #24] 
    /*0000a4f0*/ BL          0x000000000000A4F0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000a4f4*/ LDR         R3, [SP, #24] 
    /*0000a4f8*/ MOVW        IP, #6498                   @ 0x1962 
    /*0000a4fc*/ LDR         R0, [SP, #76]               @ 0x4c 
    /*0000a500*/ MOVW        R2, #0                      @ .LC297 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3464] 
    /*0000a504*/ LDR         LR, [SP, #72]               @ 0x48 
    /*0000a508*/ MOVT        R2, #0                      @ .LC297 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3464] 
    /*0000a50c*/ LDR         R1, [R3, #12] 
    /*0000a510*/ STR         R1, [SP, #16] 
    /*0000a514*/ MOV         R1, #8 
    /*0000a518*/ LDR         R3, [R3, #8] 
    /*0000a51c*/ STR         R0, [SP, #8] 
    /*0000a520*/ MOV         R0, #3 
    /*0000a524*/ STR         LR, [SP, #4] 
    /*0000a528*/ STR         R3, [SP, #12] 
    /*0000a52c*/ STR         IP, [SP] 
    /*0000a530*/ LDR         R3, [PC, #856]              @ 0x000000000000a890 
    /*0000a534*/ BL          0x000000000000A534          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a538*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000a53c*/ BL          0x000000000000A53C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a540*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000a544*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000a548*/ B           VencPutStream_xa324
    VencPutStream_xa54c:
    /*0000a54c*/ BL          0x00000000000002C8 
    /*0000a550*/ CMP         R0, #0 
    /*0000a554*/ BNE         VencPutStream_xa324
    /*0000a558*/ B           VencPutStream_xa0a8
    VencPutStream_xa55c:
    /*0000a55c*/ LDR         R8, [SP, #24] 
    VencPutStream_xa560:
    /*0000a560*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0000a564*/ MOV         R0, FP 
    /*0000a568*/ BL          0x000000000000A568          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000a56c*/ LDR         R3, [SP, #52]               @ 0x34 
    /*0000a570*/ CMP         R3, #0 
    /*0000a574*/ BEQ         VencPutStream_xa5a0
    /*0000a578*/ LDR         LR, [SP, #44]               @ 0x2c 
    /*0000a57c*/ LDR         R2, [SP, #52]               @ 0x34 
    /*0000a580*/ LDR         R3, [LR, #3808]             @ 0xee0 
    /*0000a584*/ ADD         R2, R2, #36                 @ 0x24 
    /*0000a588*/ CMP         R3, R2 
    /*0000a58c*/ BEQ         VencPutStream_xa5a0
    /*0000a590*/ LDR         R2, [R4, #36]               @ 0x24 
    /*0000a594*/ ADD         R4, R4, #36                 @ 0x24 
    /*0000a598*/ CMP         R2, R4 
    /*0000a59c*/ BEQ         VencPutStream_xa74c
    VencPutStream_xa5a0:
    /*0000a5a0*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0000a5a4*/ MOV         R0, FP 
    /*0000a5a8*/ BL          0x000000000000A5A8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000a5ac*/ LDR         LR, [SP, #28] 
    /*0000a5b0*/ LDR         IP, [R5, #4] 
    /*0000a5b4*/ MOVW        R3, #265                    @ 0x109 
    /*0000a5b8*/ ADD         R1, LR, #12288              @ 0x3000 
    /*0000a5bc*/ MOVW        R0, #1002                   @ 0x3ea 
    /*0000a5c0*/ LDR         R2, [R1, #108]              @ 0x6c 
    /*0000a5c4*/ ADD         R2, R2, IP 
    /*0000a5c8*/ STR         R2, [R1, #108]              @ 0x6c 
    /*0000a5cc*/ LDR         R2, [LR, #4] 
    /*0000a5d0*/ CMP         R2, R3 
    /*0000a5d4*/ CMPNE       R2, #96                     @ 0x60 
    /*0000a5d8*/ MOVEQ       R3, #1 
    /*0000a5dc*/ MOVNE       R3, #0 
    /*0000a5e0*/ CMP         R2, R0 
    /*0000a5e4*/ ORREQ       R3, R3, #1 
    /*0000a5e8*/ CMP         R3, #0 
    /*0000a5ec*/ BEQ         VencPutStream_xa604
    /*0000a5f0*/ MOV         R0, #19 
    /*0000a5f4*/ BL          0x000000000000A5F4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000a5f8*/ LDR         R3, [R0, #152]              @ 0x98 
    /*0000a5fc*/ MOV         R0, R8 
    /*0000a600*/ BLX         R3 
    VencPutStream_xa604:
    /*0000a604*/ MOVW        R3, #0                      @ FrameBufRecycle [R_ARM_MOVW_ABS_NC: .bss+0xac] 
    /*0000a608*/ MOVT        R3, #0                      @ FrameBufRecycle [R_ARM_MOVT_ABS: .bss+0xac] 
    /*0000a60c*/ LDR         R3, [R3] 
    /*0000a610*/ CMP         R3, #1 
    /*0000a614*/ BEQ         VencPutStream_xa6e0
    VencPutStream_xa618:
    /*0000a618*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000a61c*/ BL          0x000000000000A61C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a620*/ MOV         R0, #0 
    /*0000a624*/ B           VencPutStream_xa324
    VencPutStream_xa628:
    /*0000a628*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000a62c*/ BL          0x000000000000A62C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a630*/ MOVW        R3, #6465                   @ 0x1941 
    /*0000a634*/ MOVW        R2, #0                      @ .LC294 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33a0] 
    /*0000a638*/ STR         R3, [SP] 
    /*0000a63c*/ MOVT        R2, #0                      @ .LC294 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33a0] 
    /*0000a640*/ LDR         R3, [PC, #584]              @ 0x000000000000a890 
    /*0000a644*/ MOV         R1, #8 
    /*0000a648*/ MOV         R0, #3 
    /*0000a64c*/ BL          0x000000000000A64C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a650*/ MVN         R0, #0 
    /*0000a654*/ B           VencPutStream_xa324
    VencPutStream_xa658:
    /*0000a658*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0000a65c*/ MOV         R0, FP 
    /*0000a660*/ BL          0x000000000000A660          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000a664*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000a668*/ BL          0x000000000000A668          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a66c*/ MOVW        R3, #6477                   @ 0x194d 
    /*0000a670*/ MOVW        R2, #0                      @ .LC295 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33d4] 
    /*0000a674*/ STR         R3, [SP] 
    /*0000a678*/ MOVT        R2, #0                      @ .LC295 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33d4] 
    /*0000a67c*/ LDR         R3, [PC, #524]              @ 0x000000000000a890 
    /*0000a680*/ MOV         R1, #8 
    /*0000a684*/ MOV         R0, #3 
    /*0000a688*/ BL          0x000000000000A688          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a68c*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000a690*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000a694*/ B           VencPutStream_xa324
    VencPutStream_xa698:
    /*0000a698*/ LDR         R8, [SP, #24] 
    /*0000a69c*/ MOV         R0, FP 
    /*0000a6a0*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0000a6a4*/ BL          0x000000000000A6A4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000a6a8*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000a6ac*/ BL          0x000000000000A6AC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a6b0*/ MOVW        R3, #6486                   @ 0x1956 
    /*0000a6b4*/ STR         R8, [SP, #4] 
    /*0000a6b8*/ MOVW        R2, #0                      @ .LC296 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3428] 
    /*0000a6bc*/ STR         R3, [SP] 
    /*0000a6c0*/ MOVT        R2, #0                      @ .LC296 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3428] 
    /*0000a6c4*/ LDR         R3, [PC, #452]              @ 0x000000000000a890 
    /*0000a6c8*/ MOV         R1, #8 
    /*0000a6cc*/ MOV         R0, #3 
    /*0000a6d0*/ BL          0x000000000000A6D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a6d4*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000a6d8*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000a6dc*/ B           VencPutStream_xa324
    VencPutStream_xa6e0:
    /*0000a6e0*/ LDR         R3, [SP, #28] 
    /*0000a6e4*/ MOVW        R2, #265                    @ 0x109 
    /*0000a6e8*/ LDR         R3, [R3, #4] 
    /*0000a6ec*/ CMP         R3, R2 
    /*0000a6f0*/ BEQ         VencPutStream_xa860
    /*0000a6f4*/ CMP         R3, #96                     @ 0x60 
    /*0000a6f8*/ BNE         VencPutStream_xa618
    /*0000a6fc*/ MOV         R0, #10 
    /*0000a700*/ BL          0x000000000000A700          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000a704*/ LDR         R3, [R0, #256]              @ 0x100 
    /*0000a708*/ MOV         R0, R8 
    /*0000a70c*/ BLX         R3 
    /*0000a710*/ B           VencPutStream_xa618
    VencPutStream_xa714:
    /*0000a714*/ MOVW        R3, #6382                   @ 0x18ee 
    /*0000a718*/ MOV         R1, #8 
    /*0000a71c*/ STR         R3, [SP] 
    /*0000a720*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000a724*/ LDR         R3, [PC, #356]              @ 0x000000000000a890 
    /*0000a728*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000a72c*/ STR         R8, [SP, #4] 
    /*0000a730*/ MOV         R0, #3 
    /*0000a734*/ BL          0x000000000000A734          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a738*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000a73c*/ BL          0x000000000000A73C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a740*/ MOVW        R0, #32773                  @ 0x8005 
    /*0000a744*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000a748*/ B           VencPutStream_xa324
    VencPutStream_xa74c:
    /*0000a74c*/ LDR         R0, [R3, #4] 
    /*0000a750*/ MOV         R1, #256                    @ 0x100 
    /*0000a754*/ LDR         IP, [R3] 
    /*0000a758*/ MOVT        R1, #16 
    /*0000a75c*/ MOV         R2, #512                    @ 0x200 
    /*0000a760*/ MOVT        R2, #32 
    /*0000a764*/ STR         R0, [IP, #4] 
    /*0000a768*/ STR         IP, [R0] 
    /*0000a76c*/ STM         R3, {R1, R2} 
    /*0000a770*/ LDR         R2, [LR, #3788]             @ 0xecc 
    /*0000a774*/ SUB         R2, R2, #1 
    /*0000a778*/ STR         R2, [LR, #3788]             @ 0xecc 
    /*0000a77c*/ LDR         R4, [R3, #-8] 
    /*0000a780*/ CMP         R4, #0 
    /*0000a784*/ BEQ         VencPutStream_xa5a0
    /*0000a788*/ LDR         R2, [R4, #-12] 
    /*0000a78c*/ MOV         R3, #0 
    /*0000a790*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000a794*/ CMP         R2, R3 
    /*0000a798*/ BEQ         VencPutStream_xa7b8
    /*0000a79c*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000a7a0*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000a7a4*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000a7a8*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000a7ac*/ MOV         R2, #141                    @ 0x8d 
    /*0000a7b0*/ LDR         R1, [PC, #212]              @ 0x000000000000a88c 
    /*0000a7b4*/ BL          0x000000000000A7B4          @ osal_panic [R_ARM_CALL: +0x0] 
    VencPutStream_xa7b8:
    /*0000a7b8*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*0000a7bc*/ LDR         R2, [SP, #52]               @ 0x34 
    /*0000a7c0*/ LDR         R3, [R0, #3796]             @ 0xed4 
    /*0000a7c4*/ ADD         R1, R2, #20 
    /*0000a7c8*/ SUB         R2, R4, #8 
    /*0000a7cc*/ STR         R2, [R0, #3796]             @ 0xed4 
    /*0000a7d0*/ STMDB       R4, {R1, R3} 
    /*0000a7d4*/ STR         R2, [R3] 
    /*0000a7d8*/ LDR         R3, [R0, #3780]             @ 0xec4 
    /*0000a7dc*/ ADD         R3, R3, #1 
    /*0000a7e0*/ STR         R3, [R0, #3780]             @ 0xec4 
    /*0000a7e4*/ B           VencPutStream_xa5a0
    VencPutStream_xa7e8:
    /*0000a7e8*/ MOVW        R3, #6452                   @ 0x1934 
    /*0000a7ec*/ MOV         R1, #8 
    /*0000a7f0*/ STR         R3, [SP] 
    /*0000a7f4*/ MOVW        R2, #0                      @ .LC293 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x336c] 
    /*0000a7f8*/ LDR         R3, [PC, #144]              @ 0x000000000000a890 
    /*0000a7fc*/ MOVT        R2, #0                      @ .LC293 [R_ARM_MOVT_ABS: .rodata.str1.4+0x336c] 
    /*0000a800*/ STR         R8, [SP, #4] 
    /*0000a804*/ MOV         R0, #3 
    /*0000a808*/ BL          0x000000000000A808          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a80c*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0000a810*/ MOV         R0, FP 
    /*0000a814*/ BL          0x000000000000A814          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000a818*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000a81c*/ BL          0x000000000000A81C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a820*/ MOVW        R0, #32781                  @ 0x800d 
    /*0000a824*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000a828*/ B           VencPutStream_xa324
    VencPutStream_xa82c:
    /*0000a82c*/ MOVW        R3, #6392                   @ 0x18f8 
    /*0000a830*/ MOV         R1, #8 
    /*0000a834*/ STR         R3, [SP] 
    /*0000a838*/ MOVW        R2, #0                      @ .LC288 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31ec] 
    /*0000a83c*/ LDR         R3, [PC, #76]               @ 0x000000000000a890 
    /*0000a840*/ MOVT        R2, #0                      @ .LC288 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31ec] 
    /*0000a844*/ MOV         R0, #3 
    /*0000a848*/ BL          0x000000000000A848          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a84c*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000a850*/ BL          0x000000000000A850          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a854*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000a858*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000a85c*/ B           VencPutStream_xa324
    VencPutStream_xa860:
    /*0000a860*/ MOV         R0, #13 
    /*0000a864*/ BL          0x000000000000A864          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000a868*/ LDR         R3, [R0, #268]              @ 0x10c 
    /*0000a86c*/ MOV         R0, R8 
    /*0000a870*/ BLX         R3 
    /*0000a874*/ B           VencPutStream_xa618
    VencPutStream_xa878:
    /*0000a878*/ MOVW        R3, #6427                   @ 0x191b 
    /*0000a87c*/ MOVW        R2, #0                      @ .LC291 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32d0] 
    /*0000a880*/ STR         R3, [SP] 
    /*0000a884*/ MOVT        R2, #0                      @ .LC291 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32d0] 
    /*0000a888*/ B           VencPutStream_xa4a4
    /*0000a88c*/ STRDEQ      R0, [R0], -IP 
    /*0000a890*/ LDRDEQ      R0, [R0], -R8 
    /*0000a894*/ ANDEQ       R0, R0, R8, ROR #7 
FUNC_END VencPutStream


FUNC_BEGIN VencPacktoVencBuf
    /*0000a898*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000a89c*/ SUBS        R4, R0, #0 
    /*0000a8a0*/ SUB         SP, SP, #36                 @ 0x24 
    /*0000a8a4*/ MOV         R3, #0 
    /*0000a8a8*/ MOV         R7, R1 
    /*0000a8ac*/ STR         R3, [R1] 
    /*0000a8b0*/ STR         R3, [SP, #28] 
    /*0000a8b4*/ BLT         VencPacktoVencBuf_xa8cc
    /*0000a8b8*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000a8bc*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000a8c0*/ LDR         R3, [R3] 
    /*0000a8c4*/ CMP         R3, R4 
    /*0000a8c8*/ BHI         VencPacktoVencBuf_xa8e8
    VencPacktoVencBuf_xa8cc:
    /*0000a8cc*/ MOV         R0, R4 
    /*0000a8d0*/ BL          0x0000000000000304 
    /*0000a8d4*/ SUBS        R8, R0, #0 
    /*0000a8d8*/ BEQ         VencPacktoVencBuf_xa8e8
    VencPacktoVencBuf_xa8dc:
    /*0000a8dc*/ MOV         R0, R8 
    /*0000a8e0*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000a8e4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencPacktoVencBuf_xa8e8:
    /*0000a8e8*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0000a8ec*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000a8f0*/ MUL         R5, R5, R4 
    /*0000a8f4*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000a8f8*/ LDR         R3, [R6] 
    /*0000a8fc*/ LDR         R3, [R3, R5] 
    /*0000a900*/ CMP         R3, #1 
    /*0000a904*/ BEQ         VencPacktoVencBuf_xa918
    /*0000a908*/ MOV         R0, R4 
    /*0000a90c*/ BL          0x0000000000000464 
    /*0000a910*/ SUBS        R8, R0, #0 
    /*0000a914*/ BNE         VencPacktoVencBuf_xa8dc
    VencPacktoVencBuf_xa918:
    /*0000a918*/ CMP         R7, #0 
    /*0000a91c*/ BEQ         VencPacktoVencBuf_xaeb4
    VencPacktoVencBuf_xa920:
    /*0000a920*/ LDR         R3, [R6] 
    /*0000a924*/ ADD         R3, R3, R5 
    /*0000a928*/ STR         R3, [SP, #8] 
    /*0000a92c*/ ADD         FP, R3, #11904              @ 0x2e80 
    /*0000a930*/ ADD         FP, FP, #60                 @ 0x3c 
    /*0000a934*/ CMP         FP, #0 
    /*0000a938*/ BEQ         VencPacktoVencBuf_xaf8c
    /*0000a93c*/ LDR         R3, [SP, #8] 
    /*0000a940*/ ADD         SL, R3, #8192               @ 0x2000 
    /*0000a944*/ ADD         R3, FP, #20 
    /*0000a948*/ STR         R3, [SP, #16] 
    /*0000a94c*/ MOV         R2, R3 
    /*0000a950*/ LDR         R3, [SL, #3792]             @ 0xed0 
    /*0000a954*/ CMP         R2, R3 
    /*0000a958*/ BEQ         VencPacktoVencBuf_xaaec
    VencPacktoVencBuf_xa95c:
    /*0000a95c*/ LDR         R9, [R3, #-8] 
    /*0000a960*/ CMP         R9, #0 
    /*0000a964*/ BEQ         VencPacktoVencBuf_xaba4
    /*0000a968*/ LDR         R3, [R9, #20] 
    /*0000a96c*/ ADD         R2, R9, #20 
    /*0000a970*/ STR         R2, [SP, #12] 
    /*0000a974*/ CMP         R2, R3 
    /*0000a978*/ BEQ         VencPacktoVencBuf_xabf0
    VencPacktoVencBuf_xa97c:
    /*0000a97c*/ LDR         R2, [R3, #-8] 
    /*0000a980*/ CMP         R2, #0 
    /*0000a984*/ BEQ         VencPacktoVencBuf_xac68
    /*0000a988*/ LDR         R3, [R6] 
    /*0000a98c*/ ADD         R1, R3, R5 
    /*0000a990*/ LDR         R3, [R3, R5] 
    /*0000a994*/ CMP         R3, #1 
    /*0000a998*/ MOVEQ       R6, R2 
    /*0000a99c*/ BNE         VencPacktoVencBuf_xad30
    VencPacktoVencBuf_xa9a0:
    /*0000a9a0*/ LDR         R3, [R1, #4] 
    /*0000a9a4*/ MOVW        R2, #265                    @ 0x109 
    /*0000a9a8*/ CMP         R3, R2 
    /*0000a9ac*/ BEQ         VencPacktoVencBuf_xaee4
    /*0000a9b0*/ BHI         VencPacktoVencBuf_xacb0
    /*0000a9b4*/ CMP         R3, #26 
    /*0000a9b8*/ BEQ         VencPacktoVencBuf_xaec4
    /*0000a9bc*/ CMP         R3, #96                     @ 0x60 
    /*0000a9c0*/ MOVEQ       R0, #10 
    /*0000a9c4*/ BNE         VencPacktoVencBuf_xaccc
    VencPacktoVencBuf_xa9c8:
    /*0000a9c8*/ BL          0x000000000000A9C8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000a9cc*/ MOV         R1, R6 
    /*0000a9d0*/ LDR         R3, [R0, #20] 
    /*0000a9d4*/ MOV         R0, R4 
    /*0000a9d8*/ BLX         R3 
    /*0000a9dc*/ MOV         R8, R0 
    VencPacktoVencBuf_xa9e0:
    /*0000a9e0*/ CMP         R8, #0 
    /*0000a9e4*/ BNE         VencPacktoVencBuf_xacf4
    /*0000a9e8*/ LDR         R3, [R6, #24] 
    /*0000a9ec*/ LDR         R2, [SP, #12] 
    /*0000a9f0*/ STR         R3, [R7] 
    /*0000a9f4*/ LDR         R3, [R9, #20] 
    /*0000a9f8*/ CMP         R2, R3 
    /*0000a9fc*/ BEQ         VencPacktoVencBuf_xadf0
    /*0000aa00*/ LDR         R0, [R3, #4] 
    /*0000aa04*/ MOV         R1, #256                    @ 0x100 
    /*0000aa08*/ LDR         IP, [R3] 
    /*0000aa0c*/ MOVT        R1, #16 
    /*0000aa10*/ MOV         R2, #512                    @ 0x200 
    /*0000aa14*/ MOVT        R2, #32 
    /*0000aa18*/ STR         R0, [IP, #4] 
    /*0000aa1c*/ STR         IP, [R0] 
    /*0000aa20*/ STM         R3, {R1, R2} 
    /*0000aa24*/ LDR         R2, [R9, #8] 
    /*0000aa28*/ SUB         R2, R2, #1 
    /*0000aa2c*/ STR         R2, [R9, #8] 
    /*0000aa30*/ LDR         R4, [R3, #-8] 
    /*0000aa34*/ CMP         R4, #0 
    /*0000aa38*/ BEQ         VencPacktoVencBuf_xadf0
    /*0000aa3c*/ LDR         R2, [R4, #-12] 
    /*0000aa40*/ MOV         R3, #0 
    /*0000aa44*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000aa48*/ CMP         R2, R3 
    /*0000aa4c*/ BEQ         VencPacktoVencBuf_xaa6c
    /*0000aa50*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000aa54*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000aa58*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000aa5c*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000aa60*/ MOV         R2, #217                    @ 0xd9 
    /*0000aa64*/ LDR         R1, [PC, #1356]             @ 0x000000000000afb8 
    /*0000aa68*/ BL          0x000000000000AA68          @ osal_panic [R_ARM_CALL: +0x0] 
    VencPacktoVencBuf_xaa6c:
    /*0000aa6c*/ LDR         R2, [R9, #32] 
    /*0000aa70*/ SUB         R1, R4, #8 
    /*0000aa74*/ ADD         R3, R9, #28 
    /*0000aa78*/ STR         R1, [R9, #32] 
    /*0000aa7c*/ STR         R3, [R4, #-8] 
    /*0000aa80*/ MOV         R5, R4 
    /*0000aa84*/ STR         R2, [R4, #-4] 
    /*0000aa88*/ STR         R1, [R2] 
    /*0000aa8c*/ LDR         R3, [R9, #12] 
    /*0000aa90*/ ADD         R3, R3, #1 
    /*0000aa94*/ STR         R3, [R9, #12] 
    VencPacktoVencBuf_xaa98:
    /*0000aa98*/ LDR         R3, [SP, #28] 
    /*0000aa9c*/ CMP         R3, #0 
    /*0000aaa0*/ BEQ         VencPacktoVencBuf_xaab8
    /*0000aaa4*/ LDR         R3, [SP, #8] 
    /*0000aaa8*/ LDR         R2, [R3, #4] 
    /*0000aaac*/ MOVW        R3, #265                    @ 0x109 
    /*0000aab0*/ CMP         R2, R3 
    /*0000aab4*/ BEQ         VencPacktoVencBuf_xae14
    VencPacktoVencBuf_xaab8:
    /*0000aab8*/ LDR         R3, [R7] 
    /*0000aabc*/ CMP         R3, #1 
    /*0000aac0*/ BEQ         VencPacktoVencBuf_xad58
    VencPacktoVencBuf_xaac4:
    /*0000aac4*/ LDR         R3, [SL, #3828]             @ 0xef4 
    /*0000aac8*/ LDR         R2, [R5, #12] 
    /*0000aacc*/ ADD         R3, R3, R2 
    /*0000aad0*/ STR         R3, [SL, #3828]             @ 0xef4 
    /*0000aad4*/ LDR         R3, [R5, #24] 
    /*0000aad8*/ CMP         R3, #1 
    /*0000aadc*/ LDREQ       R3, [SL, #3832]             @ 0xef8 
    /*0000aae0*/ ADDEQ       R3, R3, #1 
    /*0000aae4*/ STREQ       R3, [SL, #3832]             @ 0xef8 
    /*0000aae8*/ B           VencPacktoVencBuf_xa8dc
    VencPacktoVencBuf_xaaec:
    /*0000aaec*/ LDR         R0, [SL, #3776]             @ 0xec0 
    /*0000aaf0*/ MOV         R1, #1 
    /*0000aaf4*/ ADD         R0, R0, #16 
    /*0000aaf8*/ BL          0x000000000000AAF8          @ osal_kmalloc [R_ARM_CALL: +0x0] 
    /*0000aafc*/ CMP         R0, #0 
    /*0000ab00*/ BEQ         VencPacktoVencBuf_xaf78
    /*0000ab04*/ ADD         R2, R0, #16 
    /*0000ab08*/ MOV         R3, #0 
    /*0000ab0c*/ LDR         R1, [SP, #16] 
    /*0000ab10*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000ab14*/ STM         R0, {R2, R3} 
    /*0000ab18*/ ADD         R2, R0, #8 
    /*0000ab1c*/ LDR         R3, [SL, #3796]             @ 0xed4 
    /*0000ab20*/ STR         R2, [SL, #3796]             @ 0xed4 
    /*0000ab24*/ STR         R1, [R0, #8] 
    /*0000ab28*/ STR         R3, [R0, #12] 
    /*0000ab2c*/ STR         R2, [R3] 
    /*0000ab30*/ LDR         R2, [SL, #3772]             @ 0xebc 
    /*0000ab34*/ LDR         R3, [SL, #3780]             @ 0xec4 
    /*0000ab38*/ ADD         R2, R2, #1 
    /*0000ab3c*/ STR         R2, [SL, #3772]             @ 0xebc 
    /*0000ab40*/ ADD         R3, R3, #1 
    /*0000ab44*/ STR         R3, [SL, #3780]             @ 0xec4 
    /*0000ab48*/ LDR         R3, [R0] 
    /*0000ab4c*/ CMP         R3, #0 
    /*0000ab50*/ BEQ         VencPacktoVencBuf_xaf8c
    /*0000ab54*/ ADD         R2, R3, #20 
    /*0000ab58*/ ADD         R1, R3, #28 
    /*0000ab5c*/ STR         R2, [R3, #20] 
    /*0000ab60*/ STR         R2, [R3, #24] 
    /*0000ab64*/ ADD         R2, R3, #36                 @ 0x24 
    /*0000ab68*/ STR         R1, [R3, #28] 
    /*0000ab6c*/ STR         R1, [R3, #32] 
    /*0000ab70*/ MOV         R1, #136                    @ 0x88 
    /*0000ab74*/ STR         R2, [R3, #36]               @ 0x24 
    /*0000ab78*/ STR         R2, [R3, #40]               @ 0x28 
    /*0000ab7c*/ MOV         R2, #0 
    /*0000ab80*/ STR         R1, [R3, #4] 
    /*0000ab84*/ STR         R2, [R3] 
    /*0000ab88*/ STR         R2, [R3, #8] 
    /*0000ab8c*/ STR         R2, [R3, #12] 
    /*0000ab90*/ STR         R2, [R3, #16] 
    /*0000ab94*/ LDR         R2, [SP, #16] 
    /*0000ab98*/ LDR         R3, [SL, #3792]             @ 0xed0 
    /*0000ab9c*/ CMP         R2, R3 
    /*0000aba0*/ BNE         VencPacktoVencBuf_xa95c
    VencPacktoVencBuf_xaba4:
    /*0000aba4*/ MOVW        R3, #0                      @ .LC300 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x352c] 
    /*0000aba8*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000abac*/ MOVT        R3, #0                      @ .LC300 [R_ARM_MOVT_ABS: .rodata.str1.4+0x352c] 
    /*0000abb0*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000abb4*/ MOVW        R2, #6618                   @ 0x19da 
    /*0000abb8*/ LDR         R1, [PC, #1020]             @ 0x000000000000afbc 
    /*0000abbc*/ BL          0x000000000000ABBC          @ osal_panic [R_ARM_CALL: +0x0] 
    VencPacktoVencBuf_xabc0:
    /*0000abc0*/ MOVW        R3, #6626                   @ 0x19e2 
    /*0000abc4*/ STR         R4, [SP, #4] 
    VencPacktoVencBuf_xabc8:
    /*0000abc8*/ STR         R3, [SP] 
    /*0000abcc*/ MOVW        R2, #0                      @ .LC301 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3540] 
    /*0000abd0*/ LDR         R3, [PC, #996]              @ 0x000000000000afbc 
    /*0000abd4*/ MOVT        R2, #0                      @ .LC301 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3540] 
    /*0000abd8*/ MOV         R1, #8 
    /*0000abdc*/ MOV         R0, #1 
    /*0000abe0*/ MOVW        R8, #32780                  @ 0x800c 
    /*0000abe4*/ BL          0x000000000000ABE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000abe8*/ MOVT        R8, #40968                  @ 0xa008 
    /*0000abec*/ B           VencPacktoVencBuf_xa8dc
    VencPacktoVencBuf_xabf0:
    /*0000abf0*/ LDR         R0, [R9, #4] 
    /*0000abf4*/ MOV         R1, #1 
    /*0000abf8*/ ADD         R0, R0, #16 
    /*0000abfc*/ BL          0x000000000000ABFC          @ osal_kmalloc [R_ARM_CALL: +0x0] 
    /*0000ac00*/ CMP         R0, #0 
    /*0000ac04*/ BEQ         VencPacktoVencBuf_xafa0
    /*0000ac08*/ ADD         R2, R0, #16 
    /*0000ac0c*/ MOV         R3, #0 
    /*0000ac10*/ LDR         R1, [SP, #12] 
    /*0000ac14*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000ac18*/ STM         R0, {R2, R3} 
    /*0000ac1c*/ ADD         R2, R0, #8 
    /*0000ac20*/ LDR         R3, [R9, #24] 
    /*0000ac24*/ STR         R2, [R9, #24] 
    /*0000ac28*/ STR         R1, [R0, #8] 
    /*0000ac2c*/ STR         R3, [R0, #12] 
    /*0000ac30*/ STR         R2, [R3] 
    /*0000ac34*/ LDR         R2, [R9] 
    /*0000ac38*/ LDR         R3, [R9, #8] 
    /*0000ac3c*/ ADD         R2, R2, #1 
    /*0000ac40*/ STR         R2, [R9] 
    /*0000ac44*/ ADD         R3, R3, #1 
    /*0000ac48*/ STR         R3, [R9, #8] 
    /*0000ac4c*/ LDR         R3, [R0] 
    /*0000ac50*/ CMP         R3, #0 
    /*0000ac54*/ BEQ         VencPacktoVencBuf_xabc0
    /*0000ac58*/ LDR         R3, [R9, #20] 
    /*0000ac5c*/ LDR         R2, [SP, #12] 
    /*0000ac60*/ CMP         R2, R3 
    /*0000ac64*/ BNE         VencPacktoVencBuf_xa97c
    VencPacktoVencBuf_xac68:
    /*0000ac68*/ MOVW        R3, #0                      @ .LC302 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x358c] 
    /*0000ac6c*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000ac70*/ MOVT        R3, #0                      @ .LC302 [R_ARM_MOVT_ABS: .rodata.str1.4+0x358c] 
    /*0000ac74*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000ac78*/ MOVW        R2, #6631                   @ 0x19e7 
    /*0000ac7c*/ LDR         R1, [PC, #824]              @ 0x000000000000afbc 
    /*0000ac80*/ BL          0x000000000000AC80          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000ac84*/ LDR         R3, [R6] 
    /*0000ac88*/ LDR         R3, [R3, R5] 
    /*0000ac8c*/ CMP         R3, #1 
    /*0000ac90*/ BNE         VencPacktoVencBuf_xaf64
    VencPacktoVencBuf_xac94:
    /*0000ac94*/ BL          0x00000000000002C8 
    /*0000ac98*/ SUBS        R8, R0, #0 
    /*0000ac9c*/ BNE         VencPacktoVencBuf_xacf4
    /*0000aca0*/ LDR         R1, [R6] 
    /*0000aca4*/ MOV         R6, R8 
    /*0000aca8*/ ADD         R1, R1, R5 
    /*0000acac*/ B           VencPacktoVencBuf_xa9a0
    VencPacktoVencBuf_xacb0:
    /*0000acb0*/ MOVW        R2, #1002                   @ 0x3ea 
    /*0000acb4*/ CMP         R3, R2 
    /*0000acb8*/ BEQ         VencPacktoVencBuf_xaec4
    /*0000acbc*/ MOVW        R2, #1006                   @ 0x3ee 
    /*0000acc0*/ CMP         R3, R2 
    /*0000acc4*/ MOVEQ       R0, #44                     @ 0x2c 
    /*0000acc8*/ BEQ         VencPacktoVencBuf_xa9c8
    VencPacktoVencBuf_xaccc:
    /*0000accc*/ MOVW        R3, #3900                   @ 0xf3c 
    /*0000acd0*/ MOVW        R2, #0                      @ .LC303 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x359c] 
    /*0000acd4*/ STR         R3, [SP] 
    /*0000acd8*/ MOVT        R2, #0                      @ .LC303 [R_ARM_MOVT_ABS: .rodata.str1.4+0x359c] 
    /*0000acdc*/ LDR         R3, [PC, #732]              @ 0x000000000000afc0 
    /*0000ace0*/ MOV         R1, #8 
    /*0000ace4*/ MOV         R0, #3 
    /*0000ace8*/ MOVW        R8, #32776                  @ 0x8008 
    /*0000acec*/ BL          0x000000000000ACEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000acf0*/ MOVT        R8, #40968                  @ 0xa008 
    VencPacktoVencBuf_xacf4:
    /*0000acf4*/ MOVW        R3, #6637                   @ 0x19ed 
    /*0000acf8*/ STR         R4, [SP, #4] 
    /*0000acfc*/ STR         R3, [SP] 
    /*0000ad00*/ MOVW        R2, #0                      @ .LC304 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35d8] 
    /*0000ad04*/ LDR         R3, [PC, #688]              @ 0x000000000000afbc 
    /*0000ad08*/ MOVT        R2, #0                      @ .LC304 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35d8] 
    /*0000ad0c*/ MOV         R1, #8 
    /*0000ad10*/ MOV         R0, #5 
    /*0000ad14*/ BL          0x000000000000AD14          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ad18*/ LDR         R3, [SP, #8] 
    /*0000ad1c*/ ADD         R2, R3, #12288              @ 0x3000 
    /*0000ad20*/ LDR         R3, [R2, #96]               @ 0x60 
    /*0000ad24*/ ADD         R3, R3, #1 
    /*0000ad28*/ STR         R3, [R2, #96]               @ 0x60 
    /*0000ad2c*/ B           VencPacktoVencBuf_xa8dc
    VencPacktoVencBuf_xad30:
    /*0000ad30*/ MOV         R0, R4 
    /*0000ad34*/ STR         R2, [SP, #20] 
    /*0000ad38*/ BL          0x0000000000000464 
    /*0000ad3c*/ LDR         R2, [SP, #20] 
    /*0000ad40*/ SUBS        R8, R0, #0 
    /*0000ad44*/ BNE         VencPacktoVencBuf_xacf4
    /*0000ad48*/ LDR         R1, [R6] 
    /*0000ad4c*/ MOV         R6, R2 
    /*0000ad50*/ ADD         R1, R1, R5 
    /*0000ad54*/ B           VencPacktoVencBuf_xa9a0
    VencPacktoVencBuf_xad58:
    /*0000ad58*/ LDR         R3, [SL, #3792]             @ 0xed0 
    /*0000ad5c*/ LDR         R2, [SP, #16] 
    /*0000ad60*/ CMP         R2, R3 
    /*0000ad64*/ BEQ         VencPacktoVencBuf_xada4
    /*0000ad68*/ LDR         R0, [R3, #4] 
    /*0000ad6c*/ MOV         R1, #256                    @ 0x100 
    /*0000ad70*/ LDR         IP, [R3] 
    /*0000ad74*/ MOVT        R1, #16 
    /*0000ad78*/ MOV         R2, #512                    @ 0x200 
    /*0000ad7c*/ MOVT        R2, #32 
    /*0000ad80*/ STR         R0, [IP, #4] 
    /*0000ad84*/ STR         IP, [R0] 
    /*0000ad88*/ STM         R3, {R1, R2} 
    /*0000ad8c*/ LDR         R2, [SL, #3780]             @ 0xec4 
    /*0000ad90*/ SUB         R2, R2, #1 
    /*0000ad94*/ STR         R2, [SL, #3780]             @ 0xec4 
    /*0000ad98*/ LDR         R4, [R3, #-8] 
    /*0000ad9c*/ CMP         R4, #0 
    /*0000ada0*/ BNE         VencPacktoVencBuf_xaf08
    VencPacktoVencBuf_xada4:
    /*0000ada4*/ MOV         R0, #2 
    /*0000ada8*/ BL          0x000000000000ADA8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000adac*/ LDR         R3, [R0] 
    /*0000adb0*/ BLX         R3 
    /*0000adb4*/ LDR         R3, [R5, #16] 
    /*0000adb8*/ LDR         R2, [SL, #3976]             @ 0xf88 
    /*0000adbc*/ MOV         R1, #8 
    /*0000adc0*/ SUB         R0, R0, R3 
    /*0000adc4*/ MOVW        R3, #6694                   @ 0x1a26 
    /*0000adc8*/ CMP         R0, R2 
    /*0000adcc*/ STR         R0, [SL, #3972]             @ 0xf84 
    /*0000add0*/ STRCC       R0, [SL, #3976]             @ 0xf88 
    /*0000add4*/ MOVW        R2, #0                      @ .LC305 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x360c] 
    /*0000add8*/ STR         R3, [SP] 
    /*0000addc*/ MOVT        R2, #0                      @ .LC305 [R_ARM_MOVT_ABS: .rodata.str1.4+0x360c] 
    /*0000ade0*/ LDR         R3, [PC, #468]              @ 0x000000000000afbc 
    /*0000ade4*/ MOV         R0, #7 
    /*0000ade8*/ BL          0x000000000000ADE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000adec*/ B           VencPacktoVencBuf_xaac4
    VencPacktoVencBuf_xadf0:
    /*0000adf0*/ MOVW        R3, #0                      @ .LC302 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x358c] 
    /*0000adf4*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000adf8*/ MOVT        R3, #0                      @ .LC302 [R_ARM_MOVT_ABS: .rodata.str1.4+0x358c] 
    /*0000adfc*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000ae00*/ MOVW        R2, #6646                   @ 0x19f6 
    /*0000ae04*/ LDR         R1, [PC, #432]              @ 0x000000000000afbc 
    /*0000ae08*/ BL          0x000000000000AE08          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000ae0c*/ MOV         R5, #0 
    /*0000ae10*/ B           VencPacktoVencBuf_xaa98
    VencPacktoVencBuf_xae14:
    /*0000ae14*/ LDR         R3, [R5, #28] 
    /*0000ae18*/ SUB         R2, R3, #1 
    /*0000ae1c*/ CMP         R3, #19 
    /*0000ae20*/ CMPNE       R2, #1 
    /*0000ae24*/ BHI         VencPacktoVencBuf_xaab8
    /*0000ae28*/ LDR         R0, [R9, #12] 
    /*0000ae2c*/ LDR         R3, [R9, #28] 
    /*0000ae30*/ CMP         R0, #0 
    /*0000ae34*/ SUB         R2, R3, #8 
    /*0000ae38*/ BEQ         VencPacktoVencBuf_xaab8
    /*0000ae3c*/ LDR         R3, [R3, #-8] 
    /*0000ae40*/ LDR         R3, [R3, #28] 
    /*0000ae44*/ CMP         R3, #34                     @ 0x22 
    /*0000ae48*/ MOVNE       R3, #0 
    /*0000ae4c*/ BEQ         VencPacktoVencBuf_xaf98
    VencPacktoVencBuf_xae50:
    /*0000ae50*/ ADD         R3, R3, #1 
    /*0000ae54*/ LDR         R1, [R2, #8] 
    /*0000ae58*/ CMP         R3, R0 
    /*0000ae5c*/ SUB         R2, R1, #8 
    /*0000ae60*/ BEQ         VencPacktoVencBuf_xaab8
    /*0000ae64*/ LDR         R1, [R1, #-8] 
    /*0000ae68*/ LDR         R1, [R1, #28] 
    /*0000ae6c*/ CMP         R1, #34                     @ 0x22 
    /*0000ae70*/ BNE         VencPacktoVencBuf_xae50
    VencPacktoVencBuf_xae74:
    /*0000ae74*/ ADD         R3, R3, #1 
    /*0000ae78*/ LDR         R1, [R2, #8] 
    /*0000ae7c*/ CMP         R3, R0 
    /*0000ae80*/ SUB         R2, R1, #8 
    /*0000ae84*/ BCS         VencPacktoVencBuf_xaab8
    /*0000ae88*/ LDR         R1, [R1, #-8] 
    /*0000ae8c*/ LDR         IP, [R1, #28] 
    /*0000ae90*/ CMP         IP, #39                     @ 0x27 
    /*0000ae94*/ BNE         VencPacktoVencBuf_xae74
    /*0000ae98*/ LDR         R3, [R1, #12] 
    /*0000ae9c*/ ADD         R3, R3, #1 
    /*0000aea0*/ STR         R3, [R1, #12] 
    /*0000aea4*/ LDR         R3, [SL, #3828]             @ 0xef4 
    /*0000aea8*/ ADD         R3, R3, #1 
    /*0000aeac*/ STR         R3, [SL, #3828]             @ 0xef4 
    /*0000aeb0*/ B           VencPacktoVencBuf_xaab8
    VencPacktoVencBuf_xaeb4:
    /*0000aeb4*/ BL          0x00000000000002C8 
    /*0000aeb8*/ SUBS        R8, R0, #0 
    /*0000aebc*/ BNE         VencPacktoVencBuf_xa8dc
    /*0000aec0*/ B           VencPacktoVencBuf_xa920
    VencPacktoVencBuf_xaec4:
    /*0000aec4*/ MOV         R0, #11 
    /*0000aec8*/ BL          0x000000000000AEC8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000aecc*/ MOV         R1, R6 
    /*0000aed0*/ LDR         R3, [R0, #24] 
    /*0000aed4*/ MOV         R0, R4 
    /*0000aed8*/ BLX         R3 
    /*0000aedc*/ MOV         R8, R0 
    /*0000aee0*/ B           VencPacktoVencBuf_xa9e0
    VencPacktoVencBuf_xaee4:
    /*0000aee4*/ MOV         R0, #13 
    /*0000aee8*/ BL          0x000000000000AEE8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000aeec*/ ADD         R2, SP, #28 
    /*0000aef0*/ MOV         R1, R6 
    /*0000aef4*/ LDR         R3, [R0, #20] 
    /*0000aef8*/ MOV         R0, R4 
    /*0000aefc*/ BLX         R3 
    /*0000af00*/ MOV         R8, R0 
    /*0000af04*/ B           VencPacktoVencBuf_xa9e0
    VencPacktoVencBuf_xaf08:
    /*0000af08*/ LDR         R2, [R4, #-12] 
    /*0000af0c*/ MOV         R3, #0 
    /*0000af10*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000af14*/ CMP         R2, R3 
    /*0000af18*/ BEQ         VencPacktoVencBuf_xaf38
    /*0000af1c*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000af20*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000af24*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000af28*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000af2c*/ MOV         R2, #217                    @ 0xd9 
    /*0000af30*/ LDR         R1, [PC, #128]              @ 0x000000000000afb8 
    /*0000af34*/ BL          0x000000000000AF34          @ osal_panic [R_ARM_CALL: +0x0] 
    VencPacktoVencBuf_xaf38:
    /*0000af38*/ LDR         R3, [SL, #3804]             @ 0xedc 
    /*0000af3c*/ SUB         R2, R4, #8 
    /*0000af40*/ ADD         FP, FP, #28 
    /*0000af44*/ STR         R2, [SL, #3804]             @ 0xedc 
    /*0000af48*/ STR         FP, [R4, #-8] 
    /*0000af4c*/ STR         R3, [R4, #-4] 
    /*0000af50*/ STR         R2, [R3] 
    /*0000af54*/ LDR         R3, [SL, #3784]             @ 0xec8 
    /*0000af58*/ ADD         R3, R3, #1 
    /*0000af5c*/ STR         R3, [SL, #3784]             @ 0xec8 
    /*0000af60*/ B           VencPacktoVencBuf_xada4
    VencPacktoVencBuf_xaf64:
    /*0000af64*/ MOV         R0, R4 
    /*0000af68*/ BL          0x0000000000000464 
    /*0000af6c*/ SUBS        R8, R0, #0 
    /*0000af70*/ BNE         VencPacktoVencBuf_xacf4
    /*0000af74*/ B           VencPacktoVencBuf_xac94
    VencPacktoVencBuf_xaf78:
    /*0000af78*/ MOVW        R2, #0                      @ .LC299 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x350c] 
    /*0000af7c*/ MOV         R1, #8 
    /*0000af80*/ MOVT        R2, #0                      @ .LC299 [R_ARM_MOVT_ABS: .rodata.str1.4+0x350c] 
    /*0000af84*/ MOV         R0, #1 
    /*0000af88*/ BL          0x000000000000AF88          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencPacktoVencBuf_xaf8c:
    /*0000af8c*/ STR         R4, [SP, #4] 
    /*0000af90*/ MOVW        R3, #6612                   @ 0x19d4 
    /*0000af94*/ B           VencPacktoVencBuf_xabc8
    VencPacktoVencBuf_xaf98:
    /*0000af98*/ MOV         R3, #0 
    /*0000af9c*/ B           VencPacktoVencBuf_xae74
    VencPacktoVencBuf_xafa0:
    /*0000afa0*/ MOVW        R2, #0                      @ .LC299 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x350c] 
    /*0000afa4*/ MOV         R1, #8 
    /*0000afa8*/ MOVT        R2, #0                      @ .LC299 [R_ARM_MOVT_ABS: .rodata.str1.4+0x350c] 
    /*0000afac*/ MOV         R0, #1 
    /*0000afb0*/ BL          0x000000000000AFB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000afb4*/ B           VencPacktoVencBuf_xabc0
    /*0000afb8*/ ANDEQ       R0, R0, R8, LSR R4 
    /*0000afbc*/ ANDEQ       R0, R0, R0, LSL R4 
    /*0000afc0*/ ANDEQ       R0, R0, R4, LSR #8 
FUNC_END VencPacktoVencBuf


FUNC_BEGIN VencGetStreamInfo
    /*0000afc4*/ PUSH        {R4, R5, R6, LR} 
    /*0000afc8*/ SUBS        R4, R0, #0 
    /*0000afcc*/ BLT         VencGetStreamInfo_xb0b8
    /*0000afd0*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000afd4*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000afd8*/ LDR         R3, [R3] 
    /*0000afdc*/ CMP         R4, R3 
    /*0000afe0*/ BCS         VencGetStreamInfo_xb0b8
    VencGetStreamInfo_xafe4:
    /*0000afe4*/ MOVW        R3, #36240                  @ 0x8d90 
    /*0000afe8*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000afec*/ MUL         R3, R3, R4 
    /*0000aff0*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000aff4*/ LDR         R2, [R2] 
    /*0000aff8*/ ADD         R5, R2, R3 
    /*0000affc*/ LDR         R3, [R2, R3] 
    /*0000b000*/ CMP         R3, #1 
    /*0000b004*/ BEQ         VencGetStreamInfo_xb024
    /*0000b008*/ MOVW        R3, #0                      @ .LC307 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3660] 
    /*0000b00c*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000b010*/ MOVT        R3, #0                      @ .LC307 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3660] 
    /*0000b014*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000b018*/ MOVW        R2, #6716                   @ 0x1a3c 
    /*0000b01c*/ LDR         R1, [PC, #420]              @ 0x000000000000b1c8 
    /*0000b020*/ BL          0x000000000000B020          @ osal_panic [R_ARM_CALL: +0x0] 
    VencGetStreamInfo_xb024:
    /*0000b024*/ ADD         R3, R5, #11904              @ 0x2e80 
    /*0000b028*/ ADD         R3, R3, #60                 @ 0x3c 
    /*0000b02c*/ CMP         R3, #0 
    /*0000b030*/ BEQ         VencGetStreamInfo_xb1a4
    /*0000b034*/ ADD         R2, R5, #8192               @ 0x2000 
    /*0000b038*/ ADD         R3, R3, #28 
    /*0000b03c*/ LDR         R1, [R2, #3800]             @ 0xed8 
    /*0000b040*/ CMP         R1, R3 
    /*0000b044*/ BEQ         VencGetStreamInfo_xb1a4
    /*0000b048*/ LDR         R3, [R2, #3804]             @ 0xedc 
    /*0000b04c*/ LDR         R6, [R3, #-8] 
    /*0000b050*/ CMP         R6, #0 
    /*0000b054*/ BEQ         VencGetStreamInfo_xb1a4
    VencGetStreamInfo_xb058:
    /*0000b058*/ LDR         R3, [R5, #4] 
    /*0000b05c*/ MOVW        R2, #265                    @ 0x109 
    /*0000b060*/ CMP         R3, R2 
    /*0000b064*/ BEQ         VencGetStreamInfo_xb170
    /*0000b068*/ BLS         VencGetStreamInfo_xb0d8
    /*0000b06c*/ MOVW        R2, #1002                   @ 0x3ea 
    /*0000b070*/ CMP         R3, R2 
    /*0000b074*/ BEQ         VencGetStreamInfo_xb13c
    /*0000b078*/ MOVW        R2, #1006                   @ 0x3ee 
    /*0000b07c*/ CMP         R3, R2 
    /*0000b080*/ BNE         VencGetStreamInfo_xb11c
    /*0000b084*/ MOV         R0, #44                     @ 0x2c 
    /*0000b088*/ BL          0x000000000000B088          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000b08c*/ ADD         R1, R6, #48                 @ 0x30 
    /*0000b090*/ LDR         R3, [R0, #40]               @ 0x28 
    /*0000b094*/ MOV         R0, R4 
    /*0000b098*/ BLX         R3 
    /*0000b09c*/ MOV         R0, #44                     @ 0x2c 
    /*0000b0a0*/ BL          0x000000000000B0A0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000b0a4*/ ADD         R1, R6, #104                @ 0x68 
    /*0000b0a8*/ LDR         R3, [R0, #44]               @ 0x2c 
    /*0000b0ac*/ MOV         R0, R4 
    /*0000b0b0*/ POP         {R4, R5, R6, LR} 
    /*0000b0b4*/ BX          R3 
    VencGetStreamInfo_xb0b8:
    /*0000b0b8*/ MOVW        R3, #0                      @ .LC306 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3638] 
    /*0000b0bc*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000b0c0*/ MOVT        R3, #0                      @ .LC306 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3638] 
    /*0000b0c4*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000b0c8*/ MOVW        R2, #6712                   @ 0x1a38 
    /*0000b0cc*/ LDR         R1, [PC, #244]              @ 0x000000000000b1c8 
    /*0000b0d0*/ BL          0x000000000000B0D0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000b0d4*/ B           VencGetStreamInfo_xafe4
    VencGetStreamInfo_xb0d8:
    /*0000b0d8*/ CMP         R3, #26 
    /*0000b0dc*/ BEQ         VencGetStreamInfo_xb13c
    /*0000b0e0*/ CMP         R3, #96                     @ 0x60 
    /*0000b0e4*/ BNE         VencGetStreamInfo_xb11c
    /*0000b0e8*/ MOV         R0, #10 
    /*0000b0ec*/ BL          0x000000000000B0EC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000b0f0*/ ADD         R1, R6, #48                 @ 0x30 
    /*0000b0f4*/ LDR         R3, [R0, #132]              @ 0x84 
    /*0000b0f8*/ MOV         R0, R4 
    /*0000b0fc*/ BLX         R3 
    /*0000b100*/ MOV         R0, #10 
    /*0000b104*/ BL          0x000000000000B104          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000b108*/ ADD         R1, R6, #104                @ 0x68 
    /*0000b10c*/ LDR         R3, [R0, #136]              @ 0x88 
    /*0000b110*/ MOV         R0, R4 
    /*0000b114*/ POP         {R4, R5, R6, LR} 
    /*0000b118*/ BX          R3 
    VencGetStreamInfo_xb11c:
    /*0000b11c*/ MOVW        R3, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d4] 
    /*0000b120*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000b124*/ MOVT        R3, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d4] 
    /*0000b128*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000b12c*/ MOVW        R2, #6750                   @ 0x1a5e 
    /*0000b130*/ LDR         R1, [PC, #144]              @ 0x000000000000b1c8 
    /*0000b134*/ POP         {R4, R5, R6, LR} 
    VencGetStreamInfo_xb138:
    /*0000b138*/ B           VencGetStreamInfo_xb138     @ osal_panic [R_ARM_JUMP24: +0x0] 
    VencGetStreamInfo_xb13c:
    /*0000b13c*/ MOV         R0, #11 
    /*0000b140*/ BL          0x000000000000B140          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000b144*/ ADD         R1, R6, #48                 @ 0x30 
    /*0000b148*/ LDR         R3, [R0, #76]               @ 0x4c 
    /*0000b14c*/ MOV         R0, R4 
    /*0000b150*/ BLX         R3 
    /*0000b154*/ MOV         R0, #11 
    /*0000b158*/ BL          0x000000000000B158          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000b15c*/ ADD         R1, R6, #104                @ 0x68 
    /*0000b160*/ LDR         R3, [R0, #80]               @ 0x50 
    /*0000b164*/ MOV         R0, R4 
    /*0000b168*/ POP         {R4, R5, R6, LR} 
    /*0000b16c*/ BX          R3 
    VencGetStreamInfo_xb170:
    /*0000b170*/ MOV         R0, #13 
    /*0000b174*/ BL          0x000000000000B174          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000b178*/ ADD         R1, R6, #48                 @ 0x30 
    /*0000b17c*/ LDR         R3, [R0, #36]               @ 0x24 
    /*0000b180*/ MOV         R0, R4 
    /*0000b184*/ BLX         R3 
    /*0000b188*/ MOV         R0, #13 
    /*0000b18c*/ BL          0x000000000000B18C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000b190*/ ADD         R1, R6, #104                @ 0x68 
    /*0000b194*/ LDR         R3, [R0, #40]               @ 0x28 
    /*0000b198*/ MOV         R0, R4 
    /*0000b19c*/ POP         {R4, R5, R6, LR} 
    /*0000b1a0*/ BX          R3 
    VencGetStreamInfo_xb1a4:
    /*0000b1a4*/ MOVW        R3, #0                      @ .LC308 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3680] 
    /*0000b1a8*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000b1ac*/ MOVT        R3, #0                      @ .LC308 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3680] 
    /*0000b1b0*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000b1b4*/ MOV         R2, #6720                   @ 0x1a40 
    /*0000b1b8*/ LDR         R1, [PC, #8]                @ 0x000000000000b1c8 
    /*0000b1bc*/ BL          0x000000000000B1BC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000b1c0*/ MOV         R6, #0 
    /*0000b1c4*/ B           VencGetStreamInfo_xb058
    /*0000b1c8*/ ANDEQ       R0, R0, IP, ASR #8 
FUNC_END VencGetStreamInfo


FUNC_BEGIN VencClearAllQueue
    /*0000b1cc*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000b1d0*/ SUBS        R4, R0, #0 
    /*0000b1d4*/ SUB         SP, SP, #8 
    /*0000b1d8*/ BLT         VencClearAllQueue_xb2e4
    /*0000b1dc*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000b1e0*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000b1e4*/ LDR         R3, [R3] 
    /*0000b1e8*/ CMP         R3, R4 
    /*0000b1ec*/ BLS         VencClearAllQueue_xb2e4
    VencClearAllQueue_xb1f0:
    /*0000b1f0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000b1f4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000b1f8*/ MOVW        R7, #36240                  @ 0x8d90 
    /*0000b1fc*/ LDR         R3, [R3] 
    /*0000b200*/ MLAS        R7, R4, R7, R3 
    /*0000b204*/ MOVNE       R6, #0 
    /*0000b208*/ BNE         VencClearAllQueue_xb21c
    /*0000b20c*/ B           VencClearAllQueue_xb42c
    VencClearAllQueue_xb210:
    /*0000b210*/ BL          0x000000000000B210          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*0000b214*/ SUBS        R5, R0, #0 
    /*0000b218*/ BNE         VencClearAllQueue_xb330
    VencClearAllQueue_xb21c:
    /*0000b21c*/ LDR         R3, [R7, #3724]             @ 0xe8c 
    /*0000b220*/ MOV         R1, #0 
    /*0000b224*/ MOV         R0, R4 
    /*0000b228*/ CMP         R3, R1 
    /*0000b22c*/ BNE         VencClearAllQueue_xb210
    /*0000b230*/ MOV         R0, #1 
    /*0000b234*/ BL          0x000000000000B234          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000b238*/ LDR         R3, [R0, #104]              @ 0x68 
    /*0000b23c*/ MOV         R0, #1 
    /*0000b240*/ BLX         R3 
    /*0000b244*/ CMP         R0, #0 
    /*0000b248*/ BNE         VencClearAllQueue_xb398
    VencClearAllQueue_xb24c:
    /*0000b24c*/ ADD         R6, R7, #8192               @ 0x2000 
    /*0000b250*/ MOV         R8, #0 
    /*0000b254*/ B           VencClearAllQueue_xb264
    VencClearAllQueue_xb258:
    /*0000b258*/ BL          0x000000000000B258          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*0000b25c*/ SUBS        R5, R0, #0 
    /*0000b260*/ BNE         VencClearAllQueue_xb364
    VencClearAllQueue_xb264:
    /*0000b264*/ LDR         R3, [R6, #1036]             @ 0x40c 
    /*0000b268*/ MOV         R1, #1 
    /*0000b26c*/ MOV         R0, R4 
    /*0000b270*/ CMP         R3, #0 
    /*0000b274*/ BNE         VencClearAllQueue_xb258
    /*0000b278*/ MOV         R5, R3 
    /*0000b27c*/ B           VencClearAllQueue_xb28c
    VencClearAllQueue_xb280:
    /*0000b280*/ BL          0x000000000000B280          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*0000b284*/ SUBS        R8, R0, #0 
    /*0000b288*/ BNE         VencClearAllQueue_xb2fc
    VencClearAllQueue_xb28c:
    /*0000b28c*/ LDR         R3, [R6, #3764]             @ 0xeb4 
    /*0000b290*/ MOV         R1, #2 
    /*0000b294*/ MOV         R0, R4 
    /*0000b298*/ CMP         R3, #0 
    /*0000b29c*/ BNE         VencClearAllQueue_xb280
    /*0000b2a0*/ ADD         R4, R7, #32768              @ 0x8000 
    /*0000b2a4*/ LDR         R3, [R4, #3368]             @ 0xd28 
    /*0000b2a8*/ CMP         R3, #0 
    /*0000b2ac*/ BNE         VencClearAllQueue_xb3c4
    VencClearAllQueue_xb2b0:
    /*0000b2b0*/ LDR         R0, [R4, #3412]             @ 0xd54 
    /*0000b2b4*/ CMP         R0, #0 
    /*0000b2b8*/ BEQ         VencClearAllQueue_xb2dc
    /*0000b2bc*/ MOV         R3, #0 
    /*0000b2c0*/ STR         R3, [R0] 
    /*0000b2c4*/ LDR         R2, [R4, #3412]             @ 0xd54 
    /*0000b2c8*/ MOV         R0, R3 
    /*0000b2cc*/ STR         R3, [R2, #2792]             @ 0xae8 
    /*0000b2d0*/ STR         R3, [R4, #3368]             @ 0xd28 
    /*0000b2d4*/ STR         R3, [R4, #3372]             @ 0xd2c 
    /*0000b2d8*/ STR         R3, [R4, #3412]             @ 0xd54 
    VencClearAllQueue_xb2dc:
    /*0000b2dc*/ ADD         SP, SP, #8 
    /*0000b2e0*/ POP         {R4, R5, R6, R7, R8, PC} 
    VencClearAllQueue_xb2e4:
    /*0000b2e4*/ MOV         R0, R4 
    /*0000b2e8*/ BL          0x0000000000000304 
    /*0000b2ec*/ CMP         R0, #0 
    /*0000b2f0*/ BEQ         VencClearAllQueue_xb1f0
    /*0000b2f4*/ ADD         SP, SP, #8 
    /*0000b2f8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VencClearAllQueue_xb2fc:
    /*0000b2fc*/ LDR         R3, [R8, #336]              @ 0x150 
    /*0000b300*/ CMP         R3, #0 
    /*0000b304*/ BNE         VencClearAllQueue_xb410
    /*0000b308*/ LDR         R3, [R8, #380]              @ 0x17c 
    /*0000b30c*/ CMP         R3, #0 
    /*0000b310*/ BEQ         VencClearAllQueue_xb28c
    VencClearAllQueue_xb314:
    /*0000b314*/ STR         R5, [R3] 
    /*0000b318*/ LDR         R3, [R8, #380]              @ 0x17c 
    /*0000b31c*/ STR         R5, [R3, #2792]             @ 0xae8 
    /*0000b320*/ STR         R5, [R8, #336]              @ 0x150 
    /*0000b324*/ STR         R5, [R8, #340]              @ 0x154 
    /*0000b328*/ STR         R5, [R8, #380]              @ 0x17c 
    /*0000b32c*/ B           VencClearAllQueue_xb28c
    VencClearAllQueue_xb330:
    /*0000b330*/ LDR         R3, [R5, #336]              @ 0x150 
    /*0000b334*/ CMP         R3, #0 
    /*0000b338*/ BNE         VencClearAllQueue_xb3f4
    /*0000b33c*/ LDR         R3, [R5, #380]              @ 0x17c 
    /*0000b340*/ CMP         R3, #0 
    /*0000b344*/ BEQ         VencClearAllQueue_xb21c
    VencClearAllQueue_xb348:
    /*0000b348*/ STR         R6, [R3] 
    /*0000b34c*/ LDR         R3, [R5, #380]              @ 0x17c 
    /*0000b350*/ STR         R6, [R3, #2792]             @ 0xae8 
    /*0000b354*/ STR         R6, [R5, #336]              @ 0x150 
    /*0000b358*/ STR         R6, [R5, #340]              @ 0x154 
    /*0000b35c*/ STR         R6, [R5, #380]              @ 0x17c 
    /*0000b360*/ B           VencClearAllQueue_xb21c
    VencClearAllQueue_xb364:
    /*0000b364*/ LDR         R3, [R5, #336]              @ 0x150 
    /*0000b368*/ CMP         R3, #0 
    /*0000b36c*/ BNE         VencClearAllQueue_xb3d8
    /*0000b370*/ LDR         R3, [R5, #380]              @ 0x17c 
    /*0000b374*/ CMP         R3, #0 
    /*0000b378*/ BEQ         VencClearAllQueue_xb264
    VencClearAllQueue_xb37c:
    /*0000b37c*/ STR         R8, [R3] 
    /*0000b380*/ LDR         R3, [R5, #380]              @ 0x17c 
    /*0000b384*/ STR         R8, [R3, #2792]             @ 0xae8 
    /*0000b388*/ STR         R8, [R5, #336]              @ 0x150 
    /*0000b38c*/ STR         R8, [R5, #340]              @ 0x154 
    /*0000b390*/ STR         R8, [R5, #380]              @ 0x17c 
    /*0000b394*/ B           VencClearAllQueue_xb264
    VencClearAllQueue_xb398:
    /*0000b398*/ ADD         R5, R7, #4096               @ 0x1000 
    /*0000b39c*/ LDR         R3, [R5, #2356]             @ 0x934 
    /*0000b3a0*/ CMP         R3, #0 
    /*0000b3a4*/ BEQ         VencClearAllQueue_xb24c
    VencClearAllQueue_xb3a8:
    /*0000b3a8*/ MOV         R1, #3 
    /*0000b3ac*/ MOV         R0, R4 
    /*0000b3b0*/ BL          0x000000000000B3B0          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*0000b3b4*/ LDR         R3, [R5, #2356]             @ 0x934 
    /*0000b3b8*/ CMP         R3, #0 
    /*0000b3bc*/ BNE         VencClearAllQueue_xb3a8
    /*0000b3c0*/ B           VencClearAllQueue_xb24c
    VencClearAllQueue_xb3c4:
    /*0000b3c4*/ ADD         R1, R7, #36096              @ 0x8d00 
    /*0000b3c8*/ LDR         R0, [R7, #56]               @ 0x38 
    /*0000b3cc*/ ADD         R1, R1, #40                 @ 0x28 
    /*0000b3d0*/ BL          0x000000000000B3D0          @ VencPutOsd [R_ARM_CALL: .text+0x18c0] 
    /*0000b3d4*/ B           VencClearAllQueue_xb2b0
    VencClearAllQueue_xb3d8:
    /*0000b3d8*/ ADD         R1, R5, #336                @ 0x150 
    /*0000b3dc*/ MOV         R0, R4 
    /*0000b3e0*/ BL          0x000000000000B3E0          @ VencPutOsd [R_ARM_CALL: .text+0x18c0] 
    /*0000b3e4*/ LDR         R3, [R5, #380]              @ 0x17c 
    /*0000b3e8*/ CMP         R3, #0 
    /*0000b3ec*/ BEQ         VencClearAllQueue_xb264
    /*0000b3f0*/ B           VencClearAllQueue_xb37c
    VencClearAllQueue_xb3f4:
    /*0000b3f4*/ ADD         R1, R5, #336                @ 0x150 
    /*0000b3f8*/ MOV         R0, R4 
    /*0000b3fc*/ BL          0x000000000000B3FC          @ VencPutOsd [R_ARM_CALL: .text+0x18c0] 
    /*0000b400*/ LDR         R3, [R5, #380]              @ 0x17c 
    /*0000b404*/ CMP         R3, #0 
    /*0000b408*/ BEQ         VencClearAllQueue_xb21c
    /*0000b40c*/ B           VencClearAllQueue_xb348
    VencClearAllQueue_xb410:
    /*0000b410*/ ADD         R1, R8, #336                @ 0x150 
    /*0000b414*/ MOV         R0, R4 
    /*0000b418*/ BL          0x000000000000B418          @ VencPutOsd [R_ARM_CALL: .text+0x18c0] 
    /*0000b41c*/ LDR         R3, [R8, #380]              @ 0x17c 
    /*0000b420*/ CMP         R3, #0 
    /*0000b424*/ BEQ         VencClearAllQueue_xb28c
    /*0000b428*/ B           VencClearAllQueue_xb314
    VencClearAllQueue_xb42c:
    /*0000b42c*/ MOVW        R3, #6770                   @ 0x1a72 
    /*0000b430*/ STR         R4, [SP, #4] 
    /*0000b434*/ STR         R3, [SP] 
    /*0000b438*/ MOVW        R2, #0                      @ .LC309 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3694] 
    /*0000b43c*/ LDR         R3, [PC, #20]               @ 0x000000000000b458 
    /*0000b440*/ MOVT        R2, #0                      @ .LC309 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3694] 
    /*0000b444*/ MOV         R1, #8 
    /*0000b448*/ MOV         R0, #3 
    /*0000b44c*/ BL          0x000000000000B44C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b450*/ MVN         R0, #0 
    /*0000b454*/ B           VencClearAllQueue_xb2dc
    /*0000b458*/ ANDEQ       R0, R0, R0, ROR #8 
FUNC_END VencClearAllQueue


FUNC_BEGIN VencResetChn
    /*0000b45c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000b460*/ SUBS        R4, R0, #0 
    /*0000b464*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000b468*/ BLT         VencResetChn_xbad0
    /*0000b46c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000b470*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000b474*/ LDR         R3, [R3] 
    /*0000b478*/ CMP         R3, R4 
    /*0000b47c*/ BLS         VencResetChn_xbad0
    VencResetChn_xb480:
    /*0000b480*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0000b484*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000b488*/ MUL         R5, R5, R4 
    /*0000b48c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000b490*/ LDR         R7, [R3] 
    /*0000b494*/ ADD         R6, R7, R5 
    /*0000b498*/ ADD         R3, R6, #12416              @ 0x3080 
    /*0000b49c*/ ADD         R3, R3, #16 
    /*0000b4a0*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000b4a4*/ MOV         R0, R3 
    /*0000b4a8*/ BL          0x000000000000B4A8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000b4ac*/ CMP         R0, #0 
    /*0000b4b0*/ BNE         VencResetChn_xc20c
    /*0000b4b4*/ LDR         R3, [R7, R5] 
    /*0000b4b8*/ CMP         R3, #1 
    /*0000b4bc*/ BNE         VencResetChn_xc21c
    /*0000b4c0*/ LDR         R3, [R6, #56]               @ 0x38 
    /*0000b4c4*/ CMP         R4, R3 
    /*0000b4c8*/ BNE         VencResetChn_xc258
    /*0000b4cc*/ LDR         R3, [R6, #16] 
    /*0000b4d0*/ CMP         R3, #1 
    /*0000b4d4*/ BEQ         VencResetChn_xc2a0
    /*0000b4d8*/ ADD         R3, R6, #12288              @ 0x3000 
    /*0000b4dc*/ STR         R3, [SP, #32] 
    /*0000b4e0*/ LDR         R3, [R3, #132]              @ 0x84 
    /*0000b4e4*/ CMP         R3, #1 
    /*0000b4e8*/ BEQ         VencResetChn_xc2a0
    /*0000b4ec*/ MOV         R0, #4 
    /*0000b4f0*/ BL          0x000000000000B4F0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000b4f4*/ MOV         R1, R4 
    /*0000b4f8*/ LDR         R3, [R0, #16] 
    /*0000b4fc*/ LDR         R0, [R6, #8] 
    /*0000b500*/ BLX         R3 
    /*0000b504*/ SUBS        R3, R0, #0 
    /*0000b508*/ STR         R3, [SP, #28] 
    /*0000b50c*/ BNE         VencResetChn_xc060
    /*0000b510*/ LDR         R3, [R6, #4] 
    /*0000b514*/ MOVW        R2, #265                    @ 0x109 
    /*0000b518*/ CMP         R3, R2 
    /*0000b51c*/ BEQ         VencResetChn_xc180
    /*0000b520*/ BHI         VencResetChn_xbaf0
    /*0000b524*/ CMP         R3, #26 
    /*0000b528*/ BEQ         VencResetChn_xc158
    /*0000b52c*/ CMP         R3, #96                     @ 0x60 
    /*0000b530*/ MOVEQ       R0, #10 
    /*0000b534*/ BNE         VencResetChn_xc0f8
    VencResetChn_xb538:
    /*0000b538*/ BL          0x000000000000B538          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000b53c*/ MOV         R1, #0 
    /*0000b540*/ LDR         R3, [R0, #8] 
    /*0000b544*/ MOV         R0, R4 
    /*0000b548*/ BLX         R3 
    /*0000b54c*/ MOV         R5, R0 
    /*0000b550*/ MOV         R0, #19 
    /*0000b554*/ BL          0x000000000000B554          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000b558*/ LDR         R3, [R0, #8] 
    /*0000b55c*/ MOV         R0, R4 
    /*0000b560*/ BLX         R3 
    /*0000b564*/ ORR         R5, R5, R0 
    VencResetChn_xb568:
    /*0000b568*/ CMP         R5, #0 
    /*0000b56c*/ BNE         VencResetChn_xc2dc
    /*0000b570*/ LDR         R3, [SP, #32] 
    /*0000b574*/ LDR         R2, [R3, #1128]             @ 0x468 
    /*0000b578*/ CMP         R2, #1 
    /*0000b57c*/ BEQ         VencResetChn_xc0a4
    VencResetChn_xb580:
    /*0000b580*/ MOV         R0, #4 
    /*0000b584*/ BL          0x000000000000B584          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000b588*/ MOV         R1, R4 
    /*0000b58c*/ LDR         R3, [R0, #20] 
    /*0000b590*/ LDR         R0, [R6, #8] 
    /*0000b594*/ BLX         R3 
    /*0000b598*/ SUBS        R5, R0, #0 
    /*0000b59c*/ BNE         VencResetChn_xc198
    /*0000b5a0*/ LDR         R3, [SP, #32] 
    /*0000b5a4*/ LDR         R3, [R3, #180]              @ 0xb4 
    /*0000b5a8*/ CMP         R3, #1 
    /*0000b5ac*/ BEQ         VencResetChn_xc1d8
    VencResetChn_xb5b0:
    /*0000b5b0*/ LDR         R8, [SP, #32] 
    /*0000b5b4*/ ADD         R5, R6, #64                 @ 0x40 
    /*0000b5b8*/ ADD         R0, R6, #12160              @ 0x2f80 
    /*0000b5bc*/ MOV         R2, #176                    @ 0xb0 
    /*0000b5c0*/ MOV         R1, #0 
    /*0000b5c4*/ ADD         R0, R0, #12 
    /*0000b5c8*/ LDR         R3, [R8, #176]              @ 0xb0 
    /*0000b5cc*/ MOV         R7, #0 
    /*0000b5d0*/ ADD         R3, R3, #1 
    /*0000b5d4*/ STR         R3, [R8, #176]              @ 0xb0 
    /*0000b5d8*/ ADD         R3, R6, #32768              @ 0x8000 
    /*0000b5dc*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000b5e0*/ MOV         R9, R3 
    /*0000b5e4*/ BL          0x000000000000B5E4          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000b5e8*/ MOV         R0, R5 
    /*0000b5ec*/ ADD         R1, SP, #52                 @ 0x34 
    /*0000b5f0*/ BL          0x000000000000B5F0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000b5f4*/ MOVW        R1, #12448                  @ 0x30a0 
    /*0000b5f8*/ STR         R7, [R8, #168]              @ 0xa8 
    /*0000b5fc*/ MOV         R2, #0 
    /*0000b600*/ MOV         R3, #0 
    /*0000b604*/ STRD        R2, [R6, R1] 
    /*0000b608*/ MOV         R3, #1 
    /*0000b60c*/ STR         R7, [R8, #84]               @ 0x54 
    /*0000b610*/ MOV         IP, R8 
    /*0000b614*/ MOV         R1, R3 
    /*0000b618*/ STR         R3, [R6, #32] 
    /*0000b61c*/ MOV         R2, #6 
    /*0000b620*/ STR         R3, [R6, #36]               @ 0x24 
    /*0000b624*/ MOV         R0, R4 
    /*0000b628*/ STR         R3, [R6, #40]               @ 0x28 
    /*0000b62c*/ STR         R3, [R6, #44]               @ 0x2c 
    /*0000b630*/ STR         R3, [R6, #48]               @ 0x30 
    /*0000b634*/ ADD         R3, R6, #8192               @ 0x2000 
    /*0000b638*/ STR         R7, [IP, #180]              @ 0xb4 
    /*0000b63c*/ STR         R2, [R9, #3316]             @ 0xcf4 
    /*0000b640*/ MOV         R8, R3 
    /*0000b644*/ STR         R3, [SP, #20] 
    /*0000b648*/ BL          0x000000000000B648          @ VencClearAllQueue [R_ARM_CALL: .text+0xb1cc] 
    /*0000b64c*/ STR         R0, [SP, #28] 
    /*0000b650*/ ADD         R0, R6, #12352              @ 0x3040 
    /*0000b654*/ ADD         R0, R0, #56                 @ 0x38 
    /*0000b658*/ BL          0x000000000000B658          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0000b65c*/ STR         R7, [R9, #3344]             @ 0xd10 
    /*0000b660*/ ADD         R1, SP, #52                 @ 0x34 
    /*0000b664*/ MOV         R0, R5 
    /*0000b668*/ BL          0x000000000000B668          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b66c*/ LDR         R4, [R8, #3816]             @ 0xee8 
    /*0000b670*/ MOV         R3, R8 
    /*0000b674*/ CMP         R4, R7 
    /*0000b678*/ ADDEQ       R3, R6, #11904              @ 0x2e80 
    /*0000b67c*/ ADDEQ       R3, R3, #60                 @ 0x3c 
    /*0000b680*/ STREQ       R3, [SP, #40]               @ 0x28 
    /*0000b684*/ BEQ         VencResetChn_xb898
    /*0000b688*/ LDR         R3, [R4, #28] 
    /*0000b68c*/ ADD         FP, R4, #28 
    /*0000b690*/ MOV         R9, #256                    @ 0x100 
    /*0000b694*/ MOV         R8, #512                    @ 0x200 
    /*0000b698*/ CMP         R3, FP 
    /*0000b69c*/ MOVW        R7, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*0000b6a0*/ MOVT        R9, #16 
    /*0000b6a4*/ MOVT        R8, #32 
    /*0000b6a8*/ MOVT        R7, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    /*0000b6ac*/ STR         R6, [SP, #16] 
    /*0000b6b0*/ BEQ         VencResetChn_xb750
    VencResetChn_xb6b4:
    /*0000b6b4*/ LDM         R3, {R1, R2} 
    /*0000b6b8*/ STR         R2, [R1, #4] 
    /*0000b6bc*/ STR         R1, [R2] 
    /*0000b6c0*/ STR         R9, [R3] 
    /*0000b6c4*/ STR         R8, [R3, #4] 
    /*0000b6c8*/ LDR         R2, [R4, #12] 
    /*0000b6cc*/ SUB         R2, R2, #1 
    /*0000b6d0*/ STR         R2, [R4, #12] 
    /*0000b6d4*/ LDR         R5, [R3, #-8] 
    /*0000b6d8*/ CMP         R5, #0 
    /*0000b6dc*/ MOVWEQ      R6, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000b6e0*/ LDREQ       SL, [PC, #3080]             @ 0x000000000000c2f0 
    /*0000b6e4*/ MOVTEQ      R6, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000b6e8*/ BEQ         VencResetChn_xbb28
    VencResetChn_xb6ec:
    /*0000b6ec*/ LDR         R2, [R5, #-12] 
    /*0000b6f0*/ MOV         R3, #0 
    /*0000b6f4*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000b6f8*/ CMP         R2, R3 
    /*0000b6fc*/ BEQ         VencResetChn_xb71c
    /*0000b700*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000b704*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000b708*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000b70c*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000b710*/ MOV         R2, #141                    @ 0x8d 
    /*0000b714*/ LDR         R1, [PC, #3032]             @ 0x000000000000c2f4 
    /*0000b718*/ BL          0x000000000000B718          @ osal_panic [R_ARM_CALL: +0x0] 
    VencResetChn_xb71c:
    /*0000b71c*/ LDR         R2, [R4, #24] 
    /*0000b720*/ SUB         R1, R5, #8 
    /*0000b724*/ ADD         R3, R4, #20 
    /*0000b728*/ STR         R1, [R4, #24] 
    /*0000b72c*/ STR         R3, [R5, #-8] 
    /*0000b730*/ STR         R2, [R5, #-4] 
    /*0000b734*/ STR         R1, [R2] 
    /*0000b738*/ LDR         R3, [R4, #8] 
    /*0000b73c*/ ADD         R3, R3, #1 
    /*0000b740*/ STR         R3, [R4, #8] 
    /*0000b744*/ LDR         R3, [R4, #28] 
    /*0000b748*/ CMP         R3, FP 
    /*0000b74c*/ BNE         VencResetChn_xb6b4
    VencResetChn_xb750:
    /*0000b750*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000b754*/ ADD         R7, R4, #36                 @ 0x24 
    /*0000b758*/ LDR         R6, [SP, #16] 
    /*0000b75c*/ MOV         R9, #256                    @ 0x100 
    /*0000b760*/ CMP         R3, R7 
    /*0000b764*/ MOV         R8, #512                    @ 0x200 
    /*0000b768*/ MOVW        FP, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*0000b76c*/ MOVT        R9, #16 
    /*0000b770*/ MOVT        R8, #32 
    /*0000b774*/ MOVT        FP, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    /*0000b778*/ STR         R6, [SP, #16] 
    /*0000b77c*/ BEQ         VencResetChn_xb81c
    VencResetChn_xb780:
    /*0000b780*/ LDM         R3, {R1, R2} 
    /*0000b784*/ STR         R2, [R1, #4] 
    /*0000b788*/ STR         R1, [R2] 
    /*0000b78c*/ STR         R9, [R3] 
    /*0000b790*/ STR         R8, [R3, #4] 
    /*0000b794*/ LDR         R2, [R4, #16] 
    /*0000b798*/ SUB         R2, R2, #1 
    /*0000b79c*/ STR         R2, [R4, #16] 
    /*0000b7a0*/ LDR         R5, [R3, #-8] 
    /*0000b7a4*/ CMP         R5, #0 
    /*0000b7a8*/ MOVWEQ      R6, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000b7ac*/ LDREQ       SL, [PC, #2876]             @ 0x000000000000c2f0 
    /*0000b7b0*/ MOVTEQ      R6, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000b7b4*/ BEQ         VencResetChn_xbb78
    VencResetChn_xb7b8:
    /*0000b7b8*/ LDR         R2, [R5, #-12] 
    /*0000b7bc*/ MOV         R3, #0 
    /*0000b7c0*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000b7c4*/ CMP         R2, R3 
    /*0000b7c8*/ BEQ         VencResetChn_xb7e8
    /*0000b7cc*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000b7d0*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000b7d4*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000b7d8*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000b7dc*/ MOV         R2, #141                    @ 0x8d 
    /*0000b7e0*/ LDR         R1, [PC, #2828]             @ 0x000000000000c2f4 
    /*0000b7e4*/ BL          0x000000000000B7E4          @ osal_panic [R_ARM_CALL: +0x0] 
    VencResetChn_xb7e8:
    /*0000b7e8*/ LDR         R2, [R4, #24] 
    /*0000b7ec*/ SUB         R1, R5, #8 
    /*0000b7f0*/ ADD         R3, R4, #20 
    /*0000b7f4*/ STR         R1, [R4, #24] 
    /*0000b7f8*/ STR         R3, [R5, #-8] 
    /*0000b7fc*/ STR         R2, [R5, #-4] 
    /*0000b800*/ STR         R1, [R2] 
    /*0000b804*/ LDR         R3, [R4, #8] 
    /*0000b808*/ ADD         R3, R3, #1 
    /*0000b80c*/ STR         R3, [R4, #8] 
    /*0000b810*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000b814*/ CMP         R3, R7 
    /*0000b818*/ BNE         VencResetChn_xb780
    VencResetChn_xb81c:
    /*0000b81c*/ LDR         R3, [SP, #20] 
    /*0000b820*/ LDR         R6, [SP, #16] 
    /*0000b824*/ LDR         R4, [R3, #3816]             @ 0xee8 
    /*0000b828*/ CMP         R4, #0 
    /*0000b82c*/ BEQ         VencResetChn_xc188
    /*0000b830*/ LDR         R2, [R4, #28] 
    /*0000b834*/ ADD         R3, R4, #28 
    /*0000b838*/ CMP         R2, R3 
    /*0000b83c*/ BEQ         VencResetChn_xbfd8
    VencResetChn_xb840:
    /*0000b840*/ ADD         R3, R6, #11904              @ 0x2e80 
    /*0000b844*/ MOV         R1, #8 
    /*0000b848*/ MOV         R0, #3 
    /*0000b84c*/ MOV         R2, R3 
    /*0000b850*/ ADD         R2, R2, #60                 @ 0x3c 
    /*0000b854*/ MOVW        R3, #5800                   @ 0x16a8 
    /*0000b858*/ STR         R2, [SP, #40]               @ 0x28 
    /*0000b85c*/ MOV         R4, R2 
    /*0000b860*/ STR         R3, [SP] 
    /*0000b864*/ MOVW        R2, #0                      @ .LC317 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x388c] 
    /*0000b868*/ LDR         R3, [PC, #2696]             @ 0x000000000000c2f8 
    /*0000b86c*/ MOVT        R2, #0                      @ .LC317 [R_ARM_MOVT_ABS: .rodata.str1.4+0x388c] 
    /*0000b870*/ BL          0x000000000000B870          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b874*/ CMP         R4, #0 
    /*0000b878*/ BEQ         VencResetChn_xb88c
    /*0000b87c*/ LDR         R3, [SP, #20] 
    /*0000b880*/ LDR         R4, [R3, #3816]             @ 0xee8 
    /*0000b884*/ CMP         R4, #0 
    /*0000b888*/ BNE         VencResetChn_xbffc
    VencResetChn_xb88c:
    /*0000b88c*/ LDR         R2, [SP, #20] 
    /*0000b890*/ MOV         R3, #0 
    /*0000b894*/ STR         R3, [R2, #3816]             @ 0xee8 
    VencResetChn_xb898:
    /*0000b898*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000b89c*/ CMP         R3, #0 
    /*0000b8a0*/ BEQ         VencResetChn_xbc88
    /*0000b8a4*/ MOV         R7, #256                    @ 0x100 
    /*0000b8a8*/ MOVW        R8, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*0000b8ac*/ MOVT        R7, #16 
    /*0000b8b0*/ MOVT        R8, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    /*0000b8b4*/ ADD         R3, R3, #28 
    /*0000b8b8*/ STR         R3, [SP, #24] 
    VencResetChn_xb8bc:
    /*0000b8bc*/ MOV         R6, #512                    @ 0x200 
    /*0000b8c0*/ MOVT        R6, #32 
    /*0000b8c4*/ MOV         R3, #0 
    /*0000b8c8*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000b8cc*/ STR         R3, [SP, #16] 
    VencResetChn_xb8d0:
    /*0000b8d0*/ LDR         R3, [SP, #20] 
    /*0000b8d4*/ LDR         R2, [SP, #24] 
    /*0000b8d8*/ LDR         R3, [R3, #3800]             @ 0xed8 
    /*0000b8dc*/ CMP         R2, R3 
    /*0000b8e0*/ BEQ         VencResetChn_xbce8
    /*0000b8e4*/ LDM         R3, {R1, R2} 
    /*0000b8e8*/ STR         R2, [R1, #4] 
    /*0000b8ec*/ STR         R1, [R2] 
    /*0000b8f0*/ LDR         R1, [SP, #20] 
    /*0000b8f4*/ STR         R7, [R3] 
    /*0000b8f8*/ STR         R6, [R3, #4] 
    /*0000b8fc*/ LDR         R2, [R1, #3784]             @ 0xec8 
    /*0000b900*/ SUB         R2, R2, #1 
    /*0000b904*/ STR         R2, [R1, #3784]             @ 0xec8 
    /*0000b908*/ LDR         R4, [R3, #-8] 
    /*0000b90c*/ CMP         R4, #0 
    /*0000b910*/ ADDNE       R9, R4, #28 
    /*0000b914*/ BEQ         VencResetChn_xbc68
    /*0000b918*/ LDR         R3, [R4, #28] 
    /*0000b91c*/ CMP         R9, R3 
    /*0000b920*/ BEQ         VencResetChn_xb9bc
    VencResetChn_xb924:
    /*0000b924*/ LDM         R3, {R1, R2} 
    /*0000b928*/ STR         R2, [R1, #4] 
    /*0000b92c*/ STR         R1, [R2] 
    /*0000b930*/ STR         R7, [R3] 
    /*0000b934*/ STR         R6, [R3, #4] 
    /*0000b938*/ LDR         R2, [R4, #12] 
    /*0000b93c*/ SUB         R2, R2, #1 
    /*0000b940*/ STR         R2, [R4, #12] 
    /*0000b944*/ LDR         R5, [R3, #-8] 
    /*0000b948*/ CMP         R5, #0 
    /*0000b94c*/ MOVWEQ      SL, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000b950*/ LDREQ       FP, [PC, #2456]             @ 0x000000000000c2f0 
    /*0000b954*/ MOVTEQ      SL, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000b958*/ BEQ         VencResetChn_xbbc8
    VencResetChn_xb95c:
    /*0000b95c*/ LDR         R3, [R5, #-12] 
    /*0000b960*/ LDR         R2, [SP, #16] 
    /*0000b964*/ CMP         R3, R2 
    /*0000b968*/ BEQ         VencResetChn_xb988
    /*0000b96c*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000b970*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000b974*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000b978*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000b97c*/ MOV         R2, #141                    @ 0x8d 
    /*0000b980*/ LDR         R1, [PC, #2412]             @ 0x000000000000c2f4 
    /*0000b984*/ BL          0x000000000000B984          @ osal_panic [R_ARM_CALL: +0x0] 
    VencResetChn_xb988:
    /*0000b988*/ LDR         R2, [R4, #24] 
    /*0000b98c*/ SUB         R1, R5, #8 
    /*0000b990*/ ADD         R3, R4, #20 
    /*0000b994*/ STR         R1, [R4, #24] 
    /*0000b998*/ STR         R3, [R5, #-8] 
    /*0000b99c*/ STR         R2, [R5, #-4] 
    /*0000b9a0*/ STR         R1, [R2] 
    /*0000b9a4*/ LDR         R3, [R4, #8] 
    /*0000b9a8*/ ADD         R3, R3, #1 
    /*0000b9ac*/ STR         R3, [R4, #8] 
    /*0000b9b0*/ LDR         R3, [R4, #28] 
    /*0000b9b4*/ CMP         R9, R3 
    /*0000b9b8*/ BNE         VencResetChn_xb924
    VencResetChn_xb9bc:
    /*0000b9bc*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000b9c0*/ ADD         R9, R4, #36                 @ 0x24 
    /*0000b9c4*/ CMP         R3, R9 
    /*0000b9c8*/ BEQ         VencResetChn_xba64
    VencResetChn_xb9cc:
    /*0000b9cc*/ LDM         R3, {R1, R2} 
    /*0000b9d0*/ STR         R2, [R1, #4] 
    /*0000b9d4*/ STR         R1, [R2] 
    /*0000b9d8*/ STR         R7, [R3] 
    /*0000b9dc*/ STR         R6, [R3, #4] 
    /*0000b9e0*/ LDR         R2, [R4, #16] 
    /*0000b9e4*/ SUB         R2, R2, #1 
    /*0000b9e8*/ STR         R2, [R4, #16] 
    /*0000b9ec*/ LDR         R5, [R3, #-8] 
    /*0000b9f0*/ CMP         R5, #0 
    /*0000b9f4*/ MOVWEQ      SL, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000b9f8*/ LDREQ       FP, [PC, #2288]             @ 0x000000000000c2f0 
    /*0000b9fc*/ MOVTEQ      SL, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000ba00*/ BEQ         VencResetChn_xbc18
    VencResetChn_xba04:
    /*0000ba04*/ LDR         R3, [R5, #-12] 
    /*0000ba08*/ LDR         R2, [SP, #16] 
    /*0000ba0c*/ CMP         R3, R2 
    /*0000ba10*/ BEQ         VencResetChn_xba30
    /*0000ba14*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000ba18*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000ba1c*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000ba20*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000ba24*/ MOV         R2, #141                    @ 0x8d 
    /*0000ba28*/ LDR         R1, [PC, #2244]             @ 0x000000000000c2f4 
    /*0000ba2c*/ BL          0x000000000000BA2C          @ osal_panic [R_ARM_CALL: +0x0] 
    VencResetChn_xba30:
    /*0000ba30*/ LDR         R2, [R4, #24] 
    /*0000ba34*/ SUB         R1, R5, #8 
    /*0000ba38*/ ADD         R3, R4, #20 
    /*0000ba3c*/ STR         R1, [R4, #24] 
    /*0000ba40*/ STR         R3, [R5, #-8] 
    /*0000ba44*/ STR         R2, [R5, #-4] 
    /*0000ba48*/ STR         R1, [R2] 
    /*0000ba4c*/ LDR         R3, [R4, #8] 
    /*0000ba50*/ ADD         R3, R3, #1 
    /*0000ba54*/ STR         R3, [R4, #8] 
    /*0000ba58*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000ba5c*/ CMP         R3, R9 
    /*0000ba60*/ BNE         VencResetChn_xb9cc
    VencResetChn_xba64:
    /*0000ba64*/ CMP         R4, #0 
    /*0000ba68*/ BEQ         VencResetChn_xb8d0
    /*0000ba6c*/ LDR         R2, [R4, #-12] 
    /*0000ba70*/ MOV         R3, #0 
    /*0000ba74*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000ba78*/ CMP         R2, R3 
    /*0000ba7c*/ BEQ         VencResetChn_xba9c
    /*0000ba80*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000ba84*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000ba88*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000ba8c*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000ba90*/ MOV         R2, #141                    @ 0x8d 
    /*0000ba94*/ LDR         R1, [PC, #2136]             @ 0x000000000000c2f4 
    /*0000ba98*/ BL          0x000000000000BA98          @ osal_panic [R_ARM_CALL: +0x0] 
    VencResetChn_xba9c:
    /*0000ba9c*/ LDR         R0, [SP, #20] 
    /*0000baa0*/ SUB         R1, R4, #8 
    /*0000baa4*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000baa8*/ LDR         R2, [R0, #3796]             @ 0xed4 
    /*0000baac*/ ADD         R3, R3, #20 
    /*0000bab0*/ STR         R1, [R0, #3796]             @ 0xed4 
    /*0000bab4*/ STR         R3, [R4, #-8] 
    /*0000bab8*/ STR         R2, [R4, #-4] 
    /*0000babc*/ STR         R1, [R2] 
    /*0000bac0*/ LDR         R3, [R0, #3780]             @ 0xec4 
    /*0000bac4*/ ADD         R3, R3, #1 
    /*0000bac8*/ STR         R3, [R0, #3780]             @ 0xec4 
    /*0000bacc*/ B           VencResetChn_xb8bc
    VencResetChn_xbad0:
    /*0000bad0*/ MOV         R0, R4 
    /*0000bad4*/ BL          0x0000000000000304 
    /*0000bad8*/ SUBS        R3, R0, #0 
    /*0000badc*/ STR         R3, [SP, #28] 
    /*0000bae0*/ BEQ         VencResetChn_xb480
    VencResetChn_xbae4:
    /*0000bae4*/ LDR         R0, [SP, #28] 
    /*0000bae8*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000baec*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencResetChn_xbaf0:
    /*0000baf0*/ MOVW        R2, #1002                   @ 0x3ea 
    /*0000baf4*/ CMP         R3, R2 
    /*0000baf8*/ BEQ         VencResetChn_xc178
    /*0000bafc*/ MOVW        R2, #1006                   @ 0x3ee 
    /*0000bb00*/ CMP         R3, R2 
    /*0000bb04*/ BNE         VencResetChn_xc0f8
    /*0000bb08*/ MOV         R0, #44                     @ 0x2c 
    /*0000bb0c*/ BL          0x000000000000BB0C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000bb10*/ MOV         R1, #0 
    /*0000bb14*/ LDR         R3, [R0, #36]               @ 0x24 
    /*0000bb18*/ MOV         R0, R4 
    /*0000bb1c*/ BLX         R3 
    /*0000bb20*/ MOV         R5, R0 
    /*0000bb24*/ B           VencResetChn_xb568
    VencResetChn_xbb28:
    /*0000bb28*/ MOV         R3, R7 
    /*0000bb2c*/ MOVW        R2, #367                    @ 0x16f 
    /*0000bb30*/ MOV         R1, SL 
    /*0000bb34*/ MOV         R0, R6 
    /*0000bb38*/ BL          0x000000000000BB38          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000bb3c*/ LDR         R3, [R4, #28] 
    /*0000bb40*/ CMP         R3, FP 
    /*0000bb44*/ BEQ         VencResetChn_xb750
    /*0000bb48*/ LDM         R3, {R1, R2} 
    /*0000bb4c*/ STR         R2, [R1, #4] 
    /*0000bb50*/ STR         R1, [R2] 
    /*0000bb54*/ STR         R9, [R3] 
    /*0000bb58*/ STR         R8, [R3, #4] 
    /*0000bb5c*/ LDR         R2, [R4, #12] 
    /*0000bb60*/ SUB         R2, R2, #1 
    /*0000bb64*/ STR         R2, [R4, #12] 
    /*0000bb68*/ LDR         R5, [R3, #-8] 
    /*0000bb6c*/ CMP         R5, #0 
    /*0000bb70*/ BNE         VencResetChn_xb6ec
    /*0000bb74*/ B           VencResetChn_xbb28
    VencResetChn_xbb78:
    /*0000bb78*/ MOV         R3, FP 
    /*0000bb7c*/ MOVW        R2, #373                    @ 0x175 
    /*0000bb80*/ MOV         R1, SL 
    /*0000bb84*/ MOV         R0, R6 
    /*0000bb88*/ BL          0x000000000000BB88          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000bb8c*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000bb90*/ CMP         R3, R7 
    /*0000bb94*/ BEQ         VencResetChn_xb81c
    /*0000bb98*/ LDM         R3, {R1, R2} 
    /*0000bb9c*/ STR         R2, [R1, #4] 
    /*0000bba0*/ STR         R1, [R2] 
    /*0000bba4*/ STR         R9, [R3] 
    /*0000bba8*/ STR         R8, [R3, #4] 
    /*0000bbac*/ LDR         R2, [R4, #16] 
    /*0000bbb0*/ SUB         R2, R2, #1 
    /*0000bbb4*/ STR         R2, [R4, #16] 
    /*0000bbb8*/ LDR         R5, [R3, #-8] 
    /*0000bbbc*/ CMP         R5, #0 
    /*0000bbc0*/ BNE         VencResetChn_xb7b8
    /*0000bbc4*/ B           VencResetChn_xbb78
    VencResetChn_xbbc8:
    /*0000bbc8*/ MOV         R3, R8 
    /*0000bbcc*/ MOVW        R2, #367                    @ 0x16f 
    /*0000bbd0*/ MOV         R1, FP 
    /*0000bbd4*/ MOV         R0, SL 
    /*0000bbd8*/ BL          0x000000000000BBD8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000bbdc*/ LDR         R3, [R4, #28] 
    /*0000bbe0*/ CMP         R9, R3 
    /*0000bbe4*/ BEQ         VencResetChn_xb9bc
    /*0000bbe8*/ LDM         R3, {R1, R2} 
    /*0000bbec*/ STR         R2, [R1, #4] 
    /*0000bbf0*/ STR         R1, [R2] 
    /*0000bbf4*/ STR         R7, [R3] 
    /*0000bbf8*/ STR         R6, [R3, #4] 
    /*0000bbfc*/ LDR         R2, [R4, #12] 
    /*0000bc00*/ SUB         R2, R2, #1 
    /*0000bc04*/ STR         R2, [R4, #12] 
    /*0000bc08*/ LDR         R5, [R3, #-8] 
    /*0000bc0c*/ CMP         R5, #0 
    /*0000bc10*/ BNE         VencResetChn_xb95c
    /*0000bc14*/ B           VencResetChn_xbbc8
    VencResetChn_xbc18:
    /*0000bc18*/ MOV         R3, R8 
    /*0000bc1c*/ MOVW        R2, #373                    @ 0x175 
    /*0000bc20*/ MOV         R1, FP 
    /*0000bc24*/ MOV         R0, SL 
    /*0000bc28*/ BL          0x000000000000BC28          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000bc2c*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000bc30*/ CMP         R3, R9 
    /*0000bc34*/ BEQ         VencResetChn_xba64
    /*0000bc38*/ LDM         R3, {R1, R2} 
    /*0000bc3c*/ STR         R2, [R1, #4] 
    /*0000bc40*/ STR         R1, [R2] 
    /*0000bc44*/ STR         R7, [R3] 
    /*0000bc48*/ STR         R6, [R3, #4] 
    /*0000bc4c*/ LDR         R2, [R4, #16] 
    /*0000bc50*/ SUB         R2, R2, #1 
    /*0000bc54*/ STR         R2, [R4, #16] 
    /*0000bc58*/ LDR         R5, [R3, #-8] 
    /*0000bc5c*/ CMP         R5, #0 
    /*0000bc60*/ BNE         VencResetChn_xba04
    /*0000bc64*/ B           VencResetChn_xbc18
    VencResetChn_xbc68:
    /*0000bc68*/ MOVW        R3, #0                      @ .LC318 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38d4] 
    /*0000bc6c*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000bc70*/ MOVT        R3, #0                      @ .LC318 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38d4] 
    /*0000bc74*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000bc78*/ MOV         R2, #188                    @ 0xbc 
    /*0000bc7c*/ LDR         R1, [PC, #1656]             @ 0x000000000000c2fc 
    /*0000bc80*/ BL          0x000000000000BC80          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000bc84*/ B           VencResetChn_xb8d0
    VencResetChn_xbc88:
    /*0000bc88*/ LDR         LR, [SP, #20] 
    /*0000bc8c*/ MOV         R3, #0 
    /*0000bc90*/ LDR         R4, [SP, #44]               @ 0x2c 
    /*0000bc94*/ MOV         IP, #4 
    /*0000bc98*/ MOV         R1, #6 
    /*0000bc9c*/ MVN         R2, #0 
    /*0000bca0*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000bca4*/ STR         R3, [R4, #3336]             @ 0xd08 
    /*0000bca8*/ STR         R3, [LR, #3824]             @ 0xef0 
    /*0000bcac*/ STR         R3, [LR, #3828]             @ 0xef4 
    /*0000bcb0*/ STR         R3, [LR, #3832]             @ 0xef8 
    /*0000bcb4*/ STR         R3, [LR, #3836]             @ 0xefc 
    /*0000bcb8*/ STR         IP, [R4, #3292]             @ 0xcdc 
    /*0000bcbc*/ STR         R1, [R4, #3288]             @ 0xcd8 
    /*0000bcc0*/ STR         R2, [LR, #3976]             @ 0xf88 
    /*0000bcc4*/ LDR         R2, [SP, #32] 
    /*0000bcc8*/ STR         R3, [LR, #3972]             @ 0xf84 
    /*0000bccc*/ STR         R3, [R4, #3328]             @ 0xd00 
    /*0000bcd0*/ STR         R3, [R4, #3284]             @ 0xcd4 
    /*0000bcd4*/ STR         R3, [R2, #1012]             @ 0x3f4 
    /*0000bcd8*/ BL          0x000000000000BCD8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000bcdc*/ LDR         R0, [SP, #28] 
    /*0000bce0*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000bce4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencResetChn_xbce8:
    /*0000bce8*/ MOV         R7, #256                    @ 0x100 
    /*0000bcec*/ MOVW        R8, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*0000bcf0*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000bcf4*/ MOVT        R7, #16 
    /*0000bcf8*/ MOVT        R8, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    /*0000bcfc*/ ADD         R3, R3, #36                 @ 0x24 
    /*0000bd00*/ STR         R3, [SP, #24] 
    VencResetChn_xbd04:
    /*0000bd04*/ MOV         R6, #512                    @ 0x200 
    /*0000bd08*/ MOVT        R6, #32 
    /*0000bd0c*/ MOV         R3, #0 
    /*0000bd10*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000bd14*/ STR         R3, [SP, #16] 
    VencResetChn_xbd18:
    /*0000bd18*/ LDR         R3, [SP, #20] 
    /*0000bd1c*/ LDR         R2, [SP, #24] 
    /*0000bd20*/ LDR         R3, [R3, #3808]             @ 0xee0 
    /*0000bd24*/ CMP         R2, R3 
    /*0000bd28*/ BEQ         VencResetChn_xbc88
    /*0000bd2c*/ LDM         R3, {R1, R2} 
    /*0000bd30*/ STR         R2, [R1, #4] 
    /*0000bd34*/ STR         R1, [R2] 
    /*0000bd38*/ LDR         R1, [SP, #20] 
    /*0000bd3c*/ STR         R7, [R3] 
    /*0000bd40*/ STR         R6, [R3, #4] 
    /*0000bd44*/ LDR         R2, [R1, #3788]             @ 0xecc 
    /*0000bd48*/ SUB         R2, R2, #1 
    /*0000bd4c*/ STR         R2, [R1, #3788]             @ 0xecc 
    /*0000bd50*/ LDR         R4, [R3, #-8] 
    /*0000bd54*/ CMP         R4, #0 
    /*0000bd58*/ ADDNE       R9, R4, #28 
    /*0000bd5c*/ BEQ         VencResetChn_xbfb8
    /*0000bd60*/ LDR         R3, [R4, #28] 
    /*0000bd64*/ CMP         R9, R3 
    /*0000bd68*/ BEQ         VencResetChn_xbe04
    VencResetChn_xbd6c:
    /*0000bd6c*/ LDM         R3, {R1, R2} 
    /*0000bd70*/ STR         R2, [R1, #4] 
    /*0000bd74*/ STR         R1, [R2] 
    /*0000bd78*/ STR         R7, [R3] 
    /*0000bd7c*/ STR         R6, [R3, #4] 
    /*0000bd80*/ LDR         R2, [R4, #12] 
    /*0000bd84*/ SUB         R2, R2, #1 
    /*0000bd88*/ STR         R2, [R4, #12] 
    /*0000bd8c*/ LDR         R5, [R3, #-8] 
    /*0000bd90*/ CMP         R5, #0 
    /*0000bd94*/ MOVWEQ      SL, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000bd98*/ LDREQ       FP, [PC, #1360]             @ 0x000000000000c2f0 
    /*0000bd9c*/ MOVTEQ      SL, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000bda0*/ BEQ         VencResetChn_xbf18
    VencResetChn_xbda4:
    /*0000bda4*/ LDR         R3, [R5, #-12] 
    /*0000bda8*/ LDR         R2, [SP, #16] 
    /*0000bdac*/ CMP         R3, R2 
    /*0000bdb0*/ BEQ         VencResetChn_xbdd0
    /*0000bdb4*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000bdb8*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000bdbc*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000bdc0*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000bdc4*/ MOV         R2, #141                    @ 0x8d 
    /*0000bdc8*/ LDR         R1, [PC, #1316]             @ 0x000000000000c2f4 
    /*0000bdcc*/ BL          0x000000000000BDCC          @ osal_panic [R_ARM_CALL: +0x0] 
    VencResetChn_xbdd0:
    /*0000bdd0*/ LDR         R2, [R4, #24] 
    /*0000bdd4*/ SUB         R1, R5, #8 
    /*0000bdd8*/ ADD         R3, R4, #20 
    /*0000bddc*/ STR         R1, [R4, #24] 
    /*0000bde0*/ STR         R3, [R5, #-8] 
    /*0000bde4*/ STR         R2, [R5, #-4] 
    /*0000bde8*/ STR         R1, [R2] 
    /*0000bdec*/ LDR         R3, [R4, #8] 
    /*0000bdf0*/ ADD         R3, R3, #1 
    /*0000bdf4*/ STR         R3, [R4, #8] 
    /*0000bdf8*/ LDR         R3, [R4, #28] 
    /*0000bdfc*/ CMP         R9, R3 
    /*0000be00*/ BNE         VencResetChn_xbd6c
    VencResetChn_xbe04:
    /*0000be04*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000be08*/ ADD         R9, R4, #36                 @ 0x24 
    /*0000be0c*/ CMP         R3, R9 
    /*0000be10*/ BEQ         VencResetChn_xbeac
    VencResetChn_xbe14:
    /*0000be14*/ LDM         R3, {R1, R2} 
    /*0000be18*/ STR         R2, [R1, #4] 
    /*0000be1c*/ STR         R1, [R2] 
    /*0000be20*/ STR         R7, [R3] 
    /*0000be24*/ STR         R6, [R3, #4] 
    /*0000be28*/ LDR         R2, [R4, #16] 
    /*0000be2c*/ SUB         R2, R2, #1 
    /*0000be30*/ STR         R2, [R4, #16] 
    /*0000be34*/ LDR         R5, [R3, #-8] 
    /*0000be38*/ CMP         R5, #0 
    /*0000be3c*/ MOVWEQ      SL, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000be40*/ LDREQ       FP, [PC, #1192]             @ 0x000000000000c2f0 
    /*0000be44*/ MOVTEQ      SL, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000be48*/ BEQ         VencResetChn_xbf68
    VencResetChn_xbe4c:
    /*0000be4c*/ LDR         R3, [R5, #-12] 
    /*0000be50*/ LDR         R2, [SP, #16] 
    /*0000be54*/ CMP         R3, R2 
    /*0000be58*/ BEQ         VencResetChn_xbe78
    /*0000be5c*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000be60*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000be64*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000be68*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000be6c*/ MOV         R2, #141                    @ 0x8d 
    /*0000be70*/ LDR         R1, [PC, #1148]             @ 0x000000000000c2f4 
    /*0000be74*/ BL          0x000000000000BE74          @ osal_panic [R_ARM_CALL: +0x0] 
    VencResetChn_xbe78:
    /*0000be78*/ LDR         R2, [R4, #24] 
    /*0000be7c*/ SUB         R1, R5, #8 
    /*0000be80*/ ADD         R3, R4, #20 
    /*0000be84*/ STR         R1, [R4, #24] 
    /*0000be88*/ STR         R3, [R5, #-8] 
    /*0000be8c*/ STR         R2, [R5, #-4] 
    /*0000be90*/ STR         R1, [R2] 
    /*0000be94*/ LDR         R3, [R4, #8] 
    /*0000be98*/ ADD         R3, R3, #1 
    /*0000be9c*/ STR         R3, [R4, #8] 
    /*0000bea0*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000bea4*/ CMP         R3, R9 
    /*0000bea8*/ BNE         VencResetChn_xbe14
    VencResetChn_xbeac:
    /*0000beac*/ CMP         R4, #0 
    /*0000beb0*/ BEQ         VencResetChn_xbd18
    /*0000beb4*/ LDR         R2, [R4, #-12] 
    /*0000beb8*/ MOV         R3, #0 
    /*0000bebc*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000bec0*/ CMP         R2, R3 
    /*0000bec4*/ BEQ         VencResetChn_xbee4
    /*0000bec8*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000becc*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000bed0*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000bed4*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000bed8*/ MOV         R2, #141                    @ 0x8d 
    /*0000bedc*/ LDR         R1, [PC, #1040]             @ 0x000000000000c2f4 
    /*0000bee0*/ BL          0x000000000000BEE0          @ osal_panic [R_ARM_CALL: +0x0] 
    VencResetChn_xbee4:
    /*0000bee4*/ LDR         R0, [SP, #20] 
    /*0000bee8*/ SUB         R1, R4, #8 
    /*0000beec*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000bef0*/ LDR         R2, [R0, #3796]             @ 0xed4 
    /*0000bef4*/ ADD         R3, R3, #20 
    /*0000bef8*/ STR         R1, [R0, #3796]             @ 0xed4 
    /*0000befc*/ STR         R3, [R4, #-8] 
    /*0000bf00*/ STR         R2, [R4, #-4] 
    /*0000bf04*/ STR         R1, [R2] 
    /*0000bf08*/ LDR         R3, [R0, #3780]             @ 0xec4 
    /*0000bf0c*/ ADD         R3, R3, #1 
    /*0000bf10*/ STR         R3, [R0, #3780]             @ 0xec4 
    /*0000bf14*/ B           VencResetChn_xbd04
    VencResetChn_xbf18:
    /*0000bf18*/ MOV         R3, R8 
    /*0000bf1c*/ MOVW        R2, #367                    @ 0x16f 
    /*0000bf20*/ MOV         R1, FP 
    /*0000bf24*/ MOV         R0, SL 
    /*0000bf28*/ BL          0x000000000000BF28          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000bf2c*/ LDR         R3, [R4, #28] 
    /*0000bf30*/ CMP         R3, R9 
    /*0000bf34*/ BEQ         VencResetChn_xbe04
    /*0000bf38*/ LDM         R3, {R1, R2} 
    /*0000bf3c*/ STR         R2, [R1, #4] 
    /*0000bf40*/ STR         R1, [R2] 
    /*0000bf44*/ STR         R7, [R3] 
    /*0000bf48*/ STR         R6, [R3, #4] 
    /*0000bf4c*/ LDR         R2, [R4, #12] 
    /*0000bf50*/ SUB         R2, R2, #1 
    /*0000bf54*/ STR         R2, [R4, #12] 
    /*0000bf58*/ LDR         R5, [R3, #-8] 
    /*0000bf5c*/ CMP         R5, #0 
    /*0000bf60*/ BNE         VencResetChn_xbda4
    /*0000bf64*/ B           VencResetChn_xbf18
    VencResetChn_xbf68:
    /*0000bf68*/ MOV         R3, R8 
    /*0000bf6c*/ MOVW        R2, #373                    @ 0x175 
    /*0000bf70*/ MOV         R1, FP 
    /*0000bf74*/ MOV         R0, SL 
    /*0000bf78*/ BL          0x000000000000BF78          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000bf7c*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000bf80*/ CMP         R3, R9 
    /*0000bf84*/ BEQ         VencResetChn_xbeac
    /*0000bf88*/ LDM         R3, {R1, R2} 
    /*0000bf8c*/ STR         R2, [R1, #4] 
    /*0000bf90*/ STR         R1, [R2] 
    /*0000bf94*/ STR         R7, [R3] 
    /*0000bf98*/ STR         R6, [R3, #4] 
    /*0000bf9c*/ LDR         R2, [R4, #16] 
    /*0000bfa0*/ SUB         R2, R2, #1 
    /*0000bfa4*/ STR         R2, [R4, #16] 
    /*0000bfa8*/ LDR         R5, [R3, #-8] 
    /*0000bfac*/ CMP         R5, #0 
    /*0000bfb0*/ BNE         VencResetChn_xbe4c
    /*0000bfb4*/ B           VencResetChn_xbf68
    VencResetChn_xbfb8:
    /*0000bfb8*/ MOVW        R3, #0                      @ .LC318 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38d4] 
    /*0000bfbc*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000bfc0*/ MOVT        R3, #0                      @ .LC318 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38d4] 
    /*0000bfc4*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000bfc8*/ MOV         R2, #195                    @ 0xc3 
    /*0000bfcc*/ LDR         R1, [PC, #808]              @ 0x000000000000c2fc 
    /*0000bfd0*/ BL          0x000000000000BFD0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000bfd4*/ B           VencResetChn_xbd18
    VencResetChn_xbfd8:
    /*0000bfd8*/ LDR         R2, [R4, #36]               @ 0x24 
    /*0000bfdc*/ ADD         R3, R4, #36                 @ 0x24 
    /*0000bfe0*/ CMP         R2, R3 
    /*0000bfe4*/ BNE         VencResetChn_xb840
    /*0000bfe8*/ ADD         R3, R6, #11904              @ 0x2e80 
    /*0000bfec*/ ADD         R3, R3, #60                 @ 0x3c 
    /*0000bff0*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000bff4*/ CMP         R3, #0 
    /*0000bff8*/ BEQ         VencResetChn_xb88c
    VencResetChn_xbffc:
    /*0000bffc*/ LDR         R2, [R4, #-12] 
    /*0000c000*/ MOV         R3, #0 
    /*0000c004*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000c008*/ CMP         R2, R3 
    /*0000c00c*/ BEQ         VencResetChn_xc02c
    /*0000c010*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000c014*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000c018*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000c01c*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000c020*/ MOV         R2, #141                    @ 0x8d 
    /*0000c024*/ LDR         R1, [PC, #712]              @ 0x000000000000c2f4 
    /*0000c028*/ BL          0x000000000000C028          @ osal_panic [R_ARM_CALL: +0x0] 
    VencResetChn_xc02c:
    /*0000c02c*/ LDR         R0, [SP, #20] 
    /*0000c030*/ SUB         R1, R4, #8 
    /*0000c034*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000c038*/ LDR         R2, [R0, #3796]             @ 0xed4 
    /*0000c03c*/ ADD         R3, R3, #20 
    /*0000c040*/ STR         R1, [R0, #3796]             @ 0xed4 
    /*0000c044*/ STR         R3, [R4, #-8] 
    /*0000c048*/ STR         R2, [R4, #-4] 
    /*0000c04c*/ STR         R1, [R2] 
    /*0000c050*/ LDR         R3, [R0, #3780]             @ 0xec4 
    /*0000c054*/ ADD         R3, R3, #1 
    /*0000c058*/ STR         R3, [R0, #3780]             @ 0xec4 
    /*0000c05c*/ B           VencResetChn_xb88c
    VencResetChn_xc060:
    /*0000c060*/ STR         R4, [SP, #12] 
    /*0000c064*/ MOVW        R2, #0                      @ .LC312 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3774] 
    /*0000c068*/ LDR         R3, [R6, #8] 
    /*0000c06c*/ MOVT        R2, #0                      @ .LC312 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3774] 
    /*0000c070*/ MOVW        R1, #5682                   @ 0x1632 
    /*0000c074*/ STR         R1, [SP] 
    /*0000c078*/ MOV         R1, #8 
    /*0000c07c*/ STR         R0, [SP, #4] 
    /*0000c080*/ STR         R3, [SP, #8] 
    VencResetChn_xc084:
    /*0000c084*/ LDR         R3, [PC, #620]              @ 0x000000000000c2f8 
    /*0000c088*/ MOV         R0, #3 
    /*0000c08c*/ BL          0x000000000000C08C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c090*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000c094*/ BL          0x000000000000C094          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c098*/ LDR         R0, [SP, #28] 
    /*0000c09c*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000c0a0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencResetChn_xc0a4:
    /*0000c0a4*/ ADD         R0, R6, #13376              @ 0x3440 
    /*0000c0a8*/ STR         R5, [R3, #1128]             @ 0x468 
    /*0000c0ac*/ ADD         R0, R0, #48                 @ 0x30 
    /*0000c0b0*/ BL          0x000000000000C0B0          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*0000c0b4*/ CMP         R0, #0 
    /*0000c0b8*/ BEQ         VencResetChn_xb580
    /*0000c0bc*/ MOVW        R3, #5728                   @ 0x1660 
    /*0000c0c0*/ MOV         R1, #8 
    /*0000c0c4*/ STR         R3, [SP] 
    /*0000c0c8*/ MOVW        R2, #0                      @ .LC314 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3814] 
    /*0000c0cc*/ LDR         R3, [PC, #548]              @ 0x000000000000c2f8 
    /*0000c0d0*/ MOVT        R2, #0                      @ .LC314 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3814] 
    /*0000c0d4*/ STR         R4, [SP, #4] 
    /*0000c0d8*/ MOV         R0, #3 
    /*0000c0dc*/ BL          0x000000000000C0DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c0e0*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000c0e4*/ BL          0x000000000000C0E4          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c0e8*/ MOVW        R3, #32775                  @ 0x8007 
    /*0000c0ec*/ MOVT        R3, #40968                  @ 0xa008 
    /*0000c0f0*/ STR         R3, [SP, #28] 
    /*0000c0f4*/ B           VencResetChn_xbae4
    VencResetChn_xc0f8:
    /*0000c0f8*/ MOVW        R2, #32776                  @ 0x8008 
    /*0000c0fc*/ MOVT        R2, #40968                  @ 0xa008 
    /*0000c100*/ STR         R3, [SP, #8] 
    /*0000c104*/ MOV         R1, #8 
    /*0000c108*/ MOVW        R3, #5710                   @ 0x164e 
    /*0000c10c*/ MOV         R5, R2 
    /*0000c110*/ STR         R2, [SP, #28] 
    /*0000c114*/ MOV         R0, #3 
    /*0000c118*/ MOVW        R2, #0                      @ .LC313 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37d4] 
    /*0000c11c*/ STR         R3, [SP] 
    /*0000c120*/ STR         R4, [SP, #4] 
    /*0000c124*/ MOVT        R2, #0                      @ .LC313 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37d4] 
    /*0000c128*/ LDR         R3, [PC, #456]              @ 0x000000000000c2f8 
    /*0000c12c*/ BL          0x000000000000C12C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencResetChn_xc130:
    /*0000c130*/ STR         R4, [SP, #12] 
    /*0000c134*/ MOVW        R1, #5717                   @ 0x1655 
    /*0000c138*/ LDR         R0, [R6, #8] 
    /*0000c13c*/ MOVW        R2, #0                      @ .LC312 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3774] 
    /*0000c140*/ STR         R1, [SP] 
    /*0000c144*/ MOVT        R2, #0                      @ .LC312 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3774] 
    /*0000c148*/ STR         R5, [SP, #4] 
    /*0000c14c*/ MOV         R1, #8 
    /*0000c150*/ STR         R0, [SP, #8] 
    /*0000c154*/ B           VencResetChn_xc084
    VencResetChn_xc158:
    /*0000c158*/ MOV         R0, #11 
    /*0000c15c*/ BL          0x000000000000C15C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c160*/ LDR         R1, [SP, #28] 
    /*0000c164*/ LDR         R3, [R0, #8] 
    /*0000c168*/ MOV         R0, R4 
    /*0000c16c*/ BLX         R3 
    /*0000c170*/ MOV         R5, R0 
    /*0000c174*/ B           VencResetChn_xb568
    VencResetChn_xc178:
    /*0000c178*/ MOV         R0, #11 
    /*0000c17c*/ B           VencResetChn_xb538
    VencResetChn_xc180:
    /*0000c180*/ MOV         R0, #13 
    /*0000c184*/ B           VencResetChn_xb538
    VencResetChn_xc188:
    /*0000c188*/ ADD         R3, R6, #11904              @ 0x2e80 
    /*0000c18c*/ ADD         R3, R3, #60                 @ 0x3c 
    /*0000c190*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000c194*/ B           VencResetChn_xb88c
    VencResetChn_xc198:
    /*0000c198*/ MOVW        R3, #5738                   @ 0x166a 
    /*0000c19c*/ MOV         R1, #8 
    /*0000c1a0*/ STR         R3, [SP] 
    /*0000c1a4*/ MOVW        R2, #0                      @ .LC315 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3848] 
    /*0000c1a8*/ LDR         R3, [PC, #328]              @ 0x000000000000c2f8 
    /*0000c1ac*/ MOVT        R2, #0                      @ .LC315 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3848] 
    /*0000c1b0*/ STR         R4, [SP, #4] 
    /*0000c1b4*/ MOV         R0, #3 
    /*0000c1b8*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*0000c1bc*/ BL          0x000000000000C1BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c1c0*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*0000c1c4*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000c1c8*/ BL          0x000000000000C1C8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c1cc*/ ORR         R3, R5, #524288             @ 0x80000 
    /*0000c1d0*/ STR         R3, [SP, #28] 
    /*0000c1d4*/ B           VencResetChn_xbae4
    VencResetChn_xc1d8:
    /*0000c1d8*/ MOV         R0, #45                     @ 0x2d 
    /*0000c1dc*/ BL          0x000000000000C1DC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c1e0*/ CMP         R0, #0 
    /*0000c1e4*/ BEQ         VencResetChn_xb5b0
    /*0000c1e8*/ MOV         R0, #45                     @ 0x2d 
    /*0000c1ec*/ BL          0x000000000000C1EC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c1f0*/ MOV         R1, R5 
    /*0000c1f4*/ ADD         R3, SP, #56                 @ 0x38 
    /*0000c1f8*/ LDR         R2, [R6, #56]               @ 0x38 
    /*0000c1fc*/ LDR         R5, [R0, #8] 
    /*0000c200*/ MOV         R0, #8 
    /*0000c204*/ BLX         R5 
    /*0000c208*/ B           VencResetChn_xb5b0
    VencResetChn_xc20c:
    /*0000c20c*/ MOV         R3, #65024                  @ 0xfe00 
    /*0000c210*/ MOVT        R3, #65535                  @ 0xffff 
    /*0000c214*/ STR         R3, [SP, #28] 
    /*0000c218*/ B           VencResetChn_xbae4
    VencResetChn_xc21c:
    /*0000c21c*/ MOVW        R3, #5649                   @ 0x1611 
    /*0000c220*/ MOV         R1, #8 
    /*0000c224*/ STR         R3, [SP] 
    /*0000c228*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000c22c*/ LDR         R3, [PC, #196]              @ 0x000000000000c2f8 
    /*0000c230*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000c234*/ STR         R4, [SP, #4] 
    /*0000c238*/ MOV         R0, #3 
    /*0000c23c*/ BL          0x000000000000C23C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c240*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000c244*/ BL          0x000000000000C244          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c248*/ MOVW        R3, #32773                  @ 0x8005 
    /*0000c24c*/ MOVT        R3, #40968                  @ 0xa008 
    /*0000c250*/ STR         R3, [SP, #28] 
    /*0000c254*/ B           VencResetChn_xbae4
    VencResetChn_xc258:
    /*0000c258*/ MOVW        IP, #32777                  @ 0x8009 
    /*0000c25c*/ STR         R4, [SP, #8] 
    /*0000c260*/ MOVW        R1, #5659                   @ 0x161b 
    /*0000c264*/ STR         R3, [SP, #4] 
    /*0000c268*/ STR         R1, [SP] 
    /*0000c26c*/ MOVW        R2, #0                      @ .LC310 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x36c8] 
    /*0000c270*/ LDR         R3, [PC, #128]              @ 0x000000000000c2f8 
    /*0000c274*/ MOVT        R2, #0                      @ .LC310 [R_ARM_MOVT_ABS: .rodata.str1.4+0x36c8] 
    /*0000c278*/ MOV         R1, #8 
    /*0000c27c*/ MOV         R0, #3 
    /*0000c280*/ MOV         R4, IP 
    /*0000c284*/ BL          0x000000000000C284          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c288*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000c28c*/ BL          0x000000000000C28C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c290*/ MOV         IP, R4 
    /*0000c294*/ MOVT        IP, #40968                  @ 0xa008 
    /*0000c298*/ STR         IP, [SP, #28] 
    /*0000c29c*/ B           VencResetChn_xbae4
    VencResetChn_xc2a0:
    /*0000c2a0*/ MOVW        R3, #5668                   @ 0x1624 
    /*0000c2a4*/ MOV         R1, #8 
    /*0000c2a8*/ STR         R3, [SP] 
    /*0000c2ac*/ MOVW        R2, #0                      @ .LC311 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x371c] 
    /*0000c2b0*/ LDR         R3, [PC, #64]               @ 0x000000000000c2f8 
    /*0000c2b4*/ MOVT        R2, #0                      @ .LC311 [R_ARM_MOVT_ABS: .rodata.str1.4+0x371c] 
    /*0000c2b8*/ STR         R4, [SP, #4] 
    /*0000c2bc*/ MOV         R0, #3 
    /*0000c2c0*/ BL          0x000000000000C2C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c2c4*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000c2c8*/ BL          0x000000000000C2C8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c2cc*/ MOVW        R3, #32777                  @ 0x8009 
    /*0000c2d0*/ MOVT        R3, #40968                  @ 0xa008 
    /*0000c2d4*/ STR         R3, [SP, #28] 
    /*0000c2d8*/ B           VencResetChn_xbae4
    VencResetChn_xc2dc:
    /*0000c2dc*/ BIC         R2, R5, #267386880          @ 0xff00000 
    /*0000c2e0*/ BIC         R2, R2, #983040             @ 0xf0000 
    /*0000c2e4*/ ORR         R3, R2, #524288             @ 0x80000 
    /*0000c2e8*/ STR         R3, [SP, #28] 
    /*0000c2ec*/ B           VencResetChn_xc130
    /*0000c2f0*/ ANDEQ       R0, R0, R4, LSL #9 
    /*0000c2f4*/ STRDEQ      R0, [R0], -IP 
    /*0000c2f8*/ ANDEQ       R0, R0, R4, ROR R4 
    /*0000c2fc*/ MULEQ       R0, R8, R4 
FUNC_END VencResetChn


FUNC_BEGIN VENC_FrameOverNotify
    /*0000c300*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000c304*/ SUBS        R4, R0, #0 
    /*0000c308*/ SUB         SP, SP, #28 
    /*0000c30c*/ MOV         R2, #0 
    /*0000c310*/ MOV         R3, #1 
    /*0000c314*/ STR         R2, [SP, #16] 
    /*0000c318*/ STR         R3, [SP, #20] 
    /*0000c31c*/ BLT         VENC_FrameOverNotify_xc434
    /*0000c320*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000c324*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000c328*/ LDR         R3, [R3] 
    /*0000c32c*/ CMP         R4, R3 
    /*0000c330*/ BCS         VENC_FrameOverNotify_xc434
    VENC_FrameOverNotify_xc334:
    /*0000c334*/ MOVW        R6, #36240                  @ 0x8d90 
    /*0000c338*/ MOVW        R7, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000c33c*/ MUL         R6, R6, R4 
    /*0000c340*/ MOVT        R7, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000c344*/ LDR         R3, [R7] 
    /*0000c348*/ ADD         R5, R3, R6 
    /*0000c34c*/ LDR         R3, [R3, R6] 
    /*0000c350*/ CMP         R3, #1 
    /*0000c354*/ BEQ         VENC_FrameOverNotify_xc37c
    /*0000c358*/ MOVW        R3, #0                      @ .LC319 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38e0] 
    /*0000c35c*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000c360*/ MOVT        R3, #0                      @ .LC319 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38e0] 
    /*0000c364*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000c368*/ MOVW        R2, #6906                   @ 0x1afa 
    /*0000c36c*/ LDR         R1, [PC, #672]              @ 0x000000000000c614 
    /*0000c370*/ BL          0x000000000000C370          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000c374*/ LDR         R5, [R7] 
    /*0000c378*/ ADD         R5, R5, R6 
    VENC_FrameOverNotify_xc37c:
    /*0000c37c*/ ADD         R8, R5, #60                 @ 0x3c 
    /*0000c380*/ ADD         R6, R5, #8192               @ 0x2000 
    /*0000c384*/ ADD         R1, SP, #12 
    /*0000c388*/ MOV         R0, R8 
    /*0000c38c*/ BL          0x000000000000C38C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000c390*/ LDR         R3, [R6, #3768]             @ 0xeb8 
    /*0000c394*/ CMP         R3, #0 
    /*0000c398*/ ADDEQ       R9, R5, #32768              @ 0x8000 
    /*0000c39c*/ BNE         VENC_FrameOverNotify_xc454
    VENC_FrameOverNotify_xc3a0:
    /*0000c3a0*/ LDRB        R3, [R9, #3352]             @ 0xd18 
    VENC_FrameOverNotify_xc3a4:
    /*0000c3a4*/ CMP         R3, #1 
    /*0000c3a8*/ BEQ         VENC_FrameOverNotify_xc3bc
    VENC_FrameOverNotify_xc3ac:
    /*0000c3ac*/ LDR         R3, [R5, #80]               @ 0x50 
    /*0000c3b0*/ LDR         R3, [R3, #384]              @ 0x180 
    /*0000c3b4*/ CMP         R3, #0 
    /*0000c3b8*/ BEQ         VENC_FrameOverNotify_xc41c
    VENC_FrameOverNotify_xc3bc:
    /*0000c3bc*/ MOV         R0, #11 
    /*0000c3c0*/ BL          0x000000000000C3C0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c3c4*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*0000c3c8*/ MOV         R0, R4 
    /*0000c3cc*/ BLX         R3 
    /*0000c3d0*/ LDR         R3, [R5, #80]               @ 0x50 
    /*0000c3d4*/ LDR         R3, [R3, #384]              @ 0x180 
    /*0000c3d8*/ CMP         R3, #1 
    /*0000c3dc*/ BEQ         VENC_FrameOverNotify_xc5a0
    /*0000c3e0*/ CMP         R3, #2 
    /*0000c3e4*/ BEQ         VENC_FrameOverNotify_xc5dc
    /*0000c3e8*/ CMP         R3, #0 
    /*0000c3ec*/ BNE         VENC_FrameOverNotify_xc3fc
    /*0000c3f0*/ LDR         R3, [R6, #3768]             @ 0xeb8 
    /*0000c3f4*/ CMP         R3, #0 
    /*0000c3f8*/ BNE         VENC_FrameOverNotify_xc590
    VENC_FrameOverNotify_xc3fc:
    /*0000c3fc*/ ADD         R1, SP, #12 
    /*0000c400*/ MOV         R0, R8 
    /*0000c404*/ BL          0x000000000000C404          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VENC_FrameOverNotify_xc408:
    /*0000c408*/ ADD         SP, SP, #28 
    /*0000c40c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VENC_FrameOverNotify_xc410:
    /*0000c410*/ LDR         R3, [SP, #16] 
    /*0000c414*/ CMP         R3, #0 
    /*0000c418*/ BNE         VENC_FrameOverNotify_xc4a0
    VENC_FrameOverNotify_xc41c:
    /*0000c41c*/ ADD         R1, SP, #16 
    /*0000c420*/ MOV         R0, R4 
    /*0000c424*/ BL          0x000000000000C424          @ VencPacktoVencBuf [R_ARM_CALL: .text+0xa898] 
    /*0000c428*/ CMP         R0, #0 
    /*0000c42c*/ BEQ         VENC_FrameOverNotify_xc410
    /*0000c430*/ B           VENC_FrameOverNotify_xc3fc
    VENC_FrameOverNotify_xc434:
    /*0000c434*/ MOVW        R3, #0                      @ .LC306 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3638] 
    /*0000c438*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000c43c*/ MOVT        R3, #0                      @ .LC306 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3638] 
    /*0000c440*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000c444*/ MOVW        R2, #6902                   @ 0x1af6 
    /*0000c448*/ LDR         R1, [PC, #452]              @ 0x000000000000c614 
    /*0000c44c*/ BL          0x000000000000C44C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000c450*/ B           VENC_FrameOverNotify_xc334
    VENC_FrameOverNotify_xc454:
    /*0000c454*/ MOV         R0, #1 
    /*0000c458*/ ADD         R9, R5, #32768              @ 0x8000 
    /*0000c45c*/ BL          0x000000000000C45C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c460*/ LDR         R3, [R0, #104]              @ 0x68 
    /*0000c464*/ MOV         R0, #1 
    /*0000c468*/ BLX         R3 
    /*0000c46c*/ LDRB        R3, [R9, #3352]             @ 0xd18 
    /*0000c470*/ CMP         R0, #0 
    /*0000c474*/ BEQ         VENC_FrameOverNotify_xc3a4
    /*0000c478*/ CMP         R3, #0 
    /*0000c47c*/ BNE         VENC_FrameOverNotify_xc3a4
    /*0000c480*/ LDR         R3, [R9, #3344]             @ 0xd10 
    /*0000c484*/ CMP         R3, #0 
    /*0000c488*/ CMPNE       R3, #3 
    /*0000c48c*/ BEQ         VENC_FrameOverNotify_xc5ec
    /*0000c490*/ LDR         R3, [SP, #20] 
    /*0000c494*/ CMP         R3, #0 
    /*0000c498*/ BNE         VENC_FrameOverNotify_xc3ac
    /*0000c49c*/ B           VENC_FrameOverNotify_xc3fc
    VENC_FrameOverNotify_xc4a0:
    /*0000c4a0*/ MOV         R0, R4 
    /*0000c4a4*/ BL          0x000000000000C4A4          @ VencGetStreamInfo [R_ARM_CALL: .text+0xafc4] 
    /*0000c4a8*/ ADD         R3, R5, #11904              @ 0x2e80 
    /*0000c4ac*/ ADD         R3, R3, #60                 @ 0x3c 
    /*0000c4b0*/ CMP         R3, #0 
    /*0000c4b4*/ BEQ         VENC_FrameOverNotify_xc5b0
    /*0000c4b8*/ LDR         R6, [R6, #3784]             @ 0xec8 
    /*0000c4bc*/ CMP         R6, #0 
    /*0000c4c0*/ BEQ         VENC_FrameOverNotify_xc5b0
    VENC_FrameOverNotify_xc4c4:
    /*0000c4c4*/ MOV         R0, R8 
    /*0000c4c8*/ ADD         R1, SP, #12 
    /*0000c4cc*/ BL          0x000000000000C4CC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000c4d0*/ MOV         R1, #8 
    /*0000c4d4*/ MOVW        R3, #6971                   @ 0x1b3b 
    /*0000c4d8*/ MOVW        R2, #0                      @ .LC321 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3954] 
    /*0000c4dc*/ STR         R3, [SP] 
    /*0000c4e0*/ MOVT        R2, #0                      @ .LC321 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3954] 
    /*0000c4e4*/ LDR         R3, [PC, #296]              @ 0x000000000000c614 
    /*0000c4e8*/ MOV         R0, #5 
    /*0000c4ec*/ BL          0x000000000000C4EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c4f0*/ MOV         R0, #2 
    /*0000c4f4*/ BL          0x000000000000C4F4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c4f8*/ LDR         R3, [R0, #88]               @ 0x58 
    /*0000c4fc*/ BLX         R3 
    /*0000c500*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*0000c504*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000c508*/ MOV         R2, #1000                   @ 0x3e8 
    /*0000c50c*/ ADD         R4, R3, R4, LSL #3 
    /*0000c510*/ LDRD        R8, [R4, #64]               @ 0x40 
    /*0000c514*/ STRD        R0, [R7, #136]              @ 0x88 
    /*0000c518*/ SUBS        R0, R0, R8 
    /*0000c51c*/ SBC         R1, R1, R9 
    /*0000c520*/ BL          0x000000000000C520          @ osal_div_u64 [R_ARM_CALL: +0x0] 
    /*0000c524*/ ADD         R1, R5, #12288              @ 0x3000 
    /*0000c528*/ LDRD        R2, [R7, #136]              @ 0x88 
    /*0000c52c*/ MOVW        LR, #265                    @ 0x109 
    /*0000c530*/ LDR         IP, [R1, #588]              @ 0x24c 
    /*0000c534*/ STRD        R2, [R4, #64]               @ 0x40 
    /*0000c538*/ ADD         IP, IP, #1 
    /*0000c53c*/ STR         IP, [R1, #588]              @ 0x24c 
    /*0000c540*/ STR         R0, [R1, #112]              @ 0x70 
    /*0000c544*/ LDR         R3, [R5, #4] 
    /*0000c548*/ CMP         R3, LR 
    /*0000c54c*/ CMPNE       R3, #96                     @ 0x60 
    /*0000c550*/ BNE         VENC_FrameOverNotify_xc570
    /*0000c554*/ LDR         R2, [R1, #604]              @ 0x25c 
    /*0000c558*/ MOV         IP, #0 
    /*0000c55c*/ LDR         R3, [R1, #148]              @ 0x94 
    /*0000c560*/ LDR         R0, [R1, #152]              @ 0x98 
    /*0000c564*/ STR         IP, [R1, #592]              @ 0x250 
    /*0000c568*/ MLA         R3, R0, R3, R2 
    /*0000c56c*/ STR         R3, [R1, #604]              @ 0x25c 
    VENC_FrameOverNotify_xc570:
    /*0000c570*/ LDR         R3, [R1, #1104]             @ 0x450 
    /*0000c574*/ CMP         R3, R6 
    /*0000c578*/ BHI         VENC_FrameOverNotify_xc408
    /*0000c57c*/ ADD         R0, R5, #12352              @ 0x3040 
    /*0000c580*/ ADD         R0, R0, #52                 @ 0x34 
    /*0000c584*/ BL          0x000000000000C584          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0000c588*/ ADD         SP, SP, #28 
    /*0000c58c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VENC_FrameOverNotify_xc590:
    /*0000c590*/ LDR         R3, [R9, #3344]             @ 0xd10 
    /*0000c594*/ CMP         R3, #3 
    /*0000c598*/ BNE         VENC_FrameOverNotify_xc3fc
    /*0000c59c*/ B           VENC_FrameOverNotify_xc41c
    VENC_FrameOverNotify_xc5a0:
    /*0000c5a0*/ LDR         R3, [R9, #3344]             @ 0xd10 
    /*0000c5a4*/ CMP         R3, #1 
    /*0000c5a8*/ BNE         VENC_FrameOverNotify_xc3fc
    /*0000c5ac*/ B           VENC_FrameOverNotify_xc41c
    VENC_FrameOverNotify_xc5b0:
    /*0000c5b0*/ MOV         R6, #0 
    /*0000c5b4*/ MOVW        R3, #6968                   @ 0x1b38 
    /*0000c5b8*/ STR         R6, [SP, #4] 
    /*0000c5bc*/ MOVW        R2, #0                      @ .LC320 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3908] 
    /*0000c5c0*/ STR         R3, [SP] 
    /*0000c5c4*/ MOVT        R2, #0                      @ .LC320 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3908] 
    /*0000c5c8*/ LDR         R3, [PC, #68]               @ 0x000000000000c614 
    /*0000c5cc*/ MOV         R1, #8 
    /*0000c5d0*/ MOV         R0, #3 
    /*0000c5d4*/ BL          0x000000000000C5D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c5d8*/ B           VENC_FrameOverNotify_xc4c4
    VENC_FrameOverNotify_xc5dc:
    /*0000c5dc*/ LDR         R3, [R9, #3344]             @ 0xd10 
    /*0000c5e0*/ CMP         R3, #2 
    /*0000c5e4*/ BNE         VENC_FrameOverNotify_xc3fc
    /*0000c5e8*/ B           VENC_FrameOverNotify_xc41c
    VENC_FrameOverNotify_xc5ec:
    /*0000c5ec*/ MOV         R0, #11 
    /*0000c5f0*/ BL          0x000000000000C5F0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c5f4*/ ADD         R1, SP, #20 
    /*0000c5f8*/ LDR         R3, [R0, #92]               @ 0x5c 
    /*0000c5fc*/ MOV         R0, R4 
    /*0000c600*/ BLX         R3 
    /*0000c604*/ LDR         R3, [SP, #20] 
    /*0000c608*/ CMP         R3, #0 
    /*0000c60c*/ BNE         VENC_FrameOverNotify_xc3a0
    /*0000c610*/ B           VENC_FrameOverNotify_xc3fc
    /*0000c614*/ ANDEQ       R0, R0, IP, LSR #9 
FUNC_END VENC_FrameOverNotify


FUNC_BEGIN VencRequestIDR
    /*0000c618*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000c61c*/ SUBS        R4, R0, #0 
    /*0000c620*/ SUB         SP, SP, #12 
    /*0000c624*/ MOV         R7, R1 
    /*0000c628*/ BLT         VencRequestIDR_xc6dc
    /*0000c62c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000c630*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000c634*/ LDR         R3, [R3] 
    /*0000c638*/ CMP         R4, R3 
    /*0000c63c*/ BCS         VencRequestIDR_xc6dc
    VencRequestIDR_xc640:
    /*0000c640*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0000c644*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000c648*/ MUL         R5, R5, R4 
    /*0000c64c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000c650*/ LDR         R8, [R3] 
    /*0000c654*/ ADD         R9, R8, R5 
    /*0000c658*/ ADD         R6, R9, #12416              @ 0x3080 
    /*0000c65c*/ ADD         R6, R6, #16 
    /*0000c660*/ MOV         R0, R6 
    /*0000c664*/ BL          0x000000000000C664          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000c668*/ CMP         R0, #0 
    /*0000c66c*/ BNE         VencRequestIDR_xc7a8
    /*0000c670*/ LDR         R3, [R8, R5] 
    /*0000c674*/ CMP         R3, #1 
    /*0000c678*/ BNE         VencRequestIDR_xc770
    /*0000c67c*/ CMP         R7, #1 
    /*0000c680*/ BHI         VencRequestIDR_xc738
    /*0000c684*/ LDR         R3, [R9, #4] 
    /*0000c688*/ CMP         R3, #96                     @ 0x60 
    /*0000c68c*/ BEQ         VencRequestIDR_xc6f8
    /*0000c690*/ MOVW        R2, #265                    @ 0x109 
    /*0000c694*/ CMP         R3, R2 
    /*0000c698*/ BEQ         VencRequestIDR_xc6f8
    /*0000c69c*/ MOV         R1, #8 
    /*0000c6a0*/ STR         R4, [SP, #4] 
    /*0000c6a4*/ MOVW        R3, #7055                   @ 0x1b8f 
    /*0000c6a8*/ MOVW        R2, #0                      @ .LC323 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x39e0] 
    /*0000c6ac*/ STR         R3, [SP] 
    /*0000c6b0*/ MOVT        R2, #0                      @ .LC323 [R_ARM_MOVT_ABS: .rodata.str1.4+0x39e0] 
    /*0000c6b4*/ LDR         R3, [PC, #248]              @ 0x000000000000c7b4 
    /*0000c6b8*/ MOV         R0, #3 
    /*0000c6bc*/ BL          0x000000000000C6BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c6c0*/ MOV         R0, R6 
    /*0000c6c4*/ BL          0x000000000000C6C4          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c6c8*/ MOVW        R5, #32776                  @ 0x8008 
    /*0000c6cc*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000c6d0*/ MOV         R0, R5 
    /*0000c6d4*/ ADD         SP, SP, #12 
    /*0000c6d8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencRequestIDR_xc6dc:
    /*0000c6dc*/ MOV         R0, R4 
    /*0000c6e0*/ BL          0x0000000000000304 
    /*0000c6e4*/ SUBS        R5, R0, #0 
    /*0000c6e8*/ BEQ         VencRequestIDR_xc640
    VencRequestIDR_xc6ec:
    /*0000c6ec*/ MOV         R0, R5 
    /*0000c6f0*/ ADD         SP, SP, #12 
    /*0000c6f4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencRequestIDR_xc6f8:
    /*0000c6f8*/ MOV         R0, #19 
    /*0000c6fc*/ BL          0x000000000000C6FC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c700*/ MOV         R1, R7 
    /*0000c704*/ LDR         R3, [R0, #56]               @ 0x38 
    /*0000c708*/ MOV         R0, R4 
    /*0000c70c*/ BLX         R3 
    /*0000c710*/ MOV         R5, R0 
    /*0000c714*/ MOV         R0, R6 
    /*0000c718*/ BL          0x000000000000C718          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c71c*/ CMP         R5, #0 
    /*0000c720*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*0000c724*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*0000c728*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*0000c72c*/ MOV         R0, R5 
    /*0000c730*/ ADD         SP, SP, #12 
    /*0000c734*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencRequestIDR_xc738:
    /*0000c738*/ MOV         R3, #7040                   @ 0x1b80 
    /*0000c73c*/ MOV         R1, #8 
    /*0000c740*/ STR         R3, [SP] 
    /*0000c744*/ MOVW        R2, #0                      @ .LC322 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x398c] 
    /*0000c748*/ LDR         R3, [PC, #100]              @ 0x000000000000c7b4 
    /*0000c74c*/ MOVT        R2, #0                      @ .LC322 [R_ARM_MOVT_ABS: .rodata.str1.4+0x398c] 
    /*0000c750*/ STR         R4, [SP, #4] 
    /*0000c754*/ MOV         R0, #3 
    /*0000c758*/ BL          0x000000000000C758          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c75c*/ MOV         R0, R6 
    /*0000c760*/ MOVW        R5, #32771                  @ 0x8003 
    /*0000c764*/ BL          0x000000000000C764          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c768*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000c76c*/ B           VencRequestIDR_xc6ec
    VencRequestIDR_xc770:
    /*0000c770*/ MOVW        R3, #7033                   @ 0x1b79 
    /*0000c774*/ MOV         R1, #8 
    /*0000c778*/ STR         R3, [SP] 
    /*0000c77c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000c780*/ LDR         R3, [PC, #44]               @ 0x000000000000c7b4 
    /*0000c784*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000c788*/ STR         R4, [SP, #4] 
    /*0000c78c*/ MOV         R0, #3 
    /*0000c790*/ BL          0x000000000000C790          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c794*/ MOV         R0, R6 
    /*0000c798*/ MOVW        R5, #32773                  @ 0x8005 
    /*0000c79c*/ BL          0x000000000000C79C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c7a0*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000c7a4*/ B           VencRequestIDR_xc6ec
    VencRequestIDR_xc7a8:
    /*0000c7a8*/ MOV         R5, #65024                  @ 0xfe00 
    /*0000c7ac*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000c7b0*/ B           VencRequestIDR_xc6ec
    /*0000c7b4*/ ANDEQ       R0, R0, R4, ASR #9 
FUNC_END VencRequestIDR


FUNC_BEGIN VencInsertUserData
    /*0000c7b8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000c7bc*/ SUBS        R7, R1, #0 
    /*0000c7c0*/ SUB         SP, SP, #8 
    /*0000c7c4*/ MOV         R4, R0 
    /*0000c7c8*/ MOV         R8, R2 
    /*0000c7cc*/ BEQ         VencInsertUserData_xc90c
    VencInsertUserData_xc7d0:
    /*0000c7d0*/ CMP         R4, #0 
    /*0000c7d4*/ BLT         VencInsertUserData_xc874
    /*0000c7d8*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000c7dc*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000c7e0*/ LDR         R3, [R3] 
    /*0000c7e4*/ CMP         R4, R3 
    /*0000c7e8*/ BCS         VencInsertUserData_xc874
    VencInsertUserData_xc7ec:
    /*0000c7ec*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0000c7f0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000c7f4*/ MUL         R5, R5, R4 
    /*0000c7f8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000c7fc*/ LDR         R9, [R3] 
    /*0000c800*/ ADD         SL, R9, R5 
    /*0000c804*/ ADD         R6, SL, #12416              @ 0x3080 
    /*0000c808*/ ADD         R6, R6, #16 
    /*0000c80c*/ MOV         R0, R6 
    /*0000c810*/ BL          0x000000000000C810          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000c814*/ CMP         R0, #0 
    /*0000c818*/ BNE         VencInsertUserData_xc978
    /*0000c81c*/ LDR         R3, [R9, R5] 
    /*0000c820*/ CMP         R3, #1 
    /*0000c824*/ BNE         VencInsertUserData_xc940
    /*0000c828*/ LDR         R3, [SL, #4] 
    /*0000c82c*/ CMP         R3, #96                     @ 0x60 
    /*0000c830*/ BEQ         VencInsertUserData_xc890
    /*0000c834*/ BLS         VencInsertUserData_xc8cc
    /*0000c838*/ MOVW        R2, #265                    @ 0x109 
    /*0000c83c*/ CMP         R3, R2 
    /*0000c840*/ BEQ         VencInsertUserData_xc91c
    /*0000c844*/ MOVW        R2, #1002                   @ 0x3ea 
    /*0000c848*/ CMP         R3, R2 
    /*0000c84c*/ BNE         VencInsertUserData_xc8d4
    VencInsertUserData_xc850:
    /*0000c850*/ MOV         R0, #11 
    /*0000c854*/ BL          0x000000000000C854          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c858*/ MOV         R2, R8 
    /*0000c85c*/ MOV         R1, R7 
    /*0000c860*/ LDR         R3, [R0, #20] 
    /*0000c864*/ MOV         R0, R4 
    /*0000c868*/ BLX         R3 
    /*0000c86c*/ MOV         R5, R0 
    /*0000c870*/ B           VencInsertUserData_xc8b0
    VencInsertUserData_xc874:
    /*0000c874*/ MOV         R0, R4 
    /*0000c878*/ BL          0x0000000000000304 
    /*0000c87c*/ SUBS        R5, R0, #0 
    /*0000c880*/ BEQ         VencInsertUserData_xc7ec
    VencInsertUserData_xc884:
    /*0000c884*/ MOV         R0, R5 
    /*0000c888*/ ADD         SP, SP, #8 
    /*0000c88c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencInsertUserData_xc890:
    /*0000c890*/ MOV         R0, #10 
    /*0000c894*/ BL          0x000000000000C894          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c898*/ MOV         R2, R8 
    /*0000c89c*/ MOV         R1, R7 
    /*0000c8a0*/ LDR         R3, [R0, #28] 
    /*0000c8a4*/ MOV         R0, R4 
    /*0000c8a8*/ BLX         R3 
    /*0000c8ac*/ MOV         R5, R0 
    VencInsertUserData_xc8b0:
    /*0000c8b0*/ MOV         R0, R6 
    /*0000c8b4*/ BL          0x000000000000C8B4          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c8b8*/ CMP         R5, #0 
    /*0000c8bc*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*0000c8c0*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*0000c8c4*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*0000c8c8*/ B           VencInsertUserData_xc884
    VencInsertUserData_xc8cc:
    /*0000c8cc*/ CMP         R3, #26 
    /*0000c8d0*/ BEQ         VencInsertUserData_xc850
    VencInsertUserData_xc8d4:
    /*0000c8d4*/ STR         R3, [SP, #4] 
    /*0000c8d8*/ MOV         R1, #8 
    /*0000c8dc*/ MOVW        R3, #7127                   @ 0x1bd7 
    /*0000c8e0*/ MOVW        R2, #0                      @ .LC324 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a3c] 
    /*0000c8e4*/ STR         R3, [SP] 
    /*0000c8e8*/ MOVT        R2, #0                      @ .LC324 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a3c] 
    /*0000c8ec*/ LDR         R3, [PC, #144]              @ 0x000000000000c984 
    /*0000c8f0*/ MOV         R0, #3 
    /*0000c8f4*/ BL          0x000000000000C8F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c8f8*/ MOV         R0, R6 
    /*0000c8fc*/ MOVW        R5, #32776                  @ 0x8008 
    /*0000c900*/ BL          0x000000000000C900          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c904*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000c908*/ B           VencInsertUserData_xc884
    VencInsertUserData_xc90c:
    /*0000c90c*/ BL          0x00000000000002C8 
    /*0000c910*/ SUBS        R5, R0, #0 
    /*0000c914*/ BNE         VencInsertUserData_xc884
    /*0000c918*/ B           VencInsertUserData_xc7d0
    VencInsertUserData_xc91c:
    /*0000c91c*/ MOV         R0, #13 
    /*0000c920*/ BL          0x000000000000C920          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c924*/ MOV         R2, R8 
    /*0000c928*/ MOV         R1, R7 
    /*0000c92c*/ LDR         R3, [R0, #32] 
    /*0000c930*/ MOV         R0, R4 
    /*0000c934*/ BLX         R3 
    /*0000c938*/ MOV         R5, R0 
    /*0000c93c*/ B           VencInsertUserData_xc8b0
    VencInsertUserData_xc940:
    /*0000c940*/ MOVW        R3, #7099                   @ 0x1bbb 
    /*0000c944*/ MOV         R1, #8 
    /*0000c948*/ STR         R3, [SP] 
    /*0000c94c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000c950*/ LDR         R3, [PC, #44]               @ 0x000000000000c984 
    /*0000c954*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000c958*/ STR         R4, [SP, #4] 
    /*0000c95c*/ MOV         R0, #3 
    /*0000c960*/ BL          0x000000000000C960          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c964*/ MOV         R0, R6 
    /*0000c968*/ MOVW        R5, #32773                  @ 0x8005 
    /*0000c96c*/ BL          0x000000000000C96C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c970*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000c974*/ B           VencInsertUserData_xc884
    VencInsertUserData_xc978:
    /*0000c978*/ MOV         R5, #65024                  @ 0xfe00 
    /*0000c97c*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000c980*/ B           VencInsertUserData_xc884
    /*0000c984*/ LDRDEQ      R0, [R0], -R4 
FUNC_END VencInsertUserData


FUNC_BEGIN VencUnRegisterChn
    /*0000c988*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000c98c*/ SUBS        R4, R0, #0 
    /*0000c990*/ SUB         SP, SP, #60                 @ 0x3c 
    /*0000c994*/ MOV         R5, R1 
    /*0000c998*/ BLT         VencUnRegisterChn_xcf94
    /*0000c99c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000c9a0*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000c9a4*/ LDR         R3, [R3] 
    /*0000c9a8*/ CMP         R3, R4 
    /*0000c9ac*/ BLS         VencUnRegisterChn_xcf94
    VencUnRegisterChn_xc9b0:
    /*0000c9b0*/ CMP         R5, #0 
    /*0000c9b4*/ BEQ         VencUnRegisterChn_xd5e4
    VencUnRegisterChn_xc9b8:
    /*0000c9b8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000c9bc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000c9c0*/ MOVW        R2, #36240                  @ 0x8d90 
    /*0000c9c4*/ LDR         R3, [R3] 
    /*0000c9c8*/ MLA         R3, R2, R4, R3 
    /*0000c9cc*/ STR         R3, [SP, #28] 
    /*0000c9d0*/ LDR         R3, [R3, #56]               @ 0x38 
    /*0000c9d4*/ CMN         R3, #1 
    /*0000c9d8*/ BEQ         VencUnRegisterChn_xd678
    /*0000c9dc*/ CMP         R4, R3 
    /*0000c9e0*/ BNE         VencUnRegisterChn_xd574
    /*0000c9e4*/ MOV         R0, #4 
    /*0000c9e8*/ BL          0x000000000000C9E8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c9ec*/ LDR         R2, [SP, #28] 
    /*0000c9f0*/ MOV         R1, R4 
    /*0000c9f4*/ LDR         R3, [R0, #16] 
    /*0000c9f8*/ LDR         R0, [R2, #8] 
    /*0000c9fc*/ BLX         R3 
    /*0000ca00*/ SUBS        R3, R0, #0 
    /*0000ca04*/ STR         R3, [SP, #24] 
    /*0000ca08*/ BNE         VencUnRegisterChn_xd554
    /*0000ca0c*/ LDR         R3, [SP, #28] 
    /*0000ca10*/ MOVW        R2, #265                    @ 0x109 
    /*0000ca14*/ LDR         R3, [R3, #4] 
    /*0000ca18*/ CMP         R3, R2 
    /*0000ca1c*/ BEQ         VencUnRegisterChn_xd5dc
    /*0000ca20*/ BHI         VencUnRegisterChn_xcfb4
    /*0000ca24*/ CMP         R3, #26 
    /*0000ca28*/ BEQ         VencUnRegisterChn_xd5bc
    /*0000ca2c*/ CMP         R3, #96                     @ 0x60 
    /*0000ca30*/ MOVEQ       R0, #10 
    /*0000ca34*/ BNE         VencUnRegisterChn_xd214
    VencUnRegisterChn_xca38:
    /*0000ca38*/ BL          0x000000000000CA38          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000ca3c*/ LDR         R1, [SP, #24] 
    /*0000ca40*/ LDR         R3, [R0, #8] 
    /*0000ca44*/ MOV         R0, R4 
    /*0000ca48*/ BLX         R3 
    /*0000ca4c*/ MOV         R6, R0 
    /*0000ca50*/ MOV         R0, #19 
    /*0000ca54*/ BL          0x000000000000CA54          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000ca58*/ LDR         R3, [R0, #8] 
    /*0000ca5c*/ MOV         R0, R4 
    /*0000ca60*/ BLX         R3 
    /*0000ca64*/ ORR         R3, R6, R0 
    /*0000ca68*/ STR         R3, [SP, #24] 
    VencUnRegisterChn_xca6c:
    /*0000ca6c*/ LDR         R3, [SP, #24] 
    /*0000ca70*/ CMP         R3, #0 
    /*0000ca74*/ BNE         VencUnRegisterChn_xd220
    /*0000ca78*/ MOV         R0, #4 
    /*0000ca7c*/ BL          0x000000000000CA7C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000ca80*/ LDR         R2, [SP, #28] 
    /*0000ca84*/ MOV         R1, R4 
    /*0000ca88*/ LDR         R3, [R0, #20] 
    /*0000ca8c*/ LDR         R0, [R2, #8] 
    /*0000ca90*/ BLX         R3 
    /*0000ca94*/ SUBS        R3, R0, #0 
    /*0000ca98*/ STR         R3, [SP, #24] 
    /*0000ca9c*/ BNE         VencUnRegisterChn_xd5f8
    /*0000caa0*/ CMP         R5, #0 
    /*0000caa4*/ LDRNE       R3, [SP, #28] 
    /*0000caa8*/ LDRNE       R3, [R3, #8] 
    /*0000caac*/ STRNE       R3, [R5] 
    /*0000cab0*/ LDR         R3, [SP, #28] 
    /*0000cab4*/ ADD         R5, R3, #12288              @ 0x3000 
    /*0000cab8*/ LDR         R3, [R5, #180]              @ 0xb4 
    /*0000cabc*/ CMP         R3, #1 
    /*0000cac0*/ BEQ         VencUnRegisterChn_xd640
    VencUnRegisterChn_xcac4:
    /*0000cac4*/ LDR         R7, [SP, #28] 
    /*0000cac8*/ ADD         R1, SP, #44                 @ 0x2c 
    /*0000cacc*/ LDR         R3, [R5, #176]              @ 0xb0 
    /*0000cad0*/ MOV         R8, #0 
    /*0000cad4*/ ADD         R6, R7, #64                 @ 0x40 
    /*0000cad8*/ ADD         R2, R7, #8192               @ 0x2000 
    /*0000cadc*/ ADD         R3, R3, #1 
    /*0000cae0*/ STR         R3, [R5, #176]              @ 0xb0 
    /*0000cae4*/ MOV         R0, R6 
    /*0000cae8*/ MOV         SL, R2 
    /*0000caec*/ STR         R2, [SP, #20] 
    /*0000caf0*/ BL          0x000000000000CAF0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000caf4*/ MOV         R2, #0 
    /*0000caf8*/ MOVW        R3, #12448                  @ 0x30a0 
    /*0000cafc*/ STR         R2, [R5, #168]              @ 0xa8 
    /*0000cb00*/ MOV         R0, R4 
    /*0000cb04*/ MVN         R1, #0 
    /*0000cb08*/ MOV         R9, #0 
    /*0000cb0c*/ STR         R1, [R5, #172]              @ 0xac 
    /*0000cb10*/ MOV         R1, R2 
    /*0000cb14*/ STRD        R8, [R7, R3] 
    /*0000cb18*/ MOV         R3, #1 
    /*0000cb1c*/ STR         R2, [R5, #84]               @ 0x54 
    /*0000cb20*/ STR         R3, [R7, #32] 
    /*0000cb24*/ STR         R3, [R7, #36]               @ 0x24 
    /*0000cb28*/ STR         R3, [R7, #40]               @ 0x28 
    /*0000cb2c*/ STR         R3, [R7, #44]               @ 0x2c 
    /*0000cb30*/ STR         R3, [R7, #48]               @ 0x30 
    /*0000cb34*/ STR         R2, [R5, #180]              @ 0xb4 
    /*0000cb38*/ BL          0x000000000000CB38          @ VencClearAllQueue [R_ARM_CALL: .text+0xb1cc] 
    /*0000cb3c*/ ADD         R1, SP, #44                 @ 0x2c 
    /*0000cb40*/ STR         R0, [SP, #24] 
    /*0000cb44*/ MOV         R0, R6 
    /*0000cb48*/ BL          0x000000000000CB48          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000cb4c*/ LDR         R4, [SL, #3816]             @ 0xee8 
    /*0000cb50*/ CMP         R4, #0 
    /*0000cb54*/ BEQ         VencUnRegisterChn_xd62c
    /*0000cb58*/ LDR         R3, [R4, #28] 
    /*0000cb5c*/ ADD         R7, R4, #28 
    /*0000cb60*/ MOV         R9, #256                    @ 0x100 
    /*0000cb64*/ MOV         R8, #512                    @ 0x200 
    /*0000cb68*/ CMP         R3, R7 
    /*0000cb6c*/ MOVW        R6, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*0000cb70*/ MOVT        R9, #16 
    /*0000cb74*/ MOVT        R8, #32 
    /*0000cb78*/ MOVT        R6, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    /*0000cb7c*/ BEQ         VencUnRegisterChn_xcc1c
    VencUnRegisterChn_xcb80:
    /*0000cb80*/ LDM         R3, {R1, R2} 
    /*0000cb84*/ STR         R2, [R1, #4] 
    /*0000cb88*/ STR         R1, [R2] 
    /*0000cb8c*/ STR         R9, [R3] 
    /*0000cb90*/ STR         R8, [R3, #4] 
    /*0000cb94*/ LDR         R2, [R4, #12] 
    /*0000cb98*/ SUB         R2, R2, #1 
    /*0000cb9c*/ STR         R2, [R4, #12] 
    /*0000cba0*/ LDR         FP, [R3, #-8] 
    /*0000cba4*/ CMP         FP, #0 
    /*0000cba8*/ MOVWEQ      R5, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000cbac*/ LDREQ       SL, [PC, #2808]             @ 0x000000000000d6ac 
    /*0000cbb0*/ MOVTEQ      R5, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000cbb4*/ BEQ         VencUnRegisterChn_xcfec
    VencUnRegisterChn_xcbb8:
    /*0000cbb8*/ LDR         R2, [FP, #-12] 
    /*0000cbbc*/ MOV         R3, #0 
    /*0000cbc0*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000cbc4*/ CMP         R2, R3 
    /*0000cbc8*/ BEQ         VencUnRegisterChn_xcbe8
    /*0000cbcc*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000cbd0*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000cbd4*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000cbd8*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000cbdc*/ MOV         R2, #141                    @ 0x8d 
    /*0000cbe0*/ LDR         R1, [PC, #2760]             @ 0x000000000000d6b0 
    /*0000cbe4*/ BL          0x000000000000CBE4          @ osal_panic [R_ARM_CALL: +0x0] 
    VencUnRegisterChn_xcbe8:
    /*0000cbe8*/ LDR         R2, [R4, #24] 
    /*0000cbec*/ SUB         R1, FP, #8 
    /*0000cbf0*/ ADD         R3, R4, #20 
    /*0000cbf4*/ STR         R1, [R4, #24] 
    /*0000cbf8*/ STR         R3, [FP, #-8] 
    /*0000cbfc*/ STR         R2, [FP, #-4] 
    /*0000cc00*/ STR         R1, [R2] 
    /*0000cc04*/ LDR         R3, [R4, #8] 
    /*0000cc08*/ ADD         R3, R3, #1 
    /*0000cc0c*/ STR         R3, [R4, #8] 
    /*0000cc10*/ LDR         R3, [R4, #28] 
    /*0000cc14*/ CMP         R3, R7 
    /*0000cc18*/ BNE         VencUnRegisterChn_xcb80
    VencUnRegisterChn_xcc1c:
    /*0000cc1c*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000cc20*/ ADD         R6, R4, #36                 @ 0x24 
    /*0000cc24*/ MOV         R9, #256                    @ 0x100 
    /*0000cc28*/ MOV         R8, #512                    @ 0x200 
    /*0000cc2c*/ CMP         R6, R3 
    /*0000cc30*/ MOVW        R7, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*0000cc34*/ MOVT        R9, #16 
    /*0000cc38*/ MOVT        R8, #32 
    /*0000cc3c*/ MOVT        R7, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    /*0000cc40*/ BEQ         VencUnRegisterChn_xcce0
    VencUnRegisterChn_xcc44:
    /*0000cc44*/ LDM         R3, {R1, R2} 
    /*0000cc48*/ STR         R2, [R1, #4] 
    /*0000cc4c*/ STR         R1, [R2] 
    /*0000cc50*/ STR         R9, [R3] 
    /*0000cc54*/ STR         R8, [R3, #4] 
    /*0000cc58*/ LDR         R2, [R4, #16] 
    /*0000cc5c*/ SUB         R2, R2, #1 
    /*0000cc60*/ STR         R2, [R4, #16] 
    /*0000cc64*/ LDR         FP, [R3, #-8] 
    /*0000cc68*/ CMP         FP, #0 
    /*0000cc6c*/ MOVWEQ      R5, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000cc70*/ LDREQ       SL, [PC, #2612]             @ 0x000000000000d6ac 
    /*0000cc74*/ MOVTEQ      R5, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000cc78*/ BEQ         VencUnRegisterChn_xd03c
    VencUnRegisterChn_xcc7c:
    /*0000cc7c*/ LDR         R2, [FP, #-12] 
    /*0000cc80*/ MOV         R3, #0 
    /*0000cc84*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000cc88*/ CMP         R2, R3 
    /*0000cc8c*/ BEQ         VencUnRegisterChn_xccac
    /*0000cc90*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000cc94*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000cc98*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000cc9c*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000cca0*/ MOV         R2, #141                    @ 0x8d 
    /*0000cca4*/ LDR         R1, [PC, #2564]             @ 0x000000000000d6b0 
    /*0000cca8*/ BL          0x000000000000CCA8          @ osal_panic [R_ARM_CALL: +0x0] 
    VencUnRegisterChn_xccac:
    /*0000ccac*/ LDR         R2, [R4, #24] 
    /*0000ccb0*/ SUB         R1, FP, #8 
    /*0000ccb4*/ ADD         R3, R4, #20 
    /*0000ccb8*/ STR         R1, [R4, #24] 
    /*0000ccbc*/ STR         R3, [FP, #-8] 
    /*0000ccc0*/ STR         R2, [FP, #-4] 
    /*0000ccc4*/ STR         R1, [R2] 
    /*0000ccc8*/ LDR         R3, [R4, #8] 
    /*0000cccc*/ ADD         R3, R3, #1 
    /*0000ccd0*/ STR         R3, [R4, #8] 
    /*0000ccd4*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000ccd8*/ CMP         R6, R3 
    /*0000ccdc*/ BNE         VencUnRegisterChn_xcc44
    VencUnRegisterChn_xcce0:
    /*0000cce0*/ LDR         R3, [SP, #20] 
    /*0000cce4*/ LDR         R4, [R3, #3816]             @ 0xee8 
    /*0000cce8*/ CMP         R4, #0 
    /*0000ccec*/ BEQ         VencUnRegisterChn_xd618
    /*0000ccf0*/ LDR         R2, [R4, #28] 
    /*0000ccf4*/ ADD         R3, R4, #28 
    /*0000ccf8*/ CMP         R2, R3 
    /*0000ccfc*/ BEQ         VencUnRegisterChn_xd12c
    VencUnRegisterChn_xcd00:
    /*0000cd00*/ LDR         R3, [SP, #28] 
    /*0000cd04*/ MOVW        R2, #0                      @ .LC317 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x388c] 
    /*0000cd08*/ MOV         R1, #8 
    /*0000cd0c*/ MOVT        R2, #0                      @ .LC317 [R_ARM_MOVT_ABS: .rodata.str1.4+0x388c] 
    /*0000cd10*/ ADD         R3, R3, #11904              @ 0x2e80 
    /*0000cd14*/ MOV         R0, #3 
    /*0000cd18*/ MOV         IP, R3 
    /*0000cd1c*/ ADD         IP, IP, #60                 @ 0x3c 
    /*0000cd20*/ MOVW        R3, #7287                   @ 0x1c77 
    /*0000cd24*/ STR         R3, [SP] 
    /*0000cd28*/ LDR         R3, [PC, #2436]             @ 0x000000000000d6b4 
    /*0000cd2c*/ MOV         R4, IP 
    /*0000cd30*/ STR         IP, [SP, #36]               @ 0x24 
    /*0000cd34*/ BL          0x000000000000CD34          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cd38*/ CMP         R4, #0 
    /*0000cd3c*/ BEQ         VencUnRegisterChn_xcd50
    /*0000cd40*/ LDR         R3, [SP, #20] 
    /*0000cd44*/ LDR         R4, [R3, #3816]             @ 0xee8 
    /*0000cd48*/ CMP         R4, #0 
    /*0000cd4c*/ BNE         VencUnRegisterChn_xd154
    VencUnRegisterChn_xcd50:
    /*0000cd50*/ LDR         R2, [SP, #20] 
    /*0000cd54*/ MOV         R3, #0 
    /*0000cd58*/ STR         R3, [R2, #3816]             @ 0xee8 
    VencUnRegisterChn_xcd5c:
    /*0000cd5c*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000cd60*/ CMP         R3, #0 
    /*0000cd64*/ BEQ         VencUnRegisterChn_xd1d8
    /*0000cd68*/ MOV         R7, #256                    @ 0x100 
    /*0000cd6c*/ MOVW        R8, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*0000cd70*/ MOVT        R7, #16 
    /*0000cd74*/ MOVT        R8, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    /*0000cd78*/ ADD         R3, R3, #28 
    /*0000cd7c*/ STR         R3, [SP, #32] 
    VencUnRegisterChn_xcd80:
    /*0000cd80*/ MOV         R6, #512                    @ 0x200 
    /*0000cd84*/ MOVT        R6, #32 
    /*0000cd88*/ MOV         R3, #0 
    /*0000cd8c*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000cd90*/ STR         R3, [SP, #16] 
    VencUnRegisterChn_xcd94:
    /*0000cd94*/ LDR         R3, [SP, #20] 
    /*0000cd98*/ LDR         R2, [SP, #32] 
    /*0000cd9c*/ LDR         R3, [R3, #3800]             @ 0xed8 
    /*0000cda0*/ CMP         R3, R2 
    /*0000cda4*/ BEQ         VencUnRegisterChn_xd264
    /*0000cda8*/ LDM         R3, {R1, R2} 
    /*0000cdac*/ STR         R2, [R1, #4] 
    /*0000cdb0*/ STR         R1, [R2] 
    /*0000cdb4*/ LDR         R1, [SP, #20] 
    /*0000cdb8*/ STR         R7, [R3] 
    /*0000cdbc*/ STR         R6, [R3, #4] 
    /*0000cdc0*/ LDR         R2, [R1, #3784]             @ 0xec8 
    /*0000cdc4*/ SUB         R2, R2, #1 
    /*0000cdc8*/ STR         R2, [R1, #3784]             @ 0xec8 
    /*0000cdcc*/ LDR         R4, [R3, #-8] 
    /*0000cdd0*/ CMP         R4, #0 
    /*0000cdd4*/ ADDNE       R9, R4, #28 
    /*0000cdd8*/ BEQ         VencUnRegisterChn_xd1b8
    /*0000cddc*/ LDR         R3, [R4, #28] 
    /*0000cde0*/ CMP         R9, R3 
    /*0000cde4*/ BEQ         VencUnRegisterChn_xce80
    VencUnRegisterChn_xcde8:
    /*0000cde8*/ LDM         R3, {R1, R2} 
    /*0000cdec*/ STR         R2, [R1, #4] 
    /*0000cdf0*/ STR         R1, [R2] 
    /*0000cdf4*/ STR         R7, [R3] 
    /*0000cdf8*/ STR         R6, [R3, #4] 
    /*0000cdfc*/ LDR         R2, [R4, #12] 
    /*0000ce00*/ SUB         R2, R2, #1 
    /*0000ce04*/ STR         R2, [R4, #12] 
    /*0000ce08*/ LDR         R5, [R3, #-8] 
    /*0000ce0c*/ CMP         R5, #0 
    /*0000ce10*/ MOVWEQ      SL, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000ce14*/ LDREQ       FP, [PC, #2192]             @ 0x000000000000d6ac 
    /*0000ce18*/ MOVTEQ      SL, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000ce1c*/ BEQ         VencUnRegisterChn_xd08c
    VencUnRegisterChn_xce20:
    /*0000ce20*/ LDR         R3, [R5, #-12] 
    /*0000ce24*/ LDR         R2, [SP, #16] 
    /*0000ce28*/ CMP         R3, R2 
    /*0000ce2c*/ BEQ         VencUnRegisterChn_xce4c
    /*0000ce30*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000ce34*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000ce38*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000ce3c*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000ce40*/ MOV         R2, #141                    @ 0x8d 
    /*0000ce44*/ LDR         R1, [PC, #2148]             @ 0x000000000000d6b0 
    /*0000ce48*/ BL          0x000000000000CE48          @ osal_panic [R_ARM_CALL: +0x0] 
    VencUnRegisterChn_xce4c:
    /*0000ce4c*/ LDR         R2, [R4, #24] 
    /*0000ce50*/ SUB         R1, R5, #8 
    /*0000ce54*/ ADD         R3, R4, #20 
    /*0000ce58*/ STR         R1, [R4, #24] 
    /*0000ce5c*/ STR         R3, [R5, #-8] 
    /*0000ce60*/ STR         R2, [R5, #-4] 
    /*0000ce64*/ STR         R1, [R2] 
    /*0000ce68*/ LDR         R3, [R4, #8] 
    /*0000ce6c*/ ADD         R3, R3, #1 
    /*0000ce70*/ STR         R3, [R4, #8] 
    /*0000ce74*/ LDR         R3, [R4, #28] 
    /*0000ce78*/ CMP         R9, R3 
    /*0000ce7c*/ BNE         VencUnRegisterChn_xcde8
    VencUnRegisterChn_xce80:
    /*0000ce80*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000ce84*/ ADD         R9, R4, #36                 @ 0x24 
    /*0000ce88*/ CMP         R9, R3 
    /*0000ce8c*/ BEQ         VencUnRegisterChn_xcf28
    VencUnRegisterChn_xce90:
    /*0000ce90*/ LDM         R3, {R1, R2} 
    /*0000ce94*/ STR         R2, [R1, #4] 
    /*0000ce98*/ STR         R1, [R2] 
    /*0000ce9c*/ STR         R7, [R3] 
    /*0000cea0*/ STR         R6, [R3, #4] 
    /*0000cea4*/ LDR         R2, [R4, #16] 
    /*0000cea8*/ SUB         R2, R2, #1 
    /*0000ceac*/ STR         R2, [R4, #16] 
    /*0000ceb0*/ LDR         R5, [R3, #-8] 
    /*0000ceb4*/ CMP         R5, #0 
    /*0000ceb8*/ MOVWEQ      SL, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000cebc*/ LDREQ       FP, [PC, #2024]             @ 0x000000000000d6ac 
    /*0000cec0*/ MOVTEQ      SL, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000cec4*/ BEQ         VencUnRegisterChn_xd0dc
    VencUnRegisterChn_xcec8:
    /*0000cec8*/ LDR         R3, [R5, #-12] 
    /*0000cecc*/ LDR         R2, [SP, #16] 
    /*0000ced0*/ CMP         R3, R2 
    /*0000ced4*/ BEQ         VencUnRegisterChn_xcef4
    /*0000ced8*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000cedc*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000cee0*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000cee4*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000cee8*/ MOV         R2, #141                    @ 0x8d 
    /*0000ceec*/ LDR         R1, [PC, #1980]             @ 0x000000000000d6b0 
    /*0000cef0*/ BL          0x000000000000CEF0          @ osal_panic [R_ARM_CALL: +0x0] 
    VencUnRegisterChn_xcef4:
    /*0000cef4*/ LDR         R2, [R4, #24] 
    /*0000cef8*/ SUB         R1, R5, #8 
    /*0000cefc*/ ADD         R3, R4, #20 
    /*0000cf00*/ STR         R1, [R4, #24] 
    /*0000cf04*/ STR         R3, [R5, #-8] 
    /*0000cf08*/ STR         R2, [R5, #-4] 
    /*0000cf0c*/ STR         R1, [R2] 
    /*0000cf10*/ LDR         R3, [R4, #8] 
    /*0000cf14*/ ADD         R3, R3, #1 
    /*0000cf18*/ STR         R3, [R4, #8] 
    /*0000cf1c*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000cf20*/ CMP         R9, R3 
    /*0000cf24*/ BNE         VencUnRegisterChn_xce90
    VencUnRegisterChn_xcf28:
    /*0000cf28*/ CMP         R4, #0 
    /*0000cf2c*/ BEQ         VencUnRegisterChn_xcd94
    /*0000cf30*/ LDR         R2, [R4, #-12] 
    /*0000cf34*/ MOV         R3, #0 
    /*0000cf38*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000cf3c*/ CMP         R2, R3 
    /*0000cf40*/ BEQ         VencUnRegisterChn_xcf60
    /*0000cf44*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000cf48*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000cf4c*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000cf50*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000cf54*/ MOV         R2, #141                    @ 0x8d 
    /*0000cf58*/ LDR         R1, [PC, #1872]             @ 0x000000000000d6b0 
    /*0000cf5c*/ BL          0x000000000000CF5C          @ osal_panic [R_ARM_CALL: +0x0] 
    VencUnRegisterChn_xcf60:
    /*0000cf60*/ LDR         R0, [SP, #20] 
    /*0000cf64*/ SUB         R1, R4, #8 
    /*0000cf68*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000cf6c*/ LDR         R2, [R0, #3796]             @ 0xed4 
    /*0000cf70*/ ADD         R3, R3, #20 
    /*0000cf74*/ STR         R1, [R0, #3796]             @ 0xed4 
    /*0000cf78*/ STR         R3, [R4, #-8] 
    /*0000cf7c*/ STR         R2, [R4, #-4] 
    /*0000cf80*/ STR         R1, [R2] 
    /*0000cf84*/ LDR         R3, [R0, #3780]             @ 0xec4 
    /*0000cf88*/ ADD         R3, R3, #1 
    /*0000cf8c*/ STR         R3, [R0, #3780]             @ 0xec4 
    /*0000cf90*/ B           VencUnRegisterChn_xcd80
    VencUnRegisterChn_xcf94:
    /*0000cf94*/ MOV         R0, R4 
    /*0000cf98*/ BL          0x0000000000000304 
    /*0000cf9c*/ SUBS        R3, R0, #0 
    /*0000cfa0*/ STR         R3, [SP, #24] 
    /*0000cfa4*/ BEQ         VencUnRegisterChn_xc9b0
    VencUnRegisterChn_xcfa8:
    /*0000cfa8*/ LDR         R0, [SP, #24] 
    /*0000cfac*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0000cfb0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencUnRegisterChn_xcfb4:
    /*0000cfb4*/ MOVW        R2, #1002                   @ 0x3ea 
    /*0000cfb8*/ CMP         R3, R2 
    /*0000cfbc*/ BEQ         VencUnRegisterChn_xd5b4
    /*0000cfc0*/ MOVW        R2, #1006                   @ 0x3ee 
    /*0000cfc4*/ CMP         R3, R2 
    /*0000cfc8*/ BNE         VencUnRegisterChn_xd214
    /*0000cfcc*/ MOV         R0, #44                     @ 0x2c 
    /*0000cfd0*/ BL          0x000000000000CFD0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000cfd4*/ LDR         R1, [SP, #24] 
    /*0000cfd8*/ LDR         R3, [R0, #36]               @ 0x24 
    /*0000cfdc*/ MOV         R0, R4 
    /*0000cfe0*/ BLX         R3 
    /*0000cfe4*/ STR         R0, [SP, #24] 
    /*0000cfe8*/ B           VencUnRegisterChn_xca6c
    VencUnRegisterChn_xcfec:
    /*0000cfec*/ MOV         R3, R6 
    /*0000cff0*/ MOVW        R2, #367                    @ 0x16f 
    /*0000cff4*/ MOV         R1, SL 
    /*0000cff8*/ MOV         R0, R5 
    /*0000cffc*/ BL          0x000000000000CFFC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000d000*/ LDR         R3, [R4, #28] 
    /*0000d004*/ CMP         R3, R7 
    /*0000d008*/ BEQ         VencUnRegisterChn_xcc1c
    /*0000d00c*/ LDM         R3, {R1, R2} 
    /*0000d010*/ STR         R2, [R1, #4] 
    /*0000d014*/ STR         R1, [R2] 
    /*0000d018*/ STR         R9, [R3] 
    /*0000d01c*/ STR         R8, [R3, #4] 
    /*0000d020*/ LDR         R2, [R4, #12] 
    /*0000d024*/ SUB         R2, R2, #1 
    /*0000d028*/ STR         R2, [R4, #12] 
    /*0000d02c*/ LDR         FP, [R3, #-8] 
    /*0000d030*/ CMP         FP, #0 
    /*0000d034*/ BNE         VencUnRegisterChn_xcbb8
    /*0000d038*/ B           VencUnRegisterChn_xcfec
    VencUnRegisterChn_xd03c:
    /*0000d03c*/ MOV         R3, R7 
    /*0000d040*/ MOVW        R2, #373                    @ 0x175 
    /*0000d044*/ MOV         R1, SL 
    /*0000d048*/ MOV         R0, R5 
    /*0000d04c*/ BL          0x000000000000D04C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000d050*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000d054*/ CMP         R3, R6 
    /*0000d058*/ BEQ         VencUnRegisterChn_xcce0
    /*0000d05c*/ LDM         R3, {R1, R2} 
    /*0000d060*/ STR         R2, [R1, #4] 
    /*0000d064*/ STR         R1, [R2] 
    /*0000d068*/ STR         R9, [R3] 
    /*0000d06c*/ STR         R8, [R3, #4] 
    /*0000d070*/ LDR         R2, [R4, #16] 
    /*0000d074*/ SUB         R2, R2, #1 
    /*0000d078*/ STR         R2, [R4, #16] 
    /*0000d07c*/ LDR         FP, [R3, #-8] 
    /*0000d080*/ CMP         FP, #0 
    /*0000d084*/ BNE         VencUnRegisterChn_xcc7c
    /*0000d088*/ B           VencUnRegisterChn_xd03c
    VencUnRegisterChn_xd08c:
    /*0000d08c*/ MOV         R3, R8 
    /*0000d090*/ MOVW        R2, #367                    @ 0x16f 
    /*0000d094*/ MOV         R1, FP 
    /*0000d098*/ MOV         R0, SL 
    /*0000d09c*/ BL          0x000000000000D09C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000d0a0*/ LDR         R3, [R4, #28] 
    /*0000d0a4*/ CMP         R3, R9 
    /*0000d0a8*/ BEQ         VencUnRegisterChn_xce80
    /*0000d0ac*/ LDM         R3, {R1, R2} 
    /*0000d0b0*/ STR         R2, [R1, #4] 
    /*0000d0b4*/ STR         R1, [R2] 
    /*0000d0b8*/ STR         R7, [R3] 
    /*0000d0bc*/ STR         R6, [R3, #4] 
    /*0000d0c0*/ LDR         R2, [R4, #12] 
    /*0000d0c4*/ SUB         R2, R2, #1 
    /*0000d0c8*/ STR         R2, [R4, #12] 
    /*0000d0cc*/ LDR         R5, [R3, #-8] 
    /*0000d0d0*/ CMP         R5, #0 
    /*0000d0d4*/ BNE         VencUnRegisterChn_xce20
    /*0000d0d8*/ B           VencUnRegisterChn_xd08c
    VencUnRegisterChn_xd0dc:
    /*0000d0dc*/ MOV         R3, R8 
    /*0000d0e0*/ MOVW        R2, #373                    @ 0x175 
    /*0000d0e4*/ MOV         R1, FP 
    /*0000d0e8*/ MOV         R0, SL 
    /*0000d0ec*/ BL          0x000000000000D0EC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000d0f0*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000d0f4*/ CMP         R9, R3 
    /*0000d0f8*/ BEQ         VencUnRegisterChn_xcf28
    /*0000d0fc*/ LDM         R3, {R1, R2} 
    /*0000d100*/ STR         R2, [R1, #4] 
    /*0000d104*/ STR         R1, [R2] 
    /*0000d108*/ STR         R7, [R3] 
    /*0000d10c*/ STR         R6, [R3, #4] 
    /*0000d110*/ LDR         R2, [R4, #16] 
    /*0000d114*/ SUB         R2, R2, #1 
    /*0000d118*/ STR         R2, [R4, #16] 
    /*0000d11c*/ LDR         R5, [R3, #-8] 
    /*0000d120*/ CMP         R5, #0 
    /*0000d124*/ BNE         VencUnRegisterChn_xcec8
    /*0000d128*/ B           VencUnRegisterChn_xd0dc
    VencUnRegisterChn_xd12c:
    /*0000d12c*/ LDR         R2, [R4, #36]               @ 0x24 
    /*0000d130*/ ADD         R3, R4, #36                 @ 0x24 
    /*0000d134*/ CMP         R2, R3 
    /*0000d138*/ BNE         VencUnRegisterChn_xcd00
    /*0000d13c*/ LDR         R3, [SP, #28] 
    /*0000d140*/ ADD         R3, R3, #11904              @ 0x2e80 
    /*0000d144*/ ADD         R3, R3, #60                 @ 0x3c 
    /*0000d148*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000d14c*/ CMP         R3, #0 
    /*0000d150*/ BEQ         VencUnRegisterChn_xcd50
    VencUnRegisterChn_xd154:
    /*0000d154*/ LDR         R2, [R4, #-12] 
    /*0000d158*/ MOV         R3, #0 
    /*0000d15c*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000d160*/ CMP         R2, R3 
    /*0000d164*/ BEQ         VencUnRegisterChn_xd184
    /*0000d168*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000d16c*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000d170*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000d174*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000d178*/ MOV         R2, #141                    @ 0x8d 
    /*0000d17c*/ LDR         R1, [PC, #1324]             @ 0x000000000000d6b0 
    /*0000d180*/ BL          0x000000000000D180          @ osal_panic [R_ARM_CALL: +0x0] 
    VencUnRegisterChn_xd184:
    /*0000d184*/ LDR         R0, [SP, #20] 
    /*0000d188*/ SUB         R1, R4, #8 
    /*0000d18c*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000d190*/ LDR         R2, [R0, #3796]             @ 0xed4 
    /*0000d194*/ ADD         R3, R3, #20 
    /*0000d198*/ STR         R1, [R0, #3796]             @ 0xed4 
    /*0000d19c*/ STR         R3, [R4, #-8] 
    /*0000d1a0*/ STR         R2, [R4, #-4] 
    /*0000d1a4*/ STR         R1, [R2] 
    /*0000d1a8*/ LDR         R3, [R0, #3780]             @ 0xec4 
    /*0000d1ac*/ ADD         R3, R3, #1 
    /*0000d1b0*/ STR         R3, [R0, #3780]             @ 0xec4 
    /*0000d1b4*/ B           VencUnRegisterChn_xcd50
    VencUnRegisterChn_xd1b8:
    /*0000d1b8*/ MOVW        R3, #0                      @ .LC318 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38d4] 
    /*0000d1bc*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000d1c0*/ MOVT        R3, #0                      @ .LC318 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38d4] 
    /*0000d1c4*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000d1c8*/ MOV         R2, #188                    @ 0xbc 
    /*0000d1cc*/ LDR         R1, [PC, #1252]             @ 0x000000000000d6b8 
    /*0000d1d0*/ BL          0x000000000000D1D0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000d1d4*/ B           VencUnRegisterChn_xcd94
    VencUnRegisterChn_xd1d8:
    /*0000d1d8*/ LDR         IP, [SP, #20] 
    /*0000d1dc*/ MOV         R2, #176                    @ 0xb0 
    /*0000d1e0*/ LDR         R3, [SP, #28] 
    /*0000d1e4*/ ADD         R0, R3, #12160              @ 0x2f80 
    /*0000d1e8*/ MOV         R3, #0 
    /*0000d1ec*/ MOV         R1, R3 
    /*0000d1f0*/ STR         R3, [IP, #3824]             @ 0xef0 
    /*0000d1f4*/ STR         R3, [IP, #3828]             @ 0xef4 
    /*0000d1f8*/ ADD         R0, R0, #12 
    /*0000d1fc*/ STR         R3, [IP, #3832]             @ 0xef8 
    /*0000d200*/ STR         R3, [IP, #3836]             @ 0xefc 
    /*0000d204*/ BL          0x000000000000D204          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000d208*/ LDR         R0, [SP, #24] 
    /*0000d20c*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0000d210*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencUnRegisterChn_xd214:
    /*0000d214*/ MOVW        R3, #32776                  @ 0x8008 
    /*0000d218*/ MOVT        R3, #40968                  @ 0xa008 
    /*0000d21c*/ STR         R3, [SP, #24] 
    VencUnRegisterChn_xd220:
    /*0000d220*/ LDR         R3, [SP, #28] 
    /*0000d224*/ MOVW        R2, #0                      @ .LC328 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b80] 
    /*0000d228*/ LDR         R0, [SP, #24] 
    /*0000d22c*/ MOVT        R2, #0                      @ .LC328 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b80] 
    /*0000d230*/ MOVW        R1, #7230                   @ 0x1c3e 
    /*0000d234*/ STR         R4, [SP, #12] 
    /*0000d238*/ LDR         R3, [R3, #8] 
    /*0000d23c*/ STR         R0, [SP, #4] 
    VencUnRegisterChn_xd240:
    /*0000d240*/ STR         R1, [SP] 
    /*0000d244*/ MOV         R0, #3 
    /*0000d248*/ STR         R3, [SP, #8] 
    /*0000d24c*/ MOV         R1, #8 
    /*0000d250*/ LDR         R3, [PC, #1116]             @ 0x000000000000d6b4 
    /*0000d254*/ BL          0x000000000000D254          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d258*/ LDR         R0, [SP, #24] 
    /*0000d25c*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0000d260*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencUnRegisterChn_xd264:
    /*0000d264*/ MOV         R7, #256                    @ 0x100 
    /*0000d268*/ MOVW        R8, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*0000d26c*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000d270*/ MOVT        R7, #16 
    /*0000d274*/ MOVT        R8, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    /*0000d278*/ ADD         R3, R3, #36                 @ 0x24 
    /*0000d27c*/ STR         R3, [SP, #32] 
    VencUnRegisterChn_xd280:
    /*0000d280*/ MOV         R6, #512                    @ 0x200 
    /*0000d284*/ MOVT        R6, #32 
    /*0000d288*/ MOV         R3, #0 
    /*0000d28c*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000d290*/ STR         R3, [SP, #16] 
    VencUnRegisterChn_xd294:
    /*0000d294*/ LDR         R3, [SP, #20] 
    /*0000d298*/ LDR         R2, [SP, #32] 
    /*0000d29c*/ LDR         R3, [R3, #3808]             @ 0xee0 
    /*0000d2a0*/ CMP         R3, R2 
    /*0000d2a4*/ BEQ         VencUnRegisterChn_xd1d8
    /*0000d2a8*/ LDM         R3, {R1, R2} 
    /*0000d2ac*/ STR         R2, [R1, #4] 
    /*0000d2b0*/ STR         R1, [R2] 
    /*0000d2b4*/ LDR         R1, [SP, #20] 
    /*0000d2b8*/ STR         R7, [R3] 
    /*0000d2bc*/ STR         R6, [R3, #4] 
    /*0000d2c0*/ LDR         R2, [R1, #3788]             @ 0xecc 
    /*0000d2c4*/ SUB         R2, R2, #1 
    /*0000d2c8*/ STR         R2, [R1, #3788]             @ 0xecc 
    /*0000d2cc*/ LDR         R4, [R3, #-8] 
    /*0000d2d0*/ CMP         R4, #0 
    /*0000d2d4*/ ADDNE       R9, R4, #28 
    /*0000d2d8*/ BEQ         VencUnRegisterChn_xd534
    /*0000d2dc*/ LDR         R3, [R4, #28] 
    /*0000d2e0*/ CMP         R9, R3 
    /*0000d2e4*/ BEQ         VencUnRegisterChn_xd380
    VencUnRegisterChn_xd2e8:
    /*0000d2e8*/ LDM         R3, {R1, R2} 
    /*0000d2ec*/ STR         R2, [R1, #4] 
    /*0000d2f0*/ STR         R1, [R2] 
    /*0000d2f4*/ STR         R7, [R3] 
    /*0000d2f8*/ STR         R6, [R3, #4] 
    /*0000d2fc*/ LDR         R2, [R4, #12] 
    /*0000d300*/ SUB         R2, R2, #1 
    /*0000d304*/ STR         R2, [R4, #12] 
    /*0000d308*/ LDR         R5, [R3, #-8] 
    /*0000d30c*/ CMP         R5, #0 
    /*0000d310*/ MOVWEQ      SL, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000d314*/ LDREQ       FP, [PC, #912]              @ 0x000000000000d6ac 
    /*0000d318*/ MOVTEQ      SL, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000d31c*/ BEQ         VencUnRegisterChn_xd494
    VencUnRegisterChn_xd320:
    /*0000d320*/ LDR         R3, [R5, #-12] 
    /*0000d324*/ LDR         R2, [SP, #16] 
    /*0000d328*/ CMP         R3, R2 
    /*0000d32c*/ BEQ         VencUnRegisterChn_xd34c
    /*0000d330*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000d334*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000d338*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000d33c*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000d340*/ MOV         R2, #141                    @ 0x8d 
    /*0000d344*/ LDR         R1, [PC, #868]              @ 0x000000000000d6b0 
    /*0000d348*/ BL          0x000000000000D348          @ osal_panic [R_ARM_CALL: +0x0] 
    VencUnRegisterChn_xd34c:
    /*0000d34c*/ LDR         R2, [R4, #24] 
    /*0000d350*/ SUB         R1, R5, #8 
    /*0000d354*/ ADD         R3, R4, #20 
    /*0000d358*/ STR         R1, [R4, #24] 
    /*0000d35c*/ STR         R3, [R5, #-8] 
    /*0000d360*/ STR         R2, [R5, #-4] 
    /*0000d364*/ STR         R1, [R2] 
    /*0000d368*/ LDR         R3, [R4, #8] 
    /*0000d36c*/ ADD         R3, R3, #1 
    /*0000d370*/ STR         R3, [R4, #8] 
    /*0000d374*/ LDR         R3, [R4, #28] 
    /*0000d378*/ CMP         R9, R3 
    /*0000d37c*/ BNE         VencUnRegisterChn_xd2e8
    VencUnRegisterChn_xd380:
    /*0000d380*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000d384*/ ADD         R9, R4, #36                 @ 0x24 
    /*0000d388*/ CMP         R9, R3 
    /*0000d38c*/ BEQ         VencUnRegisterChn_xd428
    VencUnRegisterChn_xd390:
    /*0000d390*/ LDM         R3, {R1, R2} 
    /*0000d394*/ STR         R2, [R1, #4] 
    /*0000d398*/ STR         R1, [R2] 
    /*0000d39c*/ STR         R7, [R3] 
    /*0000d3a0*/ STR         R6, [R3, #4] 
    /*0000d3a4*/ LDR         R2, [R4, #16] 
    /*0000d3a8*/ SUB         R2, R2, #1 
    /*0000d3ac*/ STR         R2, [R4, #16] 
    /*0000d3b0*/ LDR         R5, [R3, #-8] 
    /*0000d3b4*/ CMP         R5, #0 
    /*0000d3b8*/ MOVWEQ      SL, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000d3bc*/ LDREQ       FP, [PC, #744]              @ 0x000000000000d6ac 
    /*0000d3c0*/ MOVTEQ      SL, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000d3c4*/ BEQ         VencUnRegisterChn_xd4e4
    VencUnRegisterChn_xd3c8:
    /*0000d3c8*/ LDR         R3, [R5, #-12] 
    /*0000d3cc*/ LDR         R2, [SP, #16] 
    /*0000d3d0*/ CMP         R3, R2 
    /*0000d3d4*/ BEQ         VencUnRegisterChn_xd3f4
    /*0000d3d8*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000d3dc*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000d3e0*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000d3e4*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000d3e8*/ MOV         R2, #141                    @ 0x8d 
    /*0000d3ec*/ LDR         R1, [PC, #700]              @ 0x000000000000d6b0 
    /*0000d3f0*/ BL          0x000000000000D3F0          @ osal_panic [R_ARM_CALL: +0x0] 
    VencUnRegisterChn_xd3f4:
    /*0000d3f4*/ LDR         R2, [R4, #24] 
    /*0000d3f8*/ SUB         R1, R5, #8 
    /*0000d3fc*/ ADD         R3, R4, #20 
    /*0000d400*/ STR         R1, [R4, #24] 
    /*0000d404*/ STR         R3, [R5, #-8] 
    /*0000d408*/ STR         R2, [R5, #-4] 
    /*0000d40c*/ STR         R1, [R2] 
    /*0000d410*/ LDR         R3, [R4, #8] 
    /*0000d414*/ ADD         R3, R3, #1 
    /*0000d418*/ STR         R3, [R4, #8] 
    /*0000d41c*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000d420*/ CMP         R9, R3 
    /*0000d424*/ BNE         VencUnRegisterChn_xd390
    VencUnRegisterChn_xd428:
    /*0000d428*/ CMP         R4, #0 
    /*0000d42c*/ BEQ         VencUnRegisterChn_xd294
    /*0000d430*/ LDR         R2, [R4, #-12] 
    /*0000d434*/ MOV         R3, #0 
    /*0000d438*/ MOVT        R3, #13590                  @ 0x3516 
    /*0000d43c*/ CMP         R2, R3 
    /*0000d440*/ BEQ         VencUnRegisterChn_xd460
    /*0000d444*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0000d448*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000d44c*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0000d450*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000d454*/ MOV         R2, #141                    @ 0x8d 
    /*0000d458*/ LDR         R1, [PC, #592]              @ 0x000000000000d6b0 
    /*0000d45c*/ BL          0x000000000000D45C          @ osal_panic [R_ARM_CALL: +0x0] 
    VencUnRegisterChn_xd460:
    /*0000d460*/ LDR         R0, [SP, #20] 
    /*0000d464*/ SUB         R1, R4, #8 
    /*0000d468*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000d46c*/ LDR         R2, [R0, #3796]             @ 0xed4 
    /*0000d470*/ ADD         R3, R3, #20 
    /*0000d474*/ STR         R1, [R0, #3796]             @ 0xed4 
    /*0000d478*/ STR         R3, [R4, #-8] 
    /*0000d47c*/ STR         R2, [R4, #-4] 
    /*0000d480*/ STR         R1, [R2] 
    /*0000d484*/ LDR         R3, [R0, #3780]             @ 0xec4 
    /*0000d488*/ ADD         R3, R3, #1 
    /*0000d48c*/ STR         R3, [R0, #3780]             @ 0xec4 
    /*0000d490*/ B           VencUnRegisterChn_xd280
    VencUnRegisterChn_xd494:
    /*0000d494*/ MOV         R3, R8 
    /*0000d498*/ MOVW        R2, #367                    @ 0x16f 
    /*0000d49c*/ MOV         R1, FP 
    /*0000d4a0*/ MOV         R0, SL 
    /*0000d4a4*/ BL          0x000000000000D4A4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000d4a8*/ LDR         R3, [R4, #28] 
    /*0000d4ac*/ CMP         R3, R9 
    /*0000d4b0*/ BEQ         VencUnRegisterChn_xd380
    /*0000d4b4*/ LDM         R3, {R1, R2} 
    /*0000d4b8*/ STR         R2, [R1, #4] 
    /*0000d4bc*/ STR         R1, [R2] 
    /*0000d4c0*/ STR         R7, [R3] 
    /*0000d4c4*/ STR         R6, [R3, #4] 
    /*0000d4c8*/ LDR         R2, [R4, #12] 
    /*0000d4cc*/ SUB         R2, R2, #1 
    /*0000d4d0*/ STR         R2, [R4, #12] 
    /*0000d4d4*/ LDR         R5, [R3, #-8] 
    /*0000d4d8*/ CMP         R5, #0 
    /*0000d4dc*/ BNE         VencUnRegisterChn_xd320
    /*0000d4e0*/ B           VencUnRegisterChn_xd494
    VencUnRegisterChn_xd4e4:
    /*0000d4e4*/ MOV         R3, R8 
    /*0000d4e8*/ MOVW        R2, #373                    @ 0x175 
    /*0000d4ec*/ MOV         R1, FP 
    /*0000d4f0*/ MOV         R0, SL 
    /*0000d4f4*/ BL          0x000000000000D4F4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000d4f8*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000d4fc*/ CMP         R9, R3 
    /*0000d500*/ BEQ         VencUnRegisterChn_xd428
    /*0000d504*/ LDM         R3, {R1, R2} 
    /*0000d508*/ STR         R2, [R1, #4] 
    /*0000d50c*/ STR         R1, [R2] 
    /*0000d510*/ STR         R7, [R3] 
    /*0000d514*/ STR         R6, [R3, #4] 
    /*0000d518*/ LDR         R2, [R4, #16] 
    /*0000d51c*/ SUB         R2, R2, #1 
    /*0000d520*/ STR         R2, [R4, #16] 
    /*0000d524*/ LDR         R5, [R3, #-8] 
    /*0000d528*/ CMP         R5, #0 
    /*0000d52c*/ BNE         VencUnRegisterChn_xd3c8
    /*0000d530*/ B           VencUnRegisterChn_xd4e4
    VencUnRegisterChn_xd534:
    /*0000d534*/ MOVW        R3, #0                      @ .LC318 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38d4] 
    /*0000d538*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000d53c*/ MOVT        R3, #0                      @ .LC318 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38d4] 
    /*0000d540*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000d544*/ MOV         R2, #195                    @ 0xc3 
    /*0000d548*/ LDR         R1, [PC, #360]              @ 0x000000000000d6b8 
    /*0000d54c*/ BL          0x000000000000D54C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000d550*/ B           VencUnRegisterChn_xd294
    VencUnRegisterChn_xd554:
    /*0000d554*/ LDR         R3, [SP, #28] 
    /*0000d558*/ MOVW        R2, #0                      @ .LC327 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b1c] 
    /*0000d55c*/ STR         R4, [SP, #12] 
    /*0000d560*/ MOVW        R1, #7197                   @ 0x1c1d 
    /*0000d564*/ MOVT        R2, #0                      @ .LC327 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b1c] 
    /*0000d568*/ LDR         R3, [R3, #8] 
    /*0000d56c*/ STR         R0, [SP, #4] 
    /*0000d570*/ B           VencUnRegisterChn_xd240
    VencUnRegisterChn_xd574:
    /*0000d574*/ MOVW        IP, #32777                  @ 0x8009 
    /*0000d578*/ STR         R4, [SP, #8] 
    /*0000d57c*/ MOVW        R1, #7183                   @ 0x1c0f 
    /*0000d580*/ STR         R3, [SP, #4] 
    /*0000d584*/ STR         R1, [SP] 
    /*0000d588*/ MOV         R4, IP 
    /*0000d58c*/ MOVW        R2, #0                      @ .LC326 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ac4] 
    /*0000d590*/ LDR         R3, [PC, #284]              @ 0x000000000000d6b4 
    /*0000d594*/ MOVT        R2, #0                      @ .LC326 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ac4] 
    /*0000d598*/ MOV         R1, #8 
    /*0000d59c*/ MOV         R0, #3 
    /*0000d5a0*/ BL          0x000000000000D5A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d5a4*/ MOV         IP, R4 
    /*0000d5a8*/ MOVT        IP, #40968                  @ 0xa008 
    /*0000d5ac*/ STR         IP, [SP, #24] 
    /*0000d5b0*/ B           VencUnRegisterChn_xcfa8
    VencUnRegisterChn_xd5b4:
    /*0000d5b4*/ MOV         R0, #11 
    /*0000d5b8*/ B           VencUnRegisterChn_xca38
    VencUnRegisterChn_xd5bc:
    /*0000d5bc*/ MOV         R0, #11 
    /*0000d5c0*/ BL          0x000000000000D5C0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000d5c4*/ LDR         R1, [SP, #24] 
    /*0000d5c8*/ LDR         R3, [R0, #8] 
    /*0000d5cc*/ MOV         R0, R4 
    /*0000d5d0*/ BLX         R3 
    /*0000d5d4*/ STR         R0, [SP, #24] 
    /*0000d5d8*/ B           VencUnRegisterChn_xca6c
    VencUnRegisterChn_xd5dc:
    /*0000d5dc*/ MOV         R0, #13 
    /*0000d5e0*/ B           VencUnRegisterChn_xca38
    VencUnRegisterChn_xd5e4:
    /*0000d5e4*/ BL          0x00000000000002C8 
    /*0000d5e8*/ SUBS        R3, R0, #0 
    /*0000d5ec*/ STR         R3, [SP, #24] 
    /*0000d5f0*/ BNE         VencUnRegisterChn_xcfa8
    /*0000d5f4*/ B           VencUnRegisterChn_xc9b8
    VencUnRegisterChn_xd5f8:
    /*0000d5f8*/ LDR         R3, [SP, #28] 
    /*0000d5fc*/ MOVW        R2, #0                      @ .LC329 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd8] 
    /*0000d600*/ STR         R4, [SP, #12] 
    /*0000d604*/ MOVW        R1, #7239                   @ 0x1c47 
    /*0000d608*/ MOVT        R2, #0                      @ .LC329 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd8] 
    /*0000d60c*/ LDR         R3, [R3, #8] 
    /*0000d610*/ STR         R0, [SP, #4] 
    /*0000d614*/ B           VencUnRegisterChn_xd240
    VencUnRegisterChn_xd618:
    /*0000d618*/ LDR         R3, [SP, #28] 
    /*0000d61c*/ ADD         R3, R3, #11904              @ 0x2e80 
    /*0000d620*/ ADD         R3, R3, #60                 @ 0x3c 
    /*0000d624*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000d628*/ B           VencUnRegisterChn_xcd50
    VencUnRegisterChn_xd62c:
    /*0000d62c*/ LDR         R3, [SP, #28] 
    /*0000d630*/ ADD         R3, R3, #11904              @ 0x2e80 
    /*0000d634*/ ADD         R3, R3, #60                 @ 0x3c 
    /*0000d638*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000d63c*/ B           VencUnRegisterChn_xcd5c
    VencUnRegisterChn_xd640:
    /*0000d640*/ MOV         R0, #45                     @ 0x2d 
    /*0000d644*/ BL          0x000000000000D644          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000d648*/ CMP         R0, #0 
    /*0000d64c*/ BEQ         VencUnRegisterChn_xcac4
    /*0000d650*/ MOV         R0, #45                     @ 0x2d 
    /*0000d654*/ BL          0x000000000000D654          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000d658*/ LDR         R2, [SP, #28] 
    /*0000d65c*/ ADD         R3, SP, #48                 @ 0x30 
    /*0000d660*/ MOV         R1, #0 
    /*0000d664*/ LDR         R2, [R2, #56]               @ 0x38 
    /*0000d668*/ LDR         R6, [R0, #8] 
    /*0000d66c*/ MOV         R0, #8 
    /*0000d670*/ BLX         R6 
    /*0000d674*/ B           VencUnRegisterChn_xcac4
    VencUnRegisterChn_xd678:
    /*0000d678*/ MOVW        R3, #7174                   @ 0x1c06 
    /*0000d67c*/ STR         R4, [SP, #4] 
    /*0000d680*/ STR         R3, [SP] 
    /*0000d684*/ MOVW        R2, #0                      @ .LC325 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a7c] 
    /*0000d688*/ LDR         R3, [PC, #36]               @ 0x000000000000d6b4 
    /*0000d68c*/ MOVT        R2, #0                      @ .LC325 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a7c] 
    /*0000d690*/ MOV         R1, #8 
    /*0000d694*/ MOV         R0, #3 
    /*0000d698*/ BL          0x000000000000D698          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d69c*/ MOVW        R3, #32777                  @ 0x8009 
    /*0000d6a0*/ MOVT        R3, #40968                  @ 0xa008 
    /*0000d6a4*/ STR         R3, [SP, #24] 
    /*0000d6a8*/ B           VencUnRegisterChn_xcfa8
    /*0000d6ac*/ ANDEQ       R0, R0, R4, LSL #9 
    /*0000d6b0*/ STRDEQ      R0, [R0], -IP 
    /*0000d6b4*/ ANDEQ       R0, R0, R8, ROR #9 
    /*0000d6b8*/ MULEQ       R0, R8, R4 
FUNC_END VencUnRegisterChn


FUNC_BEGIN VencDestroyChn
    /*0000d6bc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000d6c0*/ SUBS        R2, R0, #0 
    /*0000d6c4*/ SUB         SP, SP, #60                 @ 0x3c 
    /*0000d6c8*/ MOV         R3, #7 
    /*0000d6cc*/ STR         R0, [SP, #36]               @ 0x24 
    /*0000d6d0*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000d6d4*/ BLT         VencDestroyChn_xdc14
    /*0000d6d8*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000d6dc*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000d6e0*/ LDR         R3, [R3] 
    /*0000d6e4*/ CMP         R3, R2 
    /*0000d6e8*/ BLS         VencDestroyChn_xdc14
    VencDestroyChn_xd6ec:
    /*0000d6ec*/ MOV         R0, #4 
    /*0000d6f0*/ BL          0x000000000000D6F0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000d6f4*/ CMP         R0, #0 
    /*0000d6f8*/ BEQ         VencDestroyChn_xe280
    /*0000d6fc*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000d700*/ MOVW        R2, #36240                  @ 0x8d90 
    /*0000d704*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000d708*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000d70c*/ MUL         R3, R2, R3 
    /*0000d710*/ LDR         R2, [R4] 
    /*0000d714*/ MOV         R6, R2 
    /*0000d718*/ STR         R2, [SP, #32] 
    /*0000d71c*/ STR         R3, [SP, #28] 
    /*0000d720*/ MOV         R5, R3 
    /*0000d724*/ ADD         R3, R2, R3 
    /*0000d728*/ STR         R3, [SP, #16] 
    /*0000d72c*/ ADD         R3, R3, #12416              @ 0x3080 
    /*0000d730*/ ADD         R3, R3, #16 
    /*0000d734*/ STR         R3, [SP, #24] 
    /*0000d738*/ MOV         R0, R3 
    /*0000d73c*/ BL          0x000000000000D73C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000d740*/ CMP         R0, #0 
    /*0000d744*/ BNE         VencDestroyChn_xe218
    /*0000d748*/ LDR         R5, [R6, R5] 
    /*0000d74c*/ CMP         R5, #1 
    /*0000d750*/ BNE         VencDestroyChn_xe1d0
    /*0000d754*/ LDR         R3, [SP, #16] 
    /*0000d758*/ LDR         R3, [R3, #16] 
    /*0000d75c*/ CMP         R3, #1 
    /*0000d760*/ BEQ         VencDestroyChn_xe254
    /*0000d764*/ ADD         R1, SP, #40                 @ 0x28 
    /*0000d768*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000d76c*/ BL          0x000000000000D76C          @ VencUnRegisterChn [R_ARM_CALL: .text+0xc988] 
    /*0000d770*/ CMP         R0, #0 
    /*0000d774*/ BNE         VencDestroyChn_xe228
    /*0000d778*/ LDR         R2, [SP, #40]               @ 0x28 
    /*0000d77c*/ MOV         R0, #4 
    /*0000d780*/ MOVW        R3, #0                      @ VENC_DestroyGroupCallBack [R_ARM_MOVW_ABS_NC: .text+0x25a24] 
    /*0000d784*/ MOVT        R3, #0                      @ VENC_DestroyGroupCallBack [R_ARM_MOVT_ABS: .text+0x25a24] 
    /*0000d788*/ STR         R3, [SP, #48]               @ 0x30 
    /*0000d78c*/ STR         R2, [SP, #44]               @ 0x2c 
    /*0000d790*/ BL          0x000000000000D790          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000d794*/ ADD         R1, SP, #44                 @ 0x2c 
    /*0000d798*/ LDR         R3, [R0, #4] 
    /*0000d79c*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000d7a0*/ BLX         R3 
    /*0000d7a4*/ SUBS        R3, R0, #0 
    /*0000d7a8*/ STR         R3, [SP, #12] 
    /*0000d7ac*/ BNE         VencDestroyChn_xe06c
    /*0000d7b0*/ LDR         R2, [SP, #16] 
    /*0000d7b4*/ ADD         R3, R2, #12288              @ 0x3000 
    /*0000d7b8*/ STR         R5, [R2, #24] 
    /*0000d7bc*/ LDR         R2, [R3, #1128]             @ 0x468 
    /*0000d7c0*/ CMP         R2, #1 
    /*0000d7c4*/ BEQ         VencDestroyChn_xe130
    VencDestroyChn_xd7c8:
    /*0000d7c8*/ MOV         R0, #1 
    /*0000d7cc*/ BL          0x000000000000D7CC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000d7d0*/ LDR         R3, [R0, #104]              @ 0x68 
    /*0000d7d4*/ MOV         R0, #1 
    /*0000d7d8*/ BLX         R3 
    /*0000d7dc*/ LDR         R3, [SP, #16] 
    /*0000d7e0*/ LDR         R3, [R3, #3704]             @ 0xe78 
    /*0000d7e4*/ CMP         R0, #0 
    /*0000d7e8*/ BEQ         VencDestroyChn_xdc34
    /*0000d7ec*/ CMP         R3, #6 
    /*0000d7f0*/ BEQ         VencDestroyChn_xe0d4
    VencDestroyChn_xd7f4:
    /*0000d7f4*/ LDR         R3, [SP, #16] 
    /*0000d7f8*/ MOVW        R5, #0                      @ VENC_WaitConditionCallBack0 [R_ARM_MOVW_ABS_NC: .text+0x0] 
    /*0000d7fc*/ MOVT        R5, #0                      @ VENC_WaitConditionCallBack0 [R_ARM_MOVT_ABS: .text+0x0] 
    /*0000d800*/ ADD         R6, R3, #12352              @ 0x3040 
    /*0000d804*/ ADD         R6, R6, #60                 @ 0x3c 
    /*0000d808*/ B           VencDestroyChn_xd818
    VencDestroyChn_xd80c:
    /*0000d80c*/ BL          0x000000000000D80C          @ osal_wait_uninterruptible [R_ARM_CALL: +0x0] 
    /*0000d810*/ CMP         R0, #0 
    /*0000d814*/ BLT         VencDestroyChn_xd840
    VencDestroyChn_xd818:
    /*0000d818*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000d81c*/ MOVW        LR, #36240                  @ 0x8d90 
    /*0000d820*/ LDR         IP, [R4] 
    /*0000d824*/ ADD         R2, SP, #36                 @ 0x24 
    /*0000d828*/ MOV         R1, R5 
    /*0000d82c*/ MOV         R0, R6 
    /*0000d830*/ MLA         R3, LR, R3, IP 
    /*0000d834*/ LDR         R3, [R3, #20] 
    /*0000d838*/ CMP         R3, #1 
    /*0000d83c*/ BNE         VencDestroyChn_xd80c
    VencDestroyChn_xd840:
    /*0000d840*/ LDR         R0, [SP, #16] 
    /*0000d844*/ MOVW        R2, #265                    @ 0x109 
    /*0000d848*/ MOV         R1, #0 
    /*0000d84c*/ LDR         R3, [R0, #4] 
    /*0000d850*/ STR         R1, [R0, #24] 
    /*0000d854*/ CMP         R3, R2 
    /*0000d858*/ BEQ         VencDestroyChn_xe0cc
    /*0000d85c*/ BHI         VencDestroyChn_xe014
    /*0000d860*/ CMP         R3, #26 
    /*0000d864*/ BEQ         VencDestroyChn_xe0b8
    /*0000d868*/ CMP         R3, #96                     @ 0x60 
    /*0000d86c*/ MOVEQ       R0, #10 
    /*0000d870*/ BNE         VencDestroyChn_xe0a0
    VencDestroyChn_xd874:
    /*0000d874*/ BL          0x000000000000D874          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000d878*/ LDR         R3, [R0, #4] 
    /*0000d87c*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000d880*/ BLX         R3 
    /*0000d884*/ SUBS        R3, R0, #0 
    /*0000d888*/ STR         R3, [SP, #12] 
    /*0000d88c*/ MOVEQ       R0, #19 
    /*0000d890*/ BEQ         VencDestroyChn_xe03c
    VencDestroyChn_xd894:
    /*0000d894*/ LDR         R3, [SP, #16] 
    /*0000d898*/ ADD         R3, R3, #11904              @ 0x2e80 
    /*0000d89c*/ ADD         R3, R3, #60                 @ 0x3c 
    /*0000d8a0*/ STR         R3, [SP, #20] 
    /*0000d8a4*/ CMP         R3, #0 
    /*0000d8a8*/ BEQ         VencDestroyChn_xe184
    VencDestroyChn_xd8ac:
    /*0000d8ac*/ LDR         R3, [SP, #16] 
    /*0000d8b0*/ ADD         R8, R3, #8192               @ 0x2000 
    /*0000d8b4*/ LDR         R3, [SP, #20] 
    /*0000d8b8*/ ADD         R9, R3, #28 
    /*0000d8bc*/ LDR         R3, [R8, #3800]             @ 0xed8 
    /*0000d8c0*/ CMP         R3, R9 
    /*0000d8c4*/ BEQ         VencDestroyChn_xda34
    /*0000d8c8*/ MOV         R6, #256                    @ 0x100 
    /*0000d8cc*/ MOV         R5, #512                    @ 0x200 
    /*0000d8d0*/ MOVT        R6, #16 
    /*0000d8d4*/ MOVT        R5, #32 
    /*0000d8d8*/ MOVW        R2, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*0000d8dc*/ MOVT        R2, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    /*0000d8e0*/ STR         R2, [SP, #8] 
    VencDestroyChn_xd8e4:
    /*0000d8e4*/ CMP         R9, R3 
    /*0000d8e8*/ BEQ         VencDestroyChn_xdd34
    /*0000d8ec*/ LDM         R3, {R1, R2} 
    /*0000d8f0*/ STR         R2, [R1, #4] 
    /*0000d8f4*/ STR         R1, [R2] 
    /*0000d8f8*/ STR         R6, [R3] 
    /*0000d8fc*/ STR         R5, [R3, #4] 
    /*0000d900*/ LDR         R2, [R8, #3784]             @ 0xec8 
    /*0000d904*/ SUB         R2, R2, #1 
    /*0000d908*/ STR         R2, [R8, #3784]             @ 0xec8 
    /*0000d90c*/ LDR         R4, [R3, #-8] 
    /*0000d910*/ CMP         R4, #0 
    /*0000d914*/ BEQ         VencDestroyChn_xdd34
    /*0000d918*/ LDR         R3, [R4, #28] 
    /*0000d91c*/ ADD         FP, R4, #28 
    /*0000d920*/ SUB         SL, R4, #16 
    /*0000d924*/ CMP         R3, FP 
    /*0000d928*/ BEQ         VencDestroyChn_xd96c
    VencDestroyChn_xd92c:
    /*0000d92c*/ LDM         R3, {R1, R2} 
    /*0000d930*/ STR         R2, [R1, #4] 
    /*0000d934*/ STR         R1, [R2] 
    /*0000d938*/ STR         R6, [R3] 
    /*0000d93c*/ STR         R5, [R3, #4] 
    /*0000d940*/ LDR         R2, [R4, #12] 
    /*0000d944*/ SUB         R2, R2, #1 
    /*0000d948*/ STR         R2, [R4, #12] 
    /*0000d94c*/ LDR         R7, [R3, #-8] 
    /*0000d950*/ CMP         R7, #0 
    /*0000d954*/ BEQ         VencDestroyChn_xdcc4
    VencDestroyChn_xd958:
    /*0000d958*/ SUB         R0, R7, #16 
    /*0000d95c*/ BL          0x000000000000D95C          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0000d960*/ LDR         R3, [R4, #28] 
    /*0000d964*/ CMP         R3, FP 
    /*0000d968*/ BNE         VencDestroyChn_xd92c
    VencDestroyChn_xd96c:
    /*0000d96c*/ LDR         R3, [R4, #20] 
    /*0000d970*/ ADD         FP, R4, #20 
    /*0000d974*/ CMP         FP, R3 
    /*0000d978*/ BEQ         VencDestroyChn_xd9bc
    VencDestroyChn_xd97c:
    /*0000d97c*/ LDM         R3, {R1, R2} 
    /*0000d980*/ STR         R2, [R1, #4] 
    /*0000d984*/ STR         R1, [R2] 
    /*0000d988*/ STR         R6, [R3] 
    /*0000d98c*/ STR         R5, [R3, #4] 
    /*0000d990*/ LDR         R2, [R4, #8] 
    /*0000d994*/ SUB         R2, R2, #1 
    /*0000d998*/ STR         R2, [R4, #8] 
    /*0000d99c*/ LDR         R7, [R3, #-8] 
    /*0000d9a0*/ CMP         R7, #0 
    /*0000d9a4*/ BEQ         VencDestroyChn_xdce0
    VencDestroyChn_xd9a8:
    /*0000d9a8*/ SUB         R0, R7, #16 
    /*0000d9ac*/ BL          0x000000000000D9AC          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0000d9b0*/ LDR         R3, [R4, #20] 
    /*0000d9b4*/ CMP         R3, FP 
    /*0000d9b8*/ BNE         VencDestroyChn_xd97c
    VencDestroyChn_xd9bc:
    /*0000d9bc*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000d9c0*/ ADD         FP, R4, #36                 @ 0x24 
    /*0000d9c4*/ CMP         FP, R3 
    /*0000d9c8*/ BEQ         VencDestroyChn_xda0c
    VencDestroyChn_xd9cc:
    /*0000d9cc*/ LDM         R3, {R1, R2} 
    /*0000d9d0*/ STR         R2, [R1, #4] 
    /*0000d9d4*/ STR         R1, [R2] 
    /*0000d9d8*/ STR         R6, [R3] 
    /*0000d9dc*/ STR         R5, [R3, #4] 
    /*0000d9e0*/ LDR         R2, [R4, #16] 
    /*0000d9e4*/ SUB         R2, R2, #1 
    /*0000d9e8*/ STR         R2, [R4, #16] 
    /*0000d9ec*/ LDR         R7, [R3, #-8] 
    /*0000d9f0*/ CMP         R7, #0 
    /*0000d9f4*/ BEQ         VencDestroyChn_xdcfc
    VencDestroyChn_xd9f8:
    /*0000d9f8*/ SUB         R0, R7, #16 
    /*0000d9fc*/ BL          0x000000000000D9FC          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0000da00*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000da04*/ CMP         R3, FP 
    /*0000da08*/ BNE         VencDestroyChn_xd9cc
    VencDestroyChn_xda0c:
    /*0000da0c*/ MOV         R3, #0 
    /*0000da10*/ STR         R3, [R4] 
    /*0000da14*/ STR         R3, [R4, #8] 
    /*0000da18*/ STR         R3, [R4, #12] 
    /*0000da1c*/ STR         R3, [R4, #16] 
    VencDestroyChn_xda20:
    /*0000da20*/ MOV         R0, SL 
    /*0000da24*/ BL          0x000000000000DA24          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0000da28*/ LDR         R3, [R8, #3800]             @ 0xed8 
    /*0000da2c*/ CMP         R3, R9 
    /*0000da30*/ BNE         VencDestroyChn_xd8e4
    VencDestroyChn_xda34:
    /*0000da34*/ LDR         R2, [SP, #20] 
    /*0000da38*/ LDR         R3, [R8, #3792]             @ 0xed0 
    /*0000da3c*/ ADD         R2, R2, #20 
    /*0000da40*/ STR         R2, [SP, #8] 
    /*0000da44*/ CMP         R2, R3 
    /*0000da48*/ BEQ         VencDestroyChn_xdd58
    /*0000da4c*/ LDR         R2, [SP, #8] 
    /*0000da50*/ CMP         R3, R2 
    /*0000da54*/ BNE         VencDestroyChn_xda90
    VencDestroyChn_xda58:
    /*0000da58*/ MOVW        R3, #0                      @ .LC318 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38d4] 
    /*0000da5c*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000da60*/ MOVT        R3, #0                      @ .LC318 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38d4] 
    /*0000da64*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000da68*/ MOV         R2, #219                    @ 0xdb 
    /*0000da6c*/ LDR         R1, [PC, #2124]             @ 0x000000000000e2c0 
    /*0000da70*/ BL          0x000000000000DA70          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000da74*/ MVN         R9, #15 
    VencDestroyChn_xda78:
    /*0000da78*/ MOV         R0, R9 
    /*0000da7c*/ BL          0x000000000000DA7C          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0000da80*/ LDR         R3, [R8, #3792]             @ 0xed0 
    /*0000da84*/ LDR         R2, [SP, #8] 
    /*0000da88*/ CMP         R3, R2 
    /*0000da8c*/ BEQ         VencDestroyChn_xdd58
    VencDestroyChn_xda90:
    /*0000da90*/ LDR         R2, [R3, #4] 
    /*0000da94*/ MOV         R7, #256                    @ 0x100 
    /*0000da98*/ LDR         R1, [R3] 
    /*0000da9c*/ MOVT        R7, #16 
    /*0000daa0*/ MOV         R6, #512                    @ 0x200 
    /*0000daa4*/ MOVT        R6, #32 
    /*0000daa8*/ STR         R2, [R1, #4] 
    /*0000daac*/ STR         R1, [R2] 
    /*0000dab0*/ STR         R7, [R3] 
    /*0000dab4*/ STR         R6, [R3, #4] 
    /*0000dab8*/ LDR         R2, [R8, #3780]             @ 0xec4 
    /*0000dabc*/ SUB         R2, R2, #1 
    /*0000dac0*/ STR         R2, [R8, #3780]             @ 0xec4 
    /*0000dac4*/ LDR         R4, [R3, #-8] 
    /*0000dac8*/ CMP         R4, #0 
    /*0000dacc*/ BEQ         VencDestroyChn_xda58
    /*0000dad0*/ LDR         R3, [R4, #28] 
    /*0000dad4*/ ADD         SL, R4, #28 
    /*0000dad8*/ SUB         R9, R4, #16 
    /*0000dadc*/ CMP         SL, R3 
    /*0000dae0*/ MOVWNE      FP, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*0000dae4*/ MOVTNE      FP, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    /*0000dae8*/ BEQ         VencDestroyChn_xdb2c
    VencDestroyChn_xdaec:
    /*0000daec*/ LDM         R3, {R1, R2} 
    /*0000daf0*/ STR         R2, [R1, #4] 
    /*0000daf4*/ STR         R1, [R2] 
    /*0000daf8*/ STR         R7, [R3] 
    /*0000dafc*/ STR         R6, [R3, #4] 
    /*0000db00*/ LDR         R2, [R4, #12] 
    /*0000db04*/ SUB         R2, R2, #1 
    /*0000db08*/ STR         R2, [R4, #12] 
    /*0000db0c*/ LDR         R5, [R3, #-8] 
    /*0000db10*/ CMP         R5, #0 
    /*0000db14*/ BEQ         VencDestroyChn_xdd18
    VencDestroyChn_xdb18:
    /*0000db18*/ SUB         R0, R5, #16 
    /*0000db1c*/ BL          0x000000000000DB1C          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0000db20*/ LDR         R3, [R4, #28] 
    /*0000db24*/ CMP         SL, R3 
    /*0000db28*/ BNE         VencDestroyChn_xdaec
    VencDestroyChn_xdb2c:
    /*0000db2c*/ LDR         R3, [R4, #20] 
    /*0000db30*/ ADD         R6, R4, #20 
    /*0000db34*/ CMP         R6, R3 
    /*0000db38*/ BEQ         VencDestroyChn_xdb94
    /*0000db3c*/ MOV         SL, #256                    @ 0x100 
    /*0000db40*/ MOV         R7, #512                    @ 0x200 
    /*0000db44*/ MOVW        FP, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*0000db48*/ MOVT        SL, #16 
    /*0000db4c*/ MOVT        R7, #32 
    /*0000db50*/ MOVT        FP, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    VencDestroyChn_xdb54:
    /*0000db54*/ LDM         R3, {R1, R2} 
    /*0000db58*/ STR         R2, [R1, #4] 
    /*0000db5c*/ STR         R1, [R2] 
    /*0000db60*/ STR         SL, [R3] 
    /*0000db64*/ STR         R7, [R3, #4] 
    /*0000db68*/ LDR         R2, [R4, #8] 
    /*0000db6c*/ SUB         R2, R2, #1 
    /*0000db70*/ STR         R2, [R4, #8] 
    /*0000db74*/ LDR         R5, [R3, #-8] 
    /*0000db78*/ CMP         R5, #0 
    /*0000db7c*/ BEQ         VencDestroyChn_xdc8c
    VencDestroyChn_xdb80:
    /*0000db80*/ SUB         R0, R5, #16 
    /*0000db84*/ BL          0x000000000000DB84          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0000db88*/ LDR         R3, [R4, #20] 
    /*0000db8c*/ CMP         R6, R3 
    /*0000db90*/ BNE         VencDestroyChn_xdb54
    VencDestroyChn_xdb94:
    /*0000db94*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000db98*/ ADD         R6, R4, #36                 @ 0x24 
    /*0000db9c*/ CMP         R6, R3 
    /*0000dba0*/ BEQ         VencDestroyChn_xdbfc
    /*0000dba4*/ MOV         SL, #256                    @ 0x100 
    /*0000dba8*/ MOV         R7, #512                    @ 0x200 
    /*0000dbac*/ MOVW        FP, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*0000dbb0*/ MOVT        SL, #16 
    /*0000dbb4*/ MOVT        R7, #32 
    /*0000dbb8*/ MOVT        FP, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    VencDestroyChn_xdbbc:
    /*0000dbbc*/ LDM         R3, {R1, R2} 
    /*0000dbc0*/ STR         R2, [R1, #4] 
    /*0000dbc4*/ STR         R1, [R2] 
    /*0000dbc8*/ STR         SL, [R3] 
    /*0000dbcc*/ STR         R7, [R3, #4] 
    /*0000dbd0*/ LDR         R2, [R4, #16] 
    /*0000dbd4*/ SUB         R2, R2, #1 
    /*0000dbd8*/ STR         R2, [R4, #16] 
    /*0000dbdc*/ LDR         R5, [R3, #-8] 
    /*0000dbe0*/ CMP         R5, #0 
    /*0000dbe4*/ BEQ         VencDestroyChn_xdca8
    VencDestroyChn_xdbe8:
    /*0000dbe8*/ SUB         R0, R5, #16 
    /*0000dbec*/ BL          0x000000000000DBEC          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0000dbf0*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000dbf4*/ CMP         R6, R3 
    /*0000dbf8*/ BNE         VencDestroyChn_xdbbc
    VencDestroyChn_xdbfc:
    /*0000dbfc*/ MOV         R3, #0 
    /*0000dc00*/ STR         R3, [R4] 
    /*0000dc04*/ STR         R3, [R4, #8] 
    /*0000dc08*/ STR         R3, [R4, #12] 
    /*0000dc0c*/ STR         R3, [R4, #16] 
    /*0000dc10*/ B           VencDestroyChn_xda78
    VencDestroyChn_xdc14:
    /*0000dc14*/ MOV         R0, R2 
    /*0000dc18*/ BL          0x0000000000000304 
    /*0000dc1c*/ SUBS        R3, R0, #0 
    /*0000dc20*/ STR         R3, [SP, #12] 
    /*0000dc24*/ BEQ         VencDestroyChn_xd6ec
    VencDestroyChn_xdc28:
    /*0000dc28*/ LDR         R0, [SP, #12] 
    /*0000dc2c*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0000dc30*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencDestroyChn_xdc34:
    /*0000dc34*/ CMP         R3, #6 
    /*0000dc38*/ BEQ         VencDestroyChn_xe10c
    VencDestroyChn_xdc3c:
    /*0000dc3c*/ LDR         R3, [SP, #16] 
    /*0000dc40*/ MOVW        R5, #0                      @ VENC_WaitConditionCallBack0 [R_ARM_MOVW_ABS_NC: .text+0x0] 
    /*0000dc44*/ MOVT        R5, #0                      @ VENC_WaitConditionCallBack0 [R_ARM_MOVT_ABS: .text+0x0] 
    /*0000dc48*/ ADD         R6, R3, #12352              @ 0x3040 
    /*0000dc4c*/ ADD         R6, R6, #60                 @ 0x3c 
    /*0000dc50*/ B           VencDestroyChn_xdc60
    VencDestroyChn_xdc54:
    /*0000dc54*/ BL          0x000000000000DC54          @ osal_wait_uninterruptible [R_ARM_CALL: +0x0] 
    /*0000dc58*/ CMP         R0, #0 
    /*0000dc5c*/ BLT         VencDestroyChn_xd840
    VencDestroyChn_xdc60:
    /*0000dc60*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000dc64*/ MOVW        LR, #36240                  @ 0x8d90 
    /*0000dc68*/ LDR         IP, [R4] 
    /*0000dc6c*/ ADD         R2, SP, #36                 @ 0x24 
    /*0000dc70*/ MOV         R1, R5 
    /*0000dc74*/ MOV         R0, R6 
    /*0000dc78*/ MLA         R3, LR, R3, IP 
    /*0000dc7c*/ LDR         R3, [R3, #20] 
    /*0000dc80*/ CMP         R3, #1 
    /*0000dc84*/ BNE         VencDestroyChn_xdc54
    /*0000dc88*/ B           VencDestroyChn_xd840
    VencDestroyChn_xdc8c:
    /*0000dc8c*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000dc90*/ MOV         R3, FP 
    /*0000dc94*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000dc98*/ MOVW        R2, #394                    @ 0x18a 
    /*0000dc9c*/ LDR         R1, [PC, #1568]             @ 0x000000000000e2c4 
    /*0000dca0*/ BL          0x000000000000DCA0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000dca4*/ B           VencDestroyChn_xdb80
    VencDestroyChn_xdca8:
    /*0000dca8*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000dcac*/ MOV         R3, FP 
    /*0000dcb0*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000dcb4*/ MOV         R2, #400                    @ 0x190 
    /*0000dcb8*/ LDR         R1, [PC, #1540]             @ 0x000000000000e2c4 
    /*0000dcbc*/ BL          0x000000000000DCBC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000dcc0*/ B           VencDestroyChn_xdbe8
    VencDestroyChn_xdcc4:
    /*0000dcc4*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000dcc8*/ LDR         R3, [SP, #8] 
    /*0000dccc*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000dcd0*/ MOV         R2, #388                    @ 0x184 
    /*0000dcd4*/ LDR         R1, [PC, #1512]             @ 0x000000000000e2c4 
    /*0000dcd8*/ BL          0x000000000000DCD8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000dcdc*/ B           VencDestroyChn_xd958
    VencDestroyChn_xdce0:
    /*0000dce0*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000dce4*/ LDR         R3, [SP, #8] 
    /*0000dce8*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000dcec*/ MOVW        R2, #394                    @ 0x18a 
    /*0000dcf0*/ LDR         R1, [PC, #1484]             @ 0x000000000000e2c4 
    /*0000dcf4*/ BL          0x000000000000DCF4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000dcf8*/ B           VencDestroyChn_xd9a8
    VencDestroyChn_xdcfc:
    /*0000dcfc*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000dd00*/ LDR         R3, [SP, #8] 
    /*0000dd04*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000dd08*/ MOV         R2, #400                    @ 0x190 
    /*0000dd0c*/ LDR         R1, [PC, #1456]             @ 0x000000000000e2c4 
    /*0000dd10*/ BL          0x000000000000DD10          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000dd14*/ B           VencDestroyChn_xd9f8
    VencDestroyChn_xdd18:
    /*0000dd18*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000dd1c*/ MOV         R3, FP 
    /*0000dd20*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000dd24*/ MOV         R2, #388                    @ 0x184 
    /*0000dd28*/ LDR         R1, [PC, #1428]             @ 0x000000000000e2c4 
    /*0000dd2c*/ BL          0x000000000000DD2C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000dd30*/ B           VencDestroyChn_xdb18
    VencDestroyChn_xdd34:
    /*0000dd34*/ MOVW        R3, #0                      @ .LC318 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38d4] 
    /*0000dd38*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000dd3c*/ MOVT        R3, #0                      @ .LC318 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38d4] 
    /*0000dd40*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000dd44*/ MOV         R2, #212                    @ 0xd4 
    /*0000dd48*/ LDR         R1, [PC, #1392]             @ 0x000000000000e2c0 
    /*0000dd4c*/ BL          0x000000000000DD4C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000dd50*/ MVN         SL, #15 
    /*0000dd54*/ B           VencDestroyChn_xda20
    VencDestroyChn_xdd58:
    /*0000dd58*/ LDR         R2, [SP, #20] 
    /*0000dd5c*/ LDR         R3, [R8, #3808]             @ 0xee0 
    /*0000dd60*/ ADD         R2, R2, #36                 @ 0x24 
    /*0000dd64*/ STR         R2, [SP, #8] 
    /*0000dd68*/ CMP         R2, R3 
    /*0000dd6c*/ BEQ         VencDestroyChn_xdf8c
    /*0000dd70*/ LDR         R2, [SP, #8] 
    /*0000dd74*/ CMP         R3, R2 
    /*0000dd78*/ BNE         VencDestroyChn_xddb4
    VencDestroyChn_xdd7c:
    /*0000dd7c*/ MOVW        R3, #0                      @ .LC318 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38d4] 
    /*0000dd80*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000dd84*/ MOVT        R3, #0                      @ .LC318 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38d4] 
    /*0000dd88*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000dd8c*/ MOV         R2, #226                    @ 0xe2 
    /*0000dd90*/ LDR         R1, [PC, #1320]             @ 0x000000000000e2c0 
    /*0000dd94*/ BL          0x000000000000DD94          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000dd98*/ MVN         R9, #15 
    VencDestroyChn_xdd9c:
    /*0000dd9c*/ MOV         R0, R9 
    /*0000dda0*/ BL          0x000000000000DDA0          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0000dda4*/ LDR         R3, [R8, #3808]             @ 0xee0 
    /*0000dda8*/ LDR         R2, [SP, #8] 
    /*0000ddac*/ CMP         R3, R2 
    /*0000ddb0*/ BEQ         VencDestroyChn_xdf8c
    VencDestroyChn_xddb4:
    /*0000ddb4*/ LDR         R2, [R3, #4] 
    /*0000ddb8*/ MOV         R7, #256                    @ 0x100 
    /*0000ddbc*/ LDR         R1, [R3] 
    /*0000ddc0*/ MOVT        R7, #16 
    /*0000ddc4*/ MOV         R6, #512                    @ 0x200 
    /*0000ddc8*/ MOVT        R6, #32 
    /*0000ddcc*/ STR         R2, [R1, #4] 
    /*0000ddd0*/ STR         R1, [R2] 
    /*0000ddd4*/ STR         R7, [R3] 
    /*0000ddd8*/ STR         R6, [R3, #4] 
    /*0000dddc*/ LDR         R2, [R8, #3788]             @ 0xecc 
    /*0000dde0*/ SUB         R2, R2, #1 
    /*0000dde4*/ STR         R2, [R8, #3788]             @ 0xecc 
    /*0000dde8*/ LDR         R4, [R3, #-8] 
    /*0000ddec*/ CMP         R4, #0 
    /*0000ddf0*/ BEQ         VencDestroyChn_xdd7c
    /*0000ddf4*/ LDR         R3, [R4, #28] 
    /*0000ddf8*/ ADD         SL, R4, #28 
    /*0000ddfc*/ SUB         R9, R4, #16 
    /*0000de00*/ CMP         R3, SL 
    /*0000de04*/ MOVWNE      FP, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*0000de08*/ MOVTNE      FP, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    /*0000de0c*/ BEQ         VencDestroyChn_xde50
    VencDestroyChn_xde10:
    /*0000de10*/ LDM         R3, {R1, R2} 
    /*0000de14*/ STR         R2, [R1, #4] 
    /*0000de18*/ STR         R1, [R2] 
    /*0000de1c*/ STR         R7, [R3] 
    /*0000de20*/ STR         R6, [R3, #4] 
    /*0000de24*/ LDR         R2, [R4, #12] 
    /*0000de28*/ SUB         R2, R2, #1 
    /*0000de2c*/ STR         R2, [R4, #12] 
    /*0000de30*/ LDR         R5, [R3, #-8] 
    /*0000de34*/ CMP         R5, #0 
    /*0000de38*/ BEQ         VencDestroyChn_xdf54
    VencDestroyChn_xde3c:
    /*0000de3c*/ SUB         R0, R5, #16 
    /*0000de40*/ BL          0x000000000000DE40          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0000de44*/ LDR         R3, [R4, #28] 
    /*0000de48*/ CMP         R3, SL 
    /*0000de4c*/ BNE         VencDestroyChn_xde10
    VencDestroyChn_xde50:
    /*0000de50*/ LDR         R3, [R4, #20] 
    /*0000de54*/ ADD         R6, R4, #20 
    /*0000de58*/ CMP         R3, R6 
    /*0000de5c*/ BEQ         VencDestroyChn_xdeb8
    /*0000de60*/ MOV         SL, #256                    @ 0x100 
    /*0000de64*/ MOV         R7, #512                    @ 0x200 
    /*0000de68*/ MOVW        FP, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*0000de6c*/ MOVT        SL, #16 
    /*0000de70*/ MOVT        R7, #32 
    /*0000de74*/ MOVT        FP, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    VencDestroyChn_xde78:
    /*0000de78*/ LDM         R3, {R1, R2} 
    /*0000de7c*/ STR         R2, [R1, #4] 
    /*0000de80*/ STR         R1, [R2] 
    /*0000de84*/ STR         SL, [R3] 
    /*0000de88*/ STR         R7, [R3, #4] 
    /*0000de8c*/ LDR         R2, [R4, #8] 
    /*0000de90*/ SUB         R2, R2, #1 
    /*0000de94*/ STR         R2, [R4, #8] 
    /*0000de98*/ LDR         R5, [R3, #-8] 
    /*0000de9c*/ CMP         R5, #0 
    /*0000dea0*/ BEQ         VencDestroyChn_xdf70
    VencDestroyChn_xdea4:
    /*0000dea4*/ SUB         R0, R5, #16 
    /*0000dea8*/ BL          0x000000000000DEA8          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0000deac*/ LDR         R3, [R4, #20] 
    /*0000deb0*/ CMP         R3, R6 
    /*0000deb4*/ BNE         VencDestroyChn_xde78
    VencDestroyChn_xdeb8:
    /*0000deb8*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000debc*/ ADD         R6, R4, #36                 @ 0x24 
    /*0000dec0*/ CMP         R3, R6 
    /*0000dec4*/ BEQ         VencDestroyChn_xdf20
    /*0000dec8*/ MOV         SL, #256                    @ 0x100 
    /*0000decc*/ MOV         R7, #512                    @ 0x200 
    /*0000ded0*/ MOVW        FP, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*0000ded4*/ MOVT        SL, #16 
    /*0000ded8*/ MOVT        R7, #32 
    /*0000dedc*/ MOVT        FP, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    VencDestroyChn_xdee0:
    /*0000dee0*/ LDM         R3, {R1, R2} 
    /*0000dee4*/ STR         R2, [R1, #4] 
    /*0000dee8*/ STR         R1, [R2] 
    /*0000deec*/ STR         SL, [R3] 
    /*0000def0*/ STR         R7, [R3, #4] 
    /*0000def4*/ LDR         R2, [R4, #16] 
    /*0000def8*/ SUB         R2, R2, #1 
    /*0000defc*/ STR         R2, [R4, #16] 
    /*0000df00*/ LDR         R5, [R3, #-8] 
    /*0000df04*/ CMP         R5, #0 
    /*0000df08*/ BEQ         VencDestroyChn_xdf38
    VencDestroyChn_xdf0c:
    /*0000df0c*/ SUB         R0, R5, #16 
    /*0000df10*/ BL          0x000000000000DF10          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0000df14*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0000df18*/ CMP         R3, R6 
    /*0000df1c*/ BNE         VencDestroyChn_xdee0
    VencDestroyChn_xdf20:
    /*0000df20*/ MOV         R3, #0 
    /*0000df24*/ STR         R3, [R4] 
    /*0000df28*/ STR         R3, [R4, #8] 
    /*0000df2c*/ STR         R3, [R4, #12] 
    /*0000df30*/ STR         R3, [R4, #16] 
    /*0000df34*/ B           VencDestroyChn_xdd9c
    VencDestroyChn_xdf38:
    /*0000df38*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000df3c*/ MOV         R3, FP 
    /*0000df40*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000df44*/ MOV         R2, #400                    @ 0x190 
    /*0000df48*/ LDR         R1, [PC, #884]              @ 0x000000000000e2c4 
    /*0000df4c*/ BL          0x000000000000DF4C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000df50*/ B           VencDestroyChn_xdf0c
    VencDestroyChn_xdf54:
    /*0000df54*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000df58*/ MOV         R3, FP 
    /*0000df5c*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000df60*/ MOV         R2, #388                    @ 0x184 
    /*0000df64*/ LDR         R1, [PC, #856]              @ 0x000000000000e2c4 
    /*0000df68*/ BL          0x000000000000DF68          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000df6c*/ B           VencDestroyChn_xde3c
    VencDestroyChn_xdf70:
    /*0000df70*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0000df74*/ MOV         R3, FP 
    /*0000df78*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0000df7c*/ MOVW        R2, #394                    @ 0x18a 
    /*0000df80*/ LDR         R1, [PC, #828]              @ 0x000000000000e2c4 
    /*0000df84*/ BL          0x000000000000DF84          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000df88*/ B           VencDestroyChn_xdea4
    VencDestroyChn_xdf8c:
    /*0000df8c*/ MOV         R3, #0 
    /*0000df90*/ STR         R3, [R8, #3772]             @ 0xebc 
    /*0000df94*/ STR         R3, [R8, #3780]             @ 0xec4 
    /*0000df98*/ STR         R3, [R8, #3784]             @ 0xec8 
    /*0000df9c*/ STR         R3, [R8, #3788]             @ 0xecc 
    VencDestroyChn_xdfa0:
    /*0000dfa0*/ LDR         R4, [SP, #16] 
    /*0000dfa4*/ MOV         R2, #88                     @ 0x58 
    /*0000dfa8*/ MOV         R1, #0 
    /*0000dfac*/ ADD         R0, R4, #11968              @ 0x2ec0 
    /*0000dfb0*/ ADD         R0, R0, #48                 @ 0x30 
    /*0000dfb4*/ BL          0x000000000000DFB4          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000dfb8*/ LDR         R2, [SP, #32] 
    /*0000dfbc*/ LDR         R1, [SP, #28] 
    /*0000dfc0*/ ADD         R0, R4, #12352              @ 0x3040 
    /*0000dfc4*/ MOV         R3, #0 
    /*0000dfc8*/ ADD         R0, R0, #56                 @ 0x38 
    /*0000dfcc*/ STR         R3, [R2, R1] 
    /*0000dfd0*/ BL          0x000000000000DFD0          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0000dfd4*/ ADD         R0, R4, #12352              @ 0x3040 
    /*0000dfd8*/ ADD         R0, R0, #52                 @ 0x34 
    /*0000dfdc*/ BL          0x000000000000DFDC          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0000dfe0*/ LDR         R0, [SP, #24] 
    /*0000dfe4*/ BL          0x000000000000DFE4          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000dfe8*/ LDR         R3, [SP, #12] 
    /*0000dfec*/ CMP         R3, #0 
    /*0000dff0*/ BEQ         VencDestroyChn_xdc28
    VencDestroyChn_xdff4:
    /*0000dff4*/ LDR         R3, [SP, #12] 
    /*0000dff8*/ BIC         R3, R3, #267386880          @ 0xff00000 
    /*0000dffc*/ BIC         R3, R3, #983040             @ 0xf0000 
    /*0000e000*/ ORR         R3, R3, #524288             @ 0x80000 
    /*0000e004*/ STR         R3, [SP, #12] 
    /*0000e008*/ LDR         R0, [SP, #12] 
    /*0000e00c*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0000e010*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencDestroyChn_xe014:
    /*0000e014*/ MOVW        R2, #1002                   @ 0x3ea 
    /*0000e018*/ CMP         R3, R2 
    /*0000e01c*/ BEQ         VencDestroyChn_xe0b0
    /*0000e020*/ MOVW        R2, #1006                   @ 0x3ee 
    /*0000e024*/ CMP         R3, R2 
    /*0000e028*/ BNE         VencDestroyChn_xe0a0
    /*0000e02c*/ LDR         R3, [SP, #12] 
    /*0000e030*/ CMP         R3, #0 
    /*0000e034*/ BNE         VencDestroyChn_xd894
    /*0000e038*/ MOV         R0, #44                     @ 0x2c 
    VencDestroyChn_xe03c:
    /*0000e03c*/ BL          0x000000000000E03C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000e040*/ LDR         R3, [R0, #4] 
    /*0000e044*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000e048*/ BLX         R3 
    /*0000e04c*/ LDR         R3, [SP, #16] 
    /*0000e050*/ ADD         R3, R3, #11904              @ 0x2e80 
    /*0000e054*/ ADD         R3, R3, #60                 @ 0x3c 
    /*0000e058*/ STR         R3, [SP, #20] 
    /*0000e05c*/ CMP         R3, #0 
    /*0000e060*/ STR         R0, [SP, #12] 
    /*0000e064*/ BNE         VencDestroyChn_xd8ac
    /*0000e068*/ B           VencDestroyChn_xdfa0
    VencDestroyChn_xe06c:
    /*0000e06c*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0000e070*/ MOVW        R3, #5507                   @ 0x1583 
    /*0000e074*/ MOVW        R2, #0                      @ .LC332 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3cc8] 
    /*0000e078*/ STR         R3, [SP] 
    /*0000e07c*/ MOVT        R2, #0                      @ .LC332 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3cc8] 
    /*0000e080*/ LDR         R3, [PC, #576]              @ 0x000000000000e2c8 
    /*0000e084*/ STR         R1, [SP, #4] 
    /*0000e088*/ MOV         R0, #3 
    /*0000e08c*/ MOV         R1, #8 
    /*0000e090*/ BL          0x000000000000E090          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e094*/ LDR         R0, [SP, #24] 
    /*0000e098*/ BL          0x000000000000E098          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000e09c*/ B           VencDestroyChn_xdc28
    VencDestroyChn_xe0a0:
    /*0000e0a0*/ MOVW        R3, #32776                  @ 0x8008 
    /*0000e0a4*/ MOVT        R3, #40968                  @ 0xa008 
    /*0000e0a8*/ STR         R3, [SP, #12] 
    /*0000e0ac*/ B           VencDestroyChn_xd894
    VencDestroyChn_xe0b0:
    /*0000e0b0*/ MOV         R0, #11 
    /*0000e0b4*/ B           VencDestroyChn_xd874
    VencDestroyChn_xe0b8:
    /*0000e0b8*/ LDR         R3, [SP, #12] 
    /*0000e0bc*/ CMP         R3, #0 
    /*0000e0c0*/ MOVEQ       R0, #11 
    /*0000e0c4*/ BNE         VencDestroyChn_xd894
    /*0000e0c8*/ B           VencDestroyChn_xe03c
    VencDestroyChn_xe0cc:
    /*0000e0cc*/ MOV         R0, #13 
    /*0000e0d0*/ B           VencDestroyChn_xd874
    VencDestroyChn_xe0d4:
    /*0000e0d4*/ LDR         R3, [SP, #16] 
    /*0000e0d8*/ ADD         R3, R3, #4096               @ 0x1000 
    /*0000e0dc*/ LDR         R3, [R3, #2336]             @ 0x920 
    /*0000e0e0*/ CMP         R3, #6 
    /*0000e0e4*/ BNE         VencDestroyChn_xd7f4
    /*0000e0e8*/ LDR         R3, [SP, #16] 
    /*0000e0ec*/ ADD         R3, R3, #8192               @ 0x2000 
    /*0000e0f0*/ LDR         R2, [R3, #1016]             @ 0x3f8 
    /*0000e0f4*/ CMP         R2, #6 
    /*0000e0f8*/ BNE         VencDestroyChn_xd7f4
    /*0000e0fc*/ LDR         R3, [R3, #3744]             @ 0xea0 
    /*0000e100*/ CMP         R3, #6 
    /*0000e104*/ BNE         VencDestroyChn_xd7f4
    /*0000e108*/ B           VencDestroyChn_xd840
    VencDestroyChn_xe10c:
    /*0000e10c*/ LDR         R3, [SP, #16] 
    /*0000e110*/ ADD         R3, R3, #8192               @ 0x2000 
    /*0000e114*/ LDR         R2, [R3, #1016]             @ 0x3f8 
    /*0000e118*/ CMP         R2, #6 
    /*0000e11c*/ BNE         VencDestroyChn_xdc3c
    /*0000e120*/ LDR         R3, [R3, #3744]             @ 0xea0 
    /*0000e124*/ CMP         R3, #6 
    /*0000e128*/ BNE         VencDestroyChn_xdc3c
    /*0000e12c*/ B           VencDestroyChn_xd840
    VencDestroyChn_xe130:
    /*0000e130*/ LDR         R2, [SP, #16] 
    /*0000e134*/ ADD         R0, R2, #13376              @ 0x3440 
    /*0000e138*/ LDR         R2, [SP, #12] 
    /*0000e13c*/ ADD         R0, R0, #48                 @ 0x30 
    /*0000e140*/ STR         R2, [R3, #1108]             @ 0x454 
    /*0000e144*/ STR         R2, [R3, #1128]             @ 0x468 
    /*0000e148*/ BL          0x000000000000E148          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*0000e14c*/ SUBS        R3, R0, #0 
    /*0000e150*/ STR         R3, [SP, #12] 
    /*0000e154*/ BEQ         VencDestroyChn_xd7c8
    /*0000e158*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0000e15c*/ MOVW        R3, #5521                   @ 0x1591 
    /*0000e160*/ MOVW        R2, #0                      @ .LC333 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d20] 
    /*0000e164*/ STR         R3, [SP] 
    /*0000e168*/ MOVT        R2, #0                      @ .LC333 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d20] 
    /*0000e16c*/ LDR         R3, [PC, #340]              @ 0x000000000000e2c8 
    /*0000e170*/ STR         R1, [SP, #4] 
    /*0000e174*/ MOV         R0, #3 
    /*0000e178*/ MOV         R1, #8 
    /*0000e17c*/ BL          0x000000000000E17C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e180*/ B           VencDestroyChn_xd7c8
    VencDestroyChn_xe184:
    /*0000e184*/ LDR         R4, [SP, #16] 
    /*0000e188*/ MOV         R2, #88                     @ 0x58 
    /*0000e18c*/ LDR         R5, [SP, #20] 
    /*0000e190*/ ADD         R0, R4, #11968              @ 0x2ec0 
    /*0000e194*/ ADD         R0, R0, #48                 @ 0x30 
    /*0000e198*/ MOV         R1, R5 
    /*0000e19c*/ BL          0x000000000000E19C          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000e1a0*/ LDR         R2, [SP, #32] 
    /*0000e1a4*/ LDR         R1, [SP, #28] 
    /*0000e1a8*/ ADD         R0, R4, #12352              @ 0x3040 
    /*0000e1ac*/ ADD         R0, R0, #56                 @ 0x38 
    /*0000e1b0*/ STR         R5, [R2, R1] 
    /*0000e1b4*/ BL          0x000000000000E1B4          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0000e1b8*/ ADD         R0, R4, #12352              @ 0x3040 
    /*0000e1bc*/ ADD         R0, R0, #52                 @ 0x34 
    /*0000e1c0*/ BL          0x000000000000E1C0          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0000e1c4*/ LDR         R0, [SP, #24] 
    /*0000e1c8*/ BL          0x000000000000E1C8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000e1cc*/ B           VencDestroyChn_xdff4
    VencDestroyChn_xe1d0:
    /*0000e1d0*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0000e1d4*/ MOVW        R3, #5479                   @ 0x1567 
    /*0000e1d8*/ STR         R3, [SP] 
    /*0000e1dc*/ MOVW        R2, #0                      @ .LC330 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c38] 
    /*0000e1e0*/ LDR         R3, [PC, #224]              @ 0x000000000000e2c8 
    /*0000e1e4*/ MOVT        R2, #0                      @ .LC330 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c38] 
    /*0000e1e8*/ STR         R1, [SP, #4] 
    /*0000e1ec*/ MOV         R0, #4 
    /*0000e1f0*/ MOV         R1, #8 
    /*0000e1f4*/ MOVW        IP, #32773                  @ 0x8005 
    VencDestroyChn_xe1f8:
    /*0000e1f8*/ MOV         R4, IP 
    /*0000e1fc*/ BL          0x000000000000E1FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e200*/ LDR         R0, [SP, #24] 
    /*0000e204*/ BL          0x000000000000E204          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000e208*/ MOV         IP, R4 
    /*0000e20c*/ MOVT        IP, #40968                  @ 0xa008 
    /*0000e210*/ STR         IP, [SP, #12] 
    /*0000e214*/ B           VencDestroyChn_xdc28
    VencDestroyChn_xe218:
    /*0000e218*/ MOV         R3, #65024                  @ 0xfe00 
    /*0000e21c*/ MOVT        R3, #65535                  @ 0xffff 
    /*0000e220*/ STR         R3, [SP, #12] 
    /*0000e224*/ B           VencDestroyChn_xdc28
    VencDestroyChn_xe228:
    /*0000e228*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0000e22c*/ MOVW        R3, #5496                   @ 0x1578 
    /*0000e230*/ MOVW        R2, #0                      @ .LC332 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3cc8] 
    /*0000e234*/ STR         R3, [SP] 
    /*0000e238*/ MOVT        R2, #0                      @ .LC332 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3cc8] 
    /*0000e23c*/ LDR         R3, [PC, #132]              @ 0x000000000000e2c8 
    /*0000e240*/ STR         R1, [SP, #4] 
    /*0000e244*/ MOV         R0, #3 
    /*0000e248*/ MOV         R1, #8 
    /*0000e24c*/ MOVW        IP, #32786                  @ 0x8012 
    /*0000e250*/ B           VencDestroyChn_xe1f8
    VencDestroyChn_xe254:
    /*0000e254*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0000e258*/ MOVW        R3, #5487                   @ 0x156f 
    /*0000e25c*/ MOVW        R2, #0                      @ .LC331 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c6c] 
    /*0000e260*/ STR         R3, [SP] 
    /*0000e264*/ MOVT        R2, #0                      @ .LC331 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c6c] 
    /*0000e268*/ LDR         R3, [PC, #88]               @ 0x000000000000e2c8 
    /*0000e26c*/ STR         R1, [SP, #4] 
    /*0000e270*/ MOV         R0, #3 
    /*0000e274*/ MOV         R1, #8 
    /*0000e278*/ MOVW        IP, #32777                  @ 0x8009 
    /*0000e27c*/ B           VencDestroyChn_xe1f8
    VencDestroyChn_xe280:
    /*0000e280*/ MOVW        IP, #32784                  @ 0x8010 
    /*0000e284*/ MOV         R2, #4 
    /*0000e288*/ MOVW        R3, #5468                   @ 0x155c 
    /*0000e28c*/ STR         R2, [SP, #4] 
    /*0000e290*/ STR         R3, [SP] 
    /*0000e294*/ MOV         R4, IP 
    /*0000e298*/ MOVW        R2, #0                      @ .LC118 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c70] 
    /*0000e29c*/ LDR         R3, [PC, #36]               @ 0x000000000000e2c8 
    /*0000e2a0*/ MOVT        R2, #0                      @ .LC118 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c70] 
    /*0000e2a4*/ MOV         R1, #8 
    /*0000e2a8*/ MOV         R0, #3 
    /*0000e2ac*/ BL          0x000000000000E2AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e2b0*/ MOV         IP, R4 
    /*0000e2b4*/ MOVT        IP, #40968                  @ 0xa008 
    /*0000e2b8*/ STR         IP, [SP, #12] 
    /*0000e2bc*/ B           VencDestroyChn_xdc28
    /*0000e2c0*/ ANDEQ       R0, R0, IP, LSL #10 
    /*0000e2c4*/ ANDEQ       R0, R0, R0, LSR #10 
    /*0000e2c8*/ STRDEQ      R0, [R0], -IP 
FUNC_END VencDestroyChn


FUNC_BEGIN VencStartRecvPic
    /*0000e2cc*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000e2d0*/ SUBS        R4, R0, #0 
    /*0000e2d4*/ SUB         SP, SP, #20 
    /*0000e2d8*/ BLT         VencStartRecvPic_xe2f0
    /*0000e2dc*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000e2e0*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000e2e4*/ LDR         R3, [R3] 
    /*0000e2e8*/ CMP         R4, R3 
    /*0000e2ec*/ BCC         VencStartRecvPic_xe30c
    VencStartRecvPic_xe2f0:
    /*0000e2f0*/ MOV         R0, R4 
    /*0000e2f4*/ BL          0x0000000000000304 
    /*0000e2f8*/ SUBS        R5, R0, #0 
    /*0000e2fc*/ BEQ         VencStartRecvPic_xe30c
    VencStartRecvPic_xe300:
    /*0000e300*/ MOV         R0, R5 
    /*0000e304*/ ADD         SP, SP, #20 
    /*0000e308*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencStartRecvPic_xe30c:
    /*0000e30c*/ MOVW        R7, #36240                  @ 0x8d90 
    /*0000e310*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000e314*/ MUL         R7, R7, R4 
    /*0000e318*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000e31c*/ LDR         R9, [R3] 
    /*0000e320*/ ADD         R8, R9, R7 
    /*0000e324*/ ADD         R6, R8, #12416              @ 0x3080 
    /*0000e328*/ ADD         R6, R6, #16 
    /*0000e32c*/ MOV         R0, R6 
    /*0000e330*/ BL          0x000000000000E330          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000e334*/ SUBS        R5, R0, #0 
    /*0000e338*/ BNE         VencStartRecvPic_xe410
    /*0000e33c*/ LDR         R7, [R9, R7] 
    /*0000e340*/ CMP         R7, #1 
    /*0000e344*/ BEQ         VencStartRecvPic_xe388
    /*0000e348*/ MOVW        R3, #7335                   @ 0x1ca7 
    /*0000e34c*/ STR         R4, [SP, #4] 
    /*0000e350*/ STR         R3, [SP] 
    /*0000e354*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000e358*/ LDR         R3, [PC, #188]              @ 0x000000000000e41c 
    /*0000e35c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000e360*/ MOV         R1, #8 
    /*0000e364*/ MOV         R0, #3 
    /*0000e368*/ BL          0x000000000000E368          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e36c*/ MOVW        R5, #32773                  @ 0x8005 
    /*0000e370*/ MOVT        R5, #40968                  @ 0xa008 
    VencStartRecvPic_xe374:
    /*0000e374*/ MOV         R0, R6 
    /*0000e378*/ BL          0x000000000000E378          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000e37c*/ MOV         R0, R5 
    /*0000e380*/ ADD         SP, SP, #20 
    /*0000e384*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencStartRecvPic_xe388:
    /*0000e388*/ ADD         R3, R8, #12288              @ 0x3000 
    /*0000e38c*/ LDR         R3, [R3, #132]              @ 0x84 
    /*0000e390*/ CMP         R3, #1 
    /*0000e394*/ BEQ         VencStartRecvPic_xe3e0
    /*0000e398*/ ADD         R9, R8, #64                 @ 0x40 
    /*0000e39c*/ ADD         R1, SP, #12 
    /*0000e3a0*/ MOV         R0, R9 
    /*0000e3a4*/ BL          0x000000000000E3A4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000e3a8*/ ADD         R1, SP, #12 
    /*0000e3ac*/ MOV         R0, R9 
    /*0000e3b0*/ STR         R7, [R8, #16] 
    /*0000e3b4*/ BL          0x000000000000E3B4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000e3b8*/ MOVW        R3, #7352                   @ 0x1cb8 
    /*0000e3bc*/ STR         R4, [SP, #4] 
    /*0000e3c0*/ MOVW        R2, #0                      @ .LC335 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d90] 
    /*0000e3c4*/ STR         R3, [SP] 
    /*0000e3c8*/ MOVT        R2, #0                      @ .LC335 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d90] 
    /*0000e3cc*/ LDR         R3, [PC, #72]               @ 0x000000000000e41c 
    /*0000e3d0*/ MOV         R1, #8 
    /*0000e3d4*/ MOV         R0, #5 
    /*0000e3d8*/ BL          0x000000000000E3D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e3dc*/ B           VencStartRecvPic_xe374
    VencStartRecvPic_xe3e0:
    /*0000e3e0*/ MOVW        R3, #7342                   @ 0x1cae 
    /*0000e3e4*/ STR         R4, [SP, #4] 
    /*0000e3e8*/ STR         R3, [SP] 
    /*0000e3ec*/ MOVW        R2, #0                      @ .LC334 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d54] 
    /*0000e3f0*/ LDR         R3, [PC, #36]               @ 0x000000000000e41c 
    /*0000e3f4*/ MOVT        R2, #0                      @ .LC334 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d54] 
    /*0000e3f8*/ MOV         R1, #8 
    /*0000e3fc*/ MOV         R0, #3 
    /*0000e400*/ MOVW        R5, #32777                  @ 0x8009 
    /*0000e404*/ BL          0x000000000000E404          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e408*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000e40c*/ B           VencStartRecvPic_xe374
    VencStartRecvPic_xe410:
    /*0000e410*/ MOV         R5, #65024                  @ 0xfe00 
    /*0000e414*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000e418*/ B           VencStartRecvPic_xe300
    /*0000e41c*/ ANDEQ       R0, R0, R4, LSR R5 
FUNC_END VencStartRecvPic


FUNC_BEGIN VencStartRecvFrame
    /*0000e420*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000e424*/ SUBS        R6, R1, #0 
    /*0000e428*/ SUB         SP, SP, #24 
    /*0000e42c*/ MOV         R4, R0 
    /*0000e430*/ BEQ         VencStartRecvFrame_xe540
    VencStartRecvFrame_xe434:
    /*0000e434*/ CMP         R4, #0 
    /*0000e438*/ BLT         VencStartRecvFrame_xe450
    /*0000e43c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000e440*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000e444*/ LDR         R3, [R3] 
    /*0000e448*/ CMP         R4, R3 
    /*0000e44c*/ BCC         VencStartRecvFrame_xe46c
    VencStartRecvFrame_xe450:
    /*0000e450*/ MOV         R0, R4 
    /*0000e454*/ BL          0x0000000000000304 
    /*0000e458*/ SUBS        R5, R0, #0 
    /*0000e45c*/ BEQ         VencStartRecvFrame_xe46c
    VencStartRecvFrame_xe460:
    /*0000e460*/ MOV         R0, R5 
    /*0000e464*/ ADD         SP, SP, #24 
    /*0000e468*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencStartRecvFrame_xe46c:
    /*0000e46c*/ MOVW        R7, #36240                  @ 0x8d90 
    /*0000e470*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000e474*/ MUL         R7, R7, R4 
    /*0000e478*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000e47c*/ LDR         SL, [R6] 
    /*0000e480*/ LDR         R9, [R3] 
    /*0000e484*/ ADD         R8, R9, R7 
    /*0000e488*/ ADD         R6, R8, #12416              @ 0x3080 
    /*0000e48c*/ ADD         R6, R6, #16 
    /*0000e490*/ MOV         R0, R6 
    /*0000e494*/ BL          0x000000000000E494          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000e498*/ SUBS        R5, R0, #0 
    /*0000e49c*/ BNE         VencStartRecvFrame_xe5bc
    /*0000e4a0*/ LDR         R7, [R9, R7] 
    /*0000e4a4*/ CMP         R7, #1 
    /*0000e4a8*/ BEQ         VencStartRecvFrame_xe4ec
    /*0000e4ac*/ MOVW        R3, #7398                   @ 0x1ce6 
    /*0000e4b0*/ STR         R4, [SP, #4] 
    /*0000e4b4*/ STR         R3, [SP] 
    /*0000e4b8*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000e4bc*/ LDR         R3, [PC, #332]              @ 0x000000000000e610 
    /*0000e4c0*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000e4c4*/ MOV         R1, #8 
    /*0000e4c8*/ MOV         R0, #3 
    /*0000e4cc*/ BL          0x000000000000E4CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e4d0*/ MOVW        R5, #32773                  @ 0x8005 
    /*0000e4d4*/ MOVT        R5, #40968                  @ 0xa008 
    VencStartRecvFrame_xe4d8:
    /*0000e4d8*/ MOV         R0, R6 
    /*0000e4dc*/ BL          0x000000000000E4DC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000e4e0*/ MOV         R0, R5 
    /*0000e4e4*/ ADD         SP, SP, #24 
    /*0000e4e8*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencStartRecvFrame_xe4ec:
    /*0000e4ec*/ CMP         SL, #0 
    /*0000e4f0*/ BLE         VencStartRecvFrame_xe580
    /*0000e4f4*/ LDR         R3, [R8, #16] 
    /*0000e4f8*/ CMP         R3, #1 
    /*0000e4fc*/ BEQ         VencStartRecvFrame_xe550
    /*0000e500*/ ADD         R9, R8, #12288              @ 0x3000 
    /*0000e504*/ LDR         R3, [R9, #132]              @ 0x84 
    /*0000e508*/ CMP         R3, #1 
    /*0000e50c*/ BEQ         VencStartRecvFrame_xe550
    /*0000e510*/ ADD         R4, R8, #64                 @ 0x40 
    /*0000e514*/ ADD         R1, SP, #20 
    /*0000e518*/ MOV         R0, R4 
    /*0000e51c*/ BL          0x000000000000E51C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000e520*/ STR         R7, [R8, #16] 
    /*0000e524*/ ADD         R1, SP, #20 
    /*0000e528*/ MOV         R0, R4 
    /*0000e52c*/ STR         R7, [R9, #132]              @ 0x84 
    /*0000e530*/ STR         SL, [R9, #140]              @ 0x8c 
    /*0000e534*/ STR         SL, [R9, #136]              @ 0x88 
    /*0000e538*/ BL          0x000000000000E538          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000e53c*/ B           VencStartRecvFrame_xe4d8
    VencStartRecvFrame_xe540:
    /*0000e540*/ BL          0x00000000000002C8 
    /*0000e544*/ SUBS        R5, R0, #0 
    /*0000e548*/ BNE         VencStartRecvFrame_xe460
    /*0000e54c*/ B           VencStartRecvFrame_xe434
    VencStartRecvFrame_xe550:
    /*0000e550*/ MOVW        R3, #7408                   @ 0x1cf0 
    /*0000e554*/ STR         R4, [SP, #4] 
    /*0000e558*/ STR         R3, [SP] 
    /*0000e55c*/ MOVW        R2, #0                      @ .LC336 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3dc8] 
    /*0000e560*/ LDR         R3, [PC, #168]              @ 0x000000000000e610 
    /*0000e564*/ MOVT        R2, #0                      @ .LC336 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3dc8] 
    /*0000e568*/ MOV         R1, #8 
    /*0000e56c*/ MOV         R0, #3 
    /*0000e570*/ MOVW        R5, #32777                  @ 0x8009 
    /*0000e574*/ BL          0x000000000000E574          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e578*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000e57c*/ B           VencStartRecvFrame_xe4d8
    VencStartRecvFrame_xe580:
    /*0000e580*/ CMN         SL, #1 
    /*0000e584*/ BEQ         VencStartRecvFrame_xe5c8
    /*0000e588*/ MOVW        R3, #7433                   @ 0x1d09 
    /*0000e58c*/ STR         SL, [SP, #8] 
    /*0000e590*/ STR         R3, [SP] 
    /*0000e594*/ MOVW        R2, #0                      @ .LC337 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e08] 
    /*0000e598*/ STR         R4, [SP, #4] 
    /*0000e59c*/ MOVT        R2, #0                      @ .LC337 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e08] 
    /*0000e5a0*/ LDR         R3, [PC, #104]              @ 0x000000000000e610 
    /*0000e5a4*/ MOV         R1, #8 
    /*0000e5a8*/ MOV         R0, #3 
    /*0000e5ac*/ MOVW        R5, #32771                  @ 0x8003 
    /*0000e5b0*/ BL          0x000000000000E5B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e5b4*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000e5b8*/ B           VencStartRecvFrame_xe4d8
    VencStartRecvFrame_xe5bc:
    /*0000e5bc*/ MOV         R5, #65024                  @ 0xfe00 
    /*0000e5c0*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000e5c4*/ B           VencStartRecvFrame_xe460
    VencStartRecvFrame_xe5c8:
    /*0000e5c8*/ ADD         R9, R8, #64                 @ 0x40 
    /*0000e5cc*/ ADD         R1, SP, #20 
    /*0000e5d0*/ MOV         R0, R9 
    /*0000e5d4*/ BL          0x000000000000E5D4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000e5d8*/ ADD         R1, SP, #20 
    /*0000e5dc*/ MOV         R0, R9 
    /*0000e5e0*/ STR         R7, [R8, #16] 
    /*0000e5e4*/ BL          0x000000000000E5E4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000e5e8*/ MOVW        R3, #7428                   @ 0x1d04 
    /*0000e5ec*/ STR         R4, [SP, #4] 
    /*0000e5f0*/ MOVW        R2, #0                      @ .LC335 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d90] 
    /*0000e5f4*/ STR         R3, [SP] 
    /*0000e5f8*/ MOVT        R2, #0                      @ .LC335 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d90] 
    /*0000e5fc*/ LDR         R3, [PC, #12]               @ 0x000000000000e610 
    /*0000e600*/ MOV         R1, #8 
    /*0000e604*/ MOV         R0, #5 
    /*0000e608*/ BL          0x000000000000E608          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e60c*/ B           VencStartRecvFrame_xe4d8
    /*0000e610*/ ANDEQ       R0, R0, R8, ASR #10 
FUNC_END VencStartRecvFrame


FUNC_BEGIN VencStopRecvPic
    /*0000e614*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000e618*/ SUBS        R4, R0, #0 
    /*0000e61c*/ SUB         SP, SP, #12 
    /*0000e620*/ BLT         VencStopRecvPic_xe694
    /*0000e624*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000e628*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000e62c*/ LDR         R3, [R3] 
    /*0000e630*/ CMP         R4, R3 
    /*0000e634*/ BCS         VencStopRecvPic_xe694
    VencStopRecvPic_xe638:
    /*0000e638*/ MOVW        R6, #36240                  @ 0x8d90 
    /*0000e63c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000e640*/ MUL         R6, R6, R4 
    /*0000e644*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000e648*/ LDR         R7, [R3] 
    /*0000e64c*/ ADD         R5, R7, R6 
    /*0000e650*/ ADD         R5, R5, #12416              @ 0x3080 
    /*0000e654*/ ADD         R5, R5, #16 
    /*0000e658*/ MOV         R0, R5 
    /*0000e65c*/ BL          0x000000000000E65C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000e660*/ CMP         R0, #0 
    /*0000e664*/ BNE         VencStopRecvPic_xe6e8
    /*0000e668*/ LDR         R3, [R7, R6] 
    /*0000e66c*/ CMP         R3, #1 
    /*0000e670*/ BNE         VencStopRecvPic_xe6b0
    /*0000e674*/ MOV         R0, R4 
    /*0000e678*/ BL          0x000000000000E678          @ VENC_StopChnRecvPic [R_ARM_CALL: .text+0x25a2c] 
    /*0000e67c*/ MOV         R6, R0 
    /*0000e680*/ MOV         R0, R5 
    /*0000e684*/ BL          0x000000000000E684          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000e688*/ MOV         R0, R6 
    /*0000e68c*/ ADD         SP, SP, #12 
    /*0000e690*/ POP         {R4, R5, R6, R7, PC} 
    VencStopRecvPic_xe694:
    /*0000e694*/ MOV         R0, R4 
    /*0000e698*/ BL          0x0000000000000304 
    /*0000e69c*/ SUBS        R6, R0, #0 
    /*0000e6a0*/ BEQ         VencStopRecvPic_xe638
    VencStopRecvPic_xe6a4:
    /*0000e6a4*/ MOV         R0, R6 
    /*0000e6a8*/ ADD         SP, SP, #12 
    /*0000e6ac*/ POP         {R4, R5, R6, R7, PC} 
    VencStopRecvPic_xe6b0:
    /*0000e6b0*/ MOVW        R3, #7475                   @ 0x1d33 
    /*0000e6b4*/ MOV         R1, #8 
    /*0000e6b8*/ STR         R3, [SP] 
    /*0000e6bc*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000e6c0*/ LDR         R3, [PC, #44]               @ 0x000000000000e6f4 
    /*0000e6c4*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000e6c8*/ STR         R4, [SP, #4] 
    /*0000e6cc*/ MOV         R0, #3 
    /*0000e6d0*/ BL          0x000000000000E6D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e6d4*/ MOV         R0, R5 
    /*0000e6d8*/ MOVW        R6, #32773                  @ 0x8005 
    /*0000e6dc*/ BL          0x000000000000E6DC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000e6e0*/ MOVT        R6, #40968                  @ 0xa008 
    /*0000e6e4*/ B           VencStopRecvPic_xe6a4
    VencStopRecvPic_xe6e8:
    /*0000e6e8*/ MOV         R6, #65024                  @ 0xfe00 
    /*0000e6ec*/ MOVT        R6, #65535                  @ 0xffff 
    /*0000e6f0*/ B           VencStopRecvPic_xe6a4
    /*0000e6f4*/ ANDEQ       R0, R0, IP, ASR R5 
FUNC_END VencStopRecvPic


FUNC_BEGIN VencQuery
    /*0000e6f8*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000e6fc*/ SUBS        R4, R1, #0 
    /*0000e700*/ SUB         SP, SP, #36                 @ 0x24 
    /*0000e704*/ MOV         R3, #0 
    /*0000e708*/ MOV         R5, R0 
    /*0000e70c*/ STR         R3, [SP, #20] 
    /*0000e710*/ STR         R3, [SP, #16] 
    /*0000e714*/ STR         R3, [SP, #24] 
    /*0000e718*/ STR         R3, [SP, #28] 
    /*0000e71c*/ BEQ         VencQuery_xe88c
    VencQuery_xe720:
    /*0000e720*/ CMP         R5, #0 
    /*0000e724*/ BLT         VencQuery_xe874
    /*0000e728*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000e72c*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000e730*/ LDR         R3, [R3] 
    /*0000e734*/ CMP         R5, R3 
    /*0000e738*/ BCS         VencQuery_xe874
    VencQuery_xe73c:
    /*0000e73c*/ MOVW        R7, #36240                  @ 0x8d90 
    /*0000e740*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000e744*/ MUL         R7, R7, R5 
    /*0000e748*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000e74c*/ LDR         R9, [R3] 
    /*0000e750*/ ADD         R6, R9, R7 
    /*0000e754*/ ADD         R8, R6, #12416              @ 0x3080 
    /*0000e758*/ ADD         R8, R8, #16 
    /*0000e75c*/ MOV         R0, R8 
    /*0000e760*/ BL          0x000000000000E760          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000e764*/ CMP         R0, #0 
    /*0000e768*/ BNE         VencQuery_xe908
    /*0000e76c*/ LDR         R3, [R9, R7] 
    /*0000e770*/ CMP         R3, #1 
    /*0000e774*/ BNE         VencQuery_xe8d0
    /*0000e778*/ ADD         R9, R6, #60                 @ 0x3c 
    /*0000e77c*/ ADD         R5, R6, #8192               @ 0x2000 
    /*0000e780*/ ADD         R1, SP, #12 
    /*0000e784*/ MOV         R0, R9 
    /*0000e788*/ BL          0x000000000000E788          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000e78c*/ LDR         R7, [R5, #3816]             @ 0xee8 
    /*0000e790*/ CMP         R7, #0 
    /*0000e794*/ BEQ         VencQuery_xe89c
    VencQuery_xe798:
    /*0000e798*/ LDR         R7, [R7, #12] 
    VencQuery_xe79c:
    /*0000e79c*/ LDR         R0, [R6, #56]               @ 0x38 
    /*0000e7a0*/ CMN         R0, #1 
    /*0000e7a4*/ MOVEQ       R3, #0 
    /*0000e7a8*/ BEQ         VencQuery_xe7b8
    /*0000e7ac*/ ADD         R1, SP, #16 
    /*0000e7b0*/ BL          0x000000000000E7B0          @ VENC_InqStatInfo [R_ARM_CALL: .text+0x25acc] 
    /*0000e7b4*/ LDR         R3, [SP, #24] 
    VencQuery_xe7b8:
    /*0000e7b8*/ STR         R3, [R4] 
    /*0000e7bc*/ ADD         R6, R6, #32768              @ 0x8000 
    /*0000e7c0*/ STR         R7, [R4, #12] 
    /*0000e7c4*/ ADD         R1, SP, #12 
    /*0000e7c8*/ LDR         R2, [R5, #3828]             @ 0xef4 
    /*0000e7cc*/ MOV         R0, R9 
    /*0000e7d0*/ LDR         LR, [SP, #16] 
    /*0000e7d4*/ STR         R2, [R4, #4] 
    /*0000e7d8*/ LDR         R2, [SP, #20] 
    /*0000e7dc*/ LDR         IP, [R5, #3832]             @ 0xef8 
    /*0000e7e0*/ STR         LR, [R4, #16] 
    /*0000e7e4*/ STR         R2, [R4, #20] 
    /*0000e7e8*/ STR         IP, [R4, #8] 
    /*0000e7ec*/ LDR         R2, [R6, #3284]             @ 0xcd4 
    /*0000e7f0*/ STR         R2, [R4, #24] 
    /*0000e7f4*/ LDR         R2, [R5, #3912]             @ 0xf48 
    /*0000e7f8*/ STR         R2, [R4, #32] 
    /*0000e7fc*/ LDR         R2, [R5, #3916]             @ 0xf4c 
    /*0000e800*/ STR         R2, [R4, #36]               @ 0x24 
    /*0000e804*/ LDR         R2, [R5, #3920]             @ 0xf50 
    /*0000e808*/ STR         R2, [R4, #40]               @ 0x28 
    /*0000e80c*/ LDR         R2, [R5, #3924]             @ 0xf54 
    /*0000e810*/ STR         R2, [R4, #44]               @ 0x2c 
    /*0000e814*/ LDR         R2, [R5, #3928]             @ 0xf58 
    /*0000e818*/ STR         R2, [R4, #48]               @ 0x30 
    /*0000e81c*/ LDR         R2, [R5, #3932]             @ 0xf5c 
    /*0000e820*/ STR         R2, [R4, #52]               @ 0x34 
    /*0000e824*/ LDR         R2, [R5, #3936]             @ 0xf60 
    /*0000e828*/ STR         R2, [R4, #56]               @ 0x38 
    /*0000e82c*/ LDR         R2, [R5, #3940]             @ 0xf64 
    /*0000e830*/ STR         R2, [R4, #60]               @ 0x3c 
    /*0000e834*/ LDR         R2, [R5, #3944]             @ 0xf68 
    /*0000e838*/ STR         R2, [R4, #64]               @ 0x40 
    /*0000e83c*/ LDR         R2, [R5, #3948]             @ 0xf6c 
    /*0000e840*/ STR         R2, [R4, #68]               @ 0x44 
    /*0000e844*/ LDR         R2, [R5, #3952]             @ 0xf70 
    /*0000e848*/ STR         R2, [R4, #72]               @ 0x48 
    /*0000e84c*/ LDR         R2, [R5, #3956]             @ 0xf74 
    /*0000e850*/ STR         R2, [R4, #76]               @ 0x4c 
    /*0000e854*/ STR         R3, [R5, #3824]             @ 0xef0 
    /*0000e858*/ STR         R7, [R5, #3836]             @ 0xefc 
    /*0000e85c*/ BL          0x000000000000E85C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000e860*/ MOV         R0, R8 
    /*0000e864*/ BL          0x000000000000E864          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000e868*/ MOV         R0, #0 
    /*0000e86c*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000e870*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencQuery_xe874:
    /*0000e874*/ MOV         R0, R5 
    /*0000e878*/ BL          0x0000000000000304 
    /*0000e87c*/ CMP         R0, #0 
    /*0000e880*/ BEQ         VencQuery_xe73c
    VencQuery_xe884:
    /*0000e884*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000e888*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencQuery_xe88c:
    /*0000e88c*/ BL          0x00000000000002C8 
    /*0000e890*/ CMP         R0, #0 
    /*0000e894*/ BNE         VencQuery_xe884
    /*0000e898*/ B           VencQuery_xe720
    VencQuery_xe89c:
    /*0000e89c*/ ADD         R3, R6, #11904              @ 0x2e80 
    /*0000e8a0*/ ADD         R3, R3, #60                 @ 0x3c 
    /*0000e8a4*/ CMP         R3, #0 
    /*0000e8a8*/ MOVEQ       R7, R3 
    /*0000e8ac*/ BEQ         VencQuery_xe79c
    /*0000e8b0*/ LDR         R2, [R5, #3800]             @ 0xed8 
    /*0000e8b4*/ ADD         R3, R3, #28 
    /*0000e8b8*/ CMP         R2, R3 
    /*0000e8bc*/ BEQ         VencQuery_xe79c
    /*0000e8c0*/ LDR         R7, [R2, #-8] 
    /*0000e8c4*/ CMP         R7, #0 
    /*0000e8c8*/ BEQ         VencQuery_xe79c
    /*0000e8cc*/ B           VencQuery_xe798
    VencQuery_xe8d0:
    /*0000e8d0*/ MOVW        R3, #7522                   @ 0x1d62 
    /*0000e8d4*/ MOV         R1, #8 
    /*0000e8d8*/ STR         R3, [SP] 
    /*0000e8dc*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000e8e0*/ LDR         R3, [PC, #44]               @ 0x000000000000e914 
    /*0000e8e4*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000e8e8*/ STR         R5, [SP, #4] 
    /*0000e8ec*/ MOV         R0, #3 
    /*0000e8f0*/ BL          0x000000000000E8F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e8f4*/ MOV         R0, R8 
    /*0000e8f8*/ BL          0x000000000000E8F8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000e8fc*/ MOVW        R0, #32773                  @ 0x8005 
    /*0000e900*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000e904*/ B           VencQuery_xe884
    VencQuery_xe908:
    /*0000e908*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000e90c*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000e910*/ B           VencQuery_xe884
    /*0000e914*/ ANDEQ       R0, R0, IP, ROR #10 
FUNC_END VencQuery


FUNC_BEGIN VencDoPoll
    /*0000e918*/ SUBS        R2, R0, #0 
    /*0000e91c*/ PUSH        {R4, LR} 
    /*0000e920*/ MOVWLT      R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000e924*/ SUB         SP, SP, #16 
    /*0000e928*/ MOVTLT      R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000e92c*/ BLT         VencDoPoll_xe9dc
    /*0000e930*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000e934*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000e938*/ MOV         R0, R1 
    /*0000e93c*/ LDR         R1, [R3] 
    /*0000e940*/ CMP         R2, R1 
    /*0000e944*/ BCS         VencDoPoll_xe9a4
    /*0000e948*/ CMN         R2, #-268435455             @ 0xf0000001 
    /*0000e94c*/ BEQ         VencDoPoll_xe9ac
    /*0000e950*/ MOVW        R3, #36240                  @ 0x8d90 
    /*0000e954*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000e958*/ MUL         R3, R3, R2 
    /*0000e95c*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000e960*/ LDR         R1, [R1] 
    /*0000e964*/ ADD         R4, R1, R3 
    /*0000e968*/ LDR         R3, [R1, R3] 
    /*0000e96c*/ CMP         R3, #0 
    /*0000e970*/ BNE         VencDoPoll_xea14
    /*0000e974*/ STR         R2, [SP, #4] 
    /*0000e978*/ MOVW        R3, #7640                   @ 0x1dd8 
    /*0000e97c*/ MOVW        R2, #0                      @ .LC340 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ecc] 
    /*0000e980*/ STR         R3, [SP] 
    /*0000e984*/ MOVT        R2, #0                      @ .LC340 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ecc] 
    /*0000e988*/ LDR         R3, [PC, #240]              @ 0x000000000000ea80 
    /*0000e98c*/ MOV         R1, #8 
    /*0000e990*/ MOV         R0, #5 
    /*0000e994*/ BL          0x000000000000E994          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e998*/ MOV         R0, #65                     @ 0x41 
    VencDoPoll_xe99c:
    /*0000e99c*/ ADD         SP, SP, #16 
    /*0000e9a0*/ POP         {R4, PC} 
    VencDoPoll_xe9a4:
    /*0000e9a4*/ CMN         R2, #-268435455             @ 0xf0000001 
    /*0000e9a8*/ BNE         VencDoPoll_xe9dc
    VencDoPoll_xe9ac:
    /*0000e9ac*/ MVN         R2, #-268435456             @ 0xf0000000 
    /*0000e9b0*/ MOVW        R3, #7632                   @ 0x1dd0 
    /*0000e9b4*/ STR         R2, [SP, #4] 
    /*0000e9b8*/ MOV         R1, #8 
    /*0000e9bc*/ STR         R3, [SP] 
    /*0000e9c0*/ MOVW        R2, #0                      @ .LC339 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e94] 
    /*0000e9c4*/ LDR         R3, [PC, #180]              @ 0x000000000000ea80 
    /*0000e9c8*/ MOVT        R2, #0                      @ .LC339 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e94] 
    /*0000e9cc*/ MOV         R0, #7 
    /*0000e9d0*/ BL          0x000000000000E9D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e9d4*/ MOV         R0, #0 
    /*0000e9d8*/ B           VencDoPoll_xe99c
    VencDoPoll_xe9dc:
    /*0000e9dc*/ LDR         R3, [R3] 
    /*0000e9e0*/ MOVW        R1, #7627                   @ 0x1dcb 
    /*0000e9e4*/ STR         R2, [SP, #4] 
    /*0000e9e8*/ MOV         R0, #3 
    /*0000e9ec*/ STR         R1, [SP] 
    /*0000e9f0*/ MOVW        R2, #0                      @ .LC338 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e50] 
    /*0000e9f4*/ STR         R3, [SP, #8] 
    /*0000e9f8*/ MOVT        R2, #0                      @ .LC338 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e50] 
    /*0000e9fc*/ MOV         R1, #8 
    /*0000ea00*/ LDR         R3, [PC, #120]              @ 0x000000000000ea80 
    /*0000ea04*/ BL          0x000000000000EA04          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ea08*/ MOV         R0, #0 
    /*0000ea0c*/ ADD         SP, SP, #16 
    /*0000ea10*/ POP         {R4, PC} 
    VencDoPoll_xea14:
    /*0000ea14*/ ADD         R1, R4, #12352              @ 0x3040 
    /*0000ea18*/ ADD         R1, R1, #52                 @ 0x34 
    /*0000ea1c*/ BL          0x000000000000EA1C          @ osal_poll_wait [R_ARM_CALL: +0x0] 
    /*0000ea20*/ ADD         R3, R4, #11904              @ 0x2e80 
    /*0000ea24*/ ADD         R3, R3, #60                 @ 0x3c 
    /*0000ea28*/ CMP         R3, #0 
    /*0000ea2c*/ BEQ         VencDoPoll_xea68
    /*0000ea30*/ ADD         R3, R4, #8192               @ 0x2000 
    /*0000ea34*/ LDR         R2, [R3, #3816]             @ 0xee8 
    /*0000ea38*/ CMP         R2, #0 
    /*0000ea3c*/ MOVNE       R0, #65                     @ 0x41 
    /*0000ea40*/ BNE         VencDoPoll_xe99c
    /*0000ea44*/ LDR         R0, [R3, #3784]             @ 0xec8 
    /*0000ea48*/ CMP         R0, #0 
    /*0000ea4c*/ BEQ         VencDoPoll_xe99c
    /*0000ea50*/ ADD         R4, R4, #12288              @ 0x3000 
    /*0000ea54*/ LDR         R3, [R4, #1104]             @ 0x450 
    /*0000ea58*/ CMP         R0, R3 
    /*0000ea5c*/ MOVCS       R0, #65                     @ 0x41 
    /*0000ea60*/ MOVCC       R0, #0 
    /*0000ea64*/ B           VencDoPoll_xe99c
    VencDoPoll_xea68:
    /*0000ea68*/ ADD         R4, R4, #8192               @ 0x2000 
    /*0000ea6c*/ LDR         R3, [R4, #3816]             @ 0xee8 
    /*0000ea70*/ CMP         R3, #0 
    /*0000ea74*/ MOVEQ       R0, #0 
    /*0000ea78*/ MOVNE       R0, #65                     @ 0x41 
    /*0000ea7c*/ B           VencDoPoll_xe99c
    /*0000ea80*/ ANDEQ       R0, R0, R8, ROR R5 
FUNC_END VencDoPoll


FUNC_BEGIN VencGetRcnFrame
    /*0000ea84*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000ea88*/ SUB         SP, SP, #12 
    /*0000ea8c*/ MOVW        R3, #7669                   @ 0x1df5 
    /*0000ea90*/ MOV         R1, #8 
    /*0000ea94*/ STR         R3, [SP] 
    /*0000ea98*/ MOVW        R2, #0                      @ .LC341 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f0c] 
    /*0000ea9c*/ LDR         R3, [PC, #24]               @ 0x000000000000eabc 
    /*0000eaa0*/ MOVT        R2, #0                      @ .LC341 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f0c] 
    /*0000eaa4*/ MOV         R0, #5 
    /*0000eaa8*/ BL          0x000000000000EAA8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000eaac*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000eab0*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000eab4*/ ADD         SP, SP, #12 
    /*0000eab8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000eabc*/ ANDEQ       R0, R0, R4, LSL #11 
FUNC_END VencGetRcnFrame


FUNC_BEGIN VencReleaseRcnFrame
    /*0000eac0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000eac4*/ SUB         SP, SP, #12 
    /*0000eac8*/ MOVW        R3, #7676                   @ 0x1dfc 
    /*0000eacc*/ MOV         R1, #8 
    /*0000ead0*/ STR         R3, [SP] 
    /*0000ead4*/ MOVW        R2, #0                      @ .LC341 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f0c] 
    /*0000ead8*/ LDR         R3, [PC, #24]               @ 0x000000000000eaf8 
    /*0000eadc*/ MOVT        R2, #0                      @ .LC341 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f0c] 
    /*0000eae0*/ MOV         R0, #5 
    /*0000eae4*/ BL          0x000000000000EAE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000eae8*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000eaec*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000eaf0*/ ADD         SP, SP, #12 
    /*0000eaf4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000eaf8*/ MULEQ       R0, R4, R5 
FUNC_END VencReleaseRcnFrame


FUNC_BEGIN VencGetDeBreathEffect
    /*0000eafc*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000eb00*/ SUBS        R6, R1, #0 
    /*0000eb04*/ SUB         SP, SP, #20 
    /*0000eb08*/ MOV         R4, R0 
    /*0000eb0c*/ BEQ         VencGetDeBreathEffect_xebd4
    VencGetDeBreathEffect_xeb10:
    /*0000eb10*/ CMP         R4, #0 
    /*0000eb14*/ BLT         VencGetDeBreathEffect_xebbc
    /*0000eb18*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000eb1c*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000eb20*/ LDR         R3, [R3] 
    /*0000eb24*/ CMP         R4, R3 
    /*0000eb28*/ BCS         VencGetDeBreathEffect_xebbc
    VencGetDeBreathEffect_xeb2c:
    /*0000eb2c*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0000eb30*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000eb34*/ MUL         R5, R5, R4 
    /*0000eb38*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000eb3c*/ LDR         R9, [R3] 
    /*0000eb40*/ ADD         R8, R9, R5 
    /*0000eb44*/ ADD         R7, R8, #12416              @ 0x3080 
    /*0000eb48*/ ADD         R7, R7, #16 
    /*0000eb4c*/ MOV         R0, R7 
    /*0000eb50*/ BL          0x000000000000EB50          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000eb54*/ CMP         R0, #0 
    /*0000eb58*/ BNE         VencGetDeBreathEffect_xec8c
    /*0000eb5c*/ LDR         R3, [R9, R5] 
    /*0000eb60*/ CMP         R3, #1 
    /*0000eb64*/ BNE         VencGetDeBreathEffect_xec18
    /*0000eb68*/ BL          0x000000000000EB68          @ VENC_DRV_IsSupportDeBreathEffect [R_ARM_CALL: .text+0x26a28] 
    /*0000eb6c*/ CMP         R0, #1 
    /*0000eb70*/ BNE         VencGetDeBreathEffect_xebe4
    /*0000eb74*/ LDR         R3, [R8, #4] 
    /*0000eb78*/ MOVW        R5, #1002                   @ 0x3ea 
    /*0000eb7c*/ BIC         R0, R3, #4 
    /*0000eb80*/ CMP         R3, #26 
    /*0000eb84*/ CMPNE       R0, R5 
    /*0000eb88*/ MOVEQ       R5, #1 
    /*0000eb8c*/ MOVNE       R5, #0 
    /*0000eb90*/ BEQ         VencGetDeBreathEffect_xec50
    /*0000eb94*/ ADD         R1, R8, #13312              @ 0x3400 
    /*0000eb98*/ MOV         R2, #12 
    /*0000eb9c*/ ADD         R1, R1, #20 
    /*0000eba0*/ MOV         R0, R6 
    /*0000eba4*/ BL          0x000000000000EBA4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000eba8*/ MOV         R0, R7 
    /*0000ebac*/ BL          0x000000000000EBAC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ebb0*/ MOV         R0, R5 
    /*0000ebb4*/ ADD         SP, SP, #20 
    /*0000ebb8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetDeBreathEffect_xebbc:
    /*0000ebbc*/ MOV         R0, R4 
    /*0000ebc0*/ BL          0x0000000000000304 
    /*0000ebc4*/ CMP         R0, #0 
    /*0000ebc8*/ BEQ         VencGetDeBreathEffect_xeb2c
    VencGetDeBreathEffect_xebcc:
    /*0000ebcc*/ ADD         SP, SP, #20 
    /*0000ebd0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetDeBreathEffect_xebd4:
    /*0000ebd4*/ BL          0x00000000000002C8 
    /*0000ebd8*/ CMP         R0, #0 
    /*0000ebdc*/ BNE         VencGetDeBreathEffect_xebcc
    /*0000ebe0*/ B           VencGetDeBreathEffect_xeb10
    VencGetDeBreathEffect_xebe4:
    /*0000ebe4*/ MOVW        R3, #7864                   @ 0x1eb8 
    /*0000ebe8*/ MOV         R1, #8 
    /*0000ebec*/ STR         R3, [SP] 
    /*0000ebf0*/ MOVW        R2, #0                      @ .LC342 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f40] 
    /*0000ebf4*/ LDR         R3, [PC, #156]              @ 0x000000000000ec98 
    /*0000ebf8*/ MOVT        R2, #0                      @ .LC342 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f40] 
    /*0000ebfc*/ MOV         R0, #3 
    /*0000ec00*/ BL          0x000000000000EC00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ec04*/ MOV         R0, R7 
    /*0000ec08*/ BL          0x000000000000EC08          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ec0c*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000ec10*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000ec14*/ B           VencGetDeBreathEffect_xebcc
    VencGetDeBreathEffect_xec18:
    /*0000ec18*/ MOVW        R3, #7857                   @ 0x1eb1 
    /*0000ec1c*/ MOV         R1, #8 
    /*0000ec20*/ STR         R3, [SP] 
    /*0000ec24*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000ec28*/ LDR         R3, [PC, #104]              @ 0x000000000000ec98 
    /*0000ec2c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000ec30*/ STR         R4, [SP, #4] 
    /*0000ec34*/ MOV         R0, #3 
    /*0000ec38*/ BL          0x000000000000EC38          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ec3c*/ MOV         R0, R7 
    /*0000ec40*/ BL          0x000000000000EC40          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ec44*/ MOVW        R0, #32773                  @ 0x8005 
    /*0000ec48*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000ec4c*/ B           VencGetDeBreathEffect_xebcc
    VencGetDeBreathEffect_xec50:
    /*0000ec50*/ STR         R3, [SP, #8] 
    /*0000ec54*/ MOV         R1, #8 
    /*0000ec58*/ MOV         R3, #7872                   @ 0x1ec0 
    /*0000ec5c*/ STR         R4, [SP, #4] 
    /*0000ec60*/ STR         R3, [SP] 
    /*0000ec64*/ MOVW        R2, #0                      @ .LC343 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f78] 
    /*0000ec68*/ LDR         R3, [PC, #40]               @ 0x000000000000ec98 
    /*0000ec6c*/ MOVT        R2, #0                      @ .LC343 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f78] 
    /*0000ec70*/ MOV         R0, #3 
    /*0000ec74*/ BL          0x000000000000EC74          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ec78*/ MOV         R0, R7 
    /*0000ec7c*/ BL          0x000000000000EC7C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ec80*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000ec84*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000ec88*/ B           VencGetDeBreathEffect_xebcc
    VencGetDeBreathEffect_xec8c:
    /*0000ec8c*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000ec90*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000ec94*/ B           VencGetDeBreathEffect_xebcc
    /*0000ec98*/ ANDEQ       R0, R0, R8, LSR #11 
FUNC_END VencGetDeBreathEffect


FUNC_BEGIN VenCheckRoiCfg
    /*0000ec9c*/ CMP         R1, #0 
    /*0000eca0*/ PUSH        {R4, LR} 
    /*0000eca4*/ MOV         R4, R0 
    /*0000eca8*/ SUB         SP, SP, #8 
    /*0000ecac*/ BEQ         VenCheckRoiCfg_xecc0
    VenCheckRoiCfg_xecb0:
    /*0000ecb0*/ MOV         R0, R4 
    /*0000ecb4*/ ADD         SP, SP, #8 
    /*0000ecb8*/ POP         {R4, LR} 
    /*0000ecbc*/ B           0x00000000000004A4 
    VenCheckRoiCfg_xecc0:
    /*0000ecc0*/ STR         R1, [SP, #4] 
    /*0000ecc4*/ BL          0x00000000000002C8 
    /*0000ecc8*/ LDR         R1, [SP, #4] 
    /*0000eccc*/ CMP         R0, #0 
    /*0000ecd0*/ BEQ         VenCheckRoiCfg_xecb0
    /*0000ecd4*/ ADD         SP, SP, #8 
    /*0000ecd8*/ POP         {R4, PC} 
FUNC_END VenCheckRoiCfg


FUNC_BEGIN VencGetRoiCfg
    /*0000ecdc*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000ece0*/ SUBS        R6, R1, #0 
    /*0000ece4*/ SUB         SP, SP, #20 
    /*0000ece8*/ MOV         R4, R0 
    /*0000ecec*/ BEQ         VencGetRoiCfg_xedb4
    VencGetRoiCfg_xecf0:
    /*0000ecf0*/ CMP         R4, #0 
    /*0000ecf4*/ BLT         VencGetRoiCfg_xed9c
    /*0000ecf8*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000ecfc*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000ed00*/ LDR         R3, [R3] 
    /*0000ed04*/ CMP         R4, R3 
    /*0000ed08*/ BCS         VencGetRoiCfg_xed9c
    VencGetRoiCfg_xed0c:
    /*0000ed0c*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0000ed10*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000ed14*/ MUL         R5, R5, R4 
    /*0000ed18*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000ed1c*/ LDR         R9, [R3] 
    /*0000ed20*/ ADD         R7, R9, R5 
    /*0000ed24*/ ADD         R8, R7, #12416              @ 0x3080 
    /*0000ed28*/ ADD         R8, R8, #16 
    /*0000ed2c*/ MOV         R0, R8 
    /*0000ed30*/ BL          0x000000000000ED30          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000ed34*/ CMP         R0, #0 
    /*0000ed38*/ BNE         VencGetRoiCfg_xedfc
    /*0000ed3c*/ LDR         R3, [R9, R5] 
    /*0000ed40*/ CMP         R3, #1 
    /*0000ed44*/ BNE         VencGetRoiCfg_xedc4
    /*0000ed48*/ LDR         R3, [R7, #4] 
    /*0000ed4c*/ MOVW        R0, #265                    @ 0x109 
    /*0000ed50*/ CMP         R3, R0 
    /*0000ed54*/ CMPNE       R3, #96                     @ 0x60 
    /*0000ed58*/ MOVNE       R5, #1 
    /*0000ed5c*/ MOVEQ       R5, #0 
    /*0000ed60*/ BNE         VencGetRoiCfg_xee44
    /*0000ed64*/ LDR         R1, [R6] 
    /*0000ed68*/ CMP         R1, #7 
    /*0000ed6c*/ BHI         VencGetRoiCfg_xee08
    /*0000ed70*/ ADD         R1, R7, R1, LSL #5 
    /*0000ed74*/ MOV         R2, #32 
    /*0000ed78*/ ADD         R1, R1, #13824              @ 0x3600 
    /*0000ed7c*/ MOV         R0, R6 
    /*0000ed80*/ ADD         R1, R1, #44                 @ 0x2c 
    /*0000ed84*/ BL          0x000000000000ED84          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000ed88*/ MOV         R0, R8 
    /*0000ed8c*/ BL          0x000000000000ED8C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ed90*/ MOV         R0, R5 
    /*0000ed94*/ ADD         SP, SP, #20 
    /*0000ed98*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetRoiCfg_xed9c:
    /*0000ed9c*/ MOV         R0, R4 
    /*0000eda0*/ BL          0x0000000000000304 
    /*0000eda4*/ CMP         R0, #0 
    /*0000eda8*/ BEQ         VencGetRoiCfg_xed0c
    VencGetRoiCfg_xedac:
    /*0000edac*/ ADD         SP, SP, #20 
    /*0000edb0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetRoiCfg_xedb4:
    /*0000edb4*/ BL          0x00000000000002C8 
    /*0000edb8*/ CMP         R0, #0 
    /*0000edbc*/ BNE         VencGetRoiCfg_xedac
    /*0000edc0*/ B           VencGetRoiCfg_xecf0
    VencGetRoiCfg_xedc4:
    /*0000edc4*/ MOVW        R3, #8052                   @ 0x1f74 
    /*0000edc8*/ MOV         R1, #8 
    /*0000edcc*/ STR         R3, [SP] 
    /*0000edd0*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000edd4*/ LDR         R3, [PC, #164]              @ 0x000000000000ee80 
    /*0000edd8*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000eddc*/ STR         R4, [SP, #4] 
    /*0000ede0*/ MOV         R0, #3 
    /*0000ede4*/ BL          0x000000000000EDE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ede8*/ MOV         R0, R8 
    /*0000edec*/ BL          0x000000000000EDEC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000edf0*/ MOVW        R0, #32773                  @ 0x8005 
    /*0000edf4*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000edf8*/ B           VencGetRoiCfg_xedac
    VencGetRoiCfg_xedfc:
    /*0000edfc*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000ee00*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000ee04*/ B           VencGetRoiCfg_xedac
    VencGetRoiCfg_xee08:
    /*0000ee08*/ STR         R1, [SP, #8] 
    /*0000ee0c*/ MOVW        R3, #8065                   @ 0x1f81 
    /*0000ee10*/ MOV         R1, #8 
    /*0000ee14*/ STR         R3, [SP] 
    /*0000ee18*/ STR         R4, [SP, #4] 
    /*0000ee1c*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x390] 
    /*0000ee20*/ LDR         R3, [PC, #88]               @ 0x000000000000ee80 
    /*0000ee24*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x390] 
    /*0000ee28*/ MOV         R0, #3 
    /*0000ee2c*/ BL          0x000000000000EE2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ee30*/ MOV         R0, R8 
    /*0000ee34*/ BL          0x000000000000EE34          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ee38*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000ee3c*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000ee40*/ B           VencGetRoiCfg_xedac
    VencGetRoiCfg_xee44:
    /*0000ee44*/ STR         R3, [SP, #8] 
    /*0000ee48*/ MOV         R1, #8 
    /*0000ee4c*/ MOVW        R3, #8059                   @ 0x1f7b 
    /*0000ee50*/ STR         R4, [SP, #4] 
    /*0000ee54*/ STR         R3, [SP] 
    /*0000ee58*/ MOVW        R2, #0                      @ .LC344 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3fcc] 
    /*0000ee5c*/ LDR         R3, [PC, #28]               @ 0x000000000000ee80 
    /*0000ee60*/ MOVT        R2, #0                      @ .LC344 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3fcc] 
    /*0000ee64*/ MOV         R0, #3 
    /*0000ee68*/ BL          0x000000000000EE68          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ee6c*/ MOV         R0, R8 
    /*0000ee70*/ BL          0x000000000000EE70          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ee74*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000ee78*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000ee7c*/ B           VencGetRoiCfg_xedac
    /*0000ee80*/ ANDEQ       R0, R0, R0, ASR #11 
FUNC_END VencGetRoiCfg


FUNC_BEGIN VencSetRoiCfg
    /*0000ee84*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000ee88*/ SUBS        R5, R1, #0 
    /*0000ee8c*/ SUB         SP, SP, #24 
    /*0000ee90*/ MOV         R3, #0 
    /*0000ee94*/ MOV         R4, R0 
    /*0000ee98*/ STR         R3, [SP, #20] 
    /*0000ee9c*/ BEQ         VencSetRoiCfg_xefc8
    VencSetRoiCfg_xeea0:
    /*0000eea0*/ CMP         R4, #0 
    /*0000eea4*/ BLT         VencSetRoiCfg_xefac
    /*0000eea8*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000eeac*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000eeb0*/ LDR         R3, [R3] 
    /*0000eeb4*/ CMP         R4, R3 
    /*0000eeb8*/ BCS         VencSetRoiCfg_xefac
    VencSetRoiCfg_xeebc:
    /*0000eebc*/ MOVW        R6, #36240                  @ 0x8d90 
    /*0000eec0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000eec4*/ MUL         R6, R6, R4 
    /*0000eec8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000eecc*/ LDR         R9, [R3] 
    /*0000eed0*/ ADD         R7, R9, R6 
    /*0000eed4*/ ADD         R8, R7, #12416              @ 0x3080 
    /*0000eed8*/ ADD         R8, R8, #16 
    /*0000eedc*/ MOV         R0, R8 
    /*0000eee0*/ BL          0x000000000000EEE0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000eee4*/ CMP         R0, #0 
    /*0000eee8*/ BNE         VencSetRoiCfg_xf010
    /*0000eeec*/ LDR         R9, [R9, R6] 
    /*0000eef0*/ CMP         R9, #1 
    /*0000eef4*/ BNE         VencSetRoiCfg_xefd8
    /*0000eef8*/ LDR         R3, [R7, #4] 
    /*0000eefc*/ MOVW        R2, #265                    @ 0x109 
    /*0000ef00*/ CMP         R3, R2 
    /*0000ef04*/ CMPNE       R3, #96                     @ 0x60 
    /*0000ef08*/ BNE         VencSetRoiCfg_xf01c
    /*0000ef0c*/ MOV         R0, R4 
    /*0000ef10*/ MOV         R1, R5 
    /*0000ef14*/ BL          0x000000000000EF14          @ VenCheckRoiCfg [R_ARM_CALL: .text+0xec9c] 
    /*0000ef18*/ SUBS        R6, R0, #0 
    /*0000ef1c*/ BNE         VencSetRoiCfg_xef98
    /*0000ef20*/ ADD         SL, R7, #64                 @ 0x40 
    /*0000ef24*/ ADD         R1, SP, #20 
    /*0000ef28*/ MOVW        R4, #13868                  @ 0x362c 
    /*0000ef2c*/ MOV         R0, SL 
    /*0000ef30*/ BL          0x000000000000EF30          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000ef34*/ LDR         R0, [R5] 
    /*0000ef38*/ MOV         R2, #32 
    /*0000ef3c*/ MOV         R1, R5 
    /*0000ef40*/ ADD         R0, R4, R0, LSL #5 
    /*0000ef44*/ ADD         R0, R7, R0 
    /*0000ef48*/ BL          0x000000000000EF48          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000ef4c*/ LDR         R0, [R5] 
    /*0000ef50*/ MOV         R2, #32 
    /*0000ef54*/ MOV         R1, R5 
    /*0000ef58*/ ADD         R0, R0, #8 
    /*0000ef5c*/ ADD         R0, R4, R0, LSL #5 
    /*0000ef60*/ ADD         R0, R7, R0 
    /*0000ef64*/ BL          0x000000000000EF64          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000ef68*/ LDR         R0, [R5] 
    /*0000ef6c*/ MOV         R1, R5 
    /*0000ef70*/ MOV         R2, #32 
    /*0000ef74*/ ADD         R0, R0, #16 
    /*0000ef78*/ ADD         R0, R4, R0, LSL #5 
    /*0000ef7c*/ ADD         R0, R7, R0 
    /*0000ef80*/ ADD         R7, R7, #12288              @ 0x3000 
    /*0000ef84*/ BL          0x000000000000EF84          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000ef88*/ ADD         R1, SP, #20 
    /*0000ef8c*/ MOV         R0, SL 
    /*0000ef90*/ STR         R9, [R7, #1576]             @ 0x628 
    /*0000ef94*/ BL          0x000000000000EF94          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VencSetRoiCfg_xef98:
    /*0000ef98*/ MOV         R0, R8 
    /*0000ef9c*/ BL          0x000000000000EF9C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000efa0*/ MOV         R0, R6 
    /*0000efa4*/ ADD         SP, SP, #24 
    /*0000efa8*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencSetRoiCfg_xefac:
    /*0000efac*/ MOV         R0, R4 
    /*0000efb0*/ BL          0x0000000000000304 
    /*0000efb4*/ SUBS        R6, R0, #0 
    /*0000efb8*/ BEQ         VencSetRoiCfg_xeebc
    VencSetRoiCfg_xefbc:
    /*0000efbc*/ MOV         R0, R6 
    /*0000efc0*/ ADD         SP, SP, #24 
    /*0000efc4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencSetRoiCfg_xefc8:
    /*0000efc8*/ BL          0x00000000000002C8 
    /*0000efcc*/ SUBS        R6, R0, #0 
    /*0000efd0*/ BNE         VencSetRoiCfg_xefbc
    /*0000efd4*/ B           VencSetRoiCfg_xeea0
    VencSetRoiCfg_xefd8:
    /*0000efd8*/ MOVW        R3, #8110                   @ 0x1fae 
    /*0000efdc*/ MOV         R1, #8 
    /*0000efe0*/ STR         R3, [SP] 
    /*0000efe4*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000efe8*/ LDR         R3, [PC, #104]              @ 0x000000000000f058 
    /*0000efec*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000eff0*/ STR         R4, [SP, #4] 
    /*0000eff4*/ MOV         R0, #3 
    /*0000eff8*/ BL          0x000000000000EFF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000effc*/ MOV         R0, R8 
    /*0000f000*/ MOVW        R6, #32773                  @ 0x8005 
    /*0000f004*/ BL          0x000000000000F004          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f008*/ MOVT        R6, #40968                  @ 0xa008 
    /*0000f00c*/ B           VencSetRoiCfg_xefbc
    VencSetRoiCfg_xf010:
    /*0000f010*/ MOV         R6, #65024                  @ 0xfe00 
    /*0000f014*/ MOVT        R6, #65535                  @ 0xffff 
    /*0000f018*/ B           VencSetRoiCfg_xefbc
    VencSetRoiCfg_xf01c:
    /*0000f01c*/ STR         R3, [SP, #8] 
    /*0000f020*/ MOV         R1, #8 
    /*0000f024*/ MOVW        R3, #8117                   @ 0x1fb5 
    /*0000f028*/ STR         R4, [SP, #4] 
    /*0000f02c*/ STR         R3, [SP] 
    /*0000f030*/ MOVW        R2, #0                      @ .LC344 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3fcc] 
    /*0000f034*/ LDR         R3, [PC, #28]               @ 0x000000000000f058 
    /*0000f038*/ MOVT        R2, #0                      @ .LC344 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3fcc] 
    /*0000f03c*/ MOV         R0, #3 
    /*0000f040*/ MOVW        R6, #32776                  @ 0x8008 
    /*0000f044*/ BL          0x000000000000F044          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f048*/ MOV         R0, R8 
    /*0000f04c*/ BL          0x000000000000F04C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f050*/ MOVT        R6, #40968                  @ 0xa008 
    /*0000f054*/ B           VencSetRoiCfg_xefbc
    /*0000f058*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VencSetRoiCfg


FUNC_BEGIN VencGetRoiCfgEx
    /*0000f05c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000f060*/ SUBS        R4, R1, #0 
    /*0000f064*/ SUB         SP, SP, #20 
    /*0000f068*/ MOV         R5, R0 
    /*0000f06c*/ BEQ         VencGetRoiCfgEx_xf1e0
    VencGetRoiCfgEx_xf070:
    /*0000f070*/ CMP         R5, #0 
    /*0000f074*/ BLT         VencGetRoiCfgEx_xf1c8
    /*0000f078*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000f07c*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000f080*/ LDR         R3, [R3] 
    /*0000f084*/ CMP         R5, R3 
    /*0000f088*/ BCS         VencGetRoiCfgEx_xf1c8
    VencGetRoiCfgEx_xf08c:
    /*0000f08c*/ MOVW        R6, #36240                  @ 0x8d90 
    /*0000f090*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000f094*/ MUL         R6, R6, R5 
    /*0000f098*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000f09c*/ LDR         R9, [R3] 
    /*0000f0a0*/ ADD         R7, R9, R6 
    /*0000f0a4*/ ADD         R8, R7, #12416              @ 0x3080 
    /*0000f0a8*/ ADD         R8, R8, #16 
    /*0000f0ac*/ MOV         R0, R8 
    /*0000f0b0*/ BL          0x000000000000F0B0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000f0b4*/ CMP         R0, #0 
    /*0000f0b8*/ BNE         VencGetRoiCfgEx_xf228
    /*0000f0bc*/ LDR         R3, [R9, R6] 
    /*0000f0c0*/ CMP         R3, #1 
    /*0000f0c4*/ BNE         VencGetRoiCfgEx_xf1f0
    /*0000f0c8*/ LDR         R3, [R7, #4] 
    /*0000f0cc*/ MOVW        R0, #265                    @ 0x109 
    /*0000f0d0*/ CMP         R3, R0 
    /*0000f0d4*/ CMPNE       R3, #96                     @ 0x60 
    /*0000f0d8*/ MOVNE       R6, #1 
    /*0000f0dc*/ MOVEQ       R6, #0 
    /*0000f0e0*/ BNE         VencGetRoiCfgEx_xf270
    /*0000f0e4*/ LDR         R3, [R4] 
    /*0000f0e8*/ CMP         R3, #7 
    /*0000f0ec*/ BHI         VencGetRoiCfgEx_xf234
    /*0000f0f0*/ LSL         R5, R3, #5 
    /*0000f0f4*/ MOVW        R2, #13872                  @ 0x3630 
    /*0000f0f8*/ ADD         IP, R7, R5 
    /*0000f0fc*/ ADD         R1, R3, #8 
    /*0000f100*/ ADD         R3, R3, #16 
    /*0000f104*/ MOVW        R0, #13876                  @ 0x3634 
    /*0000f108*/ LDR         LR, [IP, R2] 
    /*0000f10c*/ ADD         R1, R7, R1, LSL #5 
    /*0000f110*/ ADD         R3, R7, R3, LSL #5 
    /*0000f114*/ STR         LR, [R4, #4] 
    /*0000f118*/ MOVW        LR, #14132                  @ 0x3734 
    /*0000f11c*/ LDR         R1, [R1, R2] 
    /*0000f120*/ STR         R1, [R4, #8] 
    /*0000f124*/ MOVW        R1, #14388                  @ 0x3834 
    /*0000f128*/ LDR         R3, [R3, R2] 
    /*0000f12c*/ MOVW        R2, #13880                  @ 0x3638 
    /*0000f130*/ STR         R3, [R4, #12] 
    /*0000f134*/ LDR         R3, [IP, R0] 
    /*0000f138*/ MOVW        R0, #14136                  @ 0x3738 
    /*0000f13c*/ STR         R3, [R4, #16] 
    /*0000f140*/ MOVW        R3, #14392                  @ 0x3838 
    /*0000f144*/ LDR         LR, [IP, LR] 
    /*0000f148*/ STR         LR, [R4, #20] 
    /*0000f14c*/ LDR         LR, [IP, R1] 
    /*0000f150*/ ADD         R1, R5, #13824              @ 0x3600 
    /*0000f154*/ ADD         R1, R1, #60                 @ 0x3c 
    /*0000f158*/ ADD         R1, R7, R1 
    /*0000f15c*/ STR         LR, [R4, #24] 
    /*0000f160*/ LDR         LR, [IP, R2] 
    /*0000f164*/ MOV         R2, #16 
    /*0000f168*/ STR         LR, [R4, #28] 
    /*0000f16c*/ LDR         LR, [IP, R0] 
    /*0000f170*/ ADD         R0, R4, #40                 @ 0x28 
    /*0000f174*/ STR         LR, [R4, #32] 
    /*0000f178*/ LDR         R3, [IP, R3] 
    /*0000f17c*/ STR         R3, [R4, #36]               @ 0x24 
    /*0000f180*/ BL          0x000000000000F180          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000f184*/ ADD         R1, R5, #14080              @ 0x3700 
    /*0000f188*/ ADD         R1, R1, #60                 @ 0x3c 
    /*0000f18c*/ MOV         R2, #16 
    /*0000f190*/ ADD         R1, R7, R1 
    /*0000f194*/ ADD         R0, R4, #56                 @ 0x38 
    /*0000f198*/ BL          0x000000000000F198          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000f19c*/ ADD         R1, R5, #14336              @ 0x3800 
    /*0000f1a0*/ ADD         R1, R1, #60                 @ 0x3c 
    /*0000f1a4*/ MOV         R2, #16 
    /*0000f1a8*/ ADD         R1, R7, R1 
    /*0000f1ac*/ ADD         R0, R4, #72                 @ 0x48 
    /*0000f1b0*/ BL          0x000000000000F1B0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000f1b4*/ MOV         R0, R8 
    /*0000f1b8*/ BL          0x000000000000F1B8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f1bc*/ MOV         R0, R6 
    /*0000f1c0*/ ADD         SP, SP, #20 
    /*0000f1c4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetRoiCfgEx_xf1c8:
    /*0000f1c8*/ MOV         R0, R5 
    /*0000f1cc*/ BL          0x0000000000000304 
    /*0000f1d0*/ CMP         R0, #0 
    /*0000f1d4*/ BEQ         VencGetRoiCfgEx_xf08c
    VencGetRoiCfgEx_xf1d8:
    /*0000f1d8*/ ADD         SP, SP, #20 
    /*0000f1dc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetRoiCfgEx_xf1e0:
    /*0000f1e0*/ BL          0x00000000000002C8 
    /*0000f1e4*/ CMP         R0, #0 
    /*0000f1e8*/ BNE         VencGetRoiCfgEx_xf1d8
    /*0000f1ec*/ B           VencGetRoiCfgEx_xf070
    VencGetRoiCfgEx_xf1f0:
    /*0000f1f0*/ MOVW        R3, #8161                   @ 0x1fe1 
    /*0000f1f4*/ MOV         R1, #8 
    /*0000f1f8*/ STR         R3, [SP] 
    /*0000f1fc*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000f200*/ LDR         R3, [PC, #164]              @ 0x000000000000f2ac 
    /*0000f204*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000f208*/ STR         R5, [SP, #4] 
    /*0000f20c*/ MOV         R0, #3 
    /*0000f210*/ BL          0x000000000000F210          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f214*/ MOV         R0, R8 
    /*0000f218*/ BL          0x000000000000F218          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f21c*/ MOVW        R0, #32773                  @ 0x8005 
    /*0000f220*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000f224*/ B           VencGetRoiCfgEx_xf1d8
    VencGetRoiCfgEx_xf228:
    /*0000f228*/ MOV         R0, #65024                  @ 0xfe00 
    /*0000f22c*/ MOVT        R0, #65535                  @ 0xffff 
    /*0000f230*/ B           VencGetRoiCfgEx_xf1d8
    VencGetRoiCfgEx_xf234:
    /*0000f234*/ STR         R3, [SP, #8] 
    /*0000f238*/ MOV         R1, #8 
    /*0000f23c*/ MOVW        R3, #8175                   @ 0x1fef 
    /*0000f240*/ STR         R5, [SP, #4] 
    /*0000f244*/ STR         R3, [SP] 
    /*0000f248*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x390] 
    /*0000f24c*/ LDR         R3, [PC, #88]               @ 0x000000000000f2ac 
    /*0000f250*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x390] 
    /*0000f254*/ MOV         R0, #3 
    /*0000f258*/ BL          0x000000000000F258          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f25c*/ MOV         R0, R8 
    /*0000f260*/ BL          0x000000000000F260          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f264*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000f268*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000f26c*/ B           VencGetRoiCfgEx_xf1d8
    VencGetRoiCfgEx_xf270:
    /*0000f270*/ STR         R3, [SP, #8] 
    /*0000f274*/ MOV         R1, #8 
    /*0000f278*/ MOVW        R3, #8168                   @ 0x1fe8 
    /*0000f27c*/ STR         R5, [SP, #4] 
    /*0000f280*/ STR         R3, [SP] 
    /*0000f284*/ MOVW        R2, #0                      @ .LC344 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3fcc] 
    /*0000f288*/ LDR         R3, [PC, #28]               @ 0x000000000000f2ac 
    /*0000f28c*/ MOVT        R2, #0                      @ .LC344 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3fcc] 
    /*0000f290*/ MOV         R0, #3 
    /*0000f294*/ BL          0x000000000000F294          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f298*/ MOV         R0, R8 
    /*0000f29c*/ BL          0x000000000000F29C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f2a0*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000f2a4*/ MOVT        R0, #40968                  @ 0xa008 
    /*0000f2a8*/ B           VencGetRoiCfgEx_xf1d8
    /*0000f2ac*/ ANDEQ       R0, R0, R0, ROR #11 
FUNC_END VencGetRoiCfgEx


FUNC_BEGIN VencSetRoiCfgEx
    /*0000f2b0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000f2b4*/ SUBS        R4, R1, #0 
    /*0000f2b8*/ SUB         SP, SP, #60                 @ 0x3c 
    /*0000f2bc*/ MOV         R3, #0 
    /*0000f2c0*/ MOV         R6, R0 
    /*0000f2c4*/ STR         R3, [SP, #20] 
    /*0000f2c8*/ BEQ         VencSetRoiCfgEx_xf50c
    VencSetRoiCfgEx_xf2cc:
    /*0000f2cc*/ CMP         R6, #0 
    /*0000f2d0*/ BLT         VencSetRoiCfgEx_xf4f0
    /*0000f2d4*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000f2d8*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000f2dc*/ LDR         R3, [R3] 
    /*0000f2e0*/ CMP         R6, R3 
    /*0000f2e4*/ BCS         VencSetRoiCfgEx_xf4f0
    VencSetRoiCfgEx_xf2e8:
    /*0000f2e8*/ MOVW        R7, #36240                  @ 0x8d90 
    /*0000f2ec*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000f2f0*/ MUL         R7, R7, R6 
    /*0000f2f4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000f2f8*/ LDR         R8, [R3] 
    /*0000f2fc*/ ADD         R5, R8, R7 
    /*0000f300*/ ADD         SL, R5, #12416              @ 0x3080 
    /*0000f304*/ ADD         SL, SL, #16 
    /*0000f308*/ MOV         R0, SL 
    /*0000f30c*/ BL          0x000000000000F30C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000f310*/ CMP         R0, #0 
    /*0000f314*/ BNE         VencSetRoiCfgEx_xf554
    /*0000f318*/ LDR         R3, [R8, R7] 
    /*0000f31c*/ CMP         R3, #1 
    /*0000f320*/ BNE         VencSetRoiCfgEx_xf51c
    /*0000f324*/ LDR         R3, [R5, #4] 
    /*0000f328*/ MOVW        R2, #265                    @ 0x109 
    /*0000f32c*/ CMP         R3, R2 
    /*0000f330*/ CMPNE       R3, #96                     @ 0x60 
    /*0000f334*/ ADDEQ       R8, R4, #4 
    /*0000f338*/ ADDEQ       FP, R4, #16 
    /*0000f33c*/ MOVEQ       R7, R4 
    /*0000f340*/ BNE         VencSetRoiCfgEx_xf560
    VencSetRoiCfgEx_xf344:
    /*0000f344*/ LDR         R3, [R8], #4 
    /*0000f348*/ ADD         R1, SP, #24 
    /*0000f34c*/ LDR         R2, [R7, #40]               @ 0x28 
    /*0000f350*/ MOV         R0, R6 
    /*0000f354*/ LDR         IP, [R4] 
    /*0000f358*/ ADD         R7, R7, #16 
    /*0000f35c*/ STR         R3, [SP, #28] 
    /*0000f360*/ LDR         R3, [R8, #8] 
    /*0000f364*/ STR         R2, [SP, #40]               @ 0x28 
    /*0000f368*/ LDR         R2, [R8, #20] 
    /*0000f36c*/ STR         R3, [SP, #32] 
    /*0000f370*/ LDR         R3, [R7, #28] 
    /*0000f374*/ STR         R2, [SP, #36]               @ 0x24 
    /*0000f378*/ LDR         R2, [R7, #32] 
    /*0000f37c*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000f380*/ LDR         R3, [R7, #36]               @ 0x24 
    /*0000f384*/ STR         IP, [SP, #24] 
    /*0000f388*/ STR         R2, [SP, #48]               @ 0x30 
    /*0000f38c*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000f390*/ BL          0x00000000000004A4 
    /*0000f394*/ SUBS        R9, R0, #0 
    /*0000f398*/ BNE         VencSetRoiCfgEx_xf4dc
    /*0000f39c*/ CMP         FP, R8 
    /*0000f3a0*/ BNE         VencSetRoiCfgEx_xf344
    /*0000f3a4*/ ADD         R7, R5, #64                 @ 0x40 
    /*0000f3a8*/ ADD         R1, SP, #20 
    /*0000f3ac*/ MOV         R8, R4 
    /*0000f3b0*/ MOV         R6, R4 
    /*0000f3b4*/ MOV         R0, R7 
    /*0000f3b8*/ BL          0x000000000000F3B8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000f3bc*/ LDR         R3, [R4] 
    /*0000f3c0*/ LDR         R0, [R4, #4] 
    /*0000f3c4*/ MOVW        R2, #13872                  @ 0x3630 
    /*0000f3c8*/ MOVW        R1, #13876                  @ 0x3634 
    /*0000f3cc*/ ADD         R3, R5, R3, LSL #5 
    /*0000f3d0*/ STR         R0, [R3, R2] 
    /*0000f3d4*/ LDR         R3, [R4] 
    /*0000f3d8*/ LDR         R0, [R4, #8] 
    /*0000f3dc*/ ADD         R3, R3, #8 
    /*0000f3e0*/ ADD         R3, R5, R3, LSL #5 
    /*0000f3e4*/ STR         R0, [R3, R2] 
    /*0000f3e8*/ LDR         R3, [R4] 
    /*0000f3ec*/ LDR         R0, [R4, #12] 
    /*0000f3f0*/ ADD         R3, R3, #16 
    /*0000f3f4*/ ADD         R3, R5, R3, LSL #5 
    /*0000f3f8*/ STR         R0, [R3, R2] 
    /*0000f3fc*/ MOVW        R0, #14132                  @ 0x3734 
    /*0000f400*/ LDR         R3, [R4] 
    /*0000f404*/ LDR         R2, [R4, #16] 
    /*0000f408*/ ADD         R3, R5, R3, LSL #5 
    /*0000f40c*/ STR         R2, [R3, R1] 
    /*0000f410*/ MOVW        R2, #14388                  @ 0x3834 
    /*0000f414*/ LDR         R3, [R4] 
    /*0000f418*/ LDR         R1, [R4, #20] 
    /*0000f41c*/ ADD         R3, R5, R3, LSL #5 
    /*0000f420*/ STR         R1, [R3, R0] 
    /*0000f424*/ MOVW        R1, #13880                  @ 0x3638 
    /*0000f428*/ LDR         R3, [R4] 
    /*0000f42c*/ LDR         R0, [R4, #24] 
    /*0000f430*/ ADD         R3, R5, R3, LSL #5 
    /*0000f434*/ STR         R0, [R3, R2] 
    /*0000f438*/ MOVW        R2, #14136                  @ 0x3738 
    /*0000f43c*/ LDR         R3, [R4] 
    /*0000f440*/ LDR         R0, [R4, #28] 
    /*0000f444*/ ADD         R3, R5, R3, LSL #5 
    /*0000f448*/ STR         R0, [R3, R1] 
    /*0000f44c*/ MOVW        R1, #14392                  @ 0x3838 
    /*0000f450*/ LDR         R3, [R4] 
    /*0000f454*/ LDR         R0, [R4, #32] 
    /*0000f458*/ ADD         R3, R5, R3, LSL #5 
    /*0000f45c*/ STR         R0, [R3, R2] 
    /*0000f460*/ MOV         R2, #16 
    /*0000f464*/ LDR         R3, [R4] 
    /*0000f468*/ LDR         R0, [R4, #36]               @ 0x24 
    /*0000f46c*/ ADD         R3, R5, R3, LSL #5 
    /*0000f470*/ STR         R0, [R3, R1] 
    /*0000f474*/ ADD         R1, R4, #40                 @ 0x28 
    /*0000f478*/ LDR         R0, [R8], #56               @ 0x38 
    /*0000f47c*/ ADD         R0, R5, R0, LSL #5 
    /*0000f480*/ ADD         R0, R0, #13824              @ 0x3600 
    /*0000f484*/ ADD         R0, R0, #60                 @ 0x3c 
    /*0000f488*/ BL          0x000000000000F488          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000f48c*/ LDR         R0, [R6], #72               @ 0x48 
    /*0000f490*/ MOV         R1, R8 
    /*0000f494*/ MOV         R2, #16 
    /*0000f498*/ ADD         R0, R5, R0, LSL #5 
    /*0000f49c*/ ADD         R0, R0, #14080              @ 0x3700 
    /*0000f4a0*/ ADD         R0, R0, #60                 @ 0x3c 
    /*0000f4a4*/ BL          0x000000000000F4A4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000f4a8*/ LDR         R0, [R4] 
    /*0000f4ac*/ MOV         R1, R6 
    /*0000f4b0*/ MOV         R2, #16 
    /*0000f4b4*/ ADD         R0, R5, R0, LSL #5 
    /*0000f4b8*/ ADD         R5, R5, #12288              @ 0x3000 
    /*0000f4bc*/ ADD         R0, R0, #14336              @ 0x3800 
    /*0000f4c0*/ ADD         R0, R0, #60                 @ 0x3c 
    /*0000f4c4*/ BL          0x000000000000F4C4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000f4c8*/ MOV         R3, #1 
    /*0000f4cc*/ ADD         R1, SP, #20 
    /*0000f4d0*/ MOV         R0, R7 
    /*0000f4d4*/ STR         R3, [R5, #1576]             @ 0x628 
    /*0000f4d8*/ BL          0x000000000000F4D8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VencSetRoiCfgEx_xf4dc:
    /*0000f4dc*/ MOV         R0, SL 
    /*0000f4e0*/ BL          0x000000000000F4E0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f4e4*/ MOV         R0, R9 
    /*0000f4e8*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0000f4ec*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSetRoiCfgEx_xf4f0:
    /*0000f4f0*/ MOV         R0, R6 
    /*0000f4f4*/ BL          0x0000000000000304 
    /*0000f4f8*/ SUBS        R9, R0, #0 
    /*0000f4fc*/ BEQ         VencSetRoiCfgEx_xf2e8
    VencSetRoiCfgEx_xf500:
    /*0000f500*/ MOV         R0, R9 
    /*0000f504*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0000f508*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSetRoiCfgEx_xf50c:
    /*0000f50c*/ BL          0x00000000000002C8 
    /*0000f510*/ SUBS        R9, R0, #0 
    /*0000f514*/ BNE         VencSetRoiCfgEx_xf500
    /*0000f518*/ B           VencSetRoiCfgEx_xf2cc
    VencSetRoiCfgEx_xf51c:
    /*0000f51c*/ MOVW        R3, #8220                   @ 0x201c 
    /*0000f520*/ MOV         R1, #8 
    /*0000f524*/ STR         R3, [SP] 
    /*0000f528*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000f52c*/ LDR         R3, [PC, #104]              @ 0x000000000000f59c 
    /*0000f530*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000f534*/ STR         R6, [SP, #4] 
    /*0000f538*/ MOV         R0, #3 
    /*0000f53c*/ BL          0x000000000000F53C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f540*/ MOV         R0, SL 
    /*0000f544*/ MOVW        R9, #32773                  @ 0x8005 
    /*0000f548*/ BL          0x000000000000F548          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f54c*/ MOVT        R9, #40968                  @ 0xa008 
    /*0000f550*/ B           VencSetRoiCfgEx_xf500
    VencSetRoiCfgEx_xf554:
    /*0000f554*/ MOV         R9, #65024                  @ 0xfe00 
    /*0000f558*/ MOVT        R9, #65535                  @ 0xffff 
    /*0000f55c*/ B           VencSetRoiCfgEx_xf500
    VencSetRoiCfgEx_xf560:
    /*0000f560*/ STR         R3, [SP, #8] 
    /*0000f564*/ MOV         R1, #8 
    /*0000f568*/ MOVW        R3, #8227                   @ 0x2023 
    /*0000f56c*/ STR         R6, [SP, #4] 
    /*0000f570*/ STR         R3, [SP] 
    /*0000f574*/ MOVW        R2, #0                      @ .LC344 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3fcc] 
    /*0000f578*/ LDR         R3, [PC, #28]               @ 0x000000000000f59c 
    /*0000f57c*/ MOVT        R2, #0                      @ .LC344 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3fcc] 
    /*0000f580*/ MOV         R0, #3 
    /*0000f584*/ MOVW        R9, #32776                  @ 0x8008 
    /*0000f588*/ BL          0x000000000000F588          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f58c*/ MOV         R0, SL 
    /*0000f590*/ BL          0x000000000000F590          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f594*/ MOVT        R9, #40968                  @ 0xa008 
    /*0000f598*/ B           VencSetRoiCfgEx_xf500
    /*0000f59c*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VencSetRoiCfgEx


FUNC_BEGIN VencSetH264SliceSplit
    /*0000f5a0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000f5a4*/ SUBS        R7, R1, #0 
    /*0000f5a8*/ SUB         SP, SP, #12 
    /*0000f5ac*/ MOV         R4, R0 
    /*0000f5b0*/ BEQ         VencSetH264SliceSplit_xf6b4
    VencSetH264SliceSplit_xf5b4:
    /*0000f5b4*/ CMP         R4, #0 
    /*0000f5b8*/ BLT         VencSetH264SliceSplit_xf658
    /*0000f5bc*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000f5c0*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000f5c4*/ LDR         R3, [R3] 
    /*0000f5c8*/ CMP         R4, R3 
    /*0000f5cc*/ BCS         VencSetH264SliceSplit_xf658
    VencSetH264SliceSplit_xf5d0:
    /*0000f5d0*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0000f5d4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000f5d8*/ MUL         R5, R5, R4 
    /*0000f5dc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000f5e0*/ LDR         R8, [R3] 
    /*0000f5e4*/ ADD         R9, R8, R5 
    /*0000f5e8*/ ADD         R6, R9, #12416              @ 0x3080 
    /*0000f5ec*/ ADD         R6, R6, #16 
    /*0000f5f0*/ MOV         R0, R6 
    /*0000f5f4*/ BL          0x000000000000F5F4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000f5f8*/ CMP         R0, #0 
    /*0000f5fc*/ BNE         VencSetH264SliceSplit_xf6fc
    /*0000f600*/ LDR         R3, [R8, R5] 
    /*0000f604*/ CMP         R3, #1 
    /*0000f608*/ BNE         VencSetH264SliceSplit_xf6c4
    /*0000f60c*/ LDR         R3, [R9, #4] 
    /*0000f610*/ CMP         R3, #96                     @ 0x60 
    /*0000f614*/ BNE         VencSetH264SliceSplit_xf674
    /*0000f618*/ MOV         R0, #10 
    /*0000f61c*/ BL          0x000000000000F61C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000f620*/ MOV         R1, R7 
    /*0000f624*/ LDR         R3, [R0, #48]               @ 0x30 
    /*0000f628*/ MOV         R0, R4 
    /*0000f62c*/ BLX         R3 
    /*0000f630*/ MOV         R5, R0 
    /*0000f634*/ MOV         R0, R6 
    /*0000f638*/ BL          0x000000000000F638          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f63c*/ CMP         R5, #0 
    /*0000f640*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*0000f644*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*0000f648*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*0000f64c*/ MOV         R0, R5 
    /*0000f650*/ ADD         SP, SP, #12 
    /*0000f654*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264SliceSplit_xf658:
    /*0000f658*/ MOV         R0, R4 
    /*0000f65c*/ BL          0x0000000000000304 
    /*0000f660*/ SUBS        R5, R0, #0 
    /*0000f664*/ BEQ         VencSetH264SliceSplit_xf5d0
    VencSetH264SliceSplit_xf668:
    /*0000f668*/ MOV         R0, R5 
    /*0000f66c*/ ADD         SP, SP, #12 
    /*0000f670*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264SliceSplit_xf674:
    /*0000f674*/ STR         R3, [SP, #4] 
    /*0000f678*/ MOV         R1, #8 
    /*0000f67c*/ MOVW        R3, #8327                   @ 0x2087 
    /*0000f680*/ MOVW        R2, #0                      @ .LC345 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4014] 
    /*0000f684*/ STR         R3, [SP] 
    /*0000f688*/ MOVT        R2, #0                      @ .LC345 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4014] 
    /*0000f68c*/ LDR         R3, [PC, #116]              @ 0x000000000000f708 
    /*0000f690*/ MOV         R0, #3 
    /*0000f694*/ BL          0x000000000000F694          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f698*/ MOV         R0, R6 
    /*0000f69c*/ BL          0x000000000000F69C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f6a0*/ MOVW        R5, #32776                  @ 0x8008 
    /*0000f6a4*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000f6a8*/ MOV         R0, R5 
    /*0000f6ac*/ ADD         SP, SP, #12 
    /*0000f6b0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264SliceSplit_xf6b4:
    /*0000f6b4*/ BL          0x00000000000002C8 
    /*0000f6b8*/ SUBS        R5, R0, #0 
    /*0000f6bc*/ BNE         VencSetH264SliceSplit_xf668
    /*0000f6c0*/ B           VencSetH264SliceSplit_xf5b4
    VencSetH264SliceSplit_xf6c4:
    /*0000f6c4*/ MOVW        R3, #8312                   @ 0x2078 
    /*0000f6c8*/ MOV         R1, #8 
    /*0000f6cc*/ STR         R3, [SP] 
    /*0000f6d0*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000f6d4*/ LDR         R3, [PC, #44]               @ 0x000000000000f708 
    /*0000f6d8*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000f6dc*/ STR         R4, [SP, #4] 
    /*0000f6e0*/ MOV         R0, #3 
    /*0000f6e4*/ BL          0x000000000000F6E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f6e8*/ MOV         R0, R6 
    /*0000f6ec*/ MOVW        R5, #32773                  @ 0x8005 
    /*0000f6f0*/ BL          0x000000000000F6F0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f6f4*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000f6f8*/ B           VencSetH264SliceSplit_xf668
    VencSetH264SliceSplit_xf6fc:
    /*0000f6fc*/ MOV         R5, #65024                  @ 0xfe00 
    /*0000f700*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000f704*/ B           VencSetH264SliceSplit_xf668
    /*0000f708*/ ANDEQ       R0, R0, R0, LSL #12 
FUNC_END VencSetH264SliceSplit


FUNC_BEGIN VencGetH264SliceSplit
    /*0000f70c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000f710*/ SUBS        R7, R1, #0 
    /*0000f714*/ SUB         SP, SP, #12 
    /*0000f718*/ MOV         R4, R0 
    /*0000f71c*/ BEQ         VencGetH264SliceSplit_xf820
    VencGetH264SliceSplit_xf720:
    /*0000f720*/ CMP         R4, #0 
    /*0000f724*/ BLT         VencGetH264SliceSplit_xf7c4
    /*0000f728*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000f72c*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000f730*/ LDR         R3, [R3] 
    /*0000f734*/ CMP         R4, R3 
    /*0000f738*/ BCS         VencGetH264SliceSplit_xf7c4
    VencGetH264SliceSplit_xf73c:
    /*0000f73c*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0000f740*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000f744*/ MUL         R5, R5, R4 
    /*0000f748*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000f74c*/ LDR         R8, [R3] 
    /*0000f750*/ ADD         R9, R8, R5 
    /*0000f754*/ ADD         R6, R9, #12416              @ 0x3080 
    /*0000f758*/ ADD         R6, R6, #16 
    /*0000f75c*/ MOV         R0, R6 
    /*0000f760*/ BL          0x000000000000F760          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000f764*/ CMP         R0, #0 
    /*0000f768*/ BNE         VencGetH264SliceSplit_xf868
    /*0000f76c*/ LDR         R3, [R8, R5] 
    /*0000f770*/ CMP         R3, #1 
    /*0000f774*/ BNE         VencGetH264SliceSplit_xf830
    /*0000f778*/ LDR         R3, [R9, #4] 
    /*0000f77c*/ CMP         R3, #96                     @ 0x60 
    /*0000f780*/ BNE         VencGetH264SliceSplit_xf7e0
    /*0000f784*/ MOV         R0, #10 
    /*0000f788*/ BL          0x000000000000F788          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000f78c*/ MOV         R1, R7 
    /*0000f790*/ LDR         R3, [R0, #52]               @ 0x34 
    /*0000f794*/ MOV         R0, R4 
    /*0000f798*/ BLX         R3 
    /*0000f79c*/ MOV         R5, R0 
    /*0000f7a0*/ MOV         R0, R6 
    /*0000f7a4*/ BL          0x000000000000F7A4          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f7a8*/ CMP         R5, #0 
    /*0000f7ac*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*0000f7b0*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*0000f7b4*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*0000f7b8*/ MOV         R0, R5 
    /*0000f7bc*/ ADD         SP, SP, #12 
    /*0000f7c0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264SliceSplit_xf7c4:
    /*0000f7c4*/ MOV         R0, R4 
    /*0000f7c8*/ BL          0x0000000000000304 
    /*0000f7cc*/ SUBS        R5, R0, #0 
    /*0000f7d0*/ BEQ         VencGetH264SliceSplit_xf73c
    VencGetH264SliceSplit_xf7d4:
    /*0000f7d4*/ MOV         R0, R5 
    /*0000f7d8*/ ADD         SP, SP, #12 
    /*0000f7dc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264SliceSplit_xf7e0:
    /*0000f7e0*/ STR         R3, [SP, #4] 
    /*0000f7e4*/ MOV         R1, #8 
    /*0000f7e8*/ MOVW        R3, #8383                   @ 0x20bf 
    /*0000f7ec*/ MOVW        R2, #0                      @ .LC346 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4058] 
    /*0000f7f0*/ STR         R3, [SP] 
    /*0000f7f4*/ MOVT        R2, #0                      @ .LC346 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4058] 
    /*0000f7f8*/ LDR         R3, [PC, #116]              @ 0x000000000000f874 
    /*0000f7fc*/ MOV         R0, #3 
    /*0000f800*/ BL          0x000000000000F800          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f804*/ MOV         R0, R6 
    /*0000f808*/ BL          0x000000000000F808          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f80c*/ MOVW        R5, #32776                  @ 0x8008 
    /*0000f810*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000f814*/ MOV         R0, R5 
    /*0000f818*/ ADD         SP, SP, #12 
    /*0000f81c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264SliceSplit_xf820:
    /*0000f820*/ BL          0x00000000000002C8 
    /*0000f824*/ SUBS        R5, R0, #0 
    /*0000f828*/ BNE         VencGetH264SliceSplit_xf7d4
    /*0000f82c*/ B           VencGetH264SliceSplit_xf720
    VencGetH264SliceSplit_xf830:
    /*0000f830*/ MOVW        R3, #8368                   @ 0x20b0 
    /*0000f834*/ MOV         R1, #8 
    /*0000f838*/ STR         R3, [SP] 
    /*0000f83c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000f840*/ LDR         R3, [PC, #44]               @ 0x000000000000f874 
    /*0000f844*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000f848*/ STR         R4, [SP, #4] 
    /*0000f84c*/ MOV         R0, #3 
    /*0000f850*/ BL          0x000000000000F850          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f854*/ MOV         R0, R6 
    /*0000f858*/ MOVW        R5, #32773                  @ 0x8005 
    /*0000f85c*/ BL          0x000000000000F85C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f860*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000f864*/ B           VencGetH264SliceSplit_xf7d4
    VencGetH264SliceSplit_xf868:
    /*0000f868*/ MOV         R5, #65024                  @ 0xfe00 
    /*0000f86c*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000f870*/ B           VencGetH264SliceSplit_xf7d4
    /*0000f874*/ ANDEQ       R0, R0, R8, LSL R6 
FUNC_END VencGetH264SliceSplit


FUNC_BEGIN VencSetH264InterPred
    /*0000f878*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000f87c*/ SUBS        R7, R1, #0 
    /*0000f880*/ SUB         SP, SP, #12 
    /*0000f884*/ MOV         R4, R0 
    /*0000f888*/ BEQ         VencSetH264InterPred_xf98c
    VencSetH264InterPred_xf88c:
    /*0000f88c*/ CMP         R4, #0 
    /*0000f890*/ BLT         VencSetH264InterPred_xf930
    /*0000f894*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000f898*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000f89c*/ LDR         R3, [R3] 
    /*0000f8a0*/ CMP         R4, R3 
    /*0000f8a4*/ BCS         VencSetH264InterPred_xf930
    VencSetH264InterPred_xf8a8:
    /*0000f8a8*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0000f8ac*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000f8b0*/ MUL         R5, R5, R4 
    /*0000f8b4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000f8b8*/ LDR         R8, [R3] 
    /*0000f8bc*/ ADD         R9, R8, R5 
    /*0000f8c0*/ ADD         R6, R9, #12416              @ 0x3080 
    /*0000f8c4*/ ADD         R6, R6, #16 
    /*0000f8c8*/ MOV         R0, R6 
    /*0000f8cc*/ BL          0x000000000000F8CC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000f8d0*/ CMP         R0, #0 
    /*0000f8d4*/ BNE         VencSetH264InterPred_xf9d4
    /*0000f8d8*/ LDR         R3, [R8, R5] 
    /*0000f8dc*/ CMP         R3, #1 
    /*0000f8e0*/ BNE         VencSetH264InterPred_xf99c
    /*0000f8e4*/ LDR         R3, [R9, #4] 
    /*0000f8e8*/ CMP         R3, #96                     @ 0x60 
    /*0000f8ec*/ BNE         VencSetH264InterPred_xf94c
    /*0000f8f0*/ MOV         R0, #10 
    /*0000f8f4*/ BL          0x000000000000F8F4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000f8f8*/ MOV         R1, R7 
    /*0000f8fc*/ LDR         R3, [R0, #56]               @ 0x38 
    /*0000f900*/ MOV         R0, R4 
    /*0000f904*/ BLX         R3 
    /*0000f908*/ MOV         R5, R0 
    /*0000f90c*/ MOV         R0, R6 
    /*0000f910*/ BL          0x000000000000F910          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f914*/ CMP         R5, #0 
    /*0000f918*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*0000f91c*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*0000f920*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*0000f924*/ MOV         R0, R5 
    /*0000f928*/ ADD         SP, SP, #12 
    /*0000f92c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264InterPred_xf930:
    /*0000f930*/ MOV         R0, R4 
    /*0000f934*/ BL          0x0000000000000304 
    /*0000f938*/ SUBS        R5, R0, #0 
    /*0000f93c*/ BEQ         VencSetH264InterPred_xf8a8
    VencSetH264InterPred_xf940:
    /*0000f940*/ MOV         R0, R5 
    /*0000f944*/ ADD         SP, SP, #12 
    /*0000f948*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264InterPred_xf94c:
    /*0000f94c*/ STR         R3, [SP, #4] 
    /*0000f950*/ MOV         R1, #8 
    /*0000f954*/ MOVW        R3, #8440                   @ 0x20f8 
    /*0000f958*/ MOVW        R2, #0                      @ .LC347 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x409c] 
    /*0000f95c*/ STR         R3, [SP] 
    /*0000f960*/ MOVT        R2, #0                      @ .LC347 [R_ARM_MOVT_ABS: .rodata.str1.4+0x409c] 
    /*0000f964*/ LDR         R3, [PC, #116]              @ 0x000000000000f9e0 
    /*0000f968*/ MOV         R0, #3 
    /*0000f96c*/ BL          0x000000000000F96C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f970*/ MOV         R0, R6 
    /*0000f974*/ BL          0x000000000000F974          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f978*/ MOVW        R5, #32776                  @ 0x8008 
    /*0000f97c*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000f980*/ MOV         R0, R5 
    /*0000f984*/ ADD         SP, SP, #12 
    /*0000f988*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264InterPred_xf98c:
    /*0000f98c*/ BL          0x00000000000002C8 
    /*0000f990*/ SUBS        R5, R0, #0 
    /*0000f994*/ BNE         VencSetH264InterPred_xf940
    /*0000f998*/ B           VencSetH264InterPred_xf88c
    VencSetH264InterPred_xf99c:
    /*0000f99c*/ MOVW        R3, #8425                   @ 0x20e9 
    /*0000f9a0*/ MOV         R1, #8 
    /*0000f9a4*/ STR         R3, [SP] 
    /*0000f9a8*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000f9ac*/ LDR         R3, [PC, #44]               @ 0x000000000000f9e0 
    /*0000f9b0*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000f9b4*/ STR         R4, [SP, #4] 
    /*0000f9b8*/ MOV         R0, #3 
    /*0000f9bc*/ BL          0x000000000000F9BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f9c0*/ MOV         R0, R6 
    /*0000f9c4*/ MOVW        R5, #32773                  @ 0x8005 
    /*0000f9c8*/ BL          0x000000000000F9C8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000f9cc*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000f9d0*/ B           VencSetH264InterPred_xf940
    VencSetH264InterPred_xf9d4:
    /*0000f9d4*/ MOV         R5, #65024                  @ 0xfe00 
    /*0000f9d8*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000f9dc*/ B           VencSetH264InterPred_xf940
    /*0000f9e0*/ ANDEQ       R0, R0, R0, LSR R6 
FUNC_END VencSetH264InterPred


FUNC_BEGIN VencGetH264InterPred
    /*0000f9e4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000f9e8*/ SUBS        R7, R1, #0 
    /*0000f9ec*/ SUB         SP, SP, #12 
    /*0000f9f0*/ MOV         R4, R0 
    /*0000f9f4*/ BEQ         VencGetH264InterPred_xfaf8
    VencGetH264InterPred_xf9f8:
    /*0000f9f8*/ CMP         R4, #0 
    /*0000f9fc*/ BLT         VencGetH264InterPred_xfa9c
    /*0000fa00*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000fa04*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000fa08*/ LDR         R3, [R3] 
    /*0000fa0c*/ CMP         R4, R3 
    /*0000fa10*/ BCS         VencGetH264InterPred_xfa9c
    VencGetH264InterPred_xfa14:
    /*0000fa14*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0000fa18*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000fa1c*/ MUL         R5, R5, R4 
    /*0000fa20*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000fa24*/ LDR         R8, [R3] 
    /*0000fa28*/ ADD         R9, R8, R5 
    /*0000fa2c*/ ADD         R6, R9, #12416              @ 0x3080 
    /*0000fa30*/ ADD         R6, R6, #16 
    /*0000fa34*/ MOV         R0, R6 
    /*0000fa38*/ BL          0x000000000000FA38          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000fa3c*/ CMP         R0, #0 
    /*0000fa40*/ BNE         VencGetH264InterPred_xfb40
    /*0000fa44*/ LDR         R3, [R8, R5] 
    /*0000fa48*/ CMP         R3, #1 
    /*0000fa4c*/ BNE         VencGetH264InterPred_xfb08
    /*0000fa50*/ LDR         R3, [R9, #4] 
    /*0000fa54*/ CMP         R3, #96                     @ 0x60 
    /*0000fa58*/ BNE         VencGetH264InterPred_xfab8
    /*0000fa5c*/ MOV         R0, #10 
    /*0000fa60*/ BL          0x000000000000FA60          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000fa64*/ MOV         R1, R7 
    /*0000fa68*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0000fa6c*/ MOV         R0, R4 
    /*0000fa70*/ BLX         R3 
    /*0000fa74*/ MOV         R5, R0 
    /*0000fa78*/ MOV         R0, R6 
    /*0000fa7c*/ BL          0x000000000000FA7C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000fa80*/ CMP         R5, #0 
    /*0000fa84*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*0000fa88*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*0000fa8c*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*0000fa90*/ MOV         R0, R5 
    /*0000fa94*/ ADD         SP, SP, #12 
    /*0000fa98*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264InterPred_xfa9c:
    /*0000fa9c*/ MOV         R0, R4 
    /*0000faa0*/ BL          0x0000000000000304 
    /*0000faa4*/ SUBS        R5, R0, #0 
    /*0000faa8*/ BEQ         VencGetH264InterPred_xfa14
    VencGetH264InterPred_xfaac:
    /*0000faac*/ MOV         R0, R5 
    /*0000fab0*/ ADD         SP, SP, #12 
    /*0000fab4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264InterPred_xfab8:
    /*0000fab8*/ STR         R3, [SP, #4] 
    /*0000fabc*/ MOV         R1, #8 
    /*0000fac0*/ MOVW        R3, #8495                   @ 0x212f 
    /*0000fac4*/ MOVW        R2, #0                      @ .LC348 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x40e4] 
    /*0000fac8*/ STR         R3, [SP] 
    /*0000facc*/ MOVT        R2, #0                      @ .LC348 [R_ARM_MOVT_ABS: .rodata.str1.4+0x40e4] 
    /*0000fad0*/ LDR         R3, [PC, #116]              @ 0x000000000000fb4c 
    /*0000fad4*/ MOV         R0, #3 
    /*0000fad8*/ BL          0x000000000000FAD8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000fadc*/ MOV         R0, R6 
    /*0000fae0*/ BL          0x000000000000FAE0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000fae4*/ MOVW        R5, #32776                  @ 0x8008 
    /*0000fae8*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000faec*/ MOV         R0, R5 
    /*0000faf0*/ ADD         SP, SP, #12 
    /*0000faf4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264InterPred_xfaf8:
    /*0000faf8*/ BL          0x00000000000002C8 
    /*0000fafc*/ SUBS        R5, R0, #0 
    /*0000fb00*/ BNE         VencGetH264InterPred_xfaac
    /*0000fb04*/ B           VencGetH264InterPred_xf9f8
    VencGetH264InterPred_xfb08:
    /*0000fb08*/ MOVW        R3, #8480                   @ 0x2120 
    /*0000fb0c*/ MOV         R1, #8 
    /*0000fb10*/ STR         R3, [SP] 
    /*0000fb14*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000fb18*/ LDR         R3, [PC, #44]               @ 0x000000000000fb4c 
    /*0000fb1c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000fb20*/ STR         R4, [SP, #4] 
    /*0000fb24*/ MOV         R0, #3 
    /*0000fb28*/ BL          0x000000000000FB28          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000fb2c*/ MOV         R0, R6 
    /*0000fb30*/ MOVW        R5, #32773                  @ 0x8005 
    /*0000fb34*/ BL          0x000000000000FB34          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000fb38*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000fb3c*/ B           VencGetH264InterPred_xfaac
    VencGetH264InterPred_xfb40:
    /*0000fb40*/ MOV         R5, #65024                  @ 0xfe00 
    /*0000fb44*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000fb48*/ B           VencGetH264InterPred_xfaac
    /*0000fb4c*/ ANDEQ       R0, R0, R8, ASR #12 
FUNC_END VencGetH264InterPred


FUNC_BEGIN VencSetH264IntraPred
    /*0000fb50*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000fb54*/ SUBS        R7, R1, #0 
    /*0000fb58*/ SUB         SP, SP, #12 
    /*0000fb5c*/ MOV         R4, R0 
    /*0000fb60*/ BEQ         VencSetH264IntraPred_xfc64
    VencSetH264IntraPred_xfb64:
    /*0000fb64*/ CMP         R4, #0 
    /*0000fb68*/ BLT         VencSetH264IntraPred_xfc08
    /*0000fb6c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000fb70*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000fb74*/ LDR         R3, [R3] 
    /*0000fb78*/ CMP         R4, R3 
    /*0000fb7c*/ BCS         VencSetH264IntraPred_xfc08
    VencSetH264IntraPred_xfb80:
    /*0000fb80*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0000fb84*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000fb88*/ MUL         R5, R5, R4 
    /*0000fb8c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000fb90*/ LDR         R8, [R3] 
    /*0000fb94*/ ADD         R9, R8, R5 
    /*0000fb98*/ ADD         R6, R9, #12416              @ 0x3080 
    /*0000fb9c*/ ADD         R6, R6, #16 
    /*0000fba0*/ MOV         R0, R6 
    /*0000fba4*/ BL          0x000000000000FBA4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000fba8*/ CMP         R0, #0 
    /*0000fbac*/ BNE         VencSetH264IntraPred_xfcac
    /*0000fbb0*/ LDR         R3, [R8, R5] 
    /*0000fbb4*/ CMP         R3, #1 
    /*0000fbb8*/ BNE         VencSetH264IntraPred_xfc74
    /*0000fbbc*/ LDR         R3, [R9, #4] 
    /*0000fbc0*/ CMP         R3, #96                     @ 0x60 
    /*0000fbc4*/ BNE         VencSetH264IntraPred_xfc24
    /*0000fbc8*/ MOV         R0, #10 
    /*0000fbcc*/ BL          0x000000000000FBCC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000fbd0*/ MOV         R1, R7 
    /*0000fbd4*/ LDR         R3, [R0, #64]               @ 0x40 
    /*0000fbd8*/ MOV         R0, R4 
    /*0000fbdc*/ BLX         R3 
    /*0000fbe0*/ MOV         R5, R0 
    /*0000fbe4*/ MOV         R0, R6 
    /*0000fbe8*/ BL          0x000000000000FBE8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000fbec*/ CMP         R5, #0 
    /*0000fbf0*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*0000fbf4*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*0000fbf8*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*0000fbfc*/ MOV         R0, R5 
    /*0000fc00*/ ADD         SP, SP, #12 
    /*0000fc04*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264IntraPred_xfc08:
    /*0000fc08*/ MOV         R0, R4 
    /*0000fc0c*/ BL          0x0000000000000304 
    /*0000fc10*/ SUBS        R5, R0, #0 
    /*0000fc14*/ BEQ         VencSetH264IntraPred_xfb80
    VencSetH264IntraPred_xfc18:
    /*0000fc18*/ MOV         R0, R5 
    /*0000fc1c*/ ADD         SP, SP, #12 
    /*0000fc20*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264IntraPred_xfc24:
    /*0000fc24*/ STR         R3, [SP, #4] 
    /*0000fc28*/ MOV         R1, #8 
    /*0000fc2c*/ MOVW        R3, #8552                   @ 0x2168 
    /*0000fc30*/ MOVW        R2, #0                      @ .LC349 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x412c] 
    /*0000fc34*/ STR         R3, [SP] 
    /*0000fc38*/ MOVT        R2, #0                      @ .LC349 [R_ARM_MOVT_ABS: .rodata.str1.4+0x412c] 
    /*0000fc3c*/ LDR         R3, [PC, #116]              @ 0x000000000000fcb8 
    /*0000fc40*/ MOV         R0, #3 
    /*0000fc44*/ BL          0x000000000000FC44          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000fc48*/ MOV         R0, R6 
    /*0000fc4c*/ BL          0x000000000000FC4C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000fc50*/ MOVW        R5, #32776                  @ 0x8008 
    /*0000fc54*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000fc58*/ MOV         R0, R5 
    /*0000fc5c*/ ADD         SP, SP, #12 
    /*0000fc60*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264IntraPred_xfc64:
    /*0000fc64*/ BL          0x00000000000002C8 
    /*0000fc68*/ SUBS        R5, R0, #0 
    /*0000fc6c*/ BNE         VencSetH264IntraPred_xfc18
    /*0000fc70*/ B           VencSetH264IntraPred_xfb64
    VencSetH264IntraPred_xfc74:
    /*0000fc74*/ MOVW        R3, #8537                   @ 0x2159 
    /*0000fc78*/ MOV         R1, #8 
    /*0000fc7c*/ STR         R3, [SP] 
    /*0000fc80*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000fc84*/ LDR         R3, [PC, #44]               @ 0x000000000000fcb8 
    /*0000fc88*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000fc8c*/ STR         R4, [SP, #4] 
    /*0000fc90*/ MOV         R0, #3 
    /*0000fc94*/ BL          0x000000000000FC94          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000fc98*/ MOV         R0, R6 
    /*0000fc9c*/ MOVW        R5, #32773                  @ 0x8005 
    /*0000fca0*/ BL          0x000000000000FCA0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000fca4*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000fca8*/ B           VencSetH264IntraPred_xfc18
    VencSetH264IntraPred_xfcac:
    /*0000fcac*/ MOV         R5, #65024                  @ 0xfe00 
    /*0000fcb0*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000fcb4*/ B           VencSetH264IntraPred_xfc18
    /*0000fcb8*/ ANDEQ       R0, R0, R0, ROR #12 
FUNC_END VencSetH264IntraPred


FUNC_BEGIN VencGetH264IntraPred
    /*0000fcbc*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000fcc0*/ SUBS        R7, R1, #0 
    /*0000fcc4*/ SUB         SP, SP, #12 
    /*0000fcc8*/ MOV         R4, R0 
    /*0000fccc*/ BEQ         VencGetH264IntraPred_xfdd0
    VencGetH264IntraPred_xfcd0:
    /*0000fcd0*/ CMP         R4, #0 
    /*0000fcd4*/ BLT         VencGetH264IntraPred_xfd74
    /*0000fcd8*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000fcdc*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000fce0*/ LDR         R3, [R3] 
    /*0000fce4*/ CMP         R4, R3 
    /*0000fce8*/ BCS         VencGetH264IntraPred_xfd74
    VencGetH264IntraPred_xfcec:
    /*0000fcec*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0000fcf0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000fcf4*/ MUL         R5, R5, R4 
    /*0000fcf8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000fcfc*/ LDR         R8, [R3] 
    /*0000fd00*/ ADD         R9, R8, R5 
    /*0000fd04*/ ADD         R6, R9, #12416              @ 0x3080 
    /*0000fd08*/ ADD         R6, R6, #16 
    /*0000fd0c*/ MOV         R0, R6 
    /*0000fd10*/ BL          0x000000000000FD10          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000fd14*/ CMP         R0, #0 
    /*0000fd18*/ BNE         VencGetH264IntraPred_xfe18
    /*0000fd1c*/ LDR         R3, [R8, R5] 
    /*0000fd20*/ CMP         R3, #1 
    /*0000fd24*/ BNE         VencGetH264IntraPred_xfde0
    /*0000fd28*/ LDR         R3, [R9, #4] 
    /*0000fd2c*/ CMP         R3, #96                     @ 0x60 
    /*0000fd30*/ BNE         VencGetH264IntraPred_xfd90
    /*0000fd34*/ MOV         R0, #10 
    /*0000fd38*/ BL          0x000000000000FD38          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000fd3c*/ MOV         R1, R7 
    /*0000fd40*/ LDR         R3, [R0, #68]               @ 0x44 
    /*0000fd44*/ MOV         R0, R4 
    /*0000fd48*/ BLX         R3 
    /*0000fd4c*/ MOV         R5, R0 
    /*0000fd50*/ MOV         R0, R6 
    /*0000fd54*/ BL          0x000000000000FD54          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000fd58*/ CMP         R5, #0 
    /*0000fd5c*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*0000fd60*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*0000fd64*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*0000fd68*/ MOV         R0, R5 
    /*0000fd6c*/ ADD         SP, SP, #12 
    /*0000fd70*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264IntraPred_xfd74:
    /*0000fd74*/ MOV         R0, R4 
    /*0000fd78*/ BL          0x0000000000000304 
    /*0000fd7c*/ SUBS        R5, R0, #0 
    /*0000fd80*/ BEQ         VencGetH264IntraPred_xfcec
    VencGetH264IntraPred_xfd84:
    /*0000fd84*/ MOV         R0, R5 
    /*0000fd88*/ ADD         SP, SP, #12 
    /*0000fd8c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264IntraPred_xfd90:
    /*0000fd90*/ STR         R3, [SP, #4] 
    /*0000fd94*/ MOV         R1, #8 
    /*0000fd98*/ MOVW        R3, #8607                   @ 0x219f 
    /*0000fd9c*/ MOVW        R2, #0                      @ .LC350 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4180] 
    /*0000fda0*/ STR         R3, [SP] 
    /*0000fda4*/ MOVT        R2, #0                      @ .LC350 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4180] 
    /*0000fda8*/ LDR         R3, [PC, #116]              @ 0x000000000000fe24 
    /*0000fdac*/ MOV         R0, #3 
    /*0000fdb0*/ BL          0x000000000000FDB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000fdb4*/ MOV         R0, R6 
    /*0000fdb8*/ BL          0x000000000000FDB8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000fdbc*/ MOVW        R5, #32776                  @ 0x8008 
    /*0000fdc0*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000fdc4*/ MOV         R0, R5 
    /*0000fdc8*/ ADD         SP, SP, #12 
    /*0000fdcc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264IntraPred_xfdd0:
    /*0000fdd0*/ BL          0x00000000000002C8 
    /*0000fdd4*/ SUBS        R5, R0, #0 
    /*0000fdd8*/ BNE         VencGetH264IntraPred_xfd84
    /*0000fddc*/ B           VencGetH264IntraPred_xfcd0
    VencGetH264IntraPred_xfde0:
    /*0000fde0*/ MOVW        R3, #8592                   @ 0x2190 
    /*0000fde4*/ MOV         R1, #8 
    /*0000fde8*/ STR         R3, [SP] 
    /*0000fdec*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000fdf0*/ LDR         R3, [PC, #44]               @ 0x000000000000fe24 
    /*0000fdf4*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000fdf8*/ STR         R4, [SP, #4] 
    /*0000fdfc*/ MOV         R0, #3 
    /*0000fe00*/ BL          0x000000000000FE00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000fe04*/ MOV         R0, R6 
    /*0000fe08*/ MOVW        R5, #32773                  @ 0x8005 
    /*0000fe0c*/ BL          0x000000000000FE0C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000fe10*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000fe14*/ B           VencGetH264IntraPred_xfd84
    VencGetH264IntraPred_xfe18:
    /*0000fe18*/ MOV         R5, #65024                  @ 0xfe00 
    /*0000fe1c*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000fe20*/ B           VencGetH264IntraPred_xfd84
    /*0000fe24*/ ANDEQ       R0, R0, R8, ROR R6 
FUNC_END VencGetH264IntraPred


FUNC_BEGIN VencSetH264Trans
    /*0000fe28*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000fe2c*/ SUBS        R7, R1, #0 
    /*0000fe30*/ SUB         SP, SP, #12 
    /*0000fe34*/ MOV         R4, R0 
    /*0000fe38*/ BEQ         VencSetH264Trans_xff3c
    VencSetH264Trans_xfe3c:
    /*0000fe3c*/ CMP         R4, #0 
    /*0000fe40*/ BLT         VencSetH264Trans_xfee0
    /*0000fe44*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000fe48*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000fe4c*/ LDR         R3, [R3] 
    /*0000fe50*/ CMP         R4, R3 
    /*0000fe54*/ BCS         VencSetH264Trans_xfee0
    VencSetH264Trans_xfe58:
    /*0000fe58*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0000fe5c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000fe60*/ MUL         R5, R5, R4 
    /*0000fe64*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000fe68*/ LDR         R8, [R3] 
    /*0000fe6c*/ ADD         R9, R8, R5 
    /*0000fe70*/ ADD         R6, R9, #12416              @ 0x3080 
    /*0000fe74*/ ADD         R6, R6, #16 
    /*0000fe78*/ MOV         R0, R6 
    /*0000fe7c*/ BL          0x000000000000FE7C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000fe80*/ CMP         R0, #0 
    /*0000fe84*/ BNE         VencSetH264Trans_xff84
    /*0000fe88*/ LDR         R3, [R8, R5] 
    /*0000fe8c*/ CMP         R3, #1 
    /*0000fe90*/ BNE         VencSetH264Trans_xff4c
    /*0000fe94*/ LDR         R3, [R9, #4] 
    /*0000fe98*/ CMP         R3, #96                     @ 0x60 
    /*0000fe9c*/ BNE         VencSetH264Trans_xfefc
    /*0000fea0*/ MOV         R0, #10 
    /*0000fea4*/ BL          0x000000000000FEA4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000fea8*/ MOV         R1, R7 
    /*0000feac*/ LDR         R3, [R0, #72]               @ 0x48 
    /*0000feb0*/ MOV         R0, R4 
    /*0000feb4*/ BLX         R3 
    /*0000feb8*/ MOV         R5, R0 
    /*0000febc*/ MOV         R0, R6 
    /*0000fec0*/ BL          0x000000000000FEC0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000fec4*/ CMP         R5, #0 
    /*0000fec8*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*0000fecc*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*0000fed0*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*0000fed4*/ MOV         R0, R5 
    /*0000fed8*/ ADD         SP, SP, #12 
    /*0000fedc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264Trans_xfee0:
    /*0000fee0*/ MOV         R0, R4 
    /*0000fee4*/ BL          0x0000000000000304 
    /*0000fee8*/ SUBS        R5, R0, #0 
    /*0000feec*/ BEQ         VencSetH264Trans_xfe58
    VencSetH264Trans_xfef0:
    /*0000fef0*/ MOV         R0, R5 
    /*0000fef4*/ ADD         SP, SP, #12 
    /*0000fef8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264Trans_xfefc:
    /*0000fefc*/ STR         R3, [SP, #4] 
    /*0000ff00*/ MOV         R1, #8 
    /*0000ff04*/ MOVW        R3, #8662                   @ 0x21d6 
    /*0000ff08*/ MOVW        R2, #0                      @ .LC351 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x41d4] 
    /*0000ff0c*/ STR         R3, [SP] 
    /*0000ff10*/ MOVT        R2, #0                      @ .LC351 [R_ARM_MOVT_ABS: .rodata.str1.4+0x41d4] 
    /*0000ff14*/ LDR         R3, [PC, #116]              @ 0x000000000000ff90 
    /*0000ff18*/ MOV         R0, #3 
    /*0000ff1c*/ BL          0x000000000000FF1C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ff20*/ MOV         R0, R6 
    /*0000ff24*/ BL          0x000000000000FF24          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ff28*/ MOVW        R5, #32776                  @ 0x8008 
    /*0000ff2c*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000ff30*/ MOV         R0, R5 
    /*0000ff34*/ ADD         SP, SP, #12 
    /*0000ff38*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264Trans_xff3c:
    /*0000ff3c*/ BL          0x00000000000002C8 
    /*0000ff40*/ SUBS        R5, R0, #0 
    /*0000ff44*/ BNE         VencSetH264Trans_xfef0
    /*0000ff48*/ B           VencSetH264Trans_xfe3c
    VencSetH264Trans_xff4c:
    /*0000ff4c*/ MOVW        R3, #8647                   @ 0x21c7 
    /*0000ff50*/ MOV         R1, #8 
    /*0000ff54*/ STR         R3, [SP] 
    /*0000ff58*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0000ff5c*/ LDR         R3, [PC, #44]               @ 0x000000000000ff90 
    /*0000ff60*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0000ff64*/ STR         R4, [SP, #4] 
    /*0000ff68*/ MOV         R0, #3 
    /*0000ff6c*/ BL          0x000000000000FF6C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ff70*/ MOV         R0, R6 
    /*0000ff74*/ MOVW        R5, #32773                  @ 0x8005 
    /*0000ff78*/ BL          0x000000000000FF78          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ff7c*/ MOVT        R5, #40968                  @ 0xa008 
    /*0000ff80*/ B           VencSetH264Trans_xfef0
    VencSetH264Trans_xff84:
    /*0000ff84*/ MOV         R5, #65024                  @ 0xfe00 
    /*0000ff88*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000ff8c*/ B           VencSetH264Trans_xfef0
    /*0000ff90*/ MULEQ       R0, R0, R6 
FUNC_END VencSetH264Trans


FUNC_BEGIN VencGetH264Trans
    /*0000ff94*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000ff98*/ SUBS        R7, R1, #0 
    /*0000ff9c*/ SUB         SP, SP, #12 
    /*0000ffa0*/ MOV         R4, R0 
    /*0000ffa4*/ BEQ         VencGetH264Trans_x100a8
    VencGetH264Trans_xffa8:
    /*0000ffa8*/ CMP         R4, #0 
    /*0000ffac*/ BLT         VencGetH264Trans_x1004c
    /*0000ffb0*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0000ffb4*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0000ffb8*/ LDR         R3, [R3] 
    /*0000ffbc*/ CMP         R4, R3 
    /*0000ffc0*/ BCS         VencGetH264Trans_x1004c
    VencGetH264Trans_xffc4:
    /*0000ffc4*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0000ffc8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000ffcc*/ MUL         R5, R5, R4 
    /*0000ffd0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000ffd4*/ LDR         R8, [R3] 
    /*0000ffd8*/ ADD         R9, R8, R5 
    /*0000ffdc*/ ADD         R6, R9, #12416              @ 0x3080 
    /*0000ffe0*/ ADD         R6, R6, #16 
    /*0000ffe4*/ MOV         R0, R6 
    /*0000ffe8*/ BL          0x000000000000FFE8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000ffec*/ CMP         R0, #0 
    /*0000fff0*/ BNE         VencGetH264Trans_x100f0
    /*0000fff4*/ LDR         R3, [R8, R5] 
    /*0000fff8*/ CMP         R3, #1 
    /*0000fffc*/ BNE         VencGetH264Trans_x100b8
    /*00010000*/ LDR         R3, [R9, #4] 
    /*00010004*/ CMP         R3, #96                     @ 0x60 
    /*00010008*/ BNE         VencGetH264Trans_x10068
    /*0001000c*/ MOV         R0, #10 
    /*00010010*/ BL          0x0000000000010010          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00010014*/ MOV         R1, R7 
    /*00010018*/ LDR         R3, [R0, #76]               @ 0x4c 
    /*0001001c*/ MOV         R0, R4 
    /*00010020*/ BLX         R3 
    /*00010024*/ MOV         R5, R0 
    /*00010028*/ MOV         R0, R6 
    /*0001002c*/ BL          0x000000000001002C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010030*/ CMP         R5, #0 
    /*00010034*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*00010038*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*0001003c*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*00010040*/ MOV         R0, R5 
    /*00010044*/ ADD         SP, SP, #12 
    /*00010048*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264Trans_x1004c:
    /*0001004c*/ MOV         R0, R4 
    /*00010050*/ BL          0x0000000000000304 
    /*00010054*/ SUBS        R5, R0, #0 
    /*00010058*/ BEQ         VencGetH264Trans_xffc4
    VencGetH264Trans_x1005c:
    /*0001005c*/ MOV         R0, R5 
    /*00010060*/ ADD         SP, SP, #12 
    /*00010064*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264Trans_x10068:
    /*00010068*/ STR         R3, [SP, #4] 
    /*0001006c*/ MOV         R1, #8 
    /*00010070*/ MOVW        R3, #8717                   @ 0x220d 
    /*00010074*/ MOVW        R2, #0                      @ .LC352 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4220] 
    /*00010078*/ STR         R3, [SP] 
    /*0001007c*/ MOVT        R2, #0                      @ .LC352 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4220] 
    /*00010080*/ LDR         R3, [PC, #116]              @ 0x00000000000100fc 
    /*00010084*/ MOV         R0, #3 
    /*00010088*/ BL          0x0000000000010088          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001008c*/ MOV         R0, R6 
    /*00010090*/ BL          0x0000000000010090          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010094*/ MOVW        R5, #32776                  @ 0x8008 
    /*00010098*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001009c*/ MOV         R0, R5 
    /*000100a0*/ ADD         SP, SP, #12 
    /*000100a4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264Trans_x100a8:
    /*000100a8*/ BL          0x00000000000002C8 
    /*000100ac*/ SUBS        R5, R0, #0 
    /*000100b0*/ BNE         VencGetH264Trans_x1005c
    /*000100b4*/ B           VencGetH264Trans_xffa8
    VencGetH264Trans_x100b8:
    /*000100b8*/ MOVW        R3, #8702                   @ 0x21fe 
    /*000100bc*/ MOV         R1, #8 
    /*000100c0*/ STR         R3, [SP] 
    /*000100c4*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*000100c8*/ LDR         R3, [PC, #44]               @ 0x00000000000100fc 
    /*000100cc*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*000100d0*/ STR         R4, [SP, #4] 
    /*000100d4*/ MOV         R0, #3 
    /*000100d8*/ BL          0x00000000000100D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000100dc*/ MOV         R0, R6 
    /*000100e0*/ MOVW        R5, #32773                  @ 0x8005 
    /*000100e4*/ BL          0x00000000000100E4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000100e8*/ MOVT        R5, #40968                  @ 0xa008 
    /*000100ec*/ B           VencGetH264Trans_x1005c
    VencGetH264Trans_x100f0:
    /*000100f0*/ MOV         R5, #65024                  @ 0xfe00 
    /*000100f4*/ MOVT        R5, #65535                  @ 0xffff 
    /*000100f8*/ B           VencGetH264Trans_x1005c
    /*000100fc*/ ANDEQ       R0, R0, R4, LSR #13 
FUNC_END VencGetH264Trans


FUNC_BEGIN VencSetH264Entropy
    /*00010100*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00010104*/ SUBS        R7, R1, #0 
    /*00010108*/ SUB         SP, SP, #12 
    /*0001010c*/ MOV         R4, R0 
    /*00010110*/ BEQ         VencSetH264Entropy_x10214
    VencSetH264Entropy_x10114:
    /*00010114*/ CMP         R4, #0 
    /*00010118*/ BLT         VencSetH264Entropy_x101b8
    /*0001011c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00010120*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00010124*/ LDR         R3, [R3] 
    /*00010128*/ CMP         R4, R3 
    /*0001012c*/ BCS         VencSetH264Entropy_x101b8
    VencSetH264Entropy_x10130:
    /*00010130*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00010134*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00010138*/ MUL         R5, R5, R4 
    /*0001013c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00010140*/ LDR         R8, [R3] 
    /*00010144*/ ADD         R9, R8, R5 
    /*00010148*/ ADD         R6, R9, #12416              @ 0x3080 
    /*0001014c*/ ADD         R6, R6, #16 
    /*00010150*/ MOV         R0, R6 
    /*00010154*/ BL          0x0000000000010154          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00010158*/ CMP         R0, #0 
    /*0001015c*/ BNE         VencSetH264Entropy_x1025c
    /*00010160*/ LDR         R3, [R8, R5] 
    /*00010164*/ CMP         R3, #1 
    /*00010168*/ BNE         VencSetH264Entropy_x10224
    /*0001016c*/ LDR         R3, [R9, #4] 
    /*00010170*/ CMP         R3, #96                     @ 0x60 
    /*00010174*/ BNE         VencSetH264Entropy_x101d4
    /*00010178*/ MOV         R0, #10 
    /*0001017c*/ BL          0x000000000001017C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00010180*/ MOV         R1, R7 
    /*00010184*/ LDR         R3, [R0, #80]               @ 0x50 
    /*00010188*/ MOV         R0, R4 
    /*0001018c*/ BLX         R3 
    /*00010190*/ MOV         R5, R0 
    /*00010194*/ MOV         R0, R6 
    /*00010198*/ BL          0x0000000000010198          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001019c*/ CMP         R5, #0 
    /*000101a0*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*000101a4*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*000101a8*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*000101ac*/ MOV         R0, R5 
    /*000101b0*/ ADD         SP, SP, #12 
    /*000101b4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264Entropy_x101b8:
    /*000101b8*/ MOV         R0, R4 
    /*000101bc*/ BL          0x0000000000000304 
    /*000101c0*/ SUBS        R5, R0, #0 
    /*000101c4*/ BEQ         VencSetH264Entropy_x10130
    VencSetH264Entropy_x101c8:
    /*000101c8*/ MOV         R0, R5 
    /*000101cc*/ ADD         SP, SP, #12 
    /*000101d0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264Entropy_x101d4:
    /*000101d4*/ STR         R3, [SP, #4] 
    /*000101d8*/ MOV         R1, #8 
    /*000101dc*/ MOVW        R3, #8771                   @ 0x2243 
    /*000101e0*/ MOVW        R2, #0                      @ .LC353 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x426c] 
    /*000101e4*/ STR         R3, [SP] 
    /*000101e8*/ MOVT        R2, #0                      @ .LC353 [R_ARM_MOVT_ABS: .rodata.str1.4+0x426c] 
    /*000101ec*/ LDR         R3, [PC, #116]              @ 0x0000000000010268 
    /*000101f0*/ MOV         R0, #3 
    /*000101f4*/ BL          0x00000000000101F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000101f8*/ MOV         R0, R6 
    /*000101fc*/ BL          0x00000000000101FC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010200*/ MOVW        R5, #32776                  @ 0x8008 
    /*00010204*/ MOVT        R5, #40968                  @ 0xa008 
    /*00010208*/ MOV         R0, R5 
    /*0001020c*/ ADD         SP, SP, #12 
    /*00010210*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264Entropy_x10214:
    /*00010214*/ BL          0x00000000000002C8 
    /*00010218*/ SUBS        R5, R0, #0 
    /*0001021c*/ BNE         VencSetH264Entropy_x101c8
    /*00010220*/ B           VencSetH264Entropy_x10114
    VencSetH264Entropy_x10224:
    /*00010224*/ MOVW        R3, #8756                   @ 0x2234 
    /*00010228*/ MOV         R1, #8 
    /*0001022c*/ STR         R3, [SP] 
    /*00010230*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00010234*/ LDR         R3, [PC, #44]               @ 0x0000000000010268 
    /*00010238*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001023c*/ STR         R4, [SP, #4] 
    /*00010240*/ MOV         R0, #3 
    /*00010244*/ BL          0x0000000000010244          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010248*/ MOV         R0, R6 
    /*0001024c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00010250*/ BL          0x0000000000010250          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010254*/ MOVT        R5, #40968                  @ 0xa008 
    /*00010258*/ B           VencSetH264Entropy_x101c8
    VencSetH264Entropy_x1025c:
    /*0001025c*/ MOV         R5, #65024                  @ 0xfe00 
    /*00010260*/ MOVT        R5, #65535                  @ 0xffff 
    /*00010264*/ B           VencSetH264Entropy_x101c8
    /*00010268*/ @           <UNDEFINED> instruction: 0x000006b8 
FUNC_END VencSetH264Entropy


FUNC_BEGIN VencGetH264Entropy
    /*0001026c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00010270*/ SUBS        R7, R1, #0 
    /*00010274*/ SUB         SP, SP, #12 
    /*00010278*/ MOV         R4, R0 
    /*0001027c*/ BEQ         VencGetH264Entropy_x10380
    VencGetH264Entropy_x10280:
    /*00010280*/ CMP         R4, #0 
    /*00010284*/ BLT         VencGetH264Entropy_x10324
    /*00010288*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0001028c*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00010290*/ LDR         R3, [R3] 
    /*00010294*/ CMP         R4, R3 
    /*00010298*/ BCS         VencGetH264Entropy_x10324
    VencGetH264Entropy_x1029c:
    /*0001029c*/ MOVW        R5, #36240                  @ 0x8d90 
    /*000102a0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000102a4*/ MUL         R5, R5, R4 
    /*000102a8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000102ac*/ LDR         R8, [R3] 
    /*000102b0*/ ADD         R9, R8, R5 
    /*000102b4*/ ADD         R6, R9, #12416              @ 0x3080 
    /*000102b8*/ ADD         R6, R6, #16 
    /*000102bc*/ MOV         R0, R6 
    /*000102c0*/ BL          0x00000000000102C0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000102c4*/ CMP         R0, #0 
    /*000102c8*/ BNE         VencGetH264Entropy_x103c8
    /*000102cc*/ LDR         R3, [R8, R5] 
    /*000102d0*/ CMP         R3, #1 
    /*000102d4*/ BNE         VencGetH264Entropy_x10390
    /*000102d8*/ LDR         R3, [R9, #4] 
    /*000102dc*/ CMP         R3, #96                     @ 0x60 
    /*000102e0*/ BNE         VencGetH264Entropy_x10340
    /*000102e4*/ MOV         R0, #10 
    /*000102e8*/ BL          0x00000000000102E8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000102ec*/ MOV         R1, R7 
    /*000102f0*/ LDR         R3, [R0, #84]               @ 0x54 
    /*000102f4*/ MOV         R0, R4 
    /*000102f8*/ BLX         R3 
    /*000102fc*/ MOV         R5, R0 
    /*00010300*/ MOV         R0, R6 
    /*00010304*/ BL          0x0000000000010304          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010308*/ CMP         R5, #0 
    /*0001030c*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*00010310*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*00010314*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*00010318*/ MOV         R0, R5 
    /*0001031c*/ ADD         SP, SP, #12 
    /*00010320*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264Entropy_x10324:
    /*00010324*/ MOV         R0, R4 
    /*00010328*/ BL          0x0000000000000304 
    /*0001032c*/ SUBS        R5, R0, #0 
    /*00010330*/ BEQ         VencGetH264Entropy_x1029c
    VencGetH264Entropy_x10334:
    /*00010334*/ MOV         R0, R5 
    /*00010338*/ ADD         SP, SP, #12 
    /*0001033c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264Entropy_x10340:
    /*00010340*/ STR         R3, [SP, #4] 
    /*00010344*/ MOV         R1, #8 
    /*00010348*/ MOVW        R3, #8825                   @ 0x2279 
    /*0001034c*/ MOVW        R2, #0                      @ .LC354 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c4] 
    /*00010350*/ STR         R3, [SP] 
    /*00010354*/ MOVT        R2, #0                      @ .LC354 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c4] 
    /*00010358*/ LDR         R3, [PC, #116]              @ 0x00000000000103d4 
    /*0001035c*/ MOV         R0, #3 
    /*00010360*/ BL          0x0000000000010360          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010364*/ MOV         R0, R6 
    /*00010368*/ BL          0x0000000000010368          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001036c*/ MOVW        R5, #32776                  @ 0x8008 
    /*00010370*/ MOVT        R5, #40968                  @ 0xa008 
    /*00010374*/ MOV         R0, R5 
    /*00010378*/ ADD         SP, SP, #12 
    /*0001037c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264Entropy_x10380:
    /*00010380*/ BL          0x00000000000002C8 
    /*00010384*/ SUBS        R5, R0, #0 
    /*00010388*/ BNE         VencGetH264Entropy_x10334
    /*0001038c*/ B           VencGetH264Entropy_x10280
    VencGetH264Entropy_x10390:
    /*00010390*/ MOVW        R3, #8810                   @ 0x226a 
    /*00010394*/ MOV         R1, #8 
    /*00010398*/ STR         R3, [SP] 
    /*0001039c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*000103a0*/ LDR         R3, [PC, #44]               @ 0x00000000000103d4 
    /*000103a4*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*000103a8*/ STR         R4, [SP, #4] 
    /*000103ac*/ MOV         R0, #3 
    /*000103b0*/ BL          0x00000000000103B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000103b4*/ MOV         R0, R6 
    /*000103b8*/ MOVW        R5, #32773                  @ 0x8005 
    /*000103bc*/ BL          0x00000000000103BC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000103c0*/ MOVT        R5, #40968                  @ 0xa008 
    /*000103c4*/ B           VencGetH264Entropy_x10334
    VencGetH264Entropy_x103c8:
    /*000103c8*/ MOV         R5, #65024                  @ 0xfe00 
    /*000103cc*/ MOVT        R5, #65535                  @ 0xffff 
    /*000103d0*/ B           VencGetH264Entropy_x10334
    /*000103d4*/ ANDEQ       R0, R0, IP, ASR #13 
FUNC_END VencGetH264Entropy


FUNC_BEGIN VencSetH264Poc
    /*000103d8*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000103dc*/ SUBS        R7, R1, #0 
    /*000103e0*/ SUB         SP, SP, #12 
    /*000103e4*/ MOV         R4, R0 
    /*000103e8*/ BEQ         VencSetH264Poc_x104ec
    VencSetH264Poc_x103ec:
    /*000103ec*/ CMP         R4, #0 
    /*000103f0*/ BLT         VencSetH264Poc_x10490
    /*000103f4*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000103f8*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000103fc*/ LDR         R3, [R3] 
    /*00010400*/ CMP         R4, R3 
    /*00010404*/ BCS         VencSetH264Poc_x10490
    VencSetH264Poc_x10408:
    /*00010408*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0001040c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00010410*/ MUL         R5, R5, R4 
    /*00010414*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00010418*/ LDR         R8, [R3] 
    /*0001041c*/ ADD         R9, R8, R5 
    /*00010420*/ ADD         R6, R9, #12416              @ 0x3080 
    /*00010424*/ ADD         R6, R6, #16 
    /*00010428*/ MOV         R0, R6 
    /*0001042c*/ BL          0x000000000001042C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00010430*/ CMP         R0, #0 
    /*00010434*/ BNE         VencSetH264Poc_x10534
    /*00010438*/ LDR         R3, [R8, R5] 
    /*0001043c*/ CMP         R3, #1 
    /*00010440*/ BNE         VencSetH264Poc_x104fc
    /*00010444*/ LDR         R3, [R9, #4] 
    /*00010448*/ CMP         R3, #96                     @ 0x60 
    /*0001044c*/ BNE         VencSetH264Poc_x104ac
    /*00010450*/ MOV         R0, #10 
    /*00010454*/ BL          0x0000000000010454          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00010458*/ MOV         R1, R7 
    /*0001045c*/ LDR         R3, [R0, #88]               @ 0x58 
    /*00010460*/ MOV         R0, R4 
    /*00010464*/ BLX         R3 
    /*00010468*/ MOV         R5, R0 
    /*0001046c*/ MOV         R0, R6 
    /*00010470*/ BL          0x0000000000010470          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010474*/ CMP         R5, #0 
    /*00010478*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*0001047c*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*00010480*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*00010484*/ MOV         R0, R5 
    /*00010488*/ ADD         SP, SP, #12 
    /*0001048c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264Poc_x10490:
    /*00010490*/ MOV         R0, R4 
    /*00010494*/ BL          0x0000000000000304 
    /*00010498*/ SUBS        R5, R0, #0 
    /*0001049c*/ BEQ         VencSetH264Poc_x10408
    VencSetH264Poc_x104a0:
    /*000104a0*/ MOV         R0, R5 
    /*000104a4*/ ADD         SP, SP, #12 
    /*000104a8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264Poc_x104ac:
    /*000104ac*/ STR         R3, [SP, #4] 
    /*000104b0*/ MOV         R1, #8 
    /*000104b4*/ MOVW        R3, #8880                   @ 0x22b0 
    /*000104b8*/ MOVW        R2, #0                      @ .LC355 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x431c] 
    /*000104bc*/ STR         R3, [SP] 
    /*000104c0*/ MOVT        R2, #0                      @ .LC355 [R_ARM_MOVT_ABS: .rodata.str1.4+0x431c] 
    /*000104c4*/ LDR         R3, [PC, #116]              @ 0x0000000000010540 
    /*000104c8*/ MOV         R0, #3 
    /*000104cc*/ BL          0x00000000000104CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000104d0*/ MOV         R0, R6 
    /*000104d4*/ BL          0x00000000000104D4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000104d8*/ MOVW        R5, #32776                  @ 0x8008 
    /*000104dc*/ MOVT        R5, #40968                  @ 0xa008 
    /*000104e0*/ MOV         R0, R5 
    /*000104e4*/ ADD         SP, SP, #12 
    /*000104e8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264Poc_x104ec:
    /*000104ec*/ BL          0x00000000000002C8 
    /*000104f0*/ SUBS        R5, R0, #0 
    /*000104f4*/ BNE         VencSetH264Poc_x104a0
    /*000104f8*/ B           VencSetH264Poc_x103ec
    VencSetH264Poc_x104fc:
    /*000104fc*/ MOVW        R3, #8865                   @ 0x22a1 
    /*00010500*/ MOV         R1, #8 
    /*00010504*/ STR         R3, [SP] 
    /*00010508*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0001050c*/ LDR         R3, [PC, #44]               @ 0x0000000000010540 
    /*00010510*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00010514*/ STR         R4, [SP, #4] 
    /*00010518*/ MOV         R0, #3 
    /*0001051c*/ BL          0x000000000001051C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010520*/ MOV         R0, R6 
    /*00010524*/ MOVW        R5, #32773                  @ 0x8005 
    /*00010528*/ BL          0x0000000000010528          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001052c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00010530*/ B           VencSetH264Poc_x104a0
    VencSetH264Poc_x10534:
    /*00010534*/ MOV         R5, #65024                  @ 0xfe00 
    /*00010538*/ MOVT        R5, #65535                  @ 0xffff 
    /*0001053c*/ B           VencSetH264Poc_x104a0
    /*00010540*/ ANDEQ       R0, R0, R0, ROR #13 
FUNC_END VencSetH264Poc


FUNC_BEGIN VencGetH264Poc
    /*00010544*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00010548*/ SUBS        R7, R1, #0 
    /*0001054c*/ SUB         SP, SP, #12 
    /*00010550*/ MOV         R4, R0 
    /*00010554*/ BEQ         VencGetH264Poc_x10658
    VencGetH264Poc_x10558:
    /*00010558*/ CMP         R4, #0 
    /*0001055c*/ BLT         VencGetH264Poc_x105fc
    /*00010560*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00010564*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00010568*/ LDR         R3, [R3] 
    /*0001056c*/ CMP         R4, R3 
    /*00010570*/ BCS         VencGetH264Poc_x105fc
    VencGetH264Poc_x10574:
    /*00010574*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00010578*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001057c*/ MUL         R5, R5, R4 
    /*00010580*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00010584*/ LDR         R8, [R3] 
    /*00010588*/ ADD         R9, R8, R5 
    /*0001058c*/ ADD         R6, R9, #12416              @ 0x3080 
    /*00010590*/ ADD         R6, R6, #16 
    /*00010594*/ MOV         R0, R6 
    /*00010598*/ BL          0x0000000000010598          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001059c*/ CMP         R0, #0 
    /*000105a0*/ BNE         VencGetH264Poc_x106a0
    /*000105a4*/ LDR         R3, [R8, R5] 
    /*000105a8*/ CMP         R3, #1 
    /*000105ac*/ BNE         VencGetH264Poc_x10668
    /*000105b0*/ LDR         R3, [R9, #4] 
    /*000105b4*/ CMP         R3, #96                     @ 0x60 
    /*000105b8*/ BNE         VencGetH264Poc_x10618
    /*000105bc*/ MOV         R0, #10 
    /*000105c0*/ BL          0x00000000000105C0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000105c4*/ MOV         R1, R7 
    /*000105c8*/ LDR         R3, [R0, #92]               @ 0x5c 
    /*000105cc*/ MOV         R0, R4 
    /*000105d0*/ BLX         R3 
    /*000105d4*/ MOV         R5, R0 
    /*000105d8*/ MOV         R0, R6 
    /*000105dc*/ BL          0x00000000000105DC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000105e0*/ CMP         R5, #0 
    /*000105e4*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*000105e8*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*000105ec*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*000105f0*/ MOV         R0, R5 
    /*000105f4*/ ADD         SP, SP, #12 
    /*000105f8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264Poc_x105fc:
    /*000105fc*/ MOV         R0, R4 
    /*00010600*/ BL          0x0000000000000304 
    /*00010604*/ SUBS        R5, R0, #0 
    /*00010608*/ BEQ         VencGetH264Poc_x10574
    VencGetH264Poc_x1060c:
    /*0001060c*/ MOV         R0, R5 
    /*00010610*/ ADD         SP, SP, #12 
    /*00010614*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264Poc_x10618:
    /*00010618*/ STR         R3, [SP, #4] 
    /*0001061c*/ MOV         R1, #8 
    /*00010620*/ MOVW        R3, #8935                   @ 0x22e7 
    /*00010624*/ MOVW        R2, #0                      @ .LC356 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4364] 
    /*00010628*/ STR         R3, [SP] 
    /*0001062c*/ MOVT        R2, #0                      @ .LC356 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4364] 
    /*00010630*/ LDR         R3, [PC, #116]              @ 0x00000000000106ac 
    /*00010634*/ MOV         R0, #3 
    /*00010638*/ BL          0x0000000000010638          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001063c*/ MOV         R0, R6 
    /*00010640*/ BL          0x0000000000010640          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010644*/ MOVW        R5, #32776                  @ 0x8008 
    /*00010648*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001064c*/ MOV         R0, R5 
    /*00010650*/ ADD         SP, SP, #12 
    /*00010654*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264Poc_x10658:
    /*00010658*/ BL          0x00000000000002C8 
    /*0001065c*/ SUBS        R5, R0, #0 
    /*00010660*/ BNE         VencGetH264Poc_x1060c
    /*00010664*/ B           VencGetH264Poc_x10558
    VencGetH264Poc_x10668:
    /*00010668*/ MOVW        R3, #8920                   @ 0x22d8 
    /*0001066c*/ MOV         R1, #8 
    /*00010670*/ STR         R3, [SP] 
    /*00010674*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00010678*/ LDR         R3, [PC, #44]               @ 0x00000000000106ac 
    /*0001067c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00010680*/ STR         R4, [SP, #4] 
    /*00010684*/ MOV         R0, #3 
    /*00010688*/ BL          0x0000000000010688          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001068c*/ MOV         R0, R6 
    /*00010690*/ MOVW        R5, #32773                  @ 0x8005 
    /*00010694*/ BL          0x0000000000010694          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010698*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001069c*/ B           VencGetH264Poc_x1060c
    VencGetH264Poc_x106a0:
    /*000106a0*/ MOV         R5, #65024                  @ 0xfe00 
    /*000106a4*/ MOVT        R5, #65535                  @ 0xffff 
    /*000106a8*/ B           VencGetH264Poc_x1060c
    /*000106ac*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VencGetH264Poc


FUNC_BEGIN VencSetH264Dblk
    /*000106b0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000106b4*/ SUBS        R7, R1, #0 
    /*000106b8*/ SUB         SP, SP, #12 
    /*000106bc*/ MOV         R4, R0 
    /*000106c0*/ BEQ         VencSetH264Dblk_x107c4
    VencSetH264Dblk_x106c4:
    /*000106c4*/ CMP         R4, #0 
    /*000106c8*/ BLT         VencSetH264Dblk_x10768
    /*000106cc*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000106d0*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000106d4*/ LDR         R3, [R3] 
    /*000106d8*/ CMP         R4, R3 
    /*000106dc*/ BCS         VencSetH264Dblk_x10768
    VencSetH264Dblk_x106e0:
    /*000106e0*/ MOVW        R5, #36240                  @ 0x8d90 
    /*000106e4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000106e8*/ MUL         R5, R5, R4 
    /*000106ec*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000106f0*/ LDR         R8, [R3] 
    /*000106f4*/ ADD         R9, R8, R5 
    /*000106f8*/ ADD         R6, R9, #12416              @ 0x3080 
    /*000106fc*/ ADD         R6, R6, #16 
    /*00010700*/ MOV         R0, R6 
    /*00010704*/ BL          0x0000000000010704          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00010708*/ CMP         R0, #0 
    /*0001070c*/ BNE         VencSetH264Dblk_x1080c
    /*00010710*/ LDR         R3, [R8, R5] 
    /*00010714*/ CMP         R3, #1 
    /*00010718*/ BNE         VencSetH264Dblk_x107d4
    /*0001071c*/ LDR         R3, [R9, #4] 
    /*00010720*/ CMP         R3, #96                     @ 0x60 
    /*00010724*/ BNE         VencSetH264Dblk_x10784
    /*00010728*/ MOV         R0, #10 
    /*0001072c*/ BL          0x000000000001072C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00010730*/ MOV         R1, R7 
    /*00010734*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*00010738*/ MOV         R0, R4 
    /*0001073c*/ BLX         R3 
    /*00010740*/ MOV         R5, R0 
    /*00010744*/ MOV         R0, R6 
    /*00010748*/ BL          0x0000000000010748          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001074c*/ CMP         R5, #0 
    /*00010750*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*00010754*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*00010758*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*0001075c*/ MOV         R0, R5 
    /*00010760*/ ADD         SP, SP, #12 
    /*00010764*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264Dblk_x10768:
    /*00010768*/ MOV         R0, R4 
    /*0001076c*/ BL          0x0000000000000304 
    /*00010770*/ SUBS        R5, R0, #0 
    /*00010774*/ BEQ         VencSetH264Dblk_x106e0
    VencSetH264Dblk_x10778:
    /*00010778*/ MOV         R0, R5 
    /*0001077c*/ ADD         SP, SP, #12 
    /*00010780*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264Dblk_x10784:
    /*00010784*/ STR         R3, [SP, #4] 
    /*00010788*/ MOV         R1, #8 
    /*0001078c*/ MOVW        R3, #8991                   @ 0x231f 
    /*00010790*/ MOVW        R2, #0                      @ .LC357 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x43a8] 
    /*00010794*/ STR         R3, [SP] 
    /*00010798*/ MOVT        R2, #0                      @ .LC357 [R_ARM_MOVT_ABS: .rodata.str1.4+0x43a8] 
    /*0001079c*/ LDR         R3, [PC, #116]              @ 0x0000000000010818 
    /*000107a0*/ MOV         R0, #3 
    /*000107a4*/ BL          0x00000000000107A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000107a8*/ MOV         R0, R6 
    /*000107ac*/ BL          0x00000000000107AC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000107b0*/ MOVW        R5, #32776                  @ 0x8008 
    /*000107b4*/ MOVT        R5, #40968                  @ 0xa008 
    /*000107b8*/ MOV         R0, R5 
    /*000107bc*/ ADD         SP, SP, #12 
    /*000107c0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264Dblk_x107c4:
    /*000107c4*/ BL          0x00000000000002C8 
    /*000107c8*/ SUBS        R5, R0, #0 
    /*000107cc*/ BNE         VencSetH264Dblk_x10778
    /*000107d0*/ B           VencSetH264Dblk_x106c4
    VencSetH264Dblk_x107d4:
    /*000107d4*/ MOVW        R3, #8976                   @ 0x2310 
    /*000107d8*/ MOV         R1, #8 
    /*000107dc*/ STR         R3, [SP] 
    /*000107e0*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*000107e4*/ LDR         R3, [PC, #44]               @ 0x0000000000010818 
    /*000107e8*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*000107ec*/ STR         R4, [SP, #4] 
    /*000107f0*/ MOV         R0, #3 
    /*000107f4*/ BL          0x00000000000107F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000107f8*/ MOV         R0, R6 
    /*000107fc*/ MOVW        R5, #32773                  @ 0x8005 
    /*00010800*/ BL          0x0000000000010800          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010804*/ MOVT        R5, #40968                  @ 0xa008 
    /*00010808*/ B           VencSetH264Dblk_x10778
    VencSetH264Dblk_x1080c:
    /*0001080c*/ MOV         R5, #65024                  @ 0xfe00 
    /*00010810*/ MOVT        R5, #65535                  @ 0xffff 
    /*00010814*/ B           VencSetH264Dblk_x10778
    /*00010818*/ ANDEQ       R0, R0, R0, LSL #14 
FUNC_END VencSetH264Dblk


FUNC_BEGIN VencGetH264Dblk
    /*0001081c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00010820*/ SUBS        R7, R1, #0 
    /*00010824*/ SUB         SP, SP, #12 
    /*00010828*/ MOV         R4, R0 
    /*0001082c*/ BEQ         VencGetH264Dblk_x10930
    VencGetH264Dblk_x10830:
    /*00010830*/ CMP         R4, #0 
    /*00010834*/ BLT         VencGetH264Dblk_x108d4
    /*00010838*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0001083c*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00010840*/ LDR         R3, [R3] 
    /*00010844*/ CMP         R4, R3 
    /*00010848*/ BCS         VencGetH264Dblk_x108d4
    VencGetH264Dblk_x1084c:
    /*0001084c*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00010850*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00010854*/ MUL         R5, R5, R4 
    /*00010858*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001085c*/ LDR         R8, [R3] 
    /*00010860*/ ADD         R9, R8, R5 
    /*00010864*/ ADD         R6, R9, #12416              @ 0x3080 
    /*00010868*/ ADD         R6, R6, #16 
    /*0001086c*/ MOV         R0, R6 
    /*00010870*/ BL          0x0000000000010870          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00010874*/ CMP         R0, #0 
    /*00010878*/ BNE         VencGetH264Dblk_x10978
    /*0001087c*/ LDR         R3, [R8, R5] 
    /*00010880*/ CMP         R3, #1 
    /*00010884*/ BNE         VencGetH264Dblk_x10940
    /*00010888*/ LDR         R3, [R9, #4] 
    /*0001088c*/ CMP         R3, #96                     @ 0x60 
    /*00010890*/ BNE         VencGetH264Dblk_x108f0
    /*00010894*/ MOV         R0, #10 
    /*00010898*/ BL          0x0000000000010898          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001089c*/ MOV         R1, R7 
    /*000108a0*/ LDR         R3, [R0, #112]              @ 0x70 
    /*000108a4*/ MOV         R0, R4 
    /*000108a8*/ BLX         R3 
    /*000108ac*/ MOV         R5, R0 
    /*000108b0*/ MOV         R0, R6 
    /*000108b4*/ BL          0x00000000000108B4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000108b8*/ CMP         R5, #0 
    /*000108bc*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*000108c0*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*000108c4*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*000108c8*/ MOV         R0, R5 
    /*000108cc*/ ADD         SP, SP, #12 
    /*000108d0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264Dblk_x108d4:
    /*000108d4*/ MOV         R0, R4 
    /*000108d8*/ BL          0x0000000000000304 
    /*000108dc*/ SUBS        R5, R0, #0 
    /*000108e0*/ BEQ         VencGetH264Dblk_x1084c
    VencGetH264Dblk_x108e4:
    /*000108e4*/ MOV         R0, R5 
    /*000108e8*/ ADD         SP, SP, #12 
    /*000108ec*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264Dblk_x108f0:
    /*000108f0*/ STR         R3, [SP, #4] 
    /*000108f4*/ MOV         R1, #8 
    /*000108f8*/ MOVW        R3, #9047                   @ 0x2357 
    /*000108fc*/ MOVW        R2, #0                      @ .LC358 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x43f4] 
    /*00010900*/ STR         R3, [SP] 
    /*00010904*/ MOVT        R2, #0                      @ .LC358 [R_ARM_MOVT_ABS: .rodata.str1.4+0x43f4] 
    /*00010908*/ LDR         R3, [PC, #116]              @ 0x0000000000010984 
    /*0001090c*/ MOV         R0, #3 
    /*00010910*/ BL          0x0000000000010910          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010914*/ MOV         R0, R6 
    /*00010918*/ BL          0x0000000000010918          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001091c*/ MOVW        R5, #32776                  @ 0x8008 
    /*00010920*/ MOVT        R5, #40968                  @ 0xa008 
    /*00010924*/ MOV         R0, R5 
    /*00010928*/ ADD         SP, SP, #12 
    /*0001092c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264Dblk_x10930:
    /*00010930*/ BL          0x00000000000002C8 
    /*00010934*/ SUBS        R5, R0, #0 
    /*00010938*/ BNE         VencGetH264Dblk_x108e4
    /*0001093c*/ B           VencGetH264Dblk_x10830
    VencGetH264Dblk_x10940:
    /*00010940*/ MOVW        R3, #9032                   @ 0x2348 
    /*00010944*/ MOV         R1, #8 
    /*00010948*/ STR         R3, [SP] 
    /*0001094c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00010950*/ LDR         R3, [PC, #44]               @ 0x0000000000010984 
    /*00010954*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00010958*/ STR         R4, [SP, #4] 
    /*0001095c*/ MOV         R0, #3 
    /*00010960*/ BL          0x0000000000010960          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010964*/ MOV         R0, R6 
    /*00010968*/ MOVW        R5, #32773                  @ 0x8005 
    /*0001096c*/ BL          0x000000000001096C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010970*/ MOVT        R5, #40968                  @ 0xa008 
    /*00010974*/ B           VencGetH264Dblk_x108e4
    VencGetH264Dblk_x10978:
    /*00010978*/ MOV         R5, #65024                  @ 0xfe00 
    /*0001097c*/ MOVT        R5, #65535                  @ 0xffff 
    /*00010980*/ B           VencGetH264Dblk_x108e4
    /*00010984*/ ANDEQ       R0, R0, R0, LSL R7 
FUNC_END VencGetH264Dblk


FUNC_BEGIN VencSetH264Vui
    /*00010988*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001098c*/ SUBS        R7, R1, #0 
    /*00010990*/ SUB         SP, SP, #12 
    /*00010994*/ MOV         R4, R0 
    /*00010998*/ BEQ         VencSetH264Vui_x10a9c
    VencSetH264Vui_x1099c:
    /*0001099c*/ CMP         R4, #0 
    /*000109a0*/ BLT         VencSetH264Vui_x10a40
    /*000109a4*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000109a8*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000109ac*/ LDR         R3, [R3] 
    /*000109b0*/ CMP         R4, R3 
    /*000109b4*/ BCS         VencSetH264Vui_x10a40
    VencSetH264Vui_x109b8:
    /*000109b8*/ MOVW        R5, #36240                  @ 0x8d90 
    /*000109bc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000109c0*/ MUL         R5, R5, R4 
    /*000109c4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000109c8*/ LDR         R8, [R3] 
    /*000109cc*/ ADD         R9, R8, R5 
    /*000109d0*/ ADD         R6, R9, #12416              @ 0x3080 
    /*000109d4*/ ADD         R6, R6, #16 
    /*000109d8*/ MOV         R0, R6 
    /*000109dc*/ BL          0x00000000000109DC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000109e0*/ CMP         R0, #0 
    /*000109e4*/ BNE         VencSetH264Vui_x10ae4
    /*000109e8*/ LDR         R3, [R8, R5] 
    /*000109ec*/ CMP         R3, #1 
    /*000109f0*/ BNE         VencSetH264Vui_x10aac
    /*000109f4*/ LDR         R3, [R9, #4] 
    /*000109f8*/ CMP         R3, #96                     @ 0x60 
    /*000109fc*/ BNE         VencSetH264Vui_x10a5c
    /*00010a00*/ MOV         R0, #10 
    /*00010a04*/ BL          0x0000000000010A04          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00010a08*/ MOV         R1, R7 
    /*00010a0c*/ LDR         R3, [R0, #116]              @ 0x74 
    /*00010a10*/ MOV         R0, R4 
    /*00010a14*/ BLX         R3 
    /*00010a18*/ MOV         R5, R0 
    /*00010a1c*/ MOV         R0, R6 
    /*00010a20*/ BL          0x0000000000010A20          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010a24*/ CMP         R5, #0 
    /*00010a28*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*00010a2c*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*00010a30*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*00010a34*/ MOV         R0, R5 
    /*00010a38*/ ADD         SP, SP, #12 
    /*00010a3c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264Vui_x10a40:
    /*00010a40*/ MOV         R0, R4 
    /*00010a44*/ BL          0x0000000000000304 
    /*00010a48*/ SUBS        R5, R0, #0 
    /*00010a4c*/ BEQ         VencSetH264Vui_x109b8
    VencSetH264Vui_x10a50:
    /*00010a50*/ MOV         R0, R5 
    /*00010a54*/ ADD         SP, SP, #12 
    /*00010a58*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264Vui_x10a5c:
    /*00010a5c*/ STR         R3, [SP, #4] 
    /*00010a60*/ MOV         R1, #8 
    /*00010a64*/ MOVW        R3, #9103                   @ 0x238f 
    /*00010a68*/ MOVW        R2, #0                      @ .LC359 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4440] 
    /*00010a6c*/ STR         R3, [SP] 
    /*00010a70*/ MOVT        R2, #0                      @ .LC359 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4440] 
    /*00010a74*/ LDR         R3, [PC, #116]              @ 0x0000000000010af0 
    /*00010a78*/ MOV         R0, #3 
    /*00010a7c*/ BL          0x0000000000010A7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010a80*/ MOV         R0, R6 
    /*00010a84*/ BL          0x0000000000010A84          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010a88*/ MOVW        R5, #32776                  @ 0x8008 
    /*00010a8c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00010a90*/ MOV         R0, R5 
    /*00010a94*/ ADD         SP, SP, #12 
    /*00010a98*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264Vui_x10a9c:
    /*00010a9c*/ BL          0x00000000000002C8 
    /*00010aa0*/ SUBS        R5, R0, #0 
    /*00010aa4*/ BNE         VencSetH264Vui_x10a50
    /*00010aa8*/ B           VencSetH264Vui_x1099c
    VencSetH264Vui_x10aac:
    /*00010aac*/ MOV         R3, #9088                   @ 0x2380 
    /*00010ab0*/ MOV         R1, #8 
    /*00010ab4*/ STR         R3, [SP] 
    /*00010ab8*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00010abc*/ LDR         R3, [PC, #44]               @ 0x0000000000010af0 
    /*00010ac0*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00010ac4*/ STR         R4, [SP, #4] 
    /*00010ac8*/ MOV         R0, #3 
    /*00010acc*/ BL          0x0000000000010ACC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010ad0*/ MOV         R0, R6 
    /*00010ad4*/ MOVW        R5, #32773                  @ 0x8005 
    /*00010ad8*/ BL          0x0000000000010AD8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010adc*/ MOVT        R5, #40968                  @ 0xa008 
    /*00010ae0*/ B           VencSetH264Vui_x10a50
    VencSetH264Vui_x10ae4:
    /*00010ae4*/ MOV         R5, #65024                  @ 0xfe00 
    /*00010ae8*/ MOVT        R5, #65535                  @ 0xffff 
    /*00010aec*/ B           VencSetH264Vui_x10a50
    /*00010af0*/ ANDEQ       R0, R0, R0, LSR #14 
FUNC_END VencSetH264Vui


FUNC_BEGIN VencGetH264Vui
    /*00010af4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00010af8*/ SUBS        R7, R1, #0 
    /*00010afc*/ SUB         SP, SP, #12 
    /*00010b00*/ MOV         R4, R0 
    /*00010b04*/ BEQ         VencGetH264Vui_x10c08
    VencGetH264Vui_x10b08:
    /*00010b08*/ CMP         R4, #0 
    /*00010b0c*/ BLT         VencGetH264Vui_x10bac
    /*00010b10*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00010b14*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00010b18*/ LDR         R3, [R3] 
    /*00010b1c*/ CMP         R4, R3 
    /*00010b20*/ BCS         VencGetH264Vui_x10bac
    VencGetH264Vui_x10b24:
    /*00010b24*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00010b28*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00010b2c*/ MUL         R5, R5, R4 
    /*00010b30*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00010b34*/ LDR         R8, [R3] 
    /*00010b38*/ ADD         R9, R8, R5 
    /*00010b3c*/ ADD         R6, R9, #12416              @ 0x3080 
    /*00010b40*/ ADD         R6, R6, #16 
    /*00010b44*/ MOV         R0, R6 
    /*00010b48*/ BL          0x0000000000010B48          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00010b4c*/ CMP         R0, #0 
    /*00010b50*/ BNE         VencGetH264Vui_x10c50
    /*00010b54*/ LDR         R3, [R8, R5] 
    /*00010b58*/ CMP         R3, #1 
    /*00010b5c*/ BNE         VencGetH264Vui_x10c18
    /*00010b60*/ LDR         R3, [R9, #4] 
    /*00010b64*/ CMP         R3, #96                     @ 0x60 
    /*00010b68*/ BNE         VencGetH264Vui_x10bc8
    /*00010b6c*/ MOV         R0, #10 
    /*00010b70*/ BL          0x0000000000010B70          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00010b74*/ MOV         R1, R7 
    /*00010b78*/ LDR         R3, [R0, #120]              @ 0x78 
    /*00010b7c*/ MOV         R0, R4 
    /*00010b80*/ BLX         R3 
    /*00010b84*/ MOV         R5, R0 
    /*00010b88*/ MOV         R0, R6 
    /*00010b8c*/ BL          0x0000000000010B8C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010b90*/ CMP         R5, #0 
    /*00010b94*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*00010b98*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*00010b9c*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*00010ba0*/ MOV         R0, R5 
    /*00010ba4*/ ADD         SP, SP, #12 
    /*00010ba8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264Vui_x10bac:
    /*00010bac*/ MOV         R0, R4 
    /*00010bb0*/ BL          0x0000000000000304 
    /*00010bb4*/ SUBS        R5, R0, #0 
    /*00010bb8*/ BEQ         VencGetH264Vui_x10b24
    VencGetH264Vui_x10bbc:
    /*00010bbc*/ MOV         R0, R5 
    /*00010bc0*/ ADD         SP, SP, #12 
    /*00010bc4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264Vui_x10bc8:
    /*00010bc8*/ STR         R3, [SP, #4] 
    /*00010bcc*/ MOV         R1, #8 
    /*00010bd0*/ MOVW        R3, #9159                   @ 0x23c7 
    /*00010bd4*/ MOVW        R2, #0                      @ .LC360 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4484] 
    /*00010bd8*/ STR         R3, [SP] 
    /*00010bdc*/ MOVT        R2, #0                      @ .LC360 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4484] 
    /*00010be0*/ LDR         R3, [PC, #116]              @ 0x0000000000010c5c 
    /*00010be4*/ MOV         R0, #3 
    /*00010be8*/ BL          0x0000000000010BE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010bec*/ MOV         R0, R6 
    /*00010bf0*/ BL          0x0000000000010BF0          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010bf4*/ MOVW        R5, #32776                  @ 0x8008 
    /*00010bf8*/ MOVT        R5, #40968                  @ 0xa008 
    /*00010bfc*/ MOV         R0, R5 
    /*00010c00*/ ADD         SP, SP, #12 
    /*00010c04*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264Vui_x10c08:
    /*00010c08*/ BL          0x00000000000002C8 
    /*00010c0c*/ SUBS        R5, R0, #0 
    /*00010c10*/ BNE         VencGetH264Vui_x10bbc
    /*00010c14*/ B           VencGetH264Vui_x10b08
    VencGetH264Vui_x10c18:
    /*00010c18*/ MOVW        R3, #9144                   @ 0x23b8 
    /*00010c1c*/ MOV         R1, #8 
    /*00010c20*/ STR         R3, [SP] 
    /*00010c24*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00010c28*/ LDR         R3, [PC, #44]               @ 0x0000000000010c5c 
    /*00010c2c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00010c30*/ STR         R4, [SP, #4] 
    /*00010c34*/ MOV         R0, #3 
    /*00010c38*/ BL          0x0000000000010C38          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010c3c*/ MOV         R0, R6 
    /*00010c40*/ MOVW        R5, #32773                  @ 0x8005 
    /*00010c44*/ BL          0x0000000000010C44          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010c48*/ MOVT        R5, #40968                  @ 0xa008 
    /*00010c4c*/ B           VencGetH264Vui_x10bbc
    VencGetH264Vui_x10c50:
    /*00010c50*/ MOV         R5, #65024                  @ 0xfe00 
    /*00010c54*/ MOVT        R5, #65535                  @ 0xffff 
    /*00010c58*/ B           VencGetH264Vui_x10bbc
    /*00010c5c*/ ANDEQ       R0, R0, R0, LSR R7 
FUNC_END VencGetH264Vui


FUNC_BEGIN VencSetRefParam
    /*00010c60*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00010c64*/ SUBS        R7, R1, #0 
    /*00010c68*/ SUB         SP, SP, #12 
    /*00010c6c*/ MOV         R4, R0 
    /*00010c70*/ BEQ         VencSetRefParam_x10d78
    VencSetRefParam_x10c74:
    /*00010c74*/ CMP         R4, #0 
    /*00010c78*/ BLT         VencSetRefParam_x10d5c
    /*00010c7c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00010c80*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00010c84*/ LDR         R3, [R3] 
    /*00010c88*/ CMP         R4, R3 
    /*00010c8c*/ BCS         VencSetRefParam_x10d5c
    VencSetRefParam_x10c90:
    /*00010c90*/ MOVW        R8, #36240                  @ 0x8d90 
    /*00010c94*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00010c98*/ MUL         R8, R8, R4 
    /*00010c9c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00010ca0*/ LDR         R9, [R3] 
    /*00010ca4*/ ADD         R5, R9, R8 
    /*00010ca8*/ ADD         R6, R5, #12416              @ 0x3080 
    /*00010cac*/ ADD         R6, R6, #16 
    /*00010cb0*/ MOV         R0, R6 
    /*00010cb4*/ BL          0x0000000000010CB4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00010cb8*/ CMP         R0, #0 
    /*00010cbc*/ BNE         VencSetRefParam_x10e98
    /*00010cc0*/ LDR         R3, [R9, R8] 
    /*00010cc4*/ CMP         R3, #1 
    /*00010cc8*/ BNE         VencSetRefParam_x10e60
    /*00010ccc*/ BL          0x0000000000010CCC          @ VENC_DRV_IsSupportRef [R_ARM_CALL: .text+0x269f8] 
    /*00010cd0*/ CMP         R0, #0 
    /*00010cd4*/ BEQ         VencSetRefParam_x10ea4
    /*00010cd8*/ LDR         R3, [R5, #4] 
    /*00010cdc*/ MOVW        R2, #265                    @ 0x109 
    /*00010ce0*/ CMP         R3, #96                     @ 0x60 
    /*00010ce4*/ CMPNE       R3, R2 
    /*00010ce8*/ BNE         VencSetRefParam_x10e34
    /*00010cec*/ CMP         R3, #96                     @ 0x60 
    /*00010cf0*/ BEQ         VencSetRefParam_x10dac
    /*00010cf4*/ CMP         R3, R2 
    /*00010cf8*/ BNE         VencSetRefParam_x10d88
    /*00010cfc*/ MOV         R0, #13 
    /*00010d00*/ ADD         R8, R5, #12992              @ 0x32c0 
    /*00010d04*/ BL          0x0000000000010D04          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00010d08*/ ADD         R8, R8, #12 
    /*00010d0c*/ MOV         R1, R8 
    /*00010d10*/ LDR         R3, [R0, #132]              @ 0x84 
    /*00010d14*/ MOV         R0, R7 
    /*00010d18*/ BLX         R3 
    /*00010d1c*/ SUBS        R5, R0, #0 
    /*00010d20*/ BEQ         VencSetRefParam_x10e10
    VencSetRefParam_x10d24:
    /*00010d24*/ MOV         R3, R4 
    /*00010d28*/ MOVW        R2, #0                      @ .LC363 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4544] 
    /*00010d2c*/ MOV         R1, #8 
    /*00010d30*/ MOVT        R2, #0                      @ .LC363 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4544] 
    /*00010d34*/ MOV         R0, #3 
    /*00010d38*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00010d3c*/ BL          0x0000000000010D3C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010d40*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00010d44*/ ORR         R5, R5, #524288             @ 0x80000 
    VencSetRefParam_x10d48:
    /*00010d48*/ MOV         R0, R6 
    /*00010d4c*/ BL          0x0000000000010D4C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010d50*/ MOV         R0, R5 
    /*00010d54*/ ADD         SP, SP, #12 
    /*00010d58*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetRefParam_x10d5c:
    /*00010d5c*/ MOV         R0, R4 
    /*00010d60*/ BL          0x0000000000000304 
    /*00010d64*/ SUBS        R5, R0, #0 
    /*00010d68*/ BEQ         VencSetRefParam_x10c90
    VencSetRefParam_x10d6c:
    /*00010d6c*/ MOV         R0, R5 
    /*00010d70*/ ADD         SP, SP, #12 
    /*00010d74*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetRefParam_x10d78:
    /*00010d78*/ BL          0x00000000000002C8 
    /*00010d7c*/ SUBS        R5, R0, #0 
    /*00010d80*/ BNE         VencSetRefParam_x10d6c
    /*00010d84*/ B           VencSetRefParam_x10c74
    VencSetRefParam_x10d88:
    /*00010d88*/ MOV         R3, R4 
    /*00010d8c*/ MOVW        R2, #0                      @ .LC362 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4508] 
    /*00010d90*/ MOV         R1, #8 
    /*00010d94*/ MOVT        R2, #0                      @ .LC362 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4508] 
    /*00010d98*/ MOV         R0, #3 
    /*00010d9c*/ MOVW        R5, #32776                  @ 0x8008 
    /*00010da0*/ BL          0x0000000000010DA0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010da4*/ MOVT        R5, #40968                  @ 0xa008 
    /*00010da8*/ B           VencSetRefParam_x10d48
    VencSetRefParam_x10dac:
    /*00010dac*/ MOV         R0, #10 
    /*00010db0*/ ADD         R8, R5, #12992              @ 0x32c0 
    /*00010db4*/ BL          0x0000000000010DB4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00010db8*/ ADD         R8, R8, #12 
    /*00010dbc*/ MOV         R1, R8 
    /*00010dc0*/ LDR         R3, [R0, #104]              @ 0x68 
    /*00010dc4*/ MOV         R0, R7 
    /*00010dc8*/ BLX         R3 
    /*00010dcc*/ SUBS        R5, R0, #0 
    /*00010dd0*/ BNE         VencSetRefParam_x10d24
    /*00010dd4*/ MOV         R0, #10 
    /*00010dd8*/ BL          0x0000000000010DD8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00010ddc*/ MOV         R2, R8 
    /*00010de0*/ MOV         R1, R7 
    /*00010de4*/ LDR         R3, [R0, #96]               @ 0x60 
    /*00010de8*/ MOV         R0, R4 
    /*00010dec*/ BLX         R3 
    /*00010df0*/ MOV         R5, R0 
    VencSetRefParam_x10df4:
    /*00010df4*/ MOV         R0, R6 
    /*00010df8*/ BL          0x0000000000010DF8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010dfc*/ CMP         R5, #0 
    /*00010e00*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*00010e04*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*00010e08*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*00010e0c*/ B           VencSetRefParam_x10d6c
    VencSetRefParam_x10e10:
    /*00010e10*/ MOV         R0, #13 
    /*00010e14*/ BL          0x0000000000010E14          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00010e18*/ MOV         R2, R8 
    /*00010e1c*/ MOV         R1, R7 
    /*00010e20*/ LDR         R3, [R0, #124]              @ 0x7c 
    /*00010e24*/ MOV         R0, R4 
    /*00010e28*/ BLX         R3 
    /*00010e2c*/ MOV         R5, R0 
    /*00010e30*/ B           VencSetRefParam_x10df4
    VencSetRefParam_x10e34:
    /*00010e34*/ MOV         R3, R4 
    /*00010e38*/ MOV         R1, #8 
    /*00010e3c*/ MOVW        R2, #0                      @ .LC362 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4508] 
    /*00010e40*/ MOV         R0, #3 
    /*00010e44*/ MOVT        R2, #0                      @ .LC362 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4508] 
    /*00010e48*/ MOVW        R5, #32776                  @ 0x8008 
    /*00010e4c*/ BL          0x0000000000010E4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010e50*/ MOV         R0, R6 
    /*00010e54*/ BL          0x0000000000010E54          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010e58*/ MOVT        R5, #40968                  @ 0xa008 
    /*00010e5c*/ B           VencSetRefParam_x10d6c
    VencSetRefParam_x10e60:
    /*00010e60*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00010e64*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00010e68*/ MOVW        R3, #9186                   @ 0x23e2 
    /*00010e6c*/ STR         R4, [SP, #4] 
    /*00010e70*/ STR         R3, [SP] 
    VencSetRefParam_x10e74:
    /*00010e74*/ LDR         R3, [PC, #64]               @ 0x0000000000010ebc 
    /*00010e78*/ MOV         R1, #8 
    /*00010e7c*/ MOV         R0, #3 
    /*00010e80*/ MOVW        R5, #32773                  @ 0x8005 
    /*00010e84*/ BL          0x0000000000010E84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010e88*/ MOV         R0, R6 
    /*00010e8c*/ BL          0x0000000000010E8C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010e90*/ MOVT        R5, #40968                  @ 0xa008 
    /*00010e94*/ B           VencSetRefParam_x10d6c
    VencSetRefParam_x10e98:
    /*00010e98*/ MOV         R5, #65024                  @ 0xfe00 
    /*00010e9c*/ MOVT        R5, #65535                  @ 0xffff 
    /*00010ea0*/ B           VencSetRefParam_x10d6c
    VencSetRefParam_x10ea4:
    /*00010ea4*/ MOVW        R3, #9198                   @ 0x23ee 
    /*00010ea8*/ MOVW        R2, #0                      @ .LC361 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x44c8] 
    /*00010eac*/ STR         R4, [SP, #4] 
    /*00010eb0*/ MOVT        R2, #0                      @ .LC361 [R_ARM_MOVT_ABS: .rodata.str1.4+0x44c8] 
    /*00010eb4*/ STR         R3, [SP] 
    /*00010eb8*/ B           VencSetRefParam_x10e74
    /*00010ebc*/ ANDEQ       R0, R0, R0, ASR #14 
FUNC_END VencSetRefParam


FUNC_BEGIN VencGetRefParam
    /*00010ec0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00010ec4*/ SUBS        R7, R1, #0 
    /*00010ec8*/ SUB         SP, SP, #12 
    /*00010ecc*/ MOV         R4, R0 
    /*00010ed0*/ BEQ         VencGetRefParam_x10fe4
    VencGetRefParam_x10ed4:
    /*00010ed4*/ CMP         R4, #0 
    /*00010ed8*/ BLT         VencGetRefParam_x10f7c
    /*00010edc*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00010ee0*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00010ee4*/ LDR         R3, [R3] 
    /*00010ee8*/ CMP         R4, R3 
    /*00010eec*/ BCS         VencGetRefParam_x10f7c
    VencGetRefParam_x10ef0:
    /*00010ef0*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00010ef4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00010ef8*/ MUL         R5, R5, R4 
    /*00010efc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00010f00*/ LDR         R8, [R3] 
    /*00010f04*/ ADD         R9, R8, R5 
    /*00010f08*/ ADD         R6, R9, #12416              @ 0x3080 
    /*00010f0c*/ ADD         R6, R6, #16 
    /*00010f10*/ MOV         R0, R6 
    /*00010f14*/ BL          0x0000000000010F14          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00010f18*/ CMP         R0, #0 
    /*00010f1c*/ BNE         VencGetRefParam_x1102c
    /*00010f20*/ LDR         R3, [R8, R5] 
    /*00010f24*/ CMP         R3, #1 
    /*00010f28*/ BNE         VencGetRefParam_x10ff4
    /*00010f2c*/ LDR         R3, [R9, #4] 
    /*00010f30*/ CMP         R3, #96                     @ 0x60 
    /*00010f34*/ BEQ         VencGetRefParam_x10f98
    /*00010f38*/ MOVW        R2, #265                    @ 0x109 
    /*00010f3c*/ CMP         R3, R2 
    /*00010f40*/ BNE         VencGetRefParam_x10fb8
    /*00010f44*/ MOV         R0, #13 
    /*00010f48*/ BL          0x0000000000010F48          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00010f4c*/ MOV         R1, R7 
    /*00010f50*/ LDR         R3, [R0, #128]              @ 0x80 
    /*00010f54*/ MOV         R0, R4 
    /*00010f58*/ BLX         R3 
    /*00010f5c*/ MOV         R5, R0 
    VencGetRefParam_x10f60:
    /*00010f60*/ MOV         R0, R6 
    /*00010f64*/ BL          0x0000000000010F64          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010f68*/ CMP         R5, #0 
    /*00010f6c*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*00010f70*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*00010f74*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*00010f78*/ B           VencGetRefParam_x10f8c
    VencGetRefParam_x10f7c:
    /*00010f7c*/ MOV         R0, R4 
    /*00010f80*/ BL          0x0000000000000304 
    /*00010f84*/ SUBS        R5, R0, #0 
    /*00010f88*/ BEQ         VencGetRefParam_x10ef0
    VencGetRefParam_x10f8c:
    /*00010f8c*/ MOV         R0, R5 
    /*00010f90*/ ADD         SP, SP, #12 
    /*00010f94*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetRefParam_x10f98:
    /*00010f98*/ MOV         R0, #10 
    /*00010f9c*/ BL          0x0000000000010F9C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00010fa0*/ MOV         R1, R7 
    /*00010fa4*/ LDR         R3, [R0, #100]              @ 0x64 
    /*00010fa8*/ MOV         R0, R4 
    /*00010fac*/ BLX         R3 
    /*00010fb0*/ MOV         R5, R0 
    /*00010fb4*/ B           VencGetRefParam_x10f60
    VencGetRefParam_x10fb8:
    /*00010fb8*/ MOV         R3, R4 
    /*00010fbc*/ MOV         R1, #8 
    /*00010fc0*/ MOVW        R2, #0                      @ .LC364 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4564] 
    /*00010fc4*/ MOV         R0, #3 
    /*00010fc8*/ MOVT        R2, #0                      @ .LC364 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4564] 
    /*00010fcc*/ MOVW        R5, #32776                  @ 0x8008 
    /*00010fd0*/ BL          0x0000000000010FD0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010fd4*/ MOV         R0, R6 
    /*00010fd8*/ BL          0x0000000000010FD8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010fdc*/ MOVT        R5, #40968                  @ 0xa008 
    /*00010fe0*/ B           VencGetRefParam_x10f8c
    VencGetRefParam_x10fe4:
    /*00010fe4*/ BL          0x00000000000002C8 
    /*00010fe8*/ SUBS        R5, R0, #0 
    /*00010fec*/ BNE         VencGetRefParam_x10f8c
    /*00010ff0*/ B           VencGetRefParam_x10ed4
    VencGetRefParam_x10ff4:
    /*00010ff4*/ MOVW        R3, #9272                   @ 0x2438 
    /*00010ff8*/ MOV         R1, #8 
    /*00010ffc*/ STR         R3, [SP] 
    /*00011000*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00011004*/ LDR         R3, [PC, #44]               @ 0x0000000000011038 
    /*00011008*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001100c*/ STR         R4, [SP, #4] 
    /*00011010*/ MOV         R0, #3 
    /*00011014*/ BL          0x0000000000011014          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011018*/ MOV         R0, R6 
    /*0001101c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00011020*/ BL          0x0000000000011020          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011024*/ MOVT        R5, #40968                  @ 0xa008 
    /*00011028*/ B           VencGetRefParam_x10f8c
    VencGetRefParam_x1102c:
    /*0001102c*/ MOV         R5, #65024                  @ 0xfe00 
    /*00011030*/ MOVT        R5, #65535                  @ 0xffff 
    /*00011034*/ B           VencGetRefParam_x10f8c
    /*00011038*/ ANDEQ       R0, R0, R0, ASR R7 
FUNC_END VencGetRefParam


FUNC_BEGIN VencEnableIDR
    /*0001103c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00011040*/ SUBS        R4, R0, #0 
    /*00011044*/ SUB         SP, SP, #12 
    /*00011048*/ MOV         R8, R1 
    /*0001104c*/ BLT         VencEnableIDR_x11108
    /*00011050*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00011054*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00011058*/ LDR         R3, [R3] 
    /*0001105c*/ CMP         R4, R3 
    /*00011060*/ BCS         VencEnableIDR_x11108
    VencEnableIDR_x11064:
    /*00011064*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00011068*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001106c*/ MUL         R5, R5, R4 
    /*00011070*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00011074*/ LDR         R9, [R3] 
    /*00011078*/ ADD         R7, R9, R5 
    /*0001107c*/ ADD         R6, R7, #12416              @ 0x3080 
    /*00011080*/ ADD         R6, R6, #16 
    /*00011084*/ MOV         R0, R6 
    /*00011088*/ BL          0x0000000000011088          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001108c*/ CMP         R0, #0 
    /*00011090*/ BNE         VencEnableIDR_x111cc
    /*00011094*/ LDR         R3, [R9, R5] 
    /*00011098*/ CMP         R3, #1 
    /*0001109c*/ BNE         VencEnableIDR_x11194
    /*000110a0*/ LDR         R3, [R7, #4] 
    /*000110a4*/ CMP         R3, #96                     @ 0x60 
    /*000110a8*/ BEQ         VencEnableIDR_x110b8
    /*000110ac*/ MOVW        R2, #265                    @ 0x109 
    /*000110b0*/ CMP         R3, R2 
    /*000110b4*/ BNE         VencEnableIDR_x11124
    VencEnableIDR_x110b8:
    /*000110b8*/ ADD         R7, R7, #12288              @ 0x3000 
    /*000110bc*/ LDR         R3, [R7, #716]              @ 0x2cc 
    /*000110c0*/ SUB         R3, R3, #2 
    /*000110c4*/ CMP         R3, #1 
    /*000110c8*/ CMPLS       R8, #0 
    /*000110cc*/ BEQ         VencEnableIDR_x11164
    /*000110d0*/ MOV         R0, #19 
    /*000110d4*/ BL          0x00000000000110D4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000110d8*/ MOV         R1, R8 
    /*000110dc*/ LDR         R3, [R0, #72]               @ 0x48 
    /*000110e0*/ MOV         R0, R4 
    /*000110e4*/ BLX         R3 
    /*000110e8*/ MOV         R5, R0 
    /*000110ec*/ MOV         R0, R6 
    /*000110f0*/ BL          0x00000000000110F0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000110f4*/ CMP         R5, #0 
    /*000110f8*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*000110fc*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*00011100*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*00011104*/ B           VencEnableIDR_x11118
    VencEnableIDR_x11108:
    /*00011108*/ MOV         R0, R4 
    /*0001110c*/ BL          0x0000000000000304 
    /*00011110*/ SUBS        R5, R0, #0 
    /*00011114*/ BEQ         VencEnableIDR_x11064
    VencEnableIDR_x11118:
    /*00011118*/ MOV         R0, R5 
    /*0001111c*/ ADD         SP, SP, #12 
    /*00011120*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencEnableIDR_x11124:
    /*00011124*/ MOVW        R3, #9349                   @ 0x2485 
    /*00011128*/ STR         R4, [SP, #4] 
    /*0001112c*/ STR         R3, [SP] 
    /*00011130*/ MOVW        R2, #0                      @ .LC366 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4610] 
    /*00011134*/ LDR         R3, [PC, #156]              @ 0x00000000000111d8 
    /*00011138*/ MOVT        R2, #0                      @ .LC366 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4610] 
    /*0001113c*/ MOV         R1, #8 
    /*00011140*/ MOV         R0, #3 
    /*00011144*/ BL          0x0000000000011144          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011148*/ MOVW        R5, #32776                  @ 0x8008 
    /*0001114c*/ MOVT        R5, #40968                  @ 0xa008 
    VencEnableIDR_x11150:
    /*00011150*/ MOV         R0, R6 
    /*00011154*/ BL          0x0000000000011154          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011158*/ MOV         R0, R5 
    /*0001115c*/ ADD         SP, SP, #12 
    /*00011160*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencEnableIDR_x11164:
    /*00011164*/ MOVW        R3, #9338                   @ 0x247a 
    /*00011168*/ STR         R4, [SP, #4] 
    /*0001116c*/ STR         R3, [SP] 
    /*00011170*/ MOVW        R2, #0                      @ .LC365 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x45a0] 
    /*00011174*/ LDR         R3, [PC, #92]               @ 0x00000000000111d8 
    /*00011178*/ MOVT        R2, #0                      @ .LC365 [R_ARM_MOVT_ABS: .rodata.str1.4+0x45a0] 
    /*0001117c*/ MOV         R1, #8 
    /*00011180*/ MOV         R0, #3 
    /*00011184*/ MOVW        R5, #32771                  @ 0x8003 
    /*00011188*/ BL          0x0000000000011188          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001118c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00011190*/ B           VencEnableIDR_x11150
    VencEnableIDR_x11194:
    /*00011194*/ MOVW        R3, #9324                   @ 0x246c 
    /*00011198*/ MOV         R1, #8 
    /*0001119c*/ STR         R3, [SP] 
    /*000111a0*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*000111a4*/ LDR         R3, [PC, #44]               @ 0x00000000000111d8 
    /*000111a8*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*000111ac*/ STR         R4, [SP, #4] 
    /*000111b0*/ MOV         R0, #3 
    /*000111b4*/ BL          0x00000000000111B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000111b8*/ MOV         R0, R6 
    /*000111bc*/ MOVW        R5, #32773                  @ 0x8005 
    /*000111c0*/ BL          0x00000000000111C0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000111c4*/ MOVT        R5, #40968                  @ 0xa008 
    /*000111c8*/ B           VencEnableIDR_x11118
    VencEnableIDR_x111cc:
    /*000111cc*/ MOV         R5, #65024                  @ 0xfe00 
    /*000111d0*/ MOVT        R5, #65535                  @ 0xffff 
    /*000111d4*/ B           VencEnableIDR_x11118
    /*000111d8*/ ANDEQ       R0, R0, R0, ROR #14 
FUNC_END VencEnableIDR


FUNC_BEGIN VencSetH264eIDRPicID
    /*000111dc*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000111e0*/ SUBS        R7, R1, #0 
    /*000111e4*/ SUB         SP, SP, #12 
    /*000111e8*/ MOV         R4, R0 
    /*000111ec*/ BEQ         VencSetH264eIDRPicID_x112e4
    VencSetH264eIDRPicID_x111f0:
    /*000111f0*/ CMP         R4, #0 
    /*000111f4*/ BLT         VencSetH264eIDRPicID_x11294
    /*000111f8*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000111fc*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00011200*/ LDR         R3, [R3] 
    /*00011204*/ CMP         R4, R3 
    /*00011208*/ BCS         VencSetH264eIDRPicID_x11294
    VencSetH264eIDRPicID_x1120c:
    /*0001120c*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00011210*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00011214*/ MUL         R5, R5, R4 
    /*00011218*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001121c*/ LDR         R8, [R3] 
    /*00011220*/ ADD         R9, R8, R5 
    /*00011224*/ ADD         R6, R9, #12416              @ 0x3080 
    /*00011228*/ ADD         R6, R6, #16 
    /*0001122c*/ MOV         R0, R6 
    /*00011230*/ BL          0x0000000000011230          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00011234*/ CMP         R0, #0 
    /*00011238*/ BNE         VencSetH264eIDRPicID_x1132c
    /*0001123c*/ LDR         R3, [R8, R5] 
    /*00011240*/ CMP         R3, #1 
    /*00011244*/ BNE         VencSetH264eIDRPicID_x112f4
    /*00011248*/ LDR         R3, [R9, #4] 
    /*0001124c*/ CMP         R3, #96                     @ 0x60 
    /*00011250*/ BNE         VencSetH264eIDRPicID_x112b0
    /*00011254*/ MOV         R0, #10 
    /*00011258*/ BL          0x0000000000011258          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001125c*/ MOV         R1, R7 
    /*00011260*/ LDR         R3, [R0, #144]              @ 0x90 
    /*00011264*/ MOV         R0, R4 
    /*00011268*/ BLX         R3 
    /*0001126c*/ MOV         R5, R0 
    /*00011270*/ MOV         R0, R6 
    /*00011274*/ BL          0x0000000000011274          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011278*/ CMP         R5, #0 
    /*0001127c*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*00011280*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*00011284*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*00011288*/ MOV         R0, R5 
    /*0001128c*/ ADD         SP, SP, #12 
    /*00011290*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264eIDRPicID_x11294:
    /*00011294*/ MOV         R0, R4 
    /*00011298*/ BL          0x0000000000000304 
    /*0001129c*/ SUBS        R5, R0, #0 
    /*000112a0*/ BEQ         VencSetH264eIDRPicID_x1120c
    VencSetH264eIDRPicID_x112a4:
    /*000112a4*/ MOV         R0, R5 
    /*000112a8*/ ADD         SP, SP, #12 
    /*000112ac*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264eIDRPicID_x112b0:
    /*000112b0*/ MOV         R3, R4 
    /*000112b4*/ MOV         R1, #8 
    /*000112b8*/ MOVW        R2, #0                      @ .LC367 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x466c] 
    /*000112bc*/ MOV         R0, #3 
    /*000112c0*/ MOVT        R2, #0                      @ .LC367 [R_ARM_MOVT_ABS: .rodata.str1.4+0x466c] 
    /*000112c4*/ MOVW        R5, #32776                  @ 0x8008 
    /*000112c8*/ BL          0x00000000000112C8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000112cc*/ MOV         R0, R6 
    /*000112d0*/ BL          0x00000000000112D0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000112d4*/ MOVT        R5, #40968                  @ 0xa008 
    /*000112d8*/ MOV         R0, R5 
    /*000112dc*/ ADD         SP, SP, #12 
    /*000112e0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH264eIDRPicID_x112e4:
    /*000112e4*/ BL          0x00000000000002C8 
    /*000112e8*/ SUBS        R5, R0, #0 
    /*000112ec*/ BNE         VencSetH264eIDRPicID_x112a4
    /*000112f0*/ B           VencSetH264eIDRPicID_x111f0
    VencSetH264eIDRPicID_x112f4:
    /*000112f4*/ MOVW        R3, #9373                   @ 0x249d 
    /*000112f8*/ MOV         R1, #8 
    /*000112fc*/ STR         R3, [SP] 
    /*00011300*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00011304*/ LDR         R3, [PC, #44]               @ 0x0000000000011338 
    /*00011308*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001130c*/ STR         R4, [SP, #4] 
    /*00011310*/ MOV         R0, #3 
    /*00011314*/ BL          0x0000000000011314          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011318*/ MOV         R0, R6 
    /*0001131c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00011320*/ BL          0x0000000000011320          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011324*/ MOVT        R5, #40968                  @ 0xa008 
    /*00011328*/ B           VencSetH264eIDRPicID_x112a4
    VencSetH264eIDRPicID_x1132c:
    /*0001132c*/ MOV         R5, #65024                  @ 0xfe00 
    /*00011330*/ MOVT        R5, #65535                  @ 0xffff 
    /*00011334*/ B           VencSetH264eIDRPicID_x112a4
    /*00011338*/ ANDEQ       R0, R0, R0, ROR R7 
FUNC_END VencSetH264eIDRPicID


FUNC_BEGIN VencGetH264eIDRPicID
    /*0001133c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00011340*/ SUBS        R7, R1, #0 
    /*00011344*/ SUB         SP, SP, #12 
    /*00011348*/ MOV         R4, R0 
    /*0001134c*/ BEQ         VencGetH264eIDRPicID_x11444
    VencGetH264eIDRPicID_x11350:
    /*00011350*/ CMP         R4, #0 
    /*00011354*/ BLT         VencGetH264eIDRPicID_x113f4
    /*00011358*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0001135c*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00011360*/ LDR         R3, [R3] 
    /*00011364*/ CMP         R4, R3 
    /*00011368*/ BCS         VencGetH264eIDRPicID_x113f4
    VencGetH264eIDRPicID_x1136c:
    /*0001136c*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00011370*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00011374*/ MUL         R5, R5, R4 
    /*00011378*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001137c*/ LDR         R8, [R3] 
    /*00011380*/ ADD         R9, R8, R5 
    /*00011384*/ ADD         R6, R9, #12416              @ 0x3080 
    /*00011388*/ ADD         R6, R6, #16 
    /*0001138c*/ MOV         R0, R6 
    /*00011390*/ BL          0x0000000000011390          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00011394*/ CMP         R0, #0 
    /*00011398*/ BNE         VencGetH264eIDRPicID_x1148c
    /*0001139c*/ LDR         R3, [R8, R5] 
    /*000113a0*/ CMP         R3, #1 
    /*000113a4*/ BNE         VencGetH264eIDRPicID_x11454
    /*000113a8*/ LDR         R3, [R9, #4] 
    /*000113ac*/ CMP         R3, #96                     @ 0x60 
    /*000113b0*/ BNE         VencGetH264eIDRPicID_x11410
    /*000113b4*/ MOV         R0, #10 
    /*000113b8*/ BL          0x00000000000113B8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000113bc*/ MOV         R1, R7 
    /*000113c0*/ LDR         R3, [R0, #148]              @ 0x94 
    /*000113c4*/ MOV         R0, R4 
    /*000113c8*/ BLX         R3 
    /*000113cc*/ MOV         R5, R0 
    /*000113d0*/ MOV         R0, R6 
    /*000113d4*/ BL          0x00000000000113D4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000113d8*/ CMP         R5, #0 
    /*000113dc*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*000113e0*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*000113e4*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*000113e8*/ MOV         R0, R5 
    /*000113ec*/ ADD         SP, SP, #12 
    /*000113f0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264eIDRPicID_x113f4:
    /*000113f4*/ MOV         R0, R4 
    /*000113f8*/ BL          0x0000000000000304 
    /*000113fc*/ SUBS        R5, R0, #0 
    /*00011400*/ BEQ         VencGetH264eIDRPicID_x1136c
    VencGetH264eIDRPicID_x11404:
    /*00011404*/ MOV         R0, R5 
    /*00011408*/ ADD         SP, SP, #12 
    /*0001140c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264eIDRPicID_x11410:
    /*00011410*/ MOV         R3, R4 
    /*00011414*/ MOV         R1, #8 
    /*00011418*/ MOVW        R2, #0                      @ .LC368 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x46a4] 
    /*0001141c*/ MOV         R0, #3 
    /*00011420*/ MOVT        R2, #0                      @ .LC368 [R_ARM_MOVT_ABS: .rodata.str1.4+0x46a4] 
    /*00011424*/ MOVW        R5, #32776                  @ 0x8008 
    /*00011428*/ BL          0x0000000000011428          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001142c*/ MOV         R0, R6 
    /*00011430*/ BL          0x0000000000011430          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011434*/ MOVT        R5, #40968                  @ 0xa008 
    /*00011438*/ MOV         R0, R5 
    /*0001143c*/ ADD         SP, SP, #12 
    /*00011440*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH264eIDRPicID_x11444:
    /*00011444*/ BL          0x00000000000002C8 
    /*00011448*/ SUBS        R5, R0, #0 
    /*0001144c*/ BNE         VencGetH264eIDRPicID_x11404
    /*00011450*/ B           VencGetH264eIDRPicID_x11350
    VencGetH264eIDRPicID_x11454:
    /*00011454*/ MOVW        R3, #9412                   @ 0x24c4 
    /*00011458*/ MOV         R1, #8 
    /*0001145c*/ STR         R3, [SP] 
    /*00011460*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00011464*/ LDR         R3, [PC, #44]               @ 0x0000000000011498 
    /*00011468*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001146c*/ STR         R4, [SP, #4] 
    /*00011470*/ MOV         R0, #3 
    /*00011474*/ BL          0x0000000000011474          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011478*/ MOV         R0, R6 
    /*0001147c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00011480*/ BL          0x0000000000011480          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011484*/ MOVT        R5, #40968                  @ 0xa008 
    /*00011488*/ B           VencGetH264eIDRPicID_x11404
    VencGetH264eIDRPicID_x1148c:
    /*0001148c*/ MOV         R5, #65024                  @ 0xfe00 
    /*00011490*/ MOVT        R5, #65535                  @ 0xffff 
    /*00011494*/ B           VencGetH264eIDRPicID_x11404
    /*00011498*/ ANDEQ       R0, R0, R8, LSL #15 
FUNC_END VencGetH264eIDRPicID


FUNC_BEGIN VencCheckRoiBgFrameRate
    /*0001149c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000114a0*/ SUBS        R5, R0, #0 
    /*000114a4*/ SUB         SP, SP, #20 
    /*000114a8*/ MOV         R6, R1 
    /*000114ac*/ BLT         VencCheckRoiBgFrameRate_x11570
    /*000114b0*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000114b4*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000114b8*/ LDR         R3, [R3] 
    /*000114bc*/ CMP         R5, R3 
    /*000114c0*/ BCS         VencCheckRoiBgFrameRate_x11570
    VencCheckRoiBgFrameRate_x114c4:
    /*000114c4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000114c8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000114cc*/ MOVW        R2, #36240                  @ 0x8d90 
    /*000114d0*/ LDR         R3, [R3] 
    /*000114d4*/ MLA         R4, R2, R5, R3 
    /*000114d8*/ BL          0x00000000000114D8          @ VENC_DRV_CheckSupportRoiBg [R_ARM_CALL: .text+0x26068] 
    /*000114dc*/ CMP         R0, #0 
    /*000114e0*/ BEQ         VencCheckRoiBgFrameRate_x115f0
    /*000114e4*/ LDR         R3, [R4, #4] 
    /*000114e8*/ MOVW        R2, #265                    @ 0x109 
    /*000114ec*/ CMP         R3, R2 
    /*000114f0*/ CMPNE       R3, #96                     @ 0x60 
    /*000114f4*/ BNE         VencCheckRoiBgFrameRate_x11620
    /*000114f8*/ ADD         R7, R4, #12288              @ 0x3000 
    /*000114fc*/ LDR         R3, [R7, #716]              @ 0x2cc 
    /*00011500*/ CMP         R3, #0 
    /*00011504*/ BNE         VencCheckRoiBgFrameRate_x11638
    /*00011508*/ LDM         R6, {R2, R3} 
    /*0001150c*/ CMN         R2, #1 
    /*00011510*/ BEQ         VencCheckRoiBgFrameRate_x11588
    VencCheckRoiBgFrameRate_x11514:
    /*00011514*/ CMP         R2, R3 
    /*00011518*/ MOVGT       R1, #0 
    /*0001151c*/ MOVLE       R1, #1 
    /*00011520*/ ORRS        R1, R1, R3, LSR #31 
    /*00011524*/ BNE         VencCheckRoiBgFrameRate_x115b8
    VencCheckRoiBgFrameRate_x11528:
    /*00011528*/ LDR         R3, [R7, #1012]             @ 0x3f4 
    /*0001152c*/ CMP         R3, #1 
    /*00011530*/ ADDNE       R3, R4, #14080              @ 0x3700 
    /*00011534*/ ADDNE       R2, R4, #14336              @ 0x3800 
    /*00011538*/ ADDNE       R3, R3, #48                 @ 0x30 
    /*0001153c*/ ADDNE       R2, R2, #48                 @ 0x30 
    /*00011540*/ BEQ         VencCheckRoiBgFrameRate_x11680
    VencCheckRoiBgFrameRate_x11544:
    /*00011544*/ LDR         R1, [R3] 
    /*00011548*/ ADD         R3, R3, #32 
    /*0001154c*/ CMP         R1, #1 
    /*00011550*/ BEQ         VencCheckRoiBgFrameRate_x11564
    /*00011554*/ CMP         R3, R2 
    /*00011558*/ BNE         VencCheckRoiBgFrameRate_x11544
    /*0001155c*/ CMP         R1, #0 
    /*00011560*/ BEQ         VencCheckRoiBgFrameRate_x11668
    VencCheckRoiBgFrameRate_x11564:
    /*00011564*/ MOV         R0, #0 
    /*00011568*/ ADD         SP, SP, #20 
    /*0001156c*/ POP         {R4, R5, R6, R7, PC} 
    VencCheckRoiBgFrameRate_x11570:
    /*00011570*/ MOV         R0, R5 
    /*00011574*/ BL          0x0000000000000304 
    /*00011578*/ CMP         R0, #0 
    /*0001157c*/ BEQ         VencCheckRoiBgFrameRate_x114c4
    VencCheckRoiBgFrameRate_x11580:
    /*00011580*/ ADD         SP, SP, #20 
    /*00011584*/ POP         {R4, R5, R6, R7, PC} 
    VencCheckRoiBgFrameRate_x11588:
    /*00011588*/ CMN         R3, #1 
    /*0001158c*/ BNE         VencCheckRoiBgFrameRate_x11514
    /*00011590*/ MOVW        R3, #9466                   @ 0x24fa 
    /*00011594*/ STR         R5, [SP, #4] 
    /*00011598*/ STR         R3, [SP] 
    /*0001159c*/ MOVW        R2, #0                      @ .LC372 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x47c0] 
    /*000115a0*/ LDR         R3, [PC, #240]              @ 0x0000000000011698 
    /*000115a4*/ MOVT        R2, #0                      @ .LC372 [R_ARM_MOVT_ABS: .rodata.str1.4+0x47c0] 
    /*000115a8*/ MOV         R1, #8 
    /*000115ac*/ MOV         R0, #6 
    /*000115b0*/ BL          0x00000000000115B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000115b4*/ B           VencCheckRoiBgFrameRate_x11528
    VencCheckRoiBgFrameRate_x115b8:
    /*000115b8*/ STR         R2, [SP, #12] 
    /*000115bc*/ MOVW        R1, #9471                   @ 0x24ff 
    /*000115c0*/ STR         R3, [SP, #8] 
    /*000115c4*/ MOVW        R2, #0                      @ .LC373 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x47f8] 
    /*000115c8*/ STR         R1, [SP] 
    /*000115cc*/ MOVT        R2, #0                      @ .LC373 [R_ARM_MOVT_ABS: .rodata.str1.4+0x47f8] 
    /*000115d0*/ STR         R5, [SP, #4] 
    /*000115d4*/ MOV         R1, #8 
    /*000115d8*/ LDR         R3, [PC, #184]              @ 0x0000000000011698 
    /*000115dc*/ MOV         R0, #3 
    /*000115e0*/ BL          0x00000000000115E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000115e4*/ MOVW        R0, #32771                  @ 0x8003 
    /*000115e8*/ MOVT        R0, #40968                  @ 0xa008 
    /*000115ec*/ B           VencCheckRoiBgFrameRate_x11580
    VencCheckRoiBgFrameRate_x115f0:
    /*000115f0*/ MOVW        R2, #0                      @ .LC369 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x46dc] 
    /*000115f4*/ MOVT        R2, #0                      @ .LC369 [R_ARM_MOVT_ABS: .rodata.str1.4+0x46dc] 
    /*000115f8*/ MOVW        R3, #9448                   @ 0x24e8 
    /*000115fc*/ STR         R5, [SP, #4] 
    /*00011600*/ STR         R3, [SP] 
    VencCheckRoiBgFrameRate_x11604:
    /*00011604*/ LDR         R3, [PC, #140]              @ 0x0000000000011698 
    /*00011608*/ MOV         R1, #8 
    /*0001160c*/ MOV         R0, #3 
    /*00011610*/ BL          0x0000000000011610          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011614*/ MOVW        R0, #32776                  @ 0x8008 
    /*00011618*/ MOVT        R0, #40968                  @ 0xa008 
    /*0001161c*/ B           VencCheckRoiBgFrameRate_x11580
    VencCheckRoiBgFrameRate_x11620:
    /*00011620*/ MOVW        R3, #9454                   @ 0x24ee 
    /*00011624*/ MOVW        R2, #0                      @ .LC370 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4720] 
    /*00011628*/ STR         R5, [SP, #4] 
    /*0001162c*/ MOVT        R2, #0                      @ .LC370 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4720] 
    /*00011630*/ STR         R3, [SP] 
    /*00011634*/ B           VencCheckRoiBgFrameRate_x11604
    VencCheckRoiBgFrameRate_x11638:
    /*00011638*/ MOVW        R2, #0                      @ .LC371 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4770] 
    /*0001163c*/ MOVT        R2, #0                      @ .LC371 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4770] 
    /*00011640*/ MOVW        R3, #9460                   @ 0x24f4 
    /*00011644*/ STR         R5, [SP, #4] 
    /*00011648*/ STR         R3, [SP] 
    VencCheckRoiBgFrameRate_x1164c:
    /*0001164c*/ LDR         R3, [PC, #68]               @ 0x0000000000011698 
    /*00011650*/ MOV         R1, #8 
    /*00011654*/ MOV         R0, #3 
    /*00011658*/ BL          0x0000000000011658          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001165c*/ MOVW        R0, #32777                  @ 0x8009 
    /*00011660*/ MOVT        R0, #40968                  @ 0xa008 
    /*00011664*/ B           VencCheckRoiBgFrameRate_x11580
    VencCheckRoiBgFrameRate_x11668:
    /*00011668*/ MOVW        R3, #9494                   @ 0x2516 
    /*0001166c*/ MOVW        R2, #0                      @ .LC375 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4908] 
    /*00011670*/ STR         R5, [SP, #4] 
    /*00011674*/ MOVT        R2, #0                      @ .LC375 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4908] 
    /*00011678*/ STR         R3, [SP] 
    /*0001167c*/ B           VencCheckRoiBgFrameRate_x1164c
    VencCheckRoiBgFrameRate_x11680:
    /*00011680*/ MOVW        R3, #9479                   @ 0x2507 
    /*00011684*/ MOVW        R2, #0                      @ .LC374 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x48a4] 
    /*00011688*/ STR         R5, [SP, #4] 
    /*0001168c*/ MOVT        R2, #0                      @ .LC374 [R_ARM_MOVT_ABS: .rodata.str1.4+0x48a4] 
    /*00011690*/ STR         R3, [SP] 
    /*00011694*/ B           VencCheckRoiBgFrameRate_x1164c
    /*00011698*/ ANDEQ       R0, R0, R0, LSR #15 
FUNC_END VencCheckRoiBgFrameRate


FUNC_BEGIN VencSetRoiBgFrameRate
    /*0001169c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000116a0*/ SUBS        R6, R1, #0 
    /*000116a4*/ SUB         SP, SP, #12 
    /*000116a8*/ MOV         R4, R0 
    /*000116ac*/ BEQ         VencSetRoiBgFrameRate_x117d4
    VencSetRoiBgFrameRate_x116b0:
    /*000116b0*/ CMP         R4, #0 
    /*000116b4*/ BLT         VencSetRoiBgFrameRate_x117b8
    /*000116b8*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000116bc*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000116c0*/ LDR         R3, [R3] 
    /*000116c4*/ CMP         R4, R3 
    /*000116c8*/ BCS         VencSetRoiBgFrameRate_x117b8
    VencSetRoiBgFrameRate_x116cc:
    /*000116cc*/ MOVW        R5, #36240                  @ 0x8d90 
    /*000116d0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000116d4*/ MUL         R5, R5, R4 
    /*000116d8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000116dc*/ LDR         R9, [R3] 
    /*000116e0*/ ADD         R8, R9, R5 
    /*000116e4*/ ADD         R7, R8, #12416              @ 0x3080 
    /*000116e8*/ ADD         R7, R7, #16 
    /*000116ec*/ MOV         R0, R7 
    /*000116f0*/ BL          0x00000000000116F0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000116f4*/ CMP         R0, #0 
    /*000116f8*/ BNE         VencSetRoiBgFrameRate_x1187c
    /*000116fc*/ LDR         R3, [R9, R5] 
    /*00011700*/ CMP         R3, #1 
    /*00011704*/ BNE         VencSetRoiBgFrameRate_x11844
    /*00011708*/ MOV         R1, R6 
    /*0001170c*/ MOV         R0, R4 
    /*00011710*/ BL          0x0000000000011710          @ VencCheckRoiBgFrameRate [R_ARM_CALL: .text+0x1149c] 
    /*00011714*/ SUBS        R5, R0, #0 
    /*00011718*/ BNE         VencSetRoiBgFrameRate_x117a4
    /*0001171c*/ ADD         R3, R8, #12288              @ 0x3000 
    /*00011720*/ LDR         R3, [R3, #612]              @ 0x264 
    /*00011724*/ CMP         R3, #0 
    /*00011728*/ BNE         VencSetRoiBgFrameRate_x11790
    /*0001172c*/ LDR         R3, [R8, #4] 
    /*00011730*/ CMP         R3, #96                     @ 0x60 
    /*00011734*/ BEQ         VencSetRoiBgFrameRate_x11810
    /*00011738*/ MOVW        R2, #265                    @ 0x109 
    /*0001173c*/ CMP         R3, R2 
    /*00011740*/ BNE         VencSetRoiBgFrameRate_x117e4
    /*00011744*/ MOV         R0, #13 
    /*00011748*/ BL          0x0000000000011748          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001174c*/ MOV         R1, R6 
    /*00011750*/ LDR         R3, [R0, #144]              @ 0x90 
    /*00011754*/ MOV         R0, R4 
    /*00011758*/ BLX         R3 
    /*0001175c*/ SUBS        R4, R0, #0 
    /*00011760*/ BEQ         VencSetRoiBgFrameRate_x11790
    /*00011764*/ MOVW        R2, #0                      @ .LC376 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4964] 
    /*00011768*/ MOVT        R2, #0                      @ .LC376 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4964] 
    /*0001176c*/ MOVW        R3, #9539                   @ 0x2543 
    /*00011770*/ STR         R3, [SP] 
    VencSetRoiBgFrameRate_x11774:
    /*00011774*/ LDR         R3, [PC, #268]              @ 0x0000000000011888 
    /*00011778*/ MOV         R1, #8 
    /*0001177c*/ MOV         R0, #3 
    /*00011780*/ BIC         R4, R4, #267386880          @ 0xff00000 
    /*00011784*/ BL          0x0000000000011784          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011788*/ BIC         R4, R4, #983040             @ 0xf0000 
    /*0001178c*/ ORR         R5, R4, #524288             @ 0x80000 
    VencSetRoiBgFrameRate_x11790:
    /*00011790*/ ADD         R0, R8, #12800              @ 0x3200 
    /*00011794*/ MOV         R1, R6 
    /*00011798*/ ADD         R0, R0, #48                 @ 0x30 
    /*0001179c*/ MOV         R2, #8 
    /*000117a0*/ BL          0x00000000000117A0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    VencSetRoiBgFrameRate_x117a4:
    /*000117a4*/ MOV         R0, R7 
    /*000117a8*/ BL          0x00000000000117A8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000117ac*/ MOV         R0, R5 
    /*000117b0*/ ADD         SP, SP, #12 
    /*000117b4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetRoiBgFrameRate_x117b8:
    /*000117b8*/ MOV         R0, R4 
    /*000117bc*/ BL          0x0000000000000304 
    /*000117c0*/ SUBS        R5, R0, #0 
    /*000117c4*/ BEQ         VencSetRoiBgFrameRate_x116cc
    VencSetRoiBgFrameRate_x117c8:
    /*000117c8*/ MOV         R0, R5 
    /*000117cc*/ ADD         SP, SP, #12 
    /*000117d0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetRoiBgFrameRate_x117d4:
    /*000117d4*/ BL          0x00000000000002C8 
    /*000117d8*/ SUBS        R5, R0, #0 
    /*000117dc*/ BNE         VencSetRoiBgFrameRate_x117c8
    /*000117e0*/ B           VencSetRoiBgFrameRate_x116b0
    VencSetRoiBgFrameRate_x117e4:
    /*000117e4*/ MOVW        R3, #9552                   @ 0x2550 
    /*000117e8*/ MOVW        R2, #0                      @ .LC378 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x49d4] 
    /*000117ec*/ STR         R3, [SP] 
    /*000117f0*/ MOVT        R2, #0                      @ .LC378 [R_ARM_MOVT_ABS: .rodata.str1.4+0x49d4] 
    /*000117f4*/ LDR         R3, [PC, #140]              @ 0x0000000000011888 
    /*000117f8*/ MOV         R1, #8 
    /*000117fc*/ MOV         R0, #3 
    /*00011800*/ MOVW        R5, #32771                  @ 0x8003 
    /*00011804*/ BL          0x0000000000011804          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011808*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001180c*/ B           VencSetRoiBgFrameRate_x11790
    VencSetRoiBgFrameRate_x11810:
    /*00011810*/ MOV         R0, #10 
    /*00011814*/ BL          0x0000000000011814          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011818*/ MOV         R1, R6 
    /*0001181c*/ LDR         R3, [R0, #140]              @ 0x8c 
    /*00011820*/ MOV         R0, R4 
    /*00011824*/ BLX         R3 
    /*00011828*/ SUBS        R4, R0, #0 
    /*0001182c*/ BEQ         VencSetRoiBgFrameRate_x11790
    /*00011830*/ MOVW        R3, #9547                   @ 0x254b 
    /*00011834*/ MOVW        R2, #0                      @ .LC377 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x499c] 
    /*00011838*/ STR         R3, [SP] 
    /*0001183c*/ MOVT        R2, #0                      @ .LC377 [R_ARM_MOVT_ABS: .rodata.str1.4+0x499c] 
    /*00011840*/ B           VencSetRoiBgFrameRate_x11774
    VencSetRoiBgFrameRate_x11844:
    /*00011844*/ MOVW        R3, #9519                   @ 0x252f 
    /*00011848*/ MOV         R1, #8 
    /*0001184c*/ STR         R3, [SP] 
    /*00011850*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00011854*/ LDR         R3, [PC, #44]               @ 0x0000000000011888 
    /*00011858*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001185c*/ STR         R4, [SP, #4] 
    /*00011860*/ MOV         R0, #3 
    /*00011864*/ BL          0x0000000000011864          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011868*/ MOV         R0, R7 
    /*0001186c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00011870*/ BL          0x0000000000011870          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011874*/ MOVT        R5, #40968                  @ 0xa008 
    /*00011878*/ B           VencSetRoiBgFrameRate_x117c8
    VencSetRoiBgFrameRate_x1187c:
    /*0001187c*/ MOV         R5, #65024                  @ 0xfe00 
    /*00011880*/ MOVT        R5, #65535                  @ 0xffff 
    /*00011884*/ B           VencSetRoiBgFrameRate_x117c8
    /*00011888*/ @           <UNDEFINED> instruction: 0x000007b8 
FUNC_END VencSetRoiBgFrameRate


FUNC_BEGIN VencGetRoiBgFrameRate
    /*0001188c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00011890*/ SUBS        R6, R1, #0 
    /*00011894*/ SUB         SP, SP, #20 
    /*00011898*/ MOV         R4, R0 
    /*0001189c*/ BEQ         VencGetRoiBgFrameRate_x1195c
    VencGetRoiBgFrameRate_x118a0:
    /*000118a0*/ CMP         R4, #0 
    /*000118a4*/ BLT         VencGetRoiBgFrameRate_x11944
    /*000118a8*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000118ac*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000118b0*/ LDR         R3, [R3] 
    /*000118b4*/ CMP         R4, R3 
    /*000118b8*/ BCS         VencGetRoiBgFrameRate_x11944
    VencGetRoiBgFrameRate_x118bc:
    /*000118bc*/ MOVW        R5, #36240                  @ 0x8d90 
    /*000118c0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000118c4*/ MUL         R5, R5, R4 
    /*000118c8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000118cc*/ LDR         R9, [R3] 
    /*000118d0*/ ADD         R8, R9, R5 
    /*000118d4*/ ADD         R7, R8, #12416              @ 0x3080 
    /*000118d8*/ ADD         R7, R7, #16 
    /*000118dc*/ MOV         R0, R7 
    /*000118e0*/ BL          0x00000000000118E0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000118e4*/ CMP         R0, #0 
    /*000118e8*/ BNE         VencGetRoiBgFrameRate_x119a4
    /*000118ec*/ LDR         R3, [R9, R5] 
    /*000118f0*/ CMP         R3, #1 
    /*000118f4*/ BNE         VencGetRoiBgFrameRate_x1196c
    /*000118f8*/ LDR         R3, [R8, #4] 
    /*000118fc*/ MOVW        R2, #265                    @ 0x109 
    /*00011900*/ CMP         R3, R2 
    /*00011904*/ CMPNE       R3, #96                     @ 0x60 
    /*00011908*/ BNE         VencGetRoiBgFrameRate_x119f0
    /*0001190c*/ ADD         R3, R8, #12288              @ 0x3000 
    /*00011910*/ LDR         R5, [R3, #716]              @ 0x2cc 
    /*00011914*/ CMP         R5, #0 
    /*00011918*/ BNE         VencGetRoiBgFrameRate_x119b0
    /*0001191c*/ ADD         R1, R8, #12800              @ 0x3200 
    /*00011920*/ MOV         R2, #8 
    /*00011924*/ ADD         R1, R1, #48                 @ 0x30 
    /*00011928*/ MOV         R0, R6 
    /*0001192c*/ BL          0x000000000001192C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011930*/ MOV         R0, R7 
    /*00011934*/ BL          0x0000000000011934          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011938*/ MOV         R0, R5 
    /*0001193c*/ ADD         SP, SP, #20 
    /*00011940*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetRoiBgFrameRate_x11944:
    /*00011944*/ MOV         R0, R4 
    /*00011948*/ BL          0x0000000000000304 
    /*0001194c*/ CMP         R0, #0 
    /*00011950*/ BEQ         VencGetRoiBgFrameRate_x118bc
    VencGetRoiBgFrameRate_x11954:
    /*00011954*/ ADD         SP, SP, #20 
    /*00011958*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetRoiBgFrameRate_x1195c:
    /*0001195c*/ BL          0x00000000000002C8 
    /*00011960*/ CMP         R0, #0 
    /*00011964*/ BNE         VencGetRoiBgFrameRate_x11954
    /*00011968*/ B           VencGetRoiBgFrameRate_x118a0
    VencGetRoiBgFrameRate_x1196c:
    /*0001196c*/ MOVW        R3, #9583                   @ 0x256f 
    /*00011970*/ MOV         R1, #8 
    /*00011974*/ STR         R3, [SP] 
    /*00011978*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0001197c*/ LDR         R3, [PC, #164]              @ 0x0000000000011a28 
    /*00011980*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00011984*/ STR         R4, [SP, #4] 
    /*00011988*/ MOV         R0, #3 
    /*0001198c*/ BL          0x000000000001198C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011990*/ MOV         R0, R7 
    /*00011994*/ BL          0x0000000000011994          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011998*/ MOVW        R0, #32773                  @ 0x8005 
    /*0001199c*/ MOVT        R0, #40968                  @ 0xa008 
    /*000119a0*/ B           VencGetRoiBgFrameRate_x11954
    VencGetRoiBgFrameRate_x119a4:
    /*000119a4*/ MOV         R0, #65024                  @ 0xfe00 
    /*000119a8*/ MOVT        R0, #65535                  @ 0xffff 
    /*000119ac*/ B           VencGetRoiBgFrameRate_x11954
    VencGetRoiBgFrameRate_x119b0:
    /*000119b0*/ LDR         R3, [R3, #608]              @ 0x260 
    /*000119b4*/ MOVW        R1, #9598                   @ 0x257e 
    /*000119b8*/ STR         R4, [SP, #4] 
    /*000119bc*/ MOVW        R2, #0                      @ .LC379 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4a04] 
    /*000119c0*/ STR         R1, [SP] 
    /*000119c4*/ MOVT        R2, #0                      @ .LC379 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4a04] 
    /*000119c8*/ STR         R3, [SP, #8] 
    /*000119cc*/ MOV         R1, #8 
    /*000119d0*/ LDR         R3, [PC, #80]               @ 0x0000000000011a28 
    /*000119d4*/ MOV         R0, #3 
    /*000119d8*/ BL          0x00000000000119D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000119dc*/ MOV         R0, R7 
    /*000119e0*/ BL          0x00000000000119E0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000119e4*/ MOVW        R0, #32777                  @ 0x8009 
    /*000119e8*/ MOVT        R0, #40968                  @ 0xa008 
    /*000119ec*/ B           VencGetRoiBgFrameRate_x11954
    VencGetRoiBgFrameRate_x119f0:
    /*000119f0*/ MOVW        R3, #9590                   @ 0x2576 
    /*000119f4*/ MOV         R1, #8 
    /*000119f8*/ STR         R3, [SP] 
    /*000119fc*/ MOVW        R2, #0                      @ .LC370 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4720] 
    /*00011a00*/ LDR         R3, [PC, #32]               @ 0x0000000000011a28 
    /*00011a04*/ MOVT        R2, #0                      @ .LC370 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4720] 
    /*00011a08*/ STR         R4, [SP, #4] 
    /*00011a0c*/ MOV         R0, #3 
    /*00011a10*/ BL          0x0000000000011A10          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011a14*/ MOV         R0, R7 
    /*00011a18*/ BL          0x0000000000011A18          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011a1c*/ MOVW        R0, #32776                  @ 0x8008 
    /*00011a20*/ MOVT        R0, #40968                  @ 0xa008 
    /*00011a24*/ B           VencGetRoiBgFrameRate_x11954
    /*00011a28*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VencGetRoiBgFrameRate


FUNC_BEGIN VencSetJpegParam
    /*00011a2c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00011a30*/ SUBS        R7, R1, #0 
    /*00011a34*/ SUB         SP, SP, #12 
    /*00011a38*/ MOV         R4, R0 
    /*00011a3c*/ BEQ         VencSetJpegParam_x11b40
    VencSetJpegParam_x11a40:
    /*00011a40*/ CMP         R4, #0 
    /*00011a44*/ BLT         VencSetJpegParam_x11ae4
    /*00011a48*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00011a4c*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00011a50*/ LDR         R3, [R3] 
    /*00011a54*/ CMP         R4, R3 
    /*00011a58*/ BCS         VencSetJpegParam_x11ae4
    VencSetJpegParam_x11a5c:
    /*00011a5c*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00011a60*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00011a64*/ MUL         R5, R5, R4 
    /*00011a68*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00011a6c*/ LDR         R8, [R3] 
    /*00011a70*/ ADD         R9, R8, R5 
    /*00011a74*/ ADD         R6, R9, #12416              @ 0x3080 
    /*00011a78*/ ADD         R6, R6, #16 
    /*00011a7c*/ MOV         R0, R6 
    /*00011a80*/ BL          0x0000000000011A80          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00011a84*/ CMP         R0, #0 
    /*00011a88*/ BNE         VencSetJpegParam_x11b88
    /*00011a8c*/ LDR         R3, [R8, R5] 
    /*00011a90*/ CMP         R3, #1 
    /*00011a94*/ BNE         VencSetJpegParam_x11b50
    /*00011a98*/ LDR         R3, [R9, #4] 
    /*00011a9c*/ CMP         R3, #26 
    /*00011aa0*/ BNE         VencSetJpegParam_x11b00
    /*00011aa4*/ MOV         R0, #11 
    /*00011aa8*/ BL          0x0000000000011AA8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011aac*/ MOV         R1, R7 
    /*00011ab0*/ LDR         R3, [R0, #48]               @ 0x30 
    /*00011ab4*/ MOV         R0, R4 
    /*00011ab8*/ BLX         R3 
    /*00011abc*/ MOV         R5, R0 
    /*00011ac0*/ MOV         R0, R6 
    /*00011ac4*/ BL          0x0000000000011AC4          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011ac8*/ CMP         R5, #0 
    /*00011acc*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*00011ad0*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*00011ad4*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*00011ad8*/ MOV         R0, R5 
    /*00011adc*/ ADD         SP, SP, #12 
    /*00011ae0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetJpegParam_x11ae4:
    /*00011ae4*/ MOV         R0, R4 
    /*00011ae8*/ BL          0x0000000000000304 
    /*00011aec*/ SUBS        R5, R0, #0 
    /*00011af0*/ BEQ         VencSetJpegParam_x11a5c
    VencSetJpegParam_x11af4:
    /*00011af4*/ MOV         R0, R5 
    /*00011af8*/ ADD         SP, SP, #12 
    /*00011afc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetJpegParam_x11b00:
    /*00011b00*/ STR         R3, [SP, #4] 
    /*00011b04*/ MOV         R1, #8 
    /*00011b08*/ MOVW        R3, #9640                   @ 0x25a8 
    /*00011b0c*/ MOVW        R2, #0                      @ .LC380 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4a50] 
    /*00011b10*/ STR         R3, [SP] 
    /*00011b14*/ MOVT        R2, #0                      @ .LC380 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4a50] 
    /*00011b18*/ LDR         R3, [PC, #116]              @ 0x0000000000011b94 
    /*00011b1c*/ MOV         R0, #3 
    /*00011b20*/ BL          0x0000000000011B20          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011b24*/ MOV         R0, R6 
    /*00011b28*/ BL          0x0000000000011B28          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011b2c*/ MOVW        R5, #32776                  @ 0x8008 
    /*00011b30*/ MOVT        R5, #40968                  @ 0xa008 
    /*00011b34*/ MOV         R0, R5 
    /*00011b38*/ ADD         SP, SP, #12 
    /*00011b3c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetJpegParam_x11b40:
    /*00011b40*/ BL          0x00000000000002C8 
    /*00011b44*/ SUBS        R5, R0, #0 
    /*00011b48*/ BNE         VencSetJpegParam_x11af4
    /*00011b4c*/ B           VencSetJpegParam_x11a40
    VencSetJpegParam_x11b50:
    /*00011b50*/ MOVW        R3, #9625                   @ 0x2599 
    /*00011b54*/ MOV         R1, #8 
    /*00011b58*/ STR         R3, [SP] 
    /*00011b5c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00011b60*/ LDR         R3, [PC, #44]               @ 0x0000000000011b94 
    /*00011b64*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00011b68*/ STR         R4, [SP, #4] 
    /*00011b6c*/ MOV         R0, #3 
    /*00011b70*/ BL          0x0000000000011B70          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011b74*/ MOV         R0, R6 
    /*00011b78*/ MOVW        R5, #32773                  @ 0x8005 
    /*00011b7c*/ BL          0x0000000000011B7C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011b80*/ MOVT        R5, #40968                  @ 0xa008 
    /*00011b84*/ B           VencSetJpegParam_x11af4
    VencSetJpegParam_x11b88:
    /*00011b88*/ MOV         R5, #65024                  @ 0xfe00 
    /*00011b8c*/ MOVT        R5, #65535                  @ 0xffff 
    /*00011b90*/ B           VencSetJpegParam_x11af4
    /*00011b94*/ ANDEQ       R0, R0, R8, ROR #15 
FUNC_END VencSetJpegParam


FUNC_BEGIN VencGetJpegParam
    /*00011b98*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00011b9c*/ SUBS        R7, R1, #0 
    /*00011ba0*/ SUB         SP, SP, #12 
    /*00011ba4*/ MOV         R4, R0 
    /*00011ba8*/ BEQ         VencGetJpegParam_x11cac
    VencGetJpegParam_x11bac:
    /*00011bac*/ CMP         R4, #0 
    /*00011bb0*/ BLT         VencGetJpegParam_x11c50
    /*00011bb4*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00011bb8*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00011bbc*/ LDR         R3, [R3] 
    /*00011bc0*/ CMP         R4, R3 
    /*00011bc4*/ BCS         VencGetJpegParam_x11c50
    VencGetJpegParam_x11bc8:
    /*00011bc8*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00011bcc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00011bd0*/ MUL         R5, R5, R4 
    /*00011bd4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00011bd8*/ LDR         R8, [R3] 
    /*00011bdc*/ ADD         R9, R8, R5 
    /*00011be0*/ ADD         R6, R9, #12416              @ 0x3080 
    /*00011be4*/ ADD         R6, R6, #16 
    /*00011be8*/ MOV         R0, R6 
    /*00011bec*/ BL          0x0000000000011BEC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00011bf0*/ CMP         R0, #0 
    /*00011bf4*/ BNE         VencGetJpegParam_x11cf4
    /*00011bf8*/ LDR         R3, [R8, R5] 
    /*00011bfc*/ CMP         R3, #1 
    /*00011c00*/ BNE         VencGetJpegParam_x11cbc
    /*00011c04*/ LDR         R3, [R9, #4] 
    /*00011c08*/ CMP         R3, #26 
    /*00011c0c*/ BNE         VencGetJpegParam_x11c6c
    /*00011c10*/ MOV         R0, #11 
    /*00011c14*/ BL          0x0000000000011C14          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011c18*/ MOV         R1, R7 
    /*00011c1c*/ LDR         R3, [R0, #52]               @ 0x34 
    /*00011c20*/ MOV         R0, R4 
    /*00011c24*/ BLX         R3 
    /*00011c28*/ MOV         R5, R0 
    /*00011c2c*/ MOV         R0, R6 
    /*00011c30*/ BL          0x0000000000011C30          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011c34*/ CMP         R5, #0 
    /*00011c38*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*00011c3c*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*00011c40*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*00011c44*/ MOV         R0, R5 
    /*00011c48*/ ADD         SP, SP, #12 
    /*00011c4c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetJpegParam_x11c50:
    /*00011c50*/ MOV         R0, R4 
    /*00011c54*/ BL          0x0000000000000304 
    /*00011c58*/ SUBS        R5, R0, #0 
    /*00011c5c*/ BEQ         VencGetJpegParam_x11bc8
    VencGetJpegParam_x11c60:
    /*00011c60*/ MOV         R0, R5 
    /*00011c64*/ ADD         SP, SP, #12 
    /*00011c68*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetJpegParam_x11c6c:
    /*00011c6c*/ STR         R3, [SP, #4] 
    /*00011c70*/ MOV         R1, #8 
    /*00011c74*/ MOVW        R3, #9680                   @ 0x25d0 
    /*00011c78*/ MOVW        R2, #0                      @ .LC381 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4a9c] 
    /*00011c7c*/ STR         R3, [SP] 
    /*00011c80*/ MOVT        R2, #0                      @ .LC381 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4a9c] 
    /*00011c84*/ LDR         R3, [PC, #116]              @ 0x0000000000011d00 
    /*00011c88*/ MOV         R0, #3 
    /*00011c8c*/ BL          0x0000000000011C8C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011c90*/ MOV         R0, R6 
    /*00011c94*/ BL          0x0000000000011C94          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011c98*/ MOVW        R5, #32776                  @ 0x8008 
    /*00011c9c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00011ca0*/ MOV         R0, R5 
    /*00011ca4*/ ADD         SP, SP, #12 
    /*00011ca8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetJpegParam_x11cac:
    /*00011cac*/ BL          0x00000000000002C8 
    /*00011cb0*/ SUBS        R5, R0, #0 
    /*00011cb4*/ BNE         VencGetJpegParam_x11c60
    /*00011cb8*/ B           VencGetJpegParam_x11bac
    VencGetJpegParam_x11cbc:
    /*00011cbc*/ MOVW        R3, #9666                   @ 0x25c2 
    /*00011cc0*/ MOV         R1, #8 
    /*00011cc4*/ STR         R3, [SP] 
    /*00011cc8*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00011ccc*/ LDR         R3, [PC, #44]               @ 0x0000000000011d00 
    /*00011cd0*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00011cd4*/ STR         R4, [SP, #4] 
    /*00011cd8*/ MOV         R0, #3 
    /*00011cdc*/ BL          0x0000000000011CDC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011ce0*/ MOV         R0, R6 
    /*00011ce4*/ MOVW        R5, #32773                  @ 0x8005 
    /*00011ce8*/ BL          0x0000000000011CE8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011cec*/ MOVT        R5, #40968                  @ 0xa008 
    /*00011cf0*/ B           VencGetJpegParam_x11c60
    VencGetJpegParam_x11cf4:
    /*00011cf4*/ MOV         R5, #65024                  @ 0xfe00 
    /*00011cf8*/ MOVT        R5, #65535                  @ 0xffff 
    /*00011cfc*/ B           VencGetJpegParam_x11c60
    /*00011d00*/ STRDEQ      R0, [R0], -IP 
FUNC_END VencGetJpegParam


FUNC_BEGIN VencSetMjpegParam
    /*00011d04*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00011d08*/ SUBS        R7, R1, #0 
    /*00011d0c*/ SUB         SP, SP, #12 
    /*00011d10*/ MOV         R4, R0 
    /*00011d14*/ BEQ         VencSetMjpegParam_x11e1c
    VencSetMjpegParam_x11d18:
    /*00011d18*/ CMP         R4, #0 
    /*00011d1c*/ BLT         VencSetMjpegParam_x11dc0
    /*00011d20*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00011d24*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00011d28*/ LDR         R3, [R3] 
    /*00011d2c*/ CMP         R4, R3 
    /*00011d30*/ BCS         VencSetMjpegParam_x11dc0
    VencSetMjpegParam_x11d34:
    /*00011d34*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00011d38*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00011d3c*/ MUL         R5, R5, R4 
    /*00011d40*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00011d44*/ LDR         R8, [R3] 
    /*00011d48*/ ADD         R9, R8, R5 
    /*00011d4c*/ ADD         R6, R9, #12416              @ 0x3080 
    /*00011d50*/ ADD         R6, R6, #16 
    /*00011d54*/ MOV         R0, R6 
    /*00011d58*/ BL          0x0000000000011D58          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00011d5c*/ CMP         R0, #0 
    /*00011d60*/ BNE         VencSetMjpegParam_x11e64
    /*00011d64*/ LDR         R3, [R8, R5] 
    /*00011d68*/ CMP         R3, #1 
    /*00011d6c*/ BNE         VencSetMjpegParam_x11e2c
    /*00011d70*/ LDR         R3, [R9, #4] 
    /*00011d74*/ MOVW        R2, #1002                   @ 0x3ea 
    /*00011d78*/ CMP         R3, R2 
    /*00011d7c*/ BNE         VencSetMjpegParam_x11ddc
    /*00011d80*/ MOV         R0, #11 
    /*00011d84*/ BL          0x0000000000011D84          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011d88*/ MOV         R1, R7 
    /*00011d8c*/ LDR         R3, [R0, #56]               @ 0x38 
    /*00011d90*/ MOV         R0, R4 
    /*00011d94*/ BLX         R3 
    /*00011d98*/ MOV         R5, R0 
    /*00011d9c*/ MOV         R0, R6 
    /*00011da0*/ BL          0x0000000000011DA0          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011da4*/ CMP         R5, #0 
    /*00011da8*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*00011dac*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*00011db0*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*00011db4*/ MOV         R0, R5 
    /*00011db8*/ ADD         SP, SP, #12 
    /*00011dbc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetMjpegParam_x11dc0:
    /*00011dc0*/ MOV         R0, R4 
    /*00011dc4*/ BL          0x0000000000000304 
    /*00011dc8*/ SUBS        R5, R0, #0 
    /*00011dcc*/ BEQ         VencSetMjpegParam_x11d34
    VencSetMjpegParam_x11dd0:
    /*00011dd0*/ MOV         R0, R5 
    /*00011dd4*/ ADD         SP, SP, #12 
    /*00011dd8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetMjpegParam_x11ddc:
    /*00011ddc*/ STR         R3, [SP, #4] 
    /*00011de0*/ MOV         R1, #8 
    /*00011de4*/ MOVW        R3, #9721                   @ 0x25f9 
    /*00011de8*/ MOVW        R2, #0                      @ .LC382 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ae8] 
    /*00011dec*/ STR         R3, [SP] 
    /*00011df0*/ MOVT        R2, #0                      @ .LC382 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ae8] 
    /*00011df4*/ LDR         R3, [PC, #116]              @ 0x0000000000011e70 
    /*00011df8*/ MOV         R0, #3 
    /*00011dfc*/ BL          0x0000000000011DFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011e00*/ MOV         R0, R6 
    /*00011e04*/ BL          0x0000000000011E04          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011e08*/ MOVW        R5, #32776                  @ 0x8008 
    /*00011e0c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00011e10*/ MOV         R0, R5 
    /*00011e14*/ ADD         SP, SP, #12 
    /*00011e18*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetMjpegParam_x11e1c:
    /*00011e1c*/ BL          0x00000000000002C8 
    /*00011e20*/ SUBS        R5, R0, #0 
    /*00011e24*/ BNE         VencSetMjpegParam_x11dd0
    /*00011e28*/ B           VencSetMjpegParam_x11d18
    VencSetMjpegParam_x11e2c:
    /*00011e2c*/ MOVW        R3, #9707                   @ 0x25eb 
    /*00011e30*/ MOV         R1, #8 
    /*00011e34*/ STR         R3, [SP] 
    /*00011e38*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00011e3c*/ LDR         R3, [PC, #44]               @ 0x0000000000011e70 
    /*00011e40*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00011e44*/ STR         R4, [SP, #4] 
    /*00011e48*/ MOV         R0, #3 
    /*00011e4c*/ BL          0x0000000000011E4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011e50*/ MOV         R0, R6 
    /*00011e54*/ MOVW        R5, #32773                  @ 0x8005 
    /*00011e58*/ BL          0x0000000000011E58          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011e5c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00011e60*/ B           VencSetMjpegParam_x11dd0
    VencSetMjpegParam_x11e64:
    /*00011e64*/ MOV         R5, #65024                  @ 0xfe00 
    /*00011e68*/ MOVT        R5, #65535                  @ 0xffff 
    /*00011e6c*/ B           VencSetMjpegParam_x11dd0
    /*00011e70*/ ANDEQ       R0, R0, R0, LSL R8 
FUNC_END VencSetMjpegParam


FUNC_BEGIN VencGetMjpegParam
    /*00011e74*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00011e78*/ SUBS        R7, R1, #0 
    /*00011e7c*/ SUB         SP, SP, #12 
    /*00011e80*/ MOV         R4, R0 
    /*00011e84*/ BEQ         VencGetMjpegParam_x11f8c
    VencGetMjpegParam_x11e88:
    /*00011e88*/ CMP         R4, #0 
    /*00011e8c*/ BLT         VencGetMjpegParam_x11f30
    /*00011e90*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00011e94*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00011e98*/ LDR         R3, [R3] 
    /*00011e9c*/ CMP         R4, R3 
    /*00011ea0*/ BCS         VencGetMjpegParam_x11f30
    VencGetMjpegParam_x11ea4:
    /*00011ea4*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00011ea8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00011eac*/ MUL         R5, R5, R4 
    /*00011eb0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00011eb4*/ LDR         R8, [R3] 
    /*00011eb8*/ ADD         R9, R8, R5 
    /*00011ebc*/ ADD         R6, R9, #12416              @ 0x3080 
    /*00011ec0*/ ADD         R6, R6, #16 
    /*00011ec4*/ MOV         R0, R6 
    /*00011ec8*/ BL          0x0000000000011EC8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00011ecc*/ CMP         R0, #0 
    /*00011ed0*/ BNE         VencGetMjpegParam_x11fd4
    /*00011ed4*/ LDR         R3, [R8, R5] 
    /*00011ed8*/ CMP         R3, #1 
    /*00011edc*/ BNE         VencGetMjpegParam_x11f9c
    /*00011ee0*/ LDR         R3, [R9, #4] 
    /*00011ee4*/ MOVW        R2, #1002                   @ 0x3ea 
    /*00011ee8*/ CMP         R3, R2 
    /*00011eec*/ BNE         VencGetMjpegParam_x11f4c
    /*00011ef0*/ MOV         R0, #11 
    /*00011ef4*/ BL          0x0000000000011EF4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011ef8*/ MOV         R1, R7 
    /*00011efc*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*00011f00*/ MOV         R0, R4 
    /*00011f04*/ BLX         R3 
    /*00011f08*/ MOV         R5, R0 
    /*00011f0c*/ MOV         R0, R6 
    /*00011f10*/ BL          0x0000000000011F10          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011f14*/ CMP         R5, #0 
    /*00011f18*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*00011f1c*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*00011f20*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*00011f24*/ MOV         R0, R5 
    /*00011f28*/ ADD         SP, SP, #12 
    /*00011f2c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetMjpegParam_x11f30:
    /*00011f30*/ MOV         R0, R4 
    /*00011f34*/ BL          0x0000000000000304 
    /*00011f38*/ SUBS        R5, R0, #0 
    /*00011f3c*/ BEQ         VencGetMjpegParam_x11ea4
    VencGetMjpegParam_x11f40:
    /*00011f40*/ MOV         R0, R5 
    /*00011f44*/ ADD         SP, SP, #12 
    /*00011f48*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetMjpegParam_x11f4c:
    /*00011f4c*/ STR         R3, [SP, #4] 
    /*00011f50*/ MOV         R1, #8 
    /*00011f54*/ MOVW        R3, #9760                   @ 0x2620 
    /*00011f58*/ MOVW        R2, #0                      @ .LC383 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4b38] 
    /*00011f5c*/ STR         R3, [SP] 
    /*00011f60*/ MOVT        R2, #0                      @ .LC383 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4b38] 
    /*00011f64*/ LDR         R3, [PC, #116]              @ 0x0000000000011fe0 
    /*00011f68*/ MOV         R0, #3 
    /*00011f6c*/ BL          0x0000000000011F6C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011f70*/ MOV         R0, R6 
    /*00011f74*/ BL          0x0000000000011F74          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011f78*/ MOVW        R5, #32776                  @ 0x8008 
    /*00011f7c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00011f80*/ MOV         R0, R5 
    /*00011f84*/ ADD         SP, SP, #12 
    /*00011f88*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetMjpegParam_x11f8c:
    /*00011f8c*/ BL          0x00000000000002C8 
    /*00011f90*/ SUBS        R5, R0, #0 
    /*00011f94*/ BNE         VencGetMjpegParam_x11f40
    /*00011f98*/ B           VencGetMjpegParam_x11e88
    VencGetMjpegParam_x11f9c:
    /*00011f9c*/ MOVW        R3, #9746                   @ 0x2612 
    /*00011fa0*/ MOV         R1, #8 
    /*00011fa4*/ STR         R3, [SP] 
    /*00011fa8*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00011fac*/ LDR         R3, [PC, #44]               @ 0x0000000000011fe0 
    /*00011fb0*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00011fb4*/ STR         R4, [SP, #4] 
    /*00011fb8*/ MOV         R0, #3 
    /*00011fbc*/ BL          0x0000000000011FBC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011fc0*/ MOV         R0, R6 
    /*00011fc4*/ MOVW        R5, #32773                  @ 0x8005 
    /*00011fc8*/ BL          0x0000000000011FC8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00011fcc*/ MOVT        R5, #40968                  @ 0xa008 
    /*00011fd0*/ B           VencGetMjpegParam_x11f40
    VencGetMjpegParam_x11fd4:
    /*00011fd4*/ MOV         R5, #65024                  @ 0xfe00 
    /*00011fd8*/ MOVT        R5, #65535                  @ 0xffff 
    /*00011fdc*/ B           VencGetMjpegParam_x11f40
    /*00011fe0*/ ANDEQ       R0, R0, R4, LSR #16 
FUNC_END VencGetMjpegParam


FUNC_BEGIN VencSetJpegEncodeMode
    /*00011fe4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00011fe8*/ SUBS        R4, R0, #0 
    /*00011fec*/ SUB         SP, SP, #24 
    /*00011ff0*/ MOV         R8, R1 
    /*00011ff4*/ BLT         VencSetJpegEncodeMode_x1200c
    /*00011ff8*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00011ffc*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00012000*/ LDR         R3, [R3] 
    /*00012004*/ CMP         R4, R3 
    /*00012008*/ BCC         VencSetJpegEncodeMode_x12028
    VencSetJpegEncodeMode_x1200c:
    /*0001200c*/ MOV         R0, R4 
    /*00012010*/ BL          0x0000000000000304 
    /*00012014*/ SUBS        R5, R0, #0 
    /*00012018*/ BEQ         VencSetJpegEncodeMode_x12028
    VencSetJpegEncodeMode_x1201c:
    /*0001201c*/ MOV         R0, R5 
    /*00012020*/ ADD         SP, SP, #24 
    /*00012024*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencSetJpegEncodeMode_x12028:
    /*00012028*/ MOVW        R7, #36240                  @ 0x8d90 
    /*0001202c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00012030*/ MUL         R7, R7, R4 
    /*00012034*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00012038*/ LDR         R9, [R3] 
    /*0001203c*/ ADD         SL, R9, R7 
    /*00012040*/ ADD         R6, SL, #12416              @ 0x3080 
    /*00012044*/ ADD         R6, R6, #16 
    /*00012048*/ MOV         R0, R6 
    /*0001204c*/ BL          0x000000000001204C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00012050*/ SUBS        R5, R0, #0 
    /*00012054*/ BNE         VencSetJpegEncodeMode_x12148
    /*00012058*/ LDR         R3, [R9, R7] 
    /*0001205c*/ CMP         R3, #1 
    /*00012060*/ BEQ         VencSetJpegEncodeMode_x120a4
    /*00012064*/ MOVW        R3, #9784                   @ 0x2638 
    /*00012068*/ STR         R4, [SP, #4] 
    /*0001206c*/ STR         R3, [SP] 
    /*00012070*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00012074*/ LDR         R3, [PC, #264]              @ 0x0000000000012184 
    /*00012078*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001207c*/ MOV         R1, #8 
    /*00012080*/ MOV         R0, #3 
    /*00012084*/ BL          0x0000000000012084          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012088*/ MOVW        R5, #32773                  @ 0x8005 
    /*0001208c*/ MOVT        R5, #40968                  @ 0xa008 
    VencSetJpegEncodeMode_x12090:
    /*00012090*/ MOV         R0, R6 
    /*00012094*/ BL          0x0000000000012094          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012098*/ MOV         R0, R5 
    /*0001209c*/ ADD         SP, SP, #24 
    /*000120a0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencSetJpegEncodeMode_x120a4:
    /*000120a4*/ LDR         R2, [SL, #4] 
    /*000120a8*/ CMP         R2, #26 
    /*000120ac*/ BEQ         VencSetJpegEncodeMode_x120e0
    /*000120b0*/ STR         R2, [SP, #4] 
    /*000120b4*/ MOVW        R2, #0                      @ .LC384 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4b88] 
    /*000120b8*/ MOVT        R2, #0                      @ .LC384 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4b88] 
    /*000120bc*/ MOV         R3, #9792                   @ 0x2640 
    /*000120c0*/ STR         R3, [SP] 
    VencSetJpegEncodeMode_x120c4:
    /*000120c4*/ LDR         R3, [PC, #184]              @ 0x0000000000012184 
    /*000120c8*/ MOV         R1, #8 
    /*000120cc*/ MOV         R0, #3 
    /*000120d0*/ MOVW        R5, #32776                  @ 0x8008 
    /*000120d4*/ BL          0x00000000000120D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000120d8*/ MOVT        R5, #40968                  @ 0xa008 
    /*000120dc*/ B           VencSetJpegEncodeMode_x12090
    VencSetJpegEncodeMode_x120e0:
    /*000120e0*/ CMP         R8, #1 
    /*000120e4*/ BLS         VencSetJpegEncodeMode_x12120
    /*000120e8*/ STR         R3, [SP, #12] 
    /*000120ec*/ MOVW        R2, #0                      @ .LC385 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4bcc] 
    /*000120f0*/ MOVW        R3, #9800                   @ 0x2648 
    /*000120f4*/ STR         R5, [SP, #8] 
    /*000120f8*/ STR         R3, [SP] 
    /*000120fc*/ MOVT        R2, #0                      @ .LC385 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4bcc] 
    /*00012100*/ STR         R8, [SP, #4] 
    /*00012104*/ MOV         R1, #8 
    /*00012108*/ LDR         R3, [PC, #116]              @ 0x0000000000012184 
    /*0001210c*/ MOV         R0, #3 
    /*00012110*/ MOVW        R5, #32771                  @ 0x8003 
    /*00012114*/ BL          0x0000000000012114          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012118*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001211c*/ B           VencSetJpegEncodeMode_x12090
    VencSetJpegEncodeMode_x12120:
    /*00012120*/ MOV         R0, R8 
    /*00012124*/ BL          0x0000000000012124          @ VENC_DRV_CheckSnapMode [R_ARM_CALL: .text+0x26058] 
    /*00012128*/ CMP         R0, #0 
    /*0001212c*/ BNE         VencSetJpegEncodeMode_x12154
    /*00012130*/ MOVW        R3, #9808                   @ 0x2650 
    /*00012134*/ MOVW        R2, #0                      @ .LC386 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c10] 
    /*00012138*/ STR         R8, [SP, #4] 
    /*0001213c*/ MOVT        R2, #0                      @ .LC386 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c10] 
    /*00012140*/ STR         R3, [SP] 
    /*00012144*/ B           VencSetJpegEncodeMode_x120c4
    VencSetJpegEncodeMode_x12148:
    /*00012148*/ MOV         R5, #65024                  @ 0xfe00 
    /*0001214c*/ MOVT        R5, #65535                  @ 0xffff 
    /*00012150*/ B           VencSetJpegEncodeMode_x1201c
    VencSetJpegEncodeMode_x12154:
    /*00012154*/ ADD         R4, SL, #64                 @ 0x40 
    /*00012158*/ ADD         SL, SL, #12288              @ 0x3000 
    /*0001215c*/ ADD         R1, SP, #20 
    /*00012160*/ MOV         R0, R4 
    /*00012164*/ BL          0x0000000000012164          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00012168*/ MOV         R0, R4 
    /*0001216c*/ ADD         R1, SP, #20 
    /*00012170*/ STR         R8, [SL, #128]              @ 0x80 
    /*00012174*/ BL          0x0000000000012174          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00012178*/ MOV         R0, R6 
    /*0001217c*/ BL          0x000000000001217C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012180*/ B           VencSetJpegEncodeMode_x1201c
    /*00012184*/ ANDEQ       R0, R0, R8, LSR R8 
FUNC_END VencSetJpegEncodeMode


FUNC_BEGIN VencGetJpegEncodeMode
    /*00012188*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0001218c*/ SUBS        R8, R1, #0 
    /*00012190*/ SUB         SP, SP, #8 
    /*00012194*/ MOV         R4, R0 
    /*00012198*/ BEQ         VencGetJpegEncodeMode_x1228c
    VencGetJpegEncodeMode_x1219c:
    /*0001219c*/ CMP         R4, #0 
    /*000121a0*/ BLT         VencGetJpegEncodeMode_x121b8
    /*000121a4*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000121a8*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000121ac*/ LDR         R3, [R3] 
    /*000121b0*/ CMP         R4, R3 
    /*000121b4*/ BCC         VencGetJpegEncodeMode_x121d4
    VencGetJpegEncodeMode_x121b8:
    /*000121b8*/ MOV         R0, R4 
    /*000121bc*/ BL          0x0000000000000304 
    /*000121c0*/ SUBS        R5, R0, #0 
    /*000121c4*/ BEQ         VencGetJpegEncodeMode_x121d4
    VencGetJpegEncodeMode_x121c8:
    /*000121c8*/ MOV         R0, R5 
    /*000121cc*/ ADD         SP, SP, #8 
    /*000121d0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencGetJpegEncodeMode_x121d4:
    /*000121d4*/ MOVW        R6, #36240                  @ 0x8d90 
    /*000121d8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000121dc*/ MUL         R6, R6, R4 
    /*000121e0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000121e4*/ LDR         SL, [R3] 
    /*000121e8*/ ADD         R9, SL, R6 
    /*000121ec*/ ADD         R7, R9, #12416              @ 0x3080 
    /*000121f0*/ ADD         R7, R7, #16 
    /*000121f4*/ MOV         R0, R7 
    /*000121f8*/ BL          0x00000000000121F8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000121fc*/ SUBS        R5, R0, #0 
    /*00012200*/ BNE         VencGetJpegEncodeMode_x122b4
    /*00012204*/ LDR         R3, [SL, R6] 
    /*00012208*/ CMP         R3, #1 
    /*0001220c*/ BEQ         VencGetJpegEncodeMode_x12250
    /*00012210*/ MOVW        R3, #9844                   @ 0x2674 
    /*00012214*/ STR         R4, [SP, #4] 
    /*00012218*/ STR         R3, [SP] 
    /*0001221c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00012220*/ LDR         R3, [PC, #152]              @ 0x00000000000122c0 
    /*00012224*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00012228*/ MOV         R1, #8 
    /*0001222c*/ MOV         R0, #3 
    /*00012230*/ BL          0x0000000000012230          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012234*/ MOVW        R5, #32773                  @ 0x8005 
    /*00012238*/ MOVT        R5, #40968                  @ 0xa008 
    VencGetJpegEncodeMode_x1223c:
    /*0001223c*/ MOV         R0, R7 
    /*00012240*/ BL          0x0000000000012240          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012244*/ MOV         R0, R5 
    /*00012248*/ ADD         SP, SP, #8 
    /*0001224c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencGetJpegEncodeMode_x12250:
    /*00012250*/ LDR         R3, [R9, #4] 
    /*00012254*/ CMP         R3, #26 
    /*00012258*/ BEQ         VencGetJpegEncodeMode_x1229c
    /*0001225c*/ STR         R3, [SP, #4] 
    /*00012260*/ MOVW        R2, #0                      @ .LC384 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4b88] 
    /*00012264*/ MOVW        R3, #9851                   @ 0x267b 
    /*00012268*/ MOVT        R2, #0                      @ .LC384 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4b88] 
    /*0001226c*/ STR         R3, [SP] 
    /*00012270*/ MOV         R1, #8 
    /*00012274*/ LDR         R3, [PC, #68]               @ 0x00000000000122c0 
    /*00012278*/ MOV         R0, #3 
    /*0001227c*/ MOVW        R5, #32776                  @ 0x8008 
    /*00012280*/ BL          0x0000000000012280          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012284*/ MOVT        R5, #40968                  @ 0xa008 
    /*00012288*/ B           VencGetJpegEncodeMode_x1223c
    VencGetJpegEncodeMode_x1228c:
    /*0001228c*/ BL          0x00000000000002C8 
    /*00012290*/ SUBS        R5, R0, #0 
    /*00012294*/ BNE         VencGetJpegEncodeMode_x121c8
    /*00012298*/ B           VencGetJpegEncodeMode_x1219c
    VencGetJpegEncodeMode_x1229c:
    /*0001229c*/ ADD         R9, R9, #12288              @ 0x3000 
    /*000122a0*/ MOV         R0, R7 
    /*000122a4*/ LDR         R3, [R9, #128]              @ 0x80 
    /*000122a8*/ STR         R3, [R8] 
    /*000122ac*/ BL          0x00000000000122AC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000122b0*/ B           VencGetJpegEncodeMode_x121c8
    VencGetJpegEncodeMode_x122b4:
    /*000122b4*/ MOV         R5, #65024                  @ 0xfe00 
    /*000122b8*/ MOVT        R5, #65535                  @ 0xffff 
    /*000122bc*/ B           VencGetJpegEncodeMode_x121c8
    /*000122c0*/ ANDEQ       R0, R0, R0, ASR R8 
FUNC_END VencGetJpegEncodeMode


FUNC_BEGIN VencSetH265Slice
    /*000122c4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000122c8*/ SUBS        R6, R1, #0 
    /*000122cc*/ SUB         SP, SP, #12 
    /*000122d0*/ MOV         R4, R0 
    /*000122d4*/ BEQ         VencSetH265Slice_x123a0
    VencSetH265Slice_x122d8:
    /*000122d8*/ CMP         R4, #0 
    /*000122dc*/ BLT         VencSetH265Slice_x12384
    /*000122e0*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000122e4*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000122e8*/ LDR         R3, [R3] 
    /*000122ec*/ CMP         R4, R3 
    /*000122f0*/ BCS         VencSetH265Slice_x12384
    VencSetH265Slice_x122f4:
    /*000122f4*/ MOVW        R5, #36240                  @ 0x8d90 
    /*000122f8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000122fc*/ MUL         R5, R5, R4 
    /*00012300*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00012304*/ LDR         R8, [R3] 
    /*00012308*/ ADD         R9, R8, R5 
    /*0001230c*/ ADD         R7, R9, #12416              @ 0x3080 
    /*00012310*/ ADD         R7, R7, #16 
    /*00012314*/ MOV         R0, R7 
    /*00012318*/ BL          0x0000000000012318          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001231c*/ CMP         R0, #0 
    /*00012320*/ BNE         VencSetH265Slice_x12420
    /*00012324*/ LDR         R3, [R8, R5] 
    /*00012328*/ CMP         R3, #1 
    /*0001232c*/ BNE         VencSetH265Slice_x123e8
    /*00012330*/ LDR         R3, [R9, #4] 
    /*00012334*/ MOVW        R2, #265                    @ 0x109 
    /*00012338*/ CMP         R3, R2 
    /*0001233c*/ BNE         VencSetH265Slice_x123b0
    /*00012340*/ MOV         R0, #13 
    /*00012344*/ BL          0x0000000000012344          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00012348*/ MOV         R1, R6 
    /*0001234c*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*00012350*/ MOV         R0, R4 
    /*00012354*/ BLX         R3 
    /*00012358*/ MOV         R5, R0 
    /*0001235c*/ MOV         R0, R7 
    /*00012360*/ BL          0x0000000000012360          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012364*/ CMP         R5, #0 
    /*00012368*/ BEQ         VencSetH265Slice_x12394
    /*0001236c*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00012370*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00012374*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00012378*/ MOV         R0, R5 
    /*0001237c*/ ADD         SP, SP, #12 
    /*00012380*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH265Slice_x12384:
    /*00012384*/ MOV         R0, R4 
    /*00012388*/ BL          0x0000000000000304 
    /*0001238c*/ SUBS        R5, R0, #0 
    /*00012390*/ BEQ         VencSetH265Slice_x122f4
    VencSetH265Slice_x12394:
    /*00012394*/ MOV         R0, R5 
    /*00012398*/ ADD         SP, SP, #12 
    /*0001239c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH265Slice_x123a0:
    /*000123a0*/ BL          0x00000000000002C8 
    /*000123a4*/ SUBS        R5, R0, #0 
    /*000123a8*/ BNE         VencSetH265Slice_x12394
    /*000123ac*/ B           VencSetH265Slice_x122d8
    VencSetH265Slice_x123b0:
    /*000123b0*/ STR         R3, [SP, #4] 
    /*000123b4*/ MOV         R1, #8 
    /*000123b8*/ MOVW        R3, #9889                   @ 0x26a1 
    /*000123bc*/ MOVW        R2, #0                      @ .LC387 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c58] 
    /*000123c0*/ STR         R3, [SP] 
    /*000123c4*/ MOVT        R2, #0                      @ .LC387 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c58] 
    /*000123c8*/ LDR         R3, [PC, #92]               @ 0x000000000001242c 
    /*000123cc*/ MOV         R0, #3 
    /*000123d0*/ BL          0x00000000000123D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000123d4*/ MOV         R0, R7 
    /*000123d8*/ MOVW        R5, #32776                  @ 0x8008 
    /*000123dc*/ BL          0x00000000000123DC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000123e0*/ MOVT        R5, #40968                  @ 0xa008 
    /*000123e4*/ B           VencSetH265Slice_x12394
    VencSetH265Slice_x123e8:
    /*000123e8*/ MOVW        R3, #9882                   @ 0x269a 
    /*000123ec*/ MOV         R1, #8 
    /*000123f0*/ STR         R3, [SP] 
    /*000123f4*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*000123f8*/ LDR         R3, [PC, #44]               @ 0x000000000001242c 
    /*000123fc*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00012400*/ STR         R4, [SP, #4] 
    /*00012404*/ MOV         R0, #3 
    /*00012408*/ BL          0x0000000000012408          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001240c*/ MOV         R0, R7 
    /*00012410*/ MOVW        R5, #32773                  @ 0x8005 
    /*00012414*/ BL          0x0000000000012414          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012418*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001241c*/ B           VencSetH265Slice_x12394
    VencSetH265Slice_x12420:
    /*00012420*/ MOV         R5, #65024                  @ 0xfe00 
    /*00012424*/ MOVT        R5, #65535                  @ 0xffff 
    /*00012428*/ B           VencSetH265Slice_x12394
    /*0001242c*/ ANDEQ       R0, R0, R8, ROR #16 
FUNC_END VencSetH265Slice


FUNC_BEGIN VencGetH265Slice
    /*00012430*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00012434*/ SUBS        R6, R1, #0 
    /*00012438*/ SUB         SP, SP, #12 
    /*0001243c*/ MOV         R4, R0 
    /*00012440*/ BEQ         VencGetH265Slice_x1250c
    VencGetH265Slice_x12444:
    /*00012444*/ CMP         R4, #0 
    /*00012448*/ BLT         VencGetH265Slice_x124f0
    /*0001244c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00012450*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00012454*/ LDR         R3, [R3] 
    /*00012458*/ CMP         R4, R3 
    /*0001245c*/ BCS         VencGetH265Slice_x124f0
    VencGetH265Slice_x12460:
    /*00012460*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00012464*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00012468*/ MUL         R5, R5, R4 
    /*0001246c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00012470*/ LDR         R8, [R3] 
    /*00012474*/ ADD         R9, R8, R5 
    /*00012478*/ ADD         R7, R9, #12416              @ 0x3080 
    /*0001247c*/ ADD         R7, R7, #16 
    /*00012480*/ MOV         R0, R7 
    /*00012484*/ BL          0x0000000000012484          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00012488*/ CMP         R0, #0 
    /*0001248c*/ BNE         VencGetH265Slice_x1258c
    /*00012490*/ LDR         R3, [R8, R5] 
    /*00012494*/ CMP         R3, #1 
    /*00012498*/ BNE         VencGetH265Slice_x12554
    /*0001249c*/ LDR         R3, [R9, #4] 
    /*000124a0*/ MOVW        R2, #265                    @ 0x109 
    /*000124a4*/ CMP         R3, R2 
    /*000124a8*/ BNE         VencGetH265Slice_x1251c
    /*000124ac*/ MOV         R0, #13 
    /*000124b0*/ BL          0x00000000000124B0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000124b4*/ MOV         R1, R6 
    /*000124b8*/ LDR         R3, [R0, #64]               @ 0x40 
    /*000124bc*/ MOV         R0, R4 
    /*000124c0*/ BLX         R3 
    /*000124c4*/ MOV         R5, R0 
    /*000124c8*/ MOV         R0, R7 
    /*000124cc*/ BL          0x00000000000124CC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000124d0*/ CMP         R5, #0 
    /*000124d4*/ BEQ         VencGetH265Slice_x12500
    /*000124d8*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*000124dc*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*000124e0*/ ORR         R5, R5, #524288             @ 0x80000 
    /*000124e4*/ MOV         R0, R5 
    /*000124e8*/ ADD         SP, SP, #12 
    /*000124ec*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH265Slice_x124f0:
    /*000124f0*/ MOV         R0, R4 
    /*000124f4*/ BL          0x0000000000000304 
    /*000124f8*/ SUBS        R5, R0, #0 
    /*000124fc*/ BEQ         VencGetH265Slice_x12460
    VencGetH265Slice_x12500:
    /*00012500*/ MOV         R0, R5 
    /*00012504*/ ADD         SP, SP, #12 
    /*00012508*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH265Slice_x1250c:
    /*0001250c*/ BL          0x00000000000002C8 
    /*00012510*/ SUBS        R5, R0, #0 
    /*00012514*/ BNE         VencGetH265Slice_x12500
    /*00012518*/ B           VencGetH265Slice_x12444
    VencGetH265Slice_x1251c:
    /*0001251c*/ STR         R3, [SP, #4] 
    /*00012520*/ MOV         R1, #8 
    /*00012524*/ MOVW        R3, #9922                   @ 0x26c2 
    /*00012528*/ MOVW        R2, #0                      @ .LC387 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c58] 
    /*0001252c*/ STR         R3, [SP] 
    /*00012530*/ MOVT        R2, #0                      @ .LC387 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c58] 
    /*00012534*/ LDR         R3, [PC, #92]               @ 0x0000000000012598 
    /*00012538*/ MOV         R0, #3 
    /*0001253c*/ BL          0x000000000001253C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012540*/ MOV         R0, R7 
    /*00012544*/ MOVW        R5, #32776                  @ 0x8008 
    /*00012548*/ BL          0x0000000000012548          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001254c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00012550*/ B           VencGetH265Slice_x12500
    VencGetH265Slice_x12554:
    /*00012554*/ MOVW        R3, #9915                   @ 0x26bb 
    /*00012558*/ MOV         R1, #8 
    /*0001255c*/ STR         R3, [SP] 
    /*00012560*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00012564*/ LDR         R3, [PC, #44]               @ 0x0000000000012598 
    /*00012568*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001256c*/ STR         R4, [SP, #4] 
    /*00012570*/ MOV         R0, #3 
    /*00012574*/ BL          0x0000000000012574          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012578*/ MOV         R0, R7 
    /*0001257c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00012580*/ BL          0x0000000000012580          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012584*/ MOVT        R5, #40968                  @ 0xa008 
    /*00012588*/ B           VencGetH265Slice_x12500
    VencGetH265Slice_x1258c:
    /*0001258c*/ MOV         R5, #65024                  @ 0xfe00 
    /*00012590*/ MOVT        R5, #65535                  @ 0xffff 
    /*00012594*/ B           VencGetH265Slice_x12500
    /*00012598*/ ANDEQ       R0, R0, IP, ROR R8 
FUNC_END VencGetH265Slice


FUNC_BEGIN VencSetH265Pu
    /*0001259c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000125a0*/ SUBS        R6, R1, #0 
    /*000125a4*/ SUB         SP, SP, #12 
    /*000125a8*/ MOV         R4, R0 
    /*000125ac*/ BEQ         VencSetH265Pu_x12678
    VencSetH265Pu_x125b0:
    /*000125b0*/ CMP         R4, #0 
    /*000125b4*/ BLT         VencSetH265Pu_x1265c
    /*000125b8*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000125bc*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000125c0*/ LDR         R3, [R3] 
    /*000125c4*/ CMP         R4, R3 
    /*000125c8*/ BCS         VencSetH265Pu_x1265c
    VencSetH265Pu_x125cc:
    /*000125cc*/ MOVW        R5, #36240                  @ 0x8d90 
    /*000125d0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000125d4*/ MUL         R5, R5, R4 
    /*000125d8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000125dc*/ LDR         R8, [R3] 
    /*000125e0*/ ADD         R9, R8, R5 
    /*000125e4*/ ADD         R7, R9, #12416              @ 0x3080 
    /*000125e8*/ ADD         R7, R7, #16 
    /*000125ec*/ MOV         R0, R7 
    /*000125f0*/ BL          0x00000000000125F0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000125f4*/ CMP         R0, #0 
    /*000125f8*/ BNE         VencSetH265Pu_x126f8
    /*000125fc*/ LDR         R3, [R8, R5] 
    /*00012600*/ CMP         R3, #1 
    /*00012604*/ BNE         VencSetH265Pu_x126c0
    /*00012608*/ LDR         R3, [R9, #4] 
    /*0001260c*/ MOVW        R2, #265                    @ 0x109 
    /*00012610*/ CMP         R3, R2 
    /*00012614*/ BNE         VencSetH265Pu_x12688
    /*00012618*/ MOV         R0, #13 
    /*0001261c*/ BL          0x000000000001261C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00012620*/ MOV         R1, R6 
    /*00012624*/ LDR         R3, [R0, #68]               @ 0x44 
    /*00012628*/ MOV         R0, R4 
    /*0001262c*/ BLX         R3 
    /*00012630*/ MOV         R5, R0 
    /*00012634*/ MOV         R0, R7 
    /*00012638*/ BL          0x0000000000012638          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001263c*/ CMP         R5, #0 
    /*00012640*/ BEQ         VencSetH265Pu_x1266c
    /*00012644*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00012648*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*0001264c*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00012650*/ MOV         R0, R5 
    /*00012654*/ ADD         SP, SP, #12 
    /*00012658*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH265Pu_x1265c:
    /*0001265c*/ MOV         R0, R4 
    /*00012660*/ BL          0x0000000000000304 
    /*00012664*/ SUBS        R5, R0, #0 
    /*00012668*/ BEQ         VencSetH265Pu_x125cc
    VencSetH265Pu_x1266c:
    /*0001266c*/ MOV         R0, R5 
    /*00012670*/ ADD         SP, SP, #12 
    /*00012674*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH265Pu_x12678:
    /*00012678*/ BL          0x00000000000002C8 
    /*0001267c*/ SUBS        R5, R0, #0 
    /*00012680*/ BNE         VencSetH265Pu_x1266c
    /*00012684*/ B           VencSetH265Pu_x125b0
    VencSetH265Pu_x12688:
    /*00012688*/ STR         R3, [SP, #4] 
    /*0001268c*/ MOV         R1, #8 
    /*00012690*/ MOVW        R3, #9957                   @ 0x26e5 
    /*00012694*/ MOVW        R2, #0                      @ .LC387 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c58] 
    /*00012698*/ STR         R3, [SP] 
    /*0001269c*/ MOVT        R2, #0                      @ .LC387 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c58] 
    /*000126a0*/ LDR         R3, [PC, #92]               @ 0x0000000000012704 
    /*000126a4*/ MOV         R0, #3 
    /*000126a8*/ BL          0x00000000000126A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000126ac*/ MOV         R0, R7 
    /*000126b0*/ MOVW        R5, #32776                  @ 0x8008 
    /*000126b4*/ BL          0x00000000000126B4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000126b8*/ MOVT        R5, #40968                  @ 0xa008 
    /*000126bc*/ B           VencSetH265Pu_x1266c
    VencSetH265Pu_x126c0:
    /*000126c0*/ MOVW        R3, #9950                   @ 0x26de 
    /*000126c4*/ MOV         R1, #8 
    /*000126c8*/ STR         R3, [SP] 
    /*000126cc*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*000126d0*/ LDR         R3, [PC, #44]               @ 0x0000000000012704 
    /*000126d4*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*000126d8*/ STR         R4, [SP, #4] 
    /*000126dc*/ MOV         R0, #3 
    /*000126e0*/ BL          0x00000000000126E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000126e4*/ MOV         R0, R7 
    /*000126e8*/ MOVW        R5, #32773                  @ 0x8005 
    /*000126ec*/ BL          0x00000000000126EC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000126f0*/ MOVT        R5, #40968                  @ 0xa008 
    /*000126f4*/ B           VencSetH265Pu_x1266c
    VencSetH265Pu_x126f8:
    /*000126f8*/ MOV         R5, #65024                  @ 0xfe00 
    /*000126fc*/ MOVT        R5, #65535                  @ 0xffff 
    /*00012700*/ B           VencSetH265Pu_x1266c
    /*00012704*/ MULEQ       R0, R0, R8 
FUNC_END VencSetH265Pu


FUNC_BEGIN VencGetH265Pu
    /*00012708*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001270c*/ SUBS        R6, R1, #0 
    /*00012710*/ SUB         SP, SP, #12 
    /*00012714*/ MOV         R4, R0 
    /*00012718*/ BEQ         VencGetH265Pu_x127e4
    VencGetH265Pu_x1271c:
    /*0001271c*/ CMP         R4, #0 
    /*00012720*/ BLT         VencGetH265Pu_x127c8
    /*00012724*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00012728*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0001272c*/ LDR         R3, [R3] 
    /*00012730*/ CMP         R4, R3 
    /*00012734*/ BCS         VencGetH265Pu_x127c8
    VencGetH265Pu_x12738:
    /*00012738*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0001273c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00012740*/ MUL         R5, R5, R4 
    /*00012744*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00012748*/ LDR         R8, [R3] 
    /*0001274c*/ ADD         R9, R8, R5 
    /*00012750*/ ADD         R7, R9, #12416              @ 0x3080 
    /*00012754*/ ADD         R7, R7, #16 
    /*00012758*/ MOV         R0, R7 
    /*0001275c*/ BL          0x000000000001275C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00012760*/ CMP         R0, #0 
    /*00012764*/ BNE         VencGetH265Pu_x12864
    /*00012768*/ LDR         R3, [R8, R5] 
    /*0001276c*/ CMP         R3, #1 
    /*00012770*/ BNE         VencGetH265Pu_x1282c
    /*00012774*/ LDR         R3, [R9, #4] 
    /*00012778*/ MOVW        R2, #265                    @ 0x109 
    /*0001277c*/ CMP         R3, R2 
    /*00012780*/ BNE         VencGetH265Pu_x127f4
    /*00012784*/ MOV         R0, #13 
    /*00012788*/ BL          0x0000000000012788          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001278c*/ MOV         R1, R6 
    /*00012790*/ LDR         R3, [R0, #72]               @ 0x48 
    /*00012794*/ MOV         R0, R4 
    /*00012798*/ BLX         R3 
    /*0001279c*/ MOV         R5, R0 
    /*000127a0*/ MOV         R0, R7 
    /*000127a4*/ BL          0x00000000000127A4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000127a8*/ CMP         R5, #0 
    /*000127ac*/ BEQ         VencGetH265Pu_x127d8
    /*000127b0*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*000127b4*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*000127b8*/ ORR         R5, R5, #524288             @ 0x80000 
    /*000127bc*/ MOV         R0, R5 
    /*000127c0*/ ADD         SP, SP, #12 
    /*000127c4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH265Pu_x127c8:
    /*000127c8*/ MOV         R0, R4 
    /*000127cc*/ BL          0x0000000000000304 
    /*000127d0*/ SUBS        R5, R0, #0 
    /*000127d4*/ BEQ         VencGetH265Pu_x12738
    VencGetH265Pu_x127d8:
    /*000127d8*/ MOV         R0, R5 
    /*000127dc*/ ADD         SP, SP, #12 
    /*000127e0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH265Pu_x127e4:
    /*000127e4*/ BL          0x00000000000002C8 
    /*000127e8*/ SUBS        R5, R0, #0 
    /*000127ec*/ BNE         VencGetH265Pu_x127d8
    /*000127f0*/ B           VencGetH265Pu_x1271c
    VencGetH265Pu_x127f4:
    /*000127f4*/ STR         R3, [SP, #4] 
    /*000127f8*/ MOV         R1, #8 
    /*000127fc*/ MOVW        R3, #9991                   @ 0x2707 
    /*00012800*/ MOVW        R2, #0                      @ .LC387 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c58] 
    /*00012804*/ STR         R3, [SP] 
    /*00012808*/ MOVT        R2, #0                      @ .LC387 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c58] 
    /*0001280c*/ LDR         R3, [PC, #92]               @ 0x0000000000012870 
    /*00012810*/ MOV         R0, #3 
    /*00012814*/ BL          0x0000000000012814          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012818*/ MOV         R0, R7 
    /*0001281c*/ MOVW        R5, #32776                  @ 0x8008 
    /*00012820*/ BL          0x0000000000012820          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012824*/ MOVT        R5, #40968                  @ 0xa008 
    /*00012828*/ B           VencGetH265Pu_x127d8
    VencGetH265Pu_x1282c:
    /*0001282c*/ MOV         R3, #9984                   @ 0x2700 
    /*00012830*/ MOV         R1, #8 
    /*00012834*/ STR         R3, [SP] 
    /*00012838*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0001283c*/ LDR         R3, [PC, #44]               @ 0x0000000000012870 
    /*00012840*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00012844*/ STR         R4, [SP, #4] 
    /*00012848*/ MOV         R0, #3 
    /*0001284c*/ BL          0x000000000001284C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012850*/ MOV         R0, R7 
    /*00012854*/ MOVW        R5, #32773                  @ 0x8005 
    /*00012858*/ BL          0x0000000000012858          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001285c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00012860*/ B           VencGetH265Pu_x127d8
    VencGetH265Pu_x12864:
    /*00012864*/ MOV         R5, #65024                  @ 0xfe00 
    /*00012868*/ MOVT        R5, #65535                  @ 0xffff 
    /*0001286c*/ B           VencGetH265Pu_x127d8
    /*00012870*/ ANDEQ       R0, R0, R0, LSR #17 
FUNC_END VencGetH265Pu


FUNC_BEGIN VencSetH265Tu
    /*00012874*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00012878*/ SUBS        R6, R1, #0 
    /*0001287c*/ SUB         SP, SP, #12 
    /*00012880*/ MOV         R4, R0 
    /*00012884*/ BEQ         VencSetH265Tu_x12950
    VencSetH265Tu_x12888:
    /*00012888*/ CMP         R4, #0 
    /*0001288c*/ BLT         VencSetH265Tu_x12934
    /*00012890*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00012894*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00012898*/ LDR         R3, [R3] 
    /*0001289c*/ CMP         R4, R3 
    /*000128a0*/ BCS         VencSetH265Tu_x12934
    VencSetH265Tu_x128a4:
    /*000128a4*/ MOVW        R5, #36240                  @ 0x8d90 
    /*000128a8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000128ac*/ MUL         R5, R5, R4 
    /*000128b0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000128b4*/ LDR         R8, [R3] 
    /*000128b8*/ ADD         R9, R8, R5 
    /*000128bc*/ ADD         R7, R9, #12416              @ 0x3080 
    /*000128c0*/ ADD         R7, R7, #16 
    /*000128c4*/ MOV         R0, R7 
    /*000128c8*/ BL          0x00000000000128C8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000128cc*/ CMP         R0, #0 
    /*000128d0*/ BNE         VencSetH265Tu_x129d0
    /*000128d4*/ LDR         R3, [R8, R5] 
    /*000128d8*/ CMP         R3, #1 
    /*000128dc*/ BNE         VencSetH265Tu_x12998
    /*000128e0*/ LDR         R3, [R9, #4] 
    /*000128e4*/ MOVW        R2, #265                    @ 0x109 
    /*000128e8*/ CMP         R3, R2 
    /*000128ec*/ BNE         VencSetH265Tu_x12960
    /*000128f0*/ MOV         R0, #13 
    /*000128f4*/ BL          0x00000000000128F4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000128f8*/ MOV         R1, R6 
    /*000128fc*/ LDR         R3, [R0, #76]               @ 0x4c 
    /*00012900*/ MOV         R0, R4 
    /*00012904*/ BLX         R3 
    /*00012908*/ MOV         R5, R0 
    /*0001290c*/ MOV         R0, R7 
    /*00012910*/ BL          0x0000000000012910          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012914*/ CMP         R5, #0 
    /*00012918*/ BEQ         VencSetH265Tu_x12944
    /*0001291c*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00012920*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00012924*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00012928*/ MOV         R0, R5 
    /*0001292c*/ ADD         SP, SP, #12 
    /*00012930*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH265Tu_x12934:
    /*00012934*/ MOV         R0, R4 
    /*00012938*/ BL          0x0000000000000304 
    /*0001293c*/ SUBS        R5, R0, #0 
    /*00012940*/ BEQ         VencSetH265Tu_x128a4
    VencSetH265Tu_x12944:
    /*00012944*/ MOV         R0, R5 
    /*00012948*/ ADD         SP, SP, #12 
    /*0001294c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH265Tu_x12950:
    /*00012950*/ BL          0x00000000000002C8 
    /*00012954*/ SUBS        R5, R0, #0 
    /*00012958*/ BNE         VencSetH265Tu_x12944
    /*0001295c*/ B           VencSetH265Tu_x12888
    VencSetH265Tu_x12960:
    /*00012960*/ STR         R3, [SP, #4] 
    /*00012964*/ MOV         R1, #8 
    /*00012968*/ MOVW        R3, #10027                  @ 0x272b 
    /*0001296c*/ MOVW        R2, #0                      @ .LC387 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c58] 
    /*00012970*/ STR         R3, [SP] 
    /*00012974*/ MOVT        R2, #0                      @ .LC387 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c58] 
    /*00012978*/ LDR         R3, [PC, #92]               @ 0x00000000000129dc 
    /*0001297c*/ MOV         R0, #3 
    /*00012980*/ BL          0x0000000000012980          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012984*/ MOV         R0, R7 
    /*00012988*/ MOVW        R5, #32776                  @ 0x8008 
    /*0001298c*/ BL          0x000000000001298C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012990*/ MOVT        R5, #40968                  @ 0xa008 
    /*00012994*/ B           VencSetH265Tu_x12944
    VencSetH265Tu_x12998:
    /*00012998*/ MOVW        R3, #10020                  @ 0x2724 
    /*0001299c*/ MOV         R1, #8 
    /*000129a0*/ STR         R3, [SP] 
    /*000129a4*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*000129a8*/ LDR         R3, [PC, #44]               @ 0x00000000000129dc 
    /*000129ac*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*000129b0*/ STR         R4, [SP, #4] 
    /*000129b4*/ MOV         R0, #3 
    /*000129b8*/ BL          0x00000000000129B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000129bc*/ MOV         R0, R7 
    /*000129c0*/ MOVW        R5, #32773                  @ 0x8005 
    /*000129c4*/ BL          0x00000000000129C4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000129c8*/ MOVT        R5, #40968                  @ 0xa008 
    /*000129cc*/ B           VencSetH265Tu_x12944
    VencSetH265Tu_x129d0:
    /*000129d0*/ MOV         R5, #65024                  @ 0xfe00 
    /*000129d4*/ MOVT        R5, #65535                  @ 0xffff 
    /*000129d8*/ B           VencSetH265Tu_x12944
    /*000129dc*/ @           <UNDEFINED> instruction: 0x000008b0 
FUNC_END VencSetH265Tu


FUNC_BEGIN VencGetH265Tu
    /*000129e0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000129e4*/ SUBS        R6, R1, #0 
    /*000129e8*/ SUB         SP, SP, #12 
    /*000129ec*/ MOV         R4, R0 
    /*000129f0*/ BEQ         VencGetH265Tu_x12abc
    VencGetH265Tu_x129f4:
    /*000129f4*/ CMP         R4, #0 
    /*000129f8*/ BLT         VencGetH265Tu_x12aa0
    /*000129fc*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00012a00*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00012a04*/ LDR         R3, [R3] 
    /*00012a08*/ CMP         R4, R3 
    /*00012a0c*/ BCS         VencGetH265Tu_x12aa0
    VencGetH265Tu_x12a10:
    /*00012a10*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00012a14*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00012a18*/ MUL         R5, R5, R4 
    /*00012a1c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00012a20*/ LDR         R8, [R3] 
    /*00012a24*/ ADD         R9, R8, R5 
    /*00012a28*/ ADD         R7, R9, #12416              @ 0x3080 
    /*00012a2c*/ ADD         R7, R7, #16 
    /*00012a30*/ MOV         R0, R7 
    /*00012a34*/ BL          0x0000000000012A34          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00012a38*/ CMP         R0, #0 
    /*00012a3c*/ BNE         VencGetH265Tu_x12b3c
    /*00012a40*/ LDR         R3, [R8, R5] 
    /*00012a44*/ CMP         R3, #1 
    /*00012a48*/ BNE         VencGetH265Tu_x12b04
    /*00012a4c*/ LDR         R3, [R9, #4] 
    /*00012a50*/ MOVW        R2, #265                    @ 0x109 
    /*00012a54*/ CMP         R3, R2 
    /*00012a58*/ BNE         VencGetH265Tu_x12acc
    /*00012a5c*/ MOV         R0, #13 
    /*00012a60*/ BL          0x0000000000012A60          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00012a64*/ MOV         R1, R6 
    /*00012a68*/ LDR         R3, [R0, #80]               @ 0x50 
    /*00012a6c*/ MOV         R0, R4 
    /*00012a70*/ BLX         R3 
    /*00012a74*/ MOV         R5, R0 
    /*00012a78*/ MOV         R0, R7 
    /*00012a7c*/ BL          0x0000000000012A7C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012a80*/ CMP         R5, #0 
    /*00012a84*/ BEQ         VencGetH265Tu_x12ab0
    /*00012a88*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00012a8c*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00012a90*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00012a94*/ MOV         R0, R5 
    /*00012a98*/ ADD         SP, SP, #12 
    /*00012a9c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH265Tu_x12aa0:
    /*00012aa0*/ MOV         R0, R4 
    /*00012aa4*/ BL          0x0000000000000304 
    /*00012aa8*/ SUBS        R5, R0, #0 
    /*00012aac*/ BEQ         VencGetH265Tu_x12a10
    VencGetH265Tu_x12ab0:
    /*00012ab0*/ MOV         R0, R5 
    /*00012ab4*/ ADD         SP, SP, #12 
    /*00012ab8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH265Tu_x12abc:
    /*00012abc*/ BL          0x00000000000002C8 
    /*00012ac0*/ SUBS        R5, R0, #0 
    /*00012ac4*/ BNE         VencGetH265Tu_x12ab0
    /*00012ac8*/ B           VencGetH265Tu_x129f4
    VencGetH265Tu_x12acc:
    /*00012acc*/ STR         R3, [SP, #4] 
    /*00012ad0*/ MOV         R1, #8 
    /*00012ad4*/ MOVW        R3, #10061                  @ 0x274d 
    /*00012ad8*/ MOVW        R2, #0                      @ .LC387 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c58] 
    /*00012adc*/ STR         R3, [SP] 
    /*00012ae0*/ MOVT        R2, #0                      @ .LC387 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c58] 
    /*00012ae4*/ LDR         R3, [PC, #92]               @ 0x0000000000012b48 
    /*00012ae8*/ MOV         R0, #3 
    /*00012aec*/ BL          0x0000000000012AEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012af0*/ MOV         R0, R7 
    /*00012af4*/ MOVW        R5, #32776                  @ 0x8008 
    /*00012af8*/ BL          0x0000000000012AF8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012afc*/ MOVT        R5, #40968                  @ 0xa008 
    /*00012b00*/ B           VencGetH265Tu_x12ab0
    VencGetH265Tu_x12b04:
    /*00012b04*/ MOVW        R3, #10054                  @ 0x2746 
    /*00012b08*/ MOV         R1, #8 
    /*00012b0c*/ STR         R3, [SP] 
    /*00012b10*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00012b14*/ LDR         R3, [PC, #44]               @ 0x0000000000012b48 
    /*00012b18*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00012b1c*/ STR         R4, [SP, #4] 
    /*00012b20*/ MOV         R0, #3 
    /*00012b24*/ BL          0x0000000000012B24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012b28*/ MOV         R0, R7 
    /*00012b2c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00012b30*/ BL          0x0000000000012B30          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012b34*/ MOVT        R5, #40968                  @ 0xa008 
    /*00012b38*/ B           VencGetH265Tu_x12ab0
    VencGetH265Tu_x12b3c:
    /*00012b3c*/ MOV         R5, #65024                  @ 0xfe00 
    /*00012b40*/ MOVT        R5, #65535                  @ 0xffff 
    /*00012b44*/ B           VencGetH265Tu_x12ab0
    /*00012b48*/ ANDEQ       R0, R0, R0, ASR #17 
FUNC_END VencGetH265Tu


FUNC_BEGIN VencSetH265Entropy
    /*00012b4c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00012b50*/ SUBS        R6, R1, #0 
    /*00012b54*/ SUB         SP, SP, #12 
    /*00012b58*/ MOV         R4, R0 
    /*00012b5c*/ BEQ         VencSetH265Entropy_x12c28
    VencSetH265Entropy_x12b60:
    /*00012b60*/ CMP         R4, #0 
    /*00012b64*/ BLT         VencSetH265Entropy_x12c0c
    /*00012b68*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00012b6c*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00012b70*/ LDR         R3, [R3] 
    /*00012b74*/ CMP         R4, R3 
    /*00012b78*/ BCS         VencSetH265Entropy_x12c0c
    VencSetH265Entropy_x12b7c:
    /*00012b7c*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00012b80*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00012b84*/ MUL         R5, R5, R4 
    /*00012b88*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00012b8c*/ LDR         R8, [R3] 
    /*00012b90*/ ADD         R9, R8, R5 
    /*00012b94*/ ADD         R7, R9, #12416              @ 0x3080 
    /*00012b98*/ ADD         R7, R7, #16 
    /*00012b9c*/ MOV         R0, R7 
    /*00012ba0*/ BL          0x0000000000012BA0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00012ba4*/ CMP         R0, #0 
    /*00012ba8*/ BNE         VencSetH265Entropy_x12ca8
    /*00012bac*/ LDR         R3, [R8, R5] 
    /*00012bb0*/ CMP         R3, #1 
    /*00012bb4*/ BNE         VencSetH265Entropy_x12c70
    /*00012bb8*/ LDR         R3, [R9, #4] 
    /*00012bbc*/ MOVW        R2, #265                    @ 0x109 
    /*00012bc0*/ CMP         R3, R2 
    /*00012bc4*/ BNE         VencSetH265Entropy_x12c38
    /*00012bc8*/ MOV         R0, #13 
    /*00012bcc*/ BL          0x0000000000012BCC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00012bd0*/ MOV         R1, R6 
    /*00012bd4*/ LDR         R3, [R0, #84]               @ 0x54 
    /*00012bd8*/ MOV         R0, R4 
    /*00012bdc*/ BLX         R3 
    /*00012be0*/ MOV         R5, R0 
    /*00012be4*/ MOV         R0, R7 
    /*00012be8*/ BL          0x0000000000012BE8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012bec*/ CMP         R5, #0 
    /*00012bf0*/ BEQ         VencSetH265Entropy_x12c1c
    /*00012bf4*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00012bf8*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00012bfc*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00012c00*/ MOV         R0, R5 
    /*00012c04*/ ADD         SP, SP, #12 
    /*00012c08*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH265Entropy_x12c0c:
    /*00012c0c*/ MOV         R0, R4 
    /*00012c10*/ BL          0x0000000000000304 
    /*00012c14*/ SUBS        R5, R0, #0 
    /*00012c18*/ BEQ         VencSetH265Entropy_x12b7c
    VencSetH265Entropy_x12c1c:
    /*00012c1c*/ MOV         R0, R5 
    /*00012c20*/ ADD         SP, SP, #12 
    /*00012c24*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH265Entropy_x12c28:
    /*00012c28*/ BL          0x00000000000002C8 
    /*00012c2c*/ SUBS        R5, R0, #0 
    /*00012c30*/ BNE         VencSetH265Entropy_x12c1c
    /*00012c34*/ B           VencSetH265Entropy_x12b60
    VencSetH265Entropy_x12c38:
    /*00012c38*/ STR         R3, [SP, #4] 
    /*00012c3c*/ MOV         R1, #8 
    /*00012c40*/ MOVW        R3, #10096                  @ 0x2770 
    /*00012c44*/ MOVW        R2, #0                      @ .LC387 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c58] 
    /*00012c48*/ STR         R3, [SP] 
    /*00012c4c*/ MOVT        R2, #0                      @ .LC387 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c58] 
    /*00012c50*/ LDR         R3, [PC, #92]               @ 0x0000000000012cb4 
    /*00012c54*/ MOV         R0, #3 
    /*00012c58*/ BL          0x0000000000012C58          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012c5c*/ MOV         R0, R7 
    /*00012c60*/ MOVW        R5, #32776                  @ 0x8008 
    /*00012c64*/ BL          0x0000000000012C64          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012c68*/ MOVT        R5, #40968                  @ 0xa008 
    /*00012c6c*/ B           VencSetH265Entropy_x12c1c
    VencSetH265Entropy_x12c70:
    /*00012c70*/ MOVW        R3, #10089                  @ 0x2769 
    /*00012c74*/ MOV         R1, #8 
    /*00012c78*/ STR         R3, [SP] 
    /*00012c7c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00012c80*/ LDR         R3, [PC, #44]               @ 0x0000000000012cb4 
    /*00012c84*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00012c88*/ STR         R4, [SP, #4] 
    /*00012c8c*/ MOV         R0, #3 
    /*00012c90*/ BL          0x0000000000012C90          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012c94*/ MOV         R0, R7 
    /*00012c98*/ MOVW        R5, #32773                  @ 0x8005 
    /*00012c9c*/ BL          0x0000000000012C9C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012ca0*/ MOVT        R5, #40968                  @ 0xa008 
    /*00012ca4*/ B           VencSetH265Entropy_x12c1c
    VencSetH265Entropy_x12ca8:
    /*00012ca8*/ MOV         R5, #65024                  @ 0xfe00 
    /*00012cac*/ MOVT        R5, #65535                  @ 0xffff 
    /*00012cb0*/ B           VencSetH265Entropy_x12c1c
    /*00012cb4*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VencSetH265Entropy


FUNC_BEGIN VencGetH265Entropy
    /*00012cb8*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00012cbc*/ SUBS        R6, R1, #0 
    /*00012cc0*/ SUB         SP, SP, #12 
    /*00012cc4*/ MOV         R4, R0 
    /*00012cc8*/ BEQ         VencGetH265Entropy_x12d94
    VencGetH265Entropy_x12ccc:
    /*00012ccc*/ CMP         R4, #0 
    /*00012cd0*/ BLT         VencGetH265Entropy_x12d78
    /*00012cd4*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00012cd8*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00012cdc*/ LDR         R3, [R3] 
    /*00012ce0*/ CMP         R4, R3 
    /*00012ce4*/ BCS         VencGetH265Entropy_x12d78
    VencGetH265Entropy_x12ce8:
    /*00012ce8*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00012cec*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00012cf0*/ MUL         R5, R5, R4 
    /*00012cf4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00012cf8*/ LDR         R8, [R3] 
    /*00012cfc*/ ADD         R9, R8, R5 
    /*00012d00*/ ADD         R7, R9, #12416              @ 0x3080 
    /*00012d04*/ ADD         R7, R7, #16 
    /*00012d08*/ MOV         R0, R7 
    /*00012d0c*/ BL          0x0000000000012D0C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00012d10*/ CMP         R0, #0 
    /*00012d14*/ BNE         VencGetH265Entropy_x12e14
    /*00012d18*/ LDR         R3, [R8, R5] 
    /*00012d1c*/ CMP         R3, #1 
    /*00012d20*/ BNE         VencGetH265Entropy_x12ddc
    /*00012d24*/ LDR         R3, [R9, #4] 
    /*00012d28*/ MOVW        R2, #265                    @ 0x109 
    /*00012d2c*/ CMP         R3, R2 
    /*00012d30*/ BNE         VencGetH265Entropy_x12da4
    /*00012d34*/ MOV         R0, #13 
    /*00012d38*/ BL          0x0000000000012D38          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00012d3c*/ MOV         R1, R6 
    /*00012d40*/ LDR         R3, [R0, #88]               @ 0x58 
    /*00012d44*/ MOV         R0, R4 
    /*00012d48*/ BLX         R3 
    /*00012d4c*/ MOV         R5, R0 
    /*00012d50*/ MOV         R0, R7 
    /*00012d54*/ BL          0x0000000000012D54          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012d58*/ CMP         R5, #0 
    /*00012d5c*/ BEQ         VencGetH265Entropy_x12d88
    /*00012d60*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00012d64*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00012d68*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00012d6c*/ MOV         R0, R5 
    /*00012d70*/ ADD         SP, SP, #12 
    /*00012d74*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH265Entropy_x12d78:
    /*00012d78*/ MOV         R0, R4 
    /*00012d7c*/ BL          0x0000000000000304 
    /*00012d80*/ SUBS        R5, R0, #0 
    /*00012d84*/ BEQ         VencGetH265Entropy_x12ce8
    VencGetH265Entropy_x12d88:
    /*00012d88*/ MOV         R0, R5 
    /*00012d8c*/ ADD         SP, SP, #12 
    /*00012d90*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH265Entropy_x12d94:
    /*00012d94*/ BL          0x00000000000002C8 
    /*00012d98*/ SUBS        R5, R0, #0 
    /*00012d9c*/ BNE         VencGetH265Entropy_x12d88
    /*00012da0*/ B           VencGetH265Entropy_x12ccc
    VencGetH265Entropy_x12da4:
    /*00012da4*/ STR         R3, [SP, #4] 
    /*00012da8*/ MOV         R1, #8 
    /*00012dac*/ MOVW        R3, #10129                  @ 0x2791 
    /*00012db0*/ MOVW        R2, #0                      @ .LC387 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c58] 
    /*00012db4*/ STR         R3, [SP] 
    /*00012db8*/ MOVT        R2, #0                      @ .LC387 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c58] 
    /*00012dbc*/ LDR         R3, [PC, #92]               @ 0x0000000000012e20 
    /*00012dc0*/ MOV         R0, #3 
    /*00012dc4*/ BL          0x0000000000012DC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012dc8*/ MOV         R0, R7 
    /*00012dcc*/ MOVW        R5, #32776                  @ 0x8008 
    /*00012dd0*/ BL          0x0000000000012DD0          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012dd4*/ MOVT        R5, #40968                  @ 0xa008 
    /*00012dd8*/ B           VencGetH265Entropy_x12d88
    VencGetH265Entropy_x12ddc:
    /*00012ddc*/ MOVW        R3, #10122                  @ 0x278a 
    /*00012de0*/ MOV         R1, #8 
    /*00012de4*/ STR         R3, [SP] 
    /*00012de8*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00012dec*/ LDR         R3, [PC, #44]               @ 0x0000000000012e20 
    /*00012df0*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00012df4*/ STR         R4, [SP, #4] 
    /*00012df8*/ MOV         R0, #3 
    /*00012dfc*/ BL          0x0000000000012DFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012e00*/ MOV         R0, R7 
    /*00012e04*/ MOVW        R5, #32773                  @ 0x8005 
    /*00012e08*/ BL          0x0000000000012E08          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012e0c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00012e10*/ B           VencGetH265Entropy_x12d88
    VencGetH265Entropy_x12e14:
    /*00012e14*/ MOV         R5, #65024                  @ 0xfe00 
    /*00012e18*/ MOVT        R5, #65535                  @ 0xffff 
    /*00012e1c*/ B           VencGetH265Entropy_x12d88
    /*00012e20*/ ANDEQ       R0, R0, R4, ROR #17 
FUNC_END VencGetH265Entropy


FUNC_BEGIN VencSetH265Dblk
    /*00012e24*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00012e28*/ SUBS        R6, R1, #0 
    /*00012e2c*/ SUB         SP, SP, #12 
    /*00012e30*/ MOV         R4, R0 
    /*00012e34*/ BEQ         VencSetH265Dblk_x12f00
    VencSetH265Dblk_x12e38:
    /*00012e38*/ CMP         R4, #0 
    /*00012e3c*/ BLT         VencSetH265Dblk_x12ee4
    /*00012e40*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00012e44*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00012e48*/ LDR         R3, [R3] 
    /*00012e4c*/ CMP         R4, R3 
    /*00012e50*/ BCS         VencSetH265Dblk_x12ee4
    VencSetH265Dblk_x12e54:
    /*00012e54*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00012e58*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00012e5c*/ MUL         R5, R5, R4 
    /*00012e60*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00012e64*/ LDR         R8, [R3] 
    /*00012e68*/ ADD         R9, R8, R5 
    /*00012e6c*/ ADD         R7, R9, #12416              @ 0x3080 
    /*00012e70*/ ADD         R7, R7, #16 
    /*00012e74*/ MOV         R0, R7 
    /*00012e78*/ BL          0x0000000000012E78          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00012e7c*/ CMP         R0, #0 
    /*00012e80*/ BNE         VencSetH265Dblk_x12f80
    /*00012e84*/ LDR         R3, [R8, R5] 
    /*00012e88*/ CMP         R3, #1 
    /*00012e8c*/ BNE         VencSetH265Dblk_x12f48
    /*00012e90*/ LDR         R3, [R9, #4] 
    /*00012e94*/ MOVW        R2, #265                    @ 0x109 
    /*00012e98*/ CMP         R3, R2 
    /*00012e9c*/ BNE         VencSetH265Dblk_x12f10
    /*00012ea0*/ MOV         R0, #13 
    /*00012ea4*/ BL          0x0000000000012EA4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00012ea8*/ MOV         R1, R6 
    /*00012eac*/ LDR         R3, [R0, #92]               @ 0x5c 
    /*00012eb0*/ MOV         R0, R4 
    /*00012eb4*/ BLX         R3 
    /*00012eb8*/ MOV         R5, R0 
    /*00012ebc*/ MOV         R0, R7 
    /*00012ec0*/ BL          0x0000000000012EC0          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012ec4*/ CMP         R5, #0 
    /*00012ec8*/ BEQ         VencSetH265Dblk_x12ef4
    /*00012ecc*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00012ed0*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00012ed4*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00012ed8*/ MOV         R0, R5 
    /*00012edc*/ ADD         SP, SP, #12 
    /*00012ee0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH265Dblk_x12ee4:
    /*00012ee4*/ MOV         R0, R4 
    /*00012ee8*/ BL          0x0000000000000304 
    /*00012eec*/ SUBS        R5, R0, #0 
    /*00012ef0*/ BEQ         VencSetH265Dblk_x12e54
    VencSetH265Dblk_x12ef4:
    /*00012ef4*/ MOV         R0, R5 
    /*00012ef8*/ ADD         SP, SP, #12 
    /*00012efc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH265Dblk_x12f00:
    /*00012f00*/ BL          0x00000000000002C8 
    /*00012f04*/ SUBS        R5, R0, #0 
    /*00012f08*/ BNE         VencSetH265Dblk_x12ef4
    /*00012f0c*/ B           VencSetH265Dblk_x12e38
    VencSetH265Dblk_x12f10:
    /*00012f10*/ STR         R3, [SP, #4] 
    /*00012f14*/ MOV         R1, #8 
    /*00012f18*/ MOVW        R3, #10163                  @ 0x27b3 
    /*00012f1c*/ MOVW        R2, #0                      @ .LC387 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c58] 
    /*00012f20*/ STR         R3, [SP] 
    /*00012f24*/ MOVT        R2, #0                      @ .LC387 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c58] 
    /*00012f28*/ LDR         R3, [PC, #92]               @ 0x0000000000012f8c 
    /*00012f2c*/ MOV         R0, #3 
    /*00012f30*/ BL          0x0000000000012F30          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012f34*/ MOV         R0, R7 
    /*00012f38*/ MOVW        R5, #32776                  @ 0x8008 
    /*00012f3c*/ BL          0x0000000000012F3C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012f40*/ MOVT        R5, #40968                  @ 0xa008 
    /*00012f44*/ B           VencSetH265Dblk_x12ef4
    VencSetH265Dblk_x12f48:
    /*00012f48*/ MOVW        R3, #10156                  @ 0x27ac 
    /*00012f4c*/ MOV         R1, #8 
    /*00012f50*/ STR         R3, [SP] 
    /*00012f54*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00012f58*/ LDR         R3, [PC, #44]               @ 0x0000000000012f8c 
    /*00012f5c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00012f60*/ STR         R4, [SP, #4] 
    /*00012f64*/ MOV         R0, #3 
    /*00012f68*/ BL          0x0000000000012F68          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012f6c*/ MOV         R0, R7 
    /*00012f70*/ MOVW        R5, #32773                  @ 0x8005 
    /*00012f74*/ BL          0x0000000000012F74          @ osal_up [R_ARM_CALL: +0x0] 
    /*00012f78*/ MOVT        R5, #40968                  @ 0xa008 
    /*00012f7c*/ B           VencSetH265Dblk_x12ef4
    VencSetH265Dblk_x12f80:
    /*00012f80*/ MOV         R5, #65024                  @ 0xfe00 
    /*00012f84*/ MOVT        R5, #65535                  @ 0xffff 
    /*00012f88*/ B           VencSetH265Dblk_x12ef4
    /*00012f8c*/ STRDEQ      R0, [R0], -R8 
FUNC_END VencSetH265Dblk


FUNC_BEGIN VencGetH265Dblk
    /*00012f90*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00012f94*/ SUBS        R6, R1, #0 
    /*00012f98*/ SUB         SP, SP, #12 
    /*00012f9c*/ MOV         R4, R0 
    /*00012fa0*/ BEQ         VencGetH265Dblk_x1306c
    VencGetH265Dblk_x12fa4:
    /*00012fa4*/ CMP         R4, #0 
    /*00012fa8*/ BLT         VencGetH265Dblk_x13050
    /*00012fac*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00012fb0*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00012fb4*/ LDR         R3, [R3] 
    /*00012fb8*/ CMP         R4, R3 
    /*00012fbc*/ BCS         VencGetH265Dblk_x13050
    VencGetH265Dblk_x12fc0:
    /*00012fc0*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00012fc4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00012fc8*/ MUL         R5, R5, R4 
    /*00012fcc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00012fd0*/ LDR         R8, [R3] 
    /*00012fd4*/ ADD         R9, R8, R5 
    /*00012fd8*/ ADD         R7, R9, #12416              @ 0x3080 
    /*00012fdc*/ ADD         R7, R7, #16 
    /*00012fe0*/ MOV         R0, R7 
    /*00012fe4*/ BL          0x0000000000012FE4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00012fe8*/ CMP         R0, #0 
    /*00012fec*/ BNE         VencGetH265Dblk_x130ec
    /*00012ff0*/ LDR         R3, [R8, R5] 
    /*00012ff4*/ CMP         R3, #1 
    /*00012ff8*/ BNE         VencGetH265Dblk_x130b4
    /*00012ffc*/ LDR         R3, [R9, #4] 
    /*00013000*/ MOVW        R2, #265                    @ 0x109 
    /*00013004*/ CMP         R3, R2 
    /*00013008*/ BNE         VencGetH265Dblk_x1307c
    /*0001300c*/ MOV         R0, #13 
    /*00013010*/ BL          0x0000000000013010          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013014*/ MOV         R1, R6 
    /*00013018*/ LDR         R3, [R0, #96]               @ 0x60 
    /*0001301c*/ MOV         R0, R4 
    /*00013020*/ BLX         R3 
    /*00013024*/ MOV         R5, R0 
    /*00013028*/ MOV         R0, R7 
    /*0001302c*/ BL          0x000000000001302C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00013030*/ CMP         R5, #0 
    /*00013034*/ BEQ         VencGetH265Dblk_x13060
    /*00013038*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*0001303c*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00013040*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00013044*/ MOV         R0, R5 
    /*00013048*/ ADD         SP, SP, #12 
    /*0001304c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH265Dblk_x13050:
    /*00013050*/ MOV         R0, R4 
    /*00013054*/ BL          0x0000000000000304 
    /*00013058*/ SUBS        R5, R0, #0 
    /*0001305c*/ BEQ         VencGetH265Dblk_x12fc0
    VencGetH265Dblk_x13060:
    /*00013060*/ MOV         R0, R5 
    /*00013064*/ ADD         SP, SP, #12 
    /*00013068*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH265Dblk_x1306c:
    /*0001306c*/ BL          0x00000000000002C8 
    /*00013070*/ SUBS        R5, R0, #0 
    /*00013074*/ BNE         VencGetH265Dblk_x13060
    /*00013078*/ B           VencGetH265Dblk_x12fa4
    VencGetH265Dblk_x1307c:
    /*0001307c*/ STR         R3, [SP, #4] 
    /*00013080*/ MOV         R1, #8 
    /*00013084*/ MOVW        R3, #10196                  @ 0x27d4 
    /*00013088*/ MOVW        R2, #0                      @ .LC387 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c58] 
    /*0001308c*/ STR         R3, [SP] 
    /*00013090*/ MOVT        R2, #0                      @ .LC387 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c58] 
    /*00013094*/ LDR         R3, [PC, #92]               @ 0x00000000000130f8 
    /*00013098*/ MOV         R0, #3 
    /*0001309c*/ BL          0x000000000001309C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000130a0*/ MOV         R0, R7 
    /*000130a4*/ MOVW        R5, #32776                  @ 0x8008 
    /*000130a8*/ BL          0x00000000000130A8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000130ac*/ MOVT        R5, #40968                  @ 0xa008 
    /*000130b0*/ B           VencGetH265Dblk_x13060
    VencGetH265Dblk_x130b4:
    /*000130b4*/ MOVW        R3, #10189                  @ 0x27cd 
    /*000130b8*/ MOV         R1, #8 
    /*000130bc*/ STR         R3, [SP] 
    /*000130c0*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*000130c4*/ LDR         R3, [PC, #44]               @ 0x00000000000130f8 
    /*000130c8*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*000130cc*/ STR         R4, [SP, #4] 
    /*000130d0*/ MOV         R0, #3 
    /*000130d4*/ BL          0x00000000000130D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000130d8*/ MOV         R0, R7 
    /*000130dc*/ MOVW        R5, #32773                  @ 0x8005 
    /*000130e0*/ BL          0x00000000000130E0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000130e4*/ MOVT        R5, #40968                  @ 0xa008 
    /*000130e8*/ B           VencGetH265Dblk_x13060
    VencGetH265Dblk_x130ec:
    /*000130ec*/ MOV         R5, #65024                  @ 0xfe00 
    /*000130f0*/ MOVT        R5, #65535                  @ 0xffff 
    /*000130f4*/ B           VencGetH265Dblk_x13060
    /*000130f8*/ ANDEQ       R0, R0, R8, LSL #18 
FUNC_END VencGetH265Dblk


FUNC_BEGIN VencSetH265Sao
    /*000130fc*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00013100*/ SUBS        R6, R1, #0 
    /*00013104*/ SUB         SP, SP, #12 
    /*00013108*/ MOV         R4, R0 
    /*0001310c*/ BEQ         VencSetH265Sao_x131d8
    VencSetH265Sao_x13110:
    /*00013110*/ CMP         R4, #0 
    /*00013114*/ BLT         VencSetH265Sao_x131bc
    /*00013118*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0001311c*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00013120*/ LDR         R3, [R3] 
    /*00013124*/ CMP         R4, R3 
    /*00013128*/ BCS         VencSetH265Sao_x131bc
    VencSetH265Sao_x1312c:
    /*0001312c*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00013130*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00013134*/ MUL         R5, R5, R4 
    /*00013138*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001313c*/ LDR         R8, [R3] 
    /*00013140*/ ADD         R9, R8, R5 
    /*00013144*/ ADD         R7, R9, #12416              @ 0x3080 
    /*00013148*/ ADD         R7, R7, #16 
    /*0001314c*/ MOV         R0, R7 
    /*00013150*/ BL          0x0000000000013150          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00013154*/ CMP         R0, #0 
    /*00013158*/ BNE         VencSetH265Sao_x13258
    /*0001315c*/ LDR         R3, [R8, R5] 
    /*00013160*/ CMP         R3, #1 
    /*00013164*/ BNE         VencSetH265Sao_x13220
    /*00013168*/ LDR         R3, [R9, #4] 
    /*0001316c*/ MOVW        R2, #265                    @ 0x109 
    /*00013170*/ CMP         R3, R2 
    /*00013174*/ BNE         VencSetH265Sao_x131e8
    /*00013178*/ MOV         R0, #13 
    /*0001317c*/ BL          0x000000000001317C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013180*/ MOV         R1, R6 
    /*00013184*/ LDR         R3, [R0, #100]              @ 0x64 
    /*00013188*/ MOV         R0, R4 
    /*0001318c*/ BLX         R3 
    /*00013190*/ MOV         R5, R0 
    /*00013194*/ MOV         R0, R7 
    /*00013198*/ BL          0x0000000000013198          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001319c*/ CMP         R5, #0 
    /*000131a0*/ BEQ         VencSetH265Sao_x131cc
    /*000131a4*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*000131a8*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*000131ac*/ ORR         R5, R5, #524288             @ 0x80000 
    /*000131b0*/ MOV         R0, R5 
    /*000131b4*/ ADD         SP, SP, #12 
    /*000131b8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH265Sao_x131bc:
    /*000131bc*/ MOV         R0, R4 
    /*000131c0*/ BL          0x0000000000000304 
    /*000131c4*/ SUBS        R5, R0, #0 
    /*000131c8*/ BEQ         VencSetH265Sao_x1312c
    VencSetH265Sao_x131cc:
    /*000131cc*/ MOV         R0, R5 
    /*000131d0*/ ADD         SP, SP, #12 
    /*000131d4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH265Sao_x131d8:
    /*000131d8*/ BL          0x00000000000002C8 
    /*000131dc*/ SUBS        R5, R0, #0 
    /*000131e0*/ BNE         VencSetH265Sao_x131cc
    /*000131e4*/ B           VencSetH265Sao_x13110
    VencSetH265Sao_x131e8:
    /*000131e8*/ STR         R3, [SP, #4] 
    /*000131ec*/ MOV         R1, #8 
    /*000131f0*/ MOVW        R3, #10231                  @ 0x27f7 
    /*000131f4*/ MOVW        R2, #0                      @ .LC387 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c58] 
    /*000131f8*/ STR         R3, [SP] 
    /*000131fc*/ MOVT        R2, #0                      @ .LC387 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c58] 
    /*00013200*/ LDR         R3, [PC, #92]               @ 0x0000000000013264 
    /*00013204*/ MOV         R0, #3 
    /*00013208*/ BL          0x0000000000013208          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001320c*/ MOV         R0, R7 
    /*00013210*/ MOVW        R5, #32776                  @ 0x8008 
    /*00013214*/ BL          0x0000000000013214          @ osal_up [R_ARM_CALL: +0x0] 
    /*00013218*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001321c*/ B           VencSetH265Sao_x131cc
    VencSetH265Sao_x13220:
    /*00013220*/ MOVW        R3, #10224                  @ 0x27f0 
    /*00013224*/ MOV         R1, #8 
    /*00013228*/ STR         R3, [SP] 
    /*0001322c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00013230*/ LDR         R3, [PC, #44]               @ 0x0000000000013264 
    /*00013234*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00013238*/ STR         R4, [SP, #4] 
    /*0001323c*/ MOV         R0, #3 
    /*00013240*/ BL          0x0000000000013240          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013244*/ MOV         R0, R7 
    /*00013248*/ MOVW        R5, #32773                  @ 0x8005 
    /*0001324c*/ BL          0x000000000001324C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00013250*/ MOVT        R5, #40968                  @ 0xa008 
    /*00013254*/ B           VencSetH265Sao_x131cc
    VencSetH265Sao_x13258:
    /*00013258*/ MOV         R5, #65024                  @ 0xfe00 
    /*0001325c*/ MOVT        R5, #65535                  @ 0xffff 
    /*00013260*/ B           VencSetH265Sao_x131cc
    /*00013264*/ ANDEQ       R0, R0, R8, LSL R9 
FUNC_END VencSetH265Sao


FUNC_BEGIN VencGetH265Sao
    /*00013268*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001326c*/ SUBS        R6, R1, #0 
    /*00013270*/ SUB         SP, SP, #12 
    /*00013274*/ MOV         R4, R0 
    /*00013278*/ BEQ         VencGetH265Sao_x13344
    VencGetH265Sao_x1327c:
    /*0001327c*/ CMP         R4, #0 
    /*00013280*/ BLT         VencGetH265Sao_x13328
    /*00013284*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00013288*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0001328c*/ LDR         R3, [R3] 
    /*00013290*/ CMP         R4, R3 
    /*00013294*/ BCS         VencGetH265Sao_x13328
    VencGetH265Sao_x13298:
    /*00013298*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0001329c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000132a0*/ MUL         R5, R5, R4 
    /*000132a4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000132a8*/ LDR         R8, [R3] 
    /*000132ac*/ ADD         R9, R8, R5 
    /*000132b0*/ ADD         R7, R9, #12416              @ 0x3080 
    /*000132b4*/ ADD         R7, R7, #16 
    /*000132b8*/ MOV         R0, R7 
    /*000132bc*/ BL          0x00000000000132BC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000132c0*/ CMP         R0, #0 
    /*000132c4*/ BNE         VencGetH265Sao_x133c4
    /*000132c8*/ LDR         R3, [R8, R5] 
    /*000132cc*/ CMP         R3, #1 
    /*000132d0*/ BNE         VencGetH265Sao_x1338c
    /*000132d4*/ LDR         R3, [R9, #4] 
    /*000132d8*/ MOVW        R2, #265                    @ 0x109 
    /*000132dc*/ CMP         R3, R2 
    /*000132e0*/ BNE         VencGetH265Sao_x13354
    /*000132e4*/ MOV         R0, #13 
    /*000132e8*/ BL          0x00000000000132E8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000132ec*/ MOV         R1, R6 
    /*000132f0*/ LDR         R3, [R0, #104]              @ 0x68 
    /*000132f4*/ MOV         R0, R4 
    /*000132f8*/ BLX         R3 
    /*000132fc*/ MOV         R5, R0 
    /*00013300*/ MOV         R0, R7 
    /*00013304*/ BL          0x0000000000013304          @ osal_up [R_ARM_CALL: +0x0] 
    /*00013308*/ CMP         R5, #0 
    /*0001330c*/ BEQ         VencGetH265Sao_x13338
    /*00013310*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00013314*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00013318*/ ORR         R5, R5, #524288             @ 0x80000 
    /*0001331c*/ MOV         R0, R5 
    /*00013320*/ ADD         SP, SP, #12 
    /*00013324*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH265Sao_x13328:
    /*00013328*/ MOV         R0, R4 
    /*0001332c*/ BL          0x0000000000000304 
    /*00013330*/ SUBS        R5, R0, #0 
    /*00013334*/ BEQ         VencGetH265Sao_x13298
    VencGetH265Sao_x13338:
    /*00013338*/ MOV         R0, R5 
    /*0001333c*/ ADD         SP, SP, #12 
    /*00013340*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH265Sao_x13344:
    /*00013344*/ BL          0x00000000000002C8 
    /*00013348*/ SUBS        R5, R0, #0 
    /*0001334c*/ BNE         VencGetH265Sao_x13338
    /*00013350*/ B           VencGetH265Sao_x1327c
    VencGetH265Sao_x13354:
    /*00013354*/ STR         R3, [SP, #4] 
    /*00013358*/ MOV         R1, #8 
    /*0001335c*/ MOVW        R3, #10265                  @ 0x2819 
    /*00013360*/ MOVW        R2, #0                      @ .LC387 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c58] 
    /*00013364*/ STR         R3, [SP] 
    /*00013368*/ MOVT        R2, #0                      @ .LC387 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c58] 
    /*0001336c*/ LDR         R3, [PC, #92]               @ 0x00000000000133d0 
    /*00013370*/ MOV         R0, #3 
    /*00013374*/ BL          0x0000000000013374          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013378*/ MOV         R0, R7 
    /*0001337c*/ MOVW        R5, #32776                  @ 0x8008 
    /*00013380*/ BL          0x0000000000013380          @ osal_up [R_ARM_CALL: +0x0] 
    /*00013384*/ MOVT        R5, #40968                  @ 0xa008 
    /*00013388*/ B           VencGetH265Sao_x13338
    VencGetH265Sao_x1338c:
    /*0001338c*/ MOVW        R3, #10258                  @ 0x2812 
    /*00013390*/ MOV         R1, #8 
    /*00013394*/ STR         R3, [SP] 
    /*00013398*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0001339c*/ LDR         R3, [PC, #44]               @ 0x00000000000133d0 
    /*000133a0*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*000133a4*/ STR         R4, [SP, #4] 
    /*000133a8*/ MOV         R0, #3 
    /*000133ac*/ BL          0x00000000000133AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000133b0*/ MOV         R0, R7 
    /*000133b4*/ MOVW        R5, #32773                  @ 0x8005 
    /*000133b8*/ BL          0x00000000000133B8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000133bc*/ MOVT        R5, #40968                  @ 0xa008 
    /*000133c0*/ B           VencGetH265Sao_x13338
    VencGetH265Sao_x133c4:
    /*000133c4*/ MOV         R5, #65024                  @ 0xfe00 
    /*000133c8*/ MOVT        R5, #65535                  @ 0xffff 
    /*000133cc*/ B           VencGetH265Sao_x13338
    /*000133d0*/ ANDEQ       R0, R0, R8, LSR #18 
FUNC_END VencGetH265Sao


FUNC_BEGIN VencSetH265Timing
    /*000133d4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000133d8*/ SUBS        R6, R1, #0 
    /*000133dc*/ SUB         SP, SP, #12 
    /*000133e0*/ MOV         R4, R0 
    /*000133e4*/ BEQ         VencSetH265Timing_x134b0
    VencSetH265Timing_x133e8:
    /*000133e8*/ CMP         R4, #0 
    /*000133ec*/ BLT         VencSetH265Timing_x13494
    /*000133f0*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000133f4*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000133f8*/ LDR         R3, [R3] 
    /*000133fc*/ CMP         R4, R3 
    /*00013400*/ BCS         VencSetH265Timing_x13494
    VencSetH265Timing_x13404:
    /*00013404*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00013408*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001340c*/ MUL         R5, R5, R4 
    /*00013410*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00013414*/ LDR         R8, [R3] 
    /*00013418*/ ADD         R9, R8, R5 
    /*0001341c*/ ADD         R7, R9, #12416              @ 0x3080 
    /*00013420*/ ADD         R7, R7, #16 
    /*00013424*/ MOV         R0, R7 
    /*00013428*/ BL          0x0000000000013428          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001342c*/ CMP         R0, #0 
    /*00013430*/ BNE         VencSetH265Timing_x13530
    /*00013434*/ LDR         R3, [R8, R5] 
    /*00013438*/ CMP         R3, #1 
    /*0001343c*/ BNE         VencSetH265Timing_x134f8
    /*00013440*/ LDR         R3, [R9, #4] 
    /*00013444*/ MOVW        R2, #265                    @ 0x109 
    /*00013448*/ CMP         R3, R2 
    /*0001344c*/ BNE         VencSetH265Timing_x134c0
    /*00013450*/ MOV         R0, #13 
    /*00013454*/ BL          0x0000000000013454          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013458*/ MOV         R1, R6 
    /*0001345c*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*00013460*/ MOV         R0, R4 
    /*00013464*/ BLX         R3 
    /*00013468*/ MOV         R5, R0 
    /*0001346c*/ MOV         R0, R7 
    /*00013470*/ BL          0x0000000000013470          @ osal_up [R_ARM_CALL: +0x0] 
    /*00013474*/ CMP         R5, #0 
    /*00013478*/ BEQ         VencSetH265Timing_x134a4
    /*0001347c*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00013480*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00013484*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00013488*/ MOV         R0, R5 
    /*0001348c*/ ADD         SP, SP, #12 
    /*00013490*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH265Timing_x13494:
    /*00013494*/ MOV         R0, R4 
    /*00013498*/ BL          0x0000000000000304 
    /*0001349c*/ SUBS        R5, R0, #0 
    /*000134a0*/ BEQ         VencSetH265Timing_x13404
    VencSetH265Timing_x134a4:
    /*000134a4*/ MOV         R0, R5 
    /*000134a8*/ ADD         SP, SP, #12 
    /*000134ac*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH265Timing_x134b0:
    /*000134b0*/ BL          0x00000000000002C8 
    /*000134b4*/ SUBS        R5, R0, #0 
    /*000134b8*/ BNE         VencSetH265Timing_x134a4
    /*000134bc*/ B           VencSetH265Timing_x133e8
    VencSetH265Timing_x134c0:
    /*000134c0*/ STR         R3, [SP, #4] 
    /*000134c4*/ MOV         R1, #8 
    /*000134c8*/ MOVW        R3, #10301                  @ 0x283d 
    /*000134cc*/ MOVW        R2, #0                      @ .LC387 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c58] 
    /*000134d0*/ STR         R3, [SP] 
    /*000134d4*/ MOVT        R2, #0                      @ .LC387 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c58] 
    /*000134d8*/ LDR         R3, [PC, #92]               @ 0x000000000001353c 
    /*000134dc*/ MOV         R0, #3 
    /*000134e0*/ BL          0x00000000000134E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000134e4*/ MOV         R0, R7 
    /*000134e8*/ MOVW        R5, #32776                  @ 0x8008 
    /*000134ec*/ BL          0x00000000000134EC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000134f0*/ MOVT        R5, #40968                  @ 0xa008 
    /*000134f4*/ B           VencSetH265Timing_x134a4
    VencSetH265Timing_x134f8:
    /*000134f8*/ MOVW        R3, #10294                  @ 0x2836 
    /*000134fc*/ MOV         R1, #8 
    /*00013500*/ STR         R3, [SP] 
    /*00013504*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00013508*/ LDR         R3, [PC, #44]               @ 0x000000000001353c 
    /*0001350c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00013510*/ STR         R4, [SP, #4] 
    /*00013514*/ MOV         R0, #3 
    /*00013518*/ BL          0x0000000000013518          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001351c*/ MOV         R0, R7 
    /*00013520*/ MOVW        R5, #32773                  @ 0x8005 
    /*00013524*/ BL          0x0000000000013524          @ osal_up [R_ARM_CALL: +0x0] 
    /*00013528*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001352c*/ B           VencSetH265Timing_x134a4
    VencSetH265Timing_x13530:
    /*00013530*/ MOV         R5, #65024                  @ 0xfe00 
    /*00013534*/ MOVT        R5, #65535                  @ 0xffff 
    /*00013538*/ B           VencSetH265Timing_x134a4
    /*0001353c*/ ANDEQ       R0, R0, R8, LSR R9 
FUNC_END VencSetH265Timing


FUNC_BEGIN VencGetH265Timing
    /*00013540*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00013544*/ SUBS        R6, R1, #0 
    /*00013548*/ SUB         SP, SP, #12 
    /*0001354c*/ MOV         R4, R0 
    /*00013550*/ BEQ         VencGetH265Timing_x1361c
    VencGetH265Timing_x13554:
    /*00013554*/ CMP         R4, #0 
    /*00013558*/ BLT         VencGetH265Timing_x13600
    /*0001355c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00013560*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00013564*/ LDR         R3, [R3] 
    /*00013568*/ CMP         R4, R3 
    /*0001356c*/ BCS         VencGetH265Timing_x13600
    VencGetH265Timing_x13570:
    /*00013570*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00013574*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00013578*/ MUL         R5, R5, R4 
    /*0001357c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00013580*/ LDR         R8, [R3] 
    /*00013584*/ ADD         R9, R8, R5 
    /*00013588*/ ADD         R7, R9, #12416              @ 0x3080 
    /*0001358c*/ ADD         R7, R7, #16 
    /*00013590*/ MOV         R0, R7 
    /*00013594*/ BL          0x0000000000013594          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00013598*/ CMP         R0, #0 
    /*0001359c*/ BNE         VencGetH265Timing_x1369c
    /*000135a0*/ LDR         R3, [R8, R5] 
    /*000135a4*/ CMP         R3, #1 
    /*000135a8*/ BNE         VencGetH265Timing_x13664
    /*000135ac*/ LDR         R3, [R9, #4] 
    /*000135b0*/ MOVW        R2, #265                    @ 0x109 
    /*000135b4*/ CMP         R3, R2 
    /*000135b8*/ BNE         VencGetH265Timing_x1362c
    /*000135bc*/ MOV         R0, #13 
    /*000135c0*/ BL          0x00000000000135C0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000135c4*/ MOV         R1, R6 
    /*000135c8*/ LDR         R3, [R0, #112]              @ 0x70 
    /*000135cc*/ MOV         R0, R4 
    /*000135d0*/ BLX         R3 
    /*000135d4*/ MOV         R5, R0 
    /*000135d8*/ MOV         R0, R7 
    /*000135dc*/ BL          0x00000000000135DC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000135e0*/ CMP         R5, #0 
    /*000135e4*/ BEQ         VencGetH265Timing_x13610
    /*000135e8*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*000135ec*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*000135f0*/ ORR         R5, R5, #524288             @ 0x80000 
    /*000135f4*/ MOV         R0, R5 
    /*000135f8*/ ADD         SP, SP, #12 
    /*000135fc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH265Timing_x13600:
    /*00013600*/ MOV         R0, R4 
    /*00013604*/ BL          0x0000000000000304 
    /*00013608*/ SUBS        R5, R0, #0 
    /*0001360c*/ BEQ         VencGetH265Timing_x13570
    VencGetH265Timing_x13610:
    /*00013610*/ MOV         R0, R5 
    /*00013614*/ ADD         SP, SP, #12 
    /*00013618*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH265Timing_x1361c:
    /*0001361c*/ BL          0x00000000000002C8 
    /*00013620*/ SUBS        R5, R0, #0 
    /*00013624*/ BNE         VencGetH265Timing_x13610
    /*00013628*/ B           VencGetH265Timing_x13554
    VencGetH265Timing_x1362c:
    /*0001362c*/ STR         R3, [SP, #4] 
    /*00013630*/ MOV         R1, #8 
    /*00013634*/ MOVW        R3, #10335                  @ 0x285f 
    /*00013638*/ MOVW        R2, #0                      @ .LC387 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c58] 
    /*0001363c*/ STR         R3, [SP] 
    /*00013640*/ MOVT        R2, #0                      @ .LC387 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c58] 
    /*00013644*/ LDR         R3, [PC, #92]               @ 0x00000000000136a8 
    /*00013648*/ MOV         R0, #3 
    /*0001364c*/ BL          0x000000000001364C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013650*/ MOV         R0, R7 
    /*00013654*/ MOVW        R5, #32776                  @ 0x8008 
    /*00013658*/ BL          0x0000000000013658          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001365c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00013660*/ B           VencGetH265Timing_x13610
    VencGetH265Timing_x13664:
    /*00013664*/ MOVW        R3, #10328                  @ 0x2858 
    /*00013668*/ MOV         R1, #8 
    /*0001366c*/ STR         R3, [SP] 
    /*00013670*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00013674*/ LDR         R3, [PC, #44]               @ 0x00000000000136a8 
    /*00013678*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001367c*/ STR         R4, [SP, #4] 
    /*00013680*/ MOV         R0, #3 
    /*00013684*/ BL          0x0000000000013684          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013688*/ MOV         R0, R7 
    /*0001368c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00013690*/ BL          0x0000000000013690          @ osal_up [R_ARM_CALL: +0x0] 
    /*00013694*/ MOVT        R5, #40968                  @ 0xa008 
    /*00013698*/ B           VencGetH265Timing_x13610
    VencGetH265Timing_x1369c:
    /*0001369c*/ MOV         R5, #65024                  @ 0xfe00 
    /*000136a0*/ MOVT        R5, #65535                  @ 0xffff 
    /*000136a4*/ B           VencGetH265Timing_x13610
    /*000136a8*/ ANDEQ       R0, R0, IP, ASR #18 
FUNC_END VencGetH265Timing


FUNC_BEGIN VencSetH265Vui
    /*000136ac*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000136b0*/ SUBS        R6, R1, #0 
    /*000136b4*/ SUB         SP, SP, #12 
    /*000136b8*/ MOV         R4, R0 
    /*000136bc*/ BEQ         VencSetH265Vui_x13788
    VencSetH265Vui_x136c0:
    /*000136c0*/ CMP         R4, #0 
    /*000136c4*/ BLT         VencSetH265Vui_x1376c
    /*000136c8*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000136cc*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000136d0*/ LDR         R3, [R3] 
    /*000136d4*/ CMP         R4, R3 
    /*000136d8*/ BCS         VencSetH265Vui_x1376c
    VencSetH265Vui_x136dc:
    /*000136dc*/ MOVW        R5, #36240                  @ 0x8d90 
    /*000136e0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000136e4*/ MUL         R5, R5, R4 
    /*000136e8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000136ec*/ LDR         R8, [R3] 
    /*000136f0*/ ADD         R9, R8, R5 
    /*000136f4*/ ADD         R7, R9, #12416              @ 0x3080 
    /*000136f8*/ ADD         R7, R7, #16 
    /*000136fc*/ MOV         R0, R7 
    /*00013700*/ BL          0x0000000000013700          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00013704*/ CMP         R0, #0 
    /*00013708*/ BNE         VencSetH265Vui_x13808
    /*0001370c*/ LDR         R3, [R8, R5] 
    /*00013710*/ CMP         R3, #1 
    /*00013714*/ BNE         VencSetH265Vui_x137d0
    /*00013718*/ LDR         R3, [R9, #4] 
    /*0001371c*/ MOVW        R2, #265                    @ 0x109 
    /*00013720*/ CMP         R3, R2 
    /*00013724*/ BNE         VencSetH265Vui_x13798
    /*00013728*/ MOV         R0, #13 
    /*0001372c*/ BL          0x000000000001372C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013730*/ MOV         R1, R6 
    /*00013734*/ LDR         R3, [R0, #116]              @ 0x74 
    /*00013738*/ MOV         R0, R4 
    /*0001373c*/ BLX         R3 
    /*00013740*/ MOV         R5, R0 
    /*00013744*/ MOV         R0, R7 
    /*00013748*/ BL          0x0000000000013748          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001374c*/ CMP         R5, #0 
    /*00013750*/ BEQ         VencSetH265Vui_x1377c
    /*00013754*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00013758*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*0001375c*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00013760*/ MOV         R0, R5 
    /*00013764*/ ADD         SP, SP, #12 
    /*00013768*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH265Vui_x1376c:
    /*0001376c*/ MOV         R0, R4 
    /*00013770*/ BL          0x0000000000000304 
    /*00013774*/ SUBS        R5, R0, #0 
    /*00013778*/ BEQ         VencSetH265Vui_x136dc
    VencSetH265Vui_x1377c:
    /*0001377c*/ MOV         R0, R5 
    /*00013780*/ ADD         SP, SP, #12 
    /*00013784*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetH265Vui_x13788:
    /*00013788*/ BL          0x00000000000002C8 
    /*0001378c*/ SUBS        R5, R0, #0 
    /*00013790*/ BNE         VencSetH265Vui_x1377c
    /*00013794*/ B           VencSetH265Vui_x136c0
    VencSetH265Vui_x13798:
    /*00013798*/ STR         R3, [SP, #4] 
    /*0001379c*/ MOV         R1, #8 
    /*000137a0*/ MOVW        R3, #10370                  @ 0x2882 
    /*000137a4*/ MOVW        R2, #0                      @ .LC387 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c58] 
    /*000137a8*/ STR         R3, [SP] 
    /*000137ac*/ MOVT        R2, #0                      @ .LC387 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c58] 
    /*000137b0*/ LDR         R3, [PC, #92]               @ 0x0000000000013814 
    /*000137b4*/ MOV         R0, #3 
    /*000137b8*/ BL          0x00000000000137B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000137bc*/ MOV         R0, R7 
    /*000137c0*/ MOVW        R5, #32776                  @ 0x8008 
    /*000137c4*/ BL          0x00000000000137C4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000137c8*/ MOVT        R5, #40968                  @ 0xa008 
    /*000137cc*/ B           VencSetH265Vui_x1377c
    VencSetH265Vui_x137d0:
    /*000137d0*/ MOVW        R3, #10363                  @ 0x287b 
    /*000137d4*/ MOV         R1, #8 
    /*000137d8*/ STR         R3, [SP] 
    /*000137dc*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*000137e0*/ LDR         R3, [PC, #44]               @ 0x0000000000013814 
    /*000137e4*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*000137e8*/ STR         R4, [SP, #4] 
    /*000137ec*/ MOV         R0, #3 
    /*000137f0*/ BL          0x00000000000137F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000137f4*/ MOV         R0, R7 
    /*000137f8*/ MOVW        R5, #32773                  @ 0x8005 
    /*000137fc*/ BL          0x00000000000137FC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00013800*/ MOVT        R5, #40968                  @ 0xa008 
    /*00013804*/ B           VencSetH265Vui_x1377c
    VencSetH265Vui_x13808:
    /*00013808*/ MOV         R5, #65024                  @ 0xfe00 
    /*0001380c*/ MOVT        R5, #65535                  @ 0xffff 
    /*00013810*/ B           VencSetH265Vui_x1377c
    /*00013814*/ ANDEQ       R0, R0, R0, ROR #18 
FUNC_END VencSetH265Vui


FUNC_BEGIN VencGetH265Vui
    /*00013818*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001381c*/ SUBS        R6, R1, #0 
    /*00013820*/ SUB         SP, SP, #12 
    /*00013824*/ MOV         R4, R0 
    /*00013828*/ BEQ         VencGetH265Vui_x138f4
    VencGetH265Vui_x1382c:
    /*0001382c*/ CMP         R4, #0 
    /*00013830*/ BLT         VencGetH265Vui_x138d8
    /*00013834*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00013838*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0001383c*/ LDR         R3, [R3] 
    /*00013840*/ CMP         R4, R3 
    /*00013844*/ BCS         VencGetH265Vui_x138d8
    VencGetH265Vui_x13848:
    /*00013848*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0001384c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00013850*/ MUL         R5, R5, R4 
    /*00013854*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00013858*/ LDR         R8, [R3] 
    /*0001385c*/ ADD         R9, R8, R5 
    /*00013860*/ ADD         R7, R9, #12416              @ 0x3080 
    /*00013864*/ ADD         R7, R7, #16 
    /*00013868*/ MOV         R0, R7 
    /*0001386c*/ BL          0x000000000001386C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00013870*/ CMP         R0, #0 
    /*00013874*/ BNE         VencGetH265Vui_x13974
    /*00013878*/ LDR         R3, [R8, R5] 
    /*0001387c*/ CMP         R3, #1 
    /*00013880*/ BNE         VencGetH265Vui_x1393c
    /*00013884*/ LDR         R3, [R9, #4] 
    /*00013888*/ MOVW        R2, #265                    @ 0x109 
    /*0001388c*/ CMP         R3, R2 
    /*00013890*/ BNE         VencGetH265Vui_x13904
    /*00013894*/ MOV         R0, #13 
    /*00013898*/ BL          0x0000000000013898          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001389c*/ MOV         R1, R6 
    /*000138a0*/ LDR         R3, [R0, #120]              @ 0x78 
    /*000138a4*/ MOV         R0, R4 
    /*000138a8*/ BLX         R3 
    /*000138ac*/ MOV         R5, R0 
    /*000138b0*/ MOV         R0, R7 
    /*000138b4*/ BL          0x00000000000138B4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000138b8*/ CMP         R5, #0 
    /*000138bc*/ BEQ         VencGetH265Vui_x138e8
    /*000138c0*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*000138c4*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*000138c8*/ ORR         R5, R5, #524288             @ 0x80000 
    /*000138cc*/ MOV         R0, R5 
    /*000138d0*/ ADD         SP, SP, #12 
    /*000138d4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH265Vui_x138d8:
    /*000138d8*/ MOV         R0, R4 
    /*000138dc*/ BL          0x0000000000000304 
    /*000138e0*/ SUBS        R5, R0, #0 
    /*000138e4*/ BEQ         VencGetH265Vui_x13848
    VencGetH265Vui_x138e8:
    /*000138e8*/ MOV         R0, R5 
    /*000138ec*/ ADD         SP, SP, #12 
    /*000138f0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetH265Vui_x138f4:
    /*000138f4*/ BL          0x00000000000002C8 
    /*000138f8*/ SUBS        R5, R0, #0 
    /*000138fc*/ BNE         VencGetH265Vui_x138e8
    /*00013900*/ B           VencGetH265Vui_x1382c
    VencGetH265Vui_x13904:
    /*00013904*/ STR         R3, [SP, #4] 
    /*00013908*/ MOV         R1, #8 
    /*0001390c*/ MOVW        R3, #10403                  @ 0x28a3 
    /*00013910*/ MOVW        R2, #0                      @ .LC387 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c58] 
    /*00013914*/ STR         R3, [SP] 
    /*00013918*/ MOVT        R2, #0                      @ .LC387 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c58] 
    /*0001391c*/ LDR         R3, [PC, #92]               @ 0x0000000000013980 
    /*00013920*/ MOV         R0, #3 
    /*00013924*/ BL          0x0000000000013924          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013928*/ MOV         R0, R7 
    /*0001392c*/ MOVW        R5, #32776                  @ 0x8008 
    /*00013930*/ BL          0x0000000000013930          @ osal_up [R_ARM_CALL: +0x0] 
    /*00013934*/ MOVT        R5, #40968                  @ 0xa008 
    /*00013938*/ B           VencGetH265Vui_x138e8
    VencGetH265Vui_x1393c:
    /*0001393c*/ MOVW        R3, #10396                  @ 0x289c 
    /*00013940*/ MOV         R1, #8 
    /*00013944*/ STR         R3, [SP] 
    /*00013948*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0001394c*/ LDR         R3, [PC, #44]               @ 0x0000000000013980 
    /*00013950*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00013954*/ STR         R4, [SP, #4] 
    /*00013958*/ MOV         R0, #3 
    /*0001395c*/ BL          0x000000000001395C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013960*/ MOV         R0, R7 
    /*00013964*/ MOVW        R5, #32773                  @ 0x8005 
    /*00013968*/ BL          0x0000000000013968          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001396c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00013970*/ B           VencGetH265Vui_x138e8
    VencGetH265Vui_x13974:
    /*00013974*/ MOV         R5, #65024                  @ 0xfe00 
    /*00013978*/ MOVT        R5, #65535                  @ 0xffff 
    /*0001397c*/ B           VencGetH265Vui_x138e8
    /*00013980*/ ANDEQ       R0, R0, R0, ROR R9 
FUNC_END VencGetH265Vui


FUNC_BEGIN VencCheckFrmLostStra
    /*00013984*/ PUSH        {R4, R5, R6, LR} 
    /*00013988*/ SUBS        R6, R1, #0 
    /*0001398c*/ SUB         SP, SP, #24 
    /*00013990*/ MOV         R4, R0 
    /*00013994*/ BEQ         VencCheckFrmLostStra_x13b54
    VencCheckFrmLostStra_x13998:
    /*00013998*/ CMP         R4, #0 
    /*0001399c*/ BLT         VencCheckFrmLostStra_x13a88
    /*000139a0*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000139a4*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000139a8*/ LDR         R3, [R3] 
    /*000139ac*/ CMP         R4, R3 
    /*000139b0*/ BCS         VencCheckFrmLostStra_x13a88
    VencCheckFrmLostStra_x139b4:
    /*000139b4*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000139b8*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000139bc*/ MOVW        R3, #36240                  @ 0x8d90 
    /*000139c0*/ MOVW        R1, #1006                   @ 0x3ee 
    /*000139c4*/ LDR         R2, [R2] 
    /*000139c8*/ MLA         R3, R3, R4, R2 
    /*000139cc*/ LDR         R2, [R3, #4] 
    /*000139d0*/ CMP         R2, R1 
    /*000139d4*/ CMPNE       R2, #26 
    /*000139d8*/ BEQ         VencCheckFrmLostStra_x13bc0
    /*000139dc*/ MOVW        R1, #1002                   @ 0x3ea 
    /*000139e0*/ CMP         R2, R1 
    /*000139e4*/ BEQ         VencCheckFrmLostStra_x13b40
    /*000139e8*/ ADD         R3, R3, #12288              @ 0x3000 
    /*000139ec*/ LDR         R2, [R3, #716]              @ 0x2cc 
    /*000139f0*/ CMP         R2, #0 
    /*000139f4*/ BNE         VencCheckFrmLostStra_x13af0
    VencCheckFrmLostStra_x139f8:
    /*000139f8*/ LDR         R1, [R3, #676]              @ 0x2a4 
    /*000139fc*/ SUB         R2, R1, #1 
    /*00013a00*/ CMP         R2, #16 
    /*00013a04*/ BHI         VencCheckFrmLostStra_x13bf0
    /*00013a08*/ SUB         R0, R1, #6 
    /*00013a0c*/ CMP         R0, #11 
    /*00013a10*/ BHI         VencCheckFrmLostStra_x13a24
    /*00013a14*/ MOVW        R2, #3091                   @ 0xc13 
    /*00013a18*/ MVN         R2, R2, LSR R0 
    /*00013a1c*/ TST         R2, #1 
    /*00013a20*/ BEQ         VencCheckFrmLostStra_x13ba4
    VencCheckFrmLostStra_x13a24:
    /*00013a24*/ LDR         R3, [R3, #1012]             @ 0x3f4 
    /*00013a28*/ CMP         R3, #1 
    /*00013a2c*/ BEQ         VencCheckFrmLostStra_x13aa4
    VencCheckFrmLostStra_x13a30:
    /*00013a30*/ MOV         R0, #19 
    /*00013a34*/ BL          0x0000000000013A34          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013a38*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*00013a3c*/ MOV         R0, R6 
    /*00013a40*/ BLX         R3 
    /*00013a44*/ SUBS        R5, R0, #0 
    /*00013a48*/ BEQ         VencCheckFrmLostStra_x13a98
    /*00013a4c*/ STR         R4, [SP, #4] 
    /*00013a50*/ MOVW        R3, #10477                  @ 0x28ed 
    /*00013a54*/ MOV         R1, #8 
    /*00013a58*/ STR         R3, [SP] 
    /*00013a5c*/ MOVW        R2, #0                      @ .LC394 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ebc] 
    /*00013a60*/ LDR         R3, [PC, #460]              @ 0x0000000000013c34 
    /*00013a64*/ MOVT        R2, #0                      @ .LC394 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ebc] 
    /*00013a68*/ MOV         R0, #3 
    /*00013a6c*/ BL          0x0000000000013A6C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013a70*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00013a74*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00013a78*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00013a7c*/ MOV         R0, R5 
    /*00013a80*/ ADD         SP, SP, #24 
    /*00013a84*/ POP         {R4, R5, R6, PC} 
    VencCheckFrmLostStra_x13a88:
    /*00013a88*/ MOV         R0, R4 
    /*00013a8c*/ BL          0x0000000000000304 
    /*00013a90*/ SUBS        R5, R0, #0 
    /*00013a94*/ BEQ         VencCheckFrmLostStra_x139b4
    VencCheckFrmLostStra_x13a98:
    /*00013a98*/ MOV         R0, R5 
    /*00013a9c*/ ADD         SP, SP, #24 
    /*00013aa0*/ POP         {R4, R5, R6, PC} 
    VencCheckFrmLostStra_x13aa4:
    /*00013aa4*/ LDR         R3, [R6] 
    /*00013aa8*/ CMP         R3, #0 
    /*00013aac*/ BEQ         VencCheckFrmLostStra_x13a30
    /*00013ab0*/ LDR         R3, [R6, #8] 
    /*00013ab4*/ CMP         R3, #1 
    /*00013ab8*/ BNE         VencCheckFrmLostStra_x13a30
    /*00013abc*/ STR         R3, [SP, #8] 
    /*00013ac0*/ MOVW        R2, #0                      @ .LC393 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4e4c] 
    /*00013ac4*/ MOVW        R3, #10468                  @ 0x28e4 
    /*00013ac8*/ STR         R4, [SP, #4] 
    /*00013acc*/ STR         R3, [SP] 
    /*00013ad0*/ MOVT        R2, #0                      @ .LC393 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4e4c] 
    /*00013ad4*/ LDR         R3, [PC, #344]              @ 0x0000000000013c34 
    /*00013ad8*/ MOV         R1, #8 
    /*00013adc*/ MOV         R0, #3 
    /*00013ae0*/ MOVW        R5, #32777                  @ 0x8009 
    /*00013ae4*/ BL          0x0000000000013AE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013ae8*/ MOVT        R5, #40968                  @ 0xa008 
    /*00013aec*/ B           VencCheckFrmLostStra_x13a98
    VencCheckFrmLostStra_x13af0:
    /*00013af0*/ LDR         R1, [R6, #8] 
    /*00013af4*/ CMP         R1, #1 
    /*00013af8*/ BNE         VencCheckFrmLostStra_x139f8
    /*00013afc*/ LDR         R0, [R6] 
    /*00013b00*/ CMP         R0, #0 
    /*00013b04*/ BEQ         VencCheckFrmLostStra_x139f8
    /*00013b08*/ STR         R1, [SP, #12] 
    /*00013b0c*/ MOVW        R3, #10440                  @ 0x28c8 
    /*00013b10*/ STR         R2, [SP, #8] 
    /*00013b14*/ MOV         R1, #8 
    /*00013b18*/ STR         R3, [SP] 
    /*00013b1c*/ MOVW        R2, #0                      @ .LC390 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4d34] 
    /*00013b20*/ STR         R4, [SP, #4] 
    /*00013b24*/ MOVT        R2, #0                      @ .LC390 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4d34] 
    /*00013b28*/ LDR         R3, [PC, #260]              @ 0x0000000000013c34 
    /*00013b2c*/ MOV         R0, #3 
    /*00013b30*/ MOVW        R5, #32777                  @ 0x8009 
    /*00013b34*/ BL          0x0000000000013B34          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013b38*/ MOVT        R5, #40968                  @ 0xa008 
    /*00013b3c*/ B           VencCheckFrmLostStra_x13a98
    VencCheckFrmLostStra_x13b40:
    /*00013b40*/ LDR         R1, [R6, #8] 
    /*00013b44*/ CMP         R1, #1 
    /*00013b48*/ BEQ         VencCheckFrmLostStra_x13b64
    VencCheckFrmLostStra_x13b4c:
    /*00013b4c*/ ADD         R3, R3, #12288              @ 0x3000 
    /*00013b50*/ B           VencCheckFrmLostStra_x139f8
    VencCheckFrmLostStra_x13b54:
    /*00013b54*/ BL          0x00000000000002C8 
    /*00013b58*/ SUBS        R5, R0, #0 
    /*00013b5c*/ BNE         VencCheckFrmLostStra_x13a98
    /*00013b60*/ B           VencCheckFrmLostStra_x13998
    VencCheckFrmLostStra_x13b64:
    /*00013b64*/ LDR         R1, [R6] 
    /*00013b68*/ CMP         R1, #0 
    /*00013b6c*/ BEQ         VencCheckFrmLostStra_x13b4c
    /*00013b70*/ STR         R2, [SP, #8] 
    /*00013b74*/ MOVW        R2, #0                      @ .LC389 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4cec] 
    /*00013b78*/ MOVT        R2, #0                      @ .LC389 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4cec] 
    /*00013b7c*/ MOV         R3, #10432                  @ 0x28c0 
    /*00013b80*/ STR         R4, [SP, #4] 
    /*00013b84*/ STR         R3, [SP] 
    VencCheckFrmLostStra_x13b88:
    /*00013b88*/ LDR         R3, [PC, #164]              @ 0x0000000000013c34 
    /*00013b8c*/ MOV         R1, #8 
    /*00013b90*/ MOV         R0, #3 
    /*00013b94*/ MOVW        R5, #32776                  @ 0x8008 
    /*00013b98*/ BL          0x0000000000013B98          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013b9c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00013ba0*/ B           VencCheckFrmLostStra_x13a98
    VencCheckFrmLostStra_x13ba4:
    /*00013ba4*/ MOVW        R3, #10460                  @ 0x28dc 
    /*00013ba8*/ MOVW        R2, #0                      @ .LC392 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4dec] 
    /*00013bac*/ STR         R1, [SP, #8] 
    /*00013bb0*/ MOVT        R2, #0                      @ .LC392 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4dec] 
    /*00013bb4*/ STR         R4, [SP, #4] 
    /*00013bb8*/ STR         R3, [SP] 
    /*00013bbc*/ B           VencCheckFrmLostStra_x13b88
    VencCheckFrmLostStra_x13bc0:
    /*00013bc0*/ MOVW        R3, #10425                  @ 0x28b9 
    /*00013bc4*/ STR         R4, [SP, #4] 
    /*00013bc8*/ STR         R3, [SP] 
    /*00013bcc*/ MOVW        R2, #0                      @ .LC388 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c94] 
    /*00013bd0*/ LDR         R3, [PC, #92]               @ 0x0000000000013c34 
    /*00013bd4*/ MOVT        R2, #0                      @ .LC388 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c94] 
    /*00013bd8*/ MOV         R1, #8 
    /*00013bdc*/ MOV         R0, #3 
    /*00013be0*/ MOVW        R5, #32776                  @ 0x8008 
    /*00013be4*/ BL          0x0000000000013BE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013be8*/ MOVT        R5, #40968                  @ 0xa008 
    /*00013bec*/ B           VencCheckFrmLostStra_x13a98
    VencCheckFrmLostStra_x13bf0:
    /*00013bf0*/ STR         R1, [SP, #8] 
    /*00013bf4*/ MOV         R3, #17 
    /*00013bf8*/ MOV         R2, #1 
    /*00013bfc*/ STR         R3, [SP, #16] 
    /*00013c00*/ STR         R2, [SP, #12] 
    /*00013c04*/ MOVW        R3, #10448                  @ 0x28d0 
    /*00013c08*/ STR         R4, [SP, #4] 
    /*00013c0c*/ MOVW        R2, #0                      @ .LC391 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4d98] 
    /*00013c10*/ STR         R3, [SP] 
    /*00013c14*/ MOVT        R2, #0                      @ .LC391 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4d98] 
    /*00013c18*/ LDR         R3, [PC, #20]               @ 0x0000000000013c34 
    /*00013c1c*/ MOV         R1, #8 
    /*00013c20*/ MOV         R0, #3 
    /*00013c24*/ MOVW        R5, #32771                  @ 0x8003 
    /*00013c28*/ BL          0x0000000000013C28          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013c2c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00013c30*/ B           VencCheckFrmLostStra_x13a98
    /*00013c34*/ ANDEQ       R0, R0, R0, LSL #19 
FUNC_END VencCheckFrmLostStra


FUNC_BEGIN VencSetFrmLostStra
    /*00013c38*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00013c3c*/ SUBS        R6, R1, #0 
    /*00013c40*/ SUB         SP, SP, #12 
    /*00013c44*/ MOV         R4, R0 
    /*00013c48*/ BEQ         VencSetFrmLostStra_x13d2c
    VencSetFrmLostStra_x13c4c:
    /*00013c4c*/ CMP         R4, #0 
    /*00013c50*/ BLT         VencSetFrmLostStra_x13d10
    /*00013c54*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00013c58*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00013c5c*/ LDR         R3, [R3] 
    /*00013c60*/ CMP         R4, R3 
    /*00013c64*/ BCS         VencSetFrmLostStra_x13d10
    VencSetFrmLostStra_x13c68:
    /*00013c68*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00013c6c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00013c70*/ MUL         R5, R5, R4 
    /*00013c74*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00013c78*/ LDR         R9, [R3] 
    /*00013c7c*/ ADD         R8, R9, R5 
    /*00013c80*/ ADD         R7, R8, #12416              @ 0x3080 
    /*00013c84*/ ADD         R7, R7, #16 
    /*00013c88*/ MOV         R0, R7 
    /*00013c8c*/ BL          0x0000000000013C8C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00013c90*/ CMP         R0, #0 
    /*00013c94*/ BNE         VencSetFrmLostStra_x13da8
    /*00013c98*/ LDR         R3, [R9, R5] 
    /*00013c9c*/ CMP         R3, #1 
    /*00013ca0*/ BNE         VencSetFrmLostStra_x13d3c
    /*00013ca4*/ MOV         R1, R6 
    /*00013ca8*/ MOV         R0, R4 
    /*00013cac*/ BL          0x0000000000013CAC          @ VencCheckFrmLostStra [R_ARM_CALL: .text+0x13984] 
    /*00013cb0*/ SUBS        R5, R0, #0 
    /*00013cb4*/ BNE         VencSetFrmLostStra_x13cfc
    /*00013cb8*/ ADD         R3, R8, #12288              @ 0x3000 
    /*00013cbc*/ LDR         R3, [R3, #612]              @ 0x264 
    /*00013cc0*/ CMP         R3, #0 
    /*00013cc4*/ BNE         VencSetFrmLostStra_x13ce8
    /*00013cc8*/ MOV         R0, #19 
    /*00013ccc*/ BL          0x0000000000013CCC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013cd0*/ MOV         R1, R6 
    /*00013cd4*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00013cd8*/ MOV         R0, R4 
    /*00013cdc*/ BLX         R3 
    /*00013ce0*/ SUBS        R9, R0, #0 
    /*00013ce4*/ BNE         VencSetFrmLostStra_x13d74
    VencSetFrmLostStra_x13ce8:
    /*00013ce8*/ ADD         R0, R8, #13312              @ 0x3400 
    /*00013cec*/ MOV         R1, R6 
    /*00013cf0*/ ADD         R0, R0, #4 
    /*00013cf4*/ MOV         R2, #16 
    /*00013cf8*/ BL          0x0000000000013CF8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    VencSetFrmLostStra_x13cfc:
    /*00013cfc*/ MOV         R0, R7 
    /*00013d00*/ BL          0x0000000000013D00          @ osal_up [R_ARM_CALL: +0x0] 
    /*00013d04*/ MOV         R0, R5 
    /*00013d08*/ ADD         SP, SP, #12 
    /*00013d0c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetFrmLostStra_x13d10:
    /*00013d10*/ MOV         R0, R4 
    /*00013d14*/ BL          0x0000000000000304 
    /*00013d18*/ SUBS        R5, R0, #0 
    /*00013d1c*/ BEQ         VencSetFrmLostStra_x13c68
    VencSetFrmLostStra_x13d20:
    /*00013d20*/ MOV         R0, R5 
    /*00013d24*/ ADD         SP, SP, #12 
    /*00013d28*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetFrmLostStra_x13d2c:
    /*00013d2c*/ BL          0x00000000000002C8 
    /*00013d30*/ SUBS        R5, R0, #0 
    /*00013d34*/ BNE         VencSetFrmLostStra_x13d20
    /*00013d38*/ B           VencSetFrmLostStra_x13c4c
    VencSetFrmLostStra_x13d3c:
    /*00013d3c*/ MOVW        R3, #10501                  @ 0x2905 
    /*00013d40*/ MOV         R1, #8 
    /*00013d44*/ STR         R3, [SP] 
    /*00013d48*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00013d4c*/ LDR         R3, [PC, #96]               @ 0x0000000000013db4 
    /*00013d50*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00013d54*/ STR         R4, [SP, #4] 
    /*00013d58*/ MOV         R0, #3 
    /*00013d5c*/ BL          0x0000000000013D5C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013d60*/ MOV         R0, R7 
    /*00013d64*/ MOVW        R5, #32773                  @ 0x8005 
    /*00013d68*/ BL          0x0000000000013D68          @ osal_up [R_ARM_CALL: +0x0] 
    /*00013d6c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00013d70*/ B           VencSetFrmLostStra_x13d20
    VencSetFrmLostStra_x13d74:
    /*00013d74*/ STR         R4, [SP, #4] 
    /*00013d78*/ MOVW        R3, #10518                  @ 0x2916 
    /*00013d7c*/ MOV         R1, #8 
    /*00013d80*/ STR         R3, [SP] 
    /*00013d84*/ MOVW        R2, #0                      @ .LC395 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4f04] 
    /*00013d88*/ LDR         R3, [PC, #36]               @ 0x0000000000013db4 
    /*00013d8c*/ MOVT        R2, #0                      @ .LC395 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4f04] 
    /*00013d90*/ MOV         R0, #3 
    /*00013d94*/ BL          0x0000000000013D94          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013d98*/ MOV         R0, R7 
    /*00013d9c*/ MOV         R5, R9 
    /*00013da0*/ BL          0x0000000000013DA0          @ osal_up [R_ARM_CALL: +0x0] 
    /*00013da4*/ B           VencSetFrmLostStra_x13d20
    VencSetFrmLostStra_x13da8:
    /*00013da8*/ MOV         R5, #65024                  @ 0xfe00 
    /*00013dac*/ MOVT        R5, #65535                  @ 0xffff 
    /*00013db0*/ B           VencSetFrmLostStra_x13d20
    /*00013db4*/ MULEQ       R0, R8, R9 
FUNC_END VencSetFrmLostStra


FUNC_BEGIN VencGetFrmLostStra
    /*00013db8*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00013dbc*/ SUBS        R5, R1, #0 
    /*00013dc0*/ SUB         SP, SP, #20 
    /*00013dc4*/ MOV         R4, R0 
    /*00013dc8*/ BEQ         VencGetFrmLostStra_x13ea8
    VencGetFrmLostStra_x13dcc:
    /*00013dcc*/ CMP         R4, #0 
    /*00013dd0*/ BLT         VencGetFrmLostStra_x13e90
    /*00013dd4*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00013dd8*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00013ddc*/ LDR         R3, [R3] 
    /*00013de0*/ CMP         R4, R3 
    /*00013de4*/ BCS         VencGetFrmLostStra_x13e90
    VencGetFrmLostStra_x13de8:
    /*00013de8*/ MOVW        R6, #36240                  @ 0x8d90 
    /*00013dec*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00013df0*/ MUL         R6, R6, R4 
    /*00013df4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00013df8*/ LDR         R9, [R3] 
    /*00013dfc*/ ADD         R8, R9, R6 
    /*00013e00*/ ADD         R7, R8, #12416              @ 0x3080 
    /*00013e04*/ ADD         R7, R7, #16 
    /*00013e08*/ MOV         R0, R7 
    /*00013e0c*/ BL          0x0000000000013E0C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00013e10*/ CMP         R0, #0 
    /*00013e14*/ BNE         VencGetFrmLostStra_x13f2c
    /*00013e18*/ LDR         R1, [R9, R6] 
    /*00013e1c*/ CMP         R1, #1 
    /*00013e20*/ BNE         VencGetFrmLostStra_x13ef4
    /*00013e24*/ LDR         R3, [R8, #4] 
    /*00013e28*/ MOVW        R2, #1006                   @ 0x3ee 
    /*00013e2c*/ CMP         R3, R2 
    /*00013e30*/ CMPNE       R3, #26 
    /*00013e34*/ BEQ         VencGetFrmLostStra_x13f38
    /*00013e38*/ ADD         R3, R8, #12288              @ 0x3000 
    /*00013e3c*/ LDR         R2, [R3, #676]              @ 0x2a4 
    /*00013e40*/ SUB         R3, R2, #1 
    /*00013e44*/ CMP         R3, #16 
    /*00013e48*/ BHI         VencGetFrmLostStra_x13f54
    /*00013e4c*/ SUB         R1, R2, #6 
    /*00013e50*/ CMP         R1, #11 
    /*00013e54*/ BHI         VencGetFrmLostStra_x13e68
    /*00013e58*/ MOVW        R3, #3091                   @ 0xc13 
    /*00013e5c*/ MVN         R3, R3, LSR R1 
    /*00013e60*/ TST         R3, #1 
    /*00013e64*/ BEQ         VencGetFrmLostStra_x13eb8
    VencGetFrmLostStra_x13e68:
    /*00013e68*/ ADD         R1, R8, #13312              @ 0x3400 
    /*00013e6c*/ MOV         R2, #16 
    /*00013e70*/ ADD         R1, R1, #4 
    /*00013e74*/ MOV         R0, R5 
    /*00013e78*/ BL          0x0000000000013E78          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00013e7c*/ MOV         R0, R7 
    /*00013e80*/ BL          0x0000000000013E80          @ osal_up [R_ARM_CALL: +0x0] 
    /*00013e84*/ MOV         R0, #0 
    /*00013e88*/ ADD         SP, SP, #20 
    /*00013e8c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetFrmLostStra_x13e90:
    /*00013e90*/ MOV         R0, R4 
    /*00013e94*/ BL          0x0000000000000304 
    /*00013e98*/ CMP         R0, #0 
    /*00013e9c*/ BEQ         VencGetFrmLostStra_x13de8
    VencGetFrmLostStra_x13ea0:
    /*00013ea0*/ ADD         SP, SP, #20 
    /*00013ea4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetFrmLostStra_x13ea8:
    /*00013ea8*/ BL          0x00000000000002C8 
    /*00013eac*/ CMP         R0, #0 
    /*00013eb0*/ BNE         VencGetFrmLostStra_x13ea0
    /*00013eb4*/ B           VencGetFrmLostStra_x13dcc
    VencGetFrmLostStra_x13eb8:
    /*00013eb8*/ STR         R2, [SP, #8] 
    /*00013ebc*/ MOVW        R2, #0                      @ .LC398 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4fe0] 
    /*00013ec0*/ MOVT        R2, #0                      @ .LC398 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4fe0] 
    /*00013ec4*/ MOVW        R3, #10574                  @ 0x294e 
    /*00013ec8*/ STR         R4, [SP, #4] 
    /*00013ecc*/ STR         R3, [SP] 
    VencGetFrmLostStra_x13ed0:
    /*00013ed0*/ LDR         R3, [PC, #192]              @ 0x0000000000013f98 
    /*00013ed4*/ MOV         R1, #8 
    /*00013ed8*/ MOV         R0, #3 
    /*00013edc*/ BL          0x0000000000013EDC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013ee0*/ MOV         R0, R7 
    /*00013ee4*/ BL          0x0000000000013EE4          @ osal_up [R_ARM_CALL: +0x0] 
    /*00013ee8*/ MOVW        R0, #32776                  @ 0x8008 
    /*00013eec*/ MOVT        R0, #40968                  @ 0xa008 
    /*00013ef0*/ B           VencGetFrmLostStra_x13ea0
    VencGetFrmLostStra_x13ef4:
    /*00013ef4*/ MOVW        R3, #10546                  @ 0x2932 
    /*00013ef8*/ MOV         R1, #8 
    /*00013efc*/ STR         R3, [SP] 
    /*00013f00*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00013f04*/ LDR         R3, [PC, #140]              @ 0x0000000000013f98 
    /*00013f08*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00013f0c*/ STR         R4, [SP, #4] 
    /*00013f10*/ MOV         R0, #3 
    /*00013f14*/ BL          0x0000000000013F14          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013f18*/ MOV         R0, R7 
    /*00013f1c*/ BL          0x0000000000013F1C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00013f20*/ MOVW        R0, #32773                  @ 0x8005 
    /*00013f24*/ MOVT        R0, #40968                  @ 0xa008 
    /*00013f28*/ B           VencGetFrmLostStra_x13ea0
    VencGetFrmLostStra_x13f2c:
    /*00013f2c*/ MOV         R0, #65024                  @ 0xfe00 
    /*00013f30*/ MOVT        R0, #65535                  @ 0xffff 
    /*00013f34*/ B           VencGetFrmLostStra_x13ea0
    VencGetFrmLostStra_x13f38:
    /*00013f38*/ STR         R3, [SP, #8] 
    /*00013f3c*/ MOVW        R2, #0                      @ .LC396 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4f50] 
    /*00013f40*/ MOVW        R3, #10553                  @ 0x2939 
    /*00013f44*/ STR         R4, [SP, #4] 
    /*00013f48*/ STR         R3, [SP] 
    /*00013f4c*/ MOVT        R2, #0                      @ .LC396 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4f50] 
    /*00013f50*/ B           VencGetFrmLostStra_x13ed0
    VencGetFrmLostStra_x13f54:
    /*00013f54*/ STR         R1, [SP, #8] 
    /*00013f58*/ MOVW        R3, #10561                  @ 0x2941 
    /*00013f5c*/ MOV         R1, #17 
    /*00013f60*/ STR         R2, [SP, #4] 
    /*00013f64*/ STR         R1, [SP, #12] 
    /*00013f68*/ MOVW        R2, #0                      @ .LC397 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4f98] 
    /*00013f6c*/ STR         R3, [SP] 
    /*00013f70*/ MOVT        R2, #0                      @ .LC397 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4f98] 
    /*00013f74*/ LDR         R3, [PC, #28]               @ 0x0000000000013f98 
    /*00013f78*/ MOV         R1, #8 
    /*00013f7c*/ MOV         R0, #3 
    /*00013f80*/ BL          0x0000000000013F80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013f84*/ MOV         R0, R7 
    /*00013f88*/ BL          0x0000000000013F88          @ osal_up [R_ARM_CALL: +0x0] 
    /*00013f8c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00013f90*/ MOVT        R0, #40968                  @ 0xa008 
    /*00013f94*/ B           VencGetFrmLostStra_x13ea0
    /*00013f98*/ ANDEQ       R0, R0, IP, LSR #19 
FUNC_END VencGetFrmLostStra


FUNC_BEGIN VencSetFaceCfg
    /*00013f9c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00013fa0*/ SUBS        R6, R1, #0 
    /*00013fa4*/ SUB         SP, SP, #12 
    /*00013fa8*/ MOV         R4, R0 
    /*00013fac*/ BEQ         VencSetFaceCfg_x14078
    VencSetFaceCfg_x13fb0:
    /*00013fb0*/ CMP         R4, #0 
    /*00013fb4*/ BLT         VencSetFaceCfg_x1405c
    /*00013fb8*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00013fbc*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00013fc0*/ LDR         R3, [R3] 
    /*00013fc4*/ CMP         R4, R3 
    /*00013fc8*/ BCS         VencSetFaceCfg_x1405c
    VencSetFaceCfg_x13fcc:
    /*00013fcc*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00013fd0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00013fd4*/ MUL         R5, R5, R4 
    /*00013fd8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00013fdc*/ LDR         R8, [R3] 
    /*00013fe0*/ ADD         R9, R8, R5 
    /*00013fe4*/ ADD         R7, R9, #12416              @ 0x3080 
    /*00013fe8*/ ADD         R7, R7, #16 
    /*00013fec*/ MOV         R0, R7 
    /*00013ff0*/ BL          0x0000000000013FF0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00013ff4*/ CMP         R0, #0 
    /*00013ff8*/ BNE         VencSetFaceCfg_x140c0
    /*00013ffc*/ LDR         R3, [R8, R5] 
    /*00014000*/ CMP         R3, #1 
    /*00014004*/ BNE         VencSetFaceCfg_x14088
    /*00014008*/ LDR         R2, [R9, #4] 
    /*0001400c*/ MOVW        R3, #265                    @ 0x109 
    /*00014010*/ CMP         R2, R3 
    /*00014014*/ BNE         VencSetFaceCfg_x140cc
    /*00014018*/ MOV         R0, #13 
    /*0001401c*/ BL          0x000000000001401C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00014020*/ MOV         R1, R6 
    /*00014024*/ LDR         R3, [R0, #156]              @ 0x9c 
    /*00014028*/ MOV         R0, R4 
    /*0001402c*/ BLX         R3 
    /*00014030*/ MOV         R5, R0 
    /*00014034*/ MOV         R0, R7 
    /*00014038*/ BL          0x0000000000014038          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001403c*/ CMP         R5, #0 
    /*00014040*/ BEQ         VencSetFaceCfg_x1406c
    /*00014044*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00014048*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*0001404c*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00014050*/ MOV         R0, R5 
    /*00014054*/ ADD         SP, SP, #12 
    /*00014058*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetFaceCfg_x1405c:
    /*0001405c*/ MOV         R0, R4 
    /*00014060*/ BL          0x0000000000000304 
    /*00014064*/ SUBS        R5, R0, #0 
    /*00014068*/ BEQ         VencSetFaceCfg_x13fcc
    VencSetFaceCfg_x1406c:
    /*0001406c*/ MOV         R0, R5 
    /*00014070*/ ADD         SP, SP, #12 
    /*00014074*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetFaceCfg_x14078:
    /*00014078*/ BL          0x00000000000002C8 
    /*0001407c*/ SUBS        R5, R0, #0 
    /*00014080*/ BNE         VencSetFaceCfg_x1406c
    /*00014084*/ B           VencSetFaceCfg_x13fb0
    VencSetFaceCfg_x14088:
    /*00014088*/ MOVW        R3, #10600                  @ 0x2968 
    /*0001408c*/ MOV         R1, #8 
    /*00014090*/ STR         R3, [SP] 
    /*00014094*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00014098*/ LDR         R3, [PC, #64]               @ 0x00000000000140e0 
    /*0001409c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*000140a0*/ STR         R4, [SP, #4] 
    /*000140a4*/ MOV         R0, #3 
    /*000140a8*/ BL          0x00000000000140A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000140ac*/ MOV         R0, R7 
    /*000140b0*/ MOVW        R5, #32773                  @ 0x8005 
    /*000140b4*/ BL          0x00000000000140B4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000140b8*/ MOVT        R5, #40968                  @ 0xa008 
    /*000140bc*/ B           VencSetFaceCfg_x1406c
    VencSetFaceCfg_x140c0:
    /*000140c0*/ MOV         R5, #65024                  @ 0xfe00 
    /*000140c4*/ MOVT        R5, #65535                  @ 0xffff 
    /*000140c8*/ B           VencSetFaceCfg_x1406c
    VencSetFaceCfg_x140cc:
    /*000140cc*/ MOV         R0, R7 
    /*000140d0*/ MOVW        R5, #32776                  @ 0x8008 
    /*000140d4*/ BL          0x00000000000140D4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000140d8*/ MOVT        R5, #40968                  @ 0xa008 
    /*000140dc*/ B           VencSetFaceCfg_x1406c
    /*000140e0*/ ANDEQ       R0, R0, R0, ASR #19 
FUNC_END VencSetFaceCfg


FUNC_BEGIN VencGetFaceCfg
    /*000140e4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000140e8*/ SUBS        R6, R1, #0 
    /*000140ec*/ SUB         SP, SP, #12 
    /*000140f0*/ MOV         R4, R0 
    /*000140f4*/ BEQ         VencGetFaceCfg_x141c0
    VencGetFaceCfg_x140f8:
    /*000140f8*/ CMP         R4, #0 
    /*000140fc*/ BLT         VencGetFaceCfg_x141a4
    /*00014100*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00014104*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00014108*/ LDR         R3, [R3] 
    /*0001410c*/ CMP         R4, R3 
    /*00014110*/ BCS         VencGetFaceCfg_x141a4
    VencGetFaceCfg_x14114:
    /*00014114*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00014118*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001411c*/ MUL         R5, R5, R4 
    /*00014120*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00014124*/ LDR         R8, [R3] 
    /*00014128*/ ADD         R9, R8, R5 
    /*0001412c*/ ADD         R7, R9, #12416              @ 0x3080 
    /*00014130*/ ADD         R7, R7, #16 
    /*00014134*/ MOV         R0, R7 
    /*00014138*/ BL          0x0000000000014138          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001413c*/ CMP         R0, #0 
    /*00014140*/ BNE         VencGetFaceCfg_x14208
    /*00014144*/ LDR         R3, [R8, R5] 
    /*00014148*/ CMP         R3, #1 
    /*0001414c*/ BNE         VencGetFaceCfg_x141d0
    /*00014150*/ LDR         R2, [R9, #4] 
    /*00014154*/ MOVW        R3, #265                    @ 0x109 
    /*00014158*/ CMP         R2, R3 
    /*0001415c*/ BNE         VencGetFaceCfg_x14214
    /*00014160*/ MOV         R0, #13 
    /*00014164*/ BL          0x0000000000014164          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00014168*/ MOV         R1, R6 
    /*0001416c*/ LDR         R3, [R0, #160]              @ 0xa0 
    /*00014170*/ MOV         R0, R4 
    /*00014174*/ BLX         R3 
    /*00014178*/ MOV         R5, R0 
    /*0001417c*/ MOV         R0, R7 
    /*00014180*/ BL          0x0000000000014180          @ osal_up [R_ARM_CALL: +0x0] 
    /*00014184*/ CMP         R5, #0 
    /*00014188*/ BEQ         VencGetFaceCfg_x141b4
    /*0001418c*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00014190*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00014194*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00014198*/ MOV         R0, R5 
    /*0001419c*/ ADD         SP, SP, #12 
    /*000141a0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetFaceCfg_x141a4:
    /*000141a4*/ MOV         R0, R4 
    /*000141a8*/ BL          0x0000000000000304 
    /*000141ac*/ SUBS        R5, R0, #0 
    /*000141b0*/ BEQ         VencGetFaceCfg_x14114
    VencGetFaceCfg_x141b4:
    /*000141b4*/ MOV         R0, R5 
    /*000141b8*/ ADD         SP, SP, #12 
    /*000141bc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetFaceCfg_x141c0:
    /*000141c0*/ BL          0x00000000000002C8 
    /*000141c4*/ SUBS        R5, R0, #0 
    /*000141c8*/ BNE         VencGetFaceCfg_x141b4
    /*000141cc*/ B           VencGetFaceCfg_x140f8
    VencGetFaceCfg_x141d0:
    /*000141d0*/ MOVW        R3, #10639                  @ 0x298f 
    /*000141d4*/ MOV         R1, #8 
    /*000141d8*/ STR         R3, [SP] 
    /*000141dc*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*000141e0*/ LDR         R3, [PC, #64]               @ 0x0000000000014228 
    /*000141e4*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*000141e8*/ STR         R4, [SP, #4] 
    /*000141ec*/ MOV         R0, #3 
    /*000141f0*/ BL          0x00000000000141F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000141f4*/ MOV         R0, R7 
    /*000141f8*/ MOVW        R5, #32773                  @ 0x8005 
    /*000141fc*/ BL          0x00000000000141FC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00014200*/ MOVT        R5, #40968                  @ 0xa008 
    /*00014204*/ B           VencGetFaceCfg_x141b4
    VencGetFaceCfg_x14208:
    /*00014208*/ MOV         R5, #65024                  @ 0xfe00 
    /*0001420c*/ MOVT        R5, #65535                  @ 0xffff 
    /*00014210*/ B           VencGetFaceCfg_x141b4
    VencGetFaceCfg_x14214:
    /*00014214*/ MOV         R0, R7 
    /*00014218*/ MOVW        R5, #32776                  @ 0x8008 
    /*0001421c*/ BL          0x000000000001421C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00014220*/ MOVT        R5, #40968                  @ 0xa008 
    /*00014224*/ B           VencGetFaceCfg_x141b4
    /*00014228*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VencGetFaceCfg


FUNC_BEGIN VencSetRcSuperFrmCfg
    /*0001422c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00014230*/ SUBS        R6, R1, #0 
    /*00014234*/ SUB         SP, SP, #20 
    /*00014238*/ MOV         R4, R0 
    /*0001423c*/ BEQ         VencSetRcSuperFrmCfg_x14358
    VencSetRcSuperFrmCfg_x14240:
    /*00014240*/ CMP         R4, #0 
    /*00014244*/ BLT         VencSetRcSuperFrmCfg_x142f8
    /*00014248*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0001424c*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00014250*/ LDR         R3, [R3] 
    /*00014254*/ CMP         R4, R3 
    /*00014258*/ BCS         VencSetRcSuperFrmCfg_x142f8
    VencSetRcSuperFrmCfg_x1425c:
    /*0001425c*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00014260*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00014264*/ MUL         R5, R5, R4 
    /*00014268*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001426c*/ LDR         R8, [R3] 
    /*00014270*/ ADD         R9, R8, R5 
    /*00014274*/ ADD         R7, R9, #12416              @ 0x3080 
    /*00014278*/ ADD         R7, R7, #16 
    /*0001427c*/ MOV         R0, R7 
    /*00014280*/ BL          0x0000000000014280          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00014284*/ CMP         R0, #0 
    /*00014288*/ BNE         VencSetRcSuperFrmCfg_x143a0
    /*0001428c*/ LDR         R3, [R8, R5] 
    /*00014290*/ CMP         R3, #1 
    /*00014294*/ BNE         VencSetRcSuperFrmCfg_x14368
    /*00014298*/ LDR         R3, [R9, #4] 
    /*0001429c*/ MOVW        R2, #265                    @ 0x109 
    /*000142a0*/ CMP         R3, R2 
    /*000142a4*/ BEQ         VencSetRcSuperFrmCfg_x14314
    /*000142a8*/ MOVW        R2, #1002                   @ 0x3ea 
    /*000142ac*/ CMP         R3, R2 
    /*000142b0*/ BEQ         VencSetRcSuperFrmCfg_x14314
    /*000142b4*/ CMP         R3, #96                     @ 0x60 
    /*000142b8*/ BEQ         VencSetRcSuperFrmCfg_x14314
    /*000142bc*/ STR         R3, [SP, #8] 
    /*000142c0*/ MOV         R1, #8 
    /*000142c4*/ MOVW        R3, #10697                  @ 0x29c9 
    /*000142c8*/ STR         R4, [SP, #4] 
    /*000142cc*/ STR         R3, [SP] 
    /*000142d0*/ MOVW        R2, #0                      @ .LC399 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5030] 
    /*000142d4*/ LDR         R3, [PC, #208]              @ 0x00000000000143ac 
    /*000142d8*/ MOVT        R2, #0                      @ .LC399 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5030] 
    /*000142dc*/ MOV         R0, #3 
    /*000142e0*/ MOVW        R5, #32776                  @ 0x8008 
    /*000142e4*/ BL          0x00000000000142E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000142e8*/ MOV         R0, R7 
    /*000142ec*/ BL          0x00000000000142EC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000142f0*/ MOVT        R5, #40968                  @ 0xa008 
    /*000142f4*/ B           VencSetRcSuperFrmCfg_x14308
    VencSetRcSuperFrmCfg_x142f8:
    /*000142f8*/ MOV         R0, R4 
    /*000142fc*/ BL          0x0000000000000304 
    /*00014300*/ SUBS        R5, R0, #0 
    /*00014304*/ BEQ         VencSetRcSuperFrmCfg_x1425c
    VencSetRcSuperFrmCfg_x14308:
    /*00014308*/ MOV         R0, R5 
    /*0001430c*/ ADD         SP, SP, #20 
    /*00014310*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetRcSuperFrmCfg_x14314:
    /*00014314*/ MOV         R0, #19 
    /*00014318*/ BL          0x0000000000014318          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001431c*/ MOV         R1, R6 
    /*00014320*/ LDR         R3, [R0, #76]               @ 0x4c 
    /*00014324*/ MOV         R0, R4 
    /*00014328*/ BLX         R3 
    /*0001432c*/ MOV         R5, R0 
    /*00014330*/ MOV         R0, R7 
    /*00014334*/ BL          0x0000000000014334          @ osal_up [R_ARM_CALL: +0x0] 
    /*00014338*/ CMP         R5, #0 
    /*0001433c*/ BEQ         VencSetRcSuperFrmCfg_x14308
    /*00014340*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00014344*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00014348*/ ORR         R5, R5, #524288             @ 0x80000 
    /*0001434c*/ MOV         R0, R5 
    /*00014350*/ ADD         SP, SP, #20 
    /*00014354*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetRcSuperFrmCfg_x14358:
    /*00014358*/ BL          0x00000000000002C8 
    /*0001435c*/ SUBS        R5, R0, #0 
    /*00014360*/ BNE         VencSetRcSuperFrmCfg_x14308
    /*00014364*/ B           VencSetRcSuperFrmCfg_x14240
    VencSetRcSuperFrmCfg_x14368:
    /*00014368*/ MOVW        R3, #10679                  @ 0x29b7 
    /*0001436c*/ MOV         R1, #8 
    /*00014370*/ STR         R3, [SP] 
    /*00014374*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00014378*/ LDR         R3, [PC, #44]               @ 0x00000000000143ac 
    /*0001437c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00014380*/ STR         R4, [SP, #4] 
    /*00014384*/ MOV         R0, #3 
    /*00014388*/ BL          0x0000000000014388          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001438c*/ MOV         R0, R7 
    /*00014390*/ MOVW        R5, #32773                  @ 0x8005 
    /*00014394*/ BL          0x0000000000014394          @ osal_up [R_ARM_CALL: +0x0] 
    /*00014398*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001439c*/ B           VencSetRcSuperFrmCfg_x14308
    VencSetRcSuperFrmCfg_x143a0:
    /*000143a0*/ MOV         R5, #65024                  @ 0xfe00 
    /*000143a4*/ MOVT        R5, #65535                  @ 0xffff 
    /*000143a8*/ B           VencSetRcSuperFrmCfg_x14308
    /*000143ac*/ ANDEQ       R0, R0, R0, ROR #19 
FUNC_END VencSetRcSuperFrmCfg


FUNC_BEGIN VencGetRcSuperFrmCfg
    /*000143b0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000143b4*/ SUBS        R6, R1, #0 
    /*000143b8*/ SUB         SP, SP, #20 
    /*000143bc*/ MOV         R4, R0 
    /*000143c0*/ BEQ         VencGetRcSuperFrmCfg_x144dc
    VencGetRcSuperFrmCfg_x143c4:
    /*000143c4*/ CMP         R4, #0 
    /*000143c8*/ BLT         VencGetRcSuperFrmCfg_x1447c
    /*000143cc*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000143d0*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000143d4*/ LDR         R3, [R3] 
    /*000143d8*/ CMP         R4, R3 
    /*000143dc*/ BCS         VencGetRcSuperFrmCfg_x1447c
    VencGetRcSuperFrmCfg_x143e0:
    /*000143e0*/ MOVW        R5, #36240                  @ 0x8d90 
    /*000143e4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000143e8*/ MUL         R5, R5, R4 
    /*000143ec*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000143f0*/ LDR         R8, [R3] 
    /*000143f4*/ ADD         R9, R8, R5 
    /*000143f8*/ ADD         R7, R9, #12416              @ 0x3080 
    /*000143fc*/ ADD         R7, R7, #16 
    /*00014400*/ MOV         R0, R7 
    /*00014404*/ BL          0x0000000000014404          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00014408*/ CMP         R0, #0 
    /*0001440c*/ BNE         VencGetRcSuperFrmCfg_x14524
    /*00014410*/ LDR         R3, [R8, R5] 
    /*00014414*/ CMP         R3, #1 
    /*00014418*/ BNE         VencGetRcSuperFrmCfg_x144ec
    /*0001441c*/ LDR         R3, [R9, #4] 
    /*00014420*/ MOVW        R2, #265                    @ 0x109 
    /*00014424*/ CMP         R3, R2 
    /*00014428*/ BEQ         VencGetRcSuperFrmCfg_x14498
    /*0001442c*/ MOVW        R2, #1002                   @ 0x3ea 
    /*00014430*/ CMP         R3, R2 
    /*00014434*/ BEQ         VencGetRcSuperFrmCfg_x14498
    /*00014438*/ CMP         R3, #96                     @ 0x60 
    /*0001443c*/ BEQ         VencGetRcSuperFrmCfg_x14498
    /*00014440*/ STR         R3, [SP, #8] 
    /*00014444*/ MOV         R1, #8 
    /*00014448*/ MOVW        R3, #10740                  @ 0x29f4 
    /*0001444c*/ STR         R4, [SP, #4] 
    /*00014450*/ STR         R3, [SP] 
    /*00014454*/ MOVW        R2, #0                      @ .LC400 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5084] 
    /*00014458*/ LDR         R3, [PC, #208]              @ 0x0000000000014530 
    /*0001445c*/ MOVT        R2, #0                      @ .LC400 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5084] 
    /*00014460*/ MOV         R0, #3 
    /*00014464*/ MOVW        R5, #32776                  @ 0x8008 
    /*00014468*/ BL          0x0000000000014468          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001446c*/ MOV         R0, R7 
    /*00014470*/ BL          0x0000000000014470          @ osal_up [R_ARM_CALL: +0x0] 
    /*00014474*/ MOVT        R5, #40968                  @ 0xa008 
    /*00014478*/ B           VencGetRcSuperFrmCfg_x1448c
    VencGetRcSuperFrmCfg_x1447c:
    /*0001447c*/ MOV         R0, R4 
    /*00014480*/ BL          0x0000000000000304 
    /*00014484*/ SUBS        R5, R0, #0 
    /*00014488*/ BEQ         VencGetRcSuperFrmCfg_x143e0
    VencGetRcSuperFrmCfg_x1448c:
    /*0001448c*/ MOV         R0, R5 
    /*00014490*/ ADD         SP, SP, #20 
    /*00014494*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetRcSuperFrmCfg_x14498:
    /*00014498*/ MOV         R0, #19 
    /*0001449c*/ BL          0x000000000001449C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000144a0*/ MOV         R1, R6 
    /*000144a4*/ LDR         R3, [R0, #80]               @ 0x50 
    /*000144a8*/ MOV         R0, R4 
    /*000144ac*/ BLX         R3 
    /*000144b0*/ MOV         R5, R0 
    /*000144b4*/ MOV         R0, R7 
    /*000144b8*/ BL          0x00000000000144B8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000144bc*/ CMP         R5, #0 
    /*000144c0*/ BEQ         VencGetRcSuperFrmCfg_x1448c
    /*000144c4*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*000144c8*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*000144cc*/ ORR         R5, R5, #524288             @ 0x80000 
    /*000144d0*/ MOV         R0, R5 
    /*000144d4*/ ADD         SP, SP, #20 
    /*000144d8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetRcSuperFrmCfg_x144dc:
    /*000144dc*/ BL          0x00000000000002C8 
    /*000144e0*/ SUBS        R5, R0, #0 
    /*000144e4*/ BNE         VencGetRcSuperFrmCfg_x1448c
    /*000144e8*/ B           VencGetRcSuperFrmCfg_x143c4
    VencGetRcSuperFrmCfg_x144ec:
    /*000144ec*/ MOVW        R3, #10723                  @ 0x29e3 
    /*000144f0*/ MOV         R1, #8 
    /*000144f4*/ STR         R3, [SP] 
    /*000144f8*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*000144fc*/ LDR         R3, [PC, #44]               @ 0x0000000000014530 
    /*00014500*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00014504*/ STR         R4, [SP, #4] 
    /*00014508*/ MOV         R0, #3 
    /*0001450c*/ BL          0x000000000001450C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014510*/ MOV         R0, R7 
    /*00014514*/ MOVW        R5, #32773                  @ 0x8005 
    /*00014518*/ BL          0x0000000000014518          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001451c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00014520*/ B           VencGetRcSuperFrmCfg_x1448c
    VencGetRcSuperFrmCfg_x14524:
    /*00014524*/ MOV         R5, #65024                  @ 0xfe00 
    /*00014528*/ MOVT        R5, #65535                  @ 0xffff 
    /*0001452c*/ B           VencGetRcSuperFrmCfg_x1448c
    /*00014530*/ STRDEQ      R0, [R0], -R8 
FUNC_END VencGetRcSuperFrmCfg


FUNC_BEGIN VencGetGop
    /*00014534*/ LDR         R2, [R0] 
    /*00014538*/ SUB         R3, R2, #1 
    /*0001453c*/ CMP         R3, #16 
    /*00014540*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*00014544*/ B           VencGetGop_x1459c
    /*00014548*/ ANDEQ       R4, R1, IP, LSL #11 
    /*0001454c*/ ANDEQ       R4, R1, IP, LSL #11 
    /*00014550*/ ANDEQ       R4, R1, IP, LSL #11 
    /*00014554*/ ANDEQ       R4, R1, IP, LSL #11 
    /*00014558*/ ANDEQ       R4, R1, IP, LSL #11 
    /*0001455c*/ ANDEQ       R4, R1, IP, LSL #11 
    /*00014560*/ ANDEQ       R4, R1, IP, LSL #11 
    /*00014564*/ MULEQ       R1, IP, R5 
    /*00014568*/ MULEQ       R1, IP, R5 
    /*0001456c*/ MULEQ       R1, IP, R5 
    /*00014570*/ ANDEQ       R4, R1, IP, LSL #11 
    /*00014574*/ ANDEQ       R4, R1, IP, LSL #11 
    /*00014578*/ ANDEQ       R4, R1, IP, LSL #11 
    /*0001457c*/ ANDEQ       R4, R1, IP, LSL #11 
    /*00014580*/ ANDEQ       R4, R1, IP, LSL #11 
    /*00014584*/ ANDEQ       R4, R1, IP, LSL #11 
    /*00014588*/ ANDEQ       R4, R1, IP, LSL #11 
    /*0001458c*/ LDR         R3, [R0, #4] 
    /*00014590*/ MOV         R0, #0 
    /*00014594*/ STR         R3, [R1] 
    /*00014598*/ BX          LR 
    VencGetGop_x1459c:
    /*0001459c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000145a0*/ SUB         SP, SP, #12 
    /*000145a4*/ MOVW        R3, #10839                  @ 0x2a57 
    /*000145a8*/ MOV         R1, #8 
    /*000145ac*/ STR         R2, [SP, #4] 
    /*000145b0*/ MOV         R0, #3 
    /*000145b4*/ STR         R3, [SP] 
    /*000145b8*/ MOVW        R2, #0                      @ .LC401 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x50d8] 
    /*000145bc*/ LDR         R3, [PC, #20]               @ 0x00000000000145d8 
    /*000145c0*/ MOVT        R2, #0                      @ .LC401 [R_ARM_MOVT_ABS: .rodata.str1.4+0x50d8] 
    /*000145c4*/ BL          0x00000000000145C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000145c8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000145cc*/ MOVT        R0, #40968                  @ 0xa008 
    /*000145d0*/ ADD         SP, SP, #12 
    /*000145d4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000145d8*/ ANDEQ       R0, R0, R0, LSL SL 
FUNC_END VencGetGop


FUNC_BEGIN VencSetDeBreathEffect
    /*000145dc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000145e0*/ SUBS        R6, R1, #0 
    /*000145e4*/ SUB         SP, SP, #24 
    /*000145e8*/ MOV         R4, R0 
    /*000145ec*/ BEQ         VencSetDeBreathEffect_x147d0
    VencSetDeBreathEffect_x145f0:
    /*000145f0*/ CMP         R4, #0 
    /*000145f4*/ BLT         VencSetDeBreathEffect_x146f8
    /*000145f8*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000145fc*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00014600*/ LDR         R3, [R3] 
    /*00014604*/ CMP         R4, R3 
    /*00014608*/ BCS         VencSetDeBreathEffect_x146f8
    VencSetDeBreathEffect_x1460c:
    /*0001460c*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00014610*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00014614*/ MUL         R5, R5, R4 
    /*00014618*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001461c*/ LDR         R9, [R3] 
    /*00014620*/ ADD         R8, R9, R5 
    /*00014624*/ ADD         R7, R8, #12416              @ 0x3080 
    /*00014628*/ ADD         R7, R7, #16 
    /*0001462c*/ MOV         R0, R7 
    /*00014630*/ BL          0x0000000000014630          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00014634*/ SUBS        SL, R0, #0 
    /*00014638*/ BNE         VencSetDeBreathEffect_x148b0
    /*0001463c*/ LDR         R3, [R9, R5] 
    /*00014640*/ CMP         R3, #1 
    /*00014644*/ BNE         VencSetDeBreathEffect_x14854
    /*00014648*/ STR         R3, [SP, #20] 
    /*0001464c*/ BL          0x000000000001464C          @ VENC_DRV_IsSupportDeBreathEffect [R_ARM_CALL: .text+0x26a28] 
    /*00014650*/ CMP         R0, #1 
    /*00014654*/ MOVWNE      R3, #7691                   @ 0x1e0b 
    /*00014658*/ MOVWNE      R2, #0                      @ .LC342 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f40] 
    /*0001465c*/ STRNE       R3, [SP] 
    /*00014660*/ MOVTNE      R2, #0                      @ .LC342 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f40] 
    /*00014664*/ BNE         VencSetDeBreathEffect_x147ac
    /*00014668*/ LDR         R3, [R6] 
    /*0001466c*/ CMP         R3, #1 
    /*00014670*/ BHI         VencSetDeBreathEffect_x148bc
    /*00014674*/ ADDNE       R5, R8, #12288              @ 0x3000 
    /*00014678*/ ADDNE       R9, SP, #20 
    /*0001467c*/ BEQ         VencSetDeBreathEffect_x1476c
    VencSetDeBreathEffect_x14680:
    /*00014680*/ ADD         SL, R8, #64                 @ 0x40 
    /*00014684*/ MOV         R1, R9 
    /*00014688*/ MOV         R0, SL 
    /*0001468c*/ BL          0x000000000001468C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00014690*/ LDR         R3, [R5, #612]              @ 0x264 
    /*00014694*/ CMP         R3, #0 
    /*00014698*/ BNE         VencSetDeBreathEffect_x14734
    /*0001469c*/ LDR         R3, [R8, #4] 
    /*000146a0*/ CMP         R3, #96                     @ 0x60 
    /*000146a4*/ BEQ         VencSetDeBreathEffect_x14714
    /*000146a8*/ MOVW        R2, #265                    @ 0x109 
    /*000146ac*/ CMP         R3, R2 
    /*000146b0*/ BEQ         VencSetDeBreathEffect_x14714
    /*000146b4*/ MOVW        R3, #7817                   @ 0x1e89 
    /*000146b8*/ MOV         R1, #8 
    /*000146bc*/ STR         R3, [SP] 
    /*000146c0*/ MOVW        R2, #0                      @ .LC410 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x53c8] 
    /*000146c4*/ LDR         R3, [PC, #728]              @ 0x00000000000149a4 
    /*000146c8*/ MOVT        R2, #0                      @ .LC410 [R_ARM_MOVT_ABS: .rodata.str1.4+0x53c8] 
    /*000146cc*/ STR         R4, [SP, #4] 
    /*000146d0*/ MOV         R0, #3 
    /*000146d4*/ BL          0x00000000000146D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000146d8*/ MOV         R1, R9 
    /*000146dc*/ MOV         R0, SL 
    /*000146e0*/ MOVW        R5, #32776                  @ 0x8008 
    /*000146e4*/ BL          0x00000000000146E4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000146e8*/ MOV         R0, R7 
    /*000146ec*/ BL          0x00000000000146EC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000146f0*/ MOVT        R5, #40968                  @ 0xa008 
    /*000146f4*/ B           VencSetDeBreathEffect_x14708
    VencSetDeBreathEffect_x146f8:
    /*000146f8*/ MOV         R0, R4 
    /*000146fc*/ BL          0x0000000000000304 
    /*00014700*/ SUBS        R5, R0, #0 
    /*00014704*/ BEQ         VencSetDeBreathEffect_x1460c
    VencSetDeBreathEffect_x14708:
    /*00014708*/ MOV         R0, R5 
    /*0001470c*/ ADD         SP, SP, #24 
    /*00014710*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencSetDeBreathEffect_x14714:
    /*00014714*/ MOV         R0, #19 
    /*00014718*/ BL          0x0000000000014718          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001471c*/ MOV         R1, R6 
    /*00014720*/ LDR         R3, [R0, #112]              @ 0x70 
    /*00014724*/ MOV         R0, R4 
    /*00014728*/ BLX         R3 
    /*0001472c*/ SUBS        R5, R0, #0 
    /*00014730*/ BNE         VencSetDeBreathEffect_x1488c
    VencSetDeBreathEffect_x14734:
    /*00014734*/ ADD         R0, R8, #13312              @ 0x3400 
    /*00014738*/ MOV         R2, #12 
    /*0001473c*/ MOV         R1, R6 
    /*00014740*/ ADD         R0, R0, #20 
    /*00014744*/ BL          0x0000000000014744          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00014748*/ MOV         R1, R9 
    /*0001474c*/ MOV         R0, SL 
    /*00014750*/ MOV         R5, #0 
    /*00014754*/ BL          0x0000000000014754          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00014758*/ MOV         R0, R7 
    /*0001475c*/ BL          0x000000000001475C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00014760*/ MOV         R0, R5 
    /*00014764*/ ADD         SP, SP, #24 
    /*00014768*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencSetDeBreathEffect_x1476c:
    /*0001476c*/ LDR         R3, [R6, #4] 
    /*00014770*/ CMP         R3, #35                     @ 0x23 
    /*00014774*/ BHI         VencSetDeBreathEffect_x14928
    /*00014778*/ LDR         R3, [R6, #8] 
    /*0001477c*/ CMP         R3, #35                     @ 0x23 
    /*00014780*/ BHI         VencSetDeBreathEffect_x148ec
    /*00014784*/ LDR         R3, [R8, #4] 
    /*00014788*/ CMP         R3, #96                     @ 0x60 
    /*0001478c*/ BEQ         VencSetDeBreathEffect_x147e0
    /*00014790*/ MOVW        R2, #265                    @ 0x109 
    /*00014794*/ CMP         R3, R2 
    /*00014798*/ BEQ         VencSetDeBreathEffect_x147e0
    /*0001479c*/ MOVW        R2, #0                      @ .LC405 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5228] 
    /*000147a0*/ MOVT        R2, #0                      @ .LC405 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5228] 
    /*000147a4*/ MOVW        R3, #7732                   @ 0x1e34 
    /*000147a8*/ STR         R3, [SP] 
    VencSetDeBreathEffect_x147ac:
    /*000147ac*/ LDR         R3, [PC, #500]              @ 0x00000000000149a8 
    /*000147b0*/ MOV         R1, #8 
    /*000147b4*/ MOV         R0, #3 
    /*000147b8*/ MOVW        R5, #32776                  @ 0x8008 
    /*000147bc*/ BL          0x00000000000147BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000147c0*/ MOVT        R5, #40968                  @ 0xa008 
    VencSetDeBreathEffect_x147c4:
    /*000147c4*/ MOV         R0, R7 
    /*000147c8*/ BL          0x00000000000147C8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000147cc*/ B           VencSetDeBreathEffect_x14708
    VencSetDeBreathEffect_x147d0:
    /*000147d0*/ BL          0x00000000000002C8 
    /*000147d4*/ SUBS        R5, R0, #0 
    /*000147d8*/ BNE         VencSetDeBreathEffect_x14708
    /*000147dc*/ B           VencSetDeBreathEffect_x145f0
    VencSetDeBreathEffect_x147e0:
    /*000147e0*/ ADD         R5, R8, #12288              @ 0x3000 
    /*000147e4*/ LDR         R3, [R5, #648]              @ 0x288 
    /*000147e8*/ CMP         R3, #1 
    /*000147ec*/ BEQ         VencSetDeBreathEffect_x14990
    /*000147f0*/ LDR         R3, [R5, #1012]             @ 0x3f4 
    /*000147f4*/ CMP         R3, #1 
    /*000147f8*/ BEQ         VencSetDeBreathEffect_x14964
    /*000147fc*/ ADD         R9, SP, #20 
    /*00014800*/ ADD         R0, R8, #12928              @ 0x3280 
    /*00014804*/ ADD         R0, R0, #36                 @ 0x24 
    /*00014808*/ MOV         R1, R9 
    /*0001480c*/ BL          0x000000000001480C          @ VencGetGop [R_ARM_CALL: .text+0x14534] 
    /*00014810*/ CMP         R0, #0 
    /*00014814*/ BNE         VencSetDeBreathEffect_x1494c
    /*00014818*/ LDR         R3, [SP, #20] 
    /*0001481c*/ CMP         R3, #1 
    /*00014820*/ BNE         VencSetDeBreathEffect_x14680
    /*00014824*/ MOVW        R2, #0                      @ .LC409 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5374] 
    /*00014828*/ MOVT        R2, #0                      @ .LC409 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5374] 
    /*0001482c*/ MOVW        R3, #7758                   @ 0x1e4e 
    /*00014830*/ STR         R4, [SP, #4] 
    /*00014834*/ STR         R3, [SP] 
    VencSetDeBreathEffect_x14838:
    /*00014838*/ LDR         R3, [PC, #360]              @ 0x00000000000149a8 
    /*0001483c*/ MOV         R1, #8 
    /*00014840*/ MOV         R0, #3 
    /*00014844*/ MOVW        R5, #32777                  @ 0x8009 
    /*00014848*/ BL          0x0000000000014848          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001484c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00014850*/ B           VencSetDeBreathEffect_x147c4
    VencSetDeBreathEffect_x14854:
    /*00014854*/ MOVW        R3, #7785                   @ 0x1e69 
    /*00014858*/ MOV         R1, #8 
    /*0001485c*/ STR         R3, [SP] 
    /*00014860*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00014864*/ LDR         R3, [PC, #312]              @ 0x00000000000149a4 
    /*00014868*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001486c*/ STR         R4, [SP, #4] 
    /*00014870*/ MOV         R0, #3 
    /*00014874*/ BL          0x0000000000014874          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014878*/ MOV         R0, R7 
    /*0001487c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00014880*/ BL          0x0000000000014880          @ osal_up [R_ARM_CALL: +0x0] 
    /*00014884*/ MOVT        R5, #40968                  @ 0xa008 
    /*00014888*/ B           VencSetDeBreathEffect_x14708
    VencSetDeBreathEffect_x1488c:
    /*0001488c*/ MOV         R1, R9 
    /*00014890*/ MOV         R0, SL 
    /*00014894*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00014898*/ BL          0x0000000000014898          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001489c*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*000148a0*/ MOV         R0, R7 
    /*000148a4*/ BL          0x00000000000148A4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000148a8*/ ORR         R5, R5, #524288             @ 0x80000 
    /*000148ac*/ B           VencSetDeBreathEffect_x14708
    VencSetDeBreathEffect_x148b0:
    /*000148b0*/ MOV         R5, #65024                  @ 0xfe00 
    /*000148b4*/ MOVT        R5, #65535                  @ 0xffff 
    /*000148b8*/ B           VencSetDeBreathEffect_x14708
    VencSetDeBreathEffect_x148bc:
    /*000148bc*/ STR         R3, [SP, #4] 
    /*000148c0*/ MOVW        R2, #0                      @ .LC402 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5110] 
    /*000148c4*/ MOVW        R3, #7698                   @ 0x1e12 
    /*000148c8*/ MOVT        R2, #0                      @ .LC402 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5110] 
    /*000148cc*/ STR         R3, [SP] 
    /*000148d0*/ MOV         R1, #8 
    /*000148d4*/ LDR         R3, [PC, #204]              @ 0x00000000000149a8 
    /*000148d8*/ MOV         R0, #3 
    /*000148dc*/ MOVW        R5, #32771                  @ 0x8003 
    /*000148e0*/ BL          0x00000000000148E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000148e4*/ MOVT        R5, #40968                  @ 0xa008 
    /*000148e8*/ B           VencSetDeBreathEffect_x147c4
    VencSetDeBreathEffect_x148ec:
    /*000148ec*/ MOV         R2, #35                     @ 0x23 
    /*000148f0*/ STR         R2, [SP, #12] 
    /*000148f4*/ MOVW        R2, #0                      @ .LC404 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x51c8] 
    /*000148f8*/ MOVT        R2, #0                      @ .LC404 [R_ARM_MOVT_ABS: .rodata.str1.4+0x51c8] 
    /*000148fc*/ STR         R3, [SP, #4] 
    /*00014900*/ MOVW        R3, #7714                   @ 0x1e22 
    /*00014904*/ STR         SL, [SP, #8] 
    /*00014908*/ STR         R3, [SP] 
    VencSetDeBreathEffect_x1490c:
    /*0001490c*/ LDR         R3, [PC, #148]              @ 0x00000000000149a8 
    /*00014910*/ MOV         R1, #8 
    /*00014914*/ MOV         R0, #3 
    /*00014918*/ MOVW        R5, #32771                  @ 0x8003 
    /*0001491c*/ BL          0x000000000001491C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014920*/ MOVT        R5, #40968                  @ 0xa008 
    /*00014924*/ B           VencSetDeBreathEffect_x147c4
    VencSetDeBreathEffect_x14928:
    /*00014928*/ MOV         R2, #35                     @ 0x23 
    /*0001492c*/ STR         R3, [SP, #4] 
    /*00014930*/ STR         R2, [SP, #12] 
    /*00014934*/ MOVW        R3, #7707                   @ 0x1e1b 
    /*00014938*/ MOVW        R2, #0                      @ .LC403 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5168] 
    /*0001493c*/ STR         SL, [SP, #8] 
    /*00014940*/ STR         R3, [SP] 
    /*00014944*/ MOVT        R2, #0                      @ .LC403 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5168] 
    /*00014948*/ B           VencSetDeBreathEffect_x1490c
    VencSetDeBreathEffect_x1494c:
    /*0001494c*/ MOVW        R3, #7752                   @ 0x1e48 
    /*00014950*/ MOVW        R2, #0                      @ .LC408 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x533c] 
    /*00014954*/ STR         R4, [SP, #4] 
    /*00014958*/ MOVT        R2, #0                      @ .LC408 [R_ARM_MOVT_ABS: .rodata.str1.4+0x533c] 
    /*0001495c*/ STR         R3, [SP] 
    /*00014960*/ B           VencSetDeBreathEffect_x14838
    VencSetDeBreathEffect_x14964:
    /*00014964*/ MOVW        R2, #0                      @ .LC407 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x52e4] 
    /*00014968*/ MOVT        R2, #0                      @ .LC407 [R_ARM_MOVT_ABS: .rodata.str1.4+0x52e4] 
    /*0001496c*/ MOVW        R3, #7745                   @ 0x1e41 
    /*00014970*/ STR         R3, [SP] 
    VencSetDeBreathEffect_x14974:
    /*00014974*/ LDR         R3, [PC, #44]               @ 0x00000000000149a8 
    /*00014978*/ MOV         R1, #8 
    /*0001497c*/ MOV         R0, #3 
    /*00014980*/ MOVW        R5, #32777                  @ 0x8009 
    /*00014984*/ BL          0x0000000000014984          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014988*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001498c*/ B           VencSetDeBreathEffect_x147c4
    VencSetDeBreathEffect_x14990:
    /*00014990*/ MOVW        R3, #7739                   @ 0x1e3b 
    /*00014994*/ MOVW        R2, #0                      @ .LC406 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5284] 
    /*00014998*/ STR         R3, [SP] 
    /*0001499c*/ MOVT        R2, #0                      @ .LC406 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5284] 
    /*000149a0*/ B           VencSetDeBreathEffect_x14974
    /*000149a4*/ ANDEQ       R0, R0, IP, LSL SL 
    /*000149a8*/ ANDEQ       R0, R0, R4, LSR SL 
FUNC_END VencSetDeBreathEffect


FUNC_BEGIN VencGetDstFrameRate
    /*000149ac*/ LDR         R2, [R0] 
    /*000149b0*/ SUB         R3, R2, #1 
    /*000149b4*/ CMP         R3, #16 
    /*000149b8*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*000149bc*/ B           VencGetDstFrameRate_x14a24
    /*000149c0*/ ANDEQ       R4, R1, R4, LSL #20 
    /*000149c4*/ ANDEQ       R4, R1, R4, LSL #20 
    /*000149c8*/ ANDEQ       R4, R1, R4, LSL #20 
    /*000149cc*/ ANDEQ       R4, R1, R4, LSL #20 
    /*000149d0*/ ANDEQ       R4, R1, R4, LSL #20 
    /*000149d4*/ ANDEQ       R4, R1, R4, LSL SL 
    /*000149d8*/ ANDEQ       R4, R1, R4, LSL #20 
    /*000149dc*/ ANDEQ       R4, R1, R4, LSR #20 
    /*000149e0*/ ANDEQ       R4, R1, R4, LSR #20 
    /*000149e4*/ ANDEQ       R4, R1, R4, LSR #20 
    /*000149e8*/ ANDEQ       R4, R1, R4, LSL #20 
    /*000149ec*/ ANDEQ       R4, R1, R4, LSL #20 
    /*000149f0*/ ANDEQ       R4, R1, R4, LSL #20 
    /*000149f4*/ ANDEQ       R4, R1, R4, LSL #20 
    /*000149f8*/ ANDEQ       R4, R1, R4, LSL #20 
    /*000149fc*/ ANDEQ       R4, R1, R4, LSL SL 
    /*00014a00*/ ANDEQ       R4, R1, R4, LSL #20 
    /*00014a04*/ LDR         R3, [R0, #16] 
    /*00014a08*/ MOV         R0, #0 
    /*00014a0c*/ STR         R3, [R1] 
    /*00014a10*/ BX          LR 
    /*00014a14*/ LDR         R3, [R0, #12] 
    /*00014a18*/ MOV         R0, #0 
    /*00014a1c*/ STR         R3, [R1] 
    /*00014a20*/ BX          LR 
    VencGetDstFrameRate_x14a24:
    /*00014a24*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00014a28*/ SUB         SP, SP, #12 
    /*00014a2c*/ MOVW        R3, #10938                  @ 0x2aba 
    /*00014a30*/ MOV         R1, #8 
    /*00014a34*/ STR         R2, [SP, #4] 
    /*00014a38*/ MOV         R0, #3 
    /*00014a3c*/ STR         R3, [SP] 
    /*00014a40*/ MOVW        R2, #0                      @ .LC401 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x50d8] 
    /*00014a44*/ LDR         R3, [PC, #20]               @ 0x0000000000014a60 
    /*00014a48*/ MOVT        R2, #0                      @ .LC401 [R_ARM_MOVT_ABS: .rodata.str1.4+0x50d8] 
    /*00014a4c*/ BL          0x0000000000014A4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014a50*/ MOVW        R0, #32771                  @ 0x8003 
    /*00014a54*/ MOVT        R0, #40968                  @ 0xa008 
    /*00014a58*/ ADD         SP, SP, #12 
    /*00014a5c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00014a60*/ ANDEQ       R0, R0, IP, ASR #20 
FUNC_END VencGetDstFrameRate


FUNC_BEGIN VencCheckChnAttr
    /*00014a64*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00014a68*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00014a6c*/ SUB         SP, SP, #24 
    /*00014a70*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00014a74*/ MOV         R7, R0 
    /*00014a78*/ MOV         R0, R1 
    /*00014a7c*/ MOV         R4, R1 
    /*00014a80*/ MOV         R8, R3 
    /*00014a84*/ LDR         SL, [R5] 
    /*00014a88*/ MOV         R3, #1 
    /*00014a8c*/ STR         R3, [SP, #20] 
    /*00014a90*/ BL          0x0000000000006374 
    /*00014a94*/ SUBS        R6, R0, #0 
    /*00014a98*/ BNE         VencCheckChnAttr_x14bd0
    /*00014a9c*/ ADD         R9, R4, #100                @ 0x64 
    /*00014aa0*/ LDR         R2, [R4] 
    /*00014aa4*/ MOV         R0, R7 
    /*00014aa8*/ MOV         R1, R9 
    /*00014aac*/ BL          0x000000000000035C 
    /*00014ab0*/ SUBS        R6, R0, #0 
    /*00014ab4*/ BNE         VencCheckChnAttr_x14ba4
    /*00014ab8*/ LDR         R1, [R4] 
    /*00014abc*/ LDR         R0, [R4, #60]               @ 0x3c 
    /*00014ac0*/ BL          0x000000000000002C 
    /*00014ac4*/ SUBS        R6, R0, #0 
    /*00014ac8*/ BNE         VencCheckChnAttr_x14c38
    /*00014acc*/ CMP         R4, #0 
    /*00014ad0*/ BEQ         VencCheckChnAttr_x14e10
    VencCheckChnAttr_x14ad4:
    /*00014ad4*/ CMP         R7, #0 
    /*00014ad8*/ BLT         VencCheckChnAttr_x14bfc
    /*00014adc*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00014ae0*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00014ae4*/ LDR         R3, [R3] 
    /*00014ae8*/ CMP         R7, R3 
    /*00014aec*/ BCS         VencCheckChnAttr_x14bfc
    VencCheckChnAttr_x14af0:
    /*00014af0*/ MOVW        R3, #36240                  @ 0x8d90 
    /*00014af4*/ LDR         R2, [R5] 
    /*00014af8*/ MUL         R5, R3, R7 
    /*00014afc*/ LDR         R1, [R4] 
    /*00014b00*/ ADD         R3, R2, R5 
    /*00014b04*/ LDR         R2, [R3, #4] 
    /*00014b08*/ CMP         R1, R2 
    /*00014b0c*/ BNE         VencCheckChnAttr_x14e20
    /*00014b10*/ LDR         R3, [R3, #28] 
    /*00014b14*/ LDR         R2, [R4, #20] 
    /*00014b18*/ CMP         R2, R3 
    /*00014b1c*/ BNE         VencCheckChnAttr_x14e58
    /*00014b20*/ ADD         R5, SL, R5 
    /*00014b24*/ MOVW        R6, #265                    @ 0x109 
    /*00014b28*/ ADD         SL, R4, #60                 @ 0x3c 
    /*00014b2c*/ LDR         R3, [R5, #4] 
    /*00014b30*/ CMP         R3, R6 
    /*00014b34*/ CMPNE       R3, #96                     @ 0x60 
    /*00014b38*/ MOVNE       R2, #0 
    /*00014b3c*/ MOVEQ       R2, #1 
    /*00014b40*/ MOVNE       R6, R2 
    /*00014b44*/ BEQ         VencCheckChnAttr_x14cf8
    VencCheckChnAttr_x14b48:
    /*00014b48*/ ORR         R6, R6, R2 
    /*00014b4c*/ MOVW        R2, #1002                   @ 0x3ea 
    /*00014b50*/ CMP         R3, R2 
    /*00014b54*/ ORREQ       R6, R6, #1 
    /*00014b58*/ CMP         R6, #0 
    /*00014b5c*/ BNE         VencCheckChnAttr_x14c64
    VencCheckChnAttr_x14b60:
    /*00014b60*/ MOVW        R2, #265                    @ 0x109 
    /*00014b64*/ CMP         R3, R2 
    /*00014b68*/ BEQ         VencCheckChnAttr_x14d98
    /*00014b6c*/ BHI         VencCheckChnAttr_x14c90
    /*00014b70*/ CMP         R3, #26 
    /*00014b74*/ BEQ         VencCheckChnAttr_x14d78
    /*00014b78*/ CMP         R3, #96                     @ 0x60 
    /*00014b7c*/ BNE         VencCheckChnAttr_x14dbc
    /*00014b80*/ MOV         R0, #10 
    /*00014b84*/ BL          0x0000000000014B84          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00014b88*/ MOV         R2, R9 
    /*00014b8c*/ MOV         R1, R4 
    /*00014b90*/ LDR         R3, [R0, #184]              @ 0xb8 
    /*00014b94*/ MOV         R0, R7 
    /*00014b98*/ BLX         R3 
    /*00014b9c*/ MOV         R6, R0 
    /*00014ba0*/ B           VencCheckChnAttr_x14cc4
    VencCheckChnAttr_x14ba4:
    /*00014ba4*/ MOVW        R3, #10971                  @ 0x2adb 
    /*00014ba8*/ MOVW        R2, #0                      @ .LC412 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x545c] 
    /*00014bac*/ STR         R3, [SP] 
    /*00014bb0*/ MOVT        R2, #0                      @ .LC412 [R_ARM_MOVT_ABS: .rodata.str1.4+0x545c] 
    /*00014bb4*/ LDR         R3, [PC, #720]              @ 0x0000000000014e8c 
    /*00014bb8*/ MOV         R1, #8 
    /*00014bbc*/ MOV         R0, #3 
    /*00014bc0*/ BL          0x0000000000014BC0          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencCheckChnAttr_x14bc4:
    /*00014bc4*/ MOV         R0, R6 
    /*00014bc8*/ ADD         SP, SP, #24 
    /*00014bcc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencCheckChnAttr_x14bd0:
    /*00014bd0*/ MOVW        R3, #10964                  @ 0x2ad4 
    /*00014bd4*/ MOV         R1, #8 
    /*00014bd8*/ STR         R3, [SP] 
    /*00014bdc*/ MOVW        R2, #0                      @ .LC411 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5428] 
    /*00014be0*/ LDR         R3, [PC, #676]              @ 0x0000000000014e8c 
    /*00014be4*/ MOVT        R2, #0                      @ .LC411 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5428] 
    /*00014be8*/ MOV         R0, #3 
    /*00014bec*/ BL          0x0000000000014BEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014bf0*/ MOV         R0, R6 
    /*00014bf4*/ ADD         SP, SP, #24 
    /*00014bf8*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencCheckChnAttr_x14bfc:
    /*00014bfc*/ MOV         R0, R7 
    /*00014c00*/ BL          0x0000000000000304 
    /*00014c04*/ SUBS        R6, R0, #0 
    /*00014c08*/ BEQ         VencCheckChnAttr_x14af0
    VencCheckChnAttr_x14c0c:
    /*00014c0c*/ MOVW        R3, #10985                  @ 0x2ae9 
    /*00014c10*/ MOV         R1, #8 
    /*00014c14*/ STR         R3, [SP] 
    /*00014c18*/ MOVW        R2, #0                      @ .LC420 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x568c] 
    /*00014c1c*/ LDR         R3, [PC, #616]              @ 0x0000000000014e8c 
    /*00014c20*/ MOVT        R2, #0                      @ .LC420 [R_ARM_MOVT_ABS: .rodata.str1.4+0x568c] 
    /*00014c24*/ MOV         R0, #3 
    /*00014c28*/ BL          0x0000000000014C28          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014c2c*/ MOV         R0, R6 
    /*00014c30*/ ADD         SP, SP, #24 
    /*00014c34*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencCheckChnAttr_x14c38:
    /*00014c38*/ MOVW        R3, #10978                  @ 0x2ae2 
    /*00014c3c*/ MOV         R1, #8 
    /*00014c40*/ STR         R3, [SP] 
    /*00014c44*/ MOVW        R2, #0                      @ .LC413 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5494] 
    /*00014c48*/ LDR         R3, [PC, #572]              @ 0x0000000000014e8c 
    /*00014c4c*/ MOVT        R2, #0                      @ .LC413 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5494] 
    /*00014c50*/ MOV         R0, #3 
    /*00014c54*/ BL          0x0000000000014C54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014c58*/ MOV         R0, R6 
    /*00014c5c*/ ADD         SP, SP, #24 
    /*00014c60*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencCheckChnAttr_x14c64:
    /*00014c64*/ MOV         R0, #19 
    /*00014c68*/ BL          0x0000000000014C68          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00014c6c*/ MOV         R1, SL 
    /*00014c70*/ MOV         R2, R9 
    /*00014c74*/ LDR         R3, [R0, #36]               @ 0x24 
    /*00014c78*/ MOV         R0, R7 
    /*00014c7c*/ BLX         R3 
    /*00014c80*/ SUBS        R6, R0, #0 
    /*00014c84*/ BNE         VencCheckChnAttr_x14dec
    /*00014c88*/ LDR         R3, [R5, #4] 
    /*00014c8c*/ B           VencCheckChnAttr_x14b60
    VencCheckChnAttr_x14c90:
    /*00014c90*/ MOVW        R2, #1002                   @ 0x3ea 
    /*00014c94*/ CMP         R3, R2 
    /*00014c98*/ BEQ         VencCheckChnAttr_x14d78
    /*00014c9c*/ MOVW        R2, #1006                   @ 0x3ee 
    /*00014ca0*/ CMP         R3, R2 
    /*00014ca4*/ BNE         VencCheckChnAttr_x14dbc
    /*00014ca8*/ MOV         R0, #44                     @ 0x2c 
    /*00014cac*/ BL          0x0000000000014CAC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00014cb0*/ MOV         R1, R4 
    /*00014cb4*/ LDR         R3, [R0, #48]               @ 0x30 
    /*00014cb8*/ MOV         R0, R7 
    /*00014cbc*/ BLX         R3 
    /*00014cc0*/ MOV         R6, R0 
    VencCheckChnAttr_x14cc4:
    /*00014cc4*/ CMP         R6, #0 
    /*00014cc8*/ BEQ         VencCheckChnAttr_x14bc4
    VencCheckChnAttr_x14ccc:
    /*00014ccc*/ MOVW        R3, #11037                  @ 0x2b1d 
    /*00014cd0*/ STR         R7, [SP, #8] 
    /*00014cd4*/ STR         R3, [SP] 
    /*00014cd8*/ MOVW        R2, #0                      @ .LC419 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5648] 
    /*00014cdc*/ STR         R6, [SP, #4] 
    /*00014ce0*/ MOVT        R2, #0                      @ .LC419 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5648] 
    /*00014ce4*/ LDR         R3, [PC, #416]              @ 0x0000000000014e8c 
    /*00014ce8*/ MOV         R1, #8 
    /*00014cec*/ MOV         R0, #3 
    /*00014cf0*/ BL          0x0000000000014CF0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014cf4*/ B           VencCheckChnAttr_x14bc4
    VencCheckChnAttr_x14cf8:
    /*00014cf8*/ ADD         R1, SP, #20 
    /*00014cfc*/ MOV         R0, SL 
    /*00014d00*/ BL          0x0000000000014D00          @ VencGetGop [R_ARM_CALL: .text+0x14534] 
    /*00014d04*/ CMP         R0, #0 
    /*00014d08*/ BNE         VencCheckChnAttr_x14d58
    /*00014d0c*/ ADD         R3, R5, #12288              @ 0x3000 
    /*00014d10*/ LDR         R3, [R3, #1044]             @ 0x414 
    /*00014d14*/ CMP         R3, #1 
    /*00014d18*/ BNE         VencCheckChnAttr_x14d58
    /*00014d1c*/ LDR         R3, [SP, #20] 
    /*00014d20*/ CMP         R3, #1 
    /*00014d24*/ BNE         VencCheckChnAttr_x14d58
    /*00014d28*/ MOVW        R3, #10996                  @ 0x2af4 
    /*00014d2c*/ STR         R7, [SP, #4] 
    /*00014d30*/ STR         R3, [SP] 
    /*00014d34*/ MOVW        R2, #0                      @ .LC416 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x557c] 
    /*00014d38*/ LDR         R3, [PC, #332]              @ 0x0000000000014e8c 
    /*00014d3c*/ MOVT        R2, #0                      @ .LC416 [R_ARM_MOVT_ABS: .rodata.str1.4+0x557c] 
    /*00014d40*/ MOV         R1, #8 
    /*00014d44*/ MOV         R0, #3 
    /*00014d48*/ MOVW        R6, #32771                  @ 0x8003 
    /*00014d4c*/ BL          0x0000000000014D4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014d50*/ MOVT        R6, #40968                  @ 0xa008 
    /*00014d54*/ B           VencCheckChnAttr_x14bc4
    VencCheckChnAttr_x14d58:
    /*00014d58*/ LDR         R3, [R5, #4] 
    /*00014d5c*/ SUB         R6, R3, R6 
    /*00014d60*/ SUB         R2, R3, #96                 @ 0x60 
    /*00014d64*/ CLZ         R6, R6 
    /*00014d68*/ CLZ         R2, R2 
    /*00014d6c*/ LSR         R6, R6, #5 
    /*00014d70*/ LSR         R2, R2, #5 
    /*00014d74*/ B           VencCheckChnAttr_x14b48
    VencCheckChnAttr_x14d78:
    /*00014d78*/ MOV         R0, #11 
    /*00014d7c*/ BL          0x0000000000014D7C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00014d80*/ MOV         R1, R8 
    /*00014d84*/ LDR         R3, [R0, #96]               @ 0x60 
    /*00014d88*/ MOV         R0, R7 
    /*00014d8c*/ BLX         R3 
    /*00014d90*/ MOV         R6, R0 
    /*00014d94*/ B           VencCheckChnAttr_x14cc4
    VencCheckChnAttr_x14d98:
    /*00014d98*/ MOV         R0, #13 
    /*00014d9c*/ BL          0x0000000000014D9C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00014da0*/ MOV         R2, R9 
    /*00014da4*/ MOV         R1, R4 
    /*00014da8*/ LDR         R3, [R0, #180]              @ 0xb4 
    /*00014dac*/ MOV         R0, R7 
    /*00014db0*/ BLX         R3 
    /*00014db4*/ MOV         R6, R0 
    /*00014db8*/ B           VencCheckChnAttr_x14cc4
    VencCheckChnAttr_x14dbc:
    /*00014dbc*/ STR         R3, [SP, #4] 
    /*00014dc0*/ MOVW        R2, #0                      @ .LC418 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5610] 
    /*00014dc4*/ MOVW        R3, #11030                  @ 0x2b16 
    /*00014dc8*/ MOVT        R2, #0                      @ .LC418 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5610] 
    /*00014dcc*/ STR         R3, [SP] 
    /*00014dd0*/ MOV         R1, #8 
    /*00014dd4*/ LDR         R3, [PC, #176]              @ 0x0000000000014e8c 
    /*00014dd8*/ MOV         R0, #3 
    /*00014ddc*/ MOVW        R6, #32776                  @ 0x8008 
    /*00014de0*/ BL          0x0000000000014DE0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014de4*/ MOVT        R6, #40968                  @ 0xa008 
    /*00014de8*/ B           VencCheckChnAttr_x14ccc
    VencCheckChnAttr_x14dec:
    /*00014dec*/ MOV         R3, #11008                  @ 0x2b00 
    /*00014df0*/ MOVW        R2, #0                      @ .LC417 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x55dc] 
    /*00014df4*/ STR         R3, [SP] 
    /*00014df8*/ MOVT        R2, #0                      @ .LC417 [R_ARM_MOVT_ABS: .rodata.str1.4+0x55dc] 
    /*00014dfc*/ LDR         R3, [PC, #136]              @ 0x0000000000014e8c 
    /*00014e00*/ MOV         R1, #8 
    /*00014e04*/ MOV         R0, #3 
    /*00014e08*/ BL          0x0000000000014E08          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014e0c*/ B           VencCheckChnAttr_x14bc4
    VencCheckChnAttr_x14e10:
    /*00014e10*/ BL          0x00000000000002C8 
    /*00014e14*/ SUBS        R6, R0, #0 
    /*00014e18*/ BNE         VencCheckChnAttr_x14c0c
    /*00014e1c*/ B           VencCheckChnAttr_x14ad4
    VencCheckChnAttr_x14e20:
    /*00014e20*/ STR         R1, [SP, #12] 
    /*00014e24*/ MOVW        R3, #3833                   @ 0xef9 
    /*00014e28*/ STR         R2, [SP, #8] 
    /*00014e2c*/ MOV         R1, #8 
    /*00014e30*/ STR         R3, [SP] 
    /*00014e34*/ MOVW        R2, #0                      @ .LC414 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x54cc] 
    /*00014e38*/ STR         R7, [SP, #4] 
    /*00014e3c*/ MOVT        R2, #0                      @ .LC414 [R_ARM_MOVT_ABS: .rodata.str1.4+0x54cc] 
    /*00014e40*/ LDR         R3, [PC, #72]               @ 0x0000000000014e90 
    /*00014e44*/ MOV         R0, #3 
    /*00014e48*/ MOVW        R6, #32777                  @ 0x8009 
    /*00014e4c*/ BL          0x0000000000014E4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014e50*/ MOVT        R6, #40968                  @ 0xa008 
    /*00014e54*/ B           VencCheckChnAttr_x14c0c
    VencCheckChnAttr_x14e58:
    /*00014e58*/ STR         R1, [SP, #8] 
    /*00014e5c*/ MOV         R3, #3840                   @ 0xf00 
    /*00014e60*/ STR         R7, [SP, #4] 
    /*00014e64*/ MOVW        R2, #0                      @ .LC415 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x551c] 
    /*00014e68*/ STR         R3, [SP] 
    /*00014e6c*/ MOVT        R2, #0                      @ .LC415 [R_ARM_MOVT_ABS: .rodata.str1.4+0x551c] 
    /*00014e70*/ LDR         R3, [PC, #24]               @ 0x0000000000014e90 
    /*00014e74*/ MOV         R1, #8 
    /*00014e78*/ MOV         R0, #3 
    /*00014e7c*/ MOVW        R6, #32777                  @ 0x8009 
    /*00014e80*/ BL          0x0000000000014E80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014e84*/ MOVT        R6, #40968                  @ 0xa008 
    /*00014e88*/ B           VencCheckChnAttr_x14c0c
    /*00014e8c*/ ANDEQ       R0, R0, R0, ROR #20 
    /*00014e90*/ ANDEQ       R0, R0, R4, ROR SL 
FUNC_END VencCheckChnAttr


FUNC_BEGIN VencStopSchedule
    /*00014e94*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00014e98*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00014e9c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00014ea0*/ MOV         R5, R0 
    /*00014ea4*/ LDR         R3, [R3] 
    /*00014ea8*/ SUB         SP, SP, #36                 @ 0x24 
    /*00014eac*/ MOVW        R6, #36240                  @ 0x8d90 
    /*00014eb0*/ MOV         R0, #4 
    /*00014eb4*/ MOV         R7, R1 
    /*00014eb8*/ MLA         R6, R6, R5, R3 
    /*00014ebc*/ BL          0x0000000000014EBC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00014ec0*/ MOV         R1, R5 
    /*00014ec4*/ LDR         R3, [R0, #16] 
    /*00014ec8*/ MOV         R0, R7 
    /*00014ecc*/ BLX         R3 
    /*00014ed0*/ SUBS        R4, R0, #0 
    /*00014ed4*/ BNE         VencStopSchedule_x14ff4
    /*00014ed8*/ LDR         R3, [R6, #4] 
    /*00014edc*/ MOVW        R2, #265                    @ 0x109 
    /*00014ee0*/ CMP         R3, R2 
    /*00014ee4*/ BEQ         VencStopSchedule_x1506c
    /*00014ee8*/ BHI         VencStopSchedule_x14f9c
    /*00014eec*/ CMP         R3, #26 
    /*00014ef0*/ BEQ         VencStopSchedule_x1502c
    /*00014ef4*/ CMP         R3, #96                     @ 0x60 
    /*00014ef8*/ MOVEQ       R0, #10 
    /*00014efc*/ BNE         VencStopSchedule_x15060
    VencStopSchedule_x14f00:
    /*00014f00*/ BL          0x0000000000014F00          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00014f04*/ MOV         R1, R4 
    /*00014f08*/ LDR         R3, [R0, #8] 
    /*00014f0c*/ MOV         R0, R5 
    /*00014f10*/ BLX         R3 
    /*00014f14*/ MOV         R4, R0 
    /*00014f18*/ MOV         R0, #19 
    /*00014f1c*/ BL          0x0000000000014F1C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00014f20*/ LDR         R3, [R0, #8] 
    /*00014f24*/ MOV         R0, R5 
    /*00014f28*/ BLX         R3 
    /*00014f2c*/ ORR         R4, R4, R0 
    VencStopSchedule_x14f30:
    /*00014f30*/ CMP         R4, #0 
    /*00014f34*/ BNE         VencStopSchedule_x14fd8
    VencStopSchedule_x14f38:
    /*00014f38*/ MOV         R0, #4 
    /*00014f3c*/ BL          0x0000000000014F3C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00014f40*/ MOV         R1, R5 
    /*00014f44*/ LDR         R3, [R0, #20] 
    /*00014f48*/ MOV         R0, R7 
    /*00014f4c*/ BLX         R3 
    /*00014f50*/ SUBS        R4, R0, #0 
    /*00014f54*/ BNE         VencStopSchedule_x15074
    /*00014f58*/ ADD         R3, R6, #12288              @ 0x3000 
    /*00014f5c*/ LDR         R3, [R3, #180]              @ 0xb4 
    /*00014f60*/ CMP         R3, #1 
    /*00014f64*/ BNE         VencStopSchedule_x15020
    /*00014f68*/ MOV         R0, #45                     @ 0x2d 
    /*00014f6c*/ BL          0x0000000000014F6C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00014f70*/ CMP         R0, #0 
    /*00014f74*/ BEQ         VencStopSchedule_x15020
    /*00014f78*/ MOV         R0, #45                     @ 0x2d 
    /*00014f7c*/ BL          0x0000000000014F7C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00014f80*/ LDR         R2, [R6, #56]               @ 0x38 
    /*00014f84*/ ADD         R3, SP, #24 
    /*00014f88*/ MOV         R1, R4 
    /*00014f8c*/ LDR         R5, [R0, #8] 
    /*00014f90*/ MOV         R0, #8 
    /*00014f94*/ BLX         R5 
    /*00014f98*/ B           VencStopSchedule_x15020
    VencStopSchedule_x14f9c:
    /*00014f9c*/ MOVW        R2, #1002                   @ 0x3ea 
    /*00014fa0*/ CMP         R3, R2 
    /*00014fa4*/ BEQ         VencStopSchedule_x15058
    /*00014fa8*/ MOVW        R2, #1006                   @ 0x3ee 
    /*00014fac*/ CMP         R3, R2 
    /*00014fb0*/ BNE         VencStopSchedule_x15060
    /*00014fb4*/ MOV         R0, #44                     @ 0x2c 
    /*00014fb8*/ BL          0x0000000000014FB8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00014fbc*/ MOV         R1, R4 
    /*00014fc0*/ LDR         R3, [R0, #36]               @ 0x24 
    /*00014fc4*/ MOV         R0, R5 
    /*00014fc8*/ BLX         R3 
    /*00014fcc*/ MOV         R4, R0 
    /*00014fd0*/ CMP         R4, #0 
    /*00014fd4*/ BEQ         VencStopSchedule_x14f38
    VencStopSchedule_x14fd8:
    /*00014fd8*/ MOVW        R2, #0                      @ .LC422 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x570c] 
    /*00014fdc*/ STR         R5, [SP, #12] 
    /*00014fe0*/ MOVW        R3, #11096                  @ 0x2b58 
    /*00014fe4*/ STR         R7, [SP, #8] 
    /*00014fe8*/ STR         R4, [SP, #4] 
    /*00014fec*/ MOVT        R2, #0                      @ .LC422 [R_ARM_MOVT_ABS: .rodata.str1.4+0x570c] 
    /*00014ff0*/ B           VencStopSchedule_x1500c
    VencStopSchedule_x14ff4:
    /*00014ff4*/ MOVW        R2, #0                      @ .LC327 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b1c] 
    /*00014ff8*/ MOVT        R2, #0                      @ .LC327 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b1c] 
    /*00014ffc*/ MOVW        R3, #11056                  @ 0x2b30 
    /*00015000*/ STR         R5, [SP, #12] 
    /*00015004*/ STR         R7, [SP, #8] 
    /*00015008*/ STR         R4, [SP, #4] 
    VencStopSchedule_x1500c:
    /*0001500c*/ STR         R3, [SP] 
    /*00015010*/ MOV         R1, #8 
    /*00015014*/ LDR         R3, [PC, #196]              @ 0x00000000000150e0 
    /*00015018*/ MOV         R0, #3 
    /*0001501c*/ BL          0x000000000001501C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencStopSchedule_x15020:
    /*00015020*/ MOV         R0, R4 
    /*00015024*/ ADD         SP, SP, #36                 @ 0x24 
    /*00015028*/ POP         {R4, R5, R6, R7, PC} 
    VencStopSchedule_x1502c:
    /*0001502c*/ MOV         R0, #11 
    /*00015030*/ BL          0x0000000000015030          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00015034*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00015038*/ ADD         R0, SP, #20 
    /*0001503c*/ BLX         R3 
    /*00015040*/ SUBS        R4, R0, #0 
    /*00015044*/ BNE         VencStopSchedule_x15090
    /*00015048*/ LDR         R3, [SP, #20] 
    /*0001504c*/ CMP         R3, #1 
    /*00015050*/ BNE         VencStopSchedule_x14f38
    /*00015054*/ B           VencStopSchedule_x150c0
    VencStopSchedule_x15058:
    /*00015058*/ MOV         R0, #11 
    /*0001505c*/ B           VencStopSchedule_x14f00
    VencStopSchedule_x15060:
    /*00015060*/ MOVW        R4, #32776                  @ 0x8008 
    /*00015064*/ MOVT        R4, #40968                  @ 0xa008 
    /*00015068*/ B           VencStopSchedule_x14fd8
    VencStopSchedule_x1506c:
    /*0001506c*/ MOV         R0, #13 
    /*00015070*/ B           VencStopSchedule_x14f00
    VencStopSchedule_x15074:
    /*00015074*/ MOVW        R2, #0                      @ .LC423 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5768] 
    /*00015078*/ STR         R5, [SP, #12] 
    /*0001507c*/ MOVW        R3, #11106                  @ 0x2b62 
    /*00015080*/ STR         R7, [SP, #8] 
    /*00015084*/ STR         R4, [SP, #4] 
    /*00015088*/ MOVT        R2, #0                      @ .LC423 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5768] 
    /*0001508c*/ B           VencStopSchedule_x1500c
    VencStopSchedule_x15090:
    /*00015090*/ MOVW        R3, #11079                  @ 0x2b47 
    /*00015094*/ STR         R5, [SP, #4] 
    /*00015098*/ STR         R3, [SP] 
    /*0001509c*/ MOVW        R2, #0                      @ .LC421 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x56c8] 
    /*000150a0*/ LDR         R3, [PC, #56]               @ 0x00000000000150e0 
    /*000150a4*/ MOVT        R2, #0                      @ .LC421 [R_ARM_MOVT_ABS: .rodata.str1.4+0x56c8] 
    /*000150a8*/ MOV         R1, #8 
    /*000150ac*/ MOV         R0, #3 
    /*000150b0*/ BL          0x00000000000150B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000150b4*/ LDR         R3, [SP, #20] 
    /*000150b8*/ CMP         R3, #1 
    /*000150bc*/ BNE         VencStopSchedule_x14fd8
    VencStopSchedule_x150c0:
    /*000150c0*/ MOV         R0, #11 
    /*000150c4*/ BL          0x00000000000150C4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000150c8*/ MOV         R1, #0 
    /*000150cc*/ LDR         R3, [R0, #8] 
    /*000150d0*/ MOV         R0, R5 
    /*000150d4*/ BLX         R3 
    /*000150d8*/ MOV         R4, R0 
    /*000150dc*/ B           VencStopSchedule_x14f30
    /*000150e0*/ ANDEQ       R0, R0, R8, LSL #21 
FUNC_END VencStopSchedule


FUNC_BEGIN VencInitParm_Gop
    /*000150e4*/ LDR         R3, [R1, #100]              @ 0x64 
    /*000150e8*/ CMP         R3, #0 
    /*000150ec*/ BXEQ        LR 
    /*000150f0*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*000150f4*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*000150f8*/ ADD         R0, R0, #12288              @ 0x3000 
    /*000150fc*/ MOV         R2, #83886080               @ 0x5000000 
    /*00015100*/ LDR         IP, [R3] 
    /*00015104*/ MOV         R3, #0 
    /*00015108*/ STR         R2, [R0, #1032]             @ 0x408 
    /*0001510c*/ MVN         R2, #0 
    /*00015110*/ STR         R3, [R0, #1028]             @ 0x404 
    /*00015114*/ STR         R3, [R0, #1036]             @ 0x40c 
    /*00015118*/ STR         R3, [R0, #1040]             @ 0x410 
    /*0001511c*/ STR         R3, [R0, #1012]             @ 0x3f4 
    /*00015120*/ STR         R2, [R0, #560]              @ 0x230 
    /*00015124*/ STR         R2, [R0, #564]              @ 0x234 
    /*00015128*/ LDRB        R2, [IP, #40]               @ 0x28 
    /*0001512c*/ CMP         R2, #2 
    /*00015130*/ BHI         VencInitParm_Gop_x151f8
    /*00015134*/ LDR         R2, [R0, #676]              @ 0x2a4 
    /*00015138*/ STR         R3, [R0, #1056]             @ 0x420 
    /*0001513c*/ CMP         R2, #11 
    /*00015140*/ BEQ         VencInitParm_Gop_x15218
    VencInitParm_Gop_x15144:
    /*00015144*/ CMP         R2, #12 
    /*00015148*/ BEQ         VencInitParm_Gop_x15220
    /*0001514c*/ CMP         R2, #13 
    /*00015150*/ LDREQ       R3, [R0, #980]              @ 0x3d4 
    /*00015154*/ BEQ         VencInitParm_Gop_x151b0
    /*00015158*/ CMP         R2, #14 
    /*0001515c*/ BEQ         VencInitParm_Gop_x15228
    /*00015160*/ CMP         R2, #15 
    /*00015164*/ BEQ         VencInitParm_Gop_x15228
    /*00015168*/ CMP         R2, #17 
    /*0001516c*/ BEQ         VencInitParm_Gop_x151ac
    /*00015170*/ CMP         R2, #16 
    /*00015174*/ BEQ         VencInitParm_Gop_x15230
    /*00015178*/ CMP         R2, #1 
    /*0001517c*/ BEQ         VencInitParm_Gop_x15218
    /*00015180*/ CMP         R2, #2 
    /*00015184*/ BEQ         VencInitParm_Gop_x15228
    /*00015188*/ CMP         R2, #3 
    /*0001518c*/ LDREQ       R3, [R0, #984]              @ 0x3d8 
    /*00015190*/ BEQ         VencInitParm_Gop_x151b0
    /*00015194*/ CMP         R2, #4 
    /*00015198*/ BEQ         VencInitParm_Gop_x15220
    /*0001519c*/ CMP         R2, #5 
    /*000151a0*/ BEQ         VencInitParm_Gop_x15220
    /*000151a4*/ CMP         R2, #6 
    /*000151a8*/ BEQ         VencInitParm_Gop_x15230
    VencInitParm_Gop_x151ac:
    /*000151ac*/ MOV         R3, #51                     @ 0x33 
    VencInitParm_Gop_x151b0:
    /*000151b0*/ STR         R3, [R0, #1024]             @ 0x400 
    /*000151b4*/ MOV         R3, #0 
    /*000151b8*/ STR         R3, [R0, #1016]             @ 0x3f8 
    /*000151bc*/ LDR         R3, [R1] 
    /*000151c0*/ CMP         R3, #96                     @ 0x60 
    /*000151c4*/ LDR         R3, [R1, #28] 
    /*000151c8*/ ADDEQ       R3, R3, #15 
    /*000151cc*/ ADDNE       R3, R3, #63                 @ 0x3f 
    /*000151d0*/ LSREQ       R3, R3, #6 
    /*000151d4*/ LSRNE       R3, R3, #8 
    /*000151d8*/ STR         R3, [R0, #1020]             @ 0x3fc 
    /*000151dc*/ LDR         R3, [R1, #100]              @ 0x64 
    /*000151e0*/ SUB         R2, R3, #2 
    /*000151e4*/ CMP         R3, #0 
    /*000151e8*/ CMPNE       R2, #1 
    /*000151ec*/ MOVHI       R3, #0 
    /*000151f0*/ STRHI       R3, [R0, #1060]             @ 0x424 
    /*000151f4*/ BX          LR 
    VencInitParm_Gop_x151f8:
    /*000151f8*/ SUB         R3, R2, #5 
    /*000151fc*/ LDR         R2, [R0, #676]              @ 0x2a4 
    /*00015200*/ CMP         R3, #1 
    /*00015204*/ MOVLS       R3, #0 
    /*00015208*/ MOVHI       R3, #1 
    /*0001520c*/ CMP         R2, #11 
    /*00015210*/ STR         R3, [R0, #1056]             @ 0x420 
    /*00015214*/ BNE         VencInitParm_Gop_x15144
    VencInitParm_Gop_x15218:
    /*00015218*/ LDR         R3, [R0, #960]              @ 0x3c0 
    /*0001521c*/ B           VencInitParm_Gop_x151b0
    VencInitParm_Gop_x15220:
    /*00015220*/ LDR         R3, [R0, #968]              @ 0x3c8 
    /*00015224*/ B           VencInitParm_Gop_x151b0
    VencInitParm_Gop_x15228:
    /*00015228*/ LDR         R3, [R0, #972]              @ 0x3cc 
    /*0001522c*/ B           VencInitParm_Gop_x151b0
    VencInitParm_Gop_x15230:
    /*00015230*/ LDR         R3, [R0, #692]              @ 0x2b4 
    /*00015234*/ B           VencInitParm_Gop_x151b0
FUNC_END VencInitParm_Gop


FUNC_BEGIN VencInitParm
    /*00015238*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001523c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00015240*/ PUSH        {R4, R5, R6, LR} 
    /*00015244*/ MOVW        R4, #36240                  @ 0x8d90 
    /*00015248*/ LDR         R3, [R3] 
    /*0001524c*/ MOV         R5, R1 
    /*00015250*/ MOV         R2, #176                    @ 0xb0 
    /*00015254*/ MOV         R1, #0 
    /*00015258*/ MLA         R4, R4, R0, R3 
    /*0001525c*/ ADD         R0, R4, #12160              @ 0x2f80 
    /*00015260*/ ADD         R0, R0, #12 
    /*00015264*/ BL          0x0000000000015264          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00015268*/ MOV         R1, R5 
    /*0001526c*/ MOV         R0, R4 
    /*00015270*/ POP         {R4, R5, R6, LR} 
    VencInitParm_x15274:
    /*00015274*/ B           VencInitParm_x15274         @ VencInitParm_Gop [R_ARM_JUMP24: .text+0x150e4] 
FUNC_END VencInitParm


FUNC_BEGIN VencCheckGopChange
    /*00015278*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001527c*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00015280*/ MOVW        R3, #36240                  @ 0x8d90 
    /*00015284*/ MOVW        IP, #265                    @ 0x109 
    /*00015288*/ LDR         R2, [R2] 
    /*0001528c*/ MLA         R3, R3, R0, R2 
    /*00015290*/ LDR         R2, [R3, #4] 
    /*00015294*/ CMP         R2, IP 
    /*00015298*/ CMPNE       R2, #96                     @ 0x60 
    /*0001529c*/ BNE         VencCheckGopChange_x15324
    /*000152a0*/ ADD         R3, R3, #12288              @ 0x3000 
    /*000152a4*/ PUSH        {R4, R5, LR} 
    /*000152a8*/ SUB         SP, SP, #84                 @ 0x54 
    /*000152ac*/ LDR         LR, [R1, #100]              @ 0x64 
    /*000152b0*/ LDR         R3, [R3, #608]              @ 0x260 
    /*000152b4*/ CMP         LR, R3 
    /*000152b8*/ MOVNE       R0, #1 
    /*000152bc*/ BEQ         VencCheckGopChange_x152c8
    VencCheckGopChange_x152c0:
    /*000152c0*/ ADD         SP, SP, #84                 @ 0x54 
    /*000152c4*/ POP         {R4, R5, PC} 
    VencCheckGopChange_x152c8:
    /*000152c8*/ CMP         R2, IP 
    /*000152cc*/ MOV         R4, R0 
    /*000152d0*/ MOV         R5, R1 
    /*000152d4*/ MOVEQ       R0, #13 
    /*000152d8*/ MOVNE       R0, #10 
    /*000152dc*/ BL          0x00000000000152DC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000152e0*/ ADD         R2, SP, #4 
    /*000152e4*/ ADD         R1, SP, #20 
    /*000152e8*/ LDR         R3, [R0, #16] 
    /*000152ec*/ MOV         R0, R4 
    /*000152f0*/ BLX         R3 
    /*000152f4*/ LDR         R3, [SP, #4] 
    /*000152f8*/ CMP         R3, #4 
    /*000152fc*/ BEQ         VencCheckGopChange_x1530c
    /*00015300*/ CMP         R3, #1 
    /*00015304*/ MOVNE       R0, #0 
    /*00015308*/ BNE         VencCheckGopChange_x152c0
    VencCheckGopChange_x1530c:
    /*0001530c*/ LDR         R3, [R5, #104]              @ 0x68 
    /*00015310*/ LDR         R0, [SP, #8] 
    /*00015314*/ SUBS        R0, R0, R3 
    /*00015318*/ MOVNE       R0, #1 
    /*0001531c*/ ADD         SP, SP, #84                 @ 0x54 
    /*00015320*/ POP         {R4, R5, PC} 
    VencCheckGopChange_x15324:
    /*00015324*/ MOV         R0, #0 
    /*00015328*/ BX          LR 
FUNC_END VencCheckGopChange


FUNC_BEGIN VencSetChnAttrVenc
    /*0001532c*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00015330*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00015334*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00015338*/ MOV         R6, R0 
    /*0001533c*/ LDR         R0, [IP] 
    /*00015340*/ MOV         R7, R3 
    /*00015344*/ LDR         IP, [R2, #24] 
    /*00015348*/ SUB         SP, SP, #360                @ 0x168 
    /*0001534c*/ LDR         R3, [R2, #28] 
    /*00015350*/ MOVW        R4, #36240                  @ 0x8d90 
    /*00015354*/ MLA         R4, R4, R6, R0 
    /*00015358*/ MOV         R5, R2 
    /*0001535c*/ ADD         R0, SP, #32 
    /*00015360*/ MOV         R2, #40                     @ 0x28 
    /*00015364*/ STR         R3, [SP, #28] 
    /*00015368*/ MOV         R8, R1 
    /*0001536c*/ STR         IP, [SP, #24] 
    /*00015370*/ BL          0x0000000000015370          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00015374*/ MOV         R2, #16 
    /*00015378*/ MOV         R1, R7 
    /*0001537c*/ ADD         R0, SP, #72                 @ 0x48 
    /*00015380*/ MOVW        R9, #265                    @ 0x109 
    /*00015384*/ BL          0x0000000000015384          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00015388*/ LDR         R3, [R4, #4] 
    /*0001538c*/ CMP         R3, R9 
    /*00015390*/ CMPNE       R3, #96                     @ 0x60 
    /*00015394*/ MOVNE       R2, #0 
    /*00015398*/ MOVNE       R1, #1 
    /*0001539c*/ MOVEQ       R2, #1 
    /*000153a0*/ MOVNE       R9, R2 
    /*000153a4*/ STRNE       R1, [SP, #20] 
    /*000153a8*/ BEQ         VencSetChnAttrVenc_x1557c
    VencSetChnAttrVenc_x153ac:
    /*000153ac*/ ORR         R2, R2, R9 
    /*000153b0*/ MOVW        R1, #1002                   @ 0x3ea 
    /*000153b4*/ CMP         R3, R1 
    /*000153b8*/ ORREQ       R2, R2, #1 
    /*000153bc*/ CMP         R2, #0 
    /*000153c0*/ BNE         VencSetChnAttrVenc_x154e8
    /*000153c4*/ MOVW        R2, #265                    @ 0x109 
    /*000153c8*/ CMP         R3, R2 
    /*000153cc*/ BEQ         VencSetChnAttrVenc_x15574
    VencSetChnAttrVenc_x153d0:
    /*000153d0*/ BHI         VencSetChnAttrVenc_x1543c
    /*000153d4*/ CMP         R3, #26 
    /*000153d8*/ BEQ         VencSetChnAttrVenc_x155c4
    /*000153dc*/ CMP         R3, #96                     @ 0x60 
    /*000153e0*/ MOVEQ       R0, #10 
    /*000153e4*/ BNE         VencSetChnAttrVenc_x155b0
    VencSetChnAttrVenc_x153e8:
    /*000153e8*/ BL          0x00000000000153E8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000153ec*/ MOV         R2, R7 
    /*000153f0*/ MOV         IP, #0 
    /*000153f4*/ LDR         R3, [SP, #20] 
    /*000153f8*/ STR         IP, [SP] 
    /*000153fc*/ MOV         R1, R5 
    /*00015400*/ LDR         R7, [R0, #12] 
    /*00015404*/ MOV         R0, R6 
    /*00015408*/ BLX         R7 
    /*0001540c*/ MOV         SL, R0 
    VencSetChnAttrVenc_x15410:
    /*00015410*/ CMP         SL, #0 
    /*00015414*/ BNE         VencSetChnAttrVenc_x155e4
    VencSetChnAttrVenc_x15418:
    /*00015418*/ LDR         R3, [R5, #24] 
    /*0001541c*/ ADD         R4, R4, #12288              @ 0x3000 
    /*00015420*/ MOV         SL, #0 
    /*00015424*/ STR         R3, [R4, #148]              @ 0x94 
    /*00015428*/ LDR         R3, [R5, #28] 
    /*0001542c*/ STR         R3, [R4, #152]              @ 0x98 
    VencSetChnAttrVenc_x15430:
    /*00015430*/ MOV         R0, SL 
    /*00015434*/ ADD         SP, SP, #360                @ 0x168 
    /*00015438*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencSetChnAttrVenc_x1543c:
    /*0001543c*/ MOVW        R2, #1002                   @ 0x3ea 
    /*00015440*/ CMP         R3, R2 
    /*00015444*/ BEQ         VencSetChnAttrVenc_x15628
    /*00015448*/ MOVW        R2, #1006                   @ 0x3ee 
    /*0001544c*/ CMP         R3, R2 
    /*00015450*/ BNE         VencSetChnAttrVenc_x155b0
    /*00015454*/ LDR         R1, [R5, #24] 
    /*00015458*/ LDR         R2, [R5, #28] 
    /*0001545c*/ LDR         R3, [R5, #36]               @ 0x24 
    /*00015460*/ LDR         LR, [R5, #16] 
    /*00015464*/ MOV         R0, R1 
    /*00015468*/ LDR         IP, [R5, #12] 
    /*0001546c*/ STR         R1, [SP, #108]              @ 0x6c 
    /*00015470*/ MOV         R1, R2 
    /*00015474*/ STR         R2, [SP, #112]              @ 0x70 
    /*00015478*/ MOV         R2, R3 
    /*0001547c*/ STR         R3, [SP, #120]              @ 0x78 
    /*00015480*/ LDR         R3, [R5, #4] 
    /*00015484*/ STR         LR, [SP, #88]               @ 0x58 
    /*00015488*/ STR         IP, [SP, #96]               @ 0x60 
    /*0001548c*/ LDR         LR, [R5, #8] 
    /*00015490*/ LDRB        IP, [R5, #32] 
    /*00015494*/ STR         R3, [SP, #100]              @ 0x64 
    /*00015498*/ LDRB        R3, [R5, #33]               @ 0x21 
    /*0001549c*/ STR         LR, [SP, #104]              @ 0x68 
    /*000154a0*/ STRB        IP, [SP, #116]              @ 0x74 
    /*000154a4*/ LDRB        LR, [R5, #34]               @ 0x22 
    /*000154a8*/ LDRB        IP, [R5, #35]               @ 0x23 
    /*000154ac*/ STRB        R3, [SP, #117]              @ 0x75 
    /*000154b0*/ LDR         R3, [R5, #40]               @ 0x28 
    /*000154b4*/ STRB        LR, [SP, #118]              @ 0x76 
    /*000154b8*/ STRB        IP, [SP, #119]              @ 0x77 
    /*000154bc*/ STR         R3, [SP, #124]              @ 0x7c 
    /*000154c0*/ BL          0x00000000000154C0          @ VencGetProResTileNum [R_ARM_CALL: .text+0x26990] 
    /*000154c4*/ STR         R0, [SP, #92]               @ 0x5c 
    /*000154c8*/ MOV         R0, #44                     @ 0x2c 
    /*000154cc*/ BL          0x00000000000154CC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000154d0*/ ADD         R1, SP, #88                 @ 0x58 
    /*000154d4*/ LDR         R3, [R0, #56]               @ 0x38 
    /*000154d8*/ MOV         R0, R6 
    /*000154dc*/ BLX         R3 
    /*000154e0*/ MOV         SL, R0 
    /*000154e4*/ B           VencSetChnAttrVenc_x15410
    VencSetChnAttrVenc_x154e8:
    /*000154e8*/ MOV         R0, #19 
    /*000154ec*/ BL          0x00000000000154EC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000154f0*/ MOV         R2, #0 
    /*000154f4*/ ADD         R1, SP, #24 
    /*000154f8*/ LDR         R3, [R0, #32] 
    /*000154fc*/ MOV         R0, R6 
    /*00015500*/ BLX         R3 
    /*00015504*/ SUBS        SL, R0, #0 
    /*00015508*/ BNE         VencSetChnAttrVenc_x15648
    /*0001550c*/ LDR         R3, [R8] 
    /*00015510*/ SUB         R2, R3, #6 
    /*00015514*/ BIC         R2, R2, #4 
    /*00015518*/ CMP         R3, #16 
    /*0001551c*/ CMPNE       R2, #0 
    /*00015520*/ BEQ         VencSetChnAttrVenc_x1555c
    /*00015524*/ MOV         R0, #19 
    /*00015528*/ BL          0x0000000000015528          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001552c*/ ADD         R1, SP, #88                 @ 0x58 
    /*00015530*/ LDR         R3, [R0, #52]               @ 0x34 
    /*00015534*/ MOV         R0, R6 
    /*00015538*/ BLX         R3 
    /*0001553c*/ CMP         R0, #0 
    /*00015540*/ BNE         VencSetChnAttrVenc_x156bc
    VencSetChnAttrVenc_x15544:
    /*00015544*/ ADD         R0, R4, #12992              @ 0x32c0 
    /*00015548*/ ADD         R1, SP, #88                 @ 0x58 
    /*0001554c*/ ADD         R0, R0, #28 
    /*00015550*/ MOV         R2, #272                    @ 0x110 
    /*00015554*/ BL          0x0000000000015554          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00015558*/ LDR         R3, [R8] 
    VencSetChnAttrVenc_x1555c:
    /*0001555c*/ ADD         R2, R4, #32768              @ 0x8000 
    /*00015560*/ STR         R3, [R2, #3332]             @ 0xd04 
    /*00015564*/ MOVW        R2, #265                    @ 0x109 
    /*00015568*/ LDR         R3, [R4, #4] 
    /*0001556c*/ CMP         R3, R2 
    /*00015570*/ BNE         VencSetChnAttrVenc_x153d0
    VencSetChnAttrVenc_x15574:
    /*00015574*/ MOV         R0, #13 
    /*00015578*/ B           VencSetChnAttrVenc_x153e8
    VencSetChnAttrVenc_x1557c:
    /*0001557c*/ ADD         R1, SP, #20 
    /*00015580*/ MOV         R0, R8 
    /*00015584*/ BL          0x0000000000015584          @ VencGetGop [R_ARM_CALL: .text+0x14534] 
    /*00015588*/ SUBS        SL, R0, #0 
    /*0001558c*/ BNE         VencSetChnAttrVenc_x1567c
    /*00015590*/ LDR         R3, [R4, #4] 
    /*00015594*/ SUB         R9, R3, R9 
    /*00015598*/ SUB         R2, R3, #96                 @ 0x60 
    /*0001559c*/ CLZ         R9, R9 
    /*000155a0*/ CLZ         R2, R2 
    /*000155a4*/ LSR         R9, R9, #5 
    /*000155a8*/ LSR         R2, R2, #5 
    /*000155ac*/ B           VencSetChnAttrVenc_x153ac
    VencSetChnAttrVenc_x155b0:
    /*000155b0*/ MOVW        SL, #32776                  @ 0x8008 
    /*000155b4*/ MOVT        SL, #40968                  @ 0xa008 
    /*000155b8*/ MOV         R0, SL 
    /*000155bc*/ ADD         SP, SP, #360                @ 0x168 
    /*000155c0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencSetChnAttrVenc_x155c4:
    /*000155c4*/ MOV         R0, #11 
    /*000155c8*/ BL          0x00000000000155C8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000155cc*/ LDR         R1, [SP, #392]              @ 0x188 
    /*000155d0*/ LDR         R3, [R0, #12] 
    /*000155d4*/ MOV         R0, R6 
    /*000155d8*/ BLX         R3 
    /*000155dc*/ SUBS        SL, R0, #0 
    /*000155e0*/ BEQ         VencSetChnAttrVenc_x156a4
    VencSetChnAttrVenc_x155e4:
    /*000155e4*/ LDR         R3, [R4, #4] 
    /*000155e8*/ MOVW        R1, #11417                  @ 0x2c99 
    /*000155ec*/ STR         R6, [SP, #4] 
    /*000155f0*/ MOVW        R2, #0                      @ .LC426 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5834] 
    /*000155f4*/ STR         R1, [SP] 
    /*000155f8*/ MOVT        R2, #0                      @ .LC426 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5834] 
    /*000155fc*/ STR         R3, [SP, #8] 
    /*00015600*/ MOV         R1, #8 
    /*00015604*/ LDR         R3, [PC, #216]              @ 0x00000000000156e4 
    /*00015608*/ MOV         R0, #3 
    /*0001560c*/ BL          0x000000000001560C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00015610*/ BIC         SL, SL, #267386880          @ 0xff00000 
    /*00015614*/ BIC         SL, SL, #983040             @ 0xf0000 
    /*00015618*/ ORR         SL, SL, #524288             @ 0x80000 
    /*0001561c*/ MOV         R0, SL 
    /*00015620*/ ADD         SP, SP, #360                @ 0x168 
    /*00015624*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencSetChnAttrVenc_x15628:
    /*00015628*/ MOV         R0, #11 
    /*0001562c*/ BL          0x000000000001562C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00015630*/ LDR         R1, [SP, #392]              @ 0x188 
    /*00015634*/ LDR         R3, [R0, #12] 
    /*00015638*/ MOV         R0, R6 
    /*0001563c*/ BLX         R3 
    /*00015640*/ MOV         SL, R0 
    /*00015644*/ B           VencSetChnAttrVenc_x15410
    VencSetChnAttrVenc_x15648:
    /*00015648*/ BIC         SL, SL, #267386880          @ 0xff00000 
    /*0001564c*/ MOVW        R3, #11336                  @ 0x2c48 
    /*00015650*/ STR         R6, [SP, #4] 
    /*00015654*/ MOVW        R2, #0                      @ .LC425 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57fc] 
    /*00015658*/ STR         R3, [SP] 
    /*0001565c*/ MOVT        R2, #0                      @ .LC425 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57fc] 
    /*00015660*/ LDR         R3, [PC, #124]              @ 0x00000000000156e4 
    /*00015664*/ MOV         R1, #8 
    /*00015668*/ MOV         R0, #3 
    /*0001566c*/ BIC         SL, SL, #983040             @ 0xf0000 
    /*00015670*/ BL          0x0000000000015670          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00015674*/ ORR         SL, SL, #524288             @ 0x80000 
    /*00015678*/ B           VencSetChnAttrVenc_x15430
    VencSetChnAttrVenc_x1567c:
    /*0001567c*/ MOVW        R3, #11319                  @ 0x2c37 
    /*00015680*/ STR         R6, [SP, #4] 
    /*00015684*/ STR         R3, [SP] 
    /*00015688*/ MOVW        R2, #0                      @ .LC424 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57c8] 
    /*0001568c*/ LDR         R3, [PC, #80]               @ 0x00000000000156e4 
    /*00015690*/ MOVT        R2, #0                      @ .LC424 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57c8] 
    /*00015694*/ MOV         R1, #8 
    /*00015698*/ MOV         R0, #3 
    /*0001569c*/ BL          0x000000000001569C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000156a0*/ B           VencSetChnAttrVenc_x15430
    VencSetChnAttrVenc_x156a4:
    /*000156a4*/ ADD         R0, R4, #35840              @ 0x8c00 
    /*000156a8*/ MOV         R2, #20 
    /*000156ac*/ ADD         R1, R5, #36                 @ 0x24 
    /*000156b0*/ ADD         R0, R0, #192                @ 0xc0 
    /*000156b4*/ BL          0x00000000000156B4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000156b8*/ B           VencSetChnAttrVenc_x15418
    VencSetChnAttrVenc_x156bc:
    /*000156bc*/ MOVW        R3, #11346                  @ 0x2c52 
    /*000156c0*/ STR         R6, [SP, #4] 
    /*000156c4*/ STR         R3, [SP] 
    /*000156c8*/ MOVW        R2, #0                      @ .LC425 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57fc] 
    /*000156cc*/ LDR         R3, [PC, #16]               @ 0x00000000000156e4 
    /*000156d0*/ MOVT        R2, #0                      @ .LC425 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57fc] 
    /*000156d4*/ MOV         R1, #8 
    /*000156d8*/ MOV         R0, #3 
    /*000156dc*/ BL          0x00000000000156DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000156e0*/ B           VencSetChnAttrVenc_x15544
    /*000156e4*/ MULEQ       R0, IP, SL 
FUNC_END VencSetChnAttrVenc


FUNC_BEGIN VencSetChnAttrRes
    /*000156e8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000156ec*/ ADD         IP, R1, #32768              @ 0x8000 
    /*000156f0*/ ADD         R7, R1, #12288              @ 0x3000 
    /*000156f4*/ SUB         SP, SP, #16 
    /*000156f8*/ MOV         R8, R1 
    /*000156fc*/ MOV         R5, #0 
    /*00015700*/ MOVW        R1, #12448                  @ 0x30a0 
    /*00015704*/ ADD         R9, SP, #16 
    /*00015708*/ MOV         R6, R0 
    /*0001570c*/ ADD         SL, R8, #64                 @ 0x40 
    /*00015710*/ ADD         R0, R8, #12736              @ 0x31c0 
    /*00015714*/ STR         R5, [R8, #20] 
    /*00015718*/ STR         R5, [R8, #24] 
    /*0001571c*/ MOV         R3, #0 
    /*00015720*/ STR         R5, [R7, #568]              @ 0x238 
    /*00015724*/ MOV         R2, #0 
    /*00015728*/ STR         R5, [R7, #572]              @ 0x23c 
    /*0001572c*/ ADD         R0, R0, #60                 @ 0x3c 
    /*00015730*/ STR         R5, [R7, #128]              @ 0x80 
    /*00015734*/ STR         R5, [IP, #3328]             @ 0xd00 
    /*00015738*/ MOV         IP, #1 
    /*0001573c*/ STR         R5, [R7, #168]              @ 0xa8 
    /*00015740*/ STRD        R2, [R8, R1] 
    /*00015744*/ MOV         R1, R5 
    /*00015748*/ STR         R5, [R7, #84]               @ 0x54 
    /*0001574c*/ MOV         R2, #20 
    /*00015750*/ STR         IP, [R8, #32] 
    /*00015754*/ STR         IP, [R8, #36]               @ 0x24 
    /*00015758*/ STR         IP, [R8, #40]               @ 0x28 
    /*0001575c*/ STR         IP, [R8, #44]               @ 0x2c 
    /*00015760*/ STR         IP, [R8, #48]               @ 0x30 
    /*00015764*/ STR         R5, [R9, #-4]! 
    /*00015768*/ BL          0x0000000000015768          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0001576c*/ MVN         R3, #0 
    /*00015770*/ STR         R5, [R7, #180]              @ 0xb4 
    /*00015774*/ STR         R3, [R7, #88]               @ 0x58 
    /*00015778*/ MOV         R1, R9 
    /*0001577c*/ STR         R3, [R7, #92]               @ 0x5c 
    /*00015780*/ MOV         R0, SL 
    /*00015784*/ BL          0x0000000000015784          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00015788*/ LDR         R3, [R8, #3724]             @ 0xe8c 
    /*0001578c*/ CMP         R3, R5 
    /*00015790*/ BNE         VencSetChnAttrRes_x157d4
    /*00015794*/ B           VencSetChnAttrRes_x15804
    VencSetChnAttrRes_x15798:
    /*00015798*/ LDR         R3, [R4, #380]              @ 0x17c 
    /*0001579c*/ CMP         R3, #0 
    /*000157a0*/ BEQ         VencSetChnAttrRes_x157bc
    /*000157a4*/ STR         R5, [R3] 
    /*000157a8*/ LDR         R3, [R4, #380]              @ 0x17c 
    /*000157ac*/ STR         R5, [R3, #2792]             @ 0xae8 
    /*000157b0*/ STR         R5, [R4, #336]              @ 0x150 
    /*000157b4*/ STR         R5, [R4, #340]              @ 0x154 
    /*000157b8*/ STR         R5, [R4, #380]              @ 0x17c 
    VencSetChnAttrRes_x157bc:
    /*000157bc*/ LDR         R3, [R7, #580]              @ 0x244 
    /*000157c0*/ ADD         R3, R3, #1 
    /*000157c4*/ STR         R3, [R7, #580]              @ 0x244 
    /*000157c8*/ LDR         R3, [R8, #3724]             @ 0xe8c 
    /*000157cc*/ CMP         R3, #0 
    /*000157d0*/ BEQ         VencSetChnAttrRes_x15804
    VencSetChnAttrRes_x157d4:
    /*000157d4*/ MOV         R1, #0 
    /*000157d8*/ MOV         R0, R6 
    /*000157dc*/ BL          0x00000000000157DC          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*000157e0*/ SUBS        R4, R0, #0 
    /*000157e4*/ BEQ         VencSetChnAttrRes_x157bc
    /*000157e8*/ LDR         R3, [R4, #336]              @ 0x150 
    /*000157ec*/ CMP         R3, #0 
    /*000157f0*/ BEQ         VencSetChnAttrRes_x15798
    /*000157f4*/ ADD         R1, R4, #336                @ 0x150 
    /*000157f8*/ MOV         R0, R6 
    /*000157fc*/ BL          0x00000000000157FC          @ VencPutOsd [R_ARM_CALL: .text+0x18c0] 
    /*00015800*/ B           VencSetChnAttrRes_x15798
    VencSetChnAttrRes_x15804:
    /*00015804*/ ADD         R4, R8, #8192               @ 0x2000 
    /*00015808*/ MOV         R1, R9 
    /*0001580c*/ MOV         R0, SL 
    /*00015810*/ BL          0x0000000000015810          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015814*/ LDR         R3, [R4, #1036]             @ 0x40c 
    /*00015818*/ CMP         R3, #0 
    /*0001581c*/ BEQ         VencSetChnAttrRes_x15850
    VencSetChnAttrRes_x15820:
    /*00015820*/ MOV         R1, #1 
    /*00015824*/ MOV         R0, R6 
    /*00015828*/ BL          0x0000000000015828          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*0001582c*/ LDR         R3, [R4, #1036]             @ 0x40c 
    /*00015830*/ CMP         R3, #0 
    /*00015834*/ BNE         VencSetChnAttrRes_x15820
    /*00015838*/ LDR         R3, [R4, #3764]             @ 0xeb4 
    /*0001583c*/ CMP         R3, #0 
    /*00015840*/ BEQ         VencSetChnAttrRes_x1585c
    VencSetChnAttrRes_x15844:
    /*00015844*/ MOV         R1, #2 
    /*00015848*/ MOV         R0, R6 
    /*0001584c*/ BL          0x000000000001584C          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    VencSetChnAttrRes_x15850:
    /*00015850*/ LDR         R3, [R4, #3764]             @ 0xeb4 
    /*00015854*/ CMP         R3, #0 
    /*00015858*/ BNE         VencSetChnAttrRes_x15844
    VencSetChnAttrRes_x1585c:
    /*0001585c*/ MOV         R0, #1 
    /*00015860*/ BL          0x0000000000015860          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00015864*/ LDR         R3, [R0, #104]              @ 0x68 
    /*00015868*/ MOV         R0, #1 
    /*0001586c*/ BLX         R3 
    /*00015870*/ CMP         R0, #0 
    /*00015874*/ BEQ         VencSetChnAttrRes_x158a0
    /*00015878*/ ADD         R4, R8, #4096               @ 0x1000 
    /*0001587c*/ LDR         R3, [R4, #2356]             @ 0x934 
    /*00015880*/ CMP         R3, #0 
    /*00015884*/ BEQ         VencSetChnAttrRes_x158a0
    VencSetChnAttrRes_x15888:
    /*00015888*/ MOV         R1, #3 
    /*0001588c*/ MOV         R0, R6 
    /*00015890*/ BL          0x0000000000015890          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*00015894*/ LDR         R3, [R4, #2356]             @ 0x934 
    /*00015898*/ CMP         R3, #0 
    /*0001589c*/ BNE         VencSetChnAttrRes_x15888
    VencSetChnAttrRes_x158a0:
    /*000158a0*/ MOV         R1, #8 
    /*000158a4*/ STR         R6, [SP, #4] 
    /*000158a8*/ MOVW        R3, #11567                  @ 0x2d2f 
    /*000158ac*/ MOVW        R2, #0                      @ .LC427 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x587c] 
    /*000158b0*/ STR         R3, [SP] 
    /*000158b4*/ MOVT        R2, #0                      @ .LC427 [R_ARM_MOVT_ABS: .rodata.str1.4+0x587c] 
    /*000158b8*/ LDR         R3, [PC, #32]               @ 0x00000000000158e0 
    /*000158bc*/ MOV         R0, #4 
    /*000158c0*/ BL          0x00000000000158C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000158c4*/ ADD         R0, R8, #12352              @ 0x3040 
    /*000158c8*/ ADD         R0, R0, #56                 @ 0x38 
    /*000158cc*/ BL          0x00000000000158CC          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*000158d0*/ MOV         R3, #1 
    /*000158d4*/ STR         R3, [R7, #1104]             @ 0x450 
    /*000158d8*/ ADD         SP, SP, #16 
    /*000158dc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*000158e0*/ @           <UNDEFINED> instruction: 0x00000ab0 
FUNC_END VencSetChnAttrRes


FUNC_BEGIN VencSetChnAttrAll
    /*000158e4*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000158e8*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000158ec*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000158f0*/ MOV         R5, R0 
    /*000158f4*/ LDR         R0, [IP] 
    /*000158f8*/ MOVW        LR, #36240                  @ 0x8d90 
    /*000158fc*/ SUB         SP, SP, #116                @ 0x74 
    /*00015900*/ MOV         R6, #1 
    /*00015904*/ MOV         R4, R1 
    /*00015908*/ ADD         R8, R1, #100                @ 0x64 
    /*0001590c*/ MLA         R9, LR, R5, R0 
    /*00015910*/ STR         R3, [SP, #12] 
    /*00015914*/ ADD         R3, R1, #60                 @ 0x3c 
    /*00015918*/ STR         R3, [SP, #20] 
    /*0001591c*/ MOV         R3, #0 
    /*00015920*/ STR         R3, [SP, #36]               @ 0x24 
    /*00015924*/ MOV         R3, #30 
    /*00015928*/ STR         R3, [SP, #40]               @ 0x28 
    /*0001592c*/ STR         R2, [SP, #16] 
    /*00015930*/ LDR         R3, [R9, #4] 
    /*00015934*/ STR         R6, [SP, #44]               @ 0x2c 
    /*00015938*/ CMP         R3, #96                     @ 0x60 
    /*0001593c*/ BEQ         VencSetChnAttrAll_x164cc
    /*00015940*/ MOVW        R2, #265                    @ 0x109 
    /*00015944*/ CMP         R3, R2 
    /*00015948*/ BEQ         VencSetChnAttrAll_x1657c
    /*0001594c*/ MOVW        R2, #1006                   @ 0x3ee 
    /*00015950*/ CMP         R3, R2 
    /*00015954*/ BEQ         VencSetChnAttrAll_x165e0
    VencSetChnAttrAll_x15958:
    /*00015958*/ MOVW        R2, #265                    @ 0x109 
    /*0001595c*/ CMP         R3, R2 
    /*00015960*/ CMPNE       R3, #96                     @ 0x60 
    /*00015964*/ MOVW        R1, #1002                   @ 0x3ea 
    /*00015968*/ MOVEQ       R2, #1 
    /*0001596c*/ MOVNE       R2, #0 
    /*00015970*/ CMP         R3, R1 
    /*00015974*/ MOVNE       R3, R2 
    /*00015978*/ ORREQ       R3, R2, #1 
    /*0001597c*/ CMP         R3, #0 
    /*00015980*/ BNE         VencSetChnAttrAll_x15bb4
    VencSetChnAttrAll_x15984:
    /*00015984*/ ADD         R7, R9, #64                 @ 0x40 
    /*00015988*/ ADD         R1, SP, #36                 @ 0x24 
    /*0001598c*/ ADD         R6, R9, #12288              @ 0x3000 
    /*00015990*/ MOV         R0, R7 
    /*00015994*/ BL          0x0000000000015994          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00015998*/ MOV         R1, R4 
    /*0001599c*/ MOV         R0, R5 
    /*000159a0*/ BL          0x00000000000159A0          @ VencCheckGopChange [R_ARM_CALL: .text+0x15278] 
    /*000159a4*/ LDR         R3, [R6, #612]              @ 0x264 
    /*000159a8*/ ADD         R1, SP, #36                 @ 0x24 
    /*000159ac*/ STR         R3, [SP, #20] 
    /*000159b0*/ MOV         FP, R0 
    /*000159b4*/ MOV         R0, R7 
    /*000159b8*/ BL          0x00000000000159B8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000159bc*/ CMP         FP, #1 
    /*000159c0*/ BEQ         VencSetChnAttrAll_x15ab0
    VencSetChnAttrAll_x159c4:
    /*000159c4*/ ADD         SL, R9, #32768              @ 0x8000 
    /*000159c8*/ ADD         R1, SP, #36                 @ 0x24 
    /*000159cc*/ MOV         R0, R7 
    /*000159d0*/ BL          0x00000000000159D0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000159d4*/ LDR         R2, [SL, #3332]             @ 0xd04 
    /*000159d8*/ LDR         R3, [R6, #676]              @ 0x2a4 
    /*000159dc*/ CMP         R3, R2 
    /*000159e0*/ BEQ         VencSetChnAttrAll_x15c40
    VencSetChnAttrAll_x159e4:
    /*000159e4*/ MOV         R3, #0 
    /*000159e8*/ STR         R3, [R6, #1004]             @ 0x3ec 
    VencSetChnAttrAll_x159ec:
    /*000159ec*/ ADDS        R3, FP, #0 
    /*000159f0*/ LDR         R2, [SP, #12] 
    /*000159f4*/ MOVNE       R3, #1 
    /*000159f8*/ CMP         R2, #0 
    /*000159fc*/ MOVNE       R3, #0 
    /*00015a00*/ CMP         R3, #0 
    /*00015a04*/ BEQ         VencSetChnAttrAll_x15b14
    /*00015a08*/ LDR         R3, [R9, #4] 
    /*00015a0c*/ CMP         R3, #96                     @ 0x60 
    /*00015a10*/ BEQ         VencSetChnAttrAll_x167dc
    /*00015a14*/ MOV         R0, #13 
    /*00015a18*/ BL          0x0000000000015A18          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00015a1c*/ MOV         R1, R8 
    /*00015a20*/ LDR         R3, [R0, #196]              @ 0xc4 
    /*00015a24*/ MOV         R0, R5 
    /*00015a28*/ BLX         R3 
    /*00015a2c*/ MOV         R8, R0 
    VencSetChnAttrAll_x15a30:
    /*00015a30*/ CMP         R8, #0 
    /*00015a34*/ BNE         VencSetChnAttrAll_x15d04
    /*00015a38*/ MOV         R0, #19 
    /*00015a3c*/ BL          0x0000000000015A3C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00015a40*/ ADD         R2, R9, #12992              @ 0x32c0 
    /*00015a44*/ ADD         R2, R2, #28 
    /*00015a48*/ MOV         R1, R4 
    /*00015a4c*/ LDR         R3, [R0, #92]               @ 0x5c 
    /*00015a50*/ MOV         R0, R5 
    /*00015a54*/ BLX         R3 
    /*00015a58*/ SUBS        R3, R0, #0 
    /*00015a5c*/ STR         R3, [SP, #20] 
    /*00015a60*/ MOV         R8, R3 
    /*00015a64*/ BEQ         VencSetChnAttrAll_x15c50
    /*00015a68*/ MOVW        R3, #11768                  @ 0x2df8 
    /*00015a6c*/ MOV         R1, #8 
    /*00015a70*/ STR         R3, [SP] 
    /*00015a74*/ MOVW        R2, #0                      @ .LC431 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x596c] 
    /*00015a78*/ LDR         R3, [PC, #3568]             @ 0x0000000000016870 
    /*00015a7c*/ MOVT        R2, #0                      @ .LC431 [R_ARM_MOVT_ABS: .rodata.str1.4+0x596c] 
    /*00015a80*/ MOV         R0, #3 
    /*00015a84*/ BL          0x0000000000015A84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00015a88*/ MOV         R0, R7 
    /*00015a8c*/ ADD         R1, SP, #36                 @ 0x24 
    /*00015a90*/ BL          0x0000000000015A90          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015a94*/ BIC         R3, R8, #267386880          @ 0xff00000 
    /*00015a98*/ BIC         R3, R3, #983040             @ 0xf0000 
    /*00015a9c*/ ORR         R3, R3, #524288             @ 0x80000 
    /*00015aa0*/ STR         R3, [SP, #20] 
    /*00015aa4*/ LDR         R0, [SP, #20] 
    /*00015aa8*/ ADD         SP, SP, #116                @ 0x74 
    /*00015aac*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSetChnAttrAll_x15ab0:
    /*00015ab0*/ LDR         R3, [R9, #4] 
    /*00015ab4*/ CMP         R3, #96                     @ 0x60 
    /*00015ab8*/ BEQ         VencSetChnAttrAll_x16624
    /*00015abc*/ MOV         R0, #13 
    /*00015ac0*/ BL          0x0000000000015AC0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00015ac4*/ MOV         R1, R8 
    /*00015ac8*/ LDR         R3, [R0, #192]              @ 0xc0 
    /*00015acc*/ MOV         R0, R5 
    /*00015ad0*/ BLX         R3 
    /*00015ad4*/ MOV         SL, R0 
    VencSetChnAttrAll_x15ad8:
    /*00015ad8*/ CMP         SL, #0 
    /*00015adc*/ BEQ         VencSetChnAttrAll_x159c4
    /*00015ae0*/ BIC         SL, SL, #267386880          @ 0xff00000 
    /*00015ae4*/ MOVW        R3, #11716                  @ 0x2dc4 
    /*00015ae8*/ MOVW        R2, #0                      @ .LC431 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x596c] 
    /*00015aec*/ STR         R3, [SP] 
    /*00015af0*/ MOVT        R2, #0                      @ .LC431 [R_ARM_MOVT_ABS: .rodata.str1.4+0x596c] 
    /*00015af4*/ LDR         R3, [PC, #3444]             @ 0x0000000000016870 
    /*00015af8*/ MOV         R1, #8 
    /*00015afc*/ MOV         R0, #3 
    /*00015b00*/ BIC         SL, SL, #983040             @ 0xf0000 
    /*00015b04*/ BL          0x0000000000015B04          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00015b08*/ ORR         R3, SL, #524288             @ 0x80000 
    /*00015b0c*/ STR         R3, [SP, #20] 
    /*00015b10*/ B           VencSetChnAttrAll_x15ba8
    VencSetChnAttrAll_x15b14:
    /*00015b14*/ LDR         R3, [SP, #20] 
    /*00015b18*/ CMP         R3, #1 
    /*00015b1c*/ BEQ         VencSetChnAttrAll_x16644
    VencSetChnAttrAll_x15b20:
    /*00015b20*/ LDR         R3, [SP, #16] 
    /*00015b24*/ ADD         R1, R4, #60                 @ 0x3c 
    /*00015b28*/ MOV         R2, R4 
    /*00015b2c*/ MOV         R0, R5 
    /*00015b30*/ STR         R3, [SP] 
    /*00015b34*/ MOV         R3, R8 
    /*00015b38*/ BL          0x0000000000015B38          @ VencSetChnAttrVenc [R_ARM_CALL: .text+0x1532c] 
    /*00015b3c*/ SUBS        R3, R0, #0 
    /*00015b40*/ STR         R3, [SP, #20] 
    /*00015b44*/ BNE         VencSetChnAttrAll_x1681c
    /*00015b48*/ LDR         R3, [SP, #12] 
    /*00015b4c*/ CMP         R3, #0 
    /*00015b50*/ LDR         R3, [SP, #20] 
    /*00015b54*/ STR         R3, [R6, #612]              @ 0x264 
    /*00015b58*/ BNE         VencSetChnAttrAll_x15c90
    /*00015b5c*/ LDR         R3, [R9, #4] 
    /*00015b60*/ MOVW        R2, #265                    @ 0x109 
    /*00015b64*/ CMP         R3, #96                     @ 0x60 
    /*00015b68*/ CMPNE       R3, R2 
    /*00015b6c*/ BEQ         VencSetChnAttrAll_x15dd4
    /*00015b70*/ ADD         R0, R9, #12864              @ 0x3240 
    /*00015b74*/ MOV         R1, R4 
    /*00015b78*/ MOV         R2, #116                    @ 0x74 
    /*00015b7c*/ ADD         R0, R0, #40                 @ 0x28 
    /*00015b80*/ BL          0x0000000000015B80          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00015b84*/ LDR         R3, [R4, #60]               @ 0x3c 
    /*00015b88*/ ADD         R1, SP, #36                 @ 0x24 
    /*00015b8c*/ MOV         R0, R7 
    /*00015b90*/ CMP         R3, #17 
    /*00015b94*/ CMPNE       R3, #7 
    /*00015b98*/ MOVEQ       R3, #1 
    /*00015b9c*/ MOVNE       R3, #0 
    /*00015ba0*/ STR         R3, [R6, #1008]             @ 0x3f0 
    /*00015ba4*/ BL          0x0000000000015BA4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VencSetChnAttrAll_x15ba8:
    /*00015ba8*/ LDR         R0, [SP, #20] 
    /*00015bac*/ ADD         SP, SP, #116                @ 0x74 
    /*00015bb0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSetChnAttrAll_x15bb4:
    /*00015bb4*/ LDR         IP, [R4, #24] 
    /*00015bb8*/ MOV         R2, #40                     @ 0x28 
    /*00015bbc*/ LDR         R3, [R4, #28] 
    /*00015bc0*/ ADD         R1, R4, #60                 @ 0x3c 
    /*00015bc4*/ ADD         R0, SP, #56                 @ 0x38 
    /*00015bc8*/ STR         IP, [SP, #48]               @ 0x30 
    /*00015bcc*/ STR         R3, [SP, #52]               @ 0x34 
    /*00015bd0*/ BL          0x0000000000015BD0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00015bd4*/ MOV         R2, #16 
    /*00015bd8*/ MOV         R1, R8 
    /*00015bdc*/ ADD         R0, SP, #96                 @ 0x60 
    /*00015be0*/ BL          0x0000000000015BE0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00015be4*/ MOV         R0, #19 
    /*00015be8*/ BL          0x0000000000015BE8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00015bec*/ ADD         R1, SP, #48                 @ 0x30 
    /*00015bf0*/ LDR         R3, [R0, #156]              @ 0x9c 
    /*00015bf4*/ MOV         R0, R5 
    /*00015bf8*/ BLX         R3 
    /*00015bfc*/ SUBS        R6, R0, #0 
    /*00015c00*/ BEQ         VencSetChnAttrAll_x15984
    /*00015c04*/ MOVW        R2, #0                      @ .LC430 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5930] 
    /*00015c08*/ MOVT        R2, #0                      @ .LC430 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5930] 
    /*00015c0c*/ MOVW        R3, #11680                  @ 0x2da0 
    /*00015c10*/ STR         R3, [SP] 
    VencSetChnAttrAll_x15c14:
    /*00015c14*/ LDR         R3, [PC, #3156]             @ 0x0000000000016870 
    /*00015c18*/ MOV         R1, #8 
    /*00015c1c*/ MOV         R0, #3 
    /*00015c20*/ BIC         R6, R6, #267386880          @ 0xff00000 
    /*00015c24*/ BL          0x0000000000015C24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00015c28*/ BIC         R6, R6, #983040             @ 0xf0000 
    /*00015c2c*/ ORR         R3, R6, #524288             @ 0x80000 
    /*00015c30*/ STR         R3, [SP, #20] 
    /*00015c34*/ LDR         R0, [SP, #20] 
    /*00015c38*/ ADD         SP, SP, #116                @ 0x74 
    /*00015c3c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSetChnAttrAll_x15c40:
    /*00015c40*/ LDR         R2, [R4, #60]               @ 0x3c 
    /*00015c44*/ CMP         R3, R2 
    /*00015c48*/ BNE         VencSetChnAttrAll_x159e4
    /*00015c4c*/ B           VencSetChnAttrAll_x159ec
    VencSetChnAttrAll_x15c50:
    /*00015c50*/ ADD         R0, R9, #12864              @ 0x3240 
    /*00015c54*/ MOV         R2, #116                    @ 0x74 
    /*00015c58*/ MOV         R1, R4 
    /*00015c5c*/ ADD         R0, R0, #40                 @ 0x28 
    /*00015c60*/ BL          0x0000000000015C60          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00015c64*/ MOV         R3, #1 
    /*00015c68*/ MOV         R1, R4 
    /*00015c6c*/ MOV         R0, R5 
    /*00015c70*/ STR         R3, [R6, #612]              @ 0x264 
    /*00015c74*/ BL          0x0000000000015C74          @ VencInitParm [R_ARM_CALL: .text+0x15238] 
    /*00015c78*/ MOV         R0, R7 
    /*00015c7c*/ ADD         R1, SP, #36                 @ 0x24 
    /*00015c80*/ BL          0x0000000000015C80          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015c84*/ LDR         R0, [SP, #20] 
    /*00015c88*/ ADD         SP, SP, #116                @ 0x74 
    /*00015c8c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSetChnAttrAll_x15c90:
    /*00015c90*/ ADD         R1, SP, #36                 @ 0x24 
    /*00015c94*/ MOV         R0, R7 
    /*00015c98*/ BL          0x0000000000015C98          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015c9c*/ MOV         R1, R9 
    /*00015ca0*/ MOV         R0, R5 
    /*00015ca4*/ BL          0x0000000000015CA4          @ VencSetChnAttrRes [R_ARM_CALL: .text+0x156e8] 
    /*00015ca8*/ ADD         R1, SP, #36                 @ 0x24 
    /*00015cac*/ MOV         R0, R7 
    /*00015cb0*/ BL          0x0000000000015CB0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00015cb4*/ LDR         R3, [R9, #4] 
    /*00015cb8*/ MOVW        R2, #265                    @ 0x109 
    /*00015cbc*/ CMP         R3, #96                     @ 0x60 
    /*00015cc0*/ CMPNE       R3, R2 
    /*00015cc4*/ BEQ         VencSetChnAttrAll_x15d50
    /*00015cc8*/ ADD         R0, R9, #12864              @ 0x3240 
    /*00015ccc*/ MOV         R1, R4 
    /*00015cd0*/ MOV         R2, #116                    @ 0x74 
    /*00015cd4*/ ADD         R0, R0, #40                 @ 0x28 
    /*00015cd8*/ BL          0x0000000000015CD8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00015cdc*/ LDR         R3, [R4, #60]               @ 0x3c 
    /*00015ce0*/ ADD         R1, SP, #36                 @ 0x24 
    /*00015ce4*/ MOV         R0, R7 
    /*00015ce8*/ CMP         R3, #17 
    /*00015cec*/ CMPNE       R3, #7 
    /*00015cf0*/ MOVEQ       R3, #1 
    /*00015cf4*/ MOVNE       R3, #0 
    /*00015cf8*/ STR         R3, [R6, #1008]             @ 0x3f0 
    /*00015cfc*/ BL          0x0000000000015CFC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015d00*/ B           VencSetChnAttrAll_x15e20
    VencSetChnAttrAll_x15d04:
    /*00015d04*/ STR         R5, [SP, #4] 
    /*00015d08*/ MOVW        R3, #11759                  @ 0x2def 
    /*00015d0c*/ MOV         R1, #8 
    /*00015d10*/ STR         R3, [SP] 
    /*00015d14*/ MOVW        R2, #0                      @ .LC432 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x59a0] 
    /*00015d18*/ LDR         R3, [PC, #2896]             @ 0x0000000000016870 
    /*00015d1c*/ MOVT        R2, #0                      @ .LC432 [R_ARM_MOVT_ABS: .rodata.str1.4+0x59a0] 
    /*00015d20*/ MOV         R0, #3 
    /*00015d24*/ BL          0x0000000000015D24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00015d28*/ MOV         R0, R7 
    /*00015d2c*/ ADD         R1, SP, #36                 @ 0x24 
    /*00015d30*/ BIC         R8, R8, #267386880          @ 0xff00000 
    /*00015d34*/ BL          0x0000000000015D34          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015d38*/ BIC         R8, R8, #983040             @ 0xf0000 
    /*00015d3c*/ ORR         R3, R8, #524288             @ 0x80000 
    /*00015d40*/ STR         R3, [SP, #20] 
    /*00015d44*/ LDR         R0, [SP, #20] 
    /*00015d48*/ ADD         SP, SP, #116                @ 0x74 
    /*00015d4c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSetChnAttrAll_x15d50:
    /*00015d50*/ ADD         R0, R9, #13824              @ 0x3600 
    /*00015d54*/ ADD         R0, R0, #44                 @ 0x2c 
    /*00015d58*/ BL          0x0000000000015D58          @ VencInitRoiCfg [R_ARM_CALL: .text+0x8a4] 
    /*00015d5c*/ ADD         R0, R9, #14080              @ 0x3700 
    /*00015d60*/ ADD         R0, R0, #44                 @ 0x2c 
    /*00015d64*/ BL          0x0000000000015D64          @ VencInitRoiCfg [R_ARM_CALL: .text+0x8a4] 
    /*00015d68*/ ADD         R0, R9, #14336              @ 0x3800 
    /*00015d6c*/ ADD         R0, R0, #44                 @ 0x2c 
    /*00015d70*/ BL          0x0000000000015D70          @ VencInitRoiCfg [R_ARM_CALL: .text+0x8a4] 
    /*00015d74*/ CMP         FP, #0 
    /*00015d78*/ MOV         R3, #1 
    /*00015d7c*/ STR         R3, [R6, #1576]             @ 0x628 
    /*00015d80*/ BEQ         VencSetChnAttrAll_x15dd4
    /*00015d84*/ LDR         R3, [R9, #4] 
    /*00015d88*/ CMP         R3, #96                     @ 0x60 
    /*00015d8c*/ BEQ         VencSetChnAttrAll_x16d14
    /*00015d90*/ MOV         R0, #13 
    /*00015d94*/ BL          0x0000000000015D94          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00015d98*/ MOV         R1, R8 
    /*00015d9c*/ LDR         R3, [R0, #196]              @ 0xc4 
    /*00015da0*/ MOV         R0, R5 
    /*00015da4*/ BLX         R3 
    VencSetChnAttrAll_x15da8:
    /*00015da8*/ CMP         R0, #0 
    /*00015dac*/ BEQ         VencSetChnAttrAll_x15dd4
    /*00015db0*/ MOVW        R3, #11925                  @ 0x2e95 
    /*00015db4*/ MOVW        R2, #0                      @ .LC434 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5a28] 
    /*00015db8*/ STR         R3, [SP] 
    /*00015dbc*/ MOVT        R2, #0                      @ .LC434 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5a28] 
    /*00015dc0*/ STR         R5, [SP, #4] 
    /*00015dc4*/ MOV         R1, #8 
    /*00015dc8*/ LDR         R3, [PC, #2720]             @ 0x0000000000016870 
    /*00015dcc*/ MOV         R0, #3 
    /*00015dd0*/ BL          0x0000000000015DD0          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencSetChnAttrAll_x15dd4:
    /*00015dd4*/ LDR         R3, [R4, #100]              @ 0x64 
    /*00015dd8*/ ADD         R0, R9, #12864              @ 0x3240 
    /*00015ddc*/ MOV         R2, #116                    @ 0x74 
    /*00015de0*/ MOV         R1, R4 
    /*00015de4*/ ADD         R0, R0, #40                 @ 0x28 
    /*00015de8*/ STR         R3, [R6, #608]              @ 0x260 
    /*00015dec*/ BL          0x0000000000015DEC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00015df0*/ LDR         R3, [R4, #60]               @ 0x3c 
    /*00015df4*/ ADD         R1, SP, #36                 @ 0x24 
    /*00015df8*/ MOV         R0, R7 
    /*00015dfc*/ CMP         R3, #17 
    /*00015e00*/ CMPNE       R3, #7 
    /*00015e04*/ MOVEQ       R3, #1 
    /*00015e08*/ MOVNE       R3, #0 
    /*00015e0c*/ STR         R3, [R6, #1008]             @ 0x3f0 
    /*00015e10*/ BL          0x0000000000015E10          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015e14*/ LDR         R3, [SP, #12] 
    /*00015e18*/ CMP         R3, #0 
    /*00015e1c*/ BEQ         VencSetChnAttrAll_x15ba8
    VencSetChnAttrAll_x15e20:
    /*00015e20*/ ADD         R3, R9, #8192               @ 0x2000 
    /*00015e24*/ MOV         R4, #0 
    /*00015e28*/ ADD         R0, R9, #12160              @ 0x2f80 
    /*00015e2c*/ STR         R4, [R6, #176]              @ 0xb0 
    /*00015e30*/ MOV         IP, R3 
    /*00015e34*/ STR         R3, [SP, #16] 
    /*00015e38*/ STR         R4, [IP, #3968]             @ 0xf80 
    /*00015e3c*/ MVN         R3, #0 
    /*00015e40*/ STR         R4, [R6, #96]               @ 0x60 
    /*00015e44*/ MOV         R1, #4 
    /*00015e48*/ STR         R3, [R6, #560]              @ 0x230 
    /*00015e4c*/ MOV         R2, #6 
    /*00015e50*/ STR         R3, [R6, #564]              @ 0x234 
    /*00015e54*/ ADD         R0, R0, #12 
    /*00015e58*/ STR         R4, [R6, #100]              @ 0x64 
    /*00015e5c*/ STR         R4, [R6, #104]              @ 0x68 
    /*00015e60*/ STR         R4, [R6, #108]              @ 0x6c 
    /*00015e64*/ STR         R4, [R6, #600]              @ 0x258 
    /*00015e68*/ STR         R1, [SL, #3292]             @ 0xcdc 
    /*00015e6c*/ MOV         R1, R4 
    /*00015e70*/ STR         R2, [SL, #3288]             @ 0xcd8 
    /*00015e74*/ MOV         R2, #176                    @ 0xb0 
    /*00015e78*/ STR         R4, [SL, #3284]             @ 0xcd4 
    /*00015e7c*/ STR         R4, [SL, #3336]             @ 0xd08 
    /*00015e80*/ STR         R3, [IP, #3976]             @ 0xf88 
    /*00015e84*/ STR         R4, [IP, #3848]             @ 0xf08 
    /*00015e88*/ STR         R4, [IP, #3844]             @ 0xf04 
    /*00015e8c*/ STR         R4, [IP, #3824]             @ 0xef0 
    /*00015e90*/ STR         R4, [IP, #3840]             @ 0xf00 
    /*00015e94*/ STR         R4, [IP, #3972]             @ 0xf84 
    /*00015e98*/ STR         R4, [R6, #1132]             @ 0x46c 
    /*00015e9c*/ STR         R4, [R9, #52]               @ 0x34 
    /*00015ea0*/ BL          0x0000000000015EA0          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00015ea4*/ LDR         R3, [R6, #1128]             @ 0x468 
    /*00015ea8*/ CMP         R3, #1 
    /*00015eac*/ BEQ         VencSetChnAttrAll_x16c78
    VencSetChnAttrAll_x15eb0:
    /*00015eb0*/ MVN         R3, #0 
    /*00015eb4*/ STR         R3, [R6, #172]              @ 0xac 
    /*00015eb8*/ LDR         R3, [R9, #4] 
    /*00015ebc*/ CMP         R3, #26 
    /*00015ec0*/ BEQ         VencSetChnAttrAll_x16cb8
    VencSetChnAttrAll_x15ec4:
    /*00015ec4*/ LDR         R2, [SP, #16] 
    /*00015ec8*/ MOV         R3, #0 
    /*00015ecc*/ LDR         R4, [R2, #3816]             @ 0xee8 
    /*00015ed0*/ STR         R3, [R2, #3836]             @ 0xefc 
    /*00015ed4*/ CMP         R4, R3 
    /*00015ed8*/ STR         R3, [R2, #3828]             @ 0xef4 
    /*00015edc*/ STR         R3, [R2, #3832]             @ 0xef8 
    /*00015ee0*/ BEQ         VencSetChnAttrAll_x16be0
    /*00015ee4*/ LDR         R3, [R4, #28] 
    /*00015ee8*/ ADD         R7, R4, #28 
    /*00015eec*/ MOV         FP, #256                    @ 0x100 
    /*00015ef0*/ MOV         R8, #512                    @ 0x200 
    /*00015ef4*/ CMP         R3, R7 
    /*00015ef8*/ MOVW        R6, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*00015efc*/ MOVT        FP, #16 
    /*00015f00*/ MOVT        R8, #32 
    /*00015f04*/ MOVT        R6, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    /*00015f08*/ STR         R9, [SP, #12] 
    /*00015f0c*/ BEQ         VencSetChnAttrAll_x15fac
    VencSetChnAttrAll_x15f10:
    /*00015f10*/ LDM         R3, {R1, R2} 
    /*00015f14*/ STR         R2, [R1, #4] 
    /*00015f18*/ STR         R1, [R2] 
    /*00015f1c*/ STR         FP, [R3] 
    /*00015f20*/ STR         R8, [R3, #4] 
    /*00015f24*/ LDR         R2, [R4, #12] 
    /*00015f28*/ SUB         R2, R2, #1 
    /*00015f2c*/ STR         R2, [R4, #12] 
    /*00015f30*/ LDR         R5, [R3, #-8] 
    /*00015f34*/ CMP         R5, #0 
    /*00015f38*/ MOVWEQ      R9, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00015f3c*/ LDREQ       SL, [PC, #2336]             @ 0x0000000000016864 
    /*00015f40*/ MOVTEQ      R9, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00015f44*/ BEQ         VencSetChnAttrAll_x1638c
    VencSetChnAttrAll_x15f48:
    /*00015f48*/ LDR         R2, [R5, #-12] 
    /*00015f4c*/ MOV         R3, #0 
    /*00015f50*/ MOVT        R3, #13590                  @ 0x3516 
    /*00015f54*/ CMP         R2, R3 
    /*00015f58*/ BEQ         VencSetChnAttrAll_x15f78
    /*00015f5c*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*00015f60*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00015f64*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*00015f68*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00015f6c*/ MOV         R2, #141                    @ 0x8d 
    /*00015f70*/ LDR         R1, [PC, #2288]             @ 0x0000000000016868 
    /*00015f74*/ BL          0x0000000000015F74          @ osal_panic [R_ARM_CALL: +0x0] 
    VencSetChnAttrAll_x15f78:
    /*00015f78*/ LDR         R2, [R4, #24] 
    /*00015f7c*/ SUB         R1, R5, #8 
    /*00015f80*/ ADD         R3, R4, #20 
    /*00015f84*/ STR         R1, [R4, #24] 
    /*00015f88*/ STR         R3, [R5, #-8] 
    /*00015f8c*/ STR         R2, [R5, #-4] 
    /*00015f90*/ STR         R1, [R2] 
    /*00015f94*/ LDR         R3, [R4, #8] 
    /*00015f98*/ ADD         R3, R3, #1 
    /*00015f9c*/ STR         R3, [R4, #8] 
    /*00015fa0*/ LDR         R3, [R4, #28] 
    /*00015fa4*/ CMP         R3, R7 
    /*00015fa8*/ BNE         VencSetChnAttrAll_x15f10
    VencSetChnAttrAll_x15fac:
    /*00015fac*/ LDR         R3, [R4, #36]               @ 0x24 
    /*00015fb0*/ ADD         R7, R4, #36                 @ 0x24 
    /*00015fb4*/ LDR         R9, [SP, #12] 
    /*00015fb8*/ MOV         FP, #256                    @ 0x100 
    /*00015fbc*/ CMP         R3, R7 
    /*00015fc0*/ MOV         R8, #512                    @ 0x200 
    /*00015fc4*/ MOVW        R6, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*00015fc8*/ MOVT        FP, #16 
    /*00015fcc*/ MOVT        R8, #32 
    /*00015fd0*/ MOVT        R6, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    /*00015fd4*/ STR         R9, [SP, #12] 
    /*00015fd8*/ BEQ         VencSetChnAttrAll_x16078
    VencSetChnAttrAll_x15fdc:
    /*00015fdc*/ LDM         R3, {R1, R2} 
    /*00015fe0*/ STR         R2, [R1, #4] 
    /*00015fe4*/ STR         R1, [R2] 
    /*00015fe8*/ STR         FP, [R3] 
    /*00015fec*/ STR         R8, [R3, #4] 
    /*00015ff0*/ LDR         R2, [R4, #16] 
    /*00015ff4*/ SUB         R2, R2, #1 
    /*00015ff8*/ STR         R2, [R4, #16] 
    /*00015ffc*/ LDR         R5, [R3, #-8] 
    /*00016000*/ CMP         R5, #0 
    /*00016004*/ MOVWEQ      R9, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00016008*/ LDREQ       SL, [PC, #2132]             @ 0x0000000000016864 
    /*0001600c*/ MOVTEQ      R9, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00016010*/ BEQ         VencSetChnAttrAll_x163dc
    VencSetChnAttrAll_x16014:
    /*00016014*/ LDR         R2, [R5, #-12] 
    /*00016018*/ MOV         R3, #0 
    /*0001601c*/ MOVT        R3, #13590                  @ 0x3516 
    /*00016020*/ CMP         R2, R3 
    /*00016024*/ BEQ         VencSetChnAttrAll_x16044
    /*00016028*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0001602c*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00016030*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*00016034*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00016038*/ MOV         R2, #141                    @ 0x8d 
    /*0001603c*/ LDR         R1, [PC, #2084]             @ 0x0000000000016868 
    /*00016040*/ BL          0x0000000000016040          @ osal_panic [R_ARM_CALL: +0x0] 
    VencSetChnAttrAll_x16044:
    /*00016044*/ LDR         R2, [R4, #24] 
    /*00016048*/ SUB         R1, R5, #8 
    /*0001604c*/ ADD         R3, R4, #20 
    /*00016050*/ STR         R1, [R4, #24] 
    /*00016054*/ STR         R3, [R5, #-8] 
    /*00016058*/ STR         R2, [R5, #-4] 
    /*0001605c*/ STR         R1, [R2] 
    /*00016060*/ LDR         R3, [R4, #8] 
    /*00016064*/ ADD         R3, R3, #1 
    /*00016068*/ STR         R3, [R4, #8] 
    /*0001606c*/ LDR         R3, [R4, #36]               @ 0x24 
    /*00016070*/ CMP         R3, R7 
    /*00016074*/ BNE         VencSetChnAttrAll_x15fdc
    VencSetChnAttrAll_x16078:
    /*00016078*/ LDR         R3, [SP, #16] 
    /*0001607c*/ LDR         R9, [SP, #12] 
    /*00016080*/ LDR         R4, [R3, #3816]             @ 0xee8 
    /*00016084*/ CMP         R4, #0 
    /*00016088*/ BEQ         VencSetChnAttrAll_x16bd0
    /*0001608c*/ LDR         R2, [R4, #28] 
    /*00016090*/ ADD         R3, R4, #28 
    /*00016094*/ CMP         R2, R3 
    /*00016098*/ BEQ         VencSetChnAttrAll_x16b94
    VencSetChnAttrAll_x1609c:
    /*0001609c*/ ADD         R3, R9, #11904              @ 0x2e80 
    /*000160a0*/ MOV         R1, #8 
    /*000160a4*/ MOV         R0, #3 
    /*000160a8*/ MOV         R2, R3 
    /*000160ac*/ ADD         R2, R2, #60                 @ 0x3c 
    /*000160b0*/ MOVW        R3, #11999                  @ 0x2edf 
    /*000160b4*/ STR         R2, [SP, #28] 
    /*000160b8*/ MOV         R4, R2 
    /*000160bc*/ STR         R3, [SP] 
    /*000160c0*/ MOVW        R2, #0                      @ .LC317 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x388c] 
    /*000160c4*/ LDR         R3, [PC, #1956]             @ 0x0000000000016870 
    /*000160c8*/ MOVT        R2, #0                      @ .LC317 [R_ARM_MOVT_ABS: .rodata.str1.4+0x388c] 
    /*000160cc*/ BL          0x00000000000160CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000160d0*/ CMP         R4, #0 
    /*000160d4*/ BEQ         VencSetChnAttrAll_x16148
    /*000160d8*/ LDR         R3, [SP, #16] 
    /*000160dc*/ LDR         R4, [R3, #3816]             @ 0xee8 
    /*000160e0*/ CMP         R4, #0 
    /*000160e4*/ BEQ         VencSetChnAttrAll_x16148
    VencSetChnAttrAll_x160e8:
    /*000160e8*/ LDR         R2, [R4, #-12] 
    /*000160ec*/ MOV         R3, #0 
    /*000160f0*/ MOVT        R3, #13590                  @ 0x3516 
    /*000160f4*/ CMP         R2, R3 
    /*000160f8*/ BEQ         VencSetChnAttrAll_x16118
    /*000160fc*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*00016100*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00016104*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*00016108*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0001610c*/ MOV         R2, #141                    @ 0x8d 
    /*00016110*/ LDR         R1, [PC, #1872]             @ 0x0000000000016868 
    /*00016114*/ BL          0x0000000000016114          @ osal_panic [R_ARM_CALL: +0x0] 
    VencSetChnAttrAll_x16118:
    /*00016118*/ LDR         R0, [SP, #16] 
    /*0001611c*/ SUB         R1, R4, #8 
    /*00016120*/ LDR         R3, [SP, #28] 
    /*00016124*/ LDR         R2, [R0, #3796]             @ 0xed4 
    /*00016128*/ ADD         R3, R3, #20 
    /*0001612c*/ STR         R1, [R0, #3796]             @ 0xed4 
    /*00016130*/ STR         R3, [R4, #-8] 
    /*00016134*/ STR         R2, [R4, #-4] 
    /*00016138*/ STR         R1, [R2] 
    /*0001613c*/ LDR         R3, [R0, #3780]             @ 0xec4 
    /*00016140*/ ADD         R3, R3, #1 
    /*00016144*/ STR         R3, [R0, #3780]             @ 0xec4 
    VencSetChnAttrAll_x16148:
    /*00016148*/ LDR         R2, [SP, #16] 
    /*0001614c*/ MOV         R3, #0 
    /*00016150*/ STR         R3, [R2, #3816]             @ 0xee8 
    VencSetChnAttrAll_x16154:
    /*00016154*/ LDR         R3, [SP, #28] 
    /*00016158*/ CMP         R3, #0 
    /*0001615c*/ BEQ         VencSetChnAttrAll_x15ba8
    /*00016160*/ MOV         R7, #256                    @ 0x100 
    /*00016164*/ MOVW        R8, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*00016168*/ MOVT        R7, #16 
    /*0001616c*/ MOVT        R8, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    /*00016170*/ ADD         R3, R3, #28 
    /*00016174*/ STR         R3, [SP, #24] 
    VencSetChnAttrAll_x16178:
    /*00016178*/ MOV         R6, #512                    @ 0x200 
    /*0001617c*/ MOVT        R6, #32 
    /*00016180*/ MOV         R3, #0 
    /*00016184*/ MOVT        R3, #13590                  @ 0x3516 
    /*00016188*/ STR         R3, [SP, #12] 
    VencSetChnAttrAll_x1618c:
    /*0001618c*/ LDR         R3, [SP, #16] 
    /*00016190*/ LDR         R2, [SP, #24] 
    /*00016194*/ LDR         R3, [R3, #3800]             @ 0xed8 
    /*00016198*/ CMP         R3, R2 
    /*0001619c*/ BEQ         VencSetChnAttrAll_x16874
    /*000161a0*/ LDM         R3, {R1, R2} 
    /*000161a4*/ STR         R2, [R1, #4] 
    /*000161a8*/ STR         R1, [R2] 
    /*000161ac*/ LDR         R1, [SP, #16] 
    /*000161b0*/ STR         R7, [R3] 
    /*000161b4*/ STR         R6, [R3, #4] 
    /*000161b8*/ LDR         R2, [R1, #3784]             @ 0xec8 
    /*000161bc*/ SUB         R2, R2, #1 
    /*000161c0*/ STR         R2, [R1, #3784]             @ 0xec8 
    /*000161c4*/ LDR         R4, [R3, #-8] 
    /*000161c8*/ CMP         R4, #0 
    /*000161cc*/ ADDNE       R9, R4, #28 
    /*000161d0*/ BEQ         VencSetChnAttrAll_x167fc
    /*000161d4*/ LDR         R3, [R4, #28] 
    /*000161d8*/ CMP         R9, R3 
    /*000161dc*/ BEQ         VencSetChnAttrAll_x16278
    VencSetChnAttrAll_x161e0:
    /*000161e0*/ LDM         R3, {R1, R2} 
    /*000161e4*/ STR         R2, [R1, #4] 
    /*000161e8*/ STR         R1, [R2] 
    /*000161ec*/ STR         R7, [R3] 
    /*000161f0*/ STR         R6, [R3, #4] 
    /*000161f4*/ LDR         R2, [R4, #12] 
    /*000161f8*/ SUB         R2, R2, #1 
    /*000161fc*/ STR         R2, [R4, #12] 
    /*00016200*/ LDR         R5, [R3, #-8] 
    /*00016204*/ CMP         R5, #0 
    /*00016208*/ MOVWEQ      SL, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*0001620c*/ LDREQ       FP, [PC, #1616]             @ 0x0000000000016864 
    /*00016210*/ MOVTEQ      SL, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00016214*/ BEQ         VencSetChnAttrAll_x1642c
    VencSetChnAttrAll_x16218:
    /*00016218*/ LDR         R3, [R5, #-12] 
    /*0001621c*/ LDR         R2, [SP, #12] 
    /*00016220*/ CMP         R3, R2 
    /*00016224*/ BEQ         VencSetChnAttrAll_x16244
    /*00016228*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*0001622c*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00016230*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*00016234*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00016238*/ MOV         R2, #141                    @ 0x8d 
    /*0001623c*/ LDR         R1, [PC, #1572]             @ 0x0000000000016868 
    /*00016240*/ BL          0x0000000000016240          @ osal_panic [R_ARM_CALL: +0x0] 
    VencSetChnAttrAll_x16244:
    /*00016244*/ LDR         R2, [R4, #24] 
    /*00016248*/ SUB         R1, R5, #8 
    /*0001624c*/ ADD         R3, R4, #20 
    /*00016250*/ STR         R1, [R4, #24] 
    /*00016254*/ STR         R3, [R5, #-8] 
    /*00016258*/ STR         R2, [R5, #-4] 
    /*0001625c*/ STR         R1, [R2] 
    /*00016260*/ LDR         R3, [R4, #8] 
    /*00016264*/ ADD         R3, R3, #1 
    /*00016268*/ STR         R3, [R4, #8] 
    /*0001626c*/ LDR         R3, [R4, #28] 
    /*00016270*/ CMP         R9, R3 
    /*00016274*/ BNE         VencSetChnAttrAll_x161e0
    VencSetChnAttrAll_x16278:
    /*00016278*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0001627c*/ ADD         R9, R4, #36                 @ 0x24 
    /*00016280*/ CMP         R9, R3 
    /*00016284*/ BEQ         VencSetChnAttrAll_x16320
    VencSetChnAttrAll_x16288:
    /*00016288*/ LDM         R3, {R1, R2} 
    /*0001628c*/ STR         R2, [R1, #4] 
    /*00016290*/ STR         R1, [R2] 
    /*00016294*/ STR         R7, [R3] 
    /*00016298*/ STR         R6, [R3, #4] 
    /*0001629c*/ LDR         R2, [R4, #16] 
    /*000162a0*/ SUB         R2, R2, #1 
    /*000162a4*/ STR         R2, [R4, #16] 
    /*000162a8*/ LDR         R5, [R3, #-8] 
    /*000162ac*/ CMP         R5, #0 
    /*000162b0*/ MOVWEQ      SL, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*000162b4*/ LDREQ       FP, [PC, #1448]             @ 0x0000000000016864 
    /*000162b8*/ MOVTEQ      SL, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*000162bc*/ BEQ         VencSetChnAttrAll_x1647c
    VencSetChnAttrAll_x162c0:
    /*000162c0*/ LDR         R3, [R5, #-12] 
    /*000162c4*/ LDR         R2, [SP, #12] 
    /*000162c8*/ CMP         R3, R2 
    /*000162cc*/ BEQ         VencSetChnAttrAll_x162ec
    /*000162d0*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*000162d4*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*000162d8*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*000162dc*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*000162e0*/ MOV         R2, #141                    @ 0x8d 
    /*000162e4*/ LDR         R1, [PC, #1404]             @ 0x0000000000016868 
    /*000162e8*/ BL          0x00000000000162E8          @ osal_panic [R_ARM_CALL: +0x0] 
    VencSetChnAttrAll_x162ec:
    /*000162ec*/ LDR         R2, [R4, #24] 
    /*000162f0*/ SUB         R1, R5, #8 
    /*000162f4*/ ADD         R3, R4, #20 
    /*000162f8*/ STR         R1, [R4, #24] 
    /*000162fc*/ STR         R3, [R5, #-8] 
    /*00016300*/ STR         R2, [R5, #-4] 
    /*00016304*/ STR         R1, [R2] 
    /*00016308*/ LDR         R3, [R4, #8] 
    /*0001630c*/ ADD         R3, R3, #1 
    /*00016310*/ STR         R3, [R4, #8] 
    /*00016314*/ LDR         R3, [R4, #36]               @ 0x24 
    /*00016318*/ CMP         R9, R3 
    /*0001631c*/ BNE         VencSetChnAttrAll_x16288
    VencSetChnAttrAll_x16320:
    /*00016320*/ CMP         R4, #0 
    /*00016324*/ BEQ         VencSetChnAttrAll_x1618c
    /*00016328*/ LDR         R2, [R4, #-12] 
    /*0001632c*/ MOV         R3, #0 
    /*00016330*/ MOVT        R3, #13590                  @ 0x3516 
    /*00016334*/ CMP         R2, R3 
    /*00016338*/ BEQ         VencSetChnAttrAll_x16358
    /*0001633c*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*00016340*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00016344*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*00016348*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0001634c*/ MOV         R2, #141                    @ 0x8d 
    /*00016350*/ LDR         R1, [PC, #1296]             @ 0x0000000000016868 
    /*00016354*/ BL          0x0000000000016354          @ osal_panic [R_ARM_CALL: +0x0] 
    VencSetChnAttrAll_x16358:
    /*00016358*/ LDR         R0, [SP, #16] 
    /*0001635c*/ SUB         R1, R4, #8 
    /*00016360*/ LDR         R3, [SP, #28] 
    /*00016364*/ LDR         R2, [R0, #3796]             @ 0xed4 
    /*00016368*/ ADD         R3, R3, #20 
    /*0001636c*/ STR         R1, [R0, #3796]             @ 0xed4 
    /*00016370*/ STR         R3, [R4, #-8] 
    /*00016374*/ STR         R2, [R4, #-4] 
    /*00016378*/ STR         R1, [R2] 
    /*0001637c*/ LDR         R3, [R0, #3780]             @ 0xec4 
    /*00016380*/ ADD         R3, R3, #1 
    /*00016384*/ STR         R3, [R0, #3780]             @ 0xec4 
    /*00016388*/ B           VencSetChnAttrAll_x16178
    VencSetChnAttrAll_x1638c:
    /*0001638c*/ MOV         R3, R6 
    /*00016390*/ MOVW        R2, #367                    @ 0x16f 
    /*00016394*/ MOV         R1, SL 
    /*00016398*/ MOV         R0, R9 
    /*0001639c*/ BL          0x000000000001639C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000163a0*/ LDR         R3, [R4, #28] 
    /*000163a4*/ CMP         R3, R7 
    /*000163a8*/ BEQ         VencSetChnAttrAll_x15fac
    /*000163ac*/ LDM         R3, {R1, R2} 
    /*000163b0*/ STR         R2, [R1, #4] 
    /*000163b4*/ STR         R1, [R2] 
    /*000163b8*/ STR         FP, [R3] 
    /*000163bc*/ STR         R8, [R3, #4] 
    /*000163c0*/ LDR         R2, [R4, #12] 
    /*000163c4*/ SUB         R2, R2, #1 
    /*000163c8*/ STR         R2, [R4, #12] 
    /*000163cc*/ LDR         R5, [R3, #-8] 
    /*000163d0*/ CMP         R5, #0 
    /*000163d4*/ BNE         VencSetChnAttrAll_x15f48
    /*000163d8*/ B           VencSetChnAttrAll_x1638c
    VencSetChnAttrAll_x163dc:
    /*000163dc*/ MOV         R3, R6 
    /*000163e0*/ MOVW        R2, #373                    @ 0x175 
    /*000163e4*/ MOV         R1, SL 
    /*000163e8*/ MOV         R0, R9 
    /*000163ec*/ BL          0x00000000000163EC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000163f0*/ LDR         R3, [R4, #36]               @ 0x24 
    /*000163f4*/ CMP         R3, R7 
    /*000163f8*/ BEQ         VencSetChnAttrAll_x16078
    /*000163fc*/ LDM         R3, {R1, R2} 
    /*00016400*/ STR         R2, [R1, #4] 
    /*00016404*/ STR         R1, [R2] 
    /*00016408*/ STR         FP, [R3] 
    /*0001640c*/ STR         R8, [R3, #4] 
    /*00016410*/ LDR         R2, [R4, #16] 
    /*00016414*/ SUB         R2, R2, #1 
    /*00016418*/ STR         R2, [R4, #16] 
    /*0001641c*/ LDR         R5, [R3, #-8] 
    /*00016420*/ CMP         R5, #0 
    /*00016424*/ BNE         VencSetChnAttrAll_x16014
    /*00016428*/ B           VencSetChnAttrAll_x163dc
    VencSetChnAttrAll_x1642c:
    /*0001642c*/ MOV         R3, R8 
    /*00016430*/ MOVW        R2, #367                    @ 0x16f 
    /*00016434*/ MOV         R1, FP 
    /*00016438*/ MOV         R0, SL 
    /*0001643c*/ BL          0x000000000001643C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00016440*/ LDR         R3, [R4, #28] 
    /*00016444*/ CMP         R3, R9 
    /*00016448*/ BEQ         VencSetChnAttrAll_x16278
    /*0001644c*/ LDM         R3, {R1, R2} 
    /*00016450*/ STR         R2, [R1, #4] 
    /*00016454*/ STR         R1, [R2] 
    /*00016458*/ STR         R7, [R3] 
    /*0001645c*/ STR         R6, [R3, #4] 
    /*00016460*/ LDR         R2, [R4, #12] 
    /*00016464*/ SUB         R2, R2, #1 
    /*00016468*/ STR         R2, [R4, #12] 
    /*0001646c*/ LDR         R5, [R3, #-8] 
    /*00016470*/ CMP         R5, #0 
    /*00016474*/ BNE         VencSetChnAttrAll_x16218
    /*00016478*/ B           VencSetChnAttrAll_x1642c
    VencSetChnAttrAll_x1647c:
    /*0001647c*/ MOV         R3, R8 
    /*00016480*/ MOVW        R2, #373                    @ 0x175 
    /*00016484*/ MOV         R1, FP 
    /*00016488*/ MOV         R0, SL 
    /*0001648c*/ BL          0x000000000001648C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00016490*/ LDR         R3, [R4, #36]               @ 0x24 
    /*00016494*/ CMP         R9, R3 
    /*00016498*/ BEQ         VencSetChnAttrAll_x16320
    /*0001649c*/ LDM         R3, {R1, R2} 
    /*000164a0*/ STR         R2, [R1, #4] 
    /*000164a4*/ STR         R1, [R2] 
    /*000164a8*/ STR         R7, [R3] 
    /*000164ac*/ STR         R6, [R3, #4] 
    /*000164b0*/ LDR         R2, [R4, #16] 
    /*000164b4*/ SUB         R2, R2, #1 
    /*000164b8*/ STR         R2, [R4, #16] 
    /*000164bc*/ LDR         R5, [R3, #-8] 
    /*000164c0*/ CMP         R5, #0 
    /*000164c4*/ BNE         VencSetChnAttrAll_x162c0
    /*000164c8*/ B           VencSetChnAttrAll_x1647c
    VencSetChnAttrAll_x164cc:
    /*000164cc*/ ADD         R1, SP, #40                 @ 0x28 
    /*000164d0*/ ADD         R0, R4, #60                 @ 0x3c 
    /*000164d4*/ BL          0x00000000000164D4          @ VencGetDstFrameRate [R_ARM_CALL: .text+0x149ac] 
    /*000164d8*/ LDR         R2, [SP, #40]               @ 0x28 
    /*000164dc*/ LDR         R1, [R4, #28] 
    /*000164e0*/ LDR         R0, [R4, #24] 
    /*000164e4*/ BL          0x00000000000164E4          @ VencGetAvcTileNum [R_ARM_CALL: .text+0x26998] 
    /*000164e8*/ ADD         R3, R9, #32768              @ 0x8000 
    /*000164ec*/ LDR         R3, [R3, #3296]             @ 0xce0 
    /*000164f0*/ CMP         R0, R3 
    /*000164f4*/ MOV         R7, R0 
    /*000164f8*/ BEQ         VencSetChnAttrAll_x1661c
    /*000164fc*/ MOV         R0, #19 
    /*00016500*/ BL          0x0000000000016500          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016504*/ MOV         R1, R6 
    /*00016508*/ LDR         R3, [R0, #56]               @ 0x38 
    /*0001650c*/ MOV         R0, R5 
    /*00016510*/ BLX         R3 
    /*00016514*/ SUBS        R6, R0, #0 
    /*00016518*/ MOVWNE      R3, #11620                  @ 0x2d64 
    /*0001651c*/ BNE         VencSetChnAttrAll_x165d0
    /*00016520*/ MOV         R0, #10 
    /*00016524*/ BL          0x0000000000016524          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016528*/ ADD         R2, R9, #12800              @ 0x3200 
    /*0001652c*/ MOV         R1, R7 
    /*00016530*/ ADD         R2, R2, #16 
    /*00016534*/ LDR         R3, [R0, #228]              @ 0xe4 
    /*00016538*/ MOV         R0, R5 
    /*0001653c*/ BLX         R3 
    /*00016540*/ SUBS        R6, R0, #0 
    /*00016544*/ MOVWNE      R3, #11627                  @ 0x2d6b 
    /*00016548*/ BEQ         VencSetChnAttrAll_x1661c
    VencSetChnAttrAll_x1654c:
    /*0001654c*/ STR         R3, [SP] 
    /*00016550*/ MOVW        R2, #0                      @ .LC429 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x58fc] 
    /*00016554*/ LDR         R3, [PC, #788]              @ 0x0000000000016870 
    /*00016558*/ MOVT        R2, #0                      @ .LC429 [R_ARM_MOVT_ABS: .rodata.str1.4+0x58fc] 
    /*0001655c*/ MOV         R1, #8 
    /*00016560*/ MOV         R0, #3 
    /*00016564*/ BL          0x0000000000016564          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016568*/ BIC         R3, R6, #267386880          @ 0xff00000 
    /*0001656c*/ BIC         R3, R3, #983040             @ 0xf0000 
    /*00016570*/ ORR         R3, R3, #524288             @ 0x80000 
    /*00016574*/ STR         R3, [SP, #20] 
    /*00016578*/ B           VencSetChnAttrAll_x15ba8
    VencSetChnAttrAll_x1657c:
    /*0001657c*/ ADD         R1, SP, #40                 @ 0x28 
    /*00016580*/ ADD         R0, R4, #60                 @ 0x3c 
    /*00016584*/ BL          0x0000000000016584          @ VencGetDstFrameRate [R_ARM_CALL: .text+0x149ac] 
    /*00016588*/ LDR         R2, [SP, #40]               @ 0x28 
    /*0001658c*/ LDR         R1, [R4, #28] 
    /*00016590*/ LDR         R0, [R4, #24] 
    /*00016594*/ BL          0x0000000000016594          @ VencGetHevcTileNum [R_ARM_CALL: .text+0x269a0] 
    /*00016598*/ ADD         R3, R9, #32768              @ 0x8000 
    /*0001659c*/ LDR         R3, [R3, #3296]             @ 0xce0 
    /*000165a0*/ CMP         R0, R3 
    /*000165a4*/ MOV         R7, R0 
    /*000165a8*/ BEQ         VencSetChnAttrAll_x1661c
    /*000165ac*/ MOV         R0, #19 
    /*000165b0*/ BL          0x00000000000165B0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000165b4*/ MOV         R1, R6 
    /*000165b8*/ LDR         R3, [R0, #56]               @ 0x38 
    /*000165bc*/ MOV         R0, R5 
    /*000165c0*/ BLX         R3 
    /*000165c4*/ SUBS        R6, R0, #0 
    /*000165c8*/ BEQ         VencSetChnAttrAll_x16b64
    /*000165cc*/ MOVW        R3, #11641                  @ 0x2d79 
    VencSetChnAttrAll_x165d0:
    /*000165d0*/ MOVW        R2, #0                      @ .LC428 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x58c4] 
    /*000165d4*/ STR         R3, [SP] 
    /*000165d8*/ MOVT        R2, #0                      @ .LC428 [R_ARM_MOVT_ABS: .rodata.str1.4+0x58c4] 
    /*000165dc*/ B           VencSetChnAttrAll_x15c14
    VencSetChnAttrAll_x165e0:
    /*000165e0*/ LDR         R2, [R1, #36]               @ 0x24 
    /*000165e4*/ LDR         R0, [R4, #24] 
    /*000165e8*/ LDR         R1, [R1, #28] 
    /*000165ec*/ BL          0x00000000000165EC          @ VencGetProResTileNum [R_ARM_CALL: .text+0x26990] 
    /*000165f0*/ MOV         R6, R0 
    /*000165f4*/ MOV         R0, #44                     @ 0x2c 
    /*000165f8*/ BL          0x00000000000165F8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000165fc*/ ADD         R2, R9, #12800              @ 0x3200 
    /*00016600*/ MOV         R1, R6 
    /*00016604*/ ADD         R2, R2, #16 
    /*00016608*/ LDR         R3, [R0, #52]               @ 0x34 
    /*0001660c*/ MOV         R0, R5 
    /*00016610*/ BLX         R3 
    /*00016614*/ SUBS        R6, R0, #0 
    /*00016618*/ BNE         VencSetChnAttrAll_x16bbc
    VencSetChnAttrAll_x1661c:
    /*0001661c*/ LDR         R3, [R9, #4] 
    /*00016620*/ B           VencSetChnAttrAll_x15958
    VencSetChnAttrAll_x16624:
    /*00016624*/ MOV         R0, #10 
    /*00016628*/ BL          0x0000000000016628          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001662c*/ MOV         R1, R8 
    /*00016630*/ LDR         R3, [R0, #188]              @ 0xbc 
    /*00016634*/ MOV         R0, R5 
    /*00016638*/ BLX         R3 
    /*0001663c*/ MOV         SL, R0 
    /*00016640*/ B           VencSetChnAttrAll_x15ad8
    VencSetChnAttrAll_x16644:
    /*00016644*/ MOV         R0, #19 
    /*00016648*/ BL          0x0000000000016648          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001664c*/ ADD         R1, R9, #13312              @ 0x3400 
    /*00016650*/ ADD         R3, R9, #13312              @ 0x3400 
    /*00016654*/ ADD         R1, R1, #4 
    /*00016658*/ ADD         R3, R3, #32 
    /*0001665c*/ STR         R3, [SP, #20] 
    /*00016660*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00016664*/ MOV         R0, R5 
    /*00016668*/ BLX         R3 
    /*0001666c*/ STR         R0, [SP, #24] 
    /*00016670*/ MOV         R0, #19 
    /*00016674*/ BL          0x0000000000016674          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016678*/ ADD         R1, R9, #13312              @ 0x3400 
    /*0001667c*/ ADD         R1, R1, #20 
    /*00016680*/ LDR         R2, [R0, #112]              @ 0x70 
    /*00016684*/ MOV         R0, R5 
    /*00016688*/ BLX         R2 
    /*0001668c*/ LDR         R3, [SP, #24] 
    /*00016690*/ ORR         R3, R3, R0 
    /*00016694*/ MOV         R0, #19 
    /*00016698*/ STR         R3, [SP, #24] 
    /*0001669c*/ BL          0x000000000001669C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000166a0*/ ADD         R1, R9, #13312              @ 0x3400 
    /*000166a4*/ ADD         R1, R1, #36                 @ 0x24 
    /*000166a8*/ LDR         R2, [R0, #128]              @ 0x80 
    /*000166ac*/ MOV         R0, R5 
    /*000166b0*/ BLX         R2 
    /*000166b4*/ LDR         R3, [SP, #24] 
    /*000166b8*/ ORR         R3, R3, R0 
    /*000166bc*/ MOV         R0, #19 
    /*000166c0*/ STR         R3, [SP, #24] 
    /*000166c4*/ BL          0x00000000000166C4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000166c8*/ LDR         R1, [SP, #20] 
    /*000166cc*/ LDR         R2, [R0, #104]              @ 0x68 
    /*000166d0*/ MOV         R0, R5 
    /*000166d4*/ BLX         R2 
    /*000166d8*/ LDR         R2, [R9, #4] 
    /*000166dc*/ LDR         R3, [SP, #24] 
    /*000166e0*/ CMP         R2, #96                     @ 0x60 
    /*000166e4*/ ORR         R3, R3, R0 
    /*000166e8*/ STR         R3, [SP, #24] 
    /*000166ec*/ BEQ         VencSetChnAttrAll_x16bf0
    /*000166f0*/ MOV         R0, #13 
    /*000166f4*/ BL          0x00000000000166F4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000166f8*/ MOV         R1, R8 
    /*000166fc*/ LDR         R3, [R0, #196]              @ 0xc4 
    /*00016700*/ MOV         R0, R5 
    /*00016704*/ BLX         R3 
    /*00016708*/ STR         R0, [SP, #28] 
    /*0001670c*/ MOV         R0, #13 
    /*00016710*/ BL          0x0000000000016710          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016714*/ ADD         R1, R9, #13248              @ 0x33c0 
    /*00016718*/ ADD         R1, R1, #52                 @ 0x34 
    /*0001671c*/ LDR         R2, [R0, #164]              @ 0xa4 
    /*00016720*/ MOV         R0, R5 
    /*00016724*/ BLX         R2 
    /*00016728*/ LDR         R3, [SP, #28] 
    /*0001672c*/ LDR         R2, [SP, #24] 
    /*00016730*/ ORR         R3, R3, R0 
    /*00016734*/ MOV         R0, #13 
    /*00016738*/ ORR         R3, R3, R2 
    /*0001673c*/ STR         R3, [SP, #24] 
    /*00016740*/ BL          0x0000000000016740          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016744*/ ADD         R1, R9, #12800              @ 0x3200 
    /*00016748*/ ADD         R1, R1, #48                 @ 0x30 
    /*0001674c*/ LDR         R2, [R0, #144]              @ 0x90 
    /*00016750*/ MOV         R0, R5 
    /*00016754*/ BLX         R2 
    /*00016758*/ LDR         R3, [SP, #24] 
    /*0001675c*/ ORR         R3, R3, R0 
    /*00016760*/ MOV         R0, #13 
    /*00016764*/ STR         R3, [SP, #24] 
    /*00016768*/ BL          0x0000000000016768          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001676c*/ LDR         R1, [SP, #20] 
    /*00016770*/ LDR         R2, [R0, #228]              @ 0xe4 
    VencSetChnAttrAll_x16774:
    /*00016774*/ MOV         R0, R5 
    /*00016778*/ BLX         R2 
    /*0001677c*/ LDR         R3, [SP, #24] 
    /*00016780*/ ORR         R3, R3, R0 
    /*00016784*/ STR         R3, [SP, #20] 
    /*00016788*/ LDR         R3, [SP, #20] 
    /*0001678c*/ CMP         R3, #0 
    /*00016790*/ BEQ         VencSetChnAttrAll_x15b20
    /*00016794*/ MOVW        R3, #11831                  @ 0x2e37 
    /*00016798*/ MOV         R1, #8 
    /*0001679c*/ STR         R3, [SP] 
    /*000167a0*/ MOVW        R2, #0                      @ .LC432 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x59a0] 
    /*000167a4*/ LDR         R3, [PC, #196]              @ 0x0000000000016870 
    /*000167a8*/ MOVT        R2, #0                      @ .LC432 [R_ARM_MOVT_ABS: .rodata.str1.4+0x59a0] 
    /*000167ac*/ STR         R5, [SP, #4] 
    /*000167b0*/ MOV         R0, #3 
    /*000167b4*/ BL          0x00000000000167B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000167b8*/ ADD         R1, SP, #36                 @ 0x24 
    /*000167bc*/ MOV         R0, R7 
    /*000167c0*/ BL          0x00000000000167C0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000167c4*/ LDR         R3, [SP, #20] 
    /*000167c8*/ BIC         R9, R3, #267386880          @ 0xff00000 
    /*000167cc*/ BIC         R9, R9, #983040             @ 0xf0000 
    /*000167d0*/ ORR         R3, R9, #524288             @ 0x80000 
    /*000167d4*/ STR         R3, [SP, #20] 
    /*000167d8*/ B           VencSetChnAttrAll_x15ba8
    VencSetChnAttrAll_x167dc:
    /*000167dc*/ MOV         R0, #10 
    /*000167e0*/ BL          0x00000000000167E0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000167e4*/ MOV         R1, R8 
    /*000167e8*/ LDR         R3, [R0, #192]              @ 0xc0 
    /*000167ec*/ MOV         R0, R5 
    /*000167f0*/ BLX         R3 
    /*000167f4*/ MOV         R8, R0 
    /*000167f8*/ B           VencSetChnAttrAll_x15a30
    VencSetChnAttrAll_x167fc:
    /*000167fc*/ MOVW        R3, #0                      @ .LC318 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38d4] 
    /*00016800*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00016804*/ MOVT        R3, #0                      @ .LC318 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38d4] 
    /*00016808*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0001680c*/ MOV         R2, #188                    @ 0xbc 
    /*00016810*/ LDR         R1, [PC, #84]               @ 0x000000000001686c 
    /*00016814*/ BL          0x0000000000016814          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00016818*/ B           VencSetChnAttrAll_x1618c
    VencSetChnAttrAll_x1681c:
    /*0001681c*/ MOVW        R3, #11841                  @ 0x2e41 
    /*00016820*/ MOV         R1, #8 
    /*00016824*/ STR         R3, [SP] 
    /*00016828*/ MOVW        R2, #0                      @ .LC433 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x59ec] 
    /*0001682c*/ LDR         R3, [PC, #60]               @ 0x0000000000016870 
    /*00016830*/ MOVT        R2, #0                      @ .LC433 [R_ARM_MOVT_ABS: .rodata.str1.4+0x59ec] 
    /*00016834*/ STR         R5, [SP, #4] 
    /*00016838*/ MOV         R0, #3 
    /*0001683c*/ BL          0x000000000001683C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016840*/ ADD         R1, SP, #36                 @ 0x24 
    /*00016844*/ MOV         R0, R7 
    /*00016848*/ BL          0x0000000000016848          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001684c*/ LDR         R3, [SP, #20] 
    /*00016850*/ BIC         R3, R3, #267386880          @ 0xff00000 
    /*00016854*/ BIC         R3, R3, #983040             @ 0xf0000 
    /*00016858*/ ORR         R3, R3, #524288             @ 0x80000 
    /*0001685c*/ STR         R3, [SP, #20] 
    /*00016860*/ B           VencSetChnAttrAll_x15ba8
    /*00016864*/ ANDEQ       R0, R0, R4, LSL #9 
    /*00016868*/ STRDEQ      R0, [R0], -IP 
    /*0001686c*/ MULEQ       R0, R8, R4 
    /*00016870*/ ANDEQ       R0, R0, R4, ASR #21 
    VencSetChnAttrAll_x16874:
    /*00016874*/ MOV         R7, #256                    @ 0x100 
    /*00016878*/ MOVW        R8, #0                      @ .LC316 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3884] 
    /*0001687c*/ LDR         R3, [SP, #28] 
    /*00016880*/ MOVT        R7, #16 
    /*00016884*/ MOVT        R8, #0                      @ .LC316 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3884] 
    /*00016888*/ ADD         R3, R3, #36                 @ 0x24 
    /*0001688c*/ STR         R3, [SP, #24] 
    VencSetChnAttrAll_x16890:
    /*00016890*/ MOV         R6, #512                    @ 0x200 
    /*00016894*/ MOVT        R6, #32 
    /*00016898*/ MOV         R3, #0 
    /*0001689c*/ MOVT        R3, #13590                  @ 0x3516 
    /*000168a0*/ STR         R3, [SP, #12] 
    VencSetChnAttrAll_x168a4:
    /*000168a4*/ LDR         R3, [SP, #16] 
    /*000168a8*/ LDR         R2, [SP, #24] 
    /*000168ac*/ LDR         R3, [R3, #3808]             @ 0xee0 
    /*000168b0*/ CMP         R3, R2 
    /*000168b4*/ BEQ         VencSetChnAttrAll_x15ba8
    /*000168b8*/ LDM         R3, {R1, R2} 
    /*000168bc*/ STR         R2, [R1, #4] 
    /*000168c0*/ STR         R1, [R2] 
    /*000168c4*/ LDR         R1, [SP, #16] 
    /*000168c8*/ STR         R7, [R3] 
    /*000168cc*/ STR         R6, [R3, #4] 
    /*000168d0*/ LDR         R2, [R1, #3788]             @ 0xecc 
    /*000168d4*/ SUB         R2, R2, #1 
    /*000168d8*/ STR         R2, [R1, #3788]             @ 0xecc 
    /*000168dc*/ LDR         R4, [R3, #-8] 
    /*000168e0*/ CMP         R4, #0 
    /*000168e4*/ ADDNE       R9, R4, #28 
    /*000168e8*/ BEQ         VencSetChnAttrAll_x16b44
    /*000168ec*/ LDR         R3, [R4, #28] 
    /*000168f0*/ CMP         R9, R3 
    /*000168f4*/ BEQ         VencSetChnAttrAll_x16990
    VencSetChnAttrAll_x168f8:
    /*000168f8*/ LDM         R3, {R1, R2} 
    /*000168fc*/ STR         R2, [R1, #4] 
    /*00016900*/ STR         R1, [R2] 
    /*00016904*/ STR         R7, [R3] 
    /*00016908*/ STR         R6, [R3, #4] 
    /*0001690c*/ LDR         R2, [R4, #12] 
    /*00016910*/ SUB         R2, R2, #1 
    /*00016914*/ STR         R2, [R4, #12] 
    /*00016918*/ LDR         R5, [R3, #-8] 
    /*0001691c*/ CMP         R5, #0 
    /*00016920*/ MOVWEQ      SL, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00016924*/ LDREQ       FP, [PC, #-200]             @ 0x0000000000016864 
    /*00016928*/ MOVTEQ      SL, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*0001692c*/ BEQ         VencSetChnAttrAll_x16aa4
    VencSetChnAttrAll_x16930:
    /*00016930*/ LDR         R3, [R5, #-12] 
    /*00016934*/ LDR         R2, [SP, #12] 
    /*00016938*/ CMP         R3, R2 
    /*0001693c*/ BEQ         VencSetChnAttrAll_x1695c
    /*00016940*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*00016944*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00016948*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*0001694c*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00016950*/ MOV         R2, #141                    @ 0x8d 
    /*00016954*/ LDR         R1, [PC, #-244]             @ 0x0000000000016868 
    /*00016958*/ BL          0x0000000000016958          @ osal_panic [R_ARM_CALL: +0x0] 
    VencSetChnAttrAll_x1695c:
    /*0001695c*/ LDR         R2, [R4, #24] 
    /*00016960*/ SUB         R1, R5, #8 
    /*00016964*/ ADD         R3, R4, #20 
    /*00016968*/ STR         R1, [R4, #24] 
    /*0001696c*/ STR         R3, [R5, #-8] 
    /*00016970*/ STR         R2, [R5, #-4] 
    /*00016974*/ STR         R1, [R2] 
    /*00016978*/ LDR         R3, [R4, #8] 
    /*0001697c*/ ADD         R3, R3, #1 
    /*00016980*/ STR         R3, [R4, #8] 
    /*00016984*/ LDR         R3, [R4, #28] 
    /*00016988*/ CMP         R9, R3 
    /*0001698c*/ BNE         VencSetChnAttrAll_x168f8
    VencSetChnAttrAll_x16990:
    /*00016990*/ LDR         R3, [R4, #36]               @ 0x24 
    /*00016994*/ ADD         R9, R4, #36                 @ 0x24 
    /*00016998*/ CMP         R3, R9 
    /*0001699c*/ BEQ         VencSetChnAttrAll_x16a38
    VencSetChnAttrAll_x169a0:
    /*000169a0*/ LDM         R3, {R1, R2} 
    /*000169a4*/ STR         R2, [R1, #4] 
    /*000169a8*/ STR         R1, [R2] 
    /*000169ac*/ STR         R7, [R3] 
    /*000169b0*/ STR         R6, [R3, #4] 
    /*000169b4*/ LDR         R2, [R4, #16] 
    /*000169b8*/ SUB         R2, R2, #1 
    /*000169bc*/ STR         R2, [R4, #16] 
    /*000169c0*/ LDR         R5, [R3, #-8] 
    /*000169c4*/ CMP         R5, #0 
    /*000169c8*/ MOVWEQ      SL, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*000169cc*/ LDREQ       FP, [PC, #-368]             @ 0x0000000000016864 
    /*000169d0*/ MOVTEQ      SL, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*000169d4*/ BEQ         VencSetChnAttrAll_x16af4
    VencSetChnAttrAll_x169d8:
    /*000169d8*/ LDR         R3, [R5, #-12] 
    /*000169dc*/ LDR         R2, [SP, #12] 
    /*000169e0*/ CMP         R3, R2 
    /*000169e4*/ BEQ         VencSetChnAttrAll_x16a04
    /*000169e8*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*000169ec*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*000169f0*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*000169f4*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*000169f8*/ MOV         R2, #141                    @ 0x8d 
    /*000169fc*/ LDR         R1, [PC, #-412]             @ 0x0000000000016868 
    /*00016a00*/ BL          0x0000000000016A00          @ osal_panic [R_ARM_CALL: +0x0] 
    VencSetChnAttrAll_x16a04:
    /*00016a04*/ LDR         R2, [R4, #24] 
    /*00016a08*/ SUB         R1, R5, #8 
    /*00016a0c*/ ADD         R3, R4, #20 
    /*00016a10*/ STR         R1, [R4, #24] 
    /*00016a14*/ STR         R3, [R5, #-8] 
    /*00016a18*/ STR         R2, [R5, #-4] 
    /*00016a1c*/ STR         R1, [R2] 
    /*00016a20*/ LDR         R3, [R4, #8] 
    /*00016a24*/ ADD         R3, R3, #1 
    /*00016a28*/ STR         R3, [R4, #8] 
    /*00016a2c*/ LDR         R3, [R4, #36]               @ 0x24 
    /*00016a30*/ CMP         R3, R9 
    /*00016a34*/ BNE         VencSetChnAttrAll_x169a0
    VencSetChnAttrAll_x16a38:
    /*00016a38*/ CMP         R4, #0 
    /*00016a3c*/ BEQ         VencSetChnAttrAll_x168a4
    /*00016a40*/ LDR         R2, [R4, #-12] 
    /*00016a44*/ MOV         R3, #0 
    /*00016a48*/ MOVT        R3, #13590                  @ 0x3516 
    /*00016a4c*/ CMP         R2, R3 
    /*00016a50*/ BEQ         VencSetChnAttrAll_x16a70
    /*00016a54*/ MOVW        R3, #0                      @ .LC285 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3144] 
    /*00016a58*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00016a5c*/ MOVT        R3, #0                      @ .LC285 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3144] 
    /*00016a60*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00016a64*/ MOV         R2, #141                    @ 0x8d 
    /*00016a68*/ LDR         R1, [PC, #-520]             @ 0x0000000000016868 
    /*00016a6c*/ BL          0x0000000000016A6C          @ osal_panic [R_ARM_CALL: +0x0] 
    VencSetChnAttrAll_x16a70:
    /*00016a70*/ LDR         R0, [SP, #16] 
    /*00016a74*/ SUB         R1, R4, #8 
    /*00016a78*/ LDR         R3, [SP, #28] 
    /*00016a7c*/ LDR         R2, [R0, #3796]             @ 0xed4 
    /*00016a80*/ ADD         R3, R3, #20 
    /*00016a84*/ STR         R1, [R0, #3796]             @ 0xed4 
    /*00016a88*/ STR         R3, [R4, #-8] 
    /*00016a8c*/ STR         R2, [R4, #-4] 
    /*00016a90*/ STR         R1, [R2] 
    /*00016a94*/ LDR         R3, [R0, #3780]             @ 0xec4 
    /*00016a98*/ ADD         R3, R3, #1 
    /*00016a9c*/ STR         R3, [R0, #3780]             @ 0xec4 
    /*00016aa0*/ B           VencSetChnAttrAll_x16890
    VencSetChnAttrAll_x16aa4:
    /*00016aa4*/ MOV         R3, R8 
    /*00016aa8*/ MOVW        R2, #367                    @ 0x16f 
    /*00016aac*/ MOV         R1, FP 
    /*00016ab0*/ MOV         R0, SL 
    /*00016ab4*/ BL          0x0000000000016AB4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00016ab8*/ LDR         R3, [R4, #28] 
    /*00016abc*/ CMP         R3, R9 
    /*00016ac0*/ BEQ         VencSetChnAttrAll_x16990
    /*00016ac4*/ LDM         R3, {R1, R2} 
    /*00016ac8*/ STR         R2, [R1, #4] 
    /*00016acc*/ STR         R1, [R2] 
    /*00016ad0*/ STR         R7, [R3] 
    /*00016ad4*/ STR         R6, [R3, #4] 
    /*00016ad8*/ LDR         R2, [R4, #12] 
    /*00016adc*/ SUB         R2, R2, #1 
    /*00016ae0*/ STR         R2, [R4, #12] 
    /*00016ae4*/ LDR         R5, [R3, #-8] 
    /*00016ae8*/ CMP         R5, #0 
    /*00016aec*/ BNE         VencSetChnAttrAll_x16930
    /*00016af0*/ B           VencSetChnAttrAll_x16aa4
    VencSetChnAttrAll_x16af4:
    /*00016af4*/ MOV         R3, R8 
    /*00016af8*/ MOVW        R2, #373                    @ 0x175 
    /*00016afc*/ MOV         R1, FP 
    /*00016b00*/ MOV         R0, SL 
    /*00016b04*/ BL          0x0000000000016B04          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00016b08*/ LDR         R3, [R4, #36]               @ 0x24 
    /*00016b0c*/ CMP         R3, R9 
    /*00016b10*/ BEQ         VencSetChnAttrAll_x16a38
    /*00016b14*/ LDM         R3, {R1, R2} 
    /*00016b18*/ STR         R2, [R1, #4] 
    /*00016b1c*/ STR         R1, [R2] 
    /*00016b20*/ STR         R7, [R3] 
    /*00016b24*/ STR         R6, [R3, #4] 
    /*00016b28*/ LDR         R2, [R4, #16] 
    /*00016b2c*/ SUB         R2, R2, #1 
    /*00016b30*/ STR         R2, [R4, #16] 
    /*00016b34*/ LDR         R5, [R3, #-8] 
    /*00016b38*/ CMP         R5, #0 
    /*00016b3c*/ BNE         VencSetChnAttrAll_x169d8
    /*00016b40*/ B           VencSetChnAttrAll_x16af4
    VencSetChnAttrAll_x16b44:
    /*00016b44*/ MOVW        R3, #0                      @ .LC318 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38d4] 
    /*00016b48*/ MOVW        R0, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*00016b4c*/ MOVT        R3, #0                      @ .LC318 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38d4] 
    /*00016b50*/ MOVT        R0, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*00016b54*/ MOV         R2, #195                    @ 0xc3 
    /*00016b58*/ LDR         R1, [PC, #-756]             @ 0x000000000001686c 
    /*00016b5c*/ BL          0x0000000000016B5C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00016b60*/ B           VencSetChnAttrAll_x168a4
    VencSetChnAttrAll_x16b64:
    /*00016b64*/ MOV         R0, #13 
    /*00016b68*/ BL          0x0000000000016B68          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016b6c*/ ADD         R2, R9, #12800              @ 0x3200 
    /*00016b70*/ MOV         R1, R7 
    /*00016b74*/ ADD         R2, R2, #16 
    /*00016b78*/ LDR         R3, [R0, #248]              @ 0xf8 
    /*00016b7c*/ MOV         R0, R5 
    /*00016b80*/ BLX         R3 
    /*00016b84*/ SUBS        R6, R0, #0 
    /*00016b88*/ BEQ         VencSetChnAttrAll_x1661c
    /*00016b8c*/ MOV         R3, #11648                  @ 0x2d80 
    /*00016b90*/ B           VencSetChnAttrAll_x1654c
    VencSetChnAttrAll_x16b94:
    /*00016b94*/ LDR         R2, [R4, #36]               @ 0x24 
    /*00016b98*/ ADD         R3, R4, #36                 @ 0x24 
    /*00016b9c*/ CMP         R2, R3 
    /*00016ba0*/ BNE         VencSetChnAttrAll_x1609c
    /*00016ba4*/ ADD         R3, R9, #11904              @ 0x2e80 
    /*00016ba8*/ ADD         R3, R3, #60                 @ 0x3c 
    /*00016bac*/ STR         R3, [SP, #28] 
    /*00016bb0*/ CMP         R3, #0 
    /*00016bb4*/ BNE         VencSetChnAttrAll_x160e8
    /*00016bb8*/ B           VencSetChnAttrAll_x16148
    VencSetChnAttrAll_x16bbc:
    /*00016bbc*/ MOVW        R3, #11659                  @ 0x2d8b 
    /*00016bc0*/ MOVW        R2, #0                      @ .LC429 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x58fc] 
    /*00016bc4*/ STR         R3, [SP] 
    /*00016bc8*/ MOVT        R2, #0                      @ .LC429 [R_ARM_MOVT_ABS: .rodata.str1.4+0x58fc] 
    /*00016bcc*/ B           VencSetChnAttrAll_x15c14
    VencSetChnAttrAll_x16bd0:
    /*00016bd0*/ ADD         R3, R9, #11904              @ 0x2e80 
    /*00016bd4*/ ADD         R3, R3, #60                 @ 0x3c 
    /*00016bd8*/ STR         R3, [SP, #28] 
    /*00016bdc*/ B           VencSetChnAttrAll_x16148
    VencSetChnAttrAll_x16be0:
    /*00016be0*/ ADD         R3, R9, #11904              @ 0x2e80 
    /*00016be4*/ ADD         R3, R3, #60                 @ 0x3c 
    /*00016be8*/ STR         R3, [SP, #28] 
    /*00016bec*/ B           VencSetChnAttrAll_x16154
    VencSetChnAttrAll_x16bf0:
    /*00016bf0*/ MOV         R0, #10 
    /*00016bf4*/ BL          0x0000000000016BF4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016bf8*/ MOV         R1, R8 
    /*00016bfc*/ LDR         R3, [R0, #192]              @ 0xc0 
    /*00016c00*/ MOV         R0, R5 
    /*00016c04*/ BLX         R3 
    /*00016c08*/ STR         R0, [SP, #28] 
    /*00016c0c*/ MOV         R0, #10 
    /*00016c10*/ BL          0x0000000000016C10          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016c14*/ ADD         R1, R9, #13248              @ 0x33c0 
    /*00016c18*/ ADD         R1, R1, #52                 @ 0x34 
    /*00016c1c*/ LDR         R2, [R0, #168]              @ 0xa8 
    /*00016c20*/ MOV         R0, R5 
    /*00016c24*/ BLX         R2 
    /*00016c28*/ LDR         R3, [SP, #28] 
    /*00016c2c*/ LDR         R2, [SP, #24] 
    /*00016c30*/ ORR         R3, R3, R0 
    /*00016c34*/ MOV         R0, #10 
    /*00016c38*/ ORR         R3, R3, R2 
    /*00016c3c*/ STR         R3, [SP, #24] 
    /*00016c40*/ BL          0x0000000000016C40          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016c44*/ ADD         R1, R9, #12800              @ 0x3200 
    /*00016c48*/ ADD         R1, R1, #48                 @ 0x30 
    /*00016c4c*/ LDR         R2, [R0, #140]              @ 0x8c 
    /*00016c50*/ MOV         R0, R5 
    /*00016c54*/ BLX         R2 
    /*00016c58*/ LDR         R3, [SP, #24] 
    /*00016c5c*/ ORR         R3, R3, R0 
    /*00016c60*/ MOV         R0, #10 
    /*00016c64*/ STR         R3, [SP, #24] 
    /*00016c68*/ BL          0x0000000000016C68          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016c6c*/ LDR         R1, [SP, #20] 
    /*00016c70*/ LDR         R2, [R0, #232]              @ 0xe8 
    /*00016c74*/ B           VencSetChnAttrAll_x16774
    VencSetChnAttrAll_x16c78:
    /*00016c78*/ ADD         R0, R9, #13376              @ 0x3440 
    /*00016c7c*/ STR         R4, [R6, #1128]             @ 0x468 
    /*00016c80*/ ADD         R0, R0, #48                 @ 0x30 
    /*00016c84*/ BL          0x0000000000016C84          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*00016c88*/ CMP         R0, R4 
    /*00016c8c*/ BEQ         VencSetChnAttrAll_x15eb0
    /*00016c90*/ MOVW        R3, #11973                  @ 0x2ec5 
    /*00016c94*/ STR         R5, [SP, #4] 
    /*00016c98*/ STR         R3, [SP] 
    /*00016c9c*/ MOVW        R2, #0                      @ .LC333 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d20] 
    /*00016ca0*/ LDR         R3, [PC, #-1080]            @ 0x0000000000016870 
    /*00016ca4*/ MOVT        R2, #0                      @ .LC333 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d20] 
    /*00016ca8*/ MOV         R1, #8 
    /*00016cac*/ MOV         R0, #3 
    /*00016cb0*/ BL          0x0000000000016CB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016cb4*/ B           VencSetChnAttrAll_x15eb0
    VencSetChnAttrAll_x16cb8:
    /*00016cb8*/ MOV         R0, #11 
    /*00016cbc*/ BL          0x0000000000016CBC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016cc0*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00016cc4*/ ADD         R0, SP, #44                 @ 0x2c 
    /*00016cc8*/ BLX         R3 
    /*00016ccc*/ CMP         R0, #0 
    /*00016cd0*/ BEQ         VencSetChnAttrAll_x16cf8
    /*00016cd4*/ MOVW        R3, #11984                  @ 0x2ed0 
    /*00016cd8*/ MOVW        R2, #0                      @ .LC421 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x56c8] 
    /*00016cdc*/ STR         R3, [SP] 
    /*00016ce0*/ MOVT        R2, #0                      @ .LC421 [R_ARM_MOVT_ABS: .rodata.str1.4+0x56c8] 
    /*00016ce4*/ STR         R5, [SP, #4] 
    /*00016ce8*/ MOV         R1, #8 
    /*00016cec*/ LDR         R3, [PC, #-1156]            @ 0x0000000000016870 
    /*00016cf0*/ MOV         R0, #3 
    /*00016cf4*/ BL          0x0000000000016CF4          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencSetChnAttrAll_x16cf8:
    /*00016cf8*/ LDR         R3, [R9, #4] 
    /*00016cfc*/ CMP         R3, #26 
    /*00016d00*/ BNE         VencSetChnAttrAll_x15ec4
    /*00016d04*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00016d08*/ CMP         R3, #1 
    /*00016d0c*/ BNE         VencSetChnAttrAll_x15ba8
    /*00016d10*/ B           VencSetChnAttrAll_x15ec4
    VencSetChnAttrAll_x16d14:
    /*00016d14*/ MOV         R0, #10 
    /*00016d18*/ BL          0x0000000000016D18          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016d1c*/ MOV         R1, R8 
    /*00016d20*/ LDR         R3, [R0, #192]              @ 0xc0 
    /*00016d24*/ MOV         R0, R5 
    /*00016d28*/ BLX         R3 
    /*00016d2c*/ B           VencSetChnAttrAll_x15da8
FUNC_END VencSetChnAttrAll


FUNC_BEGIN VencSetChnAttr
    /*00016d30*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00016d34*/ SUBS        R7, R1, #0 
    /*00016d38*/ SUB         SP, SP, #36                 @ 0x24 
    /*00016d3c*/ MOV         R4, R0 
    /*00016d40*/ BEQ         VencSetChnAttr_x16f60
    VencSetChnAttr_x16d44:
    /*00016d44*/ CMP         R4, #0 
    /*00016d48*/ BLT         VencSetChnAttr_x16f30
    /*00016d4c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00016d50*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00016d54*/ LDR         R3, [R3] 
    /*00016d58*/ CMP         R4, R3 
    /*00016d5c*/ BCS         VencSetChnAttr_x16f30
    VencSetChnAttr_x16d60:
    /*00016d60*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00016d64*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00016d68*/ MUL         R5, R5, R4 
    /*00016d6c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00016d70*/ LDR         R6, [R3] 
    /*00016d74*/ ADD         R8, R6, R5 
    /*00016d78*/ ADD         R9, R8, #12416              @ 0x3080 
    /*00016d7c*/ ADD         R9, R9, #16 
    /*00016d80*/ MOV         R0, R9 
    /*00016d84*/ BL          0x0000000000016D84          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00016d88*/ CMP         R0, #0 
    /*00016d8c*/ BNE         VencSetChnAttr_x170b0
    /*00016d90*/ LDR         FP, [R6, R5] 
    /*00016d94*/ CMP         FP, #1 
    /*00016d98*/ BNE         VencSetChnAttr_x17078
    /*00016d9c*/ LDR         R3, [R8, #56]               @ 0x38 
    /*00016da0*/ CMP         R4, R3 
    /*00016da4*/ BNE         VencSetChnAttr_x170bc
    /*00016da8*/ LDR         R3, [R7, #24] 
    /*00016dac*/ ADD         SL, R8, #12288              @ 0x3000 
    /*00016db0*/ LDR         R6, [R7, #60]               @ 0x3c 
    /*00016db4*/ MOV         R2, R3 
    /*00016db8*/ STR         R3, [SP, #20] 
    /*00016dbc*/ LDR         R3, [R7, #28] 
    /*00016dc0*/ STR         R3, [SP, #24] 
    /*00016dc4*/ LDR         R3, [SL, #148]              @ 0x94 
    /*00016dc8*/ CMP         R2, R3 
    /*00016dcc*/ BEQ         VencSetChnAttr_x16f4c
    VencSetChnAttr_x16dd0:
    /*00016dd0*/ LDR         R3, [R8, #16] 
    /*00016dd4*/ CMP         R3, #0 
    /*00016dd8*/ BNE         VencSetChnAttr_x17044
    /*00016ddc*/ LDR         R3, [SL, #132]              @ 0x84 
    /*00016de0*/ CMP         R3, #0 
    /*00016de4*/ BNE         VencSetChnAttr_x17044
    VencSetChnAttr_x16de8:
    /*00016de8*/ LDR         R5, [R8, #4] 
    /*00016dec*/ MOVW        R3, #1002                   @ 0x3ea 
    /*00016df0*/ STR         R3, [SP, #28] 
    /*00016df4*/ CMP         R5, #26 
    /*00016df8*/ CMPNE       R5, R3 
    /*00016dfc*/ MOVEQ       R5, #1 
    /*00016e00*/ MOVNE       R5, #0 
    /*00016e04*/ BNE         VencSetChnAttr_x16e90
    /*00016e08*/ MOV         R1, #0 
    /*00016e0c*/ MOV         R0, #248                    @ 0xf8 
    /*00016e10*/ BL          0x0000000000016E10          @ osal_kmalloc [R_ARM_CALL: +0x0] 
    /*00016e14*/ LDR         R3, [SP, #28] 
    /*00016e18*/ SUBS        R5, R0, #0 
    /*00016e1c*/ BEQ         VencSetChnAttr_x17010
    /*00016e20*/ MOV         R2, #248                    @ 0xf8 
    /*00016e24*/ MOV         R1, #0 
    /*00016e28*/ STR         R3, [SP, #28] 
    /*00016e2c*/ BL          0x0000000000016E2C          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00016e30*/ LDR         R2, [R8, #4] 
    /*00016e34*/ MOV         R1, #0 
    /*00016e38*/ LDR         R3, [SP, #28] 
    /*00016e3c*/ MOV         R0, R5 
    /*00016e40*/ CMP         R2, R3 
    /*00016e44*/ MOV         R2, #248                    @ 0xf8 
    /*00016e48*/ BEQ         VencSetChnAttr_x16fd0
    /*00016e4c*/ BL          0x0000000000016E4C          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00016e50*/ MOV         R3, #0 
    /*00016e54*/ STR         R3, [R5] 
    /*00016e58*/ LDR         R3, [R7, #24] 
    /*00016e5c*/ STR         R3, [R5, #20] 
    /*00016e60*/ LDR         R3, [R7, #28] 
    /*00016e64*/ STR         R3, [R5, #24] 
    /*00016e68*/ LDR         R3, [R7, #4] 
    /*00016e6c*/ STR         R3, [R5, #12] 
    /*00016e70*/ LDR         R3, [R7, #8] 
    /*00016e74*/ STR         R3, [R5, #16] 
    /*00016e78*/ LDR         R3, [R7, #12] 
    /*00016e7c*/ STR         R3, [R5, #8] 
    /*00016e80*/ LDR         R3, [R7, #20] 
    /*00016e84*/ STR         R3, [R5, #28] 
    /*00016e88*/ LDR         R3, [R7, #32] 
    /*00016e8c*/ STR         R3, [R5, #32] 
    VencSetChnAttr_x16e90:
    /*00016e90*/ MOV         R2, R6 
    /*00016e94*/ MOV         R3, R5 
    /*00016e98*/ MOV         R1, R7 
    /*00016e9c*/ MOV         R0, R4 
    /*00016ea0*/ BL          0x0000000000016EA0          @ VencCheckChnAttr [R_ARM_CALL: .text+0x14a64] 
    /*00016ea4*/ SUBS        R6, R0, #0 
    /*00016ea8*/ BNE         VencSetChnAttr_x16f70
    /*00016eac*/ LDR         R3, [SL, #148]              @ 0x94 
    /*00016eb0*/ LDR         R2, [SP, #20] 
    /*00016eb4*/ CMP         R2, R3 
    /*00016eb8*/ BNE         VencSetChnAttr_x16ecc
    /*00016ebc*/ LDR         R3, [SL, #152]              @ 0x98 
    /*00016ec0*/ LDR         R2, [SP, #24] 
    /*00016ec4*/ CMP         R2, R3 
    /*00016ec8*/ BEQ         VencSetChnAttr_x16fa4
    VencSetChnAttr_x16ecc:
    /*00016ecc*/ LDR         R1, [R8, #8] 
    /*00016ed0*/ MOV         R0, R4 
    /*00016ed4*/ BL          0x0000000000016ED4          @ VencStopSchedule [R_ARM_CALL: .text+0x14e94] 
    /*00016ed8*/ SUBS        R6, R0, #0 
    /*00016edc*/ BNE         VencSetChnAttr_x16fac
    VencSetChnAttr_x16ee0:
    /*00016ee0*/ MOV         R3, FP 
    /*00016ee4*/ MOV         R1, R7 
    /*00016ee8*/ MOV         R0, R4 
    /*00016eec*/ MOV         R2, R5 
    /*00016ef0*/ BL          0x0000000000016EF0          @ VencSetChnAttrAll [R_ARM_CALL: .text+0x158e4] 
    /*00016ef4*/ CMP         R5, #0 
    /*00016ef8*/ MOV         R6, R0 
    /*00016efc*/ BEQ         VencSetChnAttr_x16f08
    VencSetChnAttr_x16f00:
    /*00016f00*/ MOV         R0, R5 
    /*00016f04*/ BL          0x0000000000016F04          @ osal_kfree [R_ARM_CALL: +0x0] 
    VencSetChnAttr_x16f08:
    /*00016f08*/ MOV         R0, R9 
    /*00016f0c*/ BL          0x0000000000016F0C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00016f10*/ CMP         R6, #0 
    /*00016f14*/ BEQ         VencSetChnAttr_x16f40
    VencSetChnAttr_x16f18:
    /*00016f18*/ BIC         R6, R6, #267386880          @ 0xff00000 
    /*00016f1c*/ BIC         R6, R6, #983040             @ 0xf0000 
    /*00016f20*/ ORR         R6, R6, #524288             @ 0x80000 
    /*00016f24*/ MOV         R0, R6 
    /*00016f28*/ ADD         SP, SP, #36                 @ 0x24 
    /*00016f2c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSetChnAttr_x16f30:
    /*00016f30*/ MOV         R0, R4 
    /*00016f34*/ BL          0x0000000000000304 
    /*00016f38*/ SUBS        R6, R0, #0 
    /*00016f3c*/ BEQ         VencSetChnAttr_x16d60
    VencSetChnAttr_x16f40:
    /*00016f40*/ MOV         R0, R6 
    /*00016f44*/ ADD         SP, SP, #36                 @ 0x24 
    /*00016f48*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSetChnAttr_x16f4c:
    /*00016f4c*/ LDR         R3, [SL, #152]              @ 0x98 
    /*00016f50*/ LDR         R2, [SP, #24] 
    /*00016f54*/ CMP         R2, R3 
    /*00016f58*/ BNE         VencSetChnAttr_x16dd0
    /*00016f5c*/ B           VencSetChnAttr_x16de8
    VencSetChnAttr_x16f60:
    /*00016f60*/ BL          0x00000000000002C8 
    /*00016f64*/ SUBS        R6, R0, #0 
    /*00016f68*/ BNE         VencSetChnAttr_x16f40
    /*00016f6c*/ B           VencSetChnAttr_x16d44
    VencSetChnAttr_x16f70:
    /*00016f70*/ MOV         R3, #12096                  @ 0x2f40 
    /*00016f74*/ MOVW        R2, #0                      @ .LC438 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b38] 
    /*00016f78*/ STR         R3, [SP] 
    /*00016f7c*/ MOVT        R2, #0                      @ .LC438 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b38] 
    /*00016f80*/ LDR         R3, [PC, #368]              @ 0x00000000000170f8 
    /*00016f84*/ MOV         R1, #8 
    /*00016f88*/ MOV         R0, #3 
    /*00016f8c*/ BL          0x0000000000016F8C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencSetChnAttr_x16f90:
    /*00016f90*/ CMP         R5, #0 
    /*00016f94*/ BNE         VencSetChnAttr_x16f00
    /*00016f98*/ MOV         R0, R9 
    /*00016f9c*/ BL          0x0000000000016F9C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00016fa0*/ B           VencSetChnAttr_x16f18
    VencSetChnAttr_x16fa4:
    /*00016fa4*/ MOV         FP, R6 
    /*00016fa8*/ B           VencSetChnAttr_x16ee0
    VencSetChnAttr_x16fac:
    /*00016fac*/ MOVW        R3, #12108                  @ 0x2f4c 
    /*00016fb0*/ MOVW        R2, #0                      @ .LC439 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b6c] 
    /*00016fb4*/ STR         R3, [SP] 
    /*00016fb8*/ MOVT        R2, #0                      @ .LC439 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b6c] 
    /*00016fbc*/ LDR         R3, [PC, #308]              @ 0x00000000000170f8 
    /*00016fc0*/ MOV         R1, #8 
    /*00016fc4*/ MOV         R0, #3 
    /*00016fc8*/ BL          0x0000000000016FC8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016fcc*/ B           VencSetChnAttr_x16f90
    VencSetChnAttr_x16fd0:
    /*00016fd0*/ BL          0x0000000000016FD0          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00016fd4*/ MOV         R3, #1 
    /*00016fd8*/ STR         R3, [R5] 
    /*00016fdc*/ LDR         R3, [R7, #28] 
    /*00016fe0*/ STR         R3, [R5, #24] 
    /*00016fe4*/ LDR         R3, [R7, #24] 
    /*00016fe8*/ STR         R3, [R5, #20] 
    /*00016fec*/ LDR         R3, [R7, #8] 
    /*00016ff0*/ STR         R3, [R5, #16] 
    /*00016ff4*/ LDR         R3, [R7, #4] 
    /*00016ff8*/ STR         R3, [R5, #12] 
    /*00016ffc*/ LDR         R3, [R7, #12] 
    /*00017000*/ STR         R3, [R5, #8] 
    /*00017004*/ LDR         R3, [R7, #20] 
    /*00017008*/ STR         R3, [R5, #28] 
    /*0001700c*/ B           VencSetChnAttr_x16e90
    VencSetChnAttr_x17010:
    /*00017010*/ MOVW        R3, #12077                  @ 0x2f2d 
    /*00017014*/ MOV         R1, #8 
    /*00017018*/ STR         R3, [SP] 
    /*0001701c*/ MOVW        R2, #0                      @ .LC437 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b0c] 
    /*00017020*/ LDR         R3, [PC, #208]              @ 0x00000000000170f8 
    /*00017024*/ MOVT        R2, #0                      @ .LC437 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b0c] 
    /*00017028*/ MOV         R0, #3 
    /*0001702c*/ MOVW        R6, #32780                  @ 0x800c 
    /*00017030*/ BL          0x0000000000017030          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017034*/ MOV         R0, R9 
    /*00017038*/ BL          0x0000000000017038          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001703c*/ MOVT        R6, #40968                  @ 0xa008 
    /*00017040*/ B           VencSetChnAttr_x16f40
    VencSetChnAttr_x17044:
    /*00017044*/ MOVW        R3, #12064                  @ 0x2f20 
    /*00017048*/ MOV         R1, #8 
    /*0001704c*/ STR         R3, [SP] 
    /*00017050*/ MOVW        R2, #0                      @ .LC436 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5ab4] 
    /*00017054*/ LDR         R3, [PC, #156]              @ 0x00000000000170f8 
    /*00017058*/ MOVT        R2, #0                      @ .LC436 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5ab4] 
    /*0001705c*/ MOV         R0, #3 
    /*00017060*/ MOVW        R6, #32777                  @ 0x8009 
    /*00017064*/ BL          0x0000000000017064          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017068*/ MOV         R0, R9 
    /*0001706c*/ BL          0x000000000001706C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00017070*/ MOVT        R6, #40968                  @ 0xa008 
    /*00017074*/ B           VencSetChnAttr_x16f40
    VencSetChnAttr_x17078:
    /*00017078*/ MOVW        R3, #12040                  @ 0x2f08 
    /*0001707c*/ MOV         R1, #8 
    /*00017080*/ STR         R3, [SP] 
    /*00017084*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00017088*/ LDR         R3, [PC, #104]              @ 0x00000000000170f8 
    /*0001708c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00017090*/ STR         R4, [SP, #4] 
    /*00017094*/ MOV         R0, #3 
    /*00017098*/ BL          0x0000000000017098          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001709c*/ MOV         R0, R9 
    /*000170a0*/ MOVW        R6, #32773                  @ 0x8005 
    /*000170a4*/ BL          0x00000000000170A4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000170a8*/ MOVT        R6, #40968                  @ 0xa008 
    /*000170ac*/ B           VencSetChnAttr_x16f40
    VencSetChnAttr_x170b0:
    /*000170b0*/ MOV         R6, #65024                  @ 0xfe00 
    /*000170b4*/ MOVT        R6, #65535                  @ 0xffff 
    /*000170b8*/ B           VencSetChnAttr_x16f40
    VencSetChnAttr_x170bc:
    /*000170bc*/ STR         R3, [SP, #8] 
    /*000170c0*/ MOV         R1, #8 
    /*000170c4*/ MOVW        R3, #12049                  @ 0x2f11 
    /*000170c8*/ STR         R4, [SP, #4] 
    /*000170cc*/ STR         R3, [SP] 
    /*000170d0*/ MOVW        R2, #0                      @ .LC435 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5a70] 
    /*000170d4*/ LDR         R3, [PC, #28]               @ 0x00000000000170f8 
    /*000170d8*/ MOVT        R2, #0                      @ .LC435 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5a70] 
    /*000170dc*/ MOV         R0, #3 
    /*000170e0*/ MOVW        R6, #32777                  @ 0x8009 
    /*000170e4*/ BL          0x00000000000170E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000170e8*/ MOV         R0, R9 
    /*000170ec*/ BL          0x00000000000170EC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000170f0*/ MOVT        R6, #40968                  @ 0xa008 
    /*000170f4*/ B           VencSetChnAttr_x16f40
    /*000170f8*/ LDRDEQ      R0, [R0], -R8 
FUNC_END VencSetChnAttr


FUNC_BEGIN VencGetChnAttr
    /*000170fc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00017100*/ SUBS        R6, R1, #0 
    /*00017104*/ SUB         SP, SP, #8 
    /*00017108*/ MOV         R4, R0 
    /*0001710c*/ BEQ         VencGetChnAttr_x171a8
    VencGetChnAttr_x17110:
    /*00017110*/ CMP         R4, #0 
    /*00017114*/ BLT         VencGetChnAttr_x17190
    /*00017118*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0001711c*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00017120*/ LDR         R3, [R3] 
    /*00017124*/ CMP         R4, R3 
    /*00017128*/ BCS         VencGetChnAttr_x17190
    VencGetChnAttr_x1712c:
    /*0001712c*/ MOVW        R8, #36240                  @ 0x8d90 
    /*00017130*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00017134*/ MUL         R8, R8, R4 
    /*00017138*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001713c*/ LDR         R9, [R3] 
    /*00017140*/ ADD         SL, R9, R8 
    /*00017144*/ ADD         R7, SL, #12416              @ 0x3080 
    /*00017148*/ ADD         R7, R7, #16 
    /*0001714c*/ MOV         R0, R7 
    /*00017150*/ BL          0x0000000000017150          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00017154*/ SUBS        R5, R0, #0 
    /*00017158*/ BNE         VencGetChnAttr_x171f0
    /*0001715c*/ LDR         R3, [R9, R8] 
    /*00017160*/ CMP         R3, #1 
    /*00017164*/ BNE         VencGetChnAttr_x171b8
    /*00017168*/ ADD         R1, SL, #12864              @ 0x3240 
    /*0001716c*/ MOV         R2, #116                    @ 0x74 
    /*00017170*/ ADD         R1, R1, #40                 @ 0x28 
    /*00017174*/ MOV         R0, R6 
    /*00017178*/ BL          0x0000000000017178          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001717c*/ MOV         R0, R7 
    /*00017180*/ BL          0x0000000000017180          @ osal_up [R_ARM_CALL: +0x0] 
    /*00017184*/ MOV         R0, R5 
    /*00017188*/ ADD         SP, SP, #8 
    /*0001718c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencGetChnAttr_x17190:
    /*00017190*/ MOV         R0, R4 
    /*00017194*/ BL          0x0000000000000304 
    /*00017198*/ CMP         R0, #0 
    /*0001719c*/ BEQ         VencGetChnAttr_x1712c
    VencGetChnAttr_x171a0:
    /*000171a0*/ ADD         SP, SP, #8 
    /*000171a4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencGetChnAttr_x171a8:
    /*000171a8*/ BL          0x00000000000002C8 
    /*000171ac*/ CMP         R0, #0 
    /*000171b0*/ BNE         VencGetChnAttr_x171a0
    /*000171b4*/ B           VencGetChnAttr_x17110
    VencGetChnAttr_x171b8:
    /*000171b8*/ MOVW        R3, #12145                  @ 0x2f71 
    /*000171bc*/ MOV         R1, #8 
    /*000171c0*/ STR         R3, [SP] 
    /*000171c4*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*000171c8*/ LDR         R3, [PC, #44]               @ 0x00000000000171fc 
    /*000171cc*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*000171d0*/ STR         R4, [SP, #4] 
    /*000171d4*/ MOV         R0, #3 
    /*000171d8*/ BL          0x00000000000171D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000171dc*/ MOV         R0, R7 
    /*000171e0*/ BL          0x00000000000171E0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000171e4*/ MOVW        R0, #32773                  @ 0x8005 
    /*000171e8*/ MOVT        R0, #40968                  @ 0xa008 
    /*000171ec*/ B           VencGetChnAttr_x171a0
    VencGetChnAttr_x171f0:
    /*000171f0*/ MOV         R0, #65024                  @ 0xfe00 
    /*000171f4*/ MOVT        R0, #65535                  @ 0xffff 
    /*000171f8*/ B           VencGetChnAttr_x171a0
    /*000171fc*/ ANDEQ       R0, R0, R8, ROR #21 
FUNC_END VencGetChnAttr


FUNC_BEGIN VENC_AttachVbPool
    /*00017200*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00017204*/ SUBS        R7, R1, #0 
    /*00017208*/ SUB         SP, SP, #20 
    /*0001720c*/ MOV         R4, R0 
    /*00017210*/ BEQ         VENC_AttachVbPool_x17334
    VENC_AttachVbPool_x17214:
    /*00017214*/ CMP         R4, #0 
    /*00017218*/ BLT         VENC_AttachVbPool_x172bc
    /*0001721c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00017220*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00017224*/ LDR         R3, [R3] 
    /*00017228*/ CMP         R4, R3 
    /*0001722c*/ BCS         VENC_AttachVbPool_x172bc
    VENC_AttachVbPool_x17230:
    /*00017230*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00017234*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00017238*/ MUL         R5, R5, R4 
    /*0001723c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00017240*/ LDR         R8, [R3] 
    /*00017244*/ ADD         R9, R8, R5 
    /*00017248*/ ADD         R6, R9, #12416              @ 0x3080 
    /*0001724c*/ ADD         R6, R6, #16 
    /*00017250*/ MOV         R0, R6 
    /*00017254*/ BL          0x0000000000017254          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00017258*/ CMP         R0, #0 
    /*0001725c*/ BNE         VENC_AttachVbPool_x1737c
    /*00017260*/ LDR         R3, [R8, R5] 
    /*00017264*/ CMP         R3, #1 
    /*00017268*/ BNE         VENC_AttachVbPool_x17344
    /*0001726c*/ LDR         R3, [R9, #4] 
    /*00017270*/ CMP         R3, #96                     @ 0x60 
    /*00017274*/ BEQ         VENC_AttachVbPool_x172d8
    /*00017278*/ MOVW        R2, #265                    @ 0x109 
    /*0001727c*/ CMP         R3, R2 
    /*00017280*/ BNE         VENC_AttachVbPool_x172f8
    /*00017284*/ MOV         R0, #13 
    /*00017288*/ BL          0x0000000000017288          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001728c*/ MOV         R1, R7 
    /*00017290*/ LDR         R3, [R0, #172]              @ 0xac 
    /*00017294*/ MOV         R0, R4 
    /*00017298*/ BLX         R3 
    /*0001729c*/ MOV         R5, R0 
    VENC_AttachVbPool_x172a0:
    /*000172a0*/ MOV         R0, R6 
    /*000172a4*/ BL          0x00000000000172A4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000172a8*/ CMP         R5, #0 
    /*000172ac*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*000172b0*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*000172b4*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*000172b8*/ B           VENC_AttachVbPool_x172cc
    VENC_AttachVbPool_x172bc:
    /*000172bc*/ MOV         R0, R4 
    /*000172c0*/ BL          0x0000000000000304 
    /*000172c4*/ SUBS        R5, R0, #0 
    /*000172c8*/ BEQ         VENC_AttachVbPool_x17230
    VENC_AttachVbPool_x172cc:
    /*000172cc*/ MOV         R0, R5 
    /*000172d0*/ ADD         SP, SP, #20 
    /*000172d4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VENC_AttachVbPool_x172d8:
    /*000172d8*/ MOV         R0, #10 
    /*000172dc*/ BL          0x00000000000172DC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000172e0*/ MOV         R1, R7 
    /*000172e4*/ LDR         R3, [R0, #160]              @ 0xa0 
    /*000172e8*/ MOV         R0, R4 
    /*000172ec*/ BLX         R3 
    /*000172f0*/ MOV         R5, R0 
    /*000172f4*/ B           VENC_AttachVbPool_x172a0
    VENC_AttachVbPool_x172f8:
    /*000172f8*/ STR         R3, [SP, #8] 
    /*000172fc*/ MOV         R1, #8 
    /*00017300*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00017304*/ STR         R4, [SP, #4] 
    /*00017308*/ STR         R3, [SP] 
    /*0001730c*/ MOVW        R2, #0                      @ .LC440 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5bc0] 
    /*00017310*/ LDR         R3, [PC, #112]              @ 0x0000000000017388 
    /*00017314*/ MOVT        R2, #0                      @ .LC440 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5bc0] 
    /*00017318*/ MOV         R0, #3 
    /*0001731c*/ MOVW        R5, #32776                  @ 0x8008 
    /*00017320*/ BL          0x0000000000017320          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017324*/ MOV         R0, R6 
    /*00017328*/ BL          0x0000000000017328          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001732c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00017330*/ B           VENC_AttachVbPool_x172cc
    VENC_AttachVbPool_x17334:
    /*00017334*/ BL          0x00000000000002C8 
    /*00017338*/ SUBS        R5, R0, #0 
    /*0001733c*/ BNE         VENC_AttachVbPool_x172cc
    /*00017340*/ B           VENC_AttachVbPool_x17214
    VENC_AttachVbPool_x17344:
    /*00017344*/ MOVW        R3, #12173                  @ 0x2f8d 
    /*00017348*/ MOV         R1, #8 
    /*0001734c*/ STR         R3, [SP] 
    /*00017350*/ MOVW        R2, #0                      @ .LC330 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c38] 
    /*00017354*/ LDR         R3, [PC, #44]               @ 0x0000000000017388 
    /*00017358*/ MOVT        R2, #0                      @ .LC330 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c38] 
    /*0001735c*/ STR         R4, [SP, #4] 
    /*00017360*/ MOV         R0, #3 
    /*00017364*/ BL          0x0000000000017364          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017368*/ MOV         R0, R6 
    /*0001736c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00017370*/ BL          0x0000000000017370          @ osal_up [R_ARM_CALL: +0x0] 
    /*00017374*/ MOVT        R5, #40968                  @ 0xa008 
    /*00017378*/ B           VENC_AttachVbPool_x172cc
    VENC_AttachVbPool_x1737c:
    /*0001737c*/ MOV         R5, #65024                  @ 0xfe00 
    /*00017380*/ MOVT        R5, #65535                  @ 0xffff 
    /*00017384*/ B           VENC_AttachVbPool_x172cc
    /*00017388*/ STRDEQ      R0, [R0], -R8 
FUNC_END VENC_AttachVbPool


FUNC_BEGIN VENC_DetachVbPool
    /*0001738c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00017390*/ SUBS        R5, R0, #0 
    /*00017394*/ SUB         SP, SP, #16 
    /*00017398*/ BLT         VENC_DetachVbPool_x17444
    /*0001739c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000173a0*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000173a4*/ LDR         R3, [R3] 
    /*000173a8*/ CMP         R5, R3 
    /*000173ac*/ BCS         VENC_DetachVbPool_x17444
    VENC_DetachVbPool_x173b0:
    /*000173b0*/ MOVW        R4, #36240                  @ 0x8d90 
    /*000173b4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000173b8*/ MUL         R4, R4, R5 
    /*000173bc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000173c0*/ LDR         R7, [R3] 
    /*000173c4*/ ADD         R8, R7, R4 
    /*000173c8*/ ADD         R6, R8, #12416              @ 0x3080 
    /*000173cc*/ ADD         R6, R6, #16 
    /*000173d0*/ MOV         R0, R6 
    /*000173d4*/ BL          0x00000000000173D4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000173d8*/ CMP         R0, #0 
    /*000173dc*/ BNE         VENC_DetachVbPool_x174f8
    /*000173e0*/ LDR         R3, [R7, R4] 
    /*000173e4*/ CMP         R3, #1 
    /*000173e8*/ BNE         VENC_DetachVbPool_x174c0
    /*000173ec*/ LDR         R3, [R8, #4] 
    /*000173f0*/ CMP         R3, #96                     @ 0x60 
    /*000173f4*/ BEQ         VENC_DetachVbPool_x174a4
    /*000173f8*/ MOVW        R2, #265                    @ 0x109 
    /*000173fc*/ CMP         R3, R2 
    /*00017400*/ BNE         VENC_DetachVbPool_x17460
    /*00017404*/ MOV         R0, #13 
    /*00017408*/ BL          0x0000000000017408          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001740c*/ LDR         R3, [R0, #176]              @ 0xb0 
    /*00017410*/ MOV         R0, R5 
    /*00017414*/ BLX         R3 
    /*00017418*/ MOV         R4, R0 
    VENC_DetachVbPool_x1741c:
    /*0001741c*/ MOV         R0, R6 
    /*00017420*/ BL          0x0000000000017420          @ osal_up [R_ARM_CALL: +0x0] 
    /*00017424*/ CMP         R4, #0 
    /*00017428*/ BEQ         VENC_DetachVbPool_x17454
    /*0001742c*/ BIC         R4, R4, #267386880          @ 0xff00000 
    /*00017430*/ BIC         R4, R4, #983040             @ 0xf0000 
    /*00017434*/ ORR         R4, R4, #524288             @ 0x80000 
    /*00017438*/ MOV         R0, R4 
    /*0001743c*/ ADD         SP, SP, #16 
    /*00017440*/ POP         {R4, R5, R6, R7, R8, PC} 
    VENC_DetachVbPool_x17444:
    /*00017444*/ MOV         R0, R5 
    /*00017448*/ BL          0x0000000000000304 
    /*0001744c*/ SUBS        R4, R0, #0 
    /*00017450*/ BEQ         VENC_DetachVbPool_x173b0
    VENC_DetachVbPool_x17454:
    /*00017454*/ MOV         R0, R4 
    /*00017458*/ ADD         SP, SP, #16 
    /*0001745c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VENC_DetachVbPool_x17460:
    /*00017460*/ STR         R3, [SP, #8] 
    /*00017464*/ MOV         R1, #8 
    /*00017468*/ MOVW        R3, #12238                  @ 0x2fce 
    /*0001746c*/ STR         R5, [SP, #4] 
    /*00017470*/ STR         R3, [SP] 
    /*00017474*/ MOVW        R2, #0                      @ .LC441 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5c20] 
    /*00017478*/ LDR         R3, [PC, #132]              @ 0x0000000000017504 
    /*0001747c*/ MOVT        R2, #0                      @ .LC441 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5c20] 
    /*00017480*/ MOV         R0, #3 
    /*00017484*/ MOVW        R4, #32776                  @ 0x8008 
    /*00017488*/ BL          0x0000000000017488          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001748c*/ MOV         R0, R6 
    /*00017490*/ BL          0x0000000000017490          @ osal_up [R_ARM_CALL: +0x0] 
    /*00017494*/ MOVT        R4, #40968                  @ 0xa008 
    /*00017498*/ MOV         R0, R4 
    /*0001749c*/ ADD         SP, SP, #16 
    /*000174a0*/ POP         {R4, R5, R6, R7, R8, PC} 
    VENC_DetachVbPool_x174a4:
    /*000174a4*/ MOV         R0, #10 
    /*000174a8*/ BL          0x00000000000174A8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000174ac*/ LDR         R3, [R0, #164]              @ 0xa4 
    /*000174b0*/ MOV         R0, R5 
    /*000174b4*/ BLX         R3 
    /*000174b8*/ MOV         R4, R0 
    /*000174bc*/ B           VENC_DetachVbPool_x1741c
    VENC_DetachVbPool_x174c0:
    /*000174c0*/ MOVW        R3, #12219                  @ 0x2fbb 
    /*000174c4*/ MOV         R1, #8 
    /*000174c8*/ STR         R3, [SP] 
    /*000174cc*/ MOVW        R2, #0                      @ .LC330 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c38] 
    /*000174d0*/ LDR         R3, [PC, #44]               @ 0x0000000000017504 
    /*000174d4*/ MOVT        R2, #0                      @ .LC330 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c38] 
    /*000174d8*/ STR         R5, [SP, #4] 
    /*000174dc*/ MOV         R0, #3 
    /*000174e0*/ BL          0x00000000000174E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000174e4*/ MOV         R0, R6 
    /*000174e8*/ MOVW        R4, #32773                  @ 0x8005 
    /*000174ec*/ BL          0x00000000000174EC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000174f0*/ MOVT        R4, #40968                  @ 0xa008 
    /*000174f4*/ B           VENC_DetachVbPool_x17454
    VENC_DetachVbPool_x174f8:
    /*000174f8*/ MOV         R4, #65024                  @ 0xfe00 
    /*000174fc*/ MOVT        R4, #65535                  @ 0xffff 
    /*00017500*/ B           VENC_DetachVbPool_x17454
    /*00017504*/ ANDEQ       R0, R0, IP, LSL #22 
FUNC_END VENC_DetachVbPool


FUNC_BEGIN VencCheckIntraRefresh
    /*00017508*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001750c*/ SUBS        R4, R0, #0 
    /*00017510*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00017514*/ MOV         R3, #30 
    /*00017518*/ MOV         R7, R1 
    /*0001751c*/ STR         R3, [SP, #24] 
    /*00017520*/ BLT         VencCheckIntraRefresh_x176b8
    /*00017524*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00017528*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0001752c*/ LDR         R3, [R3] 
    /*00017530*/ CMP         R4, R3 
    /*00017534*/ BCS         VencCheckIntraRefresh_x176b8
    VencCheckIntraRefresh_x17538:
    /*00017538*/ CMP         R7, #0 
    /*0001753c*/ BEQ         VencCheckIntraRefresh_x177c4
    VencCheckIntraRefresh_x17540:
    /*00017540*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00017544*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00017548*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0001754c*/ MOVW        R2, #265                    @ 0x109 
    /*00017550*/ LDR         R3, [R3] 
    /*00017554*/ MLA         R5, R5, R4, R3 
    /*00017558*/ ADD         R6, R5, #12288              @ 0x3000 
    /*0001755c*/ LDR         R3, [R6, #616]              @ 0x268 
    /*00017560*/ CMP         R3, #96                     @ 0x60 
    /*00017564*/ CMPNE       R3, R2 
    /*00017568*/ BNE         VencCheckIntraRefresh_x17860
    /*0001756c*/ LDR         R3, [R6, #716]              @ 0x2cc 
    /*00017570*/ CMP         R3, #0 
    /*00017574*/ BNE         VencCheckIntraRefresh_x17760
    /*00017578*/ LDR         R3, [R6, #1044]             @ 0x414 
    /*0001757c*/ CMP         R3, #1 
    /*00017580*/ BEQ         VencCheckIntraRefresh_x178ac
    /*00017584*/ LDR         R2, [R6, #676]              @ 0x2a4 
    /*00017588*/ SUB         R3, R2, #6 
    /*0001758c*/ BIC         R3, R3, #4 
    /*00017590*/ CMP         R2, #16 
    /*00017594*/ CMPNE       R3, #0 
    /*00017598*/ BEQ         VencCheckIntraRefresh_x175a8
    /*0001759c*/ LDR         R3, [R6, #1028]             @ 0x404 
    /*000175a0*/ CMP         R3, #0 
    /*000175a4*/ BNE         VencCheckIntraRefresh_x176d0
    VencCheckIntraRefresh_x175a8:
    /*000175a8*/ LDR         R3, [R7] 
    /*000175ac*/ CMP         R3, #1 
    /*000175b0*/ BHI         VencCheckIntraRefresh_x17844
    /*000175b4*/ CMP         R3, #0 
    /*000175b8*/ BEQ         VencCheckIntraRefresh_x176ac
    /*000175bc*/ LDR         R3, [R7, #12] 
    /*000175c0*/ CMP         R3, #51                     @ 0x33 
    /*000175c4*/ BHI         VencCheckIntraRefresh_x17890
    /*000175c8*/ LDR         R3, [R7, #4] 
    /*000175cc*/ CMP         R3, #1 
    /*000175d0*/ BHI         VencCheckIntraRefresh_x1771c
    /*000175d4*/ BEQ         VencCheckIntraRefresh_x17808
    VencCheckIntraRefresh_x175d8:
    /*000175d8*/ ADD         R3, R5, #14080              @ 0x3700 
    /*000175dc*/ ADD         R1, R5, #14336              @ 0x3800 
    /*000175e0*/ ADD         R3, R3, #48                 @ 0x30 
    /*000175e4*/ ADD         R1, R1, #48                 @ 0x30 
    VencCheckIntraRefresh_x175e8:
    /*000175e8*/ LDR         R2, [R3] 
    /*000175ec*/ ADD         R3, R3, #32 
    /*000175f0*/ CMP         R2, #1 
    /*000175f4*/ BEQ         VencCheckIntraRefresh_x176f4
    /*000175f8*/ CMP         R1, R3 
    /*000175fc*/ BNE         VencCheckIntraRefresh_x175e8
    /*00017600*/ LDR         R1, [R6, #560]              @ 0x230 
    /*00017604*/ LDR         R3, [R6, #564]              @ 0x234 
    /*00017608*/ CMP         R1, R3 
    /*0001760c*/ CMPNE       R2, #0 
    /*00017610*/ BNE         VencCheckIntraRefresh_x17704
    VencCheckIntraRefresh_x17614:
    /*00017614*/ ADD         R0, R5, #12928              @ 0x3280 
    /*00017618*/ ADD         R1, SP, #24 
    /*0001761c*/ ADD         R0, R0, #36                 @ 0x24 
    /*00017620*/ BL          0x0000000000017620          @ VencGetGop [R_ARM_CALL: .text+0x14534] 
    /*00017624*/ CMP         R0, #0 
    /*00017628*/ BNE         VencCheckIntraRefresh_x176b0
    /*0001762c*/ LDR         R3, [R5, #4] 
    /*00017630*/ CMP         R3, #96                     @ 0x60 
    /*00017634*/ BEQ         VencCheckIntraRefresh_x177d4
    /*00017638*/ MOV         R0, #13 
    /*0001763c*/ BL          0x000000000001763C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00017640*/ ADD         R1, SP, #28 
    /*00017644*/ LDR         R3, [R0, #128]              @ 0x80 
    /*00017648*/ MOV         R0, R4 
    /*0001764c*/ BLX         R3 
    VencCheckIntraRefresh_x17650:
    /*00017650*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00017654*/ CMP         R3, #0 
    /*00017658*/ BEQ         VencCheckIntraRefresh_x178c4
    /*0001765c*/ ADD         R0, SP, #24 
    /*00017660*/ LDM         R0, {R0, R1, R3} 
    /*00017664*/ SUB         R0, R0, #1 
    /*00017668*/ MLA         R1, R3, R1, R1 
    /*0001766c*/ ADD         R0, R0, R1 
    /*00017670*/ BL          0x0000000000017670          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00017674*/ LDR         R3, [R5, #4] 
    /*00017678*/ CMP         R3, #96                     @ 0x60 
    /*0001767c*/ LDR         R3, [R7, #4] 
    /*00017680*/ STR         R0, [SP, #24] 
    /*00017684*/ BEQ         VencCheckIntraRefresh_x177f0
    /*00017688*/ CMP         R3, #1 
    /*0001768c*/ LDREQ       R3, [R6, #148]              @ 0x94 
    /*00017690*/ LDRNE       R3, [R6, #152]              @ 0x98 
    /*00017694*/ ADD         R3, R3, #63                 @ 0x3f 
    /*00017698*/ LSR         R3, R3, #6 
    VencCheckIntraRefresh_x1769c:
    /*0001769c*/ LDR         R2, [R7, #8] 
    /*000176a0*/ MUL         R0, R2, R0 
    /*000176a4*/ CMP         R3, R0 
    /*000176a8*/ BHI         VencCheckIntraRefresh_x17790
    VencCheckIntraRefresh_x176ac:
    /*000176ac*/ MOV         R0, #0 
    VencCheckIntraRefresh_x176b0:
    /*000176b0*/ ADD         SP, SP, #44                 @ 0x2c 
    /*000176b4*/ POP         {R4, R5, R6, R7, PC} 
    VencCheckIntraRefresh_x176b8:
    /*000176b8*/ MOV         R0, R4 
    /*000176bc*/ BL          0x0000000000000304 
    /*000176c0*/ CMP         R0, #0 
    /*000176c4*/ BEQ         VencCheckIntraRefresh_x17538
    /*000176c8*/ ADD         SP, SP, #44                 @ 0x2c 
    /*000176cc*/ POP         {R4, R5, R6, R7, PC} 
    VencCheckIntraRefresh_x176d0:
    /*000176d0*/ LDR         R3, [R6, #1036]             @ 0x40c 
    /*000176d4*/ CMP         R3, #1 
    /*000176d8*/ BNE         VencCheckIntraRefresh_x175a8
    /*000176dc*/ MOVW        R3, #12295                  @ 0x3007 
    /*000176e0*/ MOVW        R2, #0                      @ .LC445 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5d94] 
    /*000176e4*/ STR         R4, [SP, #4] 
    /*000176e8*/ MOVT        R2, #0                      @ .LC445 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5d94] 
    /*000176ec*/ STR         R3, [SP] 
    /*000176f0*/ B           VencCheckIntraRefresh_x17774
    VencCheckIntraRefresh_x176f4:
    /*000176f4*/ LDR         R2, [R6, #560]              @ 0x230 
    /*000176f8*/ LDR         R3, [R6, #564]              @ 0x234 
    /*000176fc*/ CMP         R2, R3 
    /*00017700*/ BEQ         VencCheckIntraRefresh_x17614
    VencCheckIntraRefresh_x17704:
    /*00017704*/ MOVW        R3, #12338                  @ 0x3032 
    /*00017708*/ MOVW        R2, #0                      @ .LC450 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5f30] 
    /*0001770c*/ STR         R4, [SP, #4] 
    /*00017710*/ MOVT        R2, #0                      @ .LC450 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5f30] 
    /*00017714*/ STR         R3, [SP] 
    /*00017718*/ B           VencCheckIntraRefresh_x17774
    VencCheckIntraRefresh_x1771c:
    /*0001771c*/ STR         R3, [SP, #8] 
    /*00017720*/ MOV         R2, #0 
    /*00017724*/ MOV         R3, #1 
    /*00017728*/ STR         R2, [SP, #12] 
    /*0001772c*/ STR         R3, [SP, #16] 
    /*00017730*/ MOVW        R2, #0                      @ .LC448 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e8c] 
    /*00017734*/ MOVW        R3, #12316                  @ 0x301c 
    /*00017738*/ STR         R4, [SP, #4] 
    /*0001773c*/ STR         R3, [SP] 
    /*00017740*/ MOVT        R2, #0                      @ .LC448 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e8c] 
    /*00017744*/ LDR         R3, [PC, #400]              @ 0x00000000000178dc 
    /*00017748*/ MOV         R1, #8 
    /*0001774c*/ MOV         R0, #3 
    /*00017750*/ BL          0x0000000000017750          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017754*/ MOVW        R0, #32771                  @ 0x8003 
    /*00017758*/ MOVT        R0, #40968                  @ 0xa008 
    /*0001775c*/ B           VencCheckIntraRefresh_x176b0
    VencCheckIntraRefresh_x17760:
    /*00017760*/ MOVW        R2, #0                      @ .LC443 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5cdc] 
    /*00017764*/ MOVT        R2, #0                      @ .LC443 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5cdc] 
    /*00017768*/ MOVW        R3, #12277                  @ 0x2ff5 
    /*0001776c*/ STR         R4, [SP, #4] 
    /*00017770*/ STR         R3, [SP] 
    VencCheckIntraRefresh_x17774:
    /*00017774*/ LDR         R3, [PC, #352]              @ 0x00000000000178dc 
    /*00017778*/ MOV         R1, #8 
    /*0001777c*/ MOV         R0, #3 
    /*00017780*/ BL          0x0000000000017780          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017784*/ MOVW        R0, #32777                  @ 0x8009 
    /*00017788*/ MOVT        R0, #40968                  @ 0xa008 
    /*0001778c*/ B           VencCheckIntraRefresh_x176b0
    VencCheckIntraRefresh_x17790:
    /*00017790*/ STR         R2, [SP, #8] 
    /*00017794*/ MOVW        R2, #0                      @ .LC452 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5fe8] 
    /*00017798*/ MOVT        R2, #0                      @ .LC452 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5fe8] 
    /*0001779c*/ MOVW        R3, #12390                  @ 0x3066 
    /*000177a0*/ STR         R4, [SP, #4] 
    /*000177a4*/ STR         R3, [SP] 
    VencCheckIntraRefresh_x177a8:
    /*000177a8*/ LDR         R3, [PC, #300]              @ 0x00000000000178dc 
    /*000177ac*/ MOV         R1, #8 
    /*000177b0*/ MOV         R0, #3 
    /*000177b4*/ BL          0x00000000000177B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000177b8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000177bc*/ MOVT        R0, #40968                  @ 0xa008 
    /*000177c0*/ B           VencCheckIntraRefresh_x176b0
    VencCheckIntraRefresh_x177c4:
    /*000177c4*/ BL          0x00000000000002C8 
    /*000177c8*/ CMP         R0, #0 
    /*000177cc*/ BNE         VencCheckIntraRefresh_x176b0
    /*000177d0*/ B           VencCheckIntraRefresh_x17540
    VencCheckIntraRefresh_x177d4:
    /*000177d4*/ MOV         R0, #10 
    /*000177d8*/ BL          0x00000000000177D8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000177dc*/ ADD         R1, SP, #28 
    /*000177e0*/ LDR         R3, [R0, #100]              @ 0x64 
    /*000177e4*/ MOV         R0, R4 
    /*000177e8*/ BLX         R3 
    /*000177ec*/ B           VencCheckIntraRefresh_x17650
    VencCheckIntraRefresh_x177f0:
    /*000177f0*/ CMP         R3, #1 
    /*000177f4*/ LDREQ       R3, [R6, #148]              @ 0x94 
    /*000177f8*/ LDRNE       R3, [R6, #152]              @ 0x98 
    /*000177fc*/ ADD         R3, R3, #15 
    /*00017800*/ LSR         R3, R3, #4 
    /*00017804*/ B           VencCheckIntraRefresh_x1769c
    VencCheckIntraRefresh_x17808:
    /*00017808*/ BL          0x0000000000017808          @ VENC_DRV_IsSupportColumnIntraRefresh [R_ARM_CALL: .text+0x26970] 
    /*0001780c*/ CMP         R0, #0 
    /*00017810*/ BNE         VencCheckIntraRefresh_x175d8
    /*00017814*/ MOVW        R3, #12322                  @ 0x3022 
    /*00017818*/ STR         R4, [SP, #4] 
    /*0001781c*/ STR         R3, [SP] 
    /*00017820*/ MOVW        R2, #0                      @ .LC449 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5ee0] 
    /*00017824*/ LDR         R3, [PC, #176]              @ 0x00000000000178dc 
    /*00017828*/ MOVT        R2, #0                      @ .LC449 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5ee0] 
    /*0001782c*/ MOV         R1, #8 
    /*00017830*/ MOV         R0, #3 
    /*00017834*/ BL          0x0000000000017834          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017838*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001783c*/ MOVT        R0, #40968                  @ 0xa008 
    /*00017840*/ B           VencCheckIntraRefresh_x176b0
    VencCheckIntraRefresh_x17844:
    /*00017844*/ STR         R3, [SP, #8] 
    /*00017848*/ MOVW        R2, #0                      @ .LC446 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5df0] 
    /*0001784c*/ MOVW        R3, #12302                  @ 0x300e 
    /*00017850*/ STR         R4, [SP, #4] 
    /*00017854*/ STR         R3, [SP] 
    /*00017858*/ MOVT        R2, #0                      @ .LC446 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5df0] 
    /*0001785c*/ B           VencCheckIntraRefresh_x177a8
    VencCheckIntraRefresh_x17860:
    /*00017860*/ MOVW        R2, #0                      @ .LC442 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5c80] 
    /*00017864*/ MOVT        R2, #0                      @ .LC442 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5c80] 
    /*00017868*/ MOVW        R3, #12272                  @ 0x2ff0 
    /*0001786c*/ STR         R4, [SP, #4] 
    /*00017870*/ STR         R3, [SP] 
    VencCheckIntraRefresh_x17874:
    /*00017874*/ LDR         R3, [PC, #96]               @ 0x00000000000178dc 
    /*00017878*/ MOV         R1, #8 
    /*0001787c*/ MOV         R0, #3 
    /*00017880*/ BL          0x0000000000017880          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017884*/ MOVW        R0, #32776                  @ 0x8008 
    /*00017888*/ MOVT        R0, #40968                  @ 0xa008 
    /*0001788c*/ B           VencCheckIntraRefresh_x176b0
    VencCheckIntraRefresh_x17890:
    /*00017890*/ STR         R3, [SP, #8] 
    /*00017894*/ MOVW        R2, #0                      @ .LC447 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e44] 
    /*00017898*/ MOVW        R3, #12310                  @ 0x3016 
    /*0001789c*/ STR         R4, [SP, #4] 
    /*000178a0*/ STR         R3, [SP] 
    /*000178a4*/ MOVT        R2, #0                      @ .LC447 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e44] 
    /*000178a8*/ B           VencCheckIntraRefresh_x177a8
    VencCheckIntraRefresh_x178ac:
    /*000178ac*/ MOVW        R3, #12283                  @ 0x2ffb 
    /*000178b0*/ MOVW        R2, #0                      @ .LC444 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5d30] 
    /*000178b4*/ STR         R4, [SP, #4] 
    /*000178b8*/ MOVT        R2, #0                      @ .LC444 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5d30] 
    /*000178bc*/ STR         R3, [SP] 
    /*000178c0*/ B           VencCheckIntraRefresh_x17774
    VencCheckIntraRefresh_x178c4:
    /*000178c4*/ MOVW        R3, #12358                  @ 0x3046 
    /*000178c8*/ MOVW        R2, #0                      @ .LC451 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5f78] 
    /*000178cc*/ STR         R4, [SP, #4] 
    /*000178d0*/ MOVT        R2, #0                      @ .LC451 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5f78] 
    /*000178d4*/ STR         R3, [SP] 
    /*000178d8*/ B           VencCheckIntraRefresh_x17874
    /*000178dc*/ ANDEQ       R0, R0, R0, LSR #22 
FUNC_END VencCheckIntraRefresh


FUNC_BEGIN VencSetIntraRefresh
    /*000178e0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000178e4*/ SUBS        R6, R1, #0 
    /*000178e8*/ SUB         SP, SP, #20 
    /*000178ec*/ MOV         R4, R0 
    /*000178f0*/ BEQ         VencSetIntraRefresh_x17a28
    VencSetIntraRefresh_x178f4:
    /*000178f4*/ CMP         R4, #0 
    /*000178f8*/ BLT         VencSetIntraRefresh_x179e4
    /*000178fc*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00017900*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00017904*/ LDR         R3, [R3] 
    /*00017908*/ CMP         R4, R3 
    /*0001790c*/ BCS         VencSetIntraRefresh_x179e4
    VencSetIntraRefresh_x17910:
    /*00017910*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00017914*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00017918*/ MUL         R5, R5, R4 
    /*0001791c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00017920*/ LDR         R9, [R3] 
    /*00017924*/ ADD         R8, R9, R5 
    /*00017928*/ ADD         R7, R8, #12416              @ 0x3080 
    /*0001792c*/ ADD         R7, R7, #16 
    /*00017930*/ MOV         R0, R7 
    /*00017934*/ BL          0x0000000000017934          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00017938*/ CMP         R0, #0 
    /*0001793c*/ BNE         VencSetIntraRefresh_x17ae4
    /*00017940*/ LDR         R3, [R9, R5] 
    /*00017944*/ CMP         R3, #1 
    /*00017948*/ BNE         VencSetIntraRefresh_x17aac
    /*0001794c*/ MOV         R1, R6 
    /*00017950*/ MOV         R0, R4 
    /*00017954*/ BL          0x0000000000017954          @ VencCheckIntraRefresh [R_ARM_CALL: .text+0x17508] 
    /*00017958*/ SUBS        R5, R0, #0 
    /*0001795c*/ BNE         VencSetIntraRefresh_x17a14
    /*00017960*/ ADD         R3, R8, #12288              @ 0x3000 
    /*00017964*/ LDR         R3, [R3, #612]              @ 0x264 
    /*00017968*/ CMP         R3, #0 
    /*0001796c*/ BNE         VencSetIntraRefresh_x17a00
    /*00017970*/ LDR         R3, [R8, #4] 
    /*00017974*/ CMP         R3, #96                     @ 0x60 
    /*00017978*/ BEQ         VencSetIntraRefresh_x17a74
    /*0001797c*/ MOVW        R2, #265                    @ 0x109 
    /*00017980*/ CMP         R3, R2 
    /*00017984*/ BNE         VencSetIntraRefresh_x17a38
    /*00017988*/ MOV         R0, #13 
    /*0001798c*/ BL          0x000000000001798C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00017990*/ MOV         R1, R6 
    /*00017994*/ LDR         R3, [R0, #164]              @ 0xa4 
    /*00017998*/ MOV         R0, R4 
    /*0001799c*/ BLX         R3 
    /*000179a0*/ SUBS        R9, R0, #0 
    /*000179a4*/ BEQ         VencSetIntraRefresh_x17a00
    /*000179a8*/ MOVW        R2, #0                      @ .LC454 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6088] 
    /*000179ac*/ MOVT        R2, #0                      @ .LC454 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6088] 
    /*000179b0*/ MOVW        R3, #12446                  @ 0x309e 
    /*000179b4*/ STR         R4, [SP, #4] 
    /*000179b8*/ STR         R3, [SP] 
    VencSetIntraRefresh_x179bc:
    /*000179bc*/ LDR         R3, [PC, #300]              @ 0x0000000000017af0 
    /*000179c0*/ MOV         R1, #8 
    /*000179c4*/ MOV         R0, #3 
    /*000179c8*/ BIC         R5, R9, #267386880          @ 0xff00000 
    /*000179cc*/ BL          0x00000000000179CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000179d0*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*000179d4*/ MOV         R0, R7 
    /*000179d8*/ ORR         R5, R5, #524288             @ 0x80000 
    /*000179dc*/ BL          0x00000000000179DC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000179e0*/ B           VencSetIntraRefresh_x179f4
    VencSetIntraRefresh_x179e4:
    /*000179e4*/ MOV         R0, R4 
    /*000179e8*/ BL          0x0000000000000304 
    /*000179ec*/ SUBS        R5, R0, #0 
    /*000179f0*/ BEQ         VencSetIntraRefresh_x17910
    VencSetIntraRefresh_x179f4:
    /*000179f4*/ MOV         R0, R5 
    /*000179f8*/ ADD         SP, SP, #20 
    /*000179fc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetIntraRefresh_x17a00:
    /*00017a00*/ ADD         R0, R8, #13248              @ 0x33c0 
    /*00017a04*/ MOV         R1, R6 
    /*00017a08*/ ADD         R0, R0, #52                 @ 0x34 
    /*00017a0c*/ MOV         R2, #16 
    /*00017a10*/ BL          0x0000000000017A10          @ osal_memcpy [R_ARM_CALL: +0x0] 
    VencSetIntraRefresh_x17a14:
    /*00017a14*/ MOV         R0, R7 
    /*00017a18*/ BL          0x0000000000017A18          @ osal_up [R_ARM_CALL: +0x0] 
    /*00017a1c*/ MOV         R0, R5 
    /*00017a20*/ ADD         SP, SP, #20 
    /*00017a24*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetIntraRefresh_x17a28:
    /*00017a28*/ BL          0x00000000000002C8 
    /*00017a2c*/ SUBS        R5, R0, #0 
    /*00017a30*/ BNE         VencSetIntraRefresh_x179f4
    /*00017a34*/ B           VencSetIntraRefresh_x178f4
    VencSetIntraRefresh_x17a38:
    /*00017a38*/ STR         R3, [SP, #8] 
    /*00017a3c*/ MOV         R1, #8 
    /*00017a40*/ MOVW        R3, #12456                  @ 0x30a8 
    /*00017a44*/ STR         R4, [SP, #4] 
    /*00017a48*/ STR         R3, [SP] 
    /*00017a4c*/ MOVW        R2, #0                      @ .LC455 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x60c4] 
    /*00017a50*/ LDR         R3, [PC, #152]              @ 0x0000000000017af0 
    /*00017a54*/ MOVT        R2, #0                      @ .LC455 [R_ARM_MOVT_ABS: .rodata.str1.4+0x60c4] 
    /*00017a58*/ MOV         R0, #3 
    /*00017a5c*/ MOVW        R5, #32776                  @ 0x8008 
    /*00017a60*/ BL          0x0000000000017A60          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017a64*/ MOV         R0, R7 
    /*00017a68*/ BL          0x0000000000017A68          @ osal_up [R_ARM_CALL: +0x0] 
    /*00017a6c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00017a70*/ B           VencSetIntraRefresh_x179f4
    VencSetIntraRefresh_x17a74:
    /*00017a74*/ MOV         R0, #10 
    /*00017a78*/ BL          0x0000000000017A78          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00017a7c*/ MOV         R1, R6 
    /*00017a80*/ LDR         R3, [R0, #168]              @ 0xa8 
    /*00017a84*/ MOV         R0, R4 
    /*00017a88*/ BLX         R3 
    /*00017a8c*/ SUBS        R9, R0, #0 
    /*00017a90*/ BEQ         VencSetIntraRefresh_x17a00
    /*00017a94*/ MOVW        R3, #12434                  @ 0x3092 
    /*00017a98*/ MOVW        R2, #0                      @ .LC453 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x604c] 
    /*00017a9c*/ STR         R4, [SP, #4] 
    /*00017aa0*/ MOVT        R2, #0                      @ .LC453 [R_ARM_MOVT_ABS: .rodata.str1.4+0x604c] 
    /*00017aa4*/ STR         R3, [SP] 
    /*00017aa8*/ B           VencSetIntraRefresh_x179bc
    VencSetIntraRefresh_x17aac:
    /*00017aac*/ MOVW        R3, #12414                  @ 0x307e 
    /*00017ab0*/ MOV         R1, #8 
    /*00017ab4*/ STR         R3, [SP] 
    /*00017ab8*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00017abc*/ LDR         R3, [PC, #44]               @ 0x0000000000017af0 
    /*00017ac0*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00017ac4*/ STR         R4, [SP, #4] 
    /*00017ac8*/ MOV         R0, #3 
    /*00017acc*/ BL          0x0000000000017ACC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017ad0*/ MOV         R0, R7 
    /*00017ad4*/ MOVW        R5, #32773                  @ 0x8005 
    /*00017ad8*/ BL          0x0000000000017AD8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00017adc*/ MOVT        R5, #40968                  @ 0xa008 
    /*00017ae0*/ B           VencSetIntraRefresh_x179f4
    VencSetIntraRefresh_x17ae4:
    /*00017ae4*/ MOV         R5, #65024                  @ 0xfe00 
    /*00017ae8*/ MOVT        R5, #65535                  @ 0xffff 
    /*00017aec*/ B           VencSetIntraRefresh_x179f4
    /*00017af0*/ ANDEQ       R0, R0, R8, LSR FP 
FUNC_END VencSetIntraRefresh


FUNC_BEGIN VencGetIntraRefresh
    /*00017af4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00017af8*/ SUBS        R6, R1, #0 
    /*00017afc*/ SUB         SP, SP, #8 
    /*00017b00*/ MOV         R4, R0 
    /*00017b04*/ BEQ         VencGetIntraRefresh_x17be4
    VencGetIntraRefresh_x17b08:
    /*00017b08*/ CMP         R4, #0 
    /*00017b0c*/ BLT         VencGetIntraRefresh_x17bc8
    /*00017b10*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00017b14*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00017b18*/ LDR         R3, [R3] 
    /*00017b1c*/ CMP         R4, R3 
    /*00017b20*/ BCS         VencGetIntraRefresh_x17bc8
    VencGetIntraRefresh_x17b24:
    /*00017b24*/ MOVW        R7, #36240                  @ 0x8d90 
    /*00017b28*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00017b2c*/ MUL         R7, R7, R4 
    /*00017b30*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00017b34*/ LDR         SL, [R3] 
    /*00017b38*/ ADD         R9, SL, R7 
    /*00017b3c*/ ADD         R8, R9, #12416              @ 0x3080 
    /*00017b40*/ ADD         R8, R8, #16 
    /*00017b44*/ MOV         R0, R8 
    /*00017b48*/ BL          0x0000000000017B48          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00017b4c*/ SUBS        R5, R0, #0 
    /*00017b50*/ BNE         VencGetIntraRefresh_x17c64
    /*00017b54*/ LDR         R3, [SL, R7] 
    /*00017b58*/ CMP         R3, #1 
    /*00017b5c*/ BNE         VencGetIntraRefresh_x17c2c
    /*00017b60*/ ADD         R3, R9, #12288              @ 0x3000 
    /*00017b64*/ MOVW        R1, #265                    @ 0x109 
    /*00017b68*/ LDR         R2, [R3, #616]              @ 0x268 
    /*00017b6c*/ CMP         R2, #96                     @ 0x60 
    /*00017b70*/ CMPNE       R2, R1 
    /*00017b74*/ BNE         VencGetIntraRefresh_x17c70
    /*00017b78*/ LDR         R1, [R3, #716]              @ 0x2cc 
    /*00017b7c*/ CMP         R1, #0 
    /*00017b80*/ BNE         VencGetIntraRefresh_x17ca8
    /*00017b84*/ LDR         R3, [R3, #612]              @ 0x264 
    /*00017b88*/ CMP         R3, #1 
    /*00017b8c*/ BEQ         VencGetIntraRefresh_x17c14
    /*00017b90*/ CMP         R2, #96                     @ 0x60 
    /*00017b94*/ BEQ         VencGetIntraRefresh_x17bf4
    /*00017b98*/ MOV         R0, #13 
    /*00017b9c*/ BL          0x0000000000017B9C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00017ba0*/ MOV         R1, R6 
    /*00017ba4*/ LDR         R3, [R0, #168]              @ 0xa8 
    /*00017ba8*/ MOV         R0, R4 
    /*00017bac*/ BLX         R3 
    /*00017bb0*/ MOV         R5, R0 
    VencGetIntraRefresh_x17bb4:
    /*00017bb4*/ MOV         R0, R8 
    /*00017bb8*/ BL          0x0000000000017BB8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00017bbc*/ MOV         R0, R5 
    /*00017bc0*/ ADD         SP, SP, #8 
    /*00017bc4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencGetIntraRefresh_x17bc8:
    /*00017bc8*/ MOV         R0, R4 
    /*00017bcc*/ BL          0x0000000000000304 
    /*00017bd0*/ SUBS        R5, R0, #0 
    /*00017bd4*/ BEQ         VencGetIntraRefresh_x17b24
    VencGetIntraRefresh_x17bd8:
    /*00017bd8*/ MOV         R0, R5 
    /*00017bdc*/ ADD         SP, SP, #8 
    /*00017be0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VencGetIntraRefresh_x17be4:
    /*00017be4*/ BL          0x00000000000002C8 
    /*00017be8*/ SUBS        R5, R0, #0 
    /*00017bec*/ BNE         VencGetIntraRefresh_x17bd8
    /*00017bf0*/ B           VencGetIntraRefresh_x17b08
    VencGetIntraRefresh_x17bf4:
    /*00017bf4*/ MOV         R0, #10 
    /*00017bf8*/ BL          0x0000000000017BF8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00017bfc*/ MOV         R1, R6 
    /*00017c00*/ LDR         R3, [R0, #172]              @ 0xac 
    /*00017c04*/ MOV         R0, R4 
    /*00017c08*/ BLX         R3 
    /*00017c0c*/ MOV         R5, R0 
    /*00017c10*/ B           VencGetIntraRefresh_x17bb4
    VencGetIntraRefresh_x17c14:
    /*00017c14*/ ADD         R1, R9, #13248              @ 0x33c0 
    /*00017c18*/ MOV         R0, R6 
    /*00017c1c*/ ADD         R1, R1, #52                 @ 0x34 
    /*00017c20*/ MOV         R2, #16 
    /*00017c24*/ BL          0x0000000000017C24          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00017c28*/ B           VencGetIntraRefresh_x17bb4
    VencGetIntraRefresh_x17c2c:
    /*00017c2c*/ MOVW        R3, #12487                  @ 0x30c7 
    /*00017c30*/ MOV         R1, #8 
    /*00017c34*/ STR         R3, [SP] 
    /*00017c38*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00017c3c*/ LDR         R3, [PC, #156]              @ 0x0000000000017ce0 
    /*00017c40*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00017c44*/ STR         R4, [SP, #4] 
    /*00017c48*/ MOV         R0, #3 
    /*00017c4c*/ BL          0x0000000000017C4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017c50*/ MOV         R0, R8 
    /*00017c54*/ MOVW        R5, #32773                  @ 0x8005 
    /*00017c58*/ BL          0x0000000000017C58          @ osal_up [R_ARM_CALL: +0x0] 
    /*00017c5c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00017c60*/ B           VencGetIntraRefresh_x17bd8
    VencGetIntraRefresh_x17c64:
    /*00017c64*/ MOV         R5, #65024                  @ 0xfe00 
    /*00017c68*/ MOVT        R5, #65535                  @ 0xffff 
    /*00017c6c*/ B           VencGetIntraRefresh_x17bd8
    VencGetIntraRefresh_x17c70:
    /*00017c70*/ MOVW        R3, #12494                  @ 0x30ce 
    /*00017c74*/ MOV         R1, #8 
    /*00017c78*/ STR         R3, [SP] 
    /*00017c7c*/ MOVW        R2, #0                      @ .LC442 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5c80] 
    /*00017c80*/ LDR         R3, [PC, #88]               @ 0x0000000000017ce0 
    /*00017c84*/ MOVT        R2, #0                      @ .LC442 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5c80] 
    /*00017c88*/ STR         R4, [SP, #4] 
    /*00017c8c*/ MOV         R0, #3 
    /*00017c90*/ BL          0x0000000000017C90          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017c94*/ MOV         R0, R8 
    /*00017c98*/ MOVW        R5, #32776                  @ 0x8008 
    /*00017c9c*/ BL          0x0000000000017C9C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00017ca0*/ MOVT        R5, #40968                  @ 0xa008 
    /*00017ca4*/ B           VencGetIntraRefresh_x17bd8
    VencGetIntraRefresh_x17ca8:
    /*00017ca8*/ MOVW        R3, #12502                  @ 0x30d6 
    /*00017cac*/ MOV         R1, #8 
    /*00017cb0*/ STR         R3, [SP] 
    /*00017cb4*/ MOVW        R2, #0                      @ .LC456 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6118] 
    /*00017cb8*/ LDR         R3, [PC, #32]               @ 0x0000000000017ce0 
    /*00017cbc*/ MOVT        R2, #0                      @ .LC456 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6118] 
    /*00017cc0*/ STR         R4, [SP, #4] 
    /*00017cc4*/ MOV         R0, #3 
    /*00017cc8*/ BL          0x0000000000017CC8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017ccc*/ MOV         R0, R8 
    /*00017cd0*/ MOVW        R5, #32777                  @ 0x8009 
    /*00017cd4*/ BL          0x0000000000017CD4          @ osal_up [R_ARM_CALL: +0x0] 
    /*00017cd8*/ MOVT        R5, #40968                  @ 0xa008 
    /*00017cdc*/ B           VencGetIntraRefresh_x17bd8
    /*00017ce0*/ ANDEQ       R0, R0, IP, ASR #22 
FUNC_END VencGetIntraRefresh


FUNC_BEGIN VencSetSobelCfg
    /*00017ce4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00017ce8*/ SUBS        R6, R1, #0 
    /*00017cec*/ SUB         SP, SP, #12 
    /*00017cf0*/ MOV         R4, R0 
    /*00017cf4*/ BEQ         VencSetSobelCfg_x17dc0
    VencSetSobelCfg_x17cf8:
    /*00017cf8*/ CMP         R4, #0 
    /*00017cfc*/ BLT         VencSetSobelCfg_x17da4
    /*00017d00*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00017d04*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00017d08*/ LDR         R3, [R3] 
    /*00017d0c*/ CMP         R4, R3 
    /*00017d10*/ BCS         VencSetSobelCfg_x17da4
    VencSetSobelCfg_x17d14:
    /*00017d14*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00017d18*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00017d1c*/ MUL         R5, R5, R4 
    /*00017d20*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00017d24*/ LDR         R8, [R3] 
    /*00017d28*/ ADD         R9, R8, R5 
    /*00017d2c*/ ADD         R7, R9, #12416              @ 0x3080 
    /*00017d30*/ ADD         R7, R7, #16 
    /*00017d34*/ MOV         R0, R7 
    /*00017d38*/ BL          0x0000000000017D38          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00017d3c*/ CMP         R0, #0 
    /*00017d40*/ BNE         VencSetSobelCfg_x17e08
    /*00017d44*/ LDR         R3, [R8, R5] 
    /*00017d48*/ CMP         R3, #1 
    /*00017d4c*/ BNE         VencSetSobelCfg_x17dd0
    /*00017d50*/ LDR         R2, [R9, #4] 
    /*00017d54*/ MOVW        R3, #265                    @ 0x109 
    /*00017d58*/ CMP         R2, R3 
    /*00017d5c*/ BNE         VencSetSobelCfg_x17e14
    /*00017d60*/ MOV         R0, #19 
    /*00017d64*/ BL          0x0000000000017D64          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00017d68*/ MOV         R1, R6 
    /*00017d6c*/ LDR         R3, [R0, #84]               @ 0x54 
    /*00017d70*/ MOV         R0, R4 
    /*00017d74*/ BLX         R3 
    /*00017d78*/ MOV         R5, R0 
    /*00017d7c*/ MOV         R0, R7 
    /*00017d80*/ BL          0x0000000000017D80          @ osal_up [R_ARM_CALL: +0x0] 
    /*00017d84*/ CMP         R5, #0 
    /*00017d88*/ BEQ         VencSetSobelCfg_x17db4
    /*00017d8c*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00017d90*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00017d94*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00017d98*/ MOV         R0, R5 
    /*00017d9c*/ ADD         SP, SP, #12 
    /*00017da0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetSobelCfg_x17da4:
    /*00017da4*/ MOV         R0, R4 
    /*00017da8*/ BL          0x0000000000000304 
    /*00017dac*/ SUBS        R5, R0, #0 
    /*00017db0*/ BEQ         VencSetSobelCfg_x17d14
    VencSetSobelCfg_x17db4:
    /*00017db4*/ MOV         R0, R5 
    /*00017db8*/ ADD         SP, SP, #12 
    /*00017dbc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetSobelCfg_x17dc0:
    /*00017dc0*/ BL          0x00000000000002C8 
    /*00017dc4*/ SUBS        R5, R0, #0 
    /*00017dc8*/ BNE         VencSetSobelCfg_x17db4
    /*00017dcc*/ B           VencSetSobelCfg_x17cf8
    VencSetSobelCfg_x17dd0:
    /*00017dd0*/ MOVW        R3, #12541                  @ 0x30fd 
    /*00017dd4*/ MOV         R1, #8 
    /*00017dd8*/ STR         R3, [SP] 
    /*00017ddc*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00017de0*/ LDR         R3, [PC, #64]               @ 0x0000000000017e28 
    /*00017de4*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00017de8*/ STR         R4, [SP, #4] 
    /*00017dec*/ MOV         R0, #3 
    /*00017df0*/ BL          0x0000000000017DF0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017df4*/ MOV         R0, R7 
    /*00017df8*/ MOVW        R5, #32773                  @ 0x8005 
    /*00017dfc*/ BL          0x0000000000017DFC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00017e00*/ MOVT        R5, #40968                  @ 0xa008 
    /*00017e04*/ B           VencSetSobelCfg_x17db4
    VencSetSobelCfg_x17e08:
    /*00017e08*/ MOV         R5, #65024                  @ 0xfe00 
    /*00017e0c*/ MOVT        R5, #65535                  @ 0xffff 
    /*00017e10*/ B           VencSetSobelCfg_x17db4
    VencSetSobelCfg_x17e14:
    /*00017e14*/ MOV         R0, R7 
    /*00017e18*/ MOVW        R5, #32776                  @ 0x8008 
    /*00017e1c*/ BL          0x0000000000017E1C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00017e20*/ MOVT        R5, #40968                  @ 0xa008 
    /*00017e24*/ B           VencSetSobelCfg_x17db4
    /*00017e28*/ ANDEQ       R0, R0, R0, ROR #22 
FUNC_END VencSetSobelCfg


FUNC_BEGIN VencGetSobelCfg
    /*00017e2c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00017e30*/ SUBS        R6, R1, #0 
    /*00017e34*/ SUB         SP, SP, #12 
    /*00017e38*/ MOV         R4, R0 
    /*00017e3c*/ BEQ         VencGetSobelCfg_x17f08
    VencGetSobelCfg_x17e40:
    /*00017e40*/ CMP         R4, #0 
    /*00017e44*/ BLT         VencGetSobelCfg_x17eec
    /*00017e48*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00017e4c*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00017e50*/ LDR         R3, [R3] 
    /*00017e54*/ CMP         R4, R3 
    /*00017e58*/ BCS         VencGetSobelCfg_x17eec
    VencGetSobelCfg_x17e5c:
    /*00017e5c*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00017e60*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00017e64*/ MUL         R5, R5, R4 
    /*00017e68*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00017e6c*/ LDR         R8, [R3] 
    /*00017e70*/ ADD         R9, R8, R5 
    /*00017e74*/ ADD         R7, R9, #12416              @ 0x3080 
    /*00017e78*/ ADD         R7, R7, #16 
    /*00017e7c*/ MOV         R0, R7 
    /*00017e80*/ BL          0x0000000000017E80          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00017e84*/ CMP         R0, #0 
    /*00017e88*/ BNE         VencGetSobelCfg_x17f50
    /*00017e8c*/ LDR         R3, [R8, R5] 
    /*00017e90*/ CMP         R3, #1 
    /*00017e94*/ BNE         VencGetSobelCfg_x17f18
    /*00017e98*/ LDR         R2, [R9, #4] 
    /*00017e9c*/ MOVW        R3, #265                    @ 0x109 
    /*00017ea0*/ CMP         R2, R3 
    /*00017ea4*/ BNE         VencGetSobelCfg_x17f5c
    /*00017ea8*/ MOV         R0, #19 
    /*00017eac*/ BL          0x0000000000017EAC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00017eb0*/ MOV         R1, R6 
    /*00017eb4*/ LDR         R3, [R0, #88]               @ 0x58 
    /*00017eb8*/ MOV         R0, R4 
    /*00017ebc*/ BLX         R3 
    /*00017ec0*/ MOV         R5, R0 
    /*00017ec4*/ MOV         R0, R7 
    /*00017ec8*/ BL          0x0000000000017EC8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00017ecc*/ CMP         R5, #0 
    /*00017ed0*/ BEQ         VencGetSobelCfg_x17efc
    /*00017ed4*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00017ed8*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00017edc*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00017ee0*/ MOV         R0, R5 
    /*00017ee4*/ ADD         SP, SP, #12 
    /*00017ee8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetSobelCfg_x17eec:
    /*00017eec*/ MOV         R0, R4 
    /*00017ef0*/ BL          0x0000000000000304 
    /*00017ef4*/ SUBS        R5, R0, #0 
    /*00017ef8*/ BEQ         VencGetSobelCfg_x17e5c
    VencGetSobelCfg_x17efc:
    /*00017efc*/ MOV         R0, R5 
    /*00017f00*/ ADD         SP, SP, #12 
    /*00017f04*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetSobelCfg_x17f08:
    /*00017f08*/ BL          0x00000000000002C8 
    /*00017f0c*/ SUBS        R5, R0, #0 
    /*00017f10*/ BNE         VencGetSobelCfg_x17efc
    /*00017f14*/ B           VencGetSobelCfg_x17e40
    VencGetSobelCfg_x17f18:
    /*00017f18*/ MOVW        R3, #12580                  @ 0x3124 
    /*00017f1c*/ MOV         R1, #8 
    /*00017f20*/ STR         R3, [SP] 
    /*00017f24*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00017f28*/ LDR         R3, [PC, #64]               @ 0x0000000000017f70 
    /*00017f2c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00017f30*/ STR         R4, [SP, #4] 
    /*00017f34*/ MOV         R0, #3 
    /*00017f38*/ BL          0x0000000000017F38          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017f3c*/ MOV         R0, R7 
    /*00017f40*/ MOVW        R5, #32773                  @ 0x8005 
    /*00017f44*/ BL          0x0000000000017F44          @ osal_up [R_ARM_CALL: +0x0] 
    /*00017f48*/ MOVT        R5, #40968                  @ 0xa008 
    /*00017f4c*/ B           VencGetSobelCfg_x17efc
    VencGetSobelCfg_x17f50:
    /*00017f50*/ MOV         R5, #65024                  @ 0xfe00 
    /*00017f54*/ MOVT        R5, #65535                  @ 0xffff 
    /*00017f58*/ B           VencGetSobelCfg_x17efc
    VencGetSobelCfg_x17f5c:
    /*00017f5c*/ MOV         R0, R7 
    /*00017f60*/ MOVW        R5, #32776                  @ 0x8008 
    /*00017f64*/ BL          0x0000000000017F64          @ osal_up [R_ARM_CALL: +0x0] 
    /*00017f68*/ MOVT        R5, #40968                  @ 0xa008 
    /*00017f6c*/ B           VencGetSobelCfg_x17efc
    /*00017f70*/ ANDEQ       R0, R0, R0, ROR FP 
FUNC_END VencGetSobelCfg


FUNC_BEGIN VencSetPatternAdaptiveCfg
    /*00017f74*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00017f78*/ SUBS        R7, R1, #0 
    /*00017f7c*/ SUB         SP, SP, #12 
    /*00017f80*/ MOV         R4, R0 
    /*00017f84*/ BEQ         VencSetPatternAdaptiveCfg_x18054
    VencSetPatternAdaptiveCfg_x17f88:
    /*00017f88*/ CMP         R4, #0 
    /*00017f8c*/ BLT         VencSetPatternAdaptiveCfg_x1800c
    /*00017f90*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00017f94*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00017f98*/ LDR         R3, [R3] 
    /*00017f9c*/ CMP         R4, R3 
    /*00017fa0*/ BCS         VencSetPatternAdaptiveCfg_x1800c
    VencSetPatternAdaptiveCfg_x17fa4:
    /*00017fa4*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00017fa8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00017fac*/ MUL         R5, R5, R4 
    /*00017fb0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00017fb4*/ LDR         R8, [R3] 
    /*00017fb8*/ ADD         R9, R8, R5 
    /*00017fbc*/ ADD         R6, R9, #12416              @ 0x3080 
    /*00017fc0*/ ADD         R6, R6, #16 
    /*00017fc4*/ MOV         R0, R6 
    /*00017fc8*/ BL          0x0000000000017FC8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00017fcc*/ CMP         R0, #0 
    /*00017fd0*/ BNE         VencSetPatternAdaptiveCfg_x1809c
    /*00017fd4*/ LDR         R3, [R8, R5] 
    /*00017fd8*/ CMP         R3, #1 
    /*00017fdc*/ BNE         VencSetPatternAdaptiveCfg_x18064
    /*00017fe0*/ LDR         R2, [R9, #4] 
    /*00017fe4*/ MOVW        R3, #265                    @ 0x109 
    /*00017fe8*/ CMP         R2, R3 
    /*00017fec*/ MOVWNE      R5, #32776                  @ 0x8008 
    /*00017ff0*/ MOVTNE      R5, #40968                  @ 0xa008 
    /*00017ff4*/ BEQ         VencSetPatternAdaptiveCfg_x18028
    VencSetPatternAdaptiveCfg_x17ff8:
    /*00017ff8*/ MOV         R0, R6 
    /*00017ffc*/ BL          0x0000000000017FFC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00018000*/ MOV         R0, R5 
    /*00018004*/ ADD         SP, SP, #12 
    /*00018008*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetPatternAdaptiveCfg_x1800c:
    /*0001800c*/ MOV         R0, R4 
    /*00018010*/ BL          0x0000000000000304 
    /*00018014*/ SUBS        R5, R0, #0 
    /*00018018*/ BEQ         VencSetPatternAdaptiveCfg_x17fa4
    VencSetPatternAdaptiveCfg_x1801c:
    /*0001801c*/ MOV         R0, R5 
    /*00018020*/ ADD         SP, SP, #12 
    /*00018024*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetPatternAdaptiveCfg_x18028:
    /*00018028*/ MOV         R0, #13 
    /*0001802c*/ BL          0x000000000001802C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018030*/ MOV         R1, R7 
    /*00018034*/ LDR         R3, [R0, #184]              @ 0xb8 
    /*00018038*/ MOV         R0, R4 
    /*0001803c*/ BLX         R3 
    /*00018040*/ SUBS        R5, R0, #0 
    /*00018044*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*00018048*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*0001804c*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*00018050*/ B           VencSetPatternAdaptiveCfg_x17ff8
    VencSetPatternAdaptiveCfg_x18054:
    /*00018054*/ BL          0x00000000000002C8 
    /*00018058*/ SUBS        R5, R0, #0 
    /*0001805c*/ BNE         VencSetPatternAdaptiveCfg_x1801c
    /*00018060*/ B           VencSetPatternAdaptiveCfg_x17f88
    VencSetPatternAdaptiveCfg_x18064:
    /*00018064*/ MOVW        R3, #12621                  @ 0x314d 
    /*00018068*/ MOV         R1, #8 
    /*0001806c*/ STR         R3, [SP] 
    /*00018070*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00018074*/ LDR         R3, [PC, #44]               @ 0x00000000000180a8 
    /*00018078*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001807c*/ STR         R4, [SP, #4] 
    /*00018080*/ MOV         R0, #3 
    /*00018084*/ BL          0x0000000000018084          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018088*/ MOV         R0, R6 
    /*0001808c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00018090*/ BL          0x0000000000018090          @ osal_up [R_ARM_CALL: +0x0] 
    /*00018094*/ MOVT        R5, #40968                  @ 0xa008 
    /*00018098*/ B           VencSetPatternAdaptiveCfg_x1801c
    VencSetPatternAdaptiveCfg_x1809c:
    /*0001809c*/ MOV         R5, #65024                  @ 0xfe00 
    /*000180a0*/ MOVT        R5, #65535                  @ 0xffff 
    /*000180a4*/ B           VencSetPatternAdaptiveCfg_x1801c
    /*000180a8*/ ANDEQ       R0, R0, R0, LSL #23 
FUNC_END VencSetPatternAdaptiveCfg


FUNC_BEGIN VencGetPatternAdaptiveCfg
    /*000180ac*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000180b0*/ SUBS        R7, R1, #0 
    /*000180b4*/ SUB         SP, SP, #12 
    /*000180b8*/ MOV         R4, R0 
    /*000180bc*/ BEQ         VencGetPatternAdaptiveCfg_x1818c
    VencGetPatternAdaptiveCfg_x180c0:
    /*000180c0*/ CMP         R4, #0 
    /*000180c4*/ BLT         VencGetPatternAdaptiveCfg_x18144
    /*000180c8*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000180cc*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000180d0*/ LDR         R3, [R3] 
    /*000180d4*/ CMP         R4, R3 
    /*000180d8*/ BCS         VencGetPatternAdaptiveCfg_x18144
    VencGetPatternAdaptiveCfg_x180dc:
    /*000180dc*/ MOVW        R5, #36240                  @ 0x8d90 
    /*000180e0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000180e4*/ MUL         R5, R5, R4 
    /*000180e8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000180ec*/ LDR         R8, [R3] 
    /*000180f0*/ ADD         R9, R8, R5 
    /*000180f4*/ ADD         R6, R9, #12416              @ 0x3080 
    /*000180f8*/ ADD         R6, R6, #16 
    /*000180fc*/ MOV         R0, R6 
    /*00018100*/ BL          0x0000000000018100          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00018104*/ CMP         R0, #0 
    /*00018108*/ BNE         VencGetPatternAdaptiveCfg_x181d4
    /*0001810c*/ LDR         R3, [R8, R5] 
    /*00018110*/ CMP         R3, #1 
    /*00018114*/ BNE         VencGetPatternAdaptiveCfg_x1819c
    /*00018118*/ LDR         R2, [R9, #4] 
    /*0001811c*/ MOVW        R3, #265                    @ 0x109 
    /*00018120*/ CMP         R2, R3 
    /*00018124*/ MOVWNE      R5, #32776                  @ 0x8008 
    /*00018128*/ MOVTNE      R5, #40968                  @ 0xa008 
    /*0001812c*/ BEQ         VencGetPatternAdaptiveCfg_x18160
    VencGetPatternAdaptiveCfg_x18130:
    /*00018130*/ MOV         R0, R6 
    /*00018134*/ BL          0x0000000000018134          @ osal_up [R_ARM_CALL: +0x0] 
    /*00018138*/ MOV         R0, R5 
    /*0001813c*/ ADD         SP, SP, #12 
    /*00018140*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetPatternAdaptiveCfg_x18144:
    /*00018144*/ MOV         R0, R4 
    /*00018148*/ BL          0x0000000000000304 
    /*0001814c*/ SUBS        R5, R0, #0 
    /*00018150*/ BEQ         VencGetPatternAdaptiveCfg_x180dc
    VencGetPatternAdaptiveCfg_x18154:
    /*00018154*/ MOV         R0, R5 
    /*00018158*/ ADD         SP, SP, #12 
    /*0001815c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetPatternAdaptiveCfg_x18160:
    /*00018160*/ MOV         R0, #13 
    /*00018164*/ BL          0x0000000000018164          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018168*/ MOV         R1, R7 
    /*0001816c*/ LDR         R3, [R0, #188]              @ 0xbc 
    /*00018170*/ MOV         R0, R4 
    /*00018174*/ BLX         R3 
    /*00018178*/ SUBS        R5, R0, #0 
    /*0001817c*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*00018180*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*00018184*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*00018188*/ B           VencGetPatternAdaptiveCfg_x18130
    VencGetPatternAdaptiveCfg_x1818c:
    /*0001818c*/ BL          0x00000000000002C8 
    /*00018190*/ SUBS        R5, R0, #0 
    /*00018194*/ BNE         VencGetPatternAdaptiveCfg_x18154
    /*00018198*/ B           VencGetPatternAdaptiveCfg_x180c0
    VencGetPatternAdaptiveCfg_x1819c:
    /*0001819c*/ MOVW        R3, #12660                  @ 0x3174 
    /*000181a0*/ MOV         R1, #8 
    /*000181a4*/ STR         R3, [SP] 
    /*000181a8*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*000181ac*/ LDR         R3, [PC, #44]               @ 0x00000000000181e0 
    /*000181b0*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*000181b4*/ STR         R4, [SP, #4] 
    /*000181b8*/ MOV         R0, #3 
    /*000181bc*/ BL          0x00000000000181BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000181c0*/ MOV         R0, R6 
    /*000181c4*/ MOVW        R5, #32773                  @ 0x8005 
    /*000181c8*/ BL          0x00000000000181C8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000181cc*/ MOVT        R5, #40968                  @ 0xa008 
    /*000181d0*/ B           VencGetPatternAdaptiveCfg_x18154
    VencGetPatternAdaptiveCfg_x181d4:
    /*000181d4*/ MOV         R5, #65024                  @ 0xfe00 
    /*000181d8*/ MOVT        R5, #65535                  @ 0xffff 
    /*000181dc*/ B           VencGetPatternAdaptiveCfg_x18154
    /*000181e0*/ MULEQ       R0, IP, FP 
FUNC_END VencGetPatternAdaptiveCfg


FUNC_BEGIN VencSetPredModeAdaptiveH264
    /*000181e4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000181e8*/ SUBS        R7, R1, #0 
    /*000181ec*/ SUB         SP, SP, #20 
    /*000181f0*/ MOV         R4, R0 
    /*000181f4*/ BEQ         VencSetPredModeAdaptiveH264_x182e8
    VencSetPredModeAdaptiveH264_x181f8:
    /*000181f8*/ CMP         R4, #0 
    /*000181fc*/ BLT         VencSetPredModeAdaptiveH264_x18288
    /*00018200*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00018204*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00018208*/ LDR         R3, [R3] 
    /*0001820c*/ CMP         R4, R3 
    /*00018210*/ BCS         VencSetPredModeAdaptiveH264_x18288
    VencSetPredModeAdaptiveH264_x18214:
    /*00018214*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00018218*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001821c*/ MUL         R5, R5, R4 
    /*00018220*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00018224*/ LDR         R8, [R3] 
    /*00018228*/ ADD         R9, R8, R5 
    /*0001822c*/ ADD         R6, R9, #12416              @ 0x3080 
    /*00018230*/ ADD         R6, R6, #16 
    /*00018234*/ MOV         R0, R6 
    /*00018238*/ BL          0x0000000000018238          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001823c*/ CMP         R0, #0 
    /*00018240*/ BNE         VencSetPredModeAdaptiveH264_x18330
    /*00018244*/ LDR         R3, [R8, R5] 
    /*00018248*/ CMP         R3, #1 
    /*0001824c*/ BNE         VencSetPredModeAdaptiveH264_x182f8
    /*00018250*/ LDR         R3, [R9, #4] 
    /*00018254*/ CMP         R3, #96                     @ 0x60 
    /*00018258*/ BNE         VencSetPredModeAdaptiveH264_x182a4
    /*0001825c*/ MOV         R0, #10 
    /*00018260*/ BL          0x0000000000018260          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018264*/ MOV         R1, R7 
    /*00018268*/ LDR         R3, [R0, #176]              @ 0xb0 
    /*0001826c*/ MOV         R0, R4 
    /*00018270*/ BLX         R3 
    /*00018274*/ SUBS        R5, R0, #0 
    /*00018278*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*0001827c*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*00018280*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*00018284*/ B           VencSetPredModeAdaptiveH264_x182d4
    VencSetPredModeAdaptiveH264_x18288:
    /*00018288*/ MOV         R0, R4 
    /*0001828c*/ BL          0x0000000000000304 
    /*00018290*/ SUBS        R5, R0, #0 
    /*00018294*/ BEQ         VencSetPredModeAdaptiveH264_x18214
    VencSetPredModeAdaptiveH264_x18298:
    /*00018298*/ MOV         R0, R5 
    /*0001829c*/ ADD         SP, SP, #20 
    /*000182a0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetPredModeAdaptiveH264_x182a4:
    /*000182a4*/ STR         R3, [SP, #8] 
    /*000182a8*/ MOVW        R2, #0                      @ .LC457 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6168] 
    /*000182ac*/ MOVW        R3, #12716                  @ 0x31ac 
    /*000182b0*/ STR         R4, [SP, #4] 
    /*000182b4*/ STR         R3, [SP] 
    /*000182b8*/ MOVT        R2, #0                      @ .LC457 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6168] 
    /*000182bc*/ LDR         R3, [PC, #120]              @ 0x000000000001833c 
    /*000182c0*/ MOV         R1, #8 
    /*000182c4*/ MOV         R0, #3 
    /*000182c8*/ MOVW        R5, #32776                  @ 0x8008 
    /*000182cc*/ BL          0x00000000000182CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000182d0*/ MOVT        R5, #40968                  @ 0xa008 
    VencSetPredModeAdaptiveH264_x182d4:
    /*000182d4*/ MOV         R0, R6 
    /*000182d8*/ BL          0x00000000000182D8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000182dc*/ MOV         R0, R5 
    /*000182e0*/ ADD         SP, SP, #20 
    /*000182e4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetPredModeAdaptiveH264_x182e8:
    /*000182e8*/ BL          0x00000000000002C8 
    /*000182ec*/ SUBS        R5, R0, #0 
    /*000182f0*/ BNE         VencSetPredModeAdaptiveH264_x18298
    /*000182f4*/ B           VencSetPredModeAdaptiveH264_x181f8
    VencSetPredModeAdaptiveH264_x182f8:
    /*000182f8*/ MOVW        R3, #12701                  @ 0x319d 
    /*000182fc*/ MOV         R1, #8 
    /*00018300*/ STR         R3, [SP] 
    /*00018304*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00018308*/ LDR         R3, [PC, #44]               @ 0x000000000001833c 
    /*0001830c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00018310*/ STR         R4, [SP, #4] 
    /*00018314*/ MOV         R0, #3 
    /*00018318*/ BL          0x0000000000018318          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001831c*/ MOV         R0, R6 
    /*00018320*/ MOVW        R5, #32773                  @ 0x8005 
    /*00018324*/ BL          0x0000000000018324          @ osal_up [R_ARM_CALL: +0x0] 
    /*00018328*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001832c*/ B           VencSetPredModeAdaptiveH264_x18298
    VencSetPredModeAdaptiveH264_x18330:
    /*00018330*/ MOV         R5, #65024                  @ 0xfe00 
    /*00018334*/ MOVT        R5, #65535                  @ 0xffff 
    /*00018338*/ B           VencSetPredModeAdaptiveH264_x18298
    /*0001833c*/ @           <UNDEFINED> instruction: 0x00000bb8 
FUNC_END VencSetPredModeAdaptiveH264


FUNC_BEGIN VencGetPredModeAdaptiveH264
    /*00018340*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00018344*/ SUBS        R7, R1, #0 
    /*00018348*/ SUB         SP, SP, #20 
    /*0001834c*/ MOV         R4, R0 
    /*00018350*/ BEQ         VencGetPredModeAdaptiveH264_x18444
    VencGetPredModeAdaptiveH264_x18354:
    /*00018354*/ CMP         R4, #0 
    /*00018358*/ BLT         VencGetPredModeAdaptiveH264_x183e4
    /*0001835c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00018360*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00018364*/ LDR         R3, [R3] 
    /*00018368*/ CMP         R4, R3 
    /*0001836c*/ BCS         VencGetPredModeAdaptiveH264_x183e4
    VencGetPredModeAdaptiveH264_x18370:
    /*00018370*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00018374*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00018378*/ MUL         R5, R5, R4 
    /*0001837c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00018380*/ LDR         R8, [R3] 
    /*00018384*/ ADD         R9, R8, R5 
    /*00018388*/ ADD         R6, R9, #12416              @ 0x3080 
    /*0001838c*/ ADD         R6, R6, #16 
    /*00018390*/ MOV         R0, R6 
    /*00018394*/ BL          0x0000000000018394          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00018398*/ CMP         R0, #0 
    /*0001839c*/ BNE         VencGetPredModeAdaptiveH264_x1848c
    /*000183a0*/ LDR         R3, [R8, R5] 
    /*000183a4*/ CMP         R3, #1 
    /*000183a8*/ BNE         VencGetPredModeAdaptiveH264_x18454
    /*000183ac*/ LDR         R3, [R9, #4] 
    /*000183b0*/ CMP         R3, #96                     @ 0x60 
    /*000183b4*/ BNE         VencGetPredModeAdaptiveH264_x18400
    /*000183b8*/ MOV         R0, #10 
    /*000183bc*/ BL          0x00000000000183BC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000183c0*/ MOV         R1, R7 
    /*000183c4*/ LDR         R3, [R0, #180]              @ 0xb4 
    /*000183c8*/ MOV         R0, R4 
    /*000183cc*/ BLX         R3 
    /*000183d0*/ SUBS        R5, R0, #0 
    /*000183d4*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*000183d8*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*000183dc*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*000183e0*/ B           VencGetPredModeAdaptiveH264_x18430
    VencGetPredModeAdaptiveH264_x183e4:
    /*000183e4*/ MOV         R0, R4 
    /*000183e8*/ BL          0x0000000000000304 
    /*000183ec*/ SUBS        R5, R0, #0 
    /*000183f0*/ BEQ         VencGetPredModeAdaptiveH264_x18370
    VencGetPredModeAdaptiveH264_x183f4:
    /*000183f4*/ MOV         R0, R5 
    /*000183f8*/ ADD         SP, SP, #20 
    /*000183fc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetPredModeAdaptiveH264_x18400:
    /*00018400*/ STR         R3, [SP, #8] 
    /*00018404*/ MOVW        R2, #0                      @ .LC457 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6168] 
    /*00018408*/ MOVW        R3, #12756                  @ 0x31d4 
    /*0001840c*/ STR         R4, [SP, #4] 
    /*00018410*/ STR         R3, [SP] 
    /*00018414*/ MOVT        R2, #0                      @ .LC457 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6168] 
    /*00018418*/ LDR         R3, [PC, #120]              @ 0x0000000000018498 
    /*0001841c*/ MOV         R1, #8 
    /*00018420*/ MOV         R0, #3 
    /*00018424*/ MOVW        R5, #32776                  @ 0x8008 
    /*00018428*/ BL          0x0000000000018428          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001842c*/ MOVT        R5, #40968                  @ 0xa008 
    VencGetPredModeAdaptiveH264_x18430:
    /*00018430*/ MOV         R0, R6 
    /*00018434*/ BL          0x0000000000018434          @ osal_up [R_ARM_CALL: +0x0] 
    /*00018438*/ MOV         R0, R5 
    /*0001843c*/ ADD         SP, SP, #20 
    /*00018440*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetPredModeAdaptiveH264_x18444:
    /*00018444*/ BL          0x00000000000002C8 
    /*00018448*/ SUBS        R5, R0, #0 
    /*0001844c*/ BNE         VencGetPredModeAdaptiveH264_x183f4
    /*00018450*/ B           VencGetPredModeAdaptiveH264_x18354
    VencGetPredModeAdaptiveH264_x18454:
    /*00018454*/ MOVW        R3, #12741                  @ 0x31c5 
    /*00018458*/ MOV         R1, #8 
    /*0001845c*/ STR         R3, [SP] 
    /*00018460*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00018464*/ LDR         R3, [PC, #44]               @ 0x0000000000018498 
    /*00018468*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001846c*/ STR         R4, [SP, #4] 
    /*00018470*/ MOV         R0, #3 
    /*00018474*/ BL          0x0000000000018474          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018478*/ MOV         R0, R6 
    /*0001847c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00018480*/ BL          0x0000000000018480          @ osal_up [R_ARM_CALL: +0x0] 
    /*00018484*/ MOVT        R5, #40968                  @ 0xa008 
    /*00018488*/ B           VencGetPredModeAdaptiveH264_x183f4
    VencGetPredModeAdaptiveH264_x1848c:
    /*0001848c*/ MOV         R5, #65024                  @ 0xfe00 
    /*00018490*/ MOVT        R5, #65535                  @ 0xffff 
    /*00018494*/ B           VencGetPredModeAdaptiveH264_x183f4
    /*00018498*/ LDRDEQ      R0, [R0], -R4 
FUNC_END VencGetPredModeAdaptiveH264


FUNC_BEGIN VencSetPredModeAdaptiveH265
    /*0001849c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000184a0*/ SUBS        R7, R1, #0 
    /*000184a4*/ SUB         SP, SP, #20 
    /*000184a8*/ MOV         R4, R0 
    /*000184ac*/ BEQ         VencSetPredModeAdaptiveH265_x185a4
    VencSetPredModeAdaptiveH265_x184b0:
    /*000184b0*/ CMP         R4, #0 
    /*000184b4*/ BLT         VencSetPredModeAdaptiveH265_x18544
    /*000184b8*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*000184bc*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*000184c0*/ LDR         R3, [R3] 
    /*000184c4*/ CMP         R4, R3 
    /*000184c8*/ BCS         VencSetPredModeAdaptiveH265_x18544
    VencSetPredModeAdaptiveH265_x184cc:
    /*000184cc*/ MOVW        R5, #36240                  @ 0x8d90 
    /*000184d0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000184d4*/ MUL         R5, R5, R4 
    /*000184d8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000184dc*/ LDR         R8, [R3] 
    /*000184e0*/ ADD         R9, R8, R5 
    /*000184e4*/ ADD         R6, R9, #12416              @ 0x3080 
    /*000184e8*/ ADD         R6, R6, #16 
    /*000184ec*/ MOV         R0, R6 
    /*000184f0*/ BL          0x00000000000184F0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000184f4*/ CMP         R0, #0 
    /*000184f8*/ BNE         VencSetPredModeAdaptiveH265_x185ec
    /*000184fc*/ LDR         R3, [R8, R5] 
    /*00018500*/ CMP         R3, #1 
    /*00018504*/ BNE         VencSetPredModeAdaptiveH265_x185b4
    /*00018508*/ LDR         R3, [R9, #4] 
    /*0001850c*/ MOVW        R2, #265                    @ 0x109 
    /*00018510*/ CMP         R3, R2 
    /*00018514*/ BNE         VencSetPredModeAdaptiveH265_x18560
    /*00018518*/ MOV         R0, #13 
    /*0001851c*/ BL          0x000000000001851C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018520*/ MOV         R1, R7 
    /*00018524*/ LDR         R3, [R0, #220]              @ 0xdc 
    /*00018528*/ MOV         R0, R4 
    /*0001852c*/ BLX         R3 
    /*00018530*/ SUBS        R5, R0, #0 
    /*00018534*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*00018538*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*0001853c*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*00018540*/ B           VencSetPredModeAdaptiveH265_x18590
    VencSetPredModeAdaptiveH265_x18544:
    /*00018544*/ MOV         R0, R4 
    /*00018548*/ BL          0x0000000000000304 
    /*0001854c*/ SUBS        R5, R0, #0 
    /*00018550*/ BEQ         VencSetPredModeAdaptiveH265_x184cc
    VencSetPredModeAdaptiveH265_x18554:
    /*00018554*/ MOV         R0, R5 
    /*00018558*/ ADD         SP, SP, #20 
    /*0001855c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetPredModeAdaptiveH265_x18560:
    /*00018560*/ STR         R3, [SP, #8] 
    /*00018564*/ MOVW        R2, #0                      @ .LC457 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6168] 
    /*00018568*/ MOV         R3, #12800                  @ 0x3200 
    /*0001856c*/ STR         R4, [SP, #4] 
    /*00018570*/ STR         R3, [SP] 
    /*00018574*/ MOVT        R2, #0                      @ .LC457 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6168] 
    /*00018578*/ LDR         R3, [PC, #120]              @ 0x00000000000185f8 
    /*0001857c*/ MOV         R1, #8 
    /*00018580*/ MOV         R0, #3 
    /*00018584*/ MOVW        R5, #32776                  @ 0x8008 
    /*00018588*/ BL          0x0000000000018588          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001858c*/ MOVT        R5, #40968                  @ 0xa008 
    VencSetPredModeAdaptiveH265_x18590:
    /*00018590*/ MOV         R0, R6 
    /*00018594*/ BL          0x0000000000018594          @ osal_up [R_ARM_CALL: +0x0] 
    /*00018598*/ MOV         R0, R5 
    /*0001859c*/ ADD         SP, SP, #20 
    /*000185a0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetPredModeAdaptiveH265_x185a4:
    /*000185a4*/ BL          0x00000000000002C8 
    /*000185a8*/ SUBS        R5, R0, #0 
    /*000185ac*/ BNE         VencSetPredModeAdaptiveH265_x18554
    /*000185b0*/ B           VencSetPredModeAdaptiveH265_x184b0
    VencSetPredModeAdaptiveH265_x185b4:
    /*000185b4*/ MOVW        R3, #12785                  @ 0x31f1 
    /*000185b8*/ MOV         R1, #8 
    /*000185bc*/ STR         R3, [SP] 
    /*000185c0*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*000185c4*/ LDR         R3, [PC, #44]               @ 0x00000000000185f8 
    /*000185c8*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*000185cc*/ STR         R4, [SP, #4] 
    /*000185d0*/ MOV         R0, #3 
    /*000185d4*/ BL          0x00000000000185D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000185d8*/ MOV         R0, R6 
    /*000185dc*/ MOVW        R5, #32773                  @ 0x8005 
    /*000185e0*/ BL          0x00000000000185E0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000185e4*/ MOVT        R5, #40968                  @ 0xa008 
    /*000185e8*/ B           VencSetPredModeAdaptiveH265_x18554
    VencSetPredModeAdaptiveH265_x185ec:
    /*000185ec*/ MOV         R5, #65024                  @ 0xfe00 
    /*000185f0*/ MOVT        R5, #65535                  @ 0xffff 
    /*000185f4*/ B           VencSetPredModeAdaptiveH265_x18554
    /*000185f8*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VencSetPredModeAdaptiveH265


FUNC_BEGIN VencGetPredModeAdaptiveH265
    /*000185fc*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00018600*/ SUBS        R7, R1, #0 
    /*00018604*/ SUB         SP, SP, #20 
    /*00018608*/ MOV         R4, R0 
    /*0001860c*/ BEQ         VencGetPredModeAdaptiveH265_x18704
    VencGetPredModeAdaptiveH265_x18610:
    /*00018610*/ CMP         R4, #0 
    /*00018614*/ BLT         VencGetPredModeAdaptiveH265_x186a4
    /*00018618*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0001861c*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00018620*/ LDR         R3, [R3] 
    /*00018624*/ CMP         R4, R3 
    /*00018628*/ BCS         VencGetPredModeAdaptiveH265_x186a4
    VencGetPredModeAdaptiveH265_x1862c:
    /*0001862c*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00018630*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00018634*/ MUL         R5, R5, R4 
    /*00018638*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001863c*/ LDR         R8, [R3] 
    /*00018640*/ ADD         R9, R8, R5 
    /*00018644*/ ADD         R6, R9, #12416              @ 0x3080 
    /*00018648*/ ADD         R6, R6, #16 
    /*0001864c*/ MOV         R0, R6 
    /*00018650*/ BL          0x0000000000018650          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00018654*/ CMP         R0, #0 
    /*00018658*/ BNE         VencGetPredModeAdaptiveH265_x1874c
    /*0001865c*/ LDR         R3, [R8, R5] 
    /*00018660*/ CMP         R3, #1 
    /*00018664*/ BNE         VencGetPredModeAdaptiveH265_x18714
    /*00018668*/ LDR         R3, [R9, #4] 
    /*0001866c*/ MOVW        R2, #265                    @ 0x109 
    /*00018670*/ CMP         R3, R2 
    /*00018674*/ BNE         VencGetPredModeAdaptiveH265_x186c0
    /*00018678*/ MOV         R0, #13 
    /*0001867c*/ BL          0x000000000001867C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018680*/ MOV         R1, R7 
    /*00018684*/ LDR         R3, [R0, #224]              @ 0xe0 
    /*00018688*/ MOV         R0, R4 
    /*0001868c*/ BLX         R3 
    /*00018690*/ SUBS        R5, R0, #0 
    /*00018694*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*00018698*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*0001869c*/ ORRNE       R5, R5, #524288             @ 0x80000 
    /*000186a0*/ B           VencGetPredModeAdaptiveH265_x186f0
    VencGetPredModeAdaptiveH265_x186a4:
    /*000186a4*/ MOV         R0, R4 
    /*000186a8*/ BL          0x0000000000000304 
    /*000186ac*/ SUBS        R5, R0, #0 
    /*000186b0*/ BEQ         VencGetPredModeAdaptiveH265_x1862c
    VencGetPredModeAdaptiveH265_x186b4:
    /*000186b4*/ MOV         R0, R5 
    /*000186b8*/ ADD         SP, SP, #20 
    /*000186bc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetPredModeAdaptiveH265_x186c0:
    /*000186c0*/ STR         R3, [SP, #8] 
    /*000186c4*/ MOVW        R2, #0                      @ .LC457 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6168] 
    /*000186c8*/ MOVW        R3, #12840                  @ 0x3228 
    /*000186cc*/ STR         R4, [SP, #4] 
    /*000186d0*/ STR         R3, [SP] 
    /*000186d4*/ MOVT        R2, #0                      @ .LC457 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6168] 
    /*000186d8*/ LDR         R3, [PC, #120]              @ 0x0000000000018758 
    /*000186dc*/ MOV         R1, #8 
    /*000186e0*/ MOV         R0, #3 
    /*000186e4*/ MOVW        R5, #32776                  @ 0x8008 
    /*000186e8*/ BL          0x00000000000186E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000186ec*/ MOVT        R5, #40968                  @ 0xa008 
    VencGetPredModeAdaptiveH265_x186f0:
    /*000186f0*/ MOV         R0, R6 
    /*000186f4*/ BL          0x00000000000186F4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000186f8*/ MOV         R0, R5 
    /*000186fc*/ ADD         SP, SP, #20 
    /*00018700*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetPredModeAdaptiveH265_x18704:
    /*00018704*/ BL          0x00000000000002C8 
    /*00018708*/ SUBS        R5, R0, #0 
    /*0001870c*/ BNE         VencGetPredModeAdaptiveH265_x186b4
    /*00018710*/ B           VencGetPredModeAdaptiveH265_x18610
    VencGetPredModeAdaptiveH265_x18714:
    /*00018714*/ MOVW        R3, #12825                  @ 0x3219 
    /*00018718*/ MOV         R1, #8 
    /*0001871c*/ STR         R3, [SP] 
    /*00018720*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00018724*/ LDR         R3, [PC, #44]               @ 0x0000000000018758 
    /*00018728*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001872c*/ STR         R4, [SP, #4] 
    /*00018730*/ MOV         R0, #3 
    /*00018734*/ BL          0x0000000000018734          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018738*/ MOV         R0, R6 
    /*0001873c*/ MOVW        R5, #32773                  @ 0x8005 
    /*00018740*/ BL          0x0000000000018740          @ osal_up [R_ARM_CALL: +0x0] 
    /*00018744*/ MOVT        R5, #40968                  @ 0xa008 
    /*00018748*/ B           VencGetPredModeAdaptiveH265_x186b4
    VencGetPredModeAdaptiveH265_x1874c:
    /*0001874c*/ MOV         R5, #65024                  @ 0xfe00 
    /*00018750*/ MOVT        R5, #65535                  @ 0xffff 
    /*00018754*/ B           VencGetPredModeAdaptiveH265_x186b4
    /*00018758*/ ANDEQ       R0, R0, IP, LSL #24 
FUNC_END VencGetPredModeAdaptiveH265


FUNC_BEGIN VencGetOtherModParam
    /*0001875c*/ PUSH        {R4, R5, LR} 
    /*00018760*/ SUBS        R5, R0, #0 
    /*00018764*/ SUB         SP, SP, #12 
    /*00018768*/ BEQ         VencGetOtherModParam_x18908
    VencGetOtherModParam_x1876c:
    /*0001876c*/ LDR         R0, [PC, #620]              @ 0x00000000000189e0 
    /*00018770*/ BL          0x0000000000018770          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00018774*/ SUBS        R4, R0, #0 
    /*00018778*/ BNE         VencGetOtherModParam_x18950
    /*0001877c*/ LDR         R2, [R5] 
    /*00018780*/ SUB         R3, R2, #1 
    /*00018784*/ CMP         R3, #4 
    /*00018788*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*0001878c*/ B           VencGetOtherModParam_x18918
    /*00018790*/ ANDEQ       R8, R1, R4, ROR #15 
    /*00018794*/ ANDEQ       R8, R1, R4, ROR #16 
    /*00018798*/ ANDEQ       R8, R1, R4, LSR #16 
    /*0001879c*/ ANDEQ       R8, R1, R4, LSR #17 
    /*000187a0*/ ANDEQ       R8, R1, R4, LSR #15 
    /*000187a4*/ MOV         R0, #19 
    /*000187a8*/ BL          0x00000000000187A8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000187ac*/ CMP         R0, #0 
    /*000187b0*/ BEQ         VencGetOtherModParam_x1895c
    /*000187b4*/ MOV         R0, #19 
    /*000187b8*/ BL          0x00000000000187B8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000187bc*/ LDR         R3, [R0, #148]              @ 0x94 
    /*000187c0*/ ADD         R0, R5, #4 
    /*000187c4*/ BLX         R3 
    /*000187c8*/ SUBS        R5, R0, #0 
    /*000187cc*/ BEQ         VencGetOtherModParam_x18810
    /*000187d0*/ MOVW        R3, #12941                  @ 0x328d 
    /*000187d4*/ MOVW        R2, #0                      @ .LC465 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x63ec] 
    /*000187d8*/ STR         R3, [SP] 
    /*000187dc*/ MOVT        R2, #0                      @ .LC465 [R_ARM_MOVT_ABS: .rodata.str1.4+0x63ec] 
    /*000187e0*/ B           VencGetOtherModParam_x188e0
    /*000187e4*/ MOV         R0, #8 
    /*000187e8*/ BL          0x00000000000187E8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000187ec*/ CMP         R0, #0 
    /*000187f0*/ BEQ         VencGetOtherModParam_x189cc
    /*000187f4*/ MOVW        R2, #0                      @ VencBufferCache [R_ARM_MOVW_ABS_NC: .bss+0x9c] 
    /*000187f8*/ MOVW        R3, #0                      @ FrameBufRecycle [R_ARM_MOVW_ABS_NC: .bss+0xac] 
    /*000187fc*/ MOVT        R2, #0                      @ VencBufferCache [R_ARM_MOVT_ABS: .bss+0x9c] 
    /*00018800*/ MOVT        R3, #0                      @ FrameBufRecycle [R_ARM_MOVT_ABS: .bss+0xac] 
    /*00018804*/ LDR         R2, [R2] 
    /*00018808*/ LDR         R3, [R3] 
    /*0001880c*/ STMIB       R5, {R2, R3} 
    VencGetOtherModParam_x18810:
    /*00018810*/ LDR         R0, [PC, #456]              @ 0x00000000000189e0 
    /*00018814*/ BL          0x0000000000018814          @ osal_up [R_ARM_CALL: +0x0] 
    VencGetOtherModParam_x18818:
    /*00018818*/ MOV         R0, R4 
    /*0001881c*/ ADD         SP, SP, #12 
    /*00018820*/ POP         {R4, R5, PC} 
    /*00018824*/ MOV         R0, #13 
    /*00018828*/ BL          0x0000000000018828          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001882c*/ CMP         R0, #0 
    /*00018830*/ BEQ         VencGetOtherModParam_x189b8
    /*00018834*/ MOV         R0, #13 
    /*00018838*/ BL          0x0000000000018838          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001883c*/ LDR         R3, [R0, #204]              @ 0xcc 
    /*00018840*/ ADD         R0, R5, #4 
    /*00018844*/ BLX         R3 
    /*00018848*/ SUBS        R5, R0, #0 
    /*0001884c*/ BEQ         VencGetOtherModParam_x18810
    /*00018850*/ MOVW        R3, #12906                  @ 0x326a 
    /*00018854*/ MOVW        R2, #0                      @ .LC462 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x62f8] 
    /*00018858*/ STR         R3, [SP] 
    /*0001885c*/ MOVT        R2, #0                      @ .LC462 [R_ARM_MOVT_ABS: .rodata.str1.4+0x62f8] 
    /*00018860*/ B           VencGetOtherModParam_x188e0
    /*00018864*/ MOV         R0, #10 
    /*00018868*/ BL          0x0000000000018868          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001886c*/ CMP         R0, #0 
    /*00018870*/ BEQ         VencGetOtherModParam_x189a4
    /*00018874*/ MOV         R0, #10 
    /*00018878*/ BL          0x0000000000018878          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001887c*/ LDR         R3, [R0, #200]              @ 0xc8 
    /*00018880*/ ADD         R0, R5, #4 
    /*00018884*/ BLX         R3 
    /*00018888*/ SUBS        R5, R0, #0 
    /*0001888c*/ BEQ         VencGetOtherModParam_x18810
    /*00018890*/ MOVW        R3, #12889                  @ 0x3259 
    /*00018894*/ MOVW        R2, #0                      @ .LC460 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x625c] 
    /*00018898*/ STR         R3, [SP] 
    /*0001889c*/ MOVT        R2, #0                      @ .LC460 [R_ARM_MOVT_ABS: .rodata.str1.4+0x625c] 
    /*000188a0*/ B           VencGetOtherModParam_x188e0
    /*000188a4*/ MOV         R0, #11 
    /*000188a8*/ BL          0x00000000000188A8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000188ac*/ CMP         R0, #0 
    /*000188b0*/ BEQ         VencGetOtherModParam_x18990
    /*000188b4*/ MOV         R0, #11 
    /*000188b8*/ BL          0x00000000000188B8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000188bc*/ LDR         R3, [R0, #104]              @ 0x68 
    /*000188c0*/ ADD         R0, R5, #4 
    /*000188c4*/ BLX         R3 
    /*000188c8*/ SUBS        R5, R0, #0 
    /*000188cc*/ BEQ         VencGetOtherModParam_x18810
    /*000188d0*/ MOVW        R2, #0                      @ .LC108 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x18f8] 
    /*000188d4*/ MOVT        R2, #0                      @ .LC108 [R_ARM_MOVT_ABS: .rodata.str1.4+0x18f8] 
    /*000188d8*/ MOVW        R3, #12924                  @ 0x327c 
    /*000188dc*/ STR         R3, [SP] 
    VencGetOtherModParam_x188e0:
    /*000188e0*/ LDR         R3, [PC, #252]              @ 0x00000000000189e4 
    /*000188e4*/ MOV         R1, #8 
    /*000188e8*/ MOV         R0, #3 
    /*000188ec*/ BIC         R4, R5, #267386880          @ 0xff00000 
    /*000188f0*/ BL          0x00000000000188F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000188f4*/ BIC         R4, R4, #983040             @ 0xf0000 
    /*000188f8*/ LDR         R0, [PC, #224]              @ 0x00000000000189e0 
    /*000188fc*/ ORR         R4, R4, #524288             @ 0x80000 
    /*00018900*/ BL          0x0000000000018900          @ osal_up [R_ARM_CALL: +0x0] 
    /*00018904*/ B           VencGetOtherModParam_x18818
    VencGetOtherModParam_x18908:
    /*00018908*/ BL          0x00000000000002C8 
    /*0001890c*/ SUBS        R4, R0, #0 
    /*00018910*/ BNE         VencGetOtherModParam_x18818
    /*00018914*/ B           VencGetOtherModParam_x1876c
    VencGetOtherModParam_x18918:
    /*00018918*/ STR         R2, [SP, #4] 
    /*0001891c*/ MOVW        R3, #12949                  @ 0x3295 
    /*00018920*/ MOV         R1, #8 
    /*00018924*/ STR         R3, [SP] 
    /*00018928*/ MOVW        R2, #0                      @ .LC466 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6428] 
    /*0001892c*/ LDR         R3, [PC, #176]              @ 0x00000000000189e4 
    /*00018930*/ MOVT        R2, #0                      @ .LC466 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6428] 
    /*00018934*/ MOV         R0, #3 
    /*00018938*/ BL          0x0000000000018938          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001893c*/ LDR         R0, [PC, #156]              @ 0x00000000000189e0 
    /*00018940*/ MOVW        R4, #32771                  @ 0x8003 
    /*00018944*/ BL          0x0000000000018944          @ osal_up [R_ARM_CALL: +0x0] 
    /*00018948*/ MOVT        R4, #40968                  @ 0xa008 
    /*0001894c*/ B           VencGetOtherModParam_x18818
    VencGetOtherModParam_x18950:
    /*00018950*/ MOV         R4, #65024                  @ 0xfe00 
    /*00018954*/ MOVT        R4, #65535                  @ 0xffff 
    /*00018958*/ B           VencGetOtherModParam_x18818
    VencGetOtherModParam_x1895c:
    /*0001895c*/ MOVW        R2, #0                      @ .LC464 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6394] 
    /*00018960*/ MOVT        R2, #0                      @ .LC464 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6394] 
    /*00018964*/ MOVW        R3, #12934                  @ 0x3286 
    /*00018968*/ STR         R3, [SP] 
    VencGetOtherModParam_x1896c:
    /*0001896c*/ LDR         R3, [PC, #112]              @ 0x00000000000189e4 
    /*00018970*/ MOV         R1, #8 
    /*00018974*/ MOV         R0, #3 
    /*00018978*/ MOVW        R4, #32784                  @ 0x8010 
    /*0001897c*/ BL          0x000000000001897C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018980*/ LDR         R0, [PC, #88]               @ 0x00000000000189e0 
    /*00018984*/ BL          0x0000000000018984          @ osal_up [R_ARM_CALL: +0x0] 
    /*00018988*/ MOVT        R4, #40968                  @ 0xa008 
    /*0001898c*/ B           VencGetOtherModParam_x18818
    VencGetOtherModParam_x18990:
    /*00018990*/ MOVW        R3, #12917                  @ 0x3275 
    /*00018994*/ MOVW        R2, #0                      @ .LC463 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6338] 
    /*00018998*/ STR         R3, [SP] 
    /*0001899c*/ MOVT        R2, #0                      @ .LC463 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6338] 
    /*000189a0*/ B           VencGetOtherModParam_x1896c
    VencGetOtherModParam_x189a4:
    /*000189a4*/ MOVW        R3, #12882                  @ 0x3252 
    /*000189a8*/ MOVW        R2, #0                      @ .LC459 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6200] 
    /*000189ac*/ STR         R3, [SP] 
    /*000189b0*/ MOVT        R2, #0                      @ .LC459 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6200] 
    /*000189b4*/ B           VencGetOtherModParam_x1896c
    VencGetOtherModParam_x189b8:
    /*000189b8*/ MOVW        R3, #12899                  @ 0x3263 
    /*000189bc*/ MOVW        R2, #0                      @ .LC461 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x629c] 
    /*000189c0*/ STR         R3, [SP] 
    /*000189c4*/ MOVT        R2, #0                      @ .LC461 [R_ARM_MOVT_ABS: .rodata.str1.4+0x629c] 
    /*000189c8*/ B           VencGetOtherModParam_x1896c
    VencGetOtherModParam_x189cc:
    /*000189cc*/ MOVW        R3, #12868                  @ 0x3244 
    /*000189d0*/ MOVW        R2, #0                      @ .LC458 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61bc] 
    /*000189d4*/ STR         R3, [SP] 
    /*000189d8*/ MOVT        R2, #0                      @ .LC458 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61bc] 
    /*000189dc*/ B           VencGetOtherModParam_x1896c
    /*000189e0*/ MULEQ       R0, R0, R0 
    /*000189e4*/ ANDEQ       R0, R0, R8, LSR #24 
FUNC_END VencGetOtherModParam


FUNC_BEGIN VencSetOtherModParam
    /*000189e8*/ PUSH        {R4, R5, R6, LR} 
    /*000189ec*/ SUBS        R5, R0, #0 
    /*000189f0*/ SUB         SP, SP, #8 
    /*000189f4*/ BEQ         VencSetOtherModParam_x18bf0
    VencSetOtherModParam_x189f8:
    /*000189f8*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000189fc*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00018a00*/ ADD         R0, R6, #144                @ 0x90 
    /*00018a04*/ BL          0x0000000000018A04          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00018a08*/ SUBS        R4, R0, #0 
    /*00018a0c*/ BNE         VencSetOtherModParam_x18c38
    /*00018a10*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00018a14*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00018a18*/ LDR         IP, [R3] 
    /*00018a1c*/ CMP         IP, #0 
    /*00018a20*/ BEQ         VencSetOtherModParam_x18a64
    /*00018a24*/ LDR         R3, [R6] 
    /*00018a28*/ LDR         R2, [R3] 
    /*00018a2c*/ CMP         R2, #0 
    /*00018a30*/ BNE         VencSetOtherModParam_x18bb4
    /*00018a34*/ MOVW        R0, #36240                  @ 0x8d90 
    /*00018a38*/ MOV         R2, R4 
    /*00018a3c*/ ADD         R3, R3, R0 
    /*00018a40*/ B           VencSetOtherModParam_x18a50
    VencSetOtherModParam_x18a44:
    /*00018a44*/ LDR         R1, [R1, #-144]             @ 0xffffff70 
    /*00018a48*/ CMP         R1, #0 
    /*00018a4c*/ BNE         VencSetOtherModParam_x18bb4
    VencSetOtherModParam_x18a50:
    /*00018a50*/ ADD         R2, R2, #1 
    /*00018a54*/ ADD         R3, R3, R0 
    /*00018a58*/ CMP         R2, IP 
    /*00018a5c*/ SUB         R1, R3, #36096              @ 0x8d00 
    /*00018a60*/ BNE         VencSetOtherModParam_x18a44
    VencSetOtherModParam_x18a64:
    /*00018a64*/ LDR         R2, [R5] 
    /*00018a68*/ SUB         R3, R2, #1 
    /*00018a6c*/ CMP         R3, #4 
    /*00018a70*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*00018a74*/ B           VencSetOtherModParam_x18c00
    /*00018a78*/ ANDEQ       R8, R1, R0, ROR #22 
    /*00018a7c*/ ANDEQ       R8, R1, R0, LSR FP 
    /*00018a80*/ ANDEQ       R8, R1, R0, LSL #22 
    /*00018a84*/ LDRDEQ      R8, [R1], -R0 
    /*00018a88*/ ANDEQ       R8, R1, IP, LSL #21 
    /*00018a8c*/ MOV         R0, #19 
    /*00018a90*/ BL          0x0000000000018A90          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018a94*/ CMP         R0, #0 
    /*00018a98*/ BEQ         VencSetOtherModParam_x18cd0
    /*00018a9c*/ MOV         R0, #19 
    /*00018aa0*/ BL          0x0000000000018AA0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018aa4*/ LDR         R3, [R0, #144]              @ 0x90 
    /*00018aa8*/ ADD         R0, R5, #4 
    /*00018aac*/ BLX         R3 
    /*00018ab0*/ SUBS        R5, R0, #0 
    /*00018ab4*/ BEQ         VencSetOtherModParam_x18ba0
    VencSetOtherModParam_x18ab8:
    /*00018ab8*/ BIC         R4, R5, #267386880          @ 0xff00000 
    /*00018abc*/ LDR         R0, [PC, #564]              @ 0x0000000000018cf8 
    /*00018ac0*/ BIC         R4, R4, #983040             @ 0xf0000 
    /*00018ac4*/ BL          0x0000000000018AC4          @ osal_up [R_ARM_CALL: +0x0] 
    /*00018ac8*/ ORR         R4, R4, #524288             @ 0x80000 
    /*00018acc*/ B           VencSetOtherModParam_x18ba8
    /*00018ad0*/ MOV         R0, #11 
    /*00018ad4*/ BL          0x0000000000018AD4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018ad8*/ CMP         R0, #0 
    /*00018adc*/ BEQ         VencSetOtherModParam_x18cbc
    /*00018ae0*/ MOV         R0, #11 
    /*00018ae4*/ BL          0x0000000000018AE4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018ae8*/ LDR         R3, [R0, #100]              @ 0x64 
    /*00018aec*/ ADD         R0, R5, #4 
    /*00018af0*/ BLX         R3 
    /*00018af4*/ SUBS        R5, R0, #0 
    /*00018af8*/ BEQ         VencSetOtherModParam_x18ba0
    /*00018afc*/ B           VencSetOtherModParam_x18ab8
    /*00018b00*/ MOV         R0, #13 
    /*00018b04*/ BL          0x0000000000018B04          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018b08*/ CMP         R0, #0 
    /*00018b0c*/ BEQ         VencSetOtherModParam_x18ca8
    /*00018b10*/ MOV         R0, #13 
    /*00018b14*/ BL          0x0000000000018B14          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018b18*/ LDR         R3, [R0, #200]              @ 0xc8 
    /*00018b1c*/ ADD         R0, R5, #4 
    /*00018b20*/ BLX         R3 
    /*00018b24*/ SUBS        R5, R0, #0 
    /*00018b28*/ BEQ         VencSetOtherModParam_x18ba0
    /*00018b2c*/ B           VencSetOtherModParam_x18ab8
    /*00018b30*/ MOV         R0, #10 
    /*00018b34*/ BL          0x0000000000018B34          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018b38*/ CMP         R0, #0 
    /*00018b3c*/ BEQ         VencSetOtherModParam_x18c74
    /*00018b40*/ MOV         R0, #10 
    /*00018b44*/ BL          0x0000000000018B44          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018b48*/ LDR         R3, [R0, #196]              @ 0xc4 
    /*00018b4c*/ ADD         R0, R5, #4 
    /*00018b50*/ BLX         R3 
    /*00018b54*/ SUBS        R5, R0, #0 
    /*00018b58*/ BEQ         VencSetOtherModParam_x18ba0
    /*00018b5c*/ B           VencSetOtherModParam_x18ab8
    /*00018b60*/ MOV         R0, #8 
    /*00018b64*/ BL          0x0000000000018B64          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018b68*/ CMP         R0, #0 
    /*00018b6c*/ BEQ         VencSetOtherModParam_x18ce4
    /*00018b70*/ LDR         R1, [R5, #4] 
    /*00018b74*/ CMP         R1, #1 
    /*00018b78*/ BHI         VencSetOtherModParam_x18c5c
    /*00018b7c*/ LDR         R0, [R5, #8] 
    /*00018b80*/ CMP         R0, #1 
    /*00018b84*/ BHI         VencSetOtherModParam_x18c44
    /*00018b88*/ MOVW        R2, #0                      @ VencBufferCache [R_ARM_MOVW_ABS_NC: .bss+0x9c] 
    /*00018b8c*/ MOVW        R3, #0                      @ FrameBufRecycle [R_ARM_MOVW_ABS_NC: .bss+0xac] 
    /*00018b90*/ MOVT        R2, #0                      @ VencBufferCache [R_ARM_MOVT_ABS: .bss+0x9c] 
    /*00018b94*/ MOVT        R3, #0                      @ FrameBufRecycle [R_ARM_MOVT_ABS: .bss+0xac] 
    /*00018b98*/ STR         R1, [R2] 
    /*00018b9c*/ STR         R0, [R3] 
    VencSetOtherModParam_x18ba0:
    /*00018ba0*/ LDR         R0, [PC, #336]              @ 0x0000000000018cf8 
    /*00018ba4*/ BL          0x0000000000018BA4          @ osal_up [R_ARM_CALL: +0x0] 
    VencSetOtherModParam_x18ba8:
    /*00018ba8*/ MOV         R0, R4 
    /*00018bac*/ ADD         SP, SP, #8 
    /*00018bb0*/ POP         {R4, R5, R6, PC} 
    VencSetOtherModParam_x18bb4:
    /*00018bb4*/ MOV         R1, #8 
    /*00018bb8*/ MOVW        R3, #12982                  @ 0x32b6 
    /*00018bbc*/ MOVW        R2, #0                      @ .LC472 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6608] 
    /*00018bc0*/ STR         R3, [SP] 
    /*00018bc4*/ MOVT        R2, #0                      @ .LC472 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6608] 
    /*00018bc8*/ LDR         R3, [PC, #300]              @ 0x0000000000018cfc 
    /*00018bcc*/ MOV         R0, #3 
    /*00018bd0*/ MOVW        R4, #32777                  @ 0x8009 
    /*00018bd4*/ BL          0x0000000000018BD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018bd8*/ LDR         R0, [PC, #280]              @ 0x0000000000018cf8 
    /*00018bdc*/ BL          0x0000000000018BDC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00018be0*/ MOVT        R4, #40968                  @ 0xa008 
    /*00018be4*/ MOV         R0, R4 
    /*00018be8*/ ADD         SP, SP, #8 
    /*00018bec*/ POP         {R4, R5, R6, PC} 
    VencSetOtherModParam_x18bf0:
    /*00018bf0*/ BL          0x00000000000002C8 
    /*00018bf4*/ SUBS        R4, R0, #0 
    /*00018bf8*/ BNE         VencSetOtherModParam_x18ba8
    /*00018bfc*/ B           VencSetOtherModParam_x189f8
    VencSetOtherModParam_x18c00:
    /*00018c00*/ STR         R2, [SP, #4] 
    /*00018c04*/ MOVW        R2, #0                      @ .LC466 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6428] 
    /*00018c08*/ MOVT        R2, #0                      @ .LC466 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6428] 
    /*00018c0c*/ MOVW        R3, #13092                  @ 0x3324 
    /*00018c10*/ STR         R3, [SP] 
    VencSetOtherModParam_x18c14:
    /*00018c14*/ LDR         R3, [PC, #224]              @ 0x0000000000018cfc 
    /*00018c18*/ MOV         R1, #8 
    /*00018c1c*/ MOV         R0, #3 
    /*00018c20*/ MOVW        R4, #32771                  @ 0x8003 
    /*00018c24*/ BL          0x0000000000018C24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018c28*/ LDR         R0, [PC, #200]              @ 0x0000000000018cf8 
    /*00018c2c*/ BL          0x0000000000018C2C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00018c30*/ MOVT        R4, #40968                  @ 0xa008 
    /*00018c34*/ B           VencSetOtherModParam_x18ba8
    VencSetOtherModParam_x18c38:
    /*00018c38*/ MOV         R4, #65024                  @ 0xfe00 
    /*00018c3c*/ MOVT        R4, #65535                  @ 0xffff 
    /*00018c40*/ B           VencSetOtherModParam_x18ba8
    VencSetOtherModParam_x18c44:
    /*00018c44*/ MOVW        R3, #13009                  @ 0x32d1 
    /*00018c48*/ MOVW        R2, #0                      @ .LC469 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6500] 
    /*00018c4c*/ STR         R0, [SP, #4] 
    /*00018c50*/ MOVT        R2, #0                      @ .LC469 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6500] 
    /*00018c54*/ STR         R3, [SP] 
    /*00018c58*/ B           VencSetOtherModParam_x18c14
    VencSetOtherModParam_x18c5c:
    /*00018c5c*/ MOVW        R3, #13001                  @ 0x32c9 
    /*00018c60*/ MOVW        R2, #0                      @ .LC468 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x64b0] 
    /*00018c64*/ STR         R1, [SP, #4] 
    /*00018c68*/ MOVT        R2, #0                      @ .LC468 [R_ARM_MOVT_ABS: .rodata.str1.4+0x64b0] 
    /*00018c6c*/ STR         R3, [SP] 
    /*00018c70*/ B           VencSetOtherModParam_x18c14
    VencSetOtherModParam_x18c74:
    /*00018c74*/ MOVW        R2, #0                      @ .LC470 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6550] 
    /*00018c78*/ MOVT        R2, #0                      @ .LC470 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6550] 
    /*00018c7c*/ MOVW        R3, #13025                  @ 0x32e1 
    /*00018c80*/ STR         R3, [SP] 
    VencSetOtherModParam_x18c84:
    /*00018c84*/ LDR         R3, [PC, #112]              @ 0x0000000000018cfc 
    /*00018c88*/ MOV         R1, #8 
    /*00018c8c*/ MOV         R0, #3 
    /*00018c90*/ MOVW        R4, #32784                  @ 0x8010 
    /*00018c94*/ BL          0x0000000000018C94          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018c98*/ LDR         R0, [PC, #88]               @ 0x0000000000018cf8 
    /*00018c9c*/ BL          0x0000000000018C9C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00018ca0*/ MOVT        R4, #40968                  @ 0xa008 
    /*00018ca4*/ B           VencSetOtherModParam_x18ba8
    VencSetOtherModParam_x18ca8:
    /*00018ca8*/ MOVW        R3, #13043                  @ 0x32f3 
    /*00018cac*/ MOVW        R2, #0                      @ .LC471 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x65ac] 
    /*00018cb0*/ STR         R3, [SP] 
    /*00018cb4*/ MOVT        R2, #0                      @ .LC471 [R_ARM_MOVT_ABS: .rodata.str1.4+0x65ac] 
    /*00018cb8*/ B           VencSetOtherModParam_x18c84
    VencSetOtherModParam_x18cbc:
    /*00018cbc*/ MOVW        R3, #13061                  @ 0x3305 
    /*00018cc0*/ MOVW        R2, #0                      @ .LC463 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6338] 
    /*00018cc4*/ STR         R3, [SP] 
    /*00018cc8*/ MOVT        R2, #0                      @ .LC463 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6338] 
    /*00018ccc*/ B           VencSetOtherModParam_x18c84
    VencSetOtherModParam_x18cd0:
    /*00018cd0*/ MOVW        R3, #13078                  @ 0x3316 
    /*00018cd4*/ MOVW        R2, #0                      @ .LC464 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6394] 
    /*00018cd8*/ STR         R3, [SP] 
    /*00018cdc*/ MOVT        R2, #0                      @ .LC464 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6394] 
    /*00018ce0*/ B           VencSetOtherModParam_x18c84
    VencSetOtherModParam_x18ce4:
    /*00018ce4*/ MOVW        R3, #12993                  @ 0x32c1 
    /*00018ce8*/ MOVW        R2, #0                      @ .LC467 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x646c] 
    /*00018cec*/ STR         R3, [SP] 
    /*00018cf0*/ MOVT        R2, #0                      @ .LC467 [R_ARM_MOVT_ABS: .rodata.str1.4+0x646c] 
    /*00018cf4*/ B           VencSetOtherModParam_x18c84
    /*00018cf8*/ MULEQ       R0, R0, R0 
    /*00018cfc*/ ANDEQ       R0, R0, R0, ASR #24 
FUNC_END VencSetOtherModParam


FUNC_BEGIN VencSetSSECfg
    /*00018d00*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00018d04*/ SUBS        R7, R1, #0 
    /*00018d08*/ SUB         SP, SP, #20 
    /*00018d0c*/ MOV         R4, R0 
    /*00018d10*/ BEQ         VencSetSSECfg_x18e3c
    VencSetSSECfg_x18d14:
    /*00018d14*/ CMP         R4, #0 
    /*00018d18*/ BLT         VencSetSSECfg_x18dbc
    /*00018d1c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00018d20*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00018d24*/ LDR         R3, [R3] 
    /*00018d28*/ CMP         R4, R3 
    /*00018d2c*/ BCS         VencSetSSECfg_x18dbc
    VencSetSSECfg_x18d30:
    /*00018d30*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00018d34*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00018d38*/ MUL         R5, R5, R4 
    /*00018d3c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00018d40*/ LDR         R8, [R3] 
    /*00018d44*/ ADD         R9, R8, R5 
    /*00018d48*/ ADD         R6, R9, #12416              @ 0x3080 
    /*00018d4c*/ ADD         R6, R6, #16 
    /*00018d50*/ MOV         R0, R6 
    /*00018d54*/ BL          0x0000000000018D54          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00018d58*/ CMP         R0, #0 
    /*00018d5c*/ BNE         VencSetSSECfg_x18e84
    /*00018d60*/ LDR         R3, [R8, R5] 
    /*00018d64*/ CMP         R3, #1 
    /*00018d68*/ BNE         VencSetSSECfg_x18e4c
    /*00018d6c*/ LDR         R3, [R9, #4] 
    /*00018d70*/ CMP         R3, #96                     @ 0x60 
    /*00018d74*/ BEQ         VencSetSSECfg_x18dd8
    /*00018d78*/ MOVW        R2, #265                    @ 0x109 
    /*00018d7c*/ CMP         R3, R2 
    /*00018d80*/ BNE         VencSetSSECfg_x18e08
    /*00018d84*/ MOV         R0, #13 
    /*00018d88*/ BL          0x0000000000018D88          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018d8c*/ MOV         R1, R7 
    /*00018d90*/ LDR         R3, [R0, #212]              @ 0xd4 
    /*00018d94*/ MOV         R0, R4 
    /*00018d98*/ BLX         R3 
    /*00018d9c*/ CMP         R0, #0 
    /*00018da0*/ BNE         VencSetSSECfg_x18df8
    VencSetSSECfg_x18da4:
    /*00018da4*/ MOV         R5, #0 
    VencSetSSECfg_x18da8:
    /*00018da8*/ MOV         R0, R6 
    /*00018dac*/ BL          0x0000000000018DAC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00018db0*/ MOV         R0, R5 
    /*00018db4*/ ADD         SP, SP, #20 
    /*00018db8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetSSECfg_x18dbc:
    /*00018dbc*/ MOV         R0, R4 
    /*00018dc0*/ BL          0x0000000000000304 
    /*00018dc4*/ SUBS        R5, R0, #0 
    /*00018dc8*/ BEQ         VencSetSSECfg_x18d30
    VencSetSSECfg_x18dcc:
    /*00018dcc*/ MOV         R0, R5 
    /*00018dd0*/ ADD         SP, SP, #20 
    /*00018dd4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetSSECfg_x18dd8:
    /*00018dd8*/ MOV         R0, #10 
    /*00018ddc*/ BL          0x0000000000018DDC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018de0*/ MOV         R1, R7 
    /*00018de4*/ LDR         R3, [R0, #208]              @ 0xd0 
    /*00018de8*/ MOV         R0, R4 
    /*00018dec*/ BLX         R3 
    /*00018df0*/ CMP         R0, #0 
    /*00018df4*/ BEQ         VencSetSSECfg_x18da4
    VencSetSSECfg_x18df8:
    /*00018df8*/ BIC         R5, R0, #267386880          @ 0xff00000 
    /*00018dfc*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00018e00*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00018e04*/ B           VencSetSSECfg_x18da8
    VencSetSSECfg_x18e08:
    /*00018e08*/ STR         R3, [SP, #8] 
    /*00018e0c*/ MOVW        R2, #0                      @ .LC473 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x664c] 
    /*00018e10*/ MOVW        R3, #13140                  @ 0x3354 
    /*00018e14*/ STR         R4, [SP, #4] 
    /*00018e18*/ STR         R3, [SP] 
    /*00018e1c*/ MOVT        R2, #0                      @ .LC473 [R_ARM_MOVT_ABS: .rodata.str1.4+0x664c] 
    /*00018e20*/ LDR         R3, [PC, #104]              @ 0x0000000000018e90 
    /*00018e24*/ MOV         R1, #8 
    /*00018e28*/ MOV         R0, #3 
    /*00018e2c*/ MOVW        R5, #32776                  @ 0x8008 
    /*00018e30*/ BL          0x0000000000018E30          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018e34*/ MOVT        R5, #40968                  @ 0xa008 
    /*00018e38*/ B           VencSetSSECfg_x18da8
    VencSetSSECfg_x18e3c:
    /*00018e3c*/ BL          0x00000000000002C8 
    /*00018e40*/ SUBS        R5, R0, #0 
    /*00018e44*/ BNE         VencSetSSECfg_x18dcc
    /*00018e48*/ B           VencSetSSECfg_x18d14
    VencSetSSECfg_x18e4c:
    /*00018e4c*/ MOVW        R3, #13118                  @ 0x333e 
    /*00018e50*/ MOV         R1, #8 
    /*00018e54*/ STR         R3, [SP] 
    /*00018e58*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00018e5c*/ LDR         R3, [PC, #44]               @ 0x0000000000018e90 
    /*00018e60*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00018e64*/ STR         R4, [SP, #4] 
    /*00018e68*/ MOV         R0, #3 
    /*00018e6c*/ BL          0x0000000000018E6C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018e70*/ MOV         R0, R6 
    /*00018e74*/ MOVW        R5, #32773                  @ 0x8005 
    /*00018e78*/ BL          0x0000000000018E78          @ osal_up [R_ARM_CALL: +0x0] 
    /*00018e7c*/ MOVT        R5, #40968                  @ 0xa008 
    /*00018e80*/ B           VencSetSSECfg_x18dcc
    VencSetSSECfg_x18e84:
    /*00018e84*/ MOV         R5, #65024                  @ 0xfe00 
    /*00018e88*/ MOVT        R5, #65535                  @ 0xffff 
    /*00018e8c*/ B           VencSetSSECfg_x18dcc
    /*00018e90*/ ANDEQ       R0, R0, R8, ASR IP 
FUNC_END VencSetSSECfg


FUNC_BEGIN VencGetSSECfg
    /*00018e94*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00018e98*/ SUBS        R7, R1, #0 
    /*00018e9c*/ SUB         SP, SP, #20 
    /*00018ea0*/ MOV         R4, R0 
    /*00018ea4*/ BEQ         VencGetSSECfg_x18fd0
    VencGetSSECfg_x18ea8:
    /*00018ea8*/ CMP         R4, #0 
    /*00018eac*/ BLT         VencGetSSECfg_x18f50
    /*00018eb0*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00018eb4*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00018eb8*/ LDR         R3, [R3] 
    /*00018ebc*/ CMP         R4, R3 
    /*00018ec0*/ BCS         VencGetSSECfg_x18f50
    VencGetSSECfg_x18ec4:
    /*00018ec4*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00018ec8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00018ecc*/ MUL         R5, R5, R4 
    /*00018ed0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00018ed4*/ LDR         R8, [R3] 
    /*00018ed8*/ ADD         R9, R8, R5 
    /*00018edc*/ ADD         R6, R9, #12416              @ 0x3080 
    /*00018ee0*/ ADD         R6, R6, #16 
    /*00018ee4*/ MOV         R0, R6 
    /*00018ee8*/ BL          0x0000000000018EE8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00018eec*/ CMP         R0, #0 
    /*00018ef0*/ BNE         VencGetSSECfg_x19018
    /*00018ef4*/ LDR         R3, [R8, R5] 
    /*00018ef8*/ CMP         R3, #1 
    /*00018efc*/ BNE         VencGetSSECfg_x18fe0
    /*00018f00*/ LDR         R3, [R9, #4] 
    /*00018f04*/ CMP         R3, #96                     @ 0x60 
    /*00018f08*/ BEQ         VencGetSSECfg_x18f6c
    /*00018f0c*/ MOVW        R2, #265                    @ 0x109 
    /*00018f10*/ CMP         R3, R2 
    /*00018f14*/ BNE         VencGetSSECfg_x18f9c
    /*00018f18*/ MOV         R0, #13 
    /*00018f1c*/ BL          0x0000000000018F1C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018f20*/ MOV         R1, R7 
    /*00018f24*/ LDR         R3, [R0, #216]              @ 0xd8 
    /*00018f28*/ MOV         R0, R4 
    /*00018f2c*/ BLX         R3 
    /*00018f30*/ CMP         R0, #0 
    /*00018f34*/ BNE         VencGetSSECfg_x18f8c
    VencGetSSECfg_x18f38:
    /*00018f38*/ MOV         R5, #0 
    VencGetSSECfg_x18f3c:
    /*00018f3c*/ MOV         R0, R6 
    /*00018f40*/ BL          0x0000000000018F40          @ osal_up [R_ARM_CALL: +0x0] 
    /*00018f44*/ MOV         R0, R5 
    /*00018f48*/ ADD         SP, SP, #20 
    /*00018f4c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetSSECfg_x18f50:
    /*00018f50*/ MOV         R0, R4 
    /*00018f54*/ BL          0x0000000000000304 
    /*00018f58*/ SUBS        R5, R0, #0 
    /*00018f5c*/ BEQ         VencGetSSECfg_x18ec4
    VencGetSSECfg_x18f60:
    /*00018f60*/ MOV         R0, R5 
    /*00018f64*/ ADD         SP, SP, #20 
    /*00018f68*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetSSECfg_x18f6c:
    /*00018f6c*/ MOV         R0, #10 
    /*00018f70*/ BL          0x0000000000018F70          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018f74*/ MOV         R1, R7 
    /*00018f78*/ LDR         R3, [R0, #212]              @ 0xd4 
    /*00018f7c*/ MOV         R0, R4 
    /*00018f80*/ BLX         R3 
    /*00018f84*/ CMP         R0, #0 
    /*00018f88*/ BEQ         VencGetSSECfg_x18f38
    VencGetSSECfg_x18f8c:
    /*00018f8c*/ BIC         R5, R0, #267386880          @ 0xff00000 
    /*00018f90*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00018f94*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00018f98*/ B           VencGetSSECfg_x18f3c
    VencGetSSECfg_x18f9c:
    /*00018f9c*/ STR         R3, [SP, #8] 
    /*00018fa0*/ MOVW        R2, #0                      @ .LC473 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x664c] 
    /*00018fa4*/ MOVW        R3, #13187                  @ 0x3383 
    /*00018fa8*/ STR         R4, [SP, #4] 
    /*00018fac*/ STR         R3, [SP] 
    /*00018fb0*/ MOVT        R2, #0                      @ .LC473 [R_ARM_MOVT_ABS: .rodata.str1.4+0x664c] 
    /*00018fb4*/ LDR         R3, [PC, #104]              @ 0x0000000000019024 
    /*00018fb8*/ MOV         R1, #8 
    /*00018fbc*/ MOV         R0, #3 
    /*00018fc0*/ MOVW        R5, #32776                  @ 0x8008 
    /*00018fc4*/ BL          0x0000000000018FC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018fc8*/ MOVT        R5, #40968                  @ 0xa008 
    /*00018fcc*/ B           VencGetSSECfg_x18f3c
    VencGetSSECfg_x18fd0:
    /*00018fd0*/ BL          0x00000000000002C8 
    /*00018fd4*/ SUBS        R5, R0, #0 
    /*00018fd8*/ BNE         VencGetSSECfg_x18f60
    /*00018fdc*/ B           VencGetSSECfg_x18ea8
    VencGetSSECfg_x18fe0:
    /*00018fe0*/ MOVW        R3, #13166                  @ 0x336e 
    /*00018fe4*/ MOV         R1, #8 
    /*00018fe8*/ STR         R3, [SP] 
    /*00018fec*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00018ff0*/ LDR         R3, [PC, #44]               @ 0x0000000000019024 
    /*00018ff4*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00018ff8*/ STR         R4, [SP, #4] 
    /*00018ffc*/ MOV         R0, #3 
    /*00019000*/ BL          0x0000000000019000          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019004*/ MOV         R0, R6 
    /*00019008*/ MOVW        R5, #32773                  @ 0x8005 
    /*0001900c*/ BL          0x000000000001900C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019010*/ MOVT        R5, #40968                  @ 0xa008 
    /*00019014*/ B           VencGetSSECfg_x18f60
    VencGetSSECfg_x19018:
    /*00019018*/ MOV         R5, #65024                  @ 0xfe00 
    /*0001901c*/ MOVT        R5, #65535                  @ 0xffff 
    /*00019020*/ B           VencGetSSECfg_x18f60
    /*00019024*/ ANDEQ       R0, R0, R8, ROR #24 
FUNC_END VencGetSSECfg


FUNC_BEGIN VencSetSceneMode
    /*00019028*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001902c*/ SUBS        R6, R1, #0 
    /*00019030*/ SUB         SP, SP, #20 
    /*00019034*/ MOV         R4, R0 
    /*00019038*/ BEQ         VencSetSceneMode_x1916c
    VencSetSceneMode_x1903c:
    /*0001903c*/ CMP         R4, #0 
    /*00019040*/ BLT         VencSetSceneMode_x19138
    /*00019044*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00019048*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0001904c*/ LDR         R3, [R3] 
    /*00019050*/ CMP         R4, R3 
    /*00019054*/ BCS         VencSetSceneMode_x19138
    VencSetSceneMode_x19058:
    /*00019058*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0001905c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00019060*/ MUL         R5, R5, R4 
    /*00019064*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00019068*/ LDR         R9, [R3] 
    /*0001906c*/ ADD         R8, R9, R5 
    /*00019070*/ ADD         R7, R8, #12416              @ 0x3080 
    /*00019074*/ ADD         R7, R7, #16 
    /*00019078*/ MOV         R0, R7 
    /*0001907c*/ BL          0x000000000001907C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00019080*/ CMP         R0, #0 
    /*00019084*/ BNE         VencSetSceneMode_x1929c
    /*00019088*/ LDR         R3, [R9, R5] 
    /*0001908c*/ CMP         R3, #1 
    /*00019090*/ BNE         VencSetSceneMode_x19264
    /*00019094*/ ADD         R9, R8, #12288              @ 0x3000 
    /*00019098*/ LDR         R3, [R9, #716]              @ 0x2cc 
    /*0001909c*/ CMP         R3, #0 
    /*000190a0*/ BNE         VencSetSceneMode_x192f0
    /*000190a4*/ LDR         R0, [R6] 
    /*000190a8*/ CMP         R0, #2 
    /*000190ac*/ BHI         VencSetSceneMode_x192a8
    /*000190b0*/ BL          0x00000000000190B0          @ VENC_DRV_IsSupportSeceneMode [R_ARM_CALL: .text+0x269b0] 
    /*000190b4*/ CMP         R0, #0 
    /*000190b8*/ BEQ         VencSetSceneMode_x19328
    /*000190bc*/ LDR         R3, [R9, #612]              @ 0x264 
    /*000190c0*/ CMP         R3, #0 
    /*000190c4*/ BNE         VencSetSceneMode_x19150
    /*000190c8*/ LDR         R3, [R8, #4] 
    /*000190cc*/ CMP         R3, #96                     @ 0x60 
    /*000190d0*/ BEQ         VencSetSceneMode_x191b8
    /*000190d4*/ MOVW        R2, #265                    @ 0x109 
    /*000190d8*/ CMP         R3, R2 
    /*000190dc*/ BNE         VencSetSceneMode_x1917c
    /*000190e0*/ MOV         R0, #13 
    /*000190e4*/ BL          0x00000000000190E4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000190e8*/ MOV         R1, R6 
    /*000190ec*/ LDR         R3, [R0, #228]              @ 0xe4 
    /*000190f0*/ MOV         R0, R4 
    /*000190f4*/ BLX         R3 
    /*000190f8*/ SUBS        R5, R0, #0 
    /*000190fc*/ BNE         VencSetSceneMode_x19234
    /*00019100*/ MOV         R0, #19 
    /*00019104*/ BL          0x0000000000019104          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019108*/ MOV         R1, R6 
    /*0001910c*/ LDR         R3, [R0, #104]              @ 0x68 
    /*00019110*/ MOV         R0, R4 
    /*00019114*/ BLX         R3 
    /*00019118*/ SUBS        R5, R0, #0 
    /*0001911c*/ BNE         VencSetSceneMode_x192e4
    VencSetSceneMode_x19120:
    /*00019120*/ LDR         R3, [R6] 
    /*00019124*/ MOV         R0, R7 
    /*00019128*/ STR         R3, [R9, #1056]             @ 0x420 
    /*0001912c*/ BL          0x000000000001912C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019130*/ MOV         R0, #0 
    /*00019134*/ B           VencSetSceneMode_x19148
    VencSetSceneMode_x19138:
    /*00019138*/ MOV         R0, R4 
    /*0001913c*/ BL          0x0000000000000304 
    /*00019140*/ CMP         R0, #0 
    /*00019144*/ BEQ         VencSetSceneMode_x19058
    VencSetSceneMode_x19148:
    /*00019148*/ ADD         SP, SP, #20 
    /*0001914c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetSceneMode_x19150:
    /*00019150*/ LDR         R3, [R6] 
    /*00019154*/ MOV         R0, R7 
    /*00019158*/ STR         R3, [R9, #1056]             @ 0x420 
    /*0001915c*/ BL          0x000000000001915C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019160*/ MOVW        R0, #65535                  @ 0xffff 
    /*00019164*/ MOVT        R0, #61448                  @ 0xf008 
    /*00019168*/ B           VencSetSceneMode_x19148
    VencSetSceneMode_x1916c:
    /*0001916c*/ BL          0x00000000000002C8 
    /*00019170*/ CMP         R0, #0 
    /*00019174*/ BNE         VencSetSceneMode_x19148
    /*00019178*/ B           VencSetSceneMode_x1903c
    VencSetSceneMode_x1917c:
    /*0001917c*/ STR         R3, [SP, #8] 
    /*00019180*/ MOVW        R3, #13281                  @ 0x33e1 
    /*00019184*/ STR         R3, [SP] 
    /*00019188*/ MOVW        R2, #0                      @ .LC480 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6834] 
    /*0001918c*/ LDR         R3, [PC, #444]              @ 0x0000000000019350 
    /*00019190*/ MOVT        R2, #0                      @ .LC480 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6834] 
    /*00019194*/ MOV         R1, #8 
    /*00019198*/ STR         R4, [SP, #4] 
    VencSetSceneMode_x1919c:
    /*0001919c*/ MOV         R0, #3 
    /*000191a0*/ BL          0x00000000000191A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000191a4*/ MOV         R0, R7 
    /*000191a8*/ BL          0x00000000000191A8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000191ac*/ MOVW        R0, #32776                  @ 0x8008 
    /*000191b0*/ MOVT        R0, #40968                  @ 0xa008 
    /*000191b4*/ B           VencSetSceneMode_x19148
    VencSetSceneMode_x191b8:
    /*000191b8*/ MOV         R0, #10 
    /*000191bc*/ BL          0x00000000000191BC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000191c0*/ MOV         R1, R6 
    /*000191c4*/ LDR         R3, [R0, #232]              @ 0xe8 
    /*000191c8*/ MOV         R0, R4 
    /*000191cc*/ BLX         R3 
    /*000191d0*/ SUBS        R5, R0, #0 
    /*000191d4*/ BNE         VencSetSceneMode_x1924c
    /*000191d8*/ MOV         R0, #19 
    /*000191dc*/ BL          0x00000000000191DC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000191e0*/ MOV         R1, R6 
    /*000191e4*/ LDR         R3, [R0, #104]              @ 0x68 
    /*000191e8*/ MOV         R0, R4 
    /*000191ec*/ BLX         R3 
    /*000191f0*/ SUBS        R5, R0, #0 
    /*000191f4*/ STRNE       R4, [SP, #4] 
    /*000191f8*/ MOVWNE      R3, #13273                  @ 0x33d9 
    /*000191fc*/ BEQ         VencSetSceneMode_x19120
    VencSetSceneMode_x19200:
    /*00019200*/ MOVW        R2, #0                      @ .LC478 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x67b8] 
    /*00019204*/ MOVT        R2, #0                      @ .LC478 [R_ARM_MOVT_ABS: .rodata.str1.4+0x67b8] 
    /*00019208*/ STR         R3, [SP] 
    VencSetSceneMode_x1920c:
    /*0001920c*/ LDR         R3, [PC, #316]              @ 0x0000000000019350 
    /*00019210*/ MOV         R1, #8 
    /*00019214*/ MOV         R0, #3 
    /*00019218*/ BL          0x0000000000019218          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001921c*/ MOV         R0, R7 
    /*00019220*/ BL          0x0000000000019220          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019224*/ BIC         R0, R5, #267386880          @ 0xff00000 
    /*00019228*/ BIC         R0, R0, #983040             @ 0xf0000 
    /*0001922c*/ ORR         R0, R0, #524288             @ 0x80000 
    /*00019230*/ B           VencSetSceneMode_x19148
    VencSetSceneMode_x19234:
    /*00019234*/ MOV         R3, #13248                  @ 0x33c0 
    /*00019238*/ MOVW        R2, #0                      @ .LC477 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6778] 
    /*0001923c*/ STR         R4, [SP, #4] 
    /*00019240*/ MOVT        R2, #0                      @ .LC477 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6778] 
    /*00019244*/ STR         R3, [SP] 
    /*00019248*/ B           VencSetSceneMode_x1920c
    VencSetSceneMode_x1924c:
    /*0001924c*/ MOVW        R3, #13266                  @ 0x33d2 
    /*00019250*/ MOVW        R2, #0                      @ .LC479 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x67f4] 
    /*00019254*/ STR         R4, [SP, #4] 
    /*00019258*/ MOVT        R2, #0                      @ .LC479 [R_ARM_MOVT_ABS: .rodata.str1.4+0x67f4] 
    /*0001925c*/ STR         R3, [SP] 
    /*00019260*/ B           VencSetSceneMode_x1920c
    VencSetSceneMode_x19264:
    /*00019264*/ MOVW        R3, #13212                  @ 0x339c 
    /*00019268*/ MOV         R1, #8 
    /*0001926c*/ STR         R3, [SP] 
    /*00019270*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00019274*/ LDR         R3, [PC, #212]              @ 0x0000000000019350 
    /*00019278*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001927c*/ STR         R4, [SP, #4] 
    /*00019280*/ MOV         R0, #3 
    /*00019284*/ BL          0x0000000000019284          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019288*/ MOV         R0, R7 
    /*0001928c*/ BL          0x000000000001928C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019290*/ MOVW        R0, #32773                  @ 0x8005 
    /*00019294*/ MOVT        R0, #40968                  @ 0xa008 
    /*00019298*/ B           VencSetSceneMode_x19148
    VencSetSceneMode_x1929c:
    /*0001929c*/ MOV         R0, #65024                  @ 0xfe00 
    /*000192a0*/ MOVT        R0, #65535                  @ 0xffff 
    /*000192a4*/ B           VencSetSceneMode_x19148
    VencSetSceneMode_x192a8:
    /*000192a8*/ STR         R0, [SP, #8] 
    /*000192ac*/ MOVW        R3, #13227                  @ 0x33ab 
    /*000192b0*/ MOV         R1, #8 
    /*000192b4*/ STR         R3, [SP] 
    /*000192b8*/ STR         R4, [SP, #4] 
    /*000192bc*/ MOVW        R2, #0                      @ .LC475 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x66ec] 
    /*000192c0*/ LDR         R3, [PC, #136]              @ 0x0000000000019350 
    /*000192c4*/ MOVT        R2, #0                      @ .LC475 [R_ARM_MOVT_ABS: .rodata.str1.4+0x66ec] 
    /*000192c8*/ MOV         R0, #3 
    /*000192cc*/ BL          0x00000000000192CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000192d0*/ MOV         R0, R7 
    /*000192d4*/ BL          0x00000000000192D4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000192d8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000192dc*/ MOVT        R0, #40968                  @ 0xa008 
    /*000192e0*/ B           VencSetSceneMode_x19148
    VencSetSceneMode_x192e4:
    /*000192e4*/ STR         R4, [SP, #4] 
    /*000192e8*/ MOVW        R3, #13255                  @ 0x33c7 
    /*000192ec*/ B           VencSetSceneMode_x19200
    VencSetSceneMode_x192f0:
    /*000192f0*/ STR         R3, [SP, #4] 
    /*000192f4*/ MOV         R1, #8 
    /*000192f8*/ MOVW        R3, #13219                  @ 0x33a3 
    /*000192fc*/ MOVW        R2, #0                      @ .LC474 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6694] 
    /*00019300*/ STR         R3, [SP] 
    /*00019304*/ MOVT        R2, #0                      @ .LC474 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6694] 
    /*00019308*/ LDR         R3, [PC, #64]               @ 0x0000000000019350 
    /*0001930c*/ MOV         R0, #3 
    /*00019310*/ BL          0x0000000000019310          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019314*/ MOV         R0, R7 
    /*00019318*/ BL          0x0000000000019318          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001931c*/ MOVW        R0, #32776                  @ 0x8008 
    /*00019320*/ MOVT        R0, #40968                  @ 0xa008 
    /*00019324*/ B           VencSetSceneMode_x19148
    VencSetSceneMode_x19328:
    /*00019328*/ LDR         R3, [R6] 
    /*0001932c*/ MOVW        R1, #13234                  @ 0x33b2 
    /*00019330*/ MOVW        R2, #0                      @ .LC476 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6728] 
    /*00019334*/ STR         R1, [SP] 
    /*00019338*/ STR         R4, [SP, #4] 
    /*0001933c*/ MOVT        R2, #0                      @ .LC476 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6728] 
    /*00019340*/ STR         R3, [SP, #8] 
    /*00019344*/ MOV         R1, #8 
    /*00019348*/ LDR         R3, [PC]                    @ 0x0000000000019350 
    /*0001934c*/ B           VencSetSceneMode_x1919c
    /*00019350*/ ANDEQ       R0, R0, R8, ROR IP 
FUNC_END VencSetSceneMode


FUNC_BEGIN VencGetSceneMode
    /*00019354*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00019358*/ SUBS        R6, R1, #0 
    /*0001935c*/ SUB         SP, SP, #28 
    /*00019360*/ MOV         R4, R0 
    /*00019364*/ BEQ         VencGetSceneMode_x1953c
    VencGetSceneMode_x19368:
    /*00019368*/ CMP         R4, #0 
    /*0001936c*/ BLT         VencGetSceneMode_x19454
    /*00019370*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00019374*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00019378*/ LDR         R3, [R3] 
    /*0001937c*/ CMP         R4, R3 
    /*00019380*/ BCS         VencGetSceneMode_x19454
    VencGetSceneMode_x19384:
    /*00019384*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00019388*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001938c*/ MUL         R5, R5, R4 
    /*00019390*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00019394*/ LDR         R8, [R3] 
    /*00019398*/ ADD         R9, R8, R5 
    /*0001939c*/ ADD         R7, R9, #12416              @ 0x3080 
    /*000193a0*/ ADD         R7, R7, #16 
    /*000193a4*/ MOV         R0, R7 
    /*000193a8*/ BL          0x00000000000193A8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000193ac*/ CMP         R0, #0 
    /*000193b0*/ BNE         VencGetSceneMode_x195c8
    /*000193b4*/ LDR         R3, [R8, R5] 
    /*000193b8*/ CMP         R3, #1 
    /*000193bc*/ BNE         VencGetSceneMode_x19590
    /*000193c0*/ LDR         R3, [R9, #4] 
    /*000193c4*/ CMP         R3, #96                     @ 0x60 
    /*000193c8*/ BEQ         VencGetSceneMode_x1946c
    /*000193cc*/ MOVW        R2, #265                    @ 0x109 
    /*000193d0*/ CMP         R3, R2 
    /*000193d4*/ BNE         VencGetSceneMode_x19500
    /*000193d8*/ MOV         R0, #13 
    /*000193dc*/ BL          0x00000000000193DC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000193e0*/ ADD         R1, SP, #16 
    /*000193e4*/ LDR         R3, [R0, #232]              @ 0xe8 
    /*000193e8*/ MOV         R0, R4 
    /*000193ec*/ BLX         R3 
    /*000193f0*/ SUBS        R5, R0, #0 
    /*000193f4*/ BNE         VencGetSceneMode_x19564
    /*000193f8*/ MOV         R0, #19 
    /*000193fc*/ BL          0x00000000000193FC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019400*/ ADD         R1, SP, #20 
    /*00019404*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*00019408*/ MOV         R0, R4 
    /*0001940c*/ BLX         R3 
    /*00019410*/ SUBS        R5, R0, #0 
    /*00019414*/ BEQ         VencGetSceneMode_x194b4
    /*00019418*/ MOVW        R3, #13332                  @ 0x3414 
    /*0001941c*/ STR         R4, [SP, #4] 
    VencGetSceneMode_x19420:
    /*00019420*/ MOVW        R2, #0                      @ .LC482 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68c0] 
    /*00019424*/ MOVT        R2, #0                      @ .LC482 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68c0] 
    /*00019428*/ STR         R3, [SP] 
    VencGetSceneMode_x1942c:
    /*0001942c*/ LDR         R3, [PC, #416]              @ 0x00000000000195d4 
    /*00019430*/ MOV         R1, #8 
    /*00019434*/ MOV         R0, #3 
    /*00019438*/ BL          0x0000000000019438          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001943c*/ MOV         R0, R7 
    /*00019440*/ BL          0x0000000000019440          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019444*/ BIC         R0, R5, #267386880          @ 0xff00000 
    /*00019448*/ BIC         R0, R0, #983040             @ 0xf0000 
    /*0001944c*/ ORR         R0, R0, #524288             @ 0x80000 
    /*00019450*/ B           VencGetSceneMode_x19464
    VencGetSceneMode_x19454:
    /*00019454*/ MOV         R0, R4 
    /*00019458*/ BL          0x0000000000000304 
    /*0001945c*/ CMP         R0, #0 
    /*00019460*/ BEQ         VencGetSceneMode_x19384
    VencGetSceneMode_x19464:
    /*00019464*/ ADD         SP, SP, #28 
    /*00019468*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetSceneMode_x1946c:
    /*0001946c*/ MOV         R0, #10 
    /*00019470*/ BL          0x0000000000019470          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019474*/ ADD         R1, SP, #16 
    /*00019478*/ LDR         R3, [R0, #236]              @ 0xec 
    /*0001947c*/ MOV         R0, R4 
    /*00019480*/ BLX         R3 
    /*00019484*/ SUBS        R5, R0, #0 
    /*00019488*/ BNE         VencGetSceneMode_x1954c
    /*0001948c*/ MOV         R0, #19 
    /*00019490*/ BL          0x0000000000019490          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019494*/ ADD         R1, SP, #20 
    /*00019498*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*0001949c*/ MOV         R0, R4 
    /*000194a0*/ BLX         R3 
    /*000194a4*/ SUBS        R5, R0, #0 
    /*000194a8*/ STRNE       R4, [SP, #4] 
    /*000194ac*/ MOVWNE      R3, #13351                  @ 0x3427 
    /*000194b0*/ BNE         VencGetSceneMode_x19420
    VencGetSceneMode_x194b4:
    /*000194b4*/ LDR         R3, [SP, #16] 
    /*000194b8*/ LDR         R2, [SP, #20] 
    /*000194bc*/ CMP         R3, R2 
    /*000194c0*/ BEQ         VencGetSceneMode_x1957c
    /*000194c4*/ MOVW        R3, #13367                  @ 0x3437 
    /*000194c8*/ MOV         R1, #8 
    /*000194cc*/ STR         R3, [SP] 
    /*000194d0*/ MOVW        R2, #0                      @ .LC485 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6988] 
    /*000194d4*/ LDR         R3, [PC, #248]              @ 0x00000000000195d4 
    /*000194d8*/ MOVT        R2, #0                      @ .LC485 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6988] 
    /*000194dc*/ STR         R4, [SP, #4] 
    /*000194e0*/ MOV         R0, #3 
    /*000194e4*/ BL          0x00000000000194E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000194e8*/ LDR         R3, [SP, #16] 
    /*000194ec*/ MOV         R0, R7 
    /*000194f0*/ STR         R3, [R6] 
    /*000194f4*/ BL          0x00000000000194F4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000194f8*/ MOV         R0, #0 
    /*000194fc*/ B           VencGetSceneMode_x19464
    VencGetSceneMode_x19500:
    /*00019500*/ STR         R3, [SP, #8] 
    /*00019504*/ MOV         R1, #8 
    /*00019508*/ MOVW        R3, #13359                  @ 0x342f 
    /*0001950c*/ STR         R4, [SP, #4] 
    /*00019510*/ STR         R3, [SP] 
    /*00019514*/ MOVW        R2, #0                      @ .LC484 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6938] 
    /*00019518*/ LDR         R3, [PC, #180]              @ 0x00000000000195d4 
    /*0001951c*/ MOVT        R2, #0                      @ .LC484 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6938] 
    /*00019520*/ MOV         R0, #3 
    /*00019524*/ BL          0x0000000000019524          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019528*/ MOV         R0, R7 
    /*0001952c*/ BL          0x000000000001952C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019530*/ MOVW        R0, #32776                  @ 0x8008 
    /*00019534*/ MOVT        R0, #40968                  @ 0xa008 
    /*00019538*/ B           VencGetSceneMode_x19464
    VencGetSceneMode_x1953c:
    /*0001953c*/ BL          0x00000000000002C8 
    /*00019540*/ CMP         R0, #0 
    /*00019544*/ BNE         VencGetSceneMode_x19464
    /*00019548*/ B           VencGetSceneMode_x19368
    VencGetSceneMode_x1954c:
    /*0001954c*/ MOVW        R3, #13343                  @ 0x341f 
    /*00019550*/ MOVW        R2, #0                      @ .LC483 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68fc] 
    /*00019554*/ STR         R4, [SP, #4] 
    /*00019558*/ MOVT        R2, #0                      @ .LC483 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68fc] 
    /*0001955c*/ STR         R3, [SP] 
    /*00019560*/ B           VencGetSceneMode_x1942c
    VencGetSceneMode_x19564:
    /*00019564*/ MOVW        R3, #13324                  @ 0x340c 
    /*00019568*/ MOVW        R2, #0                      @ .LC481 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6884] 
    /*0001956c*/ STR         R4, [SP, #4] 
    /*00019570*/ MOVT        R2, #0                      @ .LC481 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6884] 
    /*00019574*/ STR         R3, [SP] 
    /*00019578*/ B           VencGetSceneMode_x1942c
    VencGetSceneMode_x1957c:
    /*0001957c*/ MOV         R0, R7 
    /*00019580*/ STR         R3, [R6] 
    /*00019584*/ BL          0x0000000000019584          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019588*/ MOV         R0, #0 
    /*0001958c*/ B           VencGetSceneMode_x19464
    VencGetSceneMode_x19590:
    /*00019590*/ MOV         R3, #13312                  @ 0x3400 
    /*00019594*/ MOV         R1, #8 
    /*00019598*/ STR         R3, [SP] 
    /*0001959c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*000195a0*/ LDR         R3, [PC, #44]               @ 0x00000000000195d4 
    /*000195a4*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*000195a8*/ STR         R4, [SP, #4] 
    /*000195ac*/ MOV         R0, #3 
    /*000195b0*/ BL          0x00000000000195B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000195b4*/ MOV         R0, R7 
    /*000195b8*/ BL          0x00000000000195B8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000195bc*/ MOVW        R0, #32773                  @ 0x8005 
    /*000195c0*/ MOVT        R0, #40968                  @ 0xa008 
    /*000195c4*/ B           VencGetSceneMode_x19464
    VencGetSceneMode_x195c8:
    /*000195c8*/ MOV         R0, #65024                  @ 0xfe00 
    /*000195cc*/ MOVT        R0, #65535                  @ 0xffff 
    /*000195d0*/ B           VencGetSceneMode_x19464
    /*000195d4*/ ANDEQ       R0, R0, IP, LSL #25 
FUNC_END VencGetSceneMode


FUNC_BEGIN VencSetChnlPriority
    /*000195d8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000195dc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000195e0*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000195e4*/ MOVW        R4, #36240                  @ 0x8d90 
    /*000195e8*/ LDR         R3, [R3] 
    /*000195ec*/ SUB         SP, SP, #28 
    /*000195f0*/ MLA         R4, R4, R0, R3 
    /*000195f4*/ LDR         R3, [R4, #12] 
    /*000195f8*/ CMP         R3, R1 
    /*000195fc*/ MOVEQ       R6, #0 
    /*00019600*/ BEQ         VencSetChnlPriority_x19640
    /*00019604*/ CMP         R1, #1 
    /*00019608*/ MOV         R5, R1 
    /*0001960c*/ MOV         R6, R0 
    /*00019610*/ BHI         VencSetChnlPriority_x19684
    /*00019614*/ MOV         R0, #4 
    /*00019618*/ BL          0x0000000000019618          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001961c*/ MOV         R3, R5 
    /*00019620*/ LDR         R2, [R4, #12] 
    /*00019624*/ LDR         R1, [R4, #8] 
    /*00019628*/ LDR         R7, [R0, #32] 
    /*0001962c*/ MOV         R0, R6 
    /*00019630*/ BLX         R7 
    /*00019634*/ SUBS        R6, R0, #0 
    /*00019638*/ STREQ       R5, [R4, #12] 
    /*0001963c*/ BNE         VencSetChnlPriority_x1964c
    VencSetChnlPriority_x19640:
    /*00019640*/ MOV         R0, R6 
    /*00019644*/ ADD         SP, SP, #28 
    /*00019648*/ POP         {R4, R5, R6, R7, PC} 
    VencSetChnlPriority_x1964c:
    /*0001964c*/ MOVW        R3, #13415                  @ 0x3467 
    /*00019650*/ MOV         R1, #8 
    /*00019654*/ STR         R3, [SP] 
    /*00019658*/ MOVW        R2, #0                      @ .LC487 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6a18] 
    /*0001965c*/ LDR         R3, [PC, #100]              @ 0x00000000000196c8 
    /*00019660*/ MOVT        R2, #0                      @ .LC487 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6a18] 
    /*00019664*/ MOV         R0, #3 
    /*00019668*/ BIC         R6, R6, #267386880          @ 0xff00000 
    /*0001966c*/ BL          0x000000000001966C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019670*/ BIC         R6, R6, #983040             @ 0xf0000 
    /*00019674*/ ORR         R6, R6, #524288             @ 0x80000 
    /*00019678*/ MOV         R0, R6 
    /*0001967c*/ ADD         SP, SP, #28 
    /*00019680*/ POP         {R4, R5, R6, R7, PC} 
    VencSetChnlPriority_x19684:
    /*00019684*/ STR         R1, [SP, #8] 
    /*00019688*/ MOV         R3, #1 
    /*0001968c*/ STR         R0, [SP, #4] 
    /*00019690*/ MOV         R2, #0 
    /*00019694*/ STR         R3, [SP, #16] 
    /*00019698*/ MOV         R1, #8 
    /*0001969c*/ MOVW        R3, #13408                  @ 0x3460 
    /*000196a0*/ STR         R2, [SP, #12] 
    /*000196a4*/ STR         R3, [SP] 
    /*000196a8*/ MOVW        R2, #0                      @ .LC486 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x69c0] 
    /*000196ac*/ LDR         R3, [PC, #20]               @ 0x00000000000196c8 
    /*000196b0*/ MOVT        R2, #0                      @ .LC486 [R_ARM_MOVT_ABS: .rodata.str1.4+0x69c0] 
    /*000196b4*/ MOV         R0, #3 
    /*000196b8*/ MOVW        R6, #32771                  @ 0x8003 
    /*000196bc*/ BL          0x00000000000196BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000196c0*/ MOVT        R6, #40968                  @ 0xa008 
    /*000196c4*/ B           VencSetChnlPriority_x19640
    /*000196c8*/ ANDEQ       R0, R0, R0, LSR #25 
FUNC_END VencSetChnlPriority


FUNC_BEGIN VencSetCropCfg
    /*000196cc*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000196d0*/ SUBS        R7, R1, #0 
    /*000196d4*/ SUB         SP, SP, #16 
    /*000196d8*/ MOV         R8, R0 
    /*000196dc*/ BEQ         VencSetCropCfg_x19764
    VencSetCropCfg_x196e0:
    /*000196e0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000196e4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000196e8*/ MOVW        R4, #36240                  @ 0x8d90 
    /*000196ec*/ MOV         R2, #20 
    /*000196f0*/ LDR         R3, [R3] 
    /*000196f4*/ MOV         R1, R7 
    /*000196f8*/ MLA         R4, R4, R8, R3 
    /*000196fc*/ ADD         R5, R4, #12736              @ 0x31c0 
    /*00019700*/ ADD         R5, R5, #60                 @ 0x3c 
    /*00019704*/ MOV         R0, R5 
    /*00019708*/ BL          0x0000000000019708          @ osal_memcmp [R_ARM_CALL: +0x0] 
    /*0001970c*/ SUBS        R6, R0, #0 
    /*00019710*/ BNE         VencSetCropCfg_x19720
    VencSetCropCfg_x19714:
    /*00019714*/ MOV         R0, R6 
    /*00019718*/ ADD         SP, SP, #16 
    /*0001971c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VencSetCropCfg_x19720:
    /*00019720*/ MOV         R1, R7 
    /*00019724*/ MOV         R0, R4 
    /*00019728*/ BL          0x0000000000019728          @ VencCheckCropCfg [R_ARM_CALL: .text+0xe58] 
    /*0001972c*/ SUBS        R6, R0, #0 
    /*00019730*/ BNE         VencSetCropCfg_x19774
    /*00019734*/ ADD         R4, R4, #64                 @ 0x40 
    /*00019738*/ ADD         R1, SP, #12 
    /*0001973c*/ MOV         R0, R4 
    /*00019740*/ BL          0x0000000000019740          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00019744*/ MOV         R1, R7 
    /*00019748*/ MOV         R0, R5 
    /*0001974c*/ MOV         R2, #20 
    /*00019750*/ BL          0x0000000000019750          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019754*/ ADD         R1, SP, #12 
    /*00019758*/ MOV         R0, R4 
    /*0001975c*/ BL          0x000000000001975C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00019760*/ B           VencSetCropCfg_x19714
    VencSetCropCfg_x19764:
    /*00019764*/ BL          0x00000000000002C8 
    /*00019768*/ SUBS        R6, R0, #0 
    /*0001976c*/ BNE         VencSetCropCfg_x19714
    /*00019770*/ B           VencSetCropCfg_x196e0
    VencSetCropCfg_x19774:
    /*00019774*/ MOVW        R3, #13441                  @ 0x3481 
    /*00019778*/ STR         R8, [SP, #4] 
    /*0001977c*/ STR         R3, [SP] 
    /*00019780*/ MOVW        R2, #0                      @ .LC488 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6a4c] 
    /*00019784*/ LDR         R3, [PC, #16]               @ 0x000000000001979c 
    /*00019788*/ MOVT        R2, #0                      @ .LC488 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6a4c] 
    /*0001978c*/ MOV         R1, #8 
    /*00019790*/ MOV         R0, #3 
    /*00019794*/ BL          0x0000000000019794          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019798*/ B           VencSetCropCfg_x19714
    /*0001979c*/ @           <UNDEFINED> instruction: 0x00000cb4 
FUNC_END VencSetCropCfg


FUNC_BEGIN VencSetFrmRate
    /*000197a0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000197a4*/ SUBS        R5, R1, #0 
    /*000197a8*/ SUB         SP, SP, #36                 @ 0x24 
    /*000197ac*/ MOV         R3, #0 
    /*000197b0*/ MOV         R7, R0 
    /*000197b4*/ STR         R3, [SP, #28] 
    /*000197b8*/ BEQ         VencSetFrmRate_x19a00
    VencSetFrmRate_x197bc:
    /*000197bc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000197c0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000197c4*/ MOVW        R4, #36240                  @ 0x8d90 
    /*000197c8*/ LDR         R2, [R5] 
    /*000197cc*/ LDR         R3, [R3] 
    /*000197d0*/ MLA         R4, R4, R7, R3 
    /*000197d4*/ ADD         R6, R4, #12288              @ 0x3000 
    /*000197d8*/ LDR         R3, [R6, #88]               @ 0x58 
    /*000197dc*/ CMP         R3, R2 
    /*000197e0*/ BEQ         VencSetFrmRate_x19904
    VencSetFrmRate_x197e4:
    /*000197e4*/ CMN         R2, #1 
    /*000197e8*/ BEQ         VencSetFrmRate_x198b4
    /*000197ec*/ SUB         R3, R2, #1 
    /*000197f0*/ CMP         R3, #239                    @ 0xef 
    /*000197f4*/ BHI         VencSetFrmRate_x198c0
    /*000197f8*/ LDR         R1, [R5, #4] 
    /*000197fc*/ SUB         R3, R1, #1 
    /*00019800*/ CMP         R3, #239                    @ 0xef 
    /*00019804*/ BHI         VencSetFrmRate_x19a54
    /*00019808*/ LDR         R3, [R4, #4] 
    /*0001980c*/ MOVW        R0, #1006                   @ 0x3ee 
    /*00019810*/ CMP         R3, R0 
    /*00019814*/ CMPNE       R3, #26 
    /*00019818*/ MOVEQ       R3, #1 
    /*0001981c*/ MOVNE       R3, #0 
    /*00019820*/ CMP         R2, R1 
    /*00019824*/ MOVGE       R3, #0 
    /*00019828*/ ANDLT       R3, R3, #1 
    /*0001982c*/ CMP         R3, #0 
    /*00019830*/ BNE         VencSetFrmRate_x19a80
    VencSetFrmRate_x19834:
    /*00019834*/ ADD         SL, R4, #64                 @ 0x40 
    /*00019838*/ ADD         R1, SP, #28 
    /*0001983c*/ MOV         R0, SL 
    /*00019840*/ BL          0x0000000000019840          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00019844*/ ADD         R0, R4, #12352              @ 0x3040 
    /*00019848*/ ADD         R0, R0, #24 
    /*0001984c*/ MOV         R2, #8 
    /*00019850*/ MOV         R1, R5 
    /*00019854*/ BL          0x0000000000019854          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019858*/ LDM         R5, {R3, FP} 
    /*0001985c*/ CMP         R3, FP 
    /*00019860*/ BLT         VencSetFrmRate_x1991c
    /*00019864*/ LDR         R3, [R6, #1128]             @ 0x468 
    /*00019868*/ CMP         R3, #1 
    /*0001986c*/ BEQ         VencSetFrmRate_x19a10
    VencSetFrmRate_x19870:
    /*00019870*/ MOV         R8, #0 
    /*00019874*/ STR         R8, [R6, #1108]             @ 0x454 
    /*00019878*/ LDR         R3, [R5] 
    /*0001987c*/ MOVW        R2, #1006                   @ 0x3ee 
    /*00019880*/ LDR         R1, [R5, #4] 
    /*00019884*/ SUB         R3, R3, R1 
    /*00019888*/ STR         R3, [R6, #84]               @ 0x54 
    /*0001988c*/ LDR         R3, [R4, #4] 
    /*00019890*/ CMP         R3, #26 
    /*00019894*/ CMPNE       R3, R2 
    /*00019898*/ BNE         VencSetFrmRate_x199c4
    VencSetFrmRate_x1989c:
    /*0001989c*/ MOV         R0, SL 
    /*000198a0*/ ADD         R1, SP, #28 
    /*000198a4*/ BL          0x00000000000198A4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000198a8*/ MOV         R0, #0 
    VencSetFrmRate_x198ac:
    /*000198ac*/ ADD         SP, SP, #36                 @ 0x24 
    /*000198b0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSetFrmRate_x198b4:
    /*000198b4*/ LDR         R3, [R5, #4] 
    /*000198b8*/ CMN         R3, #1 
    /*000198bc*/ BEQ         VencSetFrmRate_x19834
    VencSetFrmRate_x198c0:
    /*000198c0*/ STR         R2, [SP, #8] 
    /*000198c4*/ MOV         R2, #1 
    /*000198c8*/ STR         R2, [SP, #12] 
    /*000198cc*/ MOVW        R2, #0                      @ .LC489 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6a84] 
    /*000198d0*/ MOVT        R2, #0                      @ .LC489 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6a84] 
    /*000198d4*/ MOV         R3, #240                    @ 0xf0 
    /*000198d8*/ STR         R7, [SP, #4] 
    /*000198dc*/ STR         R3, [SP, #16] 
    /*000198e0*/ MOVW        R3, #13480                  @ 0x34a8 
    /*000198e4*/ STR         R3, [SP] 
    VencSetFrmRate_x198e8:
    /*000198e8*/ LDR         R3, [PC, #464]              @ 0x0000000000019ac0 
    /*000198ec*/ MOV         R1, #8 
    /*000198f0*/ MOV         R0, #3 
    /*000198f4*/ BL          0x00000000000198F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000198f8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000198fc*/ MOVT        R0, #40968                  @ 0xa008 
    /*00019900*/ B           VencSetFrmRate_x198ac
    VencSetFrmRate_x19904:
    /*00019904*/ LDR         R1, [R6, #92]               @ 0x5c 
    /*00019908*/ LDR         R3, [R5, #4] 
    /*0001990c*/ CMP         R1, R3 
    /*00019910*/ MOVEQ       R0, #0 
    /*00019914*/ BNE         VencSetFrmRate_x197e4
    /*00019918*/ B           VencSetFrmRate_x198ac
    VencSetFrmRate_x1991c:
    /*0001991c*/ MOV         R0, #2 
    /*00019920*/ BL          0x0000000000019920          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019924*/ LDR         R3, [R0, #88]               @ 0x58 
    /*00019928*/ BLX         R3 
    /*0001992c*/ MOV         R2, FP 
    /*00019930*/ ASR         R3, FP, #31 
    /*00019934*/ MOV         R8, R0 
    /*00019938*/ MOV         R9, R1 
    /*0001993c*/ MOV         R1, #1 
    /*00019940*/ STR         R1, [R6, #1108]             @ 0x454 
    /*00019944*/ ADD         R1, PC, #364                @ 0x16c 
    /*00019948*/ LDRD        R0, [R1] 
    /*0001994c*/ BL          0x000000000001994C          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*00019950*/ MOVW        R3, #13408                  @ 0x3460 
    /*00019954*/ ADD         IP, R4, R3 
    /*00019958*/ MOV         R2, #0 
    /*0001995c*/ CMP         R9, R1 
    /*00019960*/ STRD        R0, [IP, #-8] 
    /*00019964*/ CMPEQ       R8, R0 
    /*00019968*/ STR         R2, [R6, #1132]             @ 0x46c 
    /*0001996c*/ BCC         VencSetFrmRate_x199f0
    /*00019970*/ SUBS        R8, R8, R0 
    /*00019974*/ SBC         R9, R9, R1 
    /*00019978*/ STRD        R8, [R4, R3] 
    VencSetFrmRate_x1997c:
    /*0001997c*/ MOV         R0, #19 
    /*00019980*/ BL          0x0000000000019980          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019984*/ MOV         R1, #1 
    /*00019988*/ LDR         R3, [R0, #100]              @ 0x64 
    /*0001998c*/ MOV         R0, R7 
    /*00019990*/ BLX         R3 
    /*00019994*/ CMP         R0, #0 
    /*00019998*/ BEQ         VencSetFrmRate_x1989c
    /*0001999c*/ MOVW        R3, #13552                  @ 0x34f0 
    /*000199a0*/ STR         R7, [SP, #4] 
    VencSetFrmRate_x199a4:
    /*000199a4*/ STR         R3, [SP] 
    /*000199a8*/ MOVW        R2, #0                      @ .LC493 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6bd0] 
    /*000199ac*/ LDR         R3, [PC, #268]              @ 0x0000000000019ac0 
    /*000199b0*/ MOVT        R2, #0                      @ .LC493 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6bd0] 
    /*000199b4*/ MOV         R1, #8 
    /*000199b8*/ MOV         R0, #3 
    /*000199bc*/ BL          0x00000000000199BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000199c0*/ B           VencSetFrmRate_x1989c
    VencSetFrmRate_x199c4:
    /*000199c4*/ MOV         R0, #19 
    /*000199c8*/ BL          0x00000000000199C8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000199cc*/ MOV         R1, R8 
    /*000199d0*/ LDR         R3, [R0, #100]              @ 0x64 
    /*000199d4*/ MOV         R0, R7 
    /*000199d8*/ BLX         R3 
    /*000199dc*/ CMP         R0, R8 
    /*000199e0*/ STRNE       R7, [SP, #4] 
    /*000199e4*/ MOVWNE      R3, #13526                  @ 0x34d6 
    /*000199e8*/ BEQ         VencSetFrmRate_x1989c
    /*000199ec*/ B           VencSetFrmRate_x199a4
    VencSetFrmRate_x199f0:
    /*000199f0*/ MOV         R0, #0 
    /*000199f4*/ MOV         R1, #0 
    /*000199f8*/ STRD        R0, [R4, R3] 
    /*000199fc*/ B           VencSetFrmRate_x1997c
    VencSetFrmRate_x19a00:
    /*00019a00*/ BL          0x00000000000002C8 
    /*00019a04*/ CMP         R0, #0 
    /*00019a08*/ BNE         VencSetFrmRate_x198ac
    /*00019a0c*/ B           VencSetFrmRate_x197bc
    VencSetFrmRate_x19a10:
    /*00019a10*/ ADD         R0, R4, #13376              @ 0x3440 
    /*00019a14*/ MOV         R3, #0 
    /*00019a18*/ ADD         R0, R0, #48                 @ 0x30 
    /*00019a1c*/ STR         R3, [R6, #1128]             @ 0x468 
    /*00019a20*/ BL          0x0000000000019A20          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*00019a24*/ CMP         R0, #0 
    /*00019a28*/ BEQ         VencSetFrmRate_x19870
    /*00019a2c*/ MOVW        R3, #13516                  @ 0x34cc 
    /*00019a30*/ STR         R7, [SP, #4] 
    /*00019a34*/ STR         R3, [SP] 
    /*00019a38*/ MOVW        R2, #0                      @ .LC492 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b98] 
    /*00019a3c*/ LDR         R3, [PC, #124]              @ 0x0000000000019ac0 
    /*00019a40*/ MOVT        R2, #0                      @ .LC492 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b98] 
    /*00019a44*/ MOV         R1, #8 
    /*00019a48*/ MOV         R0, #3 
    /*00019a4c*/ BL          0x0000000000019A4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019a50*/ B           VencSetFrmRate_x19870
    VencSetFrmRate_x19a54:
    /*00019a54*/ MOV         R3, #240                    @ 0xf0 
    /*00019a58*/ MOV         R2, #1 
    /*00019a5c*/ STR         R3, [SP, #16] 
    /*00019a60*/ MOVW        R3, #13488                  @ 0x34b0 
    /*00019a64*/ STR         R2, [SP, #12] 
    /*00019a68*/ MOVW        R2, #0                      @ .LC490 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6ad4] 
    /*00019a6c*/ STR         R1, [SP, #8] 
    /*00019a70*/ MOVT        R2, #0                      @ .LC490 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6ad4] 
    /*00019a74*/ STR         R7, [SP, #4] 
    /*00019a78*/ STR         R3, [SP] 
    /*00019a7c*/ B           VencSetFrmRate_x198e8
    VencSetFrmRate_x19a80:
    /*00019a80*/ STR         R2, [SP, #12] 
    /*00019a84*/ MOVW        R3, #13497                  @ 0x34b9 
    /*00019a88*/ STR         R1, [SP, #8] 
    /*00019a8c*/ MOVW        R2, #0                      @ .LC491 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b24] 
    /*00019a90*/ STR         R3, [SP] 
    /*00019a94*/ MOVT        R2, #0                      @ .LC491 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b24] 
    /*00019a98*/ STR         R7, [SP, #4] 
    /*00019a9c*/ MOV         R1, #8 
    /*00019aa0*/ LDR         R3, [PC, #24]               @ 0x0000000000019ac0 
    /*00019aa4*/ MOV         R0, #3 
    /*00019aa8*/ BL          0x0000000000019AA8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019aac*/ MOVW        R0, #32771                  @ 0x8003 
    /*00019ab0*/ MOVT        R0, #40968                  @ 0xa008 
    /*00019ab4*/ B           VencSetFrmRate_x198ac
    /*00019ab8*/ BLCC        0xFFFFFFFFFE6CC2C0 
    /*00019abc*/ ANDEQ       R0, R0, R0 
    /*00019ac0*/ ANDEQ       R0, R0, R4, ASR #25 
FUNC_END VencSetFrmRate


FUNC_BEGIN VencSetAdvancedParam
    /*00019ac4*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00019ac8*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00019acc*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00019ad0*/ MOVW        R3, #36240                  @ 0x8d90 
    /*00019ad4*/ LDR         R2, [R2] 
    /*00019ad8*/ SUB         SP, SP, #20 
    /*00019adc*/ MOV         R6, #0 
    /*00019ae0*/ STR         R6, [SP, #12] 
    /*00019ae4*/ MLA         R3, R3, R0, R2 
    /*00019ae8*/ ADD         R7, R3, #12288              @ 0x3000 
    /*00019aec*/ LDR         R2, [R7, #1104]             @ 0x450 
    /*00019af0*/ CMP         R2, R1 
    /*00019af4*/ MOVEQ       R0, R6 
    /*00019af8*/ BEQ         VencSetAdvancedParam_x19b2c
    /*00019afc*/ CMP         R1, R6 
    /*00019b00*/ MOV         R5, R1 
    /*00019b04*/ BEQ         VencSetAdvancedParam_x19b34
    /*00019b08*/ ADD         R4, R3, #64                 @ 0x40 
    /*00019b0c*/ ADD         R1, SP, #12 
    /*00019b10*/ MOV         R0, R4 
    /*00019b14*/ BL          0x0000000000019B14          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00019b18*/ MOV         R0, R4 
    /*00019b1c*/ ADD         R1, SP, #12 
    /*00019b20*/ STR         R5, [R7, #1104]             @ 0x450 
    /*00019b24*/ BL          0x0000000000019B24          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00019b28*/ MOV         R0, R6 
    VencSetAdvancedParam_x19b2c:
    /*00019b2c*/ ADD         SP, SP, #20 
    /*00019b30*/ POP         {R4, R5, R6, R7, PC} 
    VencSetAdvancedParam_x19b34:
    /*00019b34*/ STR         R0, [SP, #4] 
    /*00019b38*/ MOVW        R3, #13577                  @ 0x3509 
    /*00019b3c*/ MOVW        R2, #0                      @ .LC494 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6c0c] 
    /*00019b40*/ STR         R3, [SP] 
    /*00019b44*/ MOVT        R2, #0                      @ .LC494 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6c0c] 
    /*00019b48*/ LDR         R3, [PC, #20]               @ 0x0000000000019b64 
    /*00019b4c*/ MOV         R1, #8 
    /*00019b50*/ MOV         R0, #3 
    /*00019b54*/ BL          0x0000000000019B54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019b58*/ MOVW        R0, #32771                  @ 0x8003 
    /*00019b5c*/ MOVT        R0, #40968                  @ 0xa008 
    /*00019b60*/ B           VencSetAdvancedParam_x19b2c
    /*00019b64*/ LDRDEQ      R0, [R0], -R4 
FUNC_END VencSetAdvancedParam


FUNC_BEGIN VencSetChnParam
    /*00019b68*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00019b6c*/ SUBS        R4, R0, #0 
    /*00019b70*/ SUB         SP, SP, #12 
    /*00019b74*/ MOV         R6, R1 
    /*00019b78*/ BLT         VencSetChnParam_x19ca4
    /*00019b7c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00019b80*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00019b84*/ LDR         R3, [R3] 
    /*00019b88*/ CMP         R4, R3 
    /*00019b8c*/ BCS         VencSetChnParam_x19ca4
    VencSetChnParam_x19b90:
    /*00019b90*/ CMP         R6, #0 
    /*00019b94*/ BEQ         VencSetChnParam_x19d58
    VencSetChnParam_x19b98:
    /*00019b98*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00019b9c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00019ba0*/ MUL         R5, R5, R4 
    /*00019ba4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00019ba8*/ LDR         R9, [R3] 
    /*00019bac*/ ADD         R8, R9, R5 
    /*00019bb0*/ ADD         R7, R8, #12416              @ 0x3080 
    /*00019bb4*/ ADD         R7, R7, #16 
    /*00019bb8*/ MOV         R0, R7 
    /*00019bbc*/ BL          0x0000000000019BBC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00019bc0*/ CMP         R0, #0 
    /*00019bc4*/ BNE         VencSetChnParam_x19d68
    /*00019bc8*/ LDR         R3, [R9, R5] 
    /*00019bcc*/ CMP         R3, #1 
    /*00019bd0*/ BNE         VencSetChnParam_x19d20
    /*00019bd4*/ LDR         R2, [R8, #4] 
    /*00019bd8*/ MOVW        R3, #1006                   @ 0x3ee 
    /*00019bdc*/ CMP         R2, R3 
    /*00019be0*/ LDR         R3, [R6] 
    /*00019be4*/ BEQ         VencSetChnParam_x19cc0
    /*00019be8*/ CMP         R3, #1 
    /*00019bec*/ BHI         VencSetChnParam_x19e20
    VencSetChnParam_x19bf0:
    /*00019bf0*/ LDR         R1, [R6, #4] 
    /*00019bf4*/ MOV         R0, R4 
    /*00019bf8*/ BL          0x0000000000019BF8          @ VencSetChnlPriority [R_ARM_CALL: .text+0x195d8] 
    /*00019bfc*/ SUBS        R5, R0, #0 
    /*00019c00*/ BNE         VencSetChnParam_x19d00
    /*00019c04*/ ADD         R1, R6, #16 
    /*00019c08*/ MOV         R0, R4 
    /*00019c0c*/ BL          0x0000000000019C0C          @ VencSetCropCfg [R_ARM_CALL: .text+0x196cc] 
    /*00019c10*/ SUBS        R5, R0, #0 
    /*00019c14*/ BNE         VencSetChnParam_x19d00
    /*00019c18*/ LDR         R1, [R6, #12] 
    /*00019c1c*/ MOV         R0, R4 
    /*00019c20*/ BL          0x0000000000019C20          @ VencSetAdvancedParam [R_ARM_CALL: .text+0x19ac4] 
    /*00019c24*/ SUBS        R5, R0, #0 
    /*00019c28*/ BNE         VencSetChnParam_x19d00
    /*00019c2c*/ ADD         R1, R6, #36                 @ 0x24 
    /*00019c30*/ MOV         R0, R4 
    /*00019c34*/ BL          0x0000000000019C34          @ VencSetFrmRate [R_ARM_CALL: .text+0x197a0] 
    /*00019c38*/ SUBS        R5, R0, #0 
    /*00019c3c*/ BNE         VencSetChnParam_x19d00
    /*00019c40*/ LDR         R3, [R8, #4] 
    /*00019c44*/ MOVW        R2, #265                    @ 0x109 
    /*00019c48*/ CMP         R3, R2 
    /*00019c4c*/ BEQ         VencSetChnParam_x19dac
    /*00019c50*/ BHI         VencSetChnParam_x19d74
    /*00019c54*/ CMP         R3, #26 
    /*00019c58*/ BEQ         VencSetChnParam_x19e00
    /*00019c5c*/ CMP         R3, #96                     @ 0x60 
    /*00019c60*/ BNE         VencSetChnParam_x19dcc
    /*00019c64*/ MOV         R0, #10 
    /*00019c68*/ BL          0x0000000000019C68          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019c6c*/ MOV         R1, R6 
    /*00019c70*/ LDR         R3, [R0, #216]              @ 0xd8 
    /*00019c74*/ MOV         R0, R4 
    /*00019c78*/ BLX         R3 
    /*00019c7c*/ MOV         R5, R0 
    VencSetChnParam_x19c80:
    /*00019c80*/ MOV         R0, R7 
    /*00019c84*/ BL          0x0000000000019C84          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019c88*/ CMP         R5, #0 
    /*00019c8c*/ BICNE       R5, R5, #267386880          @ 0xff00000 
    /*00019c90*/ BICNE       R5, R5, #983040             @ 0xf0000 
    /*00019c94*/ ORRNE       R5, R5, #524288             @ 0x80000 
    VencSetChnParam_x19c98:
    /*00019c98*/ MOV         R0, R5 
    /*00019c9c*/ ADD         SP, SP, #12 
    /*00019ca0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetChnParam_x19ca4:
    /*00019ca4*/ MOV         R0, R4 
    /*00019ca8*/ BL          0x0000000000000304 
    /*00019cac*/ SUBS        R5, R0, #0 
    /*00019cb0*/ BEQ         VencSetChnParam_x19b90
    /*00019cb4*/ MOV         R0, R5 
    /*00019cb8*/ ADD         SP, SP, #12 
    /*00019cbc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetChnParam_x19cc0:
    /*00019cc0*/ CMP         R3, #0 
    /*00019cc4*/ BEQ         VencSetChnParam_x19bf0
    /*00019cc8*/ MOVW        R3, #13631                  @ 0x353f 
    /*00019ccc*/ MOV         R1, #8 
    /*00019cd0*/ STR         R3, [SP] 
    /*00019cd4*/ MOVW        R2, #0                      @ .LC495 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6c5c] 
    /*00019cd8*/ LDR         R3, [PC, #376]              @ 0x0000000000019e58 
    /*00019cdc*/ MOVT        R2, #0                      @ .LC495 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6c5c] 
    /*00019ce0*/ STR         R4, [SP, #4] 
    /*00019ce4*/ MOV         R0, #3 
    /*00019ce8*/ BL          0x0000000000019CE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019cec*/ MOV         R0, R7 
    /*00019cf0*/ MOVW        R5, #32776                  @ 0x8008 
    /*00019cf4*/ BL          0x0000000000019CF4          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019cf8*/ MOVT        R5, #40968                  @ 0xa008 
    /*00019cfc*/ B           VencSetChnParam_x19c98
    VencSetChnParam_x19d00:
    /*00019d00*/ MOV         R0, R7 
    /*00019d04*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00019d08*/ BL          0x0000000000019D08          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019d0c*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00019d10*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00019d14*/ MOV         R0, R5 
    /*00019d18*/ ADD         SP, SP, #12 
    /*00019d1c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetChnParam_x19d20:
    /*00019d20*/ MOVW        R3, #13622                  @ 0x3536 
    /*00019d24*/ MOV         R1, #8 
    /*00019d28*/ STR         R3, [SP] 
    /*00019d2c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*00019d30*/ LDR         R3, [PC, #288]              @ 0x0000000000019e58 
    /*00019d34*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*00019d38*/ STR         R4, [SP, #4] 
    /*00019d3c*/ MOV         R0, #3 
    /*00019d40*/ BL          0x0000000000019D40          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019d44*/ MOV         R0, R7 
    /*00019d48*/ MOVW        R5, #32773                  @ 0x8005 
    /*00019d4c*/ BL          0x0000000000019D4C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019d50*/ MOVT        R5, #40968                  @ 0xa008 
    /*00019d54*/ B           VencSetChnParam_x19c98
    VencSetChnParam_x19d58:
    /*00019d58*/ BL          0x00000000000002C8 
    /*00019d5c*/ SUBS        R5, R0, #0 
    /*00019d60*/ BNE         VencSetChnParam_x19c98
    /*00019d64*/ B           VencSetChnParam_x19b98
    VencSetChnParam_x19d68:
    /*00019d68*/ MOV         R5, #65024                  @ 0xfe00 
    /*00019d6c*/ MOVT        R5, #65535                  @ 0xffff 
    /*00019d70*/ B           VencSetChnParam_x19c98
    VencSetChnParam_x19d74:
    /*00019d74*/ MOVW        R2, #1002                   @ 0x3ea 
    /*00019d78*/ CMP         R3, R2 
    /*00019d7c*/ BEQ         VencSetChnParam_x19e00
    /*00019d80*/ MOVW        R2, #1006                   @ 0x3ee 
    /*00019d84*/ CMP         R3, R2 
    /*00019d88*/ BNE         VencSetChnParam_x19dcc
    /*00019d8c*/ MOV         R0, #44                     @ 0x2c 
    /*00019d90*/ BL          0x0000000000019D90          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019d94*/ MOV         R1, R6 
    /*00019d98*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00019d9c*/ MOV         R0, R4 
    /*00019da0*/ BLX         R3 
    /*00019da4*/ MOV         R5, R0 
    /*00019da8*/ B           VencSetChnParam_x19c80
    VencSetChnParam_x19dac:
    /*00019dac*/ MOV         R0, #13 
    /*00019db0*/ BL          0x0000000000019DB0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019db4*/ MOV         R1, R6 
    /*00019db8*/ LDR         R3, [R0, #236]              @ 0xec 
    /*00019dbc*/ MOV         R0, R4 
    /*00019dc0*/ BLX         R3 
    /*00019dc4*/ MOV         R5, R0 
    /*00019dc8*/ B           VencSetChnParam_x19c80
    VencSetChnParam_x19dcc:
    /*00019dcc*/ MOVW        R3, #13701                  @ 0x3585 
    /*00019dd0*/ MOV         R1, #8 
    /*00019dd4*/ STR         R3, [SP] 
    /*00019dd8*/ MOVW        R2, #0                      @ .LC497 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6cfc] 
    /*00019ddc*/ LDR         R3, [PC, #116]              @ 0x0000000000019e58 
    /*00019de0*/ MOVT        R2, #0                      @ .LC497 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6cfc] 
    /*00019de4*/ MOV         R0, #3 
    /*00019de8*/ MOVW        R5, #32776                  @ 0x8008 
    /*00019dec*/ BL          0x0000000000019DEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019df0*/ MOV         R0, R7 
    /*00019df4*/ BL          0x0000000000019DF4          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019df8*/ MOVT        R5, #40968                  @ 0xa008 
    /*00019dfc*/ B           VencSetChnParam_x19c98
    VencSetChnParam_x19e00:
    /*00019e00*/ MOV         R0, #11 
    /*00019e04*/ BL          0x0000000000019E04          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019e08*/ MOV         R1, R6 
    /*00019e0c*/ LDR         R3, [R0, #112]              @ 0x70 
    /*00019e10*/ MOV         R0, R4 
    /*00019e14*/ BLX         R3 
    /*00019e18*/ MOV         R5, R0 
    /*00019e1c*/ B           VencSetChnParam_x19c80
    VencSetChnParam_x19e20:
    /*00019e20*/ MOVW        R3, #13640                  @ 0x3548 
    /*00019e24*/ MOV         R1, #8 
    /*00019e28*/ STR         R3, [SP] 
    /*00019e2c*/ MOVW        R2, #0                      @ .LC496 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6cbc] 
    /*00019e30*/ LDR         R3, [PC, #32]               @ 0x0000000000019e58 
    /*00019e34*/ MOVT        R2, #0                      @ .LC496 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6cbc] 
    /*00019e38*/ STR         R4, [SP, #4] 
    /*00019e3c*/ MOV         R0, #3 
    /*00019e40*/ BL          0x0000000000019E40          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019e44*/ MOV         R0, R7 
    /*00019e48*/ MOVW        R5, #32771                  @ 0x8003 
    /*00019e4c*/ BL          0x0000000000019E4C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019e50*/ MOVT        R5, #40968                  @ 0xa008 
    /*00019e54*/ B           VencSetChnParam_x19c98
    /*00019e58*/ ANDEQ       R0, R0, IP, ROR #25 
FUNC_END VencSetChnParam


FUNC_BEGIN VencGetChnParam
    /*00019e5c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00019e60*/ SUBS        R6, R1, #0 
    /*00019e64*/ SUB         SP, SP, #12 
    /*00019e68*/ MOV         R4, R0 
    /*00019e6c*/ BEQ         VencGetChnParam_x19fc0
    VencGetChnParam_x19e70:
    /*00019e70*/ CMP         R4, #0 
    /*00019e74*/ BLT         VencGetChnParam_x19f0c
    /*00019e78*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00019e7c*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00019e80*/ LDR         R3, [R3] 
    /*00019e84*/ CMP         R4, R3 
    /*00019e88*/ BCS         VencGetChnParam_x19f0c
    VencGetChnParam_x19e8c:
    /*00019e8c*/ MOVW        R5, #36240                  @ 0x8d90 
    /*00019e90*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00019e94*/ MUL         R5, R5, R4 
    /*00019e98*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00019e9c*/ LDR         R9, [R3] 
    /*00019ea0*/ ADD         R7, R9, R5 
    /*00019ea4*/ ADD         R8, R7, #12416              @ 0x3080 
    /*00019ea8*/ ADD         R8, R8, #16 
    /*00019eac*/ MOV         R0, R8 
    /*00019eb0*/ BL          0x0000000000019EB0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00019eb4*/ CMP         R0, #0 
    /*00019eb8*/ BNE         VencGetChnParam_x1a07c
    /*00019ebc*/ LDR         R3, [R9, R5] 
    /*00019ec0*/ CMP         R3, #1 
    /*00019ec4*/ BNE         VencGetChnParam_x1a044
    /*00019ec8*/ LDR         R3, [R7, #4] 
    /*00019ecc*/ MOVW        R2, #265                    @ 0x109 
    /*00019ed0*/ CMP         R3, R2 
    /*00019ed4*/ BEQ         VencGetChnParam_x19fd0
    /*00019ed8*/ BHI         VencGetChnParam_x19f28
    /*00019edc*/ CMP         R3, #26 
    /*00019ee0*/ BEQ         VencGetChnParam_x1a024
    /*00019ee4*/ CMP         R3, #96                     @ 0x60 
    /*00019ee8*/ BNE         VencGetChnParam_x19ff0
    /*00019eec*/ MOV         R0, #10 
    /*00019ef0*/ BL          0x0000000000019EF0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019ef4*/ MOV         R1, R6 
    /*00019ef8*/ LDR         R3, [R0, #220]              @ 0xdc 
    /*00019efc*/ MOV         R0, R4 
    /*00019f00*/ BLX         R3 
    /*00019f04*/ MOV         R5, R0 
    /*00019f08*/ B           VencGetChnParam_x19f5c
    VencGetChnParam_x19f0c:
    /*00019f0c*/ MOV         R0, R4 
    /*00019f10*/ BL          0x0000000000000304 
    /*00019f14*/ SUBS        R5, R0, #0 
    /*00019f18*/ BEQ         VencGetChnParam_x19e8c
    VencGetChnParam_x19f1c:
    /*00019f1c*/ MOV         R0, R5 
    /*00019f20*/ ADD         SP, SP, #12 
    /*00019f24*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetChnParam_x19f28:
    /*00019f28*/ MOVW        R2, #1002                   @ 0x3ea 
    /*00019f2c*/ CMP         R3, R2 
    /*00019f30*/ BEQ         VencGetChnParam_x1a024
    /*00019f34*/ MOVW        R2, #1006                   @ 0x3ee 
    /*00019f38*/ CMP         R3, R2 
    /*00019f3c*/ BNE         VencGetChnParam_x19ff0
    /*00019f40*/ MOV         R0, #44                     @ 0x2c 
    /*00019f44*/ BL          0x0000000000019F44          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019f48*/ MOV         R1, R6 
    /*00019f4c*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*00019f50*/ MOV         R0, R4 
    /*00019f54*/ BLX         R3 
    /*00019f58*/ MOV         R5, R0 
    VencGetChnParam_x19f5c:
    /*00019f5c*/ LDR         R0, [R7, #12] 
    /*00019f60*/ ADD         R3, R7, #12288              @ 0x3000 
    /*00019f64*/ ADD         R1, R7, #12736              @ 0x31c0 
    /*00019f68*/ MOV         R2, #20 
    /*00019f6c*/ ADD         R1, R1, #60                 @ 0x3c 
    /*00019f70*/ STR         R0, [R6, #4] 
    /*00019f74*/ ADD         R0, R6, #16 
    /*00019f78*/ LDR         R3, [R3, #1104]             @ 0x450 
    /*00019f7c*/ STR         R3, [R6, #12] 
    /*00019f80*/ BL          0x0000000000019F80          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019f84*/ ADD         R1, R7, #12352              @ 0x3040 
    /*00019f88*/ ADD         R1, R1, #24 
    /*00019f8c*/ MOV         R2, #8 
    /*00019f90*/ ADD         R0, R6, #36                 @ 0x24 
    /*00019f94*/ BL          0x0000000000019F94          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019f98*/ MOV         R0, R8 
    /*00019f9c*/ BL          0x0000000000019F9C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00019fa0*/ CMP         R5, #0 
    /*00019fa4*/ BEQ         VencGetChnParam_x19f1c
    /*00019fa8*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*00019fac*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*00019fb0*/ ORR         R5, R5, #524288             @ 0x80000 
    /*00019fb4*/ MOV         R0, R5 
    /*00019fb8*/ ADD         SP, SP, #12 
    /*00019fbc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetChnParam_x19fc0:
    /*00019fc0*/ BL          0x00000000000002C8 
    /*00019fc4*/ SUBS        R5, R0, #0 
    /*00019fc8*/ BNE         VencGetChnParam_x19f1c
    /*00019fcc*/ B           VencGetChnParam_x19e70
    VencGetChnParam_x19fd0:
    /*00019fd0*/ MOV         R0, #13 
    /*00019fd4*/ BL          0x0000000000019FD4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019fd8*/ MOV         R1, R6 
    /*00019fdc*/ LDR         R3, [R0, #240]              @ 0xf0 
    /*00019fe0*/ MOV         R0, R4 
    /*00019fe4*/ BLX         R3 
    /*00019fe8*/ MOV         R5, R0 
    /*00019fec*/ B           VencGetChnParam_x19f5c
    VencGetChnParam_x19ff0:
    /*00019ff0*/ MOVW        R3, #13777                  @ 0x35d1 
    /*00019ff4*/ MOV         R1, #8 
    /*00019ff8*/ STR         R3, [SP] 
    /*00019ffc*/ MOVW        R2, #0                      @ .LC497 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6cfc] 
    /*0001a000*/ LDR         R3, [PC, #128]              @ 0x000000000001a088 
    /*0001a004*/ MOVT        R2, #0                      @ .LC497 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6cfc] 
    /*0001a008*/ MOV         R0, #3 
    /*0001a00c*/ MOVW        R5, #32776                  @ 0x8008 
    /*0001a010*/ BL          0x000000000001A010          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a014*/ MOV         R0, R8 
    /*0001a018*/ BL          0x000000000001A018          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001a01c*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001a020*/ B           VencGetChnParam_x19f1c
    VencGetChnParam_x1a024:
    /*0001a024*/ MOV         R0, #11 
    /*0001a028*/ BL          0x000000000001A028          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a02c*/ MOV         R1, R6 
    /*0001a030*/ LDR         R3, [R0, #116]              @ 0x74 
    /*0001a034*/ MOV         R0, R4 
    /*0001a038*/ BLX         R3 
    /*0001a03c*/ MOV         R5, R0 
    /*0001a040*/ B           VencGetChnParam_x19f5c
    VencGetChnParam_x1a044:
    /*0001a044*/ MOVW        R3, #13744                  @ 0x35b0 
    /*0001a048*/ MOV         R1, #8 
    /*0001a04c*/ STR         R3, [SP] 
    /*0001a050*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0001a054*/ LDR         R3, [PC, #44]               @ 0x000000000001a088 
    /*0001a058*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001a05c*/ STR         R4, [SP, #4] 
    /*0001a060*/ MOV         R0, #3 
    /*0001a064*/ BL          0x000000000001A064          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a068*/ MOV         R0, R8 
    /*0001a06c*/ MOVW        R5, #32773                  @ 0x8005 
    /*0001a070*/ BL          0x000000000001A070          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001a074*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001a078*/ B           VencGetChnParam_x19f1c
    VencGetChnParam_x1a07c:
    /*0001a07c*/ MOV         R5, #65024                  @ 0xfe00 
    /*0001a080*/ MOVT        R5, #65535                  @ 0xffff 
    /*0001a084*/ B           VencGetChnParam_x19f1c
    /*0001a088*/ STRDEQ      R0, [R0], -IP 
FUNC_END VencGetChnParam


FUNC_BEGIN VencGetForeground
    /*0001a08c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001a090*/ SUBS        R7, R1, #0 
    /*0001a094*/ SUB         SP, SP, #12 
    /*0001a098*/ MOV         R4, R0 
    /*0001a09c*/ BEQ         VencGetForeground_x1a1a0
    VencGetForeground_x1a0a0:
    /*0001a0a0*/ CMP         R4, #0 
    /*0001a0a4*/ BLT         VencGetForeground_x1a140
    /*0001a0a8*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0001a0ac*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0001a0b0*/ LDR         R3, [R3] 
    /*0001a0b4*/ CMP         R4, R3 
    /*0001a0b8*/ BCS         VencGetForeground_x1a140
    VencGetForeground_x1a0bc:
    /*0001a0bc*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0001a0c0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001a0c4*/ MUL         R5, R5, R4 
    /*0001a0c8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001a0cc*/ LDR         R8, [R3] 
    /*0001a0d0*/ ADD         R9, R8, R5 
    /*0001a0d4*/ ADD         R6, R9, #12416              @ 0x3080 
    /*0001a0d8*/ ADD         R6, R6, #16 
    /*0001a0dc*/ MOV         R0, R6 
    /*0001a0e0*/ BL          0x000000000001A0E0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001a0e4*/ CMP         R0, #0 
    /*0001a0e8*/ BNE         VencGetForeground_x1a1e8
    /*0001a0ec*/ LDR         R3, [R8, R5] 
    /*0001a0f0*/ CMP         R3, #1 
    /*0001a0f4*/ BNE         VencGetForeground_x1a1b0
    /*0001a0f8*/ LDR         R3, [R9, #4] 
    /*0001a0fc*/ MOVW        R2, #265                    @ 0x109 
    /*0001a100*/ CMP         R3, R2 
    /*0001a104*/ CMPNE       R3, #96                     @ 0x60 
    /*0001a108*/ BNE         VencGetForeground_x1a1f4
    /*0001a10c*/ MOV         R0, #19 
    /*0001a110*/ BL          0x000000000001A110          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a114*/ MOV         R1, R7 
    /*0001a118*/ LDR         R3, [R0, #124]              @ 0x7c 
    /*0001a11c*/ MOV         R0, R4 
    /*0001a120*/ BLX         R3 
    /*0001a124*/ SUBS        R5, R0, #0 
    /*0001a128*/ BNE         VencGetForeground_x1a15c
    /*0001a12c*/ MOV         R0, R6 
    /*0001a130*/ BL          0x000000000001A130          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001a134*/ MOV         R0, R5 
    /*0001a138*/ ADD         SP, SP, #12 
    /*0001a13c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetForeground_x1a140:
    /*0001a140*/ MOV         R0, R4 
    /*0001a144*/ BL          0x0000000000000304 
    /*0001a148*/ SUBS        R5, R0, #0 
    /*0001a14c*/ BEQ         VencGetForeground_x1a0bc
    VencGetForeground_x1a150:
    /*0001a150*/ MOV         R0, R5 
    /*0001a154*/ ADD         SP, SP, #12 
    /*0001a158*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetForeground_x1a15c:
    /*0001a15c*/ MOV         R1, #8 
    /*0001a160*/ STR         R4, [SP, #4] 
    /*0001a164*/ MOV         R3, #13824                  @ 0x3600 
    /*0001a168*/ MOVW        R2, #0                      @ .LC499 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d80] 
    /*0001a16c*/ STR         R3, [SP] 
    /*0001a170*/ MOVT        R2, #0                      @ .LC499 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d80] 
    /*0001a174*/ LDR         R3, [PC, #176]              @ 0x000000000001a22c 
    /*0001a178*/ MOV         R0, #3 
    /*0001a17c*/ BL          0x000000000001A17C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a180*/ MOV         R0, R6 
    /*0001a184*/ BL          0x000000000001A184          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001a188*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*0001a18c*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*0001a190*/ ORR         R5, R5, #524288             @ 0x80000 
    /*0001a194*/ MOV         R0, R5 
    /*0001a198*/ ADD         SP, SP, #12 
    /*0001a19c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetForeground_x1a1a0:
    /*0001a1a0*/ BL          0x00000000000002C8 
    /*0001a1a4*/ SUBS        R5, R0, #0 
    /*0001a1a8*/ BNE         VencGetForeground_x1a150
    /*0001a1ac*/ B           VencGetForeground_x1a0a0
    VencGetForeground_x1a1b0:
    /*0001a1b0*/ MOVW        R3, #13809                  @ 0x35f1 
    /*0001a1b4*/ MOV         R1, #8 
    /*0001a1b8*/ STR         R3, [SP] 
    /*0001a1bc*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0001a1c0*/ LDR         R3, [PC, #100]              @ 0x000000000001a22c 
    /*0001a1c4*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001a1c8*/ STR         R4, [SP, #4] 
    /*0001a1cc*/ MOV         R0, #3 
    /*0001a1d0*/ BL          0x000000000001A1D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a1d4*/ MOV         R0, R6 
    /*0001a1d8*/ MOVW        R5, #32773                  @ 0x8005 
    /*0001a1dc*/ BL          0x000000000001A1DC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001a1e0*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001a1e4*/ B           VencGetForeground_x1a150
    VencGetForeground_x1a1e8:
    /*0001a1e8*/ MOV         R5, #65024                  @ 0xfe00 
    /*0001a1ec*/ MOVT        R5, #65535                  @ 0xffff 
    /*0001a1f0*/ B           VencGetForeground_x1a150
    VencGetForeground_x1a1f4:
    /*0001a1f4*/ STR         R3, [SP, #4] 
    /*0001a1f8*/ MOV         R1, #8 
    /*0001a1fc*/ MOVW        R3, #13816                  @ 0x35f8 
    /*0001a200*/ MOVW        R2, #0                      @ .LC498 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d34] 
    /*0001a204*/ STR         R3, [SP] 
    /*0001a208*/ MOVT        R2, #0                      @ .LC498 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d34] 
    /*0001a20c*/ LDR         R3, [PC, #24]               @ 0x000000000001a22c 
    /*0001a210*/ MOV         R0, #3 
    /*0001a214*/ BL          0x000000000001A214          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a218*/ MOV         R0, R6 
    /*0001a21c*/ MOVW        R5, #32776                  @ 0x8008 
    /*0001a220*/ BL          0x000000000001A220          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001a224*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001a228*/ B           VencGetForeground_x1a150
    /*0001a22c*/ ANDEQ       R0, R0, IP, LSL #26 
FUNC_END VencGetForeground


FUNC_BEGIN VencCheckForeGround
    /*0001a230*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001a234*/ SUB         SP, SP, #20 
    /*0001a238*/ LDR         R3, [R1] 
    /*0001a23c*/ CMP         R3, #1 
    /*0001a240*/ BHI         VencCheckForeGround_x1a334
    /*0001a244*/ BEQ         VencCheckForeGround_x1a254
    VencCheckForeGround_x1a248:
    /*0001a248*/ MOV         R0, #0 
    VencCheckForeGround_x1a24c:
    /*0001a24c*/ ADD         SP, SP, #20 
    /*0001a250*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VencCheckForeGround_x1a254:
    /*0001a254*/ LDR         R3, [R1, #4] 
    /*0001a258*/ CMP         R3, #16 
    /*0001a25c*/ BHI         VencCheckForeGround_x1a350
    /*0001a260*/ ADD         R2, R1, #12 
    /*0001a264*/ ADD         IP, R1, #76                 @ 0x4c 
    /*0001a268*/ MOV         R3, #0 
    VencCheckForeGround_x1a26c:
    /*0001a26c*/ LDR         LR, [R2, #4]! 
    /*0001a270*/ CMP         LR, #255                    @ 0xff 
    /*0001a274*/ BHI         VencCheckForeGround_x1a2dc
    /*0001a278*/ LDR         LR, [IP, #4]! 
    /*0001a27c*/ CMP         LR, #255                    @ 0xff 
    /*0001a280*/ BHI         VencCheckForeGround_x1a318
    /*0001a284*/ ADD         R3, R3, #1 
    /*0001a288*/ CMP         R3, #16 
    /*0001a28c*/ BNE         VencCheckForeGround_x1a26c
    /*0001a290*/ LDR         R3, [R1, #8] 
    /*0001a294*/ CMP         R3, #15 
    /*0001a298*/ BHI         VencCheckForeGround_x1a36c
    /*0001a29c*/ LDR         R3, [R1, #12] 
    /*0001a2a0*/ CMP         R3, #255                    @ 0xff 
    /*0001a2a4*/ BLS         VencCheckForeGround_x1a248
    /*0001a2a8*/ MOVW        R2, #0                      @ .LC504 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6f7c] 
    /*0001a2ac*/ MOVT        R2, #0                      @ .LC504 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6f7c] 
    /*0001a2b0*/ STR         R3, [SP, #8] 
    /*0001a2b4*/ MOVW        R3, #13871                  @ 0x362f 
    /*0001a2b8*/ STR         R0, [SP, #4] 
    /*0001a2bc*/ STR         R3, [SP] 
    VencCheckForeGround_x1a2c0:
    /*0001a2c0*/ LDR         R3, [PC, #192]              @ 0x000000000001a388 
    /*0001a2c4*/ MOV         R1, #8 
    /*0001a2c8*/ MOV         R0, #3 
    /*0001a2cc*/ BL          0x000000000001A2CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a2d0*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001a2d4*/ MOVT        R0, #40968                  @ 0xa008 
    /*0001a2d8*/ B           VencCheckForeGround_x1a24c
    VencCheckForeGround_x1a2dc:
    /*0001a2dc*/ MOVW        R2, #0                      @ .LC501 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e38] 
    /*0001a2e0*/ MOVT        R2, #0                      @ .LC501 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e38] 
    /*0001a2e4*/ MOVW        R1, #13853                  @ 0x361d 
    /*0001a2e8*/ STR         LR, [SP, #12] 
    /*0001a2ec*/ STR         R3, [SP, #8] 
    /*0001a2f0*/ STR         R0, [SP, #4] 
    VencCheckForeGround_x1a2f4:
    /*0001a2f4*/ STR         R1, [SP] 
    /*0001a2f8*/ MOV         R0, #3 
    /*0001a2fc*/ MOV         R1, #8 
    /*0001a300*/ LDR         R3, [PC, #128]              @ 0x000000000001a388 
    /*0001a304*/ BL          0x000000000001A304          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a308*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001a30c*/ MOVT        R0, #40968                  @ 0xa008 
    /*0001a310*/ ADD         SP, SP, #20 
    /*0001a314*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VencCheckForeGround_x1a318:
    /*0001a318*/ MOVW        R2, #0                      @ .LC502 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6ea4] 
    /*0001a31c*/ STR         LR, [SP, #12] 
    /*0001a320*/ MOVW        R1, #13858                  @ 0x3622 
    /*0001a324*/ STR         R3, [SP, #8] 
    /*0001a328*/ STR         R0, [SP, #4] 
    /*0001a32c*/ MOVT        R2, #0                      @ .LC502 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6ea4] 
    /*0001a330*/ B           VencCheckForeGround_x1a2f4
    VencCheckForeGround_x1a334:
    /*0001a334*/ STR         R3, [SP, #8] 
    /*0001a338*/ MOVW        R2, #0                      @ .LC500 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6dc4] 
    /*0001a33c*/ MOVW        R3, #13838                  @ 0x360e 
    /*0001a340*/ STR         R0, [SP, #4] 
    /*0001a344*/ STR         R3, [SP] 
    /*0001a348*/ MOVT        R2, #0                      @ .LC500 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6dc4] 
    /*0001a34c*/ B           VencCheckForeGround_x1a2c0
    VencCheckForeGround_x1a350:
    /*0001a350*/ STR         R3, [SP, #8] 
    /*0001a354*/ MOVW        R2, #0                      @ .LC505 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6fec] 
    /*0001a358*/ MOVW        R3, #13846                  @ 0x3616 
    /*0001a35c*/ STR         R0, [SP, #4] 
    /*0001a360*/ STR         R3, [SP] 
    /*0001a364*/ MOVT        R2, #0                      @ .LC505 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6fec] 
    /*0001a368*/ B           VencCheckForeGround_x1a2c0
    VencCheckForeGround_x1a36c:
    /*0001a36c*/ STR         R3, [SP, #8] 
    /*0001a370*/ MOVW        R2, #0                      @ .LC503 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6f10] 
    /*0001a374*/ MOVW        R3, #13865                  @ 0x3629 
    /*0001a378*/ STR         R0, [SP, #4] 
    /*0001a37c*/ STR         R3, [SP] 
    /*0001a380*/ MOVT        R2, #0                      @ .LC503 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6f10] 
    /*0001a384*/ B           VencCheckForeGround_x1a2c0
    /*0001a388*/ ANDEQ       R0, R0, R0, LSR #26 
FUNC_END VencCheckForeGround


FUNC_BEGIN VencSetForeground
    /*0001a38c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001a390*/ SUBS        R6, R1, #0 
    /*0001a394*/ SUB         SP, SP, #12 
    /*0001a398*/ MOV         R4, R0 
    /*0001a39c*/ BEQ         VencSetForeground_x1a4ac
    VencSetForeground_x1a3a0:
    /*0001a3a0*/ CMP         R4, #0 
    /*0001a3a4*/ BLT         VencSetForeground_x1a454
    /*0001a3a8*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0001a3ac*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0001a3b0*/ LDR         R3, [R3] 
    /*0001a3b4*/ CMP         R4, R3 
    /*0001a3b8*/ BCS         VencSetForeground_x1a454
    VencSetForeground_x1a3bc:
    /*0001a3bc*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0001a3c0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001a3c4*/ MUL         R5, R5, R4 
    /*0001a3c8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001a3cc*/ LDR         R8, [R3] 
    /*0001a3d0*/ ADD         R9, R8, R5 
    /*0001a3d4*/ ADD         R7, R9, #12416              @ 0x3080 
    /*0001a3d8*/ ADD         R7, R7, #16 
    /*0001a3dc*/ MOV         R0, R7 
    /*0001a3e0*/ BL          0x000000000001A3E0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001a3e4*/ CMP         R0, #0 
    /*0001a3e8*/ BNE         VencSetForeground_x1a4f4
    /*0001a3ec*/ LDR         R3, [R8, R5] 
    /*0001a3f0*/ CMP         R3, #1 
    /*0001a3f4*/ BNE         VencSetForeground_x1a4bc
    /*0001a3f8*/ LDR         R3, [R9, #4] 
    /*0001a3fc*/ MOVW        R2, #265                    @ 0x109 
    /*0001a400*/ CMP         R3, R2 
    /*0001a404*/ CMPNE       R3, #96                     @ 0x60 
    /*0001a408*/ BNE         VencSetForeground_x1a500
    /*0001a40c*/ MOV         R1, R6 
    /*0001a410*/ MOV         R0, R4 
    /*0001a414*/ BL          0x000000000001A414          @ VencCheckForeGround [R_ARM_CALL: .text+0x1a230] 
    /*0001a418*/ SUBS        R5, R0, #0 
    /*0001a41c*/ BNE         VencSetForeground_x1a440
    /*0001a420*/ MOV         R0, #19 
    /*0001a424*/ BL          0x000000000001A424          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a428*/ MOV         R1, R6 
    /*0001a42c*/ LDR         R3, [R0, #120]              @ 0x78 
    /*0001a430*/ MOV         R0, R4 
    /*0001a434*/ BLX         R3 
    /*0001a438*/ SUBS        R5, R0, #0 
    /*0001a43c*/ BNE         VencSetForeground_x1a470
    VencSetForeground_x1a440:
    /*0001a440*/ MOV         R0, R7 
    /*0001a444*/ BL          0x000000000001A444          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001a448*/ MOV         R0, R5 
    /*0001a44c*/ ADD         SP, SP, #12 
    /*0001a450*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetForeground_x1a454:
    /*0001a454*/ MOV         R0, R4 
    /*0001a458*/ BL          0x0000000000000304 
    /*0001a45c*/ SUBS        R5, R0, #0 
    /*0001a460*/ BEQ         VencSetForeground_x1a3bc
    VencSetForeground_x1a464:
    /*0001a464*/ MOV         R0, R5 
    /*0001a468*/ ADD         SP, SP, #12 
    /*0001a46c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetForeground_x1a470:
    /*0001a470*/ MOVW        R3, #13919                  @ 0x365f 
    /*0001a474*/ MOV         R1, #8 
    /*0001a478*/ STR         R3, [SP] 
    /*0001a47c*/ MOVW        R2, #0                      @ .LC506 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x705c] 
    /*0001a480*/ LDR         R3, [PC, #176]              @ 0x000000000001a538 
    /*0001a484*/ MOVT        R2, #0                      @ .LC506 [R_ARM_MOVT_ABS: .rodata.str1.4+0x705c] 
    /*0001a488*/ STR         R4, [SP, #4] 
    /*0001a48c*/ MOV         R0, #3 
    /*0001a490*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*0001a494*/ BL          0x000000000001A494          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a498*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*0001a49c*/ MOV         R0, R7 
    /*0001a4a0*/ BL          0x000000000001A4A0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001a4a4*/ ORR         R5, R5, #524288             @ 0x80000 
    /*0001a4a8*/ B           VencSetForeground_x1a464
    VencSetForeground_x1a4ac:
    /*0001a4ac*/ BL          0x00000000000002C8 
    /*0001a4b0*/ SUBS        R5, R0, #0 
    /*0001a4b4*/ BNE         VencSetForeground_x1a464
    /*0001a4b8*/ B           VencSetForeground_x1a3a0
    VencSetForeground_x1a4bc:
    /*0001a4bc*/ MOVW        R3, #13897                  @ 0x3649 
    /*0001a4c0*/ MOV         R1, #8 
    /*0001a4c4*/ STR         R3, [SP] 
    /*0001a4c8*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0001a4cc*/ LDR         R3, [PC, #100]              @ 0x000000000001a538 
    /*0001a4d0*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001a4d4*/ STR         R4, [SP, #4] 
    /*0001a4d8*/ MOV         R0, #3 
    /*0001a4dc*/ BL          0x000000000001A4DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a4e0*/ MOV         R0, R7 
    /*0001a4e4*/ MOVW        R5, #32773                  @ 0x8005 
    /*0001a4e8*/ BL          0x000000000001A4E8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001a4ec*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001a4f0*/ B           VencSetForeground_x1a464
    VencSetForeground_x1a4f4:
    /*0001a4f4*/ MOV         R5, #65024                  @ 0xfe00 
    /*0001a4f8*/ MOVT        R5, #65535                  @ 0xffff 
    /*0001a4fc*/ B           VencSetForeground_x1a464
    VencSetForeground_x1a500:
    /*0001a500*/ STR         R3, [SP, #4] 
    /*0001a504*/ MOV         R1, #8 
    /*0001a508*/ MOVW        R3, #13904                  @ 0x3650 
    /*0001a50c*/ MOVW        R2, #0                      @ .LC498 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d34] 
    /*0001a510*/ STR         R3, [SP] 
    /*0001a514*/ MOVT        R2, #0                      @ .LC498 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d34] 
    /*0001a518*/ LDR         R3, [PC, #24]               @ 0x000000000001a538 
    /*0001a51c*/ MOV         R0, #3 
    /*0001a520*/ BL          0x000000000001A520          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a524*/ MOV         R0, R7 
    /*0001a528*/ MOVW        R5, #32776                  @ 0x8008 
    /*0001a52c*/ BL          0x000000000001A52C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001a530*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001a534*/ B           VencSetForeground_x1a464
    /*0001a538*/ ANDEQ       R0, R0, R4, LSR SP 
FUNC_END VencSetForeground


FUNC_BEGIN VencCheckPrediction
    /*0001a53c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001a540*/ SUB         SP, SP, #28 
    /*0001a544*/ LDR         R3, [R1] 
    /*0001a548*/ CMP         R3, #1 
    /*0001a54c*/ BHI         VencCheckPrediction_x1a5f4
    /*0001a550*/ BEQ         VencCheckPrediction_x1a560
    VencCheckPrediction_x1a554:
    /*0001a554*/ MOV         R0, #0 
    VencCheckPrediction_x1a558:
    /*0001a558*/ ADD         SP, SP, #28 
    /*0001a55c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VencCheckPrediction_x1a560:
    /*0001a560*/ LDR         R3, [R1, #4] 
    /*0001a564*/ CMP         R3, #15 
    /*0001a568*/ BHI         VencCheckPrediction_x1a638
    /*0001a56c*/ LDR         R3, [R1, #8] 
    /*0001a570*/ CMP         R3, #15 
    /*0001a574*/ BHI         VencCheckPrediction_x1a654
    /*0001a578*/ LDR         R3, [R1, #12] 
    /*0001a57c*/ CMP         R3, #15 
    /*0001a580*/ BHI         VencCheckPrediction_x1a670
    /*0001a584*/ LDR         R3, [R1, #16] 
    /*0001a588*/ CMP         R3, #15 
    /*0001a58c*/ BHI         VencCheckPrediction_x1a68c
    /*0001a590*/ LDR         R3, [R1, #20] 
    /*0001a594*/ CMP         R3, #15 
    /*0001a598*/ BHI         VencCheckPrediction_x1a6a8
    /*0001a59c*/ LDR         R3, [R1, #24] 
    /*0001a5a0*/ CMP         R3, #15 
    /*0001a5a4*/ BHI         VencCheckPrediction_x1a6c4
    /*0001a5a8*/ LDR         R3, [R1, #28] 
    /*0001a5ac*/ CMP         R3, #15 
    /*0001a5b0*/ BHI         VencCheckPrediction_x1a6e0
    /*0001a5b4*/ LDR         R3, [R1, #32] 
    /*0001a5b8*/ CMP         R3, #15 
    /*0001a5bc*/ BLS         VencCheckPrediction_x1a554
    /*0001a5c0*/ MOVW        R2, #0                      @ .LC515 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7380] 
    /*0001a5c4*/ MOVT        R2, #0                      @ .LC515 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7380] 
    /*0001a5c8*/ STR         R3, [SP, #8] 
    /*0001a5cc*/ MOVW        R3, #13981                  @ 0x369d 
    /*0001a5d0*/ STR         R0, [SP, #4] 
    /*0001a5d4*/ STR         R3, [SP] 
    VencCheckPrediction_x1a5d8:
    /*0001a5d8*/ LDR         R3, [PC, #284]              @ 0x000000000001a6fc 
    /*0001a5dc*/ MOV         R1, #8 
    /*0001a5e0*/ MOV         R0, #3 
    /*0001a5e4*/ BL          0x000000000001A5E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a5e8*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001a5ec*/ MOVT        R0, #40968                  @ 0xa008 
    /*0001a5f0*/ B           VencCheckPrediction_x1a558
    VencCheckPrediction_x1a5f4:
    /*0001a5f4*/ STR         R3, [SP, #8] 
    /*0001a5f8*/ MOV         R2, #0 
    /*0001a5fc*/ MOV         R3, #1 
    /*0001a600*/ STR         R0, [SP, #4] 
    /*0001a604*/ STR         R3, [SP, #16] 
    /*0001a608*/ MOV         R1, #8 
    /*0001a60c*/ MOVW        R3, #13931                  @ 0x366b 
    /*0001a610*/ STR         R2, [SP, #12] 
    /*0001a614*/ STR         R3, [SP] 
    /*0001a618*/ MOVW        R2, #0                      @ .LC507 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x70a0] 
    /*0001a61c*/ LDR         R3, [PC, #216]              @ 0x000000000001a6fc 
    /*0001a620*/ MOVT        R2, #0                      @ .LC507 [R_ARM_MOVT_ABS: .rodata.str1.4+0x70a0] 
    /*0001a624*/ MOV         R0, #3 
    /*0001a628*/ BL          0x000000000001A628          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a62c*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001a630*/ MOVT        R0, #40968                  @ 0xa008 
    /*0001a634*/ B           VencCheckPrediction_x1a558
    VencCheckPrediction_x1a638:
    /*0001a638*/ STR         R3, [SP, #8] 
    /*0001a63c*/ MOVW        R2, #0                      @ .LC508 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x70fc] 
    /*0001a640*/ MOVW        R3, #13939                  @ 0x3673 
    /*0001a644*/ STR         R0, [SP, #4] 
    /*0001a648*/ STR         R3, [SP] 
    /*0001a64c*/ MOVT        R2, #0                      @ .LC508 [R_ARM_MOVT_ABS: .rodata.str1.4+0x70fc] 
    /*0001a650*/ B           VencCheckPrediction_x1a5d8
    VencCheckPrediction_x1a654:
    /*0001a654*/ STR         R3, [SP, #8] 
    /*0001a658*/ MOVW        R2, #0                      @ .LC509 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7158] 
    /*0001a65c*/ MOVW        R3, #13945                  @ 0x3679 
    /*0001a660*/ STR         R0, [SP, #4] 
    /*0001a664*/ STR         R3, [SP] 
    /*0001a668*/ MOVT        R2, #0                      @ .LC509 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7158] 
    /*0001a66c*/ B           VencCheckPrediction_x1a5d8
    VencCheckPrediction_x1a670:
    /*0001a670*/ STR         R3, [SP, #8] 
    /*0001a674*/ MOVW        R2, #0                      @ .LC510 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x71b4] 
    /*0001a678*/ MOVW        R3, #13951                  @ 0x367f 
    /*0001a67c*/ STR         R0, [SP, #4] 
    /*0001a680*/ STR         R3, [SP] 
    /*0001a684*/ MOVT        R2, #0                      @ .LC510 [R_ARM_MOVT_ABS: .rodata.str1.4+0x71b4] 
    /*0001a688*/ B           VencCheckPrediction_x1a5d8
    VencCheckPrediction_x1a68c:
    /*0001a68c*/ STR         R3, [SP, #8] 
    /*0001a690*/ MOVW        R2, #0                      @ .LC511 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7210] 
    /*0001a694*/ MOVW        R3, #13957                  @ 0x3685 
    /*0001a698*/ STR         R0, [SP, #4] 
    /*0001a69c*/ STR         R3, [SP] 
    /*0001a6a0*/ MOVT        R2, #0                      @ .LC511 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7210] 
    /*0001a6a4*/ B           VencCheckPrediction_x1a5d8
    VencCheckPrediction_x1a6a8:
    /*0001a6a8*/ STR         R3, [SP, #8] 
    /*0001a6ac*/ MOVW        R2, #0                      @ .LC512 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x726c] 
    /*0001a6b0*/ MOVW        R3, #13963                  @ 0x368b 
    /*0001a6b4*/ STR         R0, [SP, #4] 
    /*0001a6b8*/ STR         R3, [SP] 
    /*0001a6bc*/ MOVT        R2, #0                      @ .LC512 [R_ARM_MOVT_ABS: .rodata.str1.4+0x726c] 
    /*0001a6c0*/ B           VencCheckPrediction_x1a5d8
    VencCheckPrediction_x1a6c4:
    /*0001a6c4*/ STR         R3, [SP, #8] 
    /*0001a6c8*/ MOVW        R2, #0                      @ .LC513 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x72c8] 
    /*0001a6cc*/ MOVW        R3, #13969                  @ 0x3691 
    /*0001a6d0*/ STR         R0, [SP, #4] 
    /*0001a6d4*/ STR         R3, [SP] 
    /*0001a6d8*/ MOVT        R2, #0                      @ .LC513 [R_ARM_MOVT_ABS: .rodata.str1.4+0x72c8] 
    /*0001a6dc*/ B           VencCheckPrediction_x1a5d8
    VencCheckPrediction_x1a6e0:
    /*0001a6e0*/ STR         R3, [SP, #8] 
    /*0001a6e4*/ MOVW        R2, #0                      @ .LC514 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7324] 
    /*0001a6e8*/ MOVW        R3, #13975                  @ 0x3697 
    /*0001a6ec*/ STR         R0, [SP, #4] 
    /*0001a6f0*/ STR         R3, [SP] 
    /*0001a6f4*/ MOVT        R2, #0                      @ .LC514 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7324] 
    /*0001a6f8*/ B           VencCheckPrediction_x1a5d8
    /*0001a6fc*/ ANDEQ       R0, R0, R8, ASR #26 
FUNC_END VencCheckPrediction


FUNC_BEGIN VencSetPrediction
    /*0001a700*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001a704*/ SUBS        R6, R1, #0 
    /*0001a708*/ SUB         SP, SP, #12 
    /*0001a70c*/ MOV         R4, R0 
    /*0001a710*/ BEQ         VencSetPrediction_x1a800
    VencSetPrediction_x1a714:
    /*0001a714*/ CMP         R4, #0 
    /*0001a718*/ BLT         VencSetPrediction_x1a7e4
    /*0001a71c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0001a720*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0001a724*/ LDR         R3, [R3] 
    /*0001a728*/ CMP         R4, R3 
    /*0001a72c*/ BCS         VencSetPrediction_x1a7e4
    VencSetPrediction_x1a730:
    /*0001a730*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0001a734*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001a738*/ MUL         R5, R5, R4 
    /*0001a73c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001a740*/ LDR         R9, [R3] 
    /*0001a744*/ ADD         R8, R9, R5 
    /*0001a748*/ ADD         R7, R8, #12416              @ 0x3080 
    /*0001a74c*/ ADD         R7, R7, #16 
    /*0001a750*/ MOV         R0, R7 
    /*0001a754*/ BL          0x000000000001A754          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001a758*/ CMP         R0, #0 
    /*0001a75c*/ BNE         VencSetPrediction_x1a874
    /*0001a760*/ LDR         R3, [R9, R5] 
    /*0001a764*/ CMP         R3, #1 
    /*0001a768*/ BNE         VencSetPrediction_x1a83c
    /*0001a76c*/ LDR         R3, [R8, #4] 
    /*0001a770*/ MOVW        R9, #265                    @ 0x109 
    /*0001a774*/ CMP         R3, R9 
    /*0001a778*/ CMPNE       R3, #96                     @ 0x60 
    /*0001a77c*/ BNE         VencSetPrediction_x1a880
    /*0001a780*/ MOV         R1, R6 
    /*0001a784*/ MOV         R0, R4 
    /*0001a788*/ BL          0x000000000001A788          @ VencCheckPrediction [R_ARM_CALL: .text+0x1a53c] 
    /*0001a78c*/ SUBS        R5, R0, #0 
    /*0001a790*/ BNE         VencSetPrediction_x1a810
    /*0001a794*/ LDR         R3, [R8, #4] 
    /*0001a798*/ CMP         R3, R9 
    /*0001a79c*/ BEQ         VencSetPrediction_x1a81c
    /*0001a7a0*/ MOV         R0, #10 
    /*0001a7a4*/ BL          0x000000000001A7A4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a7a8*/ MOV         R1, R6 
    /*0001a7ac*/ LDR         R3, [R0, #240]              @ 0xf0 
    /*0001a7b0*/ MOV         R0, R4 
    /*0001a7b4*/ BLX         R3 
    /*0001a7b8*/ MOV         R5, R0 
    VencSetPrediction_x1a7bc:
    /*0001a7bc*/ MOV         R0, R7 
    /*0001a7c0*/ BL          0x000000000001A7C0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001a7c4*/ CMP         R5, #0 
    /*0001a7c8*/ BEQ         VencSetPrediction_x1a7f4
    /*0001a7cc*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*0001a7d0*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*0001a7d4*/ ORR         R5, R5, #524288             @ 0x80000 
    /*0001a7d8*/ MOV         R0, R5 
    /*0001a7dc*/ ADD         SP, SP, #12 
    /*0001a7e0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetPrediction_x1a7e4:
    /*0001a7e4*/ MOV         R0, R4 
    /*0001a7e8*/ BL          0x0000000000000304 
    /*0001a7ec*/ SUBS        R5, R0, #0 
    /*0001a7f0*/ BEQ         VencSetPrediction_x1a730
    VencSetPrediction_x1a7f4:
    /*0001a7f4*/ MOV         R0, R5 
    /*0001a7f8*/ ADD         SP, SP, #12 
    /*0001a7fc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetPrediction_x1a800:
    /*0001a800*/ BL          0x00000000000002C8 
    /*0001a804*/ SUBS        R5, R0, #0 
    /*0001a808*/ BNE         VencSetPrediction_x1a7f4
    /*0001a80c*/ B           VencSetPrediction_x1a714
    VencSetPrediction_x1a810:
    /*0001a810*/ MOV         R0, R7 
    /*0001a814*/ BL          0x000000000001A814          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001a818*/ B           VencSetPrediction_x1a7f4
    VencSetPrediction_x1a81c:
    /*0001a81c*/ MOV         R0, #13 
    /*0001a820*/ BL          0x000000000001A820          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a824*/ MOV         R1, R6 
    /*0001a828*/ LDR         R3, [R0, #252]              @ 0xfc 
    /*0001a82c*/ MOV         R0, R4 
    /*0001a830*/ BLX         R3 
    /*0001a834*/ MOV         R5, R0 
    /*0001a838*/ B           VencSetPrediction_x1a7bc
    VencSetPrediction_x1a83c:
    /*0001a83c*/ MOVW        R3, #14004                  @ 0x36b4 
    /*0001a840*/ MOV         R1, #8 
    /*0001a844*/ STR         R3, [SP] 
    /*0001a848*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0001a84c*/ LDR         R3, [PC, #100]              @ 0x000000000001a8b8 
    /*0001a850*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001a854*/ STR         R4, [SP, #4] 
    /*0001a858*/ MOV         R0, #3 
    /*0001a85c*/ BL          0x000000000001A85C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a860*/ MOV         R0, R7 
    /*0001a864*/ MOVW        R5, #32773                  @ 0x8005 
    /*0001a868*/ BL          0x000000000001A868          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001a86c*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001a870*/ B           VencSetPrediction_x1a7f4
    VencSetPrediction_x1a874:
    /*0001a874*/ MOV         R5, #65024                  @ 0xfe00 
    /*0001a878*/ MOVT        R5, #65535                  @ 0xffff 
    /*0001a87c*/ B           VencSetPrediction_x1a7f4
    VencSetPrediction_x1a880:
    /*0001a880*/ STR         R3, [SP, #4] 
    /*0001a884*/ MOV         R1, #8 
    /*0001a888*/ MOVW        R3, #14011                  @ 0x36bb 
    /*0001a88c*/ MOVW        R2, #0                      @ .LC516 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x73dc] 
    /*0001a890*/ STR         R3, [SP] 
    /*0001a894*/ MOVT        R2, #0                      @ .LC516 [R_ARM_MOVT_ABS: .rodata.str1.4+0x73dc] 
    /*0001a898*/ LDR         R3, [PC, #24]               @ 0x000000000001a8b8 
    /*0001a89c*/ MOV         R0, #3 
    /*0001a8a0*/ BL          0x000000000001A8A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a8a4*/ MOV         R0, R7 
    /*0001a8a8*/ MOVW        R5, #32776                  @ 0x8008 
    /*0001a8ac*/ BL          0x000000000001A8AC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001a8b0*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001a8b4*/ B           VencSetPrediction_x1a7f4
    /*0001a8b8*/ ANDEQ       R0, R0, IP, ASR SP 
FUNC_END VencSetPrediction


FUNC_BEGIN VencGetPrediction
    /*0001a8bc*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001a8c0*/ SUBS        R6, R1, #0 
    /*0001a8c4*/ SUB         SP, SP, #12 
    /*0001a8c8*/ MOV         R4, R0 
    /*0001a8cc*/ BEQ         VencGetPrediction_x1a9c4
    VencGetPrediction_x1a8d0:
    /*0001a8d0*/ CMP         R4, #0 
    /*0001a8d4*/ BLT         VencGetPrediction_x1a988
    /*0001a8d8*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0001a8dc*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0001a8e0*/ LDR         R3, [R3] 
    /*0001a8e4*/ CMP         R4, R3 
    /*0001a8e8*/ BCS         VencGetPrediction_x1a988
    VencGetPrediction_x1a8ec:
    /*0001a8ec*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0001a8f0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001a8f4*/ MUL         R5, R5, R4 
    /*0001a8f8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001a8fc*/ LDR         R8, [R3] 
    /*0001a900*/ ADD         R9, R8, R5 
    /*0001a904*/ ADD         R7, R9, #12416              @ 0x3080 
    /*0001a908*/ ADD         R7, R7, #16 
    /*0001a90c*/ MOV         R0, R7 
    /*0001a910*/ BL          0x000000000001A910          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001a914*/ CMP         R0, #0 
    /*0001a918*/ BNE         VencGetPrediction_x1aa0c
    /*0001a91c*/ LDR         R3, [R8, R5] 
    /*0001a920*/ CMP         R3, #1 
    /*0001a924*/ BNE         VencGetPrediction_x1a9d4
    /*0001a928*/ LDR         R3, [R9, #4] 
    /*0001a92c*/ MOVW        R2, #265                    @ 0x109 
    /*0001a930*/ CMP         R3, R2 
    /*0001a934*/ CMPNE       R3, #96                     @ 0x60 
    /*0001a938*/ BNE         VencGetPrediction_x1aa18
    /*0001a93c*/ CMP         R3, R2 
    /*0001a940*/ BEQ         VencGetPrediction_x1a9a4
    /*0001a944*/ MOV         R0, #10 
    /*0001a948*/ BL          0x000000000001A948          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a94c*/ MOV         R1, R6 
    /*0001a950*/ LDR         R3, [R0, #244]              @ 0xf4 
    /*0001a954*/ MOV         R0, R4 
    /*0001a958*/ BLX         R3 
    /*0001a95c*/ MOV         R5, R0 
    VencGetPrediction_x1a960:
    /*0001a960*/ MOV         R0, R7 
    /*0001a964*/ BL          0x000000000001A964          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001a968*/ CMP         R5, #0 
    /*0001a96c*/ BEQ         VencGetPrediction_x1a998
    /*0001a970*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*0001a974*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*0001a978*/ ORR         R5, R5, #524288             @ 0x80000 
    /*0001a97c*/ MOV         R0, R5 
    /*0001a980*/ ADD         SP, SP, #12 
    /*0001a984*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetPrediction_x1a988:
    /*0001a988*/ MOV         R0, R4 
    /*0001a98c*/ BL          0x0000000000000304 
    /*0001a990*/ SUBS        R5, R0, #0 
    /*0001a994*/ BEQ         VencGetPrediction_x1a8ec
    VencGetPrediction_x1a998:
    /*0001a998*/ MOV         R0, R5 
    /*0001a99c*/ ADD         SP, SP, #12 
    /*0001a9a0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetPrediction_x1a9a4:
    /*0001a9a4*/ MOV         R0, #13 
    /*0001a9a8*/ BL          0x000000000001A9A8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a9ac*/ MOV         R1, R6 
    /*0001a9b0*/ LDR         R3, [R0, #256]              @ 0x100 
    /*0001a9b4*/ MOV         R0, R4 
    /*0001a9b8*/ BLX         R3 
    /*0001a9bc*/ MOV         R5, R0 
    /*0001a9c0*/ B           VencGetPrediction_x1a960
    VencGetPrediction_x1a9c4:
    /*0001a9c4*/ BL          0x00000000000002C8 
    /*0001a9c8*/ SUBS        R5, R0, #0 
    /*0001a9cc*/ BNE         VencGetPrediction_x1a998
    /*0001a9d0*/ B           VencGetPrediction_x1a8d0
    VencGetPrediction_x1a9d4:
    /*0001a9d4*/ MOVW        R3, #14053                  @ 0x36e5 
    /*0001a9d8*/ MOV         R1, #8 
    /*0001a9dc*/ STR         R3, [SP] 
    /*0001a9e0*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0001a9e4*/ LDR         R3, [PC, #100]              @ 0x000000000001aa50 
    /*0001a9e8*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001a9ec*/ STR         R4, [SP, #4] 
    /*0001a9f0*/ MOV         R0, #3 
    /*0001a9f4*/ BL          0x000000000001A9F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a9f8*/ MOV         R0, R7 
    /*0001a9fc*/ MOVW        R5, #32773                  @ 0x8005 
    /*0001aa00*/ BL          0x000000000001AA00          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001aa04*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001aa08*/ B           VencGetPrediction_x1a998
    VencGetPrediction_x1aa0c:
    /*0001aa0c*/ MOV         R5, #65024                  @ 0xfe00 
    /*0001aa10*/ MOVT        R5, #65535                  @ 0xffff 
    /*0001aa14*/ B           VencGetPrediction_x1a998
    VencGetPrediction_x1aa18:
    /*0001aa18*/ STR         R3, [SP, #4] 
    /*0001aa1c*/ MOV         R1, #8 
    /*0001aa20*/ MOVW        R3, #14060                  @ 0x36ec 
    /*0001aa24*/ MOVW        R2, #0                      @ .LC517 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x741c] 
    /*0001aa28*/ STR         R3, [SP] 
    /*0001aa2c*/ MOVT        R2, #0                      @ .LC517 [R_ARM_MOVT_ABS: .rodata.str1.4+0x741c] 
    /*0001aa30*/ LDR         R3, [PC, #24]               @ 0x000000000001aa50 
    /*0001aa34*/ MOV         R0, #3 
    /*0001aa38*/ BL          0x000000000001AA38          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001aa3c*/ MOV         R0, R7 
    /*0001aa40*/ MOVW        R5, #32776                  @ 0x8008 
    /*0001aa44*/ BL          0x000000000001AA44          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001aa48*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001aa4c*/ B           VencGetPrediction_x1a998
    /*0001aa50*/ ANDEQ       R0, R0, R0, ROR SP 
FUNC_END VencGetPrediction


FUNC_BEGIN VencCheckSkipBias
    /*0001aa54*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001aa58*/ SUB         SP, SP, #20 
    /*0001aa5c*/ LDR         R3, [R1] 
    /*0001aa60*/ CMP         R3, #1 
    /*0001aa64*/ BHI         VencCheckSkipBias_x1aadc
    /*0001aa68*/ BEQ         VencCheckSkipBias_x1aa78
    VencCheckSkipBias_x1aa6c:
    /*0001aa6c*/ MOV         R0, #0 
    VencCheckSkipBias_x1aa70:
    /*0001aa70*/ ADD         SP, SP, #20 
    /*0001aa74*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VencCheckSkipBias_x1aa78:
    /*0001aa78*/ LDR         R3, [R1, #4] 
    /*0001aa7c*/ CMP         R3, #15 
    /*0001aa80*/ BHI         VencCheckSkipBias_x1aaf8
    /*0001aa84*/ LDR         R3, [R1, #8] 
    /*0001aa88*/ CMP         R3, #255                    @ 0xff 
    /*0001aa8c*/ BHI         VencCheckSkipBias_x1ab14
    /*0001aa90*/ LDR         R3, [R1, #12] 
    /*0001aa94*/ CMP         R3, #15 
    /*0001aa98*/ BHI         VencCheckSkipBias_x1ab30
    /*0001aa9c*/ LDR         R3, [R1, #16] 
    /*0001aaa0*/ CMP         R3, #15 
    /*0001aaa4*/ BLS         VencCheckSkipBias_x1aa6c
    /*0001aaa8*/ MOVW        R2, #0                      @ .LC522 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x75dc] 
    /*0001aaac*/ MOVT        R2, #0                      @ .LC522 [R_ARM_MOVT_ABS: .rodata.str1.4+0x75dc] 
    /*0001aab0*/ STR         R3, [SP, #8] 
    /*0001aab4*/ MOVW        R3, #14110                  @ 0x371e 
    /*0001aab8*/ STR         R0, [SP, #4] 
    /*0001aabc*/ STR         R3, [SP] 
    VencCheckSkipBias_x1aac0:
    /*0001aac0*/ LDR         R3, [PC, #132]              @ 0x000000000001ab4c 
    /*0001aac4*/ MOV         R1, #8 
    /*0001aac8*/ MOV         R0, #3 
    /*0001aacc*/ BL          0x000000000001AACC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001aad0*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001aad4*/ MOVT        R0, #40968                  @ 0xa008 
    /*0001aad8*/ B           VencCheckSkipBias_x1aa70
    VencCheckSkipBias_x1aadc:
    /*0001aadc*/ STR         R3, [SP, #8] 
    /*0001aae0*/ MOVW        R2, #0                      @ .LC518 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x745c] 
    /*0001aae4*/ MOVW        R3, #14084                  @ 0x3704 
    /*0001aae8*/ STR         R0, [SP, #4] 
    /*0001aaec*/ STR         R3, [SP] 
    /*0001aaf0*/ MOVT        R2, #0                      @ .LC518 [R_ARM_MOVT_ABS: .rodata.str1.4+0x745c] 
    /*0001aaf4*/ B           VencCheckSkipBias_x1aac0
    VencCheckSkipBias_x1aaf8:
    /*0001aaf8*/ STR         R3, [SP, #8] 
    /*0001aafc*/ MOVW        R2, #0                      @ .LC519 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x74c0] 
    /*0001ab00*/ MOVW        R3, #14092                  @ 0x370c 
    /*0001ab04*/ STR         R0, [SP, #4] 
    /*0001ab08*/ STR         R3, [SP] 
    /*0001ab0c*/ MOVT        R2, #0                      @ .LC519 [R_ARM_MOVT_ABS: .rodata.str1.4+0x74c0] 
    /*0001ab10*/ B           VencCheckSkipBias_x1aac0
    VencCheckSkipBias_x1ab14:
    /*0001ab14*/ STR         R3, [SP, #8] 
    /*0001ab18*/ MOVW        R2, #0                      @ .LC520 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x751c] 
    /*0001ab1c*/ MOVW        R3, #14098                  @ 0x3712 
    /*0001ab20*/ STR         R0, [SP, #4] 
    /*0001ab24*/ STR         R3, [SP] 
    /*0001ab28*/ MOVT        R2, #0                      @ .LC520 [R_ARM_MOVT_ABS: .rodata.str1.4+0x751c] 
    /*0001ab2c*/ B           VencCheckSkipBias_x1aac0
    VencCheckSkipBias_x1ab30:
    /*0001ab30*/ STR         R3, [SP, #8] 
    /*0001ab34*/ MOVW        R2, #0                      @ .LC521 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x757c] 
    /*0001ab38*/ MOVW        R3, #14104                  @ 0x3718 
    /*0001ab3c*/ STR         R0, [SP, #4] 
    /*0001ab40*/ STR         R3, [SP] 
    /*0001ab44*/ MOVT        R2, #0                      @ .LC521 [R_ARM_MOVT_ABS: .rodata.str1.4+0x757c] 
    /*0001ab48*/ B           VencCheckSkipBias_x1aac0
    /*0001ab4c*/ ANDEQ       R0, R0, R4, LSL #27 
FUNC_END VencCheckSkipBias


FUNC_BEGIN VencSetSkipBias
    /*0001ab50*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001ab54*/ SUBS        R6, R1, #0 
    /*0001ab58*/ SUB         SP, SP, #12 
    /*0001ab5c*/ MOV         R4, R0 
    /*0001ab60*/ BEQ         VencSetSkipBias_x1ac50
    VencSetSkipBias_x1ab64:
    /*0001ab64*/ CMP         R4, #0 
    /*0001ab68*/ BLT         VencSetSkipBias_x1ac34
    /*0001ab6c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0001ab70*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0001ab74*/ LDR         R3, [R3] 
    /*0001ab78*/ CMP         R4, R3 
    /*0001ab7c*/ BCS         VencSetSkipBias_x1ac34
    VencSetSkipBias_x1ab80:
    /*0001ab80*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0001ab84*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001ab88*/ MUL         R5, R5, R4 
    /*0001ab8c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001ab90*/ LDR         R9, [R3] 
    /*0001ab94*/ ADD         R8, R9, R5 
    /*0001ab98*/ ADD         R7, R8, #12416              @ 0x3080 
    /*0001ab9c*/ ADD         R7, R7, #16 
    /*0001aba0*/ MOV         R0, R7 
    /*0001aba4*/ BL          0x000000000001ABA4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001aba8*/ CMP         R0, #0 
    /*0001abac*/ BNE         VencSetSkipBias_x1acc4
    /*0001abb0*/ LDR         R3, [R9, R5] 
    /*0001abb4*/ CMP         R3, #1 
    /*0001abb8*/ BNE         VencSetSkipBias_x1ac8c
    /*0001abbc*/ LDR         R3, [R8, #4] 
    /*0001abc0*/ MOVW        R9, #265                    @ 0x109 
    /*0001abc4*/ CMP         R3, R9 
    /*0001abc8*/ CMPNE       R3, #96                     @ 0x60 
    /*0001abcc*/ BNE         VencSetSkipBias_x1acd0
    /*0001abd0*/ MOV         R1, R6 
    /*0001abd4*/ MOV         R0, R4 
    /*0001abd8*/ BL          0x000000000001ABD8          @ VencCheckSkipBias [R_ARM_CALL: .text+0x1aa54] 
    /*0001abdc*/ SUBS        R5, R0, #0 
    /*0001abe0*/ BNE         VencSetSkipBias_x1ac60
    /*0001abe4*/ LDR         R3, [R8, #4] 
    /*0001abe8*/ CMP         R3, R9 
    /*0001abec*/ BEQ         VencSetSkipBias_x1ac6c
    /*0001abf0*/ MOV         R0, #10 
    /*0001abf4*/ BL          0x000000000001ABF4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001abf8*/ MOV         R1, R6 
    /*0001abfc*/ LDR         R3, [R0, #248]              @ 0xf8 
    /*0001ac00*/ MOV         R0, R4 
    /*0001ac04*/ BLX         R3 
    /*0001ac08*/ MOV         R5, R0 
    VencSetSkipBias_x1ac0c:
    /*0001ac0c*/ MOV         R0, R7 
    /*0001ac10*/ BL          0x000000000001AC10          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001ac14*/ CMP         R5, #0 
    /*0001ac18*/ BEQ         VencSetSkipBias_x1ac44
    /*0001ac1c*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*0001ac20*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*0001ac24*/ ORR         R5, R5, #524288             @ 0x80000 
    /*0001ac28*/ MOV         R0, R5 
    /*0001ac2c*/ ADD         SP, SP, #12 
    /*0001ac30*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetSkipBias_x1ac34:
    /*0001ac34*/ MOV         R0, R4 
    /*0001ac38*/ BL          0x0000000000000304 
    /*0001ac3c*/ SUBS        R5, R0, #0 
    /*0001ac40*/ BEQ         VencSetSkipBias_x1ab80
    VencSetSkipBias_x1ac44:
    /*0001ac44*/ MOV         R0, R5 
    /*0001ac48*/ ADD         SP, SP, #12 
    /*0001ac4c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetSkipBias_x1ac50:
    /*0001ac50*/ BL          0x00000000000002C8 
    /*0001ac54*/ SUBS        R5, R0, #0 
    /*0001ac58*/ BNE         VencSetSkipBias_x1ac44
    /*0001ac5c*/ B           VencSetSkipBias_x1ab64
    VencSetSkipBias_x1ac60:
    /*0001ac60*/ MOV         R0, R7 
    /*0001ac64*/ BL          0x000000000001AC64          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001ac68*/ B           VencSetSkipBias_x1ac44
    VencSetSkipBias_x1ac6c:
    /*0001ac6c*/ MOV         R0, #13 
    /*0001ac70*/ BL          0x000000000001AC70          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001ac74*/ MOV         R1, R6 
    /*0001ac78*/ LDR         R3, [R0, #260]              @ 0x104 
    /*0001ac7c*/ MOV         R0, R4 
    /*0001ac80*/ BLX         R3 
    /*0001ac84*/ MOV         R5, R0 
    /*0001ac88*/ B           VencSetSkipBias_x1ac0c
    VencSetSkipBias_x1ac8c:
    /*0001ac8c*/ MOVW        R3, #14135                  @ 0x3737 
    /*0001ac90*/ MOV         R1, #8 
    /*0001ac94*/ STR         R3, [SP] 
    /*0001ac98*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0001ac9c*/ LDR         R3, [PC, #100]              @ 0x000000000001ad08 
    /*0001aca0*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001aca4*/ STR         R4, [SP, #4] 
    /*0001aca8*/ MOV         R0, #3 
    /*0001acac*/ BL          0x000000000001ACAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001acb0*/ MOV         R0, R7 
    /*0001acb4*/ MOVW        R5, #32773                  @ 0x8005 
    /*0001acb8*/ BL          0x000000000001ACB8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001acbc*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001acc0*/ B           VencSetSkipBias_x1ac44
    VencSetSkipBias_x1acc4:
    /*0001acc4*/ MOV         R5, #65024                  @ 0xfe00 
    /*0001acc8*/ MOVT        R5, #65535                  @ 0xffff 
    /*0001accc*/ B           VencSetSkipBias_x1ac44
    VencSetSkipBias_x1acd0:
    /*0001acd0*/ STR         R3, [SP, #4] 
    /*0001acd4*/ MOV         R1, #8 
    /*0001acd8*/ MOVW        R3, #14142                  @ 0x373e 
    /*0001acdc*/ MOVW        R2, #0                      @ .LC523 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x763c] 
    /*0001ace0*/ STR         R3, [SP] 
    /*0001ace4*/ MOVT        R2, #0                      @ .LC523 [R_ARM_MOVT_ABS: .rodata.str1.4+0x763c] 
    /*0001ace8*/ LDR         R3, [PC, #24]               @ 0x000000000001ad08 
    /*0001acec*/ MOV         R0, #3 
    /*0001acf0*/ BL          0x000000000001ACF0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001acf4*/ MOV         R0, R7 
    /*0001acf8*/ MOVW        R5, #32776                  @ 0x8008 
    /*0001acfc*/ BL          0x000000000001ACFC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001ad00*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001ad04*/ B           VencSetSkipBias_x1ac44
    /*0001ad08*/ MULEQ       R0, R8, SP 
FUNC_END VencSetSkipBias


FUNC_BEGIN VencGetSkipBias
    /*0001ad0c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001ad10*/ SUBS        R6, R1, #0 
    /*0001ad14*/ SUB         SP, SP, #12 
    /*0001ad18*/ MOV         R4, R0 
    /*0001ad1c*/ BEQ         VencGetSkipBias_x1ae14
    VencGetSkipBias_x1ad20:
    /*0001ad20*/ CMP         R4, #0 
    /*0001ad24*/ BLT         VencGetSkipBias_x1add8
    /*0001ad28*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0001ad2c*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0001ad30*/ LDR         R3, [R3] 
    /*0001ad34*/ CMP         R4, R3 
    /*0001ad38*/ BCS         VencGetSkipBias_x1add8
    VencGetSkipBias_x1ad3c:
    /*0001ad3c*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0001ad40*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001ad44*/ MUL         R5, R5, R4 
    /*0001ad48*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001ad4c*/ LDR         R8, [R3] 
    /*0001ad50*/ ADD         R9, R8, R5 
    /*0001ad54*/ ADD         R7, R9, #12416              @ 0x3080 
    /*0001ad58*/ ADD         R7, R7, #16 
    /*0001ad5c*/ MOV         R0, R7 
    /*0001ad60*/ BL          0x000000000001AD60          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001ad64*/ CMP         R0, #0 
    /*0001ad68*/ BNE         VencGetSkipBias_x1ae5c
    /*0001ad6c*/ LDR         R3, [R8, R5] 
    /*0001ad70*/ CMP         R3, #1 
    /*0001ad74*/ BNE         VencGetSkipBias_x1ae24
    /*0001ad78*/ LDR         R3, [R9, #4] 
    /*0001ad7c*/ MOVW        R2, #265                    @ 0x109 
    /*0001ad80*/ CMP         R3, R2 
    /*0001ad84*/ CMPNE       R3, #96                     @ 0x60 
    /*0001ad88*/ BNE         VencGetSkipBias_x1ae68
    /*0001ad8c*/ CMP         R3, R2 
    /*0001ad90*/ BEQ         VencGetSkipBias_x1adf4
    /*0001ad94*/ MOV         R0, #10 
    /*0001ad98*/ BL          0x000000000001AD98          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001ad9c*/ MOV         R1, R6 
    /*0001ada0*/ LDR         R3, [R0, #252]              @ 0xfc 
    /*0001ada4*/ MOV         R0, R4 
    /*0001ada8*/ BLX         R3 
    /*0001adac*/ MOV         R5, R0 
    VencGetSkipBias_x1adb0:
    /*0001adb0*/ MOV         R0, R7 
    /*0001adb4*/ BL          0x000000000001ADB4          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001adb8*/ CMP         R5, #0 
    /*0001adbc*/ BEQ         VencGetSkipBias_x1ade8
    /*0001adc0*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*0001adc4*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*0001adc8*/ ORR         R5, R5, #524288             @ 0x80000 
    /*0001adcc*/ MOV         R0, R5 
    /*0001add0*/ ADD         SP, SP, #12 
    /*0001add4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetSkipBias_x1add8:
    /*0001add8*/ MOV         R0, R4 
    /*0001addc*/ BL          0x0000000000000304 
    /*0001ade0*/ SUBS        R5, R0, #0 
    /*0001ade4*/ BEQ         VencGetSkipBias_x1ad3c
    VencGetSkipBias_x1ade8:
    /*0001ade8*/ MOV         R0, R5 
    /*0001adec*/ ADD         SP, SP, #12 
    /*0001adf0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetSkipBias_x1adf4:
    /*0001adf4*/ MOV         R0, #13 
    /*0001adf8*/ BL          0x000000000001ADF8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001adfc*/ MOV         R1, R6 
    /*0001ae00*/ LDR         R3, [R0, #264]              @ 0x108 
    /*0001ae04*/ MOV         R0, R4 
    /*0001ae08*/ BLX         R3 
    /*0001ae0c*/ MOV         R5, R0 
    /*0001ae10*/ B           VencGetSkipBias_x1adb0
    VencGetSkipBias_x1ae14:
    /*0001ae14*/ BL          0x00000000000002C8 
    /*0001ae18*/ SUBS        R5, R0, #0 
    /*0001ae1c*/ BNE         VencGetSkipBias_x1ade8
    /*0001ae20*/ B           VencGetSkipBias_x1ad20
    VencGetSkipBias_x1ae24:
    /*0001ae24*/ MOVW        R3, #14185                  @ 0x3769 
    /*0001ae28*/ MOV         R1, #8 
    /*0001ae2c*/ STR         R3, [SP] 
    /*0001ae30*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0001ae34*/ LDR         R3, [PC, #100]              @ 0x000000000001aea0 
    /*0001ae38*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001ae3c*/ STR         R4, [SP, #4] 
    /*0001ae40*/ MOV         R0, #3 
    /*0001ae44*/ BL          0x000000000001AE44          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ae48*/ MOV         R0, R7 
    /*0001ae4c*/ MOVW        R5, #32773                  @ 0x8005 
    /*0001ae50*/ BL          0x000000000001AE50          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001ae54*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001ae58*/ B           VencGetSkipBias_x1ade8
    VencGetSkipBias_x1ae5c:
    /*0001ae5c*/ MOV         R5, #65024                  @ 0xfe00 
    /*0001ae60*/ MOVT        R5, #65535                  @ 0xffff 
    /*0001ae64*/ B           VencGetSkipBias_x1ade8
    VencGetSkipBias_x1ae68:
    /*0001ae68*/ STR         R3, [SP, #4] 
    /*0001ae6c*/ MOV         R1, #8 
    /*0001ae70*/ MOVW        R3, #14192                  @ 0x3770 
    /*0001ae74*/ MOVW        R2, #0                      @ .LC524 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x767c] 
    /*0001ae78*/ STR         R3, [SP] 
    /*0001ae7c*/ MOVT        R2, #0                      @ .LC524 [R_ARM_MOVT_ABS: .rodata.str1.4+0x767c] 
    /*0001ae80*/ LDR         R3, [PC, #24]               @ 0x000000000001aea0 
    /*0001ae84*/ MOV         R0, #3 
    /*0001ae88*/ BL          0x000000000001AE88          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ae8c*/ MOV         R0, R7 
    /*0001ae90*/ MOVW        R5, #32776                  @ 0x8008 
    /*0001ae94*/ BL          0x000000000001AE94          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001ae98*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001ae9c*/ B           VencGetSkipBias_x1ade8
    /*0001aea0*/ ANDEQ       R0, R0, R8, LSR #27 
FUNC_END VencGetSkipBias


FUNC_BEGIN VencCheckHierarchicalQp
    /*0001aea4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001aea8*/ SUB         SP, SP, #20 
    /*0001aeac*/ LDR         R3, [R1] 
    /*0001aeb0*/ CMP         R3, #1 
    /*0001aeb4*/ BHI         VencCheckHierarchicalQp_x1af68
    /*0001aeb8*/ BEQ         VencCheckHierarchicalQp_x1aec8
    VencCheckHierarchicalQp_x1aebc:
    /*0001aebc*/ MOV         R0, #0 
    VencCheckHierarchicalQp_x1aec0:
    /*0001aec0*/ ADD         SP, SP, #20 
    /*0001aec4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VencCheckHierarchicalQp_x1aec8:
    /*0001aec8*/ ADD         R2, R1, #4 
    /*0001aecc*/ MOV         R3, #0 
    VencCheckHierarchicalQp_x1aed0:
    /*0001aed0*/ LDR         IP, [R2], #4 
    /*0001aed4*/ ADD         LR, IP, #10 
    /*0001aed8*/ CMP         LR, #20 
    /*0001aedc*/ BHI         VencCheckHierarchicalQp_x1af10
    /*0001aee0*/ ADD         R3, R3, #1 
    /*0001aee4*/ CMP         R3, #4 
    /*0001aee8*/ BNE         VencCheckHierarchicalQp_x1aed0
    /*0001aeec*/ ADD         R1, R1, #20 
    /*0001aef0*/ MOV         R3, #0 
    VencCheckHierarchicalQp_x1aef4:
    /*0001aef4*/ LDR         R2, [R1], #4 
    /*0001aef8*/ CMP         R2, #5 
    /*0001aefc*/ BHI         VencCheckHierarchicalQp_x1af4c
    /*0001af00*/ ADD         R3, R3, #1 
    /*0001af04*/ CMP         R3, #4 
    /*0001af08*/ BNE         VencCheckHierarchicalQp_x1aef4
    /*0001af0c*/ B           VencCheckHierarchicalQp_x1aebc
    VencCheckHierarchicalQp_x1af10:
    /*0001af10*/ MOVW        R2, #0                      @ .LC526 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7714] 
    /*0001af14*/ MOVT        R2, #0                      @ .LC526 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7714] 
    /*0001af18*/ MOVW        R1, #14227                  @ 0x3793 
    /*0001af1c*/ STR         IP, [SP, #12] 
    /*0001af20*/ STR         R3, [SP, #8] 
    /*0001af24*/ STR         R0, [SP, #4] 
    VencCheckHierarchicalQp_x1af28:
    /*0001af28*/ STR         R1, [SP] 
    /*0001af2c*/ MOV         R0, #3 
    /*0001af30*/ MOV         R1, #8 
    /*0001af34*/ LDR         R3, [PC, #96]               @ 0x000000000001af9c 
    /*0001af38*/ BL          0x000000000001AF38          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001af3c*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001af40*/ MOVT        R0, #40968                  @ 0xa008 
    /*0001af44*/ ADD         SP, SP, #20 
    /*0001af48*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VencCheckHierarchicalQp_x1af4c:
    /*0001af4c*/ STR         R2, [SP, #12] 
    /*0001af50*/ MOVW        R1, #14236                  @ 0x379c 
    /*0001af54*/ MOVW        R2, #0                      @ .LC527 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x776c] 
    /*0001af58*/ STR         R3, [SP, #8] 
    /*0001af5c*/ STR         R0, [SP, #4] 
    /*0001af60*/ MOVT        R2, #0                      @ .LC527 [R_ARM_MOVT_ABS: .rodata.str1.4+0x776c] 
    /*0001af64*/ B           VencCheckHierarchicalQp_x1af28
    VencCheckHierarchicalQp_x1af68:
    /*0001af68*/ STR         R3, [SP, #8] 
    /*0001af6c*/ MOVW        R2, #0                      @ .LC525 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x76bc] 
    /*0001af70*/ MOVW        R3, #14217                  @ 0x3789 
    /*0001af74*/ STR         R0, [SP, #4] 
    /*0001af78*/ STR         R3, [SP] 
    /*0001af7c*/ MOVT        R2, #0                      @ .LC525 [R_ARM_MOVT_ABS: .rodata.str1.4+0x76bc] 
    /*0001af80*/ LDR         R3, [PC, #20]               @ 0x000000000001af9c 
    /*0001af84*/ MOV         R1, #8 
    /*0001af88*/ MOV         R0, #3 
    /*0001af8c*/ BL          0x000000000001AF8C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001af90*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001af94*/ MOVT        R0, #40968                  @ 0xa008 
    /*0001af98*/ B           VencCheckHierarchicalQp_x1aec0
    /*0001af9c*/ @           <UNDEFINED> instruction: 0x00000db8 
FUNC_END VencCheckHierarchicalQp


FUNC_BEGIN VencSetHierarchicalQp
    /*0001afa0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001afa4*/ SUBS        R6, R1, #0 
    /*0001afa8*/ SUB         SP, SP, #20 
    /*0001afac*/ MOV         R4, R0 
    /*0001afb0*/ BEQ         VencSetHierarchicalQp_x1b09c
    VencSetHierarchicalQp_x1afb4:
    /*0001afb4*/ CMP         R4, #0 
    /*0001afb8*/ BLT         VencSetHierarchicalQp_x1b080
    /*0001afbc*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0001afc0*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0001afc4*/ LDR         R3, [R3] 
    /*0001afc8*/ CMP         R4, R3 
    /*0001afcc*/ BCS         VencSetHierarchicalQp_x1b080
    VencSetHierarchicalQp_x1afd0:
    /*0001afd0*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0001afd4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001afd8*/ MUL         R5, R5, R4 
    /*0001afdc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001afe0*/ LDR         R9, [R3] 
    /*0001afe4*/ ADD         R8, R9, R5 
    /*0001afe8*/ ADD         R7, R8, #12416              @ 0x3080 
    /*0001afec*/ ADD         R7, R7, #16 
    /*0001aff0*/ MOV         R0, R7 
    /*0001aff4*/ BL          0x000000000001AFF4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001aff8*/ CMP         R0, #0 
    /*0001affc*/ BNE         VencSetHierarchicalQp_x1b13c
    /*0001b000*/ LDR         R3, [R9, R5] 
    /*0001b004*/ CMP         R3, #1 
    /*0001b008*/ BNE         VencSetHierarchicalQp_x1b104
    /*0001b00c*/ LDR         R3, [R8, #4] 
    /*0001b010*/ MOVW        R2, #265                    @ 0x109 
    /*0001b014*/ CMP         R3, R2 
    /*0001b018*/ CMPNE       R3, #96                     @ 0x60 
    /*0001b01c*/ BNE         VencSetHierarchicalQp_x1b184
    /*0001b020*/ ADD         R9, R8, #12288              @ 0x3000 
    /*0001b024*/ LDR         R3, [R9, #716]              @ 0x2cc 
    /*0001b028*/ SUB         R2, R3, #2 
    /*0001b02c*/ CMP         R3, #0 
    /*0001b030*/ CMPNE       R2, #1 
    /*0001b034*/ BHI         VencSetHierarchicalQp_x1b148
    /*0001b038*/ MOV         R1, R6 
    /*0001b03c*/ MOV         R0, R4 
    /*0001b040*/ BL          0x000000000001B040          @ VencCheckHierarchicalQp [R_ARM_CALL: .text+0x1aea4] 
    /*0001b044*/ SUBS        R5, R0, #0 
    /*0001b048*/ BNE         VencSetHierarchicalQp_x1b06c
    /*0001b04c*/ LDR         R3, [R9, #612]              @ 0x264 
    /*0001b050*/ CMP         R3, #0 
    /*0001b054*/ BEQ         VencSetHierarchicalQp_x1b0ac
    /*0001b058*/ ADD         R0, R8, #13312              @ 0x3400 
    /*0001b05c*/ MOV         R1, R6 
    /*0001b060*/ ADD         R0, R0, #36                 @ 0x24 
    /*0001b064*/ MOV         R2, #36                     @ 0x24 
    /*0001b068*/ BL          0x000000000001B068          @ osal_memcpy [R_ARM_CALL: +0x0] 
    VencSetHierarchicalQp_x1b06c:
    /*0001b06c*/ MOV         R0, R7 
    /*0001b070*/ BL          0x000000000001B070          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b074*/ MOV         R0, R5 
    /*0001b078*/ ADD         SP, SP, #20 
    /*0001b07c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetHierarchicalQp_x1b080:
    /*0001b080*/ MOV         R0, R4 
    /*0001b084*/ BL          0x0000000000000304 
    /*0001b088*/ SUBS        R5, R0, #0 
    /*0001b08c*/ BEQ         VencSetHierarchicalQp_x1afd0
    VencSetHierarchicalQp_x1b090:
    /*0001b090*/ MOV         R0, R5 
    /*0001b094*/ ADD         SP, SP, #20 
    /*0001b098*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetHierarchicalQp_x1b09c:
    /*0001b09c*/ BL          0x00000000000002C8 
    /*0001b0a0*/ SUBS        R5, R0, #0 
    /*0001b0a4*/ BNE         VencSetHierarchicalQp_x1b090
    /*0001b0a8*/ B           VencSetHierarchicalQp_x1afb4
    VencSetHierarchicalQp_x1b0ac:
    /*0001b0ac*/ MOV         R0, #19 
    /*0001b0b0*/ BL          0x000000000001B0B0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b0b4*/ MOV         R1, R6 
    /*0001b0b8*/ LDR         R3, [R0, #128]              @ 0x80 
    /*0001b0bc*/ MOV         R0, R4 
    /*0001b0c0*/ BLX         R3 
    /*0001b0c4*/ MOV         R1, R6 
    /*0001b0c8*/ MOV         R2, #36                     @ 0x24 
    /*0001b0cc*/ MOV         R5, R0 
    /*0001b0d0*/ ADD         R0, R8, #13312              @ 0x3400 
    /*0001b0d4*/ ADD         R0, R0, #36                 @ 0x24 
    /*0001b0d8*/ BL          0x000000000001B0D8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001b0dc*/ MOV         R0, R7 
    /*0001b0e0*/ BL          0x000000000001B0E0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b0e4*/ CMP         R5, #0 
    /*0001b0e8*/ BEQ         VencSetHierarchicalQp_x1b090
    /*0001b0ec*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*0001b0f0*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*0001b0f4*/ ORR         R5, R5, #524288             @ 0x80000 
    /*0001b0f8*/ MOV         R0, R5 
    /*0001b0fc*/ ADD         SP, SP, #20 
    /*0001b100*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetHierarchicalQp_x1b104:
    /*0001b104*/ MOVW        R3, #14261                  @ 0x37b5 
    /*0001b108*/ MOV         R1, #8 
    /*0001b10c*/ STR         R3, [SP] 
    /*0001b110*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0001b114*/ LDR         R3, [PC, #132]              @ 0x000000000001b1a0 
    /*0001b118*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001b11c*/ STR         R4, [SP, #4] 
    /*0001b120*/ MOV         R0, #3 
    /*0001b124*/ BL          0x000000000001B124          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b128*/ MOV         R0, R7 
    /*0001b12c*/ MOVW        R5, #32773                  @ 0x8005 
    /*0001b130*/ BL          0x000000000001B130          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b134*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001b138*/ B           VencSetHierarchicalQp_x1b090
    VencSetHierarchicalQp_x1b13c:
    /*0001b13c*/ MOV         R5, #65024                  @ 0xfe00 
    /*0001b140*/ MOVT        R5, #65535                  @ 0xffff 
    /*0001b144*/ B           VencSetHierarchicalQp_x1b090
    VencSetHierarchicalQp_x1b148:
    /*0001b148*/ MOVW        R2, #0                      @ .LC529 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7810] 
    /*0001b14c*/ MOVT        R2, #0                      @ .LC529 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7810] 
    /*0001b150*/ STR         R3, [SP, #8] 
    /*0001b154*/ MOVW        R3, #14278                  @ 0x37c6 
    /*0001b158*/ STR         R4, [SP, #4] 
    /*0001b15c*/ STR         R3, [SP] 
    VencSetHierarchicalQp_x1b160:
    /*0001b160*/ LDR         R3, [PC, #56]               @ 0x000000000001b1a0 
    /*0001b164*/ MOV         R1, #8 
    /*0001b168*/ MOV         R0, #3 
    /*0001b16c*/ MOVW        R5, #32776                  @ 0x8008 
    /*0001b170*/ BL          0x000000000001B170          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b174*/ MOV         R0, R7 
    /*0001b178*/ BL          0x000000000001B178          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b17c*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001b180*/ B           VencSetHierarchicalQp_x1b090
    VencSetHierarchicalQp_x1b184:
    /*0001b184*/ STR         R3, [SP, #8] 
    /*0001b188*/ MOVW        R2, #0                      @ .LC528 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x77c0] 
    /*0001b18c*/ MOVW        R3, #14268                  @ 0x37bc 
    /*0001b190*/ STR         R4, [SP, #4] 
    /*0001b194*/ STR         R3, [SP] 
    /*0001b198*/ MOVT        R2, #0                      @ .LC528 [R_ARM_MOVT_ABS: .rodata.str1.4+0x77c0] 
    /*0001b19c*/ B           VencSetHierarchicalQp_x1b160
    /*0001b1a0*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VencSetHierarchicalQp


FUNC_BEGIN VencGetHierarchicalQp
    /*0001b1a4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001b1a8*/ SUBS        R6, R1, #0 
    /*0001b1ac*/ SUB         SP, SP, #12 
    /*0001b1b0*/ MOV         R4, R0 
    /*0001b1b4*/ BEQ         VencGetHierarchicalQp_x1b284
    VencGetHierarchicalQp_x1b1b8:
    /*0001b1b8*/ CMP         R4, #0 
    /*0001b1bc*/ BLT         VencGetHierarchicalQp_x1b268
    /*0001b1c0*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0001b1c4*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0001b1c8*/ LDR         R3, [R3] 
    /*0001b1cc*/ CMP         R4, R3 
    /*0001b1d0*/ BCS         VencGetHierarchicalQp_x1b268
    VencGetHierarchicalQp_x1b1d4:
    /*0001b1d4*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0001b1d8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001b1dc*/ MUL         R5, R5, R4 
    /*0001b1e0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001b1e4*/ LDR         R8, [R3] 
    /*0001b1e8*/ ADD         R9, R8, R5 
    /*0001b1ec*/ ADD         R7, R9, #12416              @ 0x3080 
    /*0001b1f0*/ ADD         R7, R7, #16 
    /*0001b1f4*/ MOV         R0, R7 
    /*0001b1f8*/ BL          0x000000000001B1F8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001b1fc*/ CMP         R0, #0 
    /*0001b200*/ BNE         VencGetHierarchicalQp_x1b2cc
    /*0001b204*/ LDR         R3, [R8, R5] 
    /*0001b208*/ CMP         R3, #1 
    /*0001b20c*/ BNE         VencGetHierarchicalQp_x1b294
    /*0001b210*/ LDR         R3, [R9, #4] 
    /*0001b214*/ MOVW        R2, #265                    @ 0x109 
    /*0001b218*/ CMP         R3, R2 
    /*0001b21c*/ CMPNE       R3, #96                     @ 0x60 
    /*0001b220*/ BNE         VencGetHierarchicalQp_x1b2d8
    /*0001b224*/ MOV         R0, #19 
    /*0001b228*/ BL          0x000000000001B228          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b22c*/ MOV         R1, R6 
    /*0001b230*/ LDR         R3, [R0, #132]              @ 0x84 
    /*0001b234*/ MOV         R0, R4 
    /*0001b238*/ BLX         R3 
    /*0001b23c*/ MOV         R5, R0 
    /*0001b240*/ MOV         R0, R7 
    /*0001b244*/ BL          0x000000000001B244          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b248*/ CMP         R5, #0 
    /*0001b24c*/ BEQ         VencGetHierarchicalQp_x1b278
    /*0001b250*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*0001b254*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*0001b258*/ ORR         R5, R5, #524288             @ 0x80000 
    /*0001b25c*/ MOV         R0, R5 
    /*0001b260*/ ADD         SP, SP, #12 
    /*0001b264*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetHierarchicalQp_x1b268:
    /*0001b268*/ MOV         R0, R4 
    /*0001b26c*/ BL          0x0000000000000304 
    /*0001b270*/ SUBS        R5, R0, #0 
    /*0001b274*/ BEQ         VencGetHierarchicalQp_x1b1d4
    VencGetHierarchicalQp_x1b278:
    /*0001b278*/ MOV         R0, R5 
    /*0001b27c*/ ADD         SP, SP, #12 
    /*0001b280*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetHierarchicalQp_x1b284:
    /*0001b284*/ BL          0x00000000000002C8 
    /*0001b288*/ SUBS        R5, R0, #0 
    /*0001b28c*/ BNE         VencGetHierarchicalQp_x1b278
    /*0001b290*/ B           VencGetHierarchicalQp_x1b1b8
    VencGetHierarchicalQp_x1b294:
    /*0001b294*/ MOVW        R3, #14319                  @ 0x37ef 
    /*0001b298*/ MOV         R1, #8 
    /*0001b29c*/ STR         R3, [SP] 
    /*0001b2a0*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0001b2a4*/ LDR         R3, [PC, #100]              @ 0x000000000001b310 
    /*0001b2a8*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001b2ac*/ STR         R4, [SP, #4] 
    /*0001b2b0*/ MOV         R0, #3 
    /*0001b2b4*/ BL          0x000000000001B2B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b2b8*/ MOV         R0, R7 
    /*0001b2bc*/ MOVW        R5, #32773                  @ 0x8005 
    /*0001b2c0*/ BL          0x000000000001B2C0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b2c4*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001b2c8*/ B           VencGetHierarchicalQp_x1b278
    VencGetHierarchicalQp_x1b2cc:
    /*0001b2cc*/ MOV         R5, #65024                  @ 0xfe00 
    /*0001b2d0*/ MOVT        R5, #65535                  @ 0xffff 
    /*0001b2d4*/ B           VencGetHierarchicalQp_x1b278
    VencGetHierarchicalQp_x1b2d8:
    /*0001b2d8*/ STR         R3, [SP, #4] 
    /*0001b2dc*/ MOV         R1, #8 
    /*0001b2e0*/ MOVW        R3, #14326                  @ 0x37f6 
    /*0001b2e4*/ MOVW        R2, #0                      @ .LC530 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7860] 
    /*0001b2e8*/ STR         R3, [SP] 
    /*0001b2ec*/ MOVT        R2, #0                      @ .LC530 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7860] 
    /*0001b2f0*/ LDR         R3, [PC, #24]               @ 0x000000000001b310 
    /*0001b2f4*/ MOV         R0, #3 
    /*0001b2f8*/ BL          0x000000000001B2F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b2fc*/ MOV         R0, R7 
    /*0001b300*/ MOVW        R5, #32776                  @ 0x8008 
    /*0001b304*/ BL          0x000000000001B304          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b308*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001b30c*/ B           VencGetHierarchicalQp_x1b278
    /*0001b310*/ ANDEQ       R0, R0, R8, ROR #27 
FUNC_END VencGetHierarchicalQp


FUNC_BEGIN VencSetRcAdvParam
    /*0001b314*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001b318*/ SUBS        R6, R1, #0 
    /*0001b31c*/ SUB         SP, SP, #20 
    /*0001b320*/ MOV         R4, R0 
    /*0001b324*/ BEQ         VencSetRcAdvParam_x1b440
    VencSetRcAdvParam_x1b328:
    /*0001b328*/ CMP         R4, #0 
    /*0001b32c*/ BLT         VencSetRcAdvParam_x1b3e0
    /*0001b330*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0001b334*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0001b338*/ LDR         R3, [R3] 
    /*0001b33c*/ CMP         R4, R3 
    /*0001b340*/ BCS         VencSetRcAdvParam_x1b3e0
    VencSetRcAdvParam_x1b344:
    /*0001b344*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0001b348*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001b34c*/ MUL         R5, R5, R4 
    /*0001b350*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001b354*/ LDR         R8, [R3] 
    /*0001b358*/ ADD         R9, R8, R5 
    /*0001b35c*/ ADD         R7, R9, #12416              @ 0x3080 
    /*0001b360*/ ADD         R7, R7, #16 
    /*0001b364*/ MOV         R0, R7 
    /*0001b368*/ BL          0x000000000001B368          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001b36c*/ CMP         R0, #0 
    /*0001b370*/ BNE         VencSetRcAdvParam_x1b488
    /*0001b374*/ LDR         R3, [R8, R5] 
    /*0001b378*/ CMP         R3, #1 
    /*0001b37c*/ BNE         VencSetRcAdvParam_x1b450
    /*0001b380*/ LDR         R3, [R9, #4] 
    /*0001b384*/ MOVW        R2, #265                    @ 0x109 
    /*0001b388*/ CMP         R3, R2 
    /*0001b38c*/ BEQ         VencSetRcAdvParam_x1b3fc
    /*0001b390*/ MOVW        R2, #1002                   @ 0x3ea 
    /*0001b394*/ CMP         R3, R2 
    /*0001b398*/ BEQ         VencSetRcAdvParam_x1b3fc
    /*0001b39c*/ CMP         R3, #96                     @ 0x60 
    /*0001b3a0*/ BEQ         VencSetRcAdvParam_x1b3fc
    /*0001b3a4*/ STR         R3, [SP, #8] 
    /*0001b3a8*/ MOV         R1, #8 
    /*0001b3ac*/ MOVW        R3, #14372                  @ 0x3824 
    /*0001b3b0*/ STR         R4, [SP, #4] 
    /*0001b3b4*/ STR         R3, [SP] 
    /*0001b3b8*/ MOVW        R2, #0                      @ .LC531 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x78a4] 
    /*0001b3bc*/ LDR         R3, [PC, #208]              @ 0x000000000001b494 
    /*0001b3c0*/ MOVT        R2, #0                      @ .LC531 [R_ARM_MOVT_ABS: .rodata.str1.4+0x78a4] 
    /*0001b3c4*/ MOV         R0, #3 
    /*0001b3c8*/ MOVW        R5, #32776                  @ 0x8008 
    /*0001b3cc*/ BL          0x000000000001B3CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b3d0*/ MOV         R0, R7 
    /*0001b3d4*/ BL          0x000000000001B3D4          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b3d8*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001b3dc*/ B           VencSetRcAdvParam_x1b3f0
    VencSetRcAdvParam_x1b3e0:
    /*0001b3e0*/ MOV         R0, R4 
    /*0001b3e4*/ BL          0x0000000000000304 
    /*0001b3e8*/ SUBS        R5, R0, #0 
    /*0001b3ec*/ BEQ         VencSetRcAdvParam_x1b344
    VencSetRcAdvParam_x1b3f0:
    /*0001b3f0*/ MOV         R0, R5 
    /*0001b3f4*/ ADD         SP, SP, #20 
    /*0001b3f8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetRcAdvParam_x1b3fc:
    /*0001b3fc*/ MOV         R0, #19 
    /*0001b400*/ BL          0x000000000001B400          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b404*/ MOV         R1, R6 
    /*0001b408*/ LDR         R3, [R0, #136]              @ 0x88 
    /*0001b40c*/ MOV         R0, R4 
    /*0001b410*/ BLX         R3 
    /*0001b414*/ MOV         R5, R0 
    /*0001b418*/ MOV         R0, R7 
    /*0001b41c*/ BL          0x000000000001B41C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b420*/ CMP         R5, #0 
    /*0001b424*/ BEQ         VencSetRcAdvParam_x1b3f0
    /*0001b428*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*0001b42c*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*0001b430*/ ORR         R5, R5, #524288             @ 0x80000 
    /*0001b434*/ MOV         R0, R5 
    /*0001b438*/ ADD         SP, SP, #20 
    /*0001b43c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencSetRcAdvParam_x1b440:
    /*0001b440*/ BL          0x00000000000002C8 
    /*0001b444*/ SUBS        R5, R0, #0 
    /*0001b448*/ BNE         VencSetRcAdvParam_x1b3f0
    /*0001b44c*/ B           VencSetRcAdvParam_x1b328
    VencSetRcAdvParam_x1b450:
    /*0001b450*/ MOVW        R3, #14355                  @ 0x3813 
    /*0001b454*/ MOV         R1, #8 
    /*0001b458*/ STR         R3, [SP] 
    /*0001b45c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0001b460*/ LDR         R3, [PC, #44]               @ 0x000000000001b494 
    /*0001b464*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001b468*/ STR         R4, [SP, #4] 
    /*0001b46c*/ MOV         R0, #3 
    /*0001b470*/ BL          0x000000000001B470          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b474*/ MOV         R0, R7 
    /*0001b478*/ MOVW        R5, #32773                  @ 0x8005 
    /*0001b47c*/ BL          0x000000000001B47C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b480*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001b484*/ B           VencSetRcAdvParam_x1b3f0
    VencSetRcAdvParam_x1b488:
    /*0001b488*/ MOV         R5, #65024                  @ 0xfe00 
    /*0001b48c*/ MOVT        R5, #65535                  @ 0xffff 
    /*0001b490*/ B           VencSetRcAdvParam_x1b3f0
    /*0001b494*/ ANDEQ       R0, R0, R0, LSL #28 
FUNC_END VencSetRcAdvParam


FUNC_BEGIN VencGetRcAdvParam
    /*0001b498*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001b49c*/ SUBS        R6, R1, #0 
    /*0001b4a0*/ SUB         SP, SP, #20 
    /*0001b4a4*/ MOV         R4, R0 
    /*0001b4a8*/ BEQ         VencGetRcAdvParam_x1b5c4
    VencGetRcAdvParam_x1b4ac:
    /*0001b4ac*/ CMP         R4, #0 
    /*0001b4b0*/ BLT         VencGetRcAdvParam_x1b564
    /*0001b4b4*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0001b4b8*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*0001b4bc*/ LDR         R3, [R3] 
    /*0001b4c0*/ CMP         R4, R3 
    /*0001b4c4*/ BCS         VencGetRcAdvParam_x1b564
    VencGetRcAdvParam_x1b4c8:
    /*0001b4c8*/ MOVW        R5, #36240                  @ 0x8d90 
    /*0001b4cc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001b4d0*/ MUL         R5, R5, R4 
    /*0001b4d4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001b4d8*/ LDR         R8, [R3] 
    /*0001b4dc*/ ADD         R9, R8, R5 
    /*0001b4e0*/ ADD         R7, R9, #12416              @ 0x3080 
    /*0001b4e4*/ ADD         R7, R7, #16 
    /*0001b4e8*/ MOV         R0, R7 
    /*0001b4ec*/ BL          0x000000000001B4EC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001b4f0*/ CMP         R0, #0 
    /*0001b4f4*/ BNE         VencGetRcAdvParam_x1b60c
    /*0001b4f8*/ LDR         R3, [R8, R5] 
    /*0001b4fc*/ CMP         R3, #1 
    /*0001b500*/ BNE         VencGetRcAdvParam_x1b5d4
    /*0001b504*/ LDR         R3, [R9, #4] 
    /*0001b508*/ MOVW        R2, #265                    @ 0x109 
    /*0001b50c*/ CMP         R3, R2 
    /*0001b510*/ BEQ         VencGetRcAdvParam_x1b580
    /*0001b514*/ MOVW        R2, #1002                   @ 0x3ea 
    /*0001b518*/ CMP         R3, R2 
    /*0001b51c*/ BEQ         VencGetRcAdvParam_x1b580
    /*0001b520*/ CMP         R3, #96                     @ 0x60 
    /*0001b524*/ BEQ         VencGetRcAdvParam_x1b580
    /*0001b528*/ STR         R3, [SP, #8] 
    /*0001b52c*/ MOV         R1, #8 
    /*0001b530*/ MOVW        R3, #14414                  @ 0x384e 
    /*0001b534*/ STR         R4, [SP, #4] 
    /*0001b538*/ STR         R3, [SP] 
    /*0001b53c*/ MOVW        R2, #0                      @ .LC532 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x78f4] 
    /*0001b540*/ LDR         R3, [PC, #208]              @ 0x000000000001b618 
    /*0001b544*/ MOVT        R2, #0                      @ .LC532 [R_ARM_MOVT_ABS: .rodata.str1.4+0x78f4] 
    /*0001b548*/ MOV         R0, #3 
    /*0001b54c*/ MOVW        R5, #32776                  @ 0x8008 
    /*0001b550*/ BL          0x000000000001B550          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b554*/ MOV         R0, R7 
    /*0001b558*/ BL          0x000000000001B558          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b55c*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001b560*/ B           VencGetRcAdvParam_x1b574
    VencGetRcAdvParam_x1b564:
    /*0001b564*/ MOV         R0, R4 
    /*0001b568*/ BL          0x0000000000000304 
    /*0001b56c*/ SUBS        R5, R0, #0 
    /*0001b570*/ BEQ         VencGetRcAdvParam_x1b4c8
    VencGetRcAdvParam_x1b574:
    /*0001b574*/ MOV         R0, R5 
    /*0001b578*/ ADD         SP, SP, #20 
    /*0001b57c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetRcAdvParam_x1b580:
    /*0001b580*/ MOV         R0, #19 
    /*0001b584*/ BL          0x000000000001B584          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b588*/ MOV         R1, R6 
    /*0001b58c*/ LDR         R3, [R0, #140]              @ 0x8c 
    /*0001b590*/ MOV         R0, R4 
    /*0001b594*/ BLX         R3 
    /*0001b598*/ MOV         R5, R0 
    /*0001b59c*/ MOV         R0, R7 
    /*0001b5a0*/ BL          0x000000000001B5A0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b5a4*/ CMP         R5, #0 
    /*0001b5a8*/ BEQ         VencGetRcAdvParam_x1b574
    /*0001b5ac*/ BIC         R5, R5, #267386880          @ 0xff00000 
    /*0001b5b0*/ BIC         R5, R5, #983040             @ 0xf0000 
    /*0001b5b4*/ ORR         R5, R5, #524288             @ 0x80000 
    /*0001b5b8*/ MOV         R0, R5 
    /*0001b5bc*/ ADD         SP, SP, #20 
    /*0001b5c0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencGetRcAdvParam_x1b5c4:
    /*0001b5c4*/ BL          0x00000000000002C8 
    /*0001b5c8*/ SUBS        R5, R0, #0 
    /*0001b5cc*/ BNE         VencGetRcAdvParam_x1b574
    /*0001b5d0*/ B           VencGetRcAdvParam_x1b4ac
    VencGetRcAdvParam_x1b5d4:
    /*0001b5d4*/ MOVW        R3, #14397                  @ 0x383d 
    /*0001b5d8*/ MOV         R1, #8 
    /*0001b5dc*/ STR         R3, [SP] 
    /*0001b5e0*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x298] 
    /*0001b5e4*/ LDR         R3, [PC, #44]               @ 0x000000000001b618 
    /*0001b5e8*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x298] 
    /*0001b5ec*/ STR         R4, [SP, #4] 
    /*0001b5f0*/ MOV         R0, #3 
    /*0001b5f4*/ BL          0x000000000001B5F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b5f8*/ MOV         R0, R7 
    /*0001b5fc*/ MOVW        R5, #32773                  @ 0x8005 
    /*0001b600*/ BL          0x000000000001B600          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b604*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001b608*/ B           VencGetRcAdvParam_x1b574
    VencGetRcAdvParam_x1b60c:
    /*0001b60c*/ MOV         R5, #65024                  @ 0xfe00 
    /*0001b610*/ MOVT        R5, #65535                  @ 0xffff 
    /*0001b614*/ B           VencGetRcAdvParam_x1b574
    /*0001b618*/ ANDEQ       R0, R0, R4, LSL LR 
FUNC_END VencGetRcAdvParam


FUNC_BEGIN VENC_WaitConditionCallBack3
    /*0001b620*/ MOVW        R2, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001b624*/ MOVT        R2, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001b628*/ LDR         R3, [R0] 
    /*0001b62c*/ MOVW        R1, #36240                  @ 0x8d90 
    /*0001b630*/ LDR         R2, [R2] 
    /*0001b634*/ MLA         R3, R1, R3, R2 
    /*0001b638*/ ADD         R3, R3, #12288              @ 0x3000 
    /*0001b63c*/ LDR         R0, [R3, #572]              @ 0x23c 
    /*0001b640*/ SUB         R0, R0, #1 
    /*0001b644*/ CLZ         R0, R0 
    /*0001b648*/ LSR         R0, R0, #5 
    /*0001b64c*/ BX          LR 
FUNC_END VENC_WaitConditionCallBack3


FUNC_BEGIN VENC_GetVerMagic
    /*0001b650*/ MOVW        R0, #61479                  @ 0xf027 
    /*0001b654*/ MOVT        R0, #307                    @ 0x133 
    /*0001b658*/ BX          LR 
FUNC_END VENC_GetVerMagic


FUNC_BEGIN VENC_Restore
    /*0001b65c*/ MOV         R0, #0 
    /*0001b660*/ BX          LR 
FUNC_END VENC_Restore


FUNC_BEGIN VENC_SysReset
    /*0001b664*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001b668*/ SUB         SP, SP, #52                 @ 0x34 
    /*0001b66c*/ MOV         R0, R1 
    /*0001b670*/ STR         R1, [SP, #28] 
    /*0001b674*/ BL          0x000000000001B674          @ MkpVencCheckChn [R_ARM_CALL: .text+0x7ac] 
    /*0001b678*/ SUBS        R4, R0, #0 
    /*0001b67c*/ BEQ         VENC_SysReset_x1b68c
    VENC_SysReset_x1b680:
    /*0001b680*/ MOV         R0, R4 
    /*0001b684*/ ADD         SP, SP, #52                 @ 0x34 
    /*0001b688*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_SysReset_x1b68c:
    /*0001b68c*/ LDR         R3, [SP, #28] 
    /*0001b690*/ MOVW        R8, #36240                  @ 0x8d90 
    /*0001b694*/ MOVW        R6, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001b698*/ MOVT        R6, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001b69c*/ MUL         R8, R8, R3 
    /*0001b6a0*/ LDR         R9, [R6] 
    /*0001b6a4*/ ADD         R5, R9, R8 
    /*0001b6a8*/ ADD         R7, R5, #12416              @ 0x3080 
    /*0001b6ac*/ ADD         R7, R7, #16 
    /*0001b6b0*/ MOV         R0, R7 
    /*0001b6b4*/ BL          0x000000000001B6B4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0001b6b8*/ CMP         R0, #0 
    /*0001b6bc*/ BNE         VENC_SysReset_x1ba3c
    /*0001b6c0*/ LDR         R3, [R9, R8] 
    /*0001b6c4*/ CMP         R3, #1 
    /*0001b6c8*/ BEQ         VENC_SysReset_x1b70c
    /*0001b6cc*/ LDR         R1, [SP, #28] 
    /*0001b6d0*/ MOVW        R2, #3475                   @ 0xd93 
    /*0001b6d4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xe28] 
    /*0001b6d8*/ STR         R2, [SP] 
    /*0001b6dc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xe28] 
    /*0001b6e0*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7944] 
    /*0001b6e4*/ STR         R1, [SP, #4] 
    /*0001b6e8*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7944] 
    /*0001b6ec*/ MOV         R1, #8 
    /*0001b6f0*/ MOV         R0, #4 
    /*0001b6f4*/ BL          0x000000000001B6F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b6f8*/ MOV         R0, R7 
    /*0001b6fc*/ BL          0x000000000001B6FC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b700*/ MOV         R0, R4 
    /*0001b704*/ ADD         SP, SP, #52                 @ 0x34 
    /*0001b708*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_SysReset_x1b70c:
    /*0001b70c*/ ADD         R9, R5, #64                 @ 0x40 
    /*0001b710*/ ADD         R8, R5, #12288              @ 0x3000 
    /*0001b714*/ ADD         R1, SP, #36                 @ 0x24 
    /*0001b718*/ MOV         R0, R9 
    /*0001b71c*/ BL          0x000000000001B71C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001b720*/ LDR         R3, [R8, #132]              @ 0x84 
    /*0001b724*/ ADD         R1, SP, #36                 @ 0x24 
    /*0001b728*/ MOV         R0, R9 
    /*0001b72c*/ STR         R3, [SP, #20] 
    /*0001b730*/ LDR         R3, [R5, #16] 
    /*0001b734*/ STR         R4, [R5, #16] 
    /*0001b738*/ STR         R4, [R8, #132]              @ 0x84 
    /*0001b73c*/ STR         R3, [SP, #16] 
    /*0001b740*/ BL          0x000000000001B740          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001b744*/ MOV         R0, #4 
    /*0001b748*/ BL          0x000000000001B748          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b74c*/ LDR         R1, [SP, #28] 
    /*0001b750*/ LDR         R3, [R0, #16] 
    /*0001b754*/ LDR         R0, [R5, #8] 
    /*0001b758*/ BLX         R3 
    /*0001b75c*/ SUBS        R4, R0, #0 
    /*0001b760*/ BNE         VENC_SysReset_x1b980
    /*0001b764*/ LDR         R3, [R5, #4] 
    /*0001b768*/ MOVW        R2, #265                    @ 0x109 
    /*0001b76c*/ CMP         R3, R2 
    /*0001b770*/ BEQ         VENC_SysReset_x1ba28
    /*0001b774*/ BHI         VENC_SysReset_x1b924
    /*0001b778*/ CMP         R3, #26 
    /*0001b77c*/ BEQ         VENC_SysReset_x1b7c8
    /*0001b780*/ CMP         R3, #96                     @ 0x60 
    /*0001b784*/ BNE         VENC_SysReset_x1b93c
    /*0001b788*/ MOV         R0, #10 
    /*0001b78c*/ BL          0x000000000001B78C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b790*/ MOV         R1, R4 
    /*0001b794*/ LDR         R3, [R0, #156]              @ 0x9c 
    VENC_SysReset_x1b798:
    /*0001b798*/ LDR         R0, [SP, #28] 
    /*0001b79c*/ BLX         R3 
    /*0001b7a0*/ MOV         R4, R0 
    /*0001b7a4*/ MOV         R0, #19 
    /*0001b7a8*/ BL          0x000000000001B7A8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b7ac*/ LDR         R3, [R0, #8] 
    /*0001b7b0*/ LDR         R0, [SP, #28] 
    /*0001b7b4*/ BLX         R3 
    /*0001b7b8*/ ORR         R4, R4, R0 
    /*0001b7bc*/ CMP         R4, #0 
    /*0001b7c0*/ LDRNE       R3, [R5, #4] 
    /*0001b7c4*/ BNE         VENC_SysReset_x1b944
    VENC_SysReset_x1b7c8:
    /*0001b7c8*/ MOV         R0, #4 
    /*0001b7cc*/ BL          0x000000000001B7CC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b7d0*/ LDR         R1, [SP, #28] 
    /*0001b7d4*/ LDR         R3, [R0, #20] 
    /*0001b7d8*/ LDR         R0, [R5, #8] 
    /*0001b7dc*/ BLX         R3 
    /*0001b7e0*/ SUBS        R4, R0, #0 
    /*0001b7e4*/ BNE         VENC_SysReset_x1ba48
    /*0001b7e8*/ LDR         R3, [R8, #180]              @ 0xb4 
    /*0001b7ec*/ CMP         R3, #1 
    /*0001b7f0*/ BEQ         VENC_SysReset_x1bad8
    VENC_SysReset_x1b7f4:
    /*0001b7f4*/ LDR         R3, [R8, #176]              @ 0xb0 
    /*0001b7f8*/ ADD         R1, SP, #36                 @ 0x24 
    /*0001b7fc*/ MOV         R0, R9 
    /*0001b800*/ MOV         FP, #0 
    /*0001b804*/ ADD         R3, R3, #1 
    /*0001b808*/ STR         R3, [R8, #176]              @ 0xb0 
    /*0001b80c*/ BL          0x000000000001B80C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001b810*/ MOVW        R1, #12448                  @ 0x30a0 
    /*0001b814*/ MOV         R2, #0 
    /*0001b818*/ MOV         SL, #1 
    /*0001b81c*/ STR         FP, [R8, #168]              @ 0xa8 
    /*0001b820*/ MOV         R3, #0 
    /*0001b824*/ LDR         R0, [SP, #28] 
    /*0001b828*/ STRD        R2, [R5, R1] 
    /*0001b82c*/ MOV         R1, FP 
    /*0001b830*/ STR         SL, [R5, #32] 
    /*0001b834*/ ADD         R3, R5, #32768              @ 0x8000 
    /*0001b838*/ STR         SL, [R5, #48]               @ 0x30 
    /*0001b83c*/ STR         FP, [R8, #180]              @ 0xb4 
    /*0001b840*/ STR         R3, [SP, #24] 
    /*0001b844*/ BL          0x000000000001B844          @ VencClearAllQueue [R_ARM_CALL: .text+0xb1cc] 
    /*0001b848*/ MOV         R4, R0 
    /*0001b84c*/ ADD         R0, R5, #12352              @ 0x3040 
    /*0001b850*/ ADD         R0, R0, #56                 @ 0x38 
    /*0001b854*/ BL          0x000000000001B854          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0001b858*/ ADD         R3, R5, #32768              @ 0x8000 
    /*0001b85c*/ ADD         R1, SP, #36                 @ 0x24 
    /*0001b860*/ MOV         R0, R9 
    /*0001b864*/ STR         FP, [R3, #3344]             @ 0xd10 
    /*0001b868*/ BL          0x000000000001B868          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001b86c*/ STR         SL, [R8, #568]              @ 0x238 
    /*0001b870*/ MOV         R0, SL 
    /*0001b874*/ BL          0x000000000001B874          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001b878*/ LDR         R3, [R0, #104]              @ 0x68 
    /*0001b87c*/ MOV         R0, SL 
    /*0001b880*/ BLX         R3 
    /*0001b884*/ LDR         R3, [R5, #3704]             @ 0xe78 
    /*0001b888*/ CMP         R0, FP 
    /*0001b88c*/ BEQ         VENC_SysReset_x1b9c4
    /*0001b890*/ CMP         R3, #6 
    /*0001b894*/ BEQ         VENC_SysReset_x1baa8
    VENC_SysReset_x1b898:
    /*0001b898*/ MOVW        SL, #0                      @ VENC_WaitConditionCallBack3 [R_ARM_MOVW_ABS_NC: .text+0x1b620] 
    /*0001b89c*/ MOVW        FP, #36240                  @ 0x8d90 
    /*0001b8a0*/ MOVT        SL, #0                      @ VENC_WaitConditionCallBack3 [R_ARM_MOVT_ABS: .text+0x1b620] 
    /*0001b8a4*/ B           VENC_SysReset_x1b8b4
    VENC_SysReset_x1b8a8:
    /*0001b8a8*/ BL          0x000000000001B8A8          @ osal_wait_uninterruptible [R_ARM_CALL: +0x0] 
    /*0001b8ac*/ CMP         R0, #0 
    /*0001b8b0*/ BLT         VENC_SysReset_x1b8dc
    VENC_SysReset_x1b8b4:
    /*0001b8b4*/ LDR         R3, [SP, #28] 
    /*0001b8b8*/ ADD         R2, SP, #28 
    /*0001b8bc*/ LDR         IP, [R6] 
    /*0001b8c0*/ MOV         R1, SL 
    /*0001b8c4*/ ADD         R0, R5, #12864              @ 0x3240 
    /*0001b8c8*/ MLA         R3, FP, R3, IP 
    /*0001b8cc*/ ADD         R3, R3, #12288              @ 0x3000 
    /*0001b8d0*/ LDR         R3, [R3, #572]              @ 0x23c 
    /*0001b8d4*/ CMP         R3, #1 
    /*0001b8d8*/ BNE         VENC_SysReset_x1b8a8
    VENC_SysReset_x1b8dc:
    /*0001b8dc*/ LDR         R2, [SP, #24] 
    /*0001b8e0*/ MOV         R3, #0 
    /*0001b8e4*/ ADD         R1, SP, #36                 @ 0x24 
    /*0001b8e8*/ STR         R3, [R8, #572]              @ 0x23c 
    /*0001b8ec*/ STR         R3, [R8, #568]              @ 0x238 
    /*0001b8f0*/ MOV         R0, R9 
    /*0001b8f4*/ STR         R3, [R2, #3284]             @ 0xcd4 
    /*0001b8f8*/ BL          0x000000000001B8F8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001b8fc*/ LDR         R3, [SP, #16] 
    /*0001b900*/ MOV         R0, R9 
    /*0001b904*/ ADD         R1, SP, #36                 @ 0x24 
    /*0001b908*/ STR         R3, [R5, #16] 
    /*0001b90c*/ LDR         R3, [SP, #20] 
    /*0001b910*/ STR         R3, [R8, #132]              @ 0x84 
    /*0001b914*/ BL          0x000000000001B914          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001b918*/ MOV         R0, R7 
    /*0001b91c*/ BL          0x000000000001B91C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b920*/ B           VENC_SysReset_x1b680
    VENC_SysReset_x1b924:
    /*0001b924*/ MOVW        R2, #1002                   @ 0x3ea 
    /*0001b928*/ CMP         R3, R2 
    /*0001b92c*/ BEQ         VENC_SysReset_x1ba14
    /*0001b930*/ MOVW        R2, #1006                   @ 0x3ee 
    /*0001b934*/ CMP         R3, R2 
    /*0001b938*/ BEQ         VENC_SysReset_x1b7c8
    VENC_SysReset_x1b93c:
    /*0001b93c*/ MOVW        R4, #32776                  @ 0x8008 
    /*0001b940*/ MOVT        R4, #40968                  @ 0xa008 
    VENC_SysReset_x1b944:
    /*0001b944*/ LDR         R2, [SP, #28] 
    /*0001b948*/ MOVW        R1, #3533                   @ 0xdcd 
    /*0001b94c*/ STR         R3, [SP, #8] 
    /*0001b950*/ MOV         R0, #3 
    /*0001b954*/ STR         R1, [SP] 
    /*0001b958*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xe28] 
    /*0001b95c*/ STR         R2, [SP, #4] 
    /*0001b960*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xe28] 
    /*0001b964*/ MOV         R1, #8 
    /*0001b968*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x79ec] 
    /*0001b96c*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x79ec] 
    /*0001b970*/ BL          0x000000000001B970          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b974*/ MOV         R0, R7 
    /*0001b978*/ BL          0x000000000001B978          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b97c*/ B           VENC_SysReset_x1b680
    VENC_SysReset_x1b980:
    /*0001b980*/ LDR         R1, [SP, #28] 
    /*0001b984*/ MOVW        LR, #3498                   @ 0xdaa 
    /*0001b988*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xe28] 
    /*0001b98c*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x798c] 
    /*0001b990*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xe28] 
    /*0001b994*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x798c] 
    /*0001b998*/ STR         R1, [SP, #12] 
    /*0001b99c*/ MOV         R0, #3 
    /*0001b9a0*/ LDR         IP, [R5, #8] 
    /*0001b9a4*/ MOV         R1, #8 
    /*0001b9a8*/ STR         R4, [SP, #4] 
    /*0001b9ac*/ STR         LR, [SP] 
    /*0001b9b0*/ STR         IP, [SP, #8] 
    /*0001b9b4*/ BL          0x000000000001B9B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b9b8*/ MOV         R0, R7 
    /*0001b9bc*/ BL          0x000000000001B9BC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001b9c0*/ B           VENC_SysReset_x1b680
    VENC_SysReset_x1b9c4:
    /*0001b9c4*/ CMP         R3, #6 
    /*0001b9c8*/ BEQ         VENC_SysReset_x1ba88
    VENC_SysReset_x1b9cc:
    /*0001b9cc*/ MOVW        SL, #0                      @ VENC_WaitConditionCallBack3 [R_ARM_MOVW_ABS_NC: .text+0x1b620] 
    /*0001b9d0*/ MOVW        FP, #36240                  @ 0x8d90 
    /*0001b9d4*/ MOVT        SL, #0                      @ VENC_WaitConditionCallBack3 [R_ARM_MOVT_ABS: .text+0x1b620] 
    /*0001b9d8*/ B           VENC_SysReset_x1b9e8
    VENC_SysReset_x1b9dc:
    /*0001b9dc*/ BL          0x000000000001B9DC          @ osal_wait_uninterruptible [R_ARM_CALL: +0x0] 
    /*0001b9e0*/ CMP         R0, #0 
    /*0001b9e4*/ BLT         VENC_SysReset_x1b8dc
    VENC_SysReset_x1b9e8:
    /*0001b9e8*/ LDR         R3, [SP, #28] 
    /*0001b9ec*/ ADD         R2, SP, #28 
    /*0001b9f0*/ LDR         IP, [R6] 
    /*0001b9f4*/ MOV         R1, SL 
    /*0001b9f8*/ ADD         R0, R5, #12864              @ 0x3240 
    /*0001b9fc*/ MLA         R3, FP, R3, IP 
    /*0001ba00*/ ADD         R3, R3, #12288              @ 0x3000 
    /*0001ba04*/ LDR         R3, [R3, #572]              @ 0x23c 
    /*0001ba08*/ CMP         R3, #1 
    /*0001ba0c*/ BNE         VENC_SysReset_x1b9dc
    /*0001ba10*/ B           VENC_SysReset_x1b8dc
    VENC_SysReset_x1ba14:
    /*0001ba14*/ MOV         R0, #11 
    /*0001ba18*/ BL          0x000000000001BA18          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001ba1c*/ MOV         R1, R4 
    /*0001ba20*/ LDR         R3, [R0, #88]               @ 0x58 
    /*0001ba24*/ B           VENC_SysReset_x1b798
    VENC_SysReset_x1ba28:
    /*0001ba28*/ MOV         R0, #13 
    /*0001ba2c*/ BL          0x000000000001BA2C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001ba30*/ MOV         R1, R4 
    /*0001ba34*/ LDR         R3, [R0, #152]              @ 0x98 
    /*0001ba38*/ B           VENC_SysReset_x1b798
    VENC_SysReset_x1ba3c:
    /*0001ba3c*/ MOV         R4, #65024                  @ 0xfe00 
    /*0001ba40*/ MOVT        R4, #65535                  @ 0xffff 
    /*0001ba44*/ B           VENC_SysReset_x1b680
    VENC_SysReset_x1ba48:
    /*0001ba48*/ LDR         R2, [R5, #4] 
    /*0001ba4c*/ MOVW        R0, #3541                   @ 0xdd5 
    /*0001ba50*/ LDR         R1, [SP, #28] 
    /*0001ba54*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xe28] 
    /*0001ba58*/ STR         R0, [SP] 
    /*0001ba5c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xe28] 
    /*0001ba60*/ STR         R2, [SP, #8] 
    /*0001ba64*/ MOV         R0, #3 
    /*0001ba68*/ STR         R1, [SP, #4] 
    /*0001ba6c*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7a34] 
    /*0001ba70*/ MOV         R1, #8 
    /*0001ba74*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7a34] 
    /*0001ba78*/ BL          0x000000000001BA78          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ba7c*/ MOV         R0, R7 
    /*0001ba80*/ BL          0x000000000001BA80          @ osal_up [R_ARM_CALL: +0x0] 
    /*0001ba84*/ B           VENC_SysReset_x1b680
    VENC_SysReset_x1ba88:
    /*0001ba88*/ ADD         R3, R5, #8192               @ 0x2000 
    /*0001ba8c*/ LDR         R2, [R3, #1016]             @ 0x3f8 
    /*0001ba90*/ CMP         R2, #6 
    /*0001ba94*/ BNE         VENC_SysReset_x1b9cc
    /*0001ba98*/ LDR         R3, [R3, #3744]             @ 0xea0 
    /*0001ba9c*/ CMP         R3, #6 
    /*0001baa0*/ BNE         VENC_SysReset_x1b9cc
    /*0001baa4*/ B           VENC_SysReset_x1b8dc
    VENC_SysReset_x1baa8:
    /*0001baa8*/ ADD         R3, R5, #4096               @ 0x1000 
    /*0001baac*/ LDR         R3, [R3, #2336]             @ 0x920 
    /*0001bab0*/ CMP         R3, #6 
    /*0001bab4*/ BNE         VENC_SysReset_x1b898
    /*0001bab8*/ ADD         R3, R5, #8192               @ 0x2000 
    /*0001babc*/ LDR         R2, [R3, #1016]             @ 0x3f8 
    /*0001bac0*/ CMP         R2, #6 
    /*0001bac4*/ BNE         VENC_SysReset_x1b898
    /*0001bac8*/ LDR         R3, [R3, #3744]             @ 0xea0 
    /*0001bacc*/ CMP         R3, #6 
    /*0001bad0*/ BNE         VENC_SysReset_x1b898
    /*0001bad4*/ B           VENC_SysReset_x1b8dc
    VENC_SysReset_x1bad8:
    /*0001bad8*/ MOV         R0, #45                     @ 0x2d 
    /*0001badc*/ BL          0x000000000001BADC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001bae0*/ CMP         R0, #0 
    /*0001bae4*/ BEQ         VENC_SysReset_x1b7f4
    /*0001bae8*/ LDR         R2, [R5, #56]               @ 0x38 
    /*0001baec*/ LDR         R3, [SP, #28] 
    /*0001baf0*/ CMP         R2, R3 
    /*0001baf4*/ BEQ         VENC_SysReset_x1bb18
    /*0001baf8*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7a84] 
    /*0001bafc*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xe28] 
    /*0001bb00*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001bb04*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7a84] 
    /*0001bb08*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xe28] 
    /*0001bb0c*/ MOVW        R2, #3548                   @ 0xddc 
    /*0001bb10*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001bb14*/ BL          0x000000000001BB14          @ osal_panic [R_ARM_CALL: +0x0] 
    VENC_SysReset_x1bb18:
    /*0001bb18*/ MOV         R0, #45                     @ 0x2d 
    /*0001bb1c*/ BL          0x000000000001BB1C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001bb20*/ ADD         R3, SP, #40                 @ 0x28 
    /*0001bb24*/ LDR         R2, [R5, #56]               @ 0x38 
    /*0001bb28*/ MOV         R1, #0 
    /*0001bb2c*/ LDR         R4, [R0, #8] 
    /*0001bb30*/ MOV         R0, #8 
    /*0001bb34*/ BLX         R4 
    /*0001bb38*/ B           VENC_SysReset_x1b7f4
FUNC_END VENC_SysReset


FUNC_BEGIN VENC_Notify
    /*0001bb3c*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001bb40*/ MOVW        R7, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xc0] 
    /*0001bb44*/ MOVT        R7, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xc0] 
    /*0001bb48*/ MOV         R2, #1 
    /*0001bb4c*/ LDR         R3, [R7, #4] 
    /*0001bb50*/ STR         R2, [R7] 
    /*0001bb54*/ CMP         R3, #0 
    /*0001bb58*/ POPEQ       {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0001bb5c*/ MOV         R4, #0 
    /*0001bb60*/ MOVW        FP, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001bb64*/ MOV         R5, R4 
    /*0001bb68*/ MOVT        FP, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001bb6c*/ MOVW        R6, #12432                  @ 0x3090 
    /*0001bb70*/ MOVW        R9, #12408                  @ 0x3078 
    /*0001bb74*/ MOVW        R8, #12404                  @ 0x3074 
    /*0001bb78*/ B           VENC_Notify_x1bb98
    VENC_Notify_x1bb7c:
    /*0001bb7c*/ ADD         R0, SL, R6 
    /*0001bb80*/ BL          0x000000000001BB80          @ osal_up [R_ARM_CALL: +0x0] 
    VENC_Notify_x1bb84:
    /*0001bb84*/ LDR         R3, [R7, #4] 
    /*0001bb88*/ ADD         R4, R4, #36096              @ 0x8d00 
    /*0001bb8c*/ ADD         R4, R4, #144                @ 0x90 
    /*0001bb90*/ CMP         R5, R3 
    /*0001bb94*/ BCS         VENC_Notify_x1bbf8
    VENC_Notify_x1bb98:
    /*0001bb98*/ LDR         R0, [FP] 
    /*0001bb9c*/ ADD         R5, R5, #1 
    /*0001bba0*/ ADD         R0, R0, R4 
    /*0001bba4*/ ADD         R0, R0, R6 
    /*0001bba8*/ BL          0x000000000001BBA8          @ osal_down [R_ARM_CALL: +0x0] 
    /*0001bbac*/ SUBS        R3, R0, #0 
    /*0001bbb0*/ BNE         VENC_Notify_x1bb84
    /*0001bbb4*/ LDR         R2, [FP] 
    /*0001bbb8*/ ADD         SL, R2, R4 
    /*0001bbbc*/ LDR         R2, [R2, R4] 
    /*0001bbc0*/ CMP         R2, #0 
    /*0001bbc4*/ BEQ         VENC_Notify_x1bb7c
    /*0001bbc8*/ ADD         R2, SL, #12288              @ 0x3000 
    /*0001bbcc*/ STR         R3, [SL, #16] 
    /*0001bbd0*/ ADD         R0, SL, R9 
    /*0001bbd4*/ STR         R3, [R2, #132]              @ 0x84 
    /*0001bbd8*/ STR         R3, [R2, #140]              @ 0x8c 
    /*0001bbdc*/ STR         R3, [R2, #136]              @ 0x88 
    /*0001bbe0*/ BL          0x000000000001BBE0          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0001bbe4*/ ADD         R0, SL, R8 
    /*0001bbe8*/ BL          0x000000000001BBE8          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0001bbec*/ LDR         SL, [FP] 
    /*0001bbf0*/ ADD         SL, SL, R4 
    /*0001bbf4*/ B           VENC_Notify_x1bb7c
    VENC_Notify_x1bbf8:
    /*0001bbf8*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END VENC_Notify


FUNC_BEGIN VENC_QueryState
    /*0001bbfc*/ PUSH        {R4, LR} 
    /*0001bc00*/ MOV         R4, R0 
    /*0001bc04*/ MOVW        R0, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x98] 
    /*0001bc08*/ MOVT        R0, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x98] 
    /*0001bc0c*/ BL          0x000000000001BC0C          @ osal_atomic_read [R_ARM_CALL: +0x0] 
    /*0001bc10*/ CMP         R0, #0 
    /*0001bc14*/ MOVEQ       R3, #17 
    /*0001bc18*/ MOVNE       R3, #34                     @ 0x22 
    /*0001bc1c*/ STR         R3, [R4] 
    /*0001bc20*/ POP         {R4, PC} 
FUNC_END VENC_QueryState


FUNC_BEGIN VencMmap
    /*0001bc24*/ SUB         R2, R2, R1 
    /*0001bc28*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001bc2c*/ LSR         R2, R2, #1 
    /*0001bc30*/ UBFX        LR, R2, #0, #12 
    /*0001bc34*/ SUB         SP, SP, #52                 @ 0x34 
    /*0001bc38*/ CMP         LR, #0 
    /*0001bc3c*/ STR         R2, [SP, #28] 
    /*0001bc40*/ BNE         VencMmap_x1be04
    /*0001bc44*/ MOV         IP, R3 
    /*0001bc48*/ STR         R3, [SP, #40]               @ 0x28 
    /*0001bc4c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xc0] 
    /*0001bc50*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xc0] 
    /*0001bc54*/ STR         R0, [SP, #32] 
    /*0001bc58*/ LDR         R9, [R3, #4] 
    /*0001bc5c*/ STR         R1, [SP, #44]               @ 0x2c 
    /*0001bc60*/ CMP         R9, #0 
    /*0001bc64*/ BEQ         VencMmap_x1bdd4
    /*0001bc68*/ LDR         R0, [SP, #28] 
    /*0001bc6c*/ MOVW        R2, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001bc70*/ MOVT        R2, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001bc74*/ MOVW        R1, #36240                  @ 0x8d90 
    /*0001bc78*/ MUL         R9, R1, R9 
    /*0001bc7c*/ ADD         R3, IP, R0, LSR #12 
    /*0001bc80*/ LDR         R8, [R2] 
    /*0001bc84*/ MOV         R1, #0 
    /*0001bc88*/ MOV         R0, R3 
    /*0001bc8c*/ STRD        R0, [SP, #16] 
    /*0001bc90*/ ADD         R0, R8, #12800              @ 0x3200 
    /*0001bc94*/ MOV         SL, IP 
    /*0001bc98*/ MOV         FP, #0 
    /*0001bc9c*/ ADD         R0, R0, #16 
    /*0001bca0*/ STR         LR, [SP, #36]               @ 0x24 
    /*0001bca4*/ B           VencMmap_x1bcbc
    VencMmap_x1bca8:
    /*0001bca8*/ MOVW        R3, #36240                  @ 0x8d90 
    /*0001bcac*/ ADD         LR, LR, R3 
    /*0001bcb0*/ CMP         R9, LR 
    /*0001bcb4*/ ADD         R0, R0, R3 
    /*0001bcb8*/ BEQ         VencMmap_x1bd54
    VencMmap_x1bcbc:
    /*0001bcbc*/ LDR         R3, [R8, LR] 
    /*0001bcc0*/ CMP         R3, #1 
    /*0001bcc4*/ BNE         VencMmap_x1bca8
    /*0001bcc8*/ LDR         IP, [R0, #24] 
    /*0001bccc*/ MOV         R1, #0 
    /*0001bcd0*/ STR         LR, [SP, #24] 
    VencMmap_x1bcd4:
    /*0001bcd4*/ EOR         R3, R1, #1 
    /*0001bcd8*/ CMP         R1, IP 
    /*0001bcdc*/ MOVCS       R3, #0 
    /*0001bce0*/ ANDCC       R3, R3, #1 
    /*0001bce4*/ MOV         R1, #1 
    /*0001bce8*/ CMP         R3, #0 
    /*0001bcec*/ BEQ         VencMmap_x1bd4c
    /*0001bcf0*/ LDRD        R2, [R0] 
    /*0001bcf4*/ LSR         R4, R2, #12 
    /*0001bcf8*/ LSR         R5, R3, #12 
    /*0001bcfc*/ ORR         R4, R4, R3, LSL #20 
    /*0001bd00*/ CMP         FP, R5 
    /*0001bd04*/ CMPEQ       SL, R4 
    /*0001bd08*/ BCC         VencMmap_x1bcd4
    /*0001bd0c*/ LDR         LR, [R0, #16] 
    /*0001bd10*/ ADDS        R2, R2, LR 
    /*0001bd14*/ ADC         R3, R3, #0 
    /*0001bd18*/ LSR         R6, R2, #12 
    /*0001bd1c*/ LSR         R7, R3, #12 
    /*0001bd20*/ ORR         R6, R6, R3, LSL #20 
    /*0001bd24*/ CMP         FP, R7 
    /*0001bd28*/ CMPEQ       SL, R6 
    /*0001bd2c*/ BCS         VencMmap_x1bcd4
    /*0001bd30*/ LDRD        R2, [SP, #16] 
    /*0001bd34*/ CMP         R7, R3 
    /*0001bd38*/ CMPEQ       R6, R2 
    /*0001bd3c*/ BCC         VencMmap_x1bcd4
    /*0001bd40*/ LDR         LR, [SP, #24] 
    /*0001bd44*/ STR         R1, [SP, #36]               @ 0x24 
    /*0001bd48*/ B           VencMmap_x1bca8
    VencMmap_x1bd4c:
    /*0001bd4c*/ LDR         LR, [SP, #24] 
    /*0001bd50*/ B           VencMmap_x1bca8
    VencMmap_x1bd54:
    /*0001bd54*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0001bd58*/ CMP         R3, #1 
    /*0001bd5c*/ BNE         VencMmap_x1bdd4
    /*0001bd60*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x98] 
    /*0001bd64*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x98] 
    /*0001bd68*/ LDR         R3, [R3, #4] 
    /*0001bd6c*/ CMP         R3, #0 
    /*0001bd70*/ BEQ         VencMmap_x1bdc8
    VencMmap_x1bd74:
    /*0001bd74*/ LDR         R4, [SP, #28] 
    /*0001bd78*/ LDR         R7, [SP, #40]               @ 0x28 
    /*0001bd7c*/ LDR         R5, [SP, #44]               @ 0x2c 
    /*0001bd80*/ LDR         R6, [SP, #32] 
    /*0001bd84*/ MOV         R3, R4 
    /*0001bd88*/ MOV         R2, R7 
    /*0001bd8c*/ MOV         R1, R5 
    /*0001bd90*/ MOV         R0, R6 
    /*0001bd94*/ BL          0x000000000001BD94          @ osal_remap_pfn_range [R_ARM_CALL: +0x0] 
    /*0001bd98*/ CMP         R0, #0 
    /*0001bd9c*/ BNE         VencMmap_x1be04
    /*0001bda0*/ MOV         R2, R7 
    /*0001bda4*/ MOV         R3, R4 
    /*0001bda8*/ ADD         R1, R5, R4 
    /*0001bdac*/ MOV         R0, R6 
    /*0001bdb0*/ BL          0x000000000001BDB0          @ osal_remap_pfn_range [R_ARM_CALL: +0x0] 
    /*0001bdb4*/ ADDS        R0, R0, #0 
    /*0001bdb8*/ MOVNE       R0, #1 
    /*0001bdbc*/ RSB         R0, R0, #0 
    /*0001bdc0*/ ADD         SP, SP, #52                 @ 0x34 
    /*0001bdc4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencMmap_x1bdc8:
    /*0001bdc8*/ LDR         R0, [SP, #32] 
    /*0001bdcc*/ BL          0x000000000001BDCC          @ osal_pgprot_noncached [R_ARM_CALL: +0x0] 
    /*0001bdd0*/ B           VencMmap_x1bd74
    VencMmap_x1bdd4:
    /*0001bdd4*/ LDR         R3, [SP, #28] 
    /*0001bdd8*/ MOV         R1, #8 
    /*0001bddc*/ LDR         R2, [SP, #40]               @ 0x28 
    /*0001bde0*/ MOV         R0, #3 
    /*0001bde4*/ STR         R3, [SP, #8] 
    /*0001bde8*/ MOVW        R3, #6582                   @ 0x19b6 
    /*0001bdec*/ STR         R2, [SP, #4] 
    /*0001bdf0*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7ae4] 
    /*0001bdf4*/ STR         R3, [SP] 
    /*0001bdf8*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7ae4] 
    /*0001bdfc*/ LDR         R3, [PC, #12]               @ 0x000000000001be10 
    /*0001be00*/ BL          0x000000000001BE00          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencMmap_x1be04:
    /*0001be04*/ MVN         R0, #0 
    /*0001be08*/ ADD         SP, SP, #52                 @ 0x34 
    /*0001be0c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*0001be10*/ ANDEQ       R0, R0, R8, LSR LR 
FUNC_END VencMmap


FUNC_BEGIN VencPoll
    /*0001be14*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xc0] 
    /*0001be18*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xc0] 
    /*0001be1c*/ PUSH        {R4, R5, R6, LR} 
    /*0001be20*/ LDR         R3, [R3] 
    /*0001be24*/ CMP         R3, #0 
    /*0001be28*/ MOVWNE      R4, #32784                  @ 0x8010 
    /*0001be2c*/ MOVTNE      R4, #40968                  @ 0xa008 
    /*0001be30*/ BEQ         VencPoll_x1be3c
    /*0001be34*/ MOV         R0, R4 
    /*0001be38*/ POP         {R4, R5, R6, PC} 
    VencPoll_x1be3c:
    /*0001be3c*/ LDR         R5, [R1] 
    /*0001be40*/ MOV         R4, R0 
    /*0001be44*/ MOVW        R0, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x98] 
    /*0001be48*/ MOVT        R0, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x98] 
    /*0001be4c*/ BL          0x000000000001BE4C          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*0001be50*/ MOV         R1, R4 
    /*0001be54*/ MOV         R0, R5 
    /*0001be58*/ BL          0x000000000001BE58          @ VencDoPoll [R_ARM_CALL: .text+0xe918] 
    /*0001be5c*/ MOV         R4, R0 
    /*0001be60*/ MOVW        R0, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x98] 
    /*0001be64*/ MOVT        R0, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x98] 
    /*0001be68*/ BL          0x000000000001BE68          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*0001be6c*/ MOV         R0, R4 
    /*0001be70*/ POP         {R4, R5, R6, PC} 
FUNC_END VencPoll


FUNC_BEGIN VENC_WaitConditionCallBack2
    /*0001be74*/ LDR         R1, [R0] 
    /*0001be78*/ MOVW        R3, #36240                  @ 0x8d90 
    /*0001be7c*/ MOVW        R2, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001be80*/ MOVT        R2, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001be84*/ MUL         R3, R3, R1 
    /*0001be88*/ LDR         R1, [R2] 
    /*0001be8c*/ ADD         R2, R1, R3 
    /*0001be90*/ LDR         IP, [R2, #3704]             @ 0xe78 
    /*0001be94*/ CMP         IP, #0 
    /*0001be98*/ BNE         VENC_WaitConditionCallBack2_x1bebc
    /*0001be9c*/ LDR         R3, [R1, R3] 
    /*0001bea0*/ CMP         R3, #0 
    /*0001bea4*/ BEQ         VENC_WaitConditionCallBack2_x1bebc
    /*0001bea8*/ ADD         R2, R2, #12288              @ 0x3000 
    /*0001beac*/ LDR         R1, [R0, #4] 
    /*0001beb0*/ LDR         R3, [R2, #176]              @ 0xb0 
    /*0001beb4*/ CMP         R1, R3 
    /*0001beb8*/ BEQ         VENC_WaitConditionCallBack2_x1bec4
    VENC_WaitConditionCallBack2_x1bebc:
    /*0001bebc*/ MOV         R0, #1 
    /*0001bec0*/ BX          LR 
    VENC_WaitConditionCallBack2_x1bec4:
    /*0001bec4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xc0] 
    /*0001bec8*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xc0] 
    /*0001becc*/ LDR         R0, [R3] 
    /*0001bed0*/ ADDS        R0, R0, #0 
    /*0001bed4*/ MOVNE       R0, #1 
    /*0001bed8*/ BX          LR 
FUNC_END VENC_WaitConditionCallBack2


FUNC_BEGIN VENC_Init
    /*0001bedc*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001bee0*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xc0] 
    /*0001bee4*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xc0] 
    /*0001bee8*/ SUB         SP, SP, #52                 @ 0x34 
    /*0001beec*/ LDR         R5, [R4] 
    /*0001bef0*/ CMP         R5, #2 
    /*0001bef4*/ BEQ         VENC_Init_x1bf28
    /*0001bef8*/ MOVW        R3, #6665                   @ 0x1a09 
    /*0001befc*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7b38] 
    /*0001bf00*/ STR         R3, [SP] 
    /*0001bf04*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7b38] 
    /*0001bf08*/ LDR         R3, [PC, #900]              @ 0x000000000001c294 
    /*0001bf0c*/ MOV         R1, #8 
    /*0001bf10*/ MOV         R0, #6 
    /*0001bf14*/ MOV         R5, #0 
    /*0001bf18*/ BL          0x000000000001BF18          @ HI_LOG [R_ARM_CALL: +0x0] 
    VENC_Init_x1bf1c:
    /*0001bf1c*/ MOV         R0, R5 
    /*0001bf20*/ ADD         SP, SP, #52                 @ 0x34 
    /*0001bf24*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VENC_Init_x1bf28:
    /*0001bf28*/ MOV         R0, R5 
    /*0001bf2c*/ BL          0x000000000001BF2C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001bf30*/ CMP         R0, #0 
    /*0001bf34*/ BEQ         VENC_Init_x1c264
    /*0001bf38*/ MOV         R0, R5 
    /*0001bf3c*/ BL          0x000000000001BF3C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001bf40*/ CMP         R0, #0 
    /*0001bf44*/ BEQ         VENC_Init_x1c238
    /*0001bf48*/ MOV         R0, R5 
    /*0001bf4c*/ BL          0x000000000001BF4C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001bf50*/ LDR         R3, [R0, #32] 
    /*0001bf54*/ CMP         R3, #0 
    /*0001bf58*/ BEQ         VENC_Init_x1c238
    /*0001bf5c*/ MOV         R0, R5 
    /*0001bf60*/ BL          0x000000000001BF60          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001bf64*/ LDR         R3, [R0, #36]               @ 0x24 
    /*0001bf68*/ CMP         R3, #0 
    /*0001bf6c*/ BEQ         VENC_Init_x1c238
    /*0001bf70*/ MOV         R0, R5 
    /*0001bf74*/ MOV         R6, #1 
    /*0001bf78*/ STR         R6, [R4, #8] 
    /*0001bf7c*/ BL          0x000000000001BF7C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001bf80*/ LDR         R3, [R0, #12] 
    /*0001bf84*/ BLX         R3 
    /*0001bf88*/ LDR         R5, [R4, #4] 
    /*0001bf8c*/ MOVW        R3, #0                      @ g_u32VencVersion [R_ARM_MOVW_ABS_NC: .bss+0x94] 
    /*0001bf90*/ MOVT        R3, #0                      @ g_u32VencVersion [R_ARM_MOVT_ABS: .bss+0x94] 
    /*0001bf94*/ CMP         R5, #0 
    /*0001bf98*/ STR         R0, [R3] 
    /*0001bf9c*/ BEQ         VENC_Init_x1bff4
    /*0001bfa0*/ MOVW        R7, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001bfa4*/ MOVT        R7, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001bfa8*/ MOV         R3, #0 
    /*0001bfac*/ MVN         R9, #0 
    /*0001bfb0*/ LDR         IP, [R7] 
    /*0001bfb4*/ MOV         R0, R3 
    /*0001bfb8*/ MOV         R1, R3 
    /*0001bfbc*/ MOVW        R8, #36240                  @ 0x8d90 
    VENC_Init_x1bfc0:
    /*0001bfc0*/ STR         R1, [IP, R3] 
    /*0001bfc4*/ ADD         R0, R0, #1 
    /*0001bfc8*/ LDR         IP, [R7] 
    /*0001bfcc*/ LDR         R5, [R4, #4] 
    /*0001bfd0*/ ADD         R2, IP, R3 
    /*0001bfd4*/ ADD         R3, R3, R8 
    /*0001bfd8*/ ADD         LR, R2, #12288              @ 0x3000 
    /*0001bfdc*/ CMP         R0, R5 
    /*0001bfe0*/ STR         R6, [R2, #20] 
    /*0001bfe4*/ STR         R9, [R2, #56]               @ 0x38 
    /*0001bfe8*/ STR         R1, [LR, #588]              @ 0x24c 
    /*0001bfec*/ STR         R1, [LR, #604]              @ 0x25c 
    /*0001bff0*/ BCC         VENC_Init_x1bfc0
    VENC_Init_x1bff4:
    /*0001bff4*/ MOV         R0, #2 
    /*0001bff8*/ STR         R5, [SP, #32] 
    /*0001bffc*/ MOVW        R2, #0                      @ Venc_ReceivePic [R_ARM_MOVW_ABS_NC: .text+0x20ac0] 
    /*0001c000*/ MOVW        R3, #0                      @ VENC_SysReset [R_ARM_MOVW_ABS_NC: .text+0x1b664] 
    /*0001c004*/ MOVT        R2, #0                      @ Venc_ReceivePic [R_ARM_MOVT_ABS: .text+0x20ac0] 
    /*0001c008*/ MOVT        R3, #0                      @ VENC_SysReset [R_ARM_MOVT_ABS: .text+0x1b664] 
    /*0001c00c*/ STR         R2, [SP, #36]               @ 0x24 
    /*0001c010*/ MOV         R6, #8 
    /*0001c014*/ MOV         R2, #4 
    /*0001c018*/ STR         R3, [SP, #40]               @ 0x28 
    /*0001c01c*/ STR         R2, [SP, #28] 
    /*0001c020*/ MOV         R3, #1 
    /*0001c024*/ STR         R6, [SP, #24] 
    /*0001c028*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0001c02c*/ BL          0x000000000001C02C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c030*/ LDR         R3, [R0, #32] 
    /*0001c034*/ ADD         R0, SP, #24 
    /*0001c038*/ BLX         R3 
    /*0001c03c*/ SUBS        R5, R0, #0 
    /*0001c040*/ BNE         VENC_Init_x1c134
    /*0001c044*/ MOV         R0, #7 
    /*0001c048*/ BL          0x000000000001C048          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c04c*/ CMP         R0, #0 
    /*0001c050*/ BEQ         VENC_Init_x1c0b8
    /*0001c054*/ MOV         R0, #7 
    /*0001c058*/ BL          0x000000000001C058          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c05c*/ LDR         R3, [R0] 
    /*0001c060*/ CMP         R3, #0 
    /*0001c064*/ BEQ         VENC_Init_x1c0b8
    /*0001c068*/ MOV         R0, #7 
    /*0001c06c*/ BL          0x000000000001C06C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c070*/ LDR         R3, [R0, #4] 
    /*0001c074*/ CMP         R3, #0 
    /*0001c078*/ BEQ         VENC_Init_x1c0b8
    /*0001c07c*/ MOV         R0, #7 
    /*0001c080*/ STR         R6, [SP, #8] 
    /*0001c084*/ STR         R5, [SP, #20] 
    /*0001c088*/ MOVW        R2, #0                      @ VENC_VpssQuery [R_ARM_MOVW_ABS_NC: .text+0x1df34] 
    /*0001c08c*/ MOVW        R3, #0                      @ VENC_VpssSend [R_ARM_MOVW_ABS_NC: .text+0x20f3c] 
    /*0001c090*/ MOVT        R2, #0                      @ VENC_VpssQuery [R_ARM_MOVT_ABS: .text+0x1df34] 
    /*0001c094*/ MOVT        R3, #0                      @ VENC_VpssSend [R_ARM_MOVT_ABS: .text+0x20f3c] 
    /*0001c098*/ STR         R2, [SP, #12] 
    /*0001c09c*/ STR         R3, [SP, #16] 
    /*0001c0a0*/ BL          0x000000000001C0A0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c0a4*/ LDR         R3, [R0] 
    /*0001c0a8*/ ADD         R0, SP, #8 
    /*0001c0ac*/ BLX         R3 
    /*0001c0b0*/ CMP         R0, #0 
    /*0001c0b4*/ BNE         VENC_Init_x1c214
    VENC_Init_x1c0b8:
    /*0001c0b8*/ MOV         R0, #3 
    /*0001c0bc*/ BL          0x000000000001C0BC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c0c0*/ CMP         R0, #0 
    /*0001c0c4*/ BEQ         VENC_Init_x1c0fc
    /*0001c0c8*/ MOV         R0, #3 
    /*0001c0cc*/ BL          0x000000000001C0CC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c0d0*/ LDR         R3, [R0] 
    /*0001c0d4*/ CMP         R3, #0 
    /*0001c0d8*/ BEQ         VENC_Init_x1c0fc
    /*0001c0dc*/ MOV         R0, #3 
    /*0001c0e0*/ BL          0x000000000001C0E0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c0e4*/ LDR         R3, [R0, #4] 
    /*0001c0e8*/ CMP         R3, #0 
    /*0001c0ec*/ BEQ         VENC_Init_x1c0fc
    /*0001c0f0*/ BL          0x000000000001C0F0          @ VENC_DRV_RegisterRgnCapacity [R_ARM_CALL: .text+0x26638] 
    /*0001c0f4*/ CMP         R0, #0 
    /*0001c0f8*/ BNE         VENC_Init_x1c160
    VENC_Init_x1c0fc:
    /*0001c0fc*/ BL          0x000000000001C0FC          @ VENC_DRV_Init [R_ARM_CALL: .text+0x26d94] 
    /*0001c100*/ MOVW        R3, #6750                   @ 0x1a5e 
    /*0001c104*/ MOV         R1, #8 
    /*0001c108*/ STR         R3, [SP] 
    /*0001c10c*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7c64] 
    /*0001c110*/ LDR         R3, [PC, #380]              @ 0x000000000001c294 
    /*0001c114*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7c64] 
    /*0001c118*/ MOV         R0, #5 
    /*0001c11c*/ BL          0x000000000001C11C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c120*/ MOV         R3, #0 
    /*0001c124*/ MOV         R0, R5 
    /*0001c128*/ STR         R3, [R4] 
    /*0001c12c*/ ADD         SP, SP, #52                 @ 0x34 
    /*0001c130*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VENC_Init_x1c134:
    /*0001c134*/ MOV         R1, R6 
    /*0001c138*/ MOVW        R3, #6707                   @ 0x1a33 
    /*0001c13c*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7bb8] 
    /*0001c140*/ STR         R3, [SP] 
    /*0001c144*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7bb8] 
    /*0001c148*/ LDR         R3, [PC, #324]              @ 0x000000000001c294 
    /*0001c14c*/ MOV         R0, #3 
    /*0001c150*/ BL          0x000000000001C150          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c154*/ MOV         R0, R5 
    /*0001c158*/ ADD         SP, SP, #52                 @ 0x34 
    /*0001c15c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VENC_Init_x1c160:
    /*0001c160*/ MOVW        R3, #6742                   @ 0x1a56 
    /*0001c164*/ MOV         R1, #8 
    /*0001c168*/ STR         R3, [SP] 
    /*0001c16c*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7c2c] 
    /*0001c170*/ LDR         R3, [PC, #284]              @ 0x000000000001c294 
    /*0001c174*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7c2c] 
    /*0001c178*/ MOV         R0, #3 
    /*0001c17c*/ BL          0x000000000001C17C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c180*/ MOV         R0, #7 
    /*0001c184*/ BL          0x000000000001C184          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c188*/ CMP         R0, #0 
    /*0001c18c*/ BEQ         VENC_Init_x1c1d4
    /*0001c190*/ MOV         R0, #7 
    /*0001c194*/ BL          0x000000000001C194          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c198*/ LDR         R3, [R0] 
    /*0001c19c*/ CMP         R3, #0 
    /*0001c1a0*/ BEQ         VENC_Init_x1c1d4
    /*0001c1a4*/ MOV         R0, #7 
    /*0001c1a8*/ BL          0x000000000001C1A8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c1ac*/ LDR         R3, [R0, #4] 
    /*0001c1b0*/ CMP         R3, #0 
    /*0001c1b4*/ BEQ         VENC_Init_x1c1d4
    /*0001c1b8*/ MOV         R0, #7 
    /*0001c1bc*/ BL          0x000000000001C1BC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c1c0*/ LDR         R3, [R0, #4] 
    /*0001c1c4*/ MOV         R0, #8 
    /*0001c1c8*/ BLX         R3 
    /*0001c1cc*/ CMP         R0, #0 
    /*0001c1d0*/ BNE         VENC_Init_x1c270
    VENC_Init_x1c1d4:
    /*0001c1d4*/ MOV         R0, #2 
    /*0001c1d8*/ BL          0x000000000001C1D8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c1dc*/ LDR         R3, [R0, #36]               @ 0x24 
    /*0001c1e0*/ MOV         R0, #8 
    /*0001c1e4*/ BLX         R3 
    /*0001c1e8*/ SUBS        R5, R0, #0 
    /*0001c1ec*/ BEQ         VENC_Init_x1bf1c
    /*0001c1f0*/ MOVW        R3, #6772                   @ 0x1a74 
    /*0001c1f4*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7cd4] 
    /*0001c1f8*/ STR         R3, [SP] 
    /*0001c1fc*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7cd4] 
    /*0001c200*/ LDR         R3, [PC, #140]              @ 0x000000000001c294 
    /*0001c204*/ MOV         R1, #8 
    /*0001c208*/ MOV         R0, #3 
    /*0001c20c*/ BL          0x000000000001C20C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c210*/ B           VENC_Init_x1bf1c
    VENC_Init_x1c214:
    /*0001c214*/ MOVW        R3, #6729                   @ 0x1a49 
    /*0001c218*/ MOV         R1, R6 
    /*0001c21c*/ STR         R3, [SP] 
    /*0001c220*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7bf0] 
    /*0001c224*/ LDR         R3, [PC, #104]              @ 0x000000000001c294 
    /*0001c228*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7bf0] 
    /*0001c22c*/ MOV         R0, #3 
    /*0001c230*/ BL          0x000000000001C230          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c234*/ B           VENC_Init_x1c1d4
    VENC_Init_x1c238:
    /*0001c238*/ MOVW        R3, #6678                   @ 0x1a16 
    /*0001c23c*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7b78] 
    /*0001c240*/ STR         R3, [SP] 
    /*0001c244*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7b78] 
    /*0001c248*/ LDR         R3, [PC, #68]               @ 0x000000000001c294 
    /*0001c24c*/ MOV         R1, #8 
    /*0001c250*/ MOV         R0, #3 
    /*0001c254*/ MOVW        R5, #32784                  @ 0x8010 
    /*0001c258*/ BL          0x000000000001C258          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c25c*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001c260*/ B           VENC_Init_x1bf1c
    VENC_Init_x1c264:
    /*0001c264*/ MOVW        R5, #32784                  @ 0x8010 
    /*0001c268*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001c26c*/ B           VENC_Init_x1bf1c
    VENC_Init_x1c270:
    /*0001c270*/ MOVW        R3, #6763                   @ 0x1a6b 
    /*0001c274*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7c94] 
    /*0001c278*/ STR         R3, [SP] 
    /*0001c27c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7c94] 
    /*0001c280*/ LDR         R3, [PC, #12]               @ 0x000000000001c294 
    /*0001c284*/ MOV         R1, #8 
    /*0001c288*/ MOV         R0, #3 
    /*0001c28c*/ BL          0x000000000001C28C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c290*/ B           VENC_Init_x1c1d4
    /*0001c294*/ ANDEQ       R0, R0, R4, ASR #28 
FUNC_END VENC_Init


FUNC_BEGIN VencCheckVideoCfg.part.5
    /*0001c298*/ ADD         R3, R0, #12288              @ 0x3000 
    /*0001c29c*/ PUSH        {R4, R5, LR} 
    /*0001c2a0*/ SUB         SP, SP, #36                 @ 0x24 
    /*0001c2a4*/ LDR         LR, [R3, #512]              @ 0x200 
    /*0001c2a8*/ LDR         R2, [R3, #520]              @ 0x208 
    /*0001c2ac*/ LDR         IP, [R1] 
    /*0001c2b0*/ ADD         R2, LR, R2 
    /*0001c2b4*/ LDR         R4, [R3, #516]              @ 0x204 
    /*0001c2b8*/ CMP         R2, IP 
    /*0001c2bc*/ LDR         R3, [R3, #524]              @ 0x20c 
    /*0001c2c0*/ ADDHI       R3, R4, R3 
    /*0001c2c4*/ BHI         VencCheckVideoCfg.part.5_x1c2e4
    /*0001c2c8*/ LDR         IP, [R1, #4] 
    /*0001c2cc*/ ADD         R3, R4, R3 
    /*0001c2d0*/ CMP         R3, IP 
    /*0001c2d4*/ MOVLS       R0, #0 
    /*0001c2d8*/ BHI         VencCheckVideoCfg.part.5_x1c2e4
    VencCheckVideoCfg.part.5_x1c2dc:
    /*0001c2dc*/ ADD         SP, SP, #36                 @ 0x24 
    /*0001c2e0*/ POP         {R4, R5, PC} 
    VencCheckVideoCfg.part.5_x1c2e4:
    /*0001c2e4*/ ADD         R0, R0, #8192               @ 0x2000 
    /*0001c2e8*/ STR         R2, [SP, #12] 
    /*0001c2ec*/ STR         R3, [SP, #16] 
    /*0001c2f0*/ MOV         IP, R1 
    /*0001c2f4*/ LDR         R3, [R0, #4048]             @ 0xfd0 
    /*0001c2f8*/ MOVW        R5, #1106                   @ 0x452 
    /*0001c2fc*/ STR         R4, [SP, #8] 
    /*0001c300*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7d10] 
    /*0001c304*/ ADD         R3, R3, #1 
    /*0001c308*/ STR         R3, [R0, #4048]             @ 0xfd0 
    /*0001c30c*/ LDR         R4, [R1, #4] 
    /*0001c310*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7d10] 
    /*0001c314*/ LDR         R3, [IP] 
    /*0001c318*/ MOV         R1, #8 
    /*0001c31c*/ MOV         R0, #3 
    /*0001c320*/ STR         LR, [SP, #4] 
    /*0001c324*/ STR         R4, [SP, #24] 
    /*0001c328*/ STR         R3, [SP, #20] 
    /*0001c32c*/ STR         R5, [SP] 
    /*0001c330*/ LDR         R3, [PC, #12]               @ 0x000000000001c344 
    /*0001c334*/ BL          0x000000000001C334          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001c338*/ MOVW        R0, #32776                  @ 0x8008 
    /*0001c33c*/ MOVT        R0, #40968                  @ 0xa008 
    /*0001c340*/ B           VencCheckVideoCfg.part.5_x1c2dc
    /*0001c344*/ ANDEQ       R0, R0, R0, ASR LR 
FUNC_END VencCheckVideoCfg.part.5


FUNC_BEGIN IsFinshRcvOnePic.part.13
    /*0001c348*/ ADD         R1, R0, #12288              @ 0x3000 
    /*0001c34c*/ MOV         R2, R0 
    /*0001c350*/ LDR         R3, [R1, #648]              @ 0x288 
    /*0001c354*/ LDRB        R1, [R1, #652]              @ 0x28c 
    /*0001c358*/ CMP         R3, #0 
    /*0001c35c*/ LDRNE       R3, [R0, #32] 
    /*0001c360*/ MOVEQ       R3, #1 
    /*0001c364*/ LDRNE       R0, [R0, #44]               @ 0x2c 
    /*0001c368*/ SUBNE       R3, R3, R0 
    /*0001c36c*/ CLZNE       R3, R3 
    /*0001c370*/ LSRNE       R3, R3, #5 
    /*0001c374*/ CMP         R1, #0 
    /*0001c378*/ MOV         R0, R3 
    /*0001c37c*/ BXEQ        LR 
    /*0001c380*/ LDR         R3, [R2, #32] 
    /*0001c384*/ LDR         IP, [R2, #36]               @ 0x24 
    /*0001c388*/ CMP         R3, IP 
    /*0001c38c*/ MOVNE       R0, #0 
    /*0001c390*/ CMP         R1, #1 
    /*0001c394*/ BXLS        LR 
    /*0001c398*/ LDR         R2, [R2, #40]               @ 0x28 
    /*0001c39c*/ CMP         R3, R2 
    /*0001c3a0*/ MOVNE       R0, #0 
    /*0001c3a4*/ BX          LR 
FUNC_END IsFinshRcvOnePic.part.13


FUNC_BEGIN VencClose
    /*0001c3a8*/ MOV         R0, #0 
    /*0001c3ac*/ BX          LR 
FUNC_END VencClose


FUNC_BEGIN VENC_Freeze
    /*0001c3b0*/ MOV         R0, #0 
    /*0001c3b4*/ BX          LR 
FUNC_END VENC_Freeze


FUNC_BEGIN VencOpen
    /*0001c3b8*/ MOV         R0, #0 
    /*0001c3bc*/ BX          LR 
FUNC_END VencOpen


FUNC_BEGIN VENC_Exit
    /*0001c3c0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001c3c4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xc0] 
    /*0001c3c8*/ SUB         SP, SP, #36                 @ 0x24 
    /*0001c3cc*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xc0] 
    /*0001c3d0*/ STR         R3, [SP, #24] 
    /*0001c3d4*/ LDR         R3, [R3] 
    /*0001c3d8*/ CMP         R3, #2 
    /*0001c3dc*/ BEQ         VENC_Exit_x1c7f4
    /*0001c3e0*/ MOV         R0, #2 
    /*0001c3e4*/ BL          0x000000000001C3E4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c3e8*/ CMP         R0, #0 
    /*0001c3ec*/ BEQ         VENC_Exit_x1cc70
    /*0001c3f0*/ MOV         R0, #2 
    /*0001c3f4*/ BL          0x000000000001C3F4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c3f8*/ LDR         R3, [R0, #36]               @ 0x24 
    /*0001c3fc*/ CMP         R3, #0 
    /*0001c400*/ BEQ         VENC_Exit_x1cc70
    /*0001c404*/ MOV         R0, #2 
    /*0001c408*/ BL          0x000000000001C408          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c40c*/ LDR         R3, [R0, #36]               @ 0x24 
    /*0001c410*/ MOV         R0, #8 
    /*0001c414*/ BLX         R3 
    /*0001c418*/ CMP         R0, #0 
    /*0001c41c*/ BNE         VENC_Exit_x1cc98
    VENC_Exit_x1c420:
    /*0001c420*/ LDR         R3, [SP, #24] 
    /*0001c424*/ LDR         R3, [R3, #4] 
    /*0001c428*/ CMP         R3, #0 
    /*0001c42c*/ BEQ         VENC_Exit_x1c680
    /*0001c430*/ MOV         R3, #0 
    /*0001c434*/ MOVW        R2, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001c438*/ MOV         R9, #256                    @ 0x100 
    /*0001c43c*/ MOVT        R2, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001c440*/ MOV         R7, #512                    @ 0x200 
    /*0001c444*/ STR         R3, [SP, #12] 
    /*0001c448*/ STR         R2, [SP, #20] 
    /*0001c44c*/ MOVT        R9, #16 
    /*0001c450*/ MOVT        R7, #32 
    /*0001c454*/ STR         R3, [SP, #16] 
    /*0001c458*/ B           VENC_Exit_x1c488
    VENC_Exit_x1c45c:
    /*0001c45c*/ LDR         R3, [SP, #24] 
    /*0001c460*/ LDR         R2, [SP, #16] 
    /*0001c464*/ LDR         R1, [SP, #12] 
    /*0001c468*/ LDR         R3, [R3, #4] 
    /*0001c46c*/ ADD         R2, R2, #1 
    /*0001c470*/ ADD         R1, R1, #36096              @ 0x8d00 
    /*0001c474*/ STR         R2, [SP, #16] 
    /*0001c478*/ CMP         R2, R3 
    /*0001c47c*/ ADD         R3, R1, #144                @ 0x90 
    /*0001c480*/ STR         R3, [SP, #12] 
    /*0001c484*/ BCS         VENC_Exit_x1c680
    VENC_Exit_x1c488:
    /*0001c488*/ LDR         R3, [SP, #20] 
    /*0001c48c*/ LDR         R2, [SP, #12] 
    /*0001c490*/ LDR         R3, [R3] 
    /*0001c494*/ LDR         R3, [R3, R2] 
    /*0001c498*/ CMP         R3, #0 
    /*0001c49c*/ BEQ         VENC_Exit_x1c45c
    /*0001c4a0*/ MOV         R1, #0 
    /*0001c4a4*/ LDR         R0, [SP, #16] 
    /*0001c4a8*/ BL          0x000000000001C4A8          @ VencClearAllQueue [R_ARM_CALL: .text+0xb1cc] 
    /*0001c4ac*/ LDR         R3, [SP, #20] 
    /*0001c4b0*/ LDR         R2, [SP, #12] 
    /*0001c4b4*/ LDR         R3, [R3] 
    /*0001c4b8*/ ADD         R3, R3, R2 
    /*0001c4bc*/ ADD         R2, R3, #11904              @ 0x2e80 
    /*0001c4c0*/ ADD         R2, R2, #60                 @ 0x3c 
    /*0001c4c4*/ STR         R2, [SP, #28] 
    /*0001c4c8*/ CMP         R2, #0 
    /*0001c4cc*/ BEQ         VENC_Exit_x1cb50
    /*0001c4d0*/ ADD         R6, R3, #8192               @ 0x2000 
    /*0001c4d4*/ ADD         R3, R2, #28 
    /*0001c4d8*/ STR         R3, [SP, #8] 
    /*0001c4dc*/ MOV         R2, R3 
    /*0001c4e0*/ LDR         R3, [R6, #3800]             @ 0xed8 
    /*0001c4e4*/ CMP         R2, R3 
    /*0001c4e8*/ BEQ         VENC_Exit_x1c850
    /*0001c4ec*/ LDR         R2, [SP, #8] 
    /*0001c4f0*/ CMP         R3, R2 
    /*0001c4f4*/ BNE         VENC_Exit_x1c530
    VENC_Exit_x1c4f8:
    /*0001c4f8*/ MOVW        R3, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7dbc] 
    /*0001c4fc*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001c500*/ MOVT        R3, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7dbc] 
    /*0001c504*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001c508*/ MOV         R2, #212                    @ 0xd4 
    /*0001c50c*/ LDR         R1, [PC, #1960]             @ 0x000000000001ccbc 
    /*0001c510*/ BL          0x000000000001C510          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001c514*/ MVN         R8, #15 
    VENC_Exit_x1c518:
    /*0001c518*/ MOV         R0, R8 
    /*0001c51c*/ BL          0x000000000001C51C          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0001c520*/ LDR         R3, [R6, #3800]             @ 0xed8 
    /*0001c524*/ LDR         R2, [SP, #8] 
    /*0001c528*/ CMP         R3, R2 
    /*0001c52c*/ BEQ         VENC_Exit_x1c850
    VENC_Exit_x1c530:
    /*0001c530*/ LDM         R3, {R1, R2} 
    /*0001c534*/ STR         R2, [R1, #4] 
    /*0001c538*/ STR         R1, [R2] 
    /*0001c53c*/ STR         R9, [R3] 
    /*0001c540*/ STR         R7, [R3, #4] 
    /*0001c544*/ LDR         R2, [R6, #3784]             @ 0xec8 
    /*0001c548*/ SUB         R2, R2, #1 
    /*0001c54c*/ STR         R2, [R6, #3784]             @ 0xec8 
    /*0001c550*/ LDR         R4, [R3, #-8] 
    /*0001c554*/ CMP         R4, #0 
    /*0001c558*/ BEQ         VENC_Exit_x1c4f8
    /*0001c55c*/ LDR         R3, [R4, #28] 
    /*0001c560*/ ADD         SL, R4, #28 
    /*0001c564*/ SUB         R8, R4, #16 
    /*0001c568*/ CMP         SL, R3 
    /*0001c56c*/ MOVWNE      FP, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7dc8] 
    /*0001c570*/ MOVTNE      FP, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7dc8] 
    /*0001c574*/ BEQ         VENC_Exit_x1c5b8
    VENC_Exit_x1c578:
    /*0001c578*/ LDM         R3, {R1, R2} 
    /*0001c57c*/ STR         R2, [R1, #4] 
    /*0001c580*/ STR         R1, [R2] 
    /*0001c584*/ STR         R9, [R3] 
    /*0001c588*/ STR         R7, [R3, #4] 
    /*0001c58c*/ LDR         R2, [R4, #12] 
    /*0001c590*/ SUB         R2, R2, #1 
    /*0001c594*/ STR         R2, [R4, #12] 
    /*0001c598*/ LDR         R5, [R3, #-8] 
    /*0001c59c*/ CMP         R5, #0 
    /*0001c5a0*/ BEQ         VENC_Exit_x1c7fc
    VENC_Exit_x1c5a4:
    /*0001c5a4*/ SUB         R0, R5, #16 
    /*0001c5a8*/ BL          0x000000000001C5A8          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0001c5ac*/ LDR         R3, [R4, #28] 
    /*0001c5b0*/ CMP         R3, SL 
    /*0001c5b4*/ BNE         VENC_Exit_x1c578
    VENC_Exit_x1c5b8:
    /*0001c5b8*/ LDR         R3, [R4, #20] 
    /*0001c5bc*/ ADD         SL, R4, #20 
    /*0001c5c0*/ CMP         SL, R3 
    /*0001c5c4*/ MOVWNE      FP, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7dc8] 
    /*0001c5c8*/ MOVTNE      FP, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7dc8] 
    /*0001c5cc*/ BEQ         VENC_Exit_x1c610
    VENC_Exit_x1c5d0:
    /*0001c5d0*/ LDM         R3, {R1, R2} 
    /*0001c5d4*/ STR         R2, [R1, #4] 
    /*0001c5d8*/ STR         R1, [R2] 
    /*0001c5dc*/ STR         R9, [R3] 
    /*0001c5e0*/ STR         R7, [R3, #4] 
    /*0001c5e4*/ LDR         R2, [R4, #8] 
    /*0001c5e8*/ SUB         R2, R2, #1 
    /*0001c5ec*/ STR         R2, [R4, #8] 
    /*0001c5f0*/ LDR         R5, [R3, #-8] 
    /*0001c5f4*/ CMP         R5, #0 
    /*0001c5f8*/ BEQ         VENC_Exit_x1c818
    VENC_Exit_x1c5fc:
    /*0001c5fc*/ SUB         R0, R5, #16 
    /*0001c600*/ BL          0x000000000001C600          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0001c604*/ LDR         R3, [R4, #20] 
    /*0001c608*/ CMP         R3, SL 
    /*0001c60c*/ BNE         VENC_Exit_x1c5d0
    VENC_Exit_x1c610:
    /*0001c610*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0001c614*/ ADD         SL, R4, #36                 @ 0x24 
    /*0001c618*/ CMP         SL, R3 
    /*0001c61c*/ MOVWNE      FP, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7dc8] 
    /*0001c620*/ MOVTNE      FP, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7dc8] 
    /*0001c624*/ BEQ         VENC_Exit_x1c668
    VENC_Exit_x1c628:
    /*0001c628*/ LDM         R3, {R1, R2} 
    /*0001c62c*/ STR         R2, [R1, #4] 
    /*0001c630*/ STR         R1, [R2] 
    /*0001c634*/ STR         R9, [R3] 
    /*0001c638*/ STR         R7, [R3, #4] 
    /*0001c63c*/ LDR         R2, [R4, #16] 
    /*0001c640*/ SUB         R2, R2, #1 
    /*0001c644*/ STR         R2, [R4, #16] 
    /*0001c648*/ LDR         R5, [R3, #-8] 
    /*0001c64c*/ CMP         R5, #0 
    /*0001c650*/ BEQ         VENC_Exit_x1c834
    VENC_Exit_x1c654:
    /*0001c654*/ SUB         R0, R5, #16 
    /*0001c658*/ BL          0x000000000001C658          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0001c65c*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0001c660*/ CMP         R3, SL 
    /*0001c664*/ BNE         VENC_Exit_x1c628
    VENC_Exit_x1c668:
    /*0001c668*/ MOV         R3, #0 
    /*0001c66c*/ STR         R3, [R4] 
    /*0001c670*/ STR         R3, [R4, #8] 
    /*0001c674*/ STR         R3, [R4, #12] 
    /*0001c678*/ STR         R3, [R4, #16] 
    /*0001c67c*/ B           VENC_Exit_x1c518
    VENC_Exit_x1c680:
    /*0001c680*/ MOV         R0, #3 
    /*0001c684*/ BL          0x000000000001C684          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c688*/ CMP         R0, #0 
    /*0001c68c*/ BEQ         VENC_Exit_x1c6f8
    /*0001c690*/ MOV         R0, #3 
    /*0001c694*/ BL          0x000000000001C694          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c698*/ LDR         R3, [R0, #4] 
    /*0001c69c*/ CMP         R3, #0 
    /*0001c6a0*/ BEQ         VENC_Exit_x1c6f8
    /*0001c6a4*/ MOV         R0, #3 
    /*0001c6a8*/ BL          0x000000000001C6A8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c6ac*/ LDR         R3, [R0] 
    /*0001c6b0*/ CMP         R3, #0 
    /*0001c6b4*/ BEQ         VENC_Exit_x1c6f8
    /*0001c6b8*/ MOV         R0, #3 
    /*0001c6bc*/ BL          0x000000000001C6BC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c6c0*/ MOV         R1, #8 
    /*0001c6c4*/ LDR         R3, [R0, #4] 
    /*0001c6c8*/ MOV         R0, #0 
    /*0001c6cc*/ BLX         R3 
    /*0001c6d0*/ CMP         R0, #0 
    /*0001c6d4*/ BEQ         VENC_Exit_x1c6f8
    /*0001c6d8*/ MOVW        R3, #6839                   @ 0x1ab7 
    /*0001c6dc*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7dd0] 
    /*0001c6e0*/ STR         R3, [SP] 
    /*0001c6e4*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7dd0] 
    /*0001c6e8*/ LDR         R3, [PC, #1488]             @ 0x000000000001ccc0 
    /*0001c6ec*/ MOV         R1, #8 
    /*0001c6f0*/ MOV         R0, #3 
    /*0001c6f4*/ BL          0x000000000001C6F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    VENC_Exit_x1c6f8:
    /*0001c6f8*/ MOV         R0, #3 
    /*0001c6fc*/ BL          0x000000000001C6FC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c700*/ CMP         R0, #0 
    /*0001c704*/ BEQ         VENC_Exit_x1c770
    /*0001c708*/ MOV         R0, #3 
    /*0001c70c*/ BL          0x000000000001C70C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c710*/ LDR         R3, [R0, #4] 
    /*0001c714*/ CMP         R3, #0 
    /*0001c718*/ BEQ         VENC_Exit_x1c770
    /*0001c71c*/ MOV         R0, #3 
    /*0001c720*/ BL          0x000000000001C720          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c724*/ LDR         R3, [R0] 
    /*0001c728*/ CMP         R3, #0 
    /*0001c72c*/ BEQ         VENC_Exit_x1c770
    /*0001c730*/ MOV         R0, #3 
    /*0001c734*/ BL          0x000000000001C734          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c738*/ MOV         R1, #8 
    /*0001c73c*/ LDR         R3, [R0, #4] 
    /*0001c740*/ MOV         R0, #3 
    /*0001c744*/ BLX         R3 
    /*0001c748*/ CMP         R0, #0 
    /*0001c74c*/ BEQ         VENC_Exit_x1c770
    /*0001c750*/ MOVW        R3, #6850                   @ 0x1ac2 
    /*0001c754*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7e14] 
    /*0001c758*/ STR         R3, [SP] 
    /*0001c75c*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7e14] 
    /*0001c760*/ LDR         R3, [PC, #1368]             @ 0x000000000001ccc0 
    /*0001c764*/ MOV         R1, #8 
    /*0001c768*/ MOV         R0, #3 
    /*0001c76c*/ BL          0x000000000001C76C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VENC_Exit_x1c770:
    /*0001c770*/ MOV         R0, #7 
    /*0001c774*/ BL          0x000000000001C774          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c778*/ CMP         R0, #0 
    /*0001c77c*/ BEQ         VENC_Exit_x1c7e4
    /*0001c780*/ MOV         R0, #7 
    /*0001c784*/ BL          0x000000000001C784          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c788*/ LDR         R3, [R0, #4] 
    /*0001c78c*/ CMP         R3, #0 
    /*0001c790*/ BEQ         VENC_Exit_x1c7e4
    /*0001c794*/ MOV         R0, #7 
    /*0001c798*/ BL          0x000000000001C798          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c79c*/ LDR         R3, [R0] 
    /*0001c7a0*/ CMP         R3, #0 
    /*0001c7a4*/ BEQ         VENC_Exit_x1c7e4
    /*0001c7a8*/ MOV         R0, #7 
    /*0001c7ac*/ BL          0x000000000001C7AC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001c7b0*/ LDR         R3, [R0, #4] 
    /*0001c7b4*/ MOV         R0, #8 
    /*0001c7b8*/ BLX         R3 
    /*0001c7bc*/ CMP         R0, #0 
    /*0001c7c0*/ BEQ         VENC_Exit_x1c7e4
    /*0001c7c4*/ MOVW        R3, #6860                   @ 0x1acc 
    /*0001c7c8*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7e58] 
    /*0001c7cc*/ STR         R3, [SP] 
    /*0001c7d0*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7e58] 
    /*0001c7d4*/ LDR         R3, [PC, #1252]             @ 0x000000000001ccc0 
    /*0001c7d8*/ MOV         R1, #8 
    /*0001c7dc*/ MOV         R0, #3 
    /*0001c7e0*/ BL          0x000000000001C7E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    VENC_Exit_x1c7e4:
    /*0001c7e4*/ BL          0x000000000001C7E4          @ VENC_DRV_Exit [R_ARM_CALL: .text+0x26d98] 
    /*0001c7e8*/ LDR         R2, [SP, #24] 
    /*0001c7ec*/ MOV         R3, #2 
    /*0001c7f0*/ STR         R3, [R2] 
    VENC_Exit_x1c7f4:
    /*0001c7f4*/ ADD         SP, SP, #36                 @ 0x24 
    /*0001c7f8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_Exit_x1c7fc:
    /*0001c7fc*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001c800*/ MOV         R3, FP 
    /*0001c804*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001c808*/ MOV         R2, #388                    @ 0x184 
    /*0001c80c*/ LDR         R1, [PC, #1200]             @ 0x000000000001ccc4 
    /*0001c810*/ BL          0x000000000001C810          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001c814*/ B           VENC_Exit_x1c5a4
    VENC_Exit_x1c818:
    /*0001c818*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001c81c*/ MOV         R3, FP 
    /*0001c820*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001c824*/ MOVW        R2, #394                    @ 0x18a 
    /*0001c828*/ LDR         R1, [PC, #1172]             @ 0x000000000001ccc4 
    /*0001c82c*/ BL          0x000000000001C82C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001c830*/ B           VENC_Exit_x1c5fc
    VENC_Exit_x1c834:
    /*0001c834*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001c838*/ MOV         R3, FP 
    /*0001c83c*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001c840*/ MOV         R2, #400                    @ 0x190 
    /*0001c844*/ LDR         R1, [PC, #1144]             @ 0x000000000001ccc4 
    /*0001c848*/ BL          0x000000000001C848          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001c84c*/ B           VENC_Exit_x1c654
    VENC_Exit_x1c850:
    /*0001c850*/ LDR         R2, [SP, #28] 
    /*0001c854*/ LDR         R3, [R6, #3792]             @ 0xed0 
    /*0001c858*/ ADD         R8, R2, #20 
    /*0001c85c*/ CMP         R8, R3 
    /*0001c860*/ MOVWNE      R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7dc8] 
    /*0001c864*/ MOVTNE      R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7dc8] 
    /*0001c868*/ STRNE       R2, [SP, #8] 
    /*0001c86c*/ BEQ         VENC_Exit_x1c9c0
    VENC_Exit_x1c870:
    /*0001c870*/ CMP         R8, R3 
    /*0001c874*/ BEQ         VENC_Exit_x1cc4c
    /*0001c878*/ LDM         R3, {R1, R2} 
    /*0001c87c*/ STR         R2, [R1, #4] 
    /*0001c880*/ STR         R1, [R2] 
    /*0001c884*/ STR         R9, [R3] 
    /*0001c888*/ STR         R7, [R3, #4] 
    /*0001c88c*/ LDR         R2, [R6, #3780]             @ 0xec4 
    /*0001c890*/ SUB         R2, R2, #1 
    /*0001c894*/ STR         R2, [R6, #3780]             @ 0xec4 
    /*0001c898*/ LDR         R4, [R3, #-8] 
    /*0001c89c*/ CMP         R4, #0 
    /*0001c8a0*/ BEQ         VENC_Exit_x1cc4c
    /*0001c8a4*/ LDR         R3, [R4, #28] 
    /*0001c8a8*/ ADD         FP, R4, #28 
    /*0001c8ac*/ SUB         SL, R4, #16 
    /*0001c8b0*/ CMP         FP, R3 
    /*0001c8b4*/ BEQ         VENC_Exit_x1c8f8
    VENC_Exit_x1c8b8:
    /*0001c8b8*/ LDM         R3, {R1, R2} 
    /*0001c8bc*/ STR         R2, [R1, #4] 
    /*0001c8c0*/ STR         R1, [R2] 
    /*0001c8c4*/ STR         R9, [R3] 
    /*0001c8c8*/ STR         R7, [R3, #4] 
    /*0001c8cc*/ LDR         R2, [R4, #12] 
    /*0001c8d0*/ SUB         R2, R2, #1 
    /*0001c8d4*/ STR         R2, [R4, #12] 
    /*0001c8d8*/ LDR         R5, [R3, #-8] 
    /*0001c8dc*/ CMP         R5, #0 
    /*0001c8e0*/ BEQ         VENC_Exit_x1cc0c
    VENC_Exit_x1c8e4:
    /*0001c8e4*/ SUB         R0, R5, #16 
    /*0001c8e8*/ BL          0x000000000001C8E8          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0001c8ec*/ LDR         R3, [R4, #28] 
    /*0001c8f0*/ CMP         R3, FP 
    /*0001c8f4*/ BNE         VENC_Exit_x1c8b8
    VENC_Exit_x1c8f8:
    /*0001c8f8*/ LDR         R3, [R4, #20] 
    /*0001c8fc*/ ADD         FP, R4, #20 
    /*0001c900*/ CMP         R3, FP 
    /*0001c904*/ BEQ         VENC_Exit_x1c948
    VENC_Exit_x1c908:
    /*0001c908*/ LDM         R3, {R1, R2} 
    /*0001c90c*/ STR         R2, [R1, #4] 
    /*0001c910*/ STR         R1, [R2] 
    /*0001c914*/ STR         R9, [R3] 
    /*0001c918*/ STR         R7, [R3, #4] 
    /*0001c91c*/ LDR         R2, [R4, #8] 
    /*0001c920*/ SUB         R2, R2, #1 
    /*0001c924*/ STR         R2, [R4, #8] 
    /*0001c928*/ LDR         R5, [R3, #-8] 
    /*0001c92c*/ CMP         R5, #0 
    /*0001c930*/ BEQ         VENC_Exit_x1cbd4
    VENC_Exit_x1c934:
    /*0001c934*/ SUB         R0, R5, #16 
    /*0001c938*/ BL          0x000000000001C938          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0001c93c*/ LDR         R3, [R4, #20] 
    /*0001c940*/ CMP         R3, FP 
    /*0001c944*/ BNE         VENC_Exit_x1c908
    VENC_Exit_x1c948:
    /*0001c948*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0001c94c*/ ADD         FP, R4, #36                 @ 0x24 
    /*0001c950*/ CMP         FP, R3 
    /*0001c954*/ BEQ         VENC_Exit_x1c998
    VENC_Exit_x1c958:
    /*0001c958*/ LDM         R3, {R1, R2} 
    /*0001c95c*/ STR         R2, [R1, #4] 
    /*0001c960*/ STR         R1, [R2] 
    /*0001c964*/ STR         R9, [R3] 
    /*0001c968*/ STR         R7, [R3, #4] 
    /*0001c96c*/ LDR         R2, [R4, #16] 
    /*0001c970*/ SUB         R2, R2, #1 
    /*0001c974*/ STR         R2, [R4, #16] 
    /*0001c978*/ LDR         R5, [R3, #-8] 
    /*0001c97c*/ CMP         R5, #0 
    /*0001c980*/ BEQ         VENC_Exit_x1cbf0
    VENC_Exit_x1c984:
    /*0001c984*/ SUB         R0, R5, #16 
    /*0001c988*/ BL          0x000000000001C988          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0001c98c*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0001c990*/ CMP         R3, FP 
    /*0001c994*/ BNE         VENC_Exit_x1c958
    VENC_Exit_x1c998:
    /*0001c998*/ MOV         R3, #0 
    /*0001c99c*/ STR         R3, [R4] 
    /*0001c9a0*/ STR         R3, [R4, #8] 
    /*0001c9a4*/ STR         R3, [R4, #12] 
    /*0001c9a8*/ STR         R3, [R4, #16] 
    VENC_Exit_x1c9ac:
    /*0001c9ac*/ MOV         R0, SL 
    /*0001c9b0*/ BL          0x000000000001C9B0          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0001c9b4*/ LDR         R3, [R6, #3792]             @ 0xed0 
    /*0001c9b8*/ CMP         R3, R8 
    /*0001c9bc*/ BNE         VENC_Exit_x1c870
    VENC_Exit_x1c9c0:
    /*0001c9c0*/ LDR         R2, [SP, #28] 
    /*0001c9c4*/ LDR         R3, [R6, #3808]             @ 0xee0 
    /*0001c9c8*/ ADD         R2, R2, #36                 @ 0x24 
    /*0001c9cc*/ STR         R2, [SP, #8] 
    /*0001c9d0*/ CMP         R3, R2 
    /*0001c9d4*/ MOVWNE      SL, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7dc8] 
    /*0001c9d8*/ MOVTNE      SL, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7dc8] 
    /*0001c9dc*/ BEQ         VENC_Exit_x1cb2c
    VENC_Exit_x1c9e0:
    /*0001c9e0*/ LDM         R3, {R1, R2} 
    /*0001c9e4*/ STR         R2, [R1, #4] 
    /*0001c9e8*/ STR         R1, [R2] 
    /*0001c9ec*/ STR         R9, [R3] 
    /*0001c9f0*/ STR         R7, [R3, #4] 
    /*0001c9f4*/ LDR         R2, [R6, #3788]             @ 0xecc 
    /*0001c9f8*/ SUB         R2, R2, #1 
    /*0001c9fc*/ STR         R2, [R6, #3788]             @ 0xecc 
    /*0001ca00*/ LDR         R4, [R3, #-8] 
    /*0001ca04*/ CMP         R4, #0 
    /*0001ca08*/ BEQ         VENC_Exit_x1cc28
    /*0001ca0c*/ LDR         R3, [R4, #28] 
    /*0001ca10*/ ADD         FP, R4, #28 
    /*0001ca14*/ SUB         R8, R4, #16 
    /*0001ca18*/ CMP         FP, R3 
    /*0001ca1c*/ BEQ         VENC_Exit_x1ca60
    VENC_Exit_x1ca20:
    /*0001ca20*/ LDM         R3, {R1, R2} 
    /*0001ca24*/ STR         R2, [R1, #4] 
    /*0001ca28*/ STR         R1, [R2] 
    /*0001ca2c*/ STR         R9, [R3] 
    /*0001ca30*/ STR         R7, [R3, #4] 
    /*0001ca34*/ LDR         R2, [R4, #12] 
    /*0001ca38*/ SUB         R2, R2, #1 
    /*0001ca3c*/ STR         R2, [R4, #12] 
    /*0001ca40*/ LDR         R5, [R3, #-8] 
    /*0001ca44*/ CMP         R5, #0 
    /*0001ca48*/ BEQ         VENC_Exit_x1cbb8
    VENC_Exit_x1ca4c:
    /*0001ca4c*/ SUB         R0, R5, #16 
    /*0001ca50*/ BL          0x000000000001CA50          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0001ca54*/ LDR         R3, [R4, #28] 
    /*0001ca58*/ CMP         FP, R3 
    /*0001ca5c*/ BNE         VENC_Exit_x1ca20
    VENC_Exit_x1ca60:
    /*0001ca60*/ LDR         R3, [R4, #20] 
    /*0001ca64*/ ADD         FP, R4, #20 
    /*0001ca68*/ CMP         R3, FP 
    /*0001ca6c*/ BEQ         VENC_Exit_x1cab0
    VENC_Exit_x1ca70:
    /*0001ca70*/ LDM         R3, {R1, R2} 
    /*0001ca74*/ STR         R2, [R1, #4] 
    /*0001ca78*/ STR         R1, [R2] 
    /*0001ca7c*/ STR         R9, [R3] 
    /*0001ca80*/ STR         R7, [R3, #4] 
    /*0001ca84*/ LDR         R2, [R4, #8] 
    /*0001ca88*/ SUB         R2, R2, #1 
    /*0001ca8c*/ STR         R2, [R4, #8] 
    /*0001ca90*/ LDR         R5, [R3, #-8] 
    /*0001ca94*/ CMP         R5, #0 
    /*0001ca98*/ BEQ         VENC_Exit_x1cb9c
    VENC_Exit_x1ca9c:
    /*0001ca9c*/ SUB         R0, R5, #16 
    /*0001caa0*/ BL          0x000000000001CAA0          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0001caa4*/ LDR         R3, [R4, #20] 
    /*0001caa8*/ CMP         R3, FP 
    /*0001caac*/ BNE         VENC_Exit_x1ca70
    VENC_Exit_x1cab0:
    /*0001cab0*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0001cab4*/ ADD         FP, R4, #36                 @ 0x24 
    /*0001cab8*/ CMP         R3, FP 
    /*0001cabc*/ BEQ         VENC_Exit_x1cb00
    VENC_Exit_x1cac0:
    /*0001cac0*/ LDM         R3, {R1, R2} 
    /*0001cac4*/ STR         R2, [R1, #4] 
    /*0001cac8*/ STR         R1, [R2] 
    /*0001cacc*/ STR         R9, [R3] 
    /*0001cad0*/ STR         R7, [R3, #4] 
    /*0001cad4*/ LDR         R2, [R4, #16] 
    /*0001cad8*/ SUB         R2, R2, #1 
    /*0001cadc*/ STR         R2, [R4, #16] 
    /*0001cae0*/ LDR         R5, [R3, #-8] 
    /*0001cae4*/ CMP         R5, #0 
    /*0001cae8*/ BEQ         VENC_Exit_x1cb80
    VENC_Exit_x1caec:
    /*0001caec*/ SUB         R0, R5, #16 
    /*0001caf0*/ BL          0x000000000001CAF0          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0001caf4*/ LDR         R3, [R4, #36]               @ 0x24 
    /*0001caf8*/ CMP         R3, FP 
    /*0001cafc*/ BNE         VENC_Exit_x1cac0
    VENC_Exit_x1cb00:
    /*0001cb00*/ MOV         R3, #0 
    /*0001cb04*/ STR         R3, [R4] 
    /*0001cb08*/ STR         R3, [R4, #8] 
    /*0001cb0c*/ STR         R3, [R4, #12] 
    /*0001cb10*/ STR         R3, [R4, #16] 
    VENC_Exit_x1cb14:
    /*0001cb14*/ MOV         R0, R8 
    /*0001cb18*/ BL          0x000000000001CB18          @ osal_kfree [R_ARM_CALL: +0x0] 
    /*0001cb1c*/ LDR         R3, [R6, #3808]             @ 0xee0 
    /*0001cb20*/ LDR         R2, [SP, #8] 
    /*0001cb24*/ CMP         R3, R2 
    /*0001cb28*/ BNE         VENC_Exit_x1c9e0
    VENC_Exit_x1cb2c:
    /*0001cb2c*/ LDR         R3, [SP, #20] 
    /*0001cb30*/ MOV         R2, #0 
    /*0001cb34*/ LDR         R1, [SP, #12] 
    /*0001cb38*/ STR         R2, [R6, #3772]             @ 0xebc 
    /*0001cb3c*/ LDR         R3, [R3] 
    /*0001cb40*/ STR         R2, [R6, #3780]             @ 0xec4 
    /*0001cb44*/ ADD         R3, R3, R1 
    /*0001cb48*/ STR         R2, [R6, #3784]             @ 0xec8 
    /*0001cb4c*/ STR         R2, [R6, #3788]             @ 0xecc 
    VENC_Exit_x1cb50:
    /*0001cb50*/ MOV         R2, #0 
    /*0001cb54*/ STR         R2, [R3] 
    /*0001cb58*/ LDR         R3, [SP, #20] 
    /*0001cb5c*/ MVN         R1, #0 
    /*0001cb60*/ LDR         R0, [SP, #12] 
    /*0001cb64*/ LDR         R3, [R3] 
    /*0001cb68*/ ADD         R3, R3, R0 
    /*0001cb6c*/ ADD         R0, R3, #12288              @ 0x3000 
    /*0001cb70*/ STR         R2, [R3, #16] 
    /*0001cb74*/ STR         R2, [R0, #132]              @ 0x84 
    /*0001cb78*/ STR         R1, [R3, #56]               @ 0x38 
    /*0001cb7c*/ B           VENC_Exit_x1c45c
    VENC_Exit_x1cb80:
    /*0001cb80*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001cb84*/ MOV         R3, SL 
    /*0001cb88*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001cb8c*/ MOV         R2, #400                    @ 0x190 
    /*0001cb90*/ LDR         R1, [PC, #300]              @ 0x000000000001ccc4 
    /*0001cb94*/ BL          0x000000000001CB94          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001cb98*/ B           VENC_Exit_x1caec
    VENC_Exit_x1cb9c:
    /*0001cb9c*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001cba0*/ MOV         R3, SL 
    /*0001cba4*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001cba8*/ MOVW        R2, #394                    @ 0x18a 
    /*0001cbac*/ LDR         R1, [PC, #272]              @ 0x000000000001ccc4 
    /*0001cbb0*/ BL          0x000000000001CBB0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001cbb4*/ B           VENC_Exit_x1ca9c
    VENC_Exit_x1cbb8:
    /*0001cbb8*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001cbbc*/ MOV         R3, SL 
    /*0001cbc0*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001cbc4*/ MOV         R2, #388                    @ 0x184 
    /*0001cbc8*/ LDR         R1, [PC, #244]              @ 0x000000000001ccc4 
    /*0001cbcc*/ BL          0x000000000001CBCC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001cbd0*/ B           VENC_Exit_x1ca4c
    VENC_Exit_x1cbd4:
    /*0001cbd4*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001cbd8*/ LDR         R3, [SP, #8] 
    /*0001cbdc*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001cbe0*/ MOVW        R2, #394                    @ 0x18a 
    /*0001cbe4*/ LDR         R1, [PC, #216]              @ 0x000000000001ccc4 
    /*0001cbe8*/ BL          0x000000000001CBE8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001cbec*/ B           VENC_Exit_x1c934
    VENC_Exit_x1cbf0:
    /*0001cbf0*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001cbf4*/ LDR         R3, [SP, #8] 
    /*0001cbf8*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001cbfc*/ MOV         R2, #400                    @ 0x190 
    /*0001cc00*/ LDR         R1, [PC, #188]              @ 0x000000000001ccc4 
    /*0001cc04*/ BL          0x000000000001CC04          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001cc08*/ B           VENC_Exit_x1c984
    VENC_Exit_x1cc0c:
    /*0001cc0c*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001cc10*/ LDR         R3, [SP, #8] 
    /*0001cc14*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001cc18*/ MOV         R2, #388                    @ 0x184 
    /*0001cc1c*/ LDR         R1, [PC, #160]              @ 0x000000000001ccc4 
    /*0001cc20*/ BL          0x000000000001CC20          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001cc24*/ B           VENC_Exit_x1c8e4
    VENC_Exit_x1cc28:
    /*0001cc28*/ MOVW        R3, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7dbc] 
    /*0001cc2c*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001cc30*/ MOVT        R3, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7dbc] 
    /*0001cc34*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001cc38*/ MOV         R2, #226                    @ 0xe2 
    /*0001cc3c*/ LDR         R1, [PC, #120]              @ 0x000000000001ccbc 
    /*0001cc40*/ BL          0x000000000001CC40          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001cc44*/ MVN         R8, #15 
    /*0001cc48*/ B           VENC_Exit_x1cb14
    VENC_Exit_x1cc4c:
    /*0001cc4c*/ MOVW        R3, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7dbc] 
    /*0001cc50*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001cc54*/ MOVT        R3, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7dbc] 
    /*0001cc58*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001cc5c*/ MOV         R2, #219                    @ 0xdb 
    /*0001cc60*/ LDR         R1, [PC, #84]               @ 0x000000000001ccbc 
    /*0001cc64*/ BL          0x000000000001CC64          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001cc68*/ MVN         SL, #15 
    /*0001cc6c*/ B           VENC_Exit_x1c9ac
    VENC_Exit_x1cc70:
    /*0001cc70*/ MOVW        R3, #6797                   @ 0x1a8d 
    /*0001cc74*/ MOV         R1, #8 
    /*0001cc78*/ STR         R3, [SP] 
    /*0001cc7c*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7b78] 
    /*0001cc80*/ LDR         R3, [PC, #56]               @ 0x000000000001ccc0 
    /*0001cc84*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7b78] 
    /*0001cc88*/ MOV         R0, #3 
    /*0001cc8c*/ BL          0x000000000001CC8C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001cc90*/ ADD         SP, SP, #36                 @ 0x24 
    /*0001cc94*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_Exit_x1cc98:
    /*0001cc98*/ MOVW        R3, #6805                   @ 0x1a95 
    /*0001cc9c*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7d78] 
    /*0001cca0*/ STR         R3, [SP] 
    /*0001cca4*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7d78] 
    /*0001cca8*/ LDR         R3, [PC, #16]               @ 0x000000000001ccc0 
    /*0001ccac*/ MOV         R1, #8 
    /*0001ccb0*/ MOV         R0, #3 
    /*0001ccb4*/ BL          0x000000000001CCB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ccb8*/ B           VENC_Exit_x1c420
    /*0001ccbc*/ ANDEQ       R0, R0, R0, ROR LR 
    /*0001ccc0*/ ANDEQ       R0, R0, R4, ROR #28 
    /*0001ccc4*/ ANDEQ       R0, R0, R4, LSL #29 
FUNC_END VENC_Exit


FUNC_BEGIN VencDealAbnoramlQueue
    /*0001ccc8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001cccc*/ ADD         R3, R0, #32768              @ 0x8000 
    /*0001ccd0*/ SUB         SP, SP, #28 
    /*0001ccd4*/ ADD         R5, R0, #8192               @ 0x2000 
    /*0001ccd8*/ LDR         R1, [R0, #3724]             @ 0xe8c 
    /*0001ccdc*/ ADD         R8, R0, #4096               @ 0x1000 
    /*0001cce0*/ STR         R3, [SP, #12] 
    /*0001cce4*/ MOV         R4, R0 
    /*0001cce8*/ LDRB        R3, [R3, #3264]             @ 0xcc0 
    /*0001ccec*/ LDR         R2, [R5, #3764]             @ 0xeb4 
    /*0001ccf0*/ CMP         R3, #0 
    /*0001ccf4*/ STR         R1, [SP, #8] 
    /*0001ccf8*/ LDR         R9, [R8, #2356]             @ 0x934 
    /*0001ccfc*/ LDR         SL, [R5, #1036]             @ 0x40c 
    /*0001cd00*/ STR         R2, [SP, #16] 
    /*0001cd04*/ LDREQ       R7, [SP, #8] 
    /*0001cd08*/ BEQ         VencDealAbnoramlQueue_x1cd28
    /*0001cd0c*/ CMP         R1, SL 
    /*0001cd10*/ MOVLT       R7, R1 
    /*0001cd14*/ MOVGE       R7, SL 
    /*0001cd18*/ CMP         R3, #1 
    /*0001cd1c*/ BLS         VencDealAbnoramlQueue_x1cd28
    /*0001cd20*/ CMP         R7, R2 
    /*0001cd24*/ MOVGE       R7, R2 
    VencDealAbnoramlQueue_x1cd28:
    /*0001cd28*/ LDR         R3, [R5, #3768]             @ 0xeb8 
    /*0001cd2c*/ CMP         R3, #0 
    /*0001cd30*/ BNE         VencDealAbnoramlQueue_x1cec4
    VencDealAbnoramlQueue_x1cd34:
    /*0001cd34*/ CMP         R7, #0 
    /*0001cd38*/ BNE         VencDealAbnoramlQueue_x1cd98
    /*0001cd3c*/ CMP         R9, #6 
    /*0001cd40*/ MOVNE       R6, R7 
    /*0001cd44*/ BEQ         VencDealAbnoramlQueue_x1cfdc
    VencDealAbnoramlQueue_x1cd48:
    /*0001cd48*/ LDR         R3, [SP, #12] 
    /*0001cd4c*/ SUB         SL, SL, #6 
    /*0001cd50*/ CLZ         SL, SL 
    /*0001cd54*/ LDRB        R3, [R3, #3264]             @ 0xcc0 
    /*0001cd58*/ LSR         SL, SL, #5 
    /*0001cd5c*/ CMP         R3, #0 
    /*0001cd60*/ MOVEQ       SL, #0 
    /*0001cd64*/ CMP         SL, #0 
    /*0001cd68*/ BNE         VencDealAbnoramlQueue_x1d0b8
    VencDealAbnoramlQueue_x1cd6c:
    /*0001cd6c*/ CMP         R3, #1 
    /*0001cd70*/ LDR         R2, [SP, #16] 
    /*0001cd74*/ MOVLS       R3, #0 
    /*0001cd78*/ MOVHI       R3, #1 
    /*0001cd7c*/ CMP         R2, #6 
    /*0001cd80*/ MOVNE       R3, #0 
    /*0001cd84*/ CMP         R3, #0 
    /*0001cd88*/ BNE         VencDealAbnoramlQueue_x1ceec
    /*0001cd8c*/ LDR         R3, [SP, #8] 
    /*0001cd90*/ CMP         R3, #6 
    /*0001cd94*/ BEQ         VencDealAbnoramlQueue_x1cda4
    VencDealAbnoramlQueue_x1cd98:
    /*0001cd98*/ MOV         R0, R7 
    /*0001cd9c*/ ADD         SP, SP, #28 
    /*0001cda0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencDealAbnoramlQueue_x1cda4:
    /*0001cda4*/ MOVW        R9, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f6c] 
    /*0001cda8*/ MOVW        R5, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001cdac*/ LDR         R8, [PC, #1144]             @ 0x000000000001d22c 
    /*0001cdb0*/ MOVT        R9, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f6c] 
    /*0001cdb4*/ MOVT        R5, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001cdb8*/ MOV         SL, R3 
    /*0001cdbc*/ B           VencDealAbnoramlQueue_x1cdf0
    VencDealAbnoramlQueue_x1cdc0:
    /*0001cdc0*/ LDR         R2, [R4, #3696]             @ 0xe70 
    /*0001cdc4*/ ADD         R3, R3, #1 
    /*0001cdc8*/ ADD         R0, R6, #336                @ 0x150 
    /*0001cdcc*/ SUBS        R2, R2, #1 
    /*0001cdd0*/ ADDMI       R2, R2, R1 
    /*0001cdd4*/ LDR         R1, [R4, #3688]             @ 0xe68 
    /*0001cdd8*/ STR         R6, [R1, R2, LSL #2] 
    /*0001cddc*/ STR         R3, [R4, #3704]             @ 0xe78 
    /*0001cde0*/ STR         R2, [R4, #3696]             @ 0xe70 
    /*0001cde4*/ BL          0x000000000001CDE4          @ VencPutFrmAddInfo [R_ARM_CALL: .text+0x1320] 
    /*0001cde8*/ SUBS        SL, SL, #1 
    /*0001cdec*/ BEQ         VencDealAbnoramlQueue_x1ce64
    VencDealAbnoramlQueue_x1cdf0:
    /*0001cdf0*/ LDR         R2, [R4, #3724]             @ 0xe8c 
    /*0001cdf4*/ CMP         R2, #0 
    /*0001cdf8*/ BLE         VencDealAbnoramlQueue_x1ceac
    /*0001cdfc*/ LDR         R3, [R4, #3720]             @ 0xe88 
    /*0001ce00*/ SUB         R2, R2, #1 
    /*0001ce04*/ SUBS        R3, R3, #1 
    /*0001ce08*/ LDRMI       R1, [R4, #3712]             @ 0xe80 
    /*0001ce0c*/ ADDMI       R3, R3, R1 
    /*0001ce10*/ LDR         R1, [R4, #3708]             @ 0xe7c 
    /*0001ce14*/ LDR         R6, [R1, R3, LSL #2] 
    /*0001ce18*/ STR         R2, [R4, #3724]             @ 0xe8c 
    /*0001ce1c*/ STR         R3, [R4, #3720]             @ 0xe88 
    VencDealAbnoramlQueue_x1ce20:
    /*0001ce20*/ MOV         R0, R6 
    /*0001ce24*/ BL          0x000000000001CE24          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*0001ce28*/ CMP         R0, #0 
    /*0001ce2c*/ BNE         VencDealAbnoramlQueue_x1ce90
    VencDealAbnoramlQueue_x1ce30:
    /*0001ce30*/ LDR         R3, [R4, #3704]             @ 0xe78 
    /*0001ce34*/ LDR         R1, [R4, #3692]             @ 0xe6c 
    /*0001ce38*/ CMP         R3, R1 
    /*0001ce3c*/ BLT         VencDealAbnoramlQueue_x1cdc0
    /*0001ce40*/ MOV         R3, R9 
    /*0001ce44*/ MOVW        R2, #357                    @ 0x165 
    /*0001ce48*/ MOV         R1, R8 
    /*0001ce4c*/ MOV         R0, R5 
    /*0001ce50*/ BL          0x000000000001CE50          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001ce54*/ ADD         R0, R6, #336                @ 0x150 
    /*0001ce58*/ BL          0x000000000001CE58          @ VencPutFrmAddInfo [R_ARM_CALL: .text+0x1320] 
    /*0001ce5c*/ SUBS        SL, SL, #1 
    /*0001ce60*/ BNE         VencDealAbnoramlQueue_x1cdf0
    VencDealAbnoramlQueue_x1ce64:
    /*0001ce64*/ MOVW        R3, #361                    @ 0x169 
    /*0001ce68*/ MOV         R1, #8 
    /*0001ce6c*/ STR         R3, [SP] 
    /*0001ce70*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f40] 
    /*0001ce74*/ LDR         R3, [PC, #944]              @ 0x000000000001d22c 
    /*0001ce78*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f40] 
    /*0001ce7c*/ MOV         R0, #4 
    /*0001ce80*/ BL          0x000000000001CE80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ce84*/ MOV         R0, R7 
    /*0001ce88*/ ADD         SP, SP, #28 
    /*0001ce8c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencDealAbnoramlQueue_x1ce90:
    /*0001ce90*/ MOVW        R3, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7e9c] 
    /*0001ce94*/ MOVW        R2, #355                    @ 0x163 
    /*0001ce98*/ MOVT        R3, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7e9c] 
    /*0001ce9c*/ MOV         R1, R8 
    /*0001cea0*/ MOV         R0, R5 
    /*0001cea4*/ BL          0x000000000001CEA4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001cea8*/ B           VencDealAbnoramlQueue_x1ce30
    VencDealAbnoramlQueue_x1ceac:
    /*0001ceac*/ MOV         R3, R9 
    /*0001ceb0*/ MOVW        R2, #351                    @ 0x15f 
    /*0001ceb4*/ MOV         R1, R8 
    /*0001ceb8*/ MOV         R0, R5 
    /*0001cebc*/ BL          0x000000000001CEBC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001cec0*/ B           VencDealAbnoramlQueue_x1ce20
    VencDealAbnoramlQueue_x1cec4:
    /*0001cec4*/ MOV         R0, #1 
    /*0001cec8*/ BL          0x000000000001CEC8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001cecc*/ LDR         R3, [R0, #104]              @ 0x68 
    /*0001ced0*/ MOV         R0, #1 
    /*0001ced4*/ BLX         R3 
    /*0001ced8*/ CMP         R0, #0 
    /*0001cedc*/ BEQ         VencDealAbnoramlQueue_x1cd34
    /*0001cee0*/ CMP         R7, R9 
    /*0001cee4*/ MOVGE       R7, R9 
    /*0001cee8*/ B           VencDealAbnoramlQueue_x1cd34
    VencDealAbnoramlQueue_x1ceec:
    /*0001ceec*/ MOVW        FP, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f6c] 
    /*0001cef0*/ MOVW        R9, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001cef4*/ LDR         SL, [PC, #816]              @ 0x000000000001d22c 
    /*0001cef8*/ MOVT        FP, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f6c] 
    /*0001cefc*/ MOVT        R9, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001cf00*/ MOV         R8, #6 
    /*0001cf04*/ B           VencDealAbnoramlQueue_x1cf38
    VencDealAbnoramlQueue_x1cf08:
    /*0001cf08*/ LDR         R2, [R5, #3736]             @ 0xe98 
    /*0001cf0c*/ ADD         R3, R3, #1 
    /*0001cf10*/ ADD         R0, R6, #336                @ 0x150 
    /*0001cf14*/ SUBS        R2, R2, #1 
    /*0001cf18*/ ADDMI       R2, R2, R1 
    /*0001cf1c*/ LDR         R1, [R5, #3728]             @ 0xe90 
    /*0001cf20*/ STR         R6, [R1, R2, LSL #2] 
    /*0001cf24*/ STR         R3, [R5, #3744]             @ 0xea0 
    /*0001cf28*/ STR         R2, [R5, #3736]             @ 0xe98 
    /*0001cf2c*/ BL          0x000000000001CF2C          @ VencPutFrmAddInfo [R_ARM_CALL: .text+0x1320] 
    /*0001cf30*/ SUBS        R8, R8, #1 
    /*0001cf34*/ BEQ         VencDealAbnoramlQueue_x1cfac
    VencDealAbnoramlQueue_x1cf38:
    /*0001cf38*/ LDR         R2, [R5, #3764]             @ 0xeb4 
    /*0001cf3c*/ CMP         R2, #0 
    /*0001cf40*/ BLE         VencDealAbnoramlQueue_x1d1b4
    /*0001cf44*/ LDR         R3, [R5, #3760]             @ 0xeb0 
    /*0001cf48*/ SUB         R2, R2, #1 
    /*0001cf4c*/ SUBS        R3, R3, #1 
    /*0001cf50*/ LDRMI       R1, [R5, #3752]             @ 0xea8 
    /*0001cf54*/ ADDMI       R3, R3, R1 
    /*0001cf58*/ LDR         R1, [R5, #3748]             @ 0xea4 
    /*0001cf5c*/ LDR         R6, [R1, R3, LSL #2] 
    /*0001cf60*/ STR         R2, [R5, #3764]             @ 0xeb4 
    /*0001cf64*/ STR         R3, [R5, #3760]             @ 0xeb0 
    VencDealAbnoramlQueue_x1cf68:
    /*0001cf68*/ MOV         R0, R6 
    /*0001cf6c*/ BL          0x000000000001CF6C          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*0001cf70*/ CMP         R0, #0 
    /*0001cf74*/ BNE         VencDealAbnoramlQueue_x1d198
    VencDealAbnoramlQueue_x1cf78:
    /*0001cf78*/ LDR         R3, [R5, #3744]             @ 0xea0 
    /*0001cf7c*/ LDR         R1, [R5, #3732]             @ 0xe94 
    /*0001cf80*/ CMP         R3, R1 
    /*0001cf84*/ BLT         VencDealAbnoramlQueue_x1cf08
    /*0001cf88*/ MOV         R3, FP 
    /*0001cf8c*/ MOVW        R2, #337                    @ 0x151 
    /*0001cf90*/ MOV         R1, SL 
    /*0001cf94*/ MOV         R0, R9 
    /*0001cf98*/ BL          0x000000000001CF98          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001cf9c*/ ADD         R0, R6, #336                @ 0x150 
    /*0001cfa0*/ BL          0x000000000001CFA0          @ VencPutFrmAddInfo [R_ARM_CALL: .text+0x1320] 
    /*0001cfa4*/ SUBS        R8, R8, #1 
    /*0001cfa8*/ BNE         VencDealAbnoramlQueue_x1cf38
    VencDealAbnoramlQueue_x1cfac:
    /*0001cfac*/ MOVW        R3, #342                    @ 0x156 
    /*0001cfb0*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f10] 
    /*0001cfb4*/ STR         R3, [SP] 
    /*0001cfb8*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f10] 
    /*0001cfbc*/ LDR         R3, [PC, #616]              @ 0x000000000001d22c 
    /*0001cfc0*/ MOV         R1, #8 
    /*0001cfc4*/ MOV         R0, #4 
    /*0001cfc8*/ BL          0x000000000001CFC8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001cfcc*/ LDR         R3, [SP, #8] 
    /*0001cfd0*/ CMP         R3, #6 
    /*0001cfd4*/ BNE         VencDealAbnoramlQueue_x1cd98
    /*0001cfd8*/ B           VencDealAbnoramlQueue_x1cda4
    VencDealAbnoramlQueue_x1cfdc:
    /*0001cfdc*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f6c] 
    /*0001cfe0*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f6c] 
    /*0001cfe4*/ MOVW        FP, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001cfe8*/ STR         SL, [SP, #20] 
    /*0001cfec*/ MOVT        FP, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001cff0*/ MOV         R6, R7 
    /*0001cff4*/ MOV         SL, R3 
    /*0001cff8*/ B           VencDealAbnoramlQueue_x1d024
    VencDealAbnoramlQueue_x1cffc:
    /*0001cffc*/ LDR         R2, [R8, #2328]             @ 0x918 
    /*0001d000*/ ADD         R3, R3, #1 
    /*0001d004*/ SUBS        R2, R2, #1 
    /*0001d008*/ ADDMI       R2, R2, R1 
    /*0001d00c*/ LDR         R1, [R8, #2320]             @ 0x910 
    /*0001d010*/ SUBS        R9, R9, #1 
    /*0001d014*/ STR         R6, [R1, R2, LSL #2] 
    /*0001d018*/ STR         R3, [R8, #2336]             @ 0x920 
    /*0001d01c*/ STR         R2, [R8, #2328]             @ 0x918 
    /*0001d020*/ BEQ         VencDealAbnoramlQueue_x1d090
    VencDealAbnoramlQueue_x1d024:
    /*0001d024*/ LDR         R2, [R8, #2356]             @ 0x934 
    /*0001d028*/ CMP         R2, #0 
    /*0001d02c*/ BLE         VencDealAbnoramlQueue_x1d180
    /*0001d030*/ LDR         R3, [R8, #2352]             @ 0x930 
    /*0001d034*/ SUB         R2, R2, #1 
    /*0001d038*/ SUBS        R3, R3, #1 
    /*0001d03c*/ LDRMI       R1, [R8, #2344]             @ 0x928 
    /*0001d040*/ ADDMI       R3, R3, R1 
    /*0001d044*/ LDR         R1, [R8, #2340]             @ 0x924 
    /*0001d048*/ LDR         R6, [R1, R3, LSL #2] 
    /*0001d04c*/ STR         R2, [R8, #2356]             @ 0x934 
    /*0001d050*/ STR         R3, [R8, #2352]             @ 0x930 
    VencDealAbnoramlQueue_x1d054:
    /*0001d054*/ MOV         R0, R6 
    /*0001d058*/ BL          0x000000000001D058          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*0001d05c*/ CMP         R0, #0 
    /*0001d060*/ BNE         VencDealAbnoramlQueue_x1d164
    VencDealAbnoramlQueue_x1d064:
    /*0001d064*/ LDR         R3, [R8, #2336]             @ 0x920 
    /*0001d068*/ LDR         R1, [R8, #2324]             @ 0x914 
    /*0001d06c*/ CMP         R3, R1 
    /*0001d070*/ BLT         VencDealAbnoramlQueue_x1cffc
    /*0001d074*/ MOV         R3, SL 
    /*0001d078*/ MOVW        R2, #299                    @ 0x12b 
    /*0001d07c*/ LDR         R1, [PC, #424]              @ 0x000000000001d22c 
    /*0001d080*/ MOV         R0, FP 
    /*0001d084*/ BL          0x000000000001D084          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d088*/ SUBS        R9, R9, #1 
    /*0001d08c*/ BNE         VencDealAbnoramlQueue_x1d024
    VencDealAbnoramlQueue_x1d090:
    /*0001d090*/ MOVW        R3, #302                    @ 0x12e 
    /*0001d094*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7eb4] 
    /*0001d098*/ STR         R3, [SP] 
    /*0001d09c*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7eb4] 
    /*0001d0a0*/ LDR         R3, [PC, #388]              @ 0x000000000001d22c 
    /*0001d0a4*/ MOV         R1, #8 
    /*0001d0a8*/ MOV         R0, #4 
    /*0001d0ac*/ LDR         SL, [SP, #20] 
    /*0001d0b0*/ BL          0x000000000001D0B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d0b4*/ B           VencDealAbnoramlQueue_x1cd48
    VencDealAbnoramlQueue_x1d0b8:
    /*0001d0b8*/ MOVW        SL, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f6c] 
    /*0001d0bc*/ MOVW        R9, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001d0c0*/ LDR         FP, [PC, #356]              @ 0x000000000001d22c 
    /*0001d0c4*/ MOVT        SL, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f6c] 
    /*0001d0c8*/ MOVT        R9, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001d0cc*/ MOV         R8, #6 
    /*0001d0d0*/ B           VencDealAbnoramlQueue_x1d0fc
    VencDealAbnoramlQueue_x1d0d4:
    /*0001d0d4*/ LDR         R2, [R5, #1008]             @ 0x3f0 
    /*0001d0d8*/ ADD         R3, R3, #1 
    /*0001d0dc*/ SUBS        R2, R2, #1 
    /*0001d0e0*/ ADDMI       R2, R2, R1 
    /*0001d0e4*/ LDR         R1, [R5, #1000]             @ 0x3e8 
    /*0001d0e8*/ STR         R6, [R1, R2, LSL #2] 
    /*0001d0ec*/ STR         R3, [R5, #1016]             @ 0x3f8 
    /*0001d0f0*/ STR         R2, [R5, #1008]             @ 0x3f0 
    VencDealAbnoramlQueue_x1d0f4:
    /*0001d0f4*/ SUBS        R8, R8, #1 
    /*0001d0f8*/ BEQ         VencDealAbnoramlQueue_x1d200
    VencDealAbnoramlQueue_x1d0fc:
    /*0001d0fc*/ LDR         R2, [R5, #1036]             @ 0x40c 
    /*0001d100*/ CMP         R2, #0 
    /*0001d104*/ BLE         VencDealAbnoramlQueue_x1d1e8
    /*0001d108*/ LDR         R3, [R5, #1032]             @ 0x408 
    /*0001d10c*/ SUB         R2, R2, #1 
    /*0001d110*/ SUBS        R3, R3, #1 
    /*0001d114*/ LDRMI       R1, [R5, #1024]             @ 0x400 
    /*0001d118*/ ADDMI       R3, R3, R1 
    /*0001d11c*/ LDR         R1, [R5, #1020]             @ 0x3fc 
    /*0001d120*/ LDR         R6, [R1, R3, LSL #2] 
    /*0001d124*/ STR         R2, [R5, #1036]             @ 0x40c 
    /*0001d128*/ STR         R3, [R5, #1032]             @ 0x408 
    VencDealAbnoramlQueue_x1d12c:
    /*0001d12c*/ MOV         R0, R6 
    /*0001d130*/ BL          0x000000000001D130          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*0001d134*/ CMP         R0, #0 
    /*0001d138*/ BNE         VencDealAbnoramlQueue_x1d1cc
    VencDealAbnoramlQueue_x1d13c:
    /*0001d13c*/ LDR         R3, [R5, #1016]             @ 0x3f8 
    /*0001d140*/ LDR         R1, [R5, #1004]             @ 0x3ec 
    /*0001d144*/ CMP         R3, R1 
    /*0001d148*/ BLT         VencDealAbnoramlQueue_x1d0d4
    /*0001d14c*/ MOV         R3, SL 
    /*0001d150*/ MOVW        R2, #318                    @ 0x13e 
    /*0001d154*/ MOV         R1, FP 
    /*0001d158*/ MOV         R0, R9 
    /*0001d15c*/ BL          0x000000000001D15C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d160*/ B           VencDealAbnoramlQueue_x1d0f4
    VencDealAbnoramlQueue_x1d164:
    /*0001d164*/ MOVW        R3, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7e9c] 
    /*0001d168*/ MOVW        R2, #297                    @ 0x129 
    /*0001d16c*/ MOVT        R3, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7e9c] 
    /*0001d170*/ LDR         R1, [PC, #180]              @ 0x000000000001d22c 
    /*0001d174*/ MOV         R0, FP 
    /*0001d178*/ BL          0x000000000001D178          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d17c*/ B           VencDealAbnoramlQueue_x1d064
    VencDealAbnoramlQueue_x1d180:
    /*0001d180*/ MOV         R3, SL 
    /*0001d184*/ MOVW        R2, #293                    @ 0x125 
    /*0001d188*/ LDR         R1, [PC, #156]              @ 0x000000000001d22c 
    /*0001d18c*/ MOV         R0, FP 
    /*0001d190*/ BL          0x000000000001D190          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d194*/ B           VencDealAbnoramlQueue_x1d054
    VencDealAbnoramlQueue_x1d198:
    /*0001d198*/ MOVW        R3, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7e9c] 
    /*0001d19c*/ MOVW        R2, #335                    @ 0x14f 
    /*0001d1a0*/ MOVT        R3, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7e9c] 
    /*0001d1a4*/ MOV         R1, SL 
    /*0001d1a8*/ MOV         R0, R9 
    /*0001d1ac*/ BL          0x000000000001D1AC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d1b0*/ B           VencDealAbnoramlQueue_x1cf78
    VencDealAbnoramlQueue_x1d1b4:
    /*0001d1b4*/ MOV         R3, FP 
    /*0001d1b8*/ MOVW        R2, #331                    @ 0x14b 
    /*0001d1bc*/ MOV         R1, SL 
    /*0001d1c0*/ MOV         R0, R9 
    /*0001d1c4*/ BL          0x000000000001D1C4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d1c8*/ B           VencDealAbnoramlQueue_x1cf68
    VencDealAbnoramlQueue_x1d1cc:
    /*0001d1cc*/ MOVW        R3, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7e9c] 
    /*0001d1d0*/ MOV         R2, #316                    @ 0x13c 
    /*0001d1d4*/ MOVT        R3, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7e9c] 
    /*0001d1d8*/ MOV         R1, FP 
    /*0001d1dc*/ MOV         R0, R9 
    /*0001d1e0*/ BL          0x000000000001D1E0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d1e4*/ B           VencDealAbnoramlQueue_x1d13c
    VencDealAbnoramlQueue_x1d1e8:
    /*0001d1e8*/ MOV         R3, SL 
    /*0001d1ec*/ MOV         R2, #312                    @ 0x138 
    /*0001d1f0*/ MOV         R1, FP 
    /*0001d1f4*/ MOV         R0, R9 
    /*0001d1f8*/ BL          0x000000000001D1F8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d1fc*/ B           VencDealAbnoramlQueue_x1d12c
    VencDealAbnoramlQueue_x1d200:
    /*0001d200*/ MOVW        R3, #321                    @ 0x141 
    /*0001d204*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7ee0] 
    /*0001d208*/ STR         R3, [SP] 
    /*0001d20c*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7ee0] 
    /*0001d210*/ LDR         R3, [PC, #20]               @ 0x000000000001d22c 
    /*0001d214*/ MOV         R1, #8 
    /*0001d218*/ MOV         R0, #4 
    /*0001d21c*/ BL          0x000000000001D21C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001d220*/ LDR         R3, [SP, #12] 
    /*0001d224*/ LDRB        R3, [R3, #3264]             @ 0xcc0 
    /*0001d228*/ B           VencDealAbnoramlQueue_x1cd6c
    /*0001d22c*/ MULEQ       R0, R8, LR 
FUNC_END VencDealAbnoramlQueue


FUNC_BEGIN VencQueryPicQueue
    /*0001d230*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001d234*/ ADD         FP, R0, #12288              @ 0x3000 
    /*0001d238*/ SUB         SP, SP, #44                 @ 0x2c 
    /*0001d23c*/ MOV         R7, R0 
    /*0001d240*/ LDR         R3, [FP, #672]              @ 0x2a0 
    /*0001d244*/ ADD         SL, R0, #32768              @ 0x8000 
    /*0001d248*/ CMP         R3, #0 
    /*0001d24c*/ BEQ         VencQueryPicQueue_x1d25c
    /*0001d250*/ LDRB        R3, [SL, #3352]             @ 0xd18 
    /*0001d254*/ CMP         R3, #0 
    /*0001d258*/ BNE         VencQueryPicQueue_x1d84c
    VencQueryPicQueue_x1d25c:
    /*0001d25c*/ LDR         R3, [R7, #3724]             @ 0xe8c 
    /*0001d260*/ CMP         R3, #0 
    /*0001d264*/ STR         R3, [SP, #24] 
    /*0001d268*/ BLE         VencQueryPicQueue_x1d994
    /*0001d26c*/ LDR         R3, [R7, #3720]             @ 0xe88 
    /*0001d270*/ SUBS        R3, R3, #1 
    /*0001d274*/ LDRMI       R2, [R7, #3712]             @ 0xe80 
    /*0001d278*/ ADDMI       R3, R3, R2 
    /*0001d27c*/ LDR         R2, [R7, #3708]             @ 0xe7c 
    /*0001d280*/ LDR         R6, [R2, R3, LSL #2] 
    /*0001d284*/ MOV         R3, R6 
    VencQueryPicQueue_x1d288:
    /*0001d288*/ LDR         R3, [R3, #232]              @ 0xe8 
    /*0001d28c*/ STR         R3, [SP, #16] 
    VencQueryPicQueue_x1d290:
    /*0001d290*/ LDRB        R3, [SL, #3264]             @ 0xcc0 
    /*0001d294*/ CMP         R3, #0 
    /*0001d298*/ BEQ         VencQueryPicQueue_x1d7a4
    /*0001d29c*/ ADD         R4, R7, #8192               @ 0x2000 
    /*0001d2a0*/ LDR         R2, [R4, #1036]             @ 0x40c 
    /*0001d2a4*/ CMP         R2, #0 
    /*0001d2a8*/ STR         R2, [SP, #28] 
    /*0001d2ac*/ BLE         VencQueryPicQueue_x1d9dc
    /*0001d2b0*/ LDR         R2, [R4, #1032]             @ 0x408 
    /*0001d2b4*/ SUBS        R2, R2, #1 
    /*0001d2b8*/ LDRMI       R1, [R4, #1024]             @ 0x400 
    /*0001d2bc*/ ADDMI       R2, R2, R1 
    /*0001d2c0*/ LDR         R1, [R4, #1020]             @ 0x3fc 
    /*0001d2c4*/ LDR         R6, [R1, R2, LSL #2] 
    VencQueryPicQueue_x1d2c8:
    /*0001d2c8*/ LDR         R2, [SP, #16] 
    /*0001d2cc*/ LDR         R1, [R6, #232]              @ 0xe8 
    /*0001d2d0*/ CMP         R2, #0 
    /*0001d2d4*/ STR         R1, [SP, #12] 
    /*0001d2d8*/ LDREQ       R5, [SP, #12] 
    /*0001d2dc*/ BEQ         VencQueryPicQueue_x1d2ec
    /*0001d2e0*/ CMP         R2, R1 
    /*0001d2e4*/ MOVCC       R5, R2 
    /*0001d2e8*/ MOVCS       R5, R1 
    VencQueryPicQueue_x1d2ec:
    /*0001d2ec*/ LDR         R2, [SP, #16] 
    /*0001d2f0*/ LDR         R1, [SP, #12] 
    /*0001d2f4*/ CMP         R2, R1 
    /*0001d2f8*/ MOVCS       R8, R2 
    /*0001d2fc*/ MOVCC       R8, R1 
    /*0001d300*/ CMP         R3, #1 
    /*0001d304*/ BLS         VencQueryPicQueue_x1da94
    /*0001d308*/ LDR         R3, [R4, #3764]             @ 0xeb4 
    /*0001d30c*/ CMP         R3, #0 
    /*0001d310*/ STR         R3, [SP, #20] 
    /*0001d314*/ BLE         VencQueryPicQueue_x1d9bc
    /*0001d318*/ LDR         R3, [R4, #3760]             @ 0xeb0 
    /*0001d31c*/ SUBS        R3, R3, #1 
    /*0001d320*/ LDRMI       R2, [R4, #3752]             @ 0xea8 
    /*0001d324*/ ADDMI       R3, R3, R2 
    /*0001d328*/ LDR         R2, [R4, #3748]             @ 0xea4 
    /*0001d32c*/ LDR         R6, [R2, R3, LSL #2] 
    VencQueryPicQueue_x1d330:
    /*0001d330*/ LDR         R9, [R6, #232]              @ 0xe8 
    /*0001d334*/ CMP         R5, #0 
    /*0001d338*/ MOVEQ       R5, R9 
    /*0001d33c*/ BEQ         VencQueryPicQueue_x1d348
    /*0001d340*/ CMP         R5, R9 
    /*0001d344*/ MOVCS       R5, R9 
    VencQueryPicQueue_x1d348:
    /*0001d348*/ CMP         R8, R9 
    /*0001d34c*/ LDR         R0, [R4, #3768]             @ 0xeb8 
    /*0001d350*/ MOVCC       R8, R9 
    /*0001d354*/ CMP         R0, #0 
    /*0001d358*/ BEQ         VencQueryPicQueue_x1d7cc
    VencQueryPicQueue_x1d35c:
    /*0001d35c*/ MOV         R0, #1 
    /*0001d360*/ BL          0x000000000001D360          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001d364*/ LDR         R3, [R0, #104]              @ 0x68 
    /*0001d368*/ MOV         R0, #1 
    /*0001d36c*/ BLX         R3 
    /*0001d370*/ CMP         R0, #0 
    /*0001d374*/ BEQ         VencQueryPicQueue_x1d7cc
    /*0001d378*/ ADD         R2, R7, #4096               @ 0x1000 
    /*0001d37c*/ LDR         R3, [R2, #2356]             @ 0x934 
    /*0001d380*/ CMP         R3, #0 
    /*0001d384*/ STR         R3, [SP, #36]               @ 0x24 
    /*0001d388*/ BLE         VencQueryPicQueue_x1da74
    /*0001d38c*/ LDR         R3, [R2, #2352]             @ 0x930 
    /*0001d390*/ SUBS        R3, R3, #1 
    /*0001d394*/ LDRMI       R1, [R2, #2344]             @ 0x928 
    /*0001d398*/ LDR         R2, [R2, #2340]             @ 0x924 
    /*0001d39c*/ ADDMI       R3, R3, R1 
    /*0001d3a0*/ LDR         R6, [R2, R3, LSL #2] 
    VencQueryPicQueue_x1d3a4:
    /*0001d3a4*/ LDR         R3, [R6, #232]              @ 0xe8 
    /*0001d3a8*/ CMP         R5, #0 
    /*0001d3ac*/ STR         R3, [SP, #32] 
    /*0001d3b0*/ LDREQ       R5, [SP, #32] 
    /*0001d3b4*/ BEQ         VencQueryPicQueue_x1d3c0
    /*0001d3b8*/ CMP         R5, R3 
    /*0001d3bc*/ MOVCS       R5, R3 
    VencQueryPicQueue_x1d3c0:
    /*0001d3c0*/ LDR         R3, [SP, #32] 
    /*0001d3c4*/ CMP         R8, R3 
    /*0001d3c8*/ MOVCC       R8, R3 
    /*0001d3cc*/ CMP         R5, R8 
    /*0001d3d0*/ BNE         VencQueryPicQueue_x1d7dc
    VencQueryPicQueue_x1d3d4:
    /*0001d3d4*/ LDRB        R3, [SL, #3352]             @ 0xd18 
    /*0001d3d8*/ CMP         R3, #0 
    /*0001d3dc*/ STREQ       R3, [SL, #3356]             @ 0xd1c 
    /*0001d3e0*/ MOVEQ       R0, #1 
    /*0001d3e4*/ BEQ         VencQueryPicQueue_x1d844
    /*0001d3e8*/ LDR         R3, [FP, #672]              @ 0x2a0 
    /*0001d3ec*/ CMP         R3, #1 
    /*0001d3f0*/ BNE         VencQueryPicQueue_x1d7e8
    VencQueryPicQueue_x1d3f4:
    /*0001d3f4*/ LDRB        R3, [SL, #3352]             @ 0xd18 
    /*0001d3f8*/ CMP         R3, #1 
    /*0001d3fc*/ LDREQ       R8, [SL, #3340]             @ 0xd0c 
    /*0001d400*/ CMP         R5, R8 
    /*0001d404*/ MOVCS       R0, #0 
    /*0001d408*/ BCS         VencQueryPicQueue_x1d7fc
    VencQueryPicQueue_x1d40c:
    /*0001d40c*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f6c] 
    /*0001d410*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001d414*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f6c] 
    /*0001d418*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001d41c*/ STR         R3, [SP, #4] 
    /*0001d420*/ STR         R2, [SP, #8] 
    /*0001d424*/ B           VencQueryPicQueue_x1d6b4
    VencQueryPicQueue_x1d428:
    /*0001d428*/ MVN         R5, #0 
    VencQueryPicQueue_x1d42c:
    /*0001d42c*/ LDR         R3, [FP, #672]              @ 0x2a0 
    /*0001d430*/ CMP         R3, #0 
    /*0001d434*/ BEQ         VencQueryPicQueue_x1d444
    /*0001d438*/ LDRB        R3, [SL, #3352]             @ 0xd18 
    /*0001d43c*/ CMP         R3, #0 
    /*0001d440*/ BNE         VencQueryPicQueue_x1d50c
    VencQueryPicQueue_x1d444:
    /*0001d444*/ LDR         R3, [SP, #16] 
    /*0001d448*/ CMP         R3, R8 
    /*0001d44c*/ BCS         VencQueryPicQueue_x1d50c
    /*0001d450*/ LDR         R2, [R7, #3724]             @ 0xe8c 
    /*0001d454*/ CMP         R2, #0 
    /*0001d458*/ BLE         VencQueryPicQueue_x1d8bc
    /*0001d45c*/ LDR         R3, [R7, #3720]             @ 0xe88 
    /*0001d460*/ SUB         R2, R2, #1 
    /*0001d464*/ SUBS        R3, R3, #1 
    /*0001d468*/ LDRMI       R1, [R7, #3712]             @ 0xe80 
    /*0001d46c*/ ADDMI       R3, R3, R1 
    /*0001d470*/ LDR         R1, [R7, #3708]             @ 0xe7c 
    /*0001d474*/ LDR         R6, [R1, R3, LSL #2] 
    /*0001d478*/ STR         R2, [R7, #3724]             @ 0xe8c 
    /*0001d47c*/ STR         R3, [R7, #3720]             @ 0xe88 
    VencQueryPicQueue_x1d480:
    /*0001d480*/ MOV         R0, R6 
    /*0001d484*/ BL          0x000000000001D484          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*0001d488*/ CMP         R0, #0 
    /*0001d48c*/ BNE         VencQueryPicQueue_x1d8a4
    VencQueryPicQueue_x1d490:
    /*0001d490*/ LDR         R3, [R7, #3704]             @ 0xe78 
    /*0001d494*/ LDR         R1, [R7, #3692]             @ 0xe6c 
    /*0001d498*/ CMP         R3, R1 
    /*0001d49c*/ BGE         VencQueryPicQueue_x1d85c
    /*0001d4a0*/ LDR         R2, [R7, #3696]             @ 0xe70 
    /*0001d4a4*/ ADD         R3, R3, #1 
    /*0001d4a8*/ SUBS        R2, R2, #1 
    /*0001d4ac*/ ADDMI       R2, R2, R1 
    /*0001d4b0*/ LDR         R1, [R7, #3688]             @ 0xe68 
    /*0001d4b4*/ STR         R6, [R1, R2, LSL #2] 
    /*0001d4b8*/ STR         R3, [R7, #3704]             @ 0xe78 
    /*0001d4bc*/ STR         R2, [R7, #3696]             @ 0xe70 
    VencQueryPicQueue_x1d4c0:
    /*0001d4c0*/ ADD         R0, R6, #336                @ 0x150 
    /*0001d4c4*/ BL          0x000000000001D4C4          @ VencPutFrmAddInfo [R_ARM_CALL: .text+0x1320] 
    /*0001d4c8*/ LDR         R3, [SP, #24] 
    /*0001d4cc*/ SUBS        R3, R3, #1 
    /*0001d4d0*/ STR         R3, [SP, #24] 
    /*0001d4d4*/ BEQ         VencQueryPicQueue_x1d840
    /*0001d4d8*/ LDR         R3, [R7, #3724]             @ 0xe8c 
    /*0001d4dc*/ CMP         R3, #0 
    /*0001d4e0*/ BLE         VencQueryPicQueue_x1d8d4
    /*0001d4e4*/ LDR         R3, [R7, #3720]             @ 0xe88 
    /*0001d4e8*/ SUBS        R3, R3, #1 
    /*0001d4ec*/ LDRMI       R2, [R7, #3712]             @ 0xe80 
    /*0001d4f0*/ ADDMI       R3, R3, R2 
    /*0001d4f4*/ LDR         R2, [R7, #3708]             @ 0xe7c 
    /*0001d4f8*/ LDR         R6, [R2, R3, LSL #2] 
    VencQueryPicQueue_x1d4fc:
    /*0001d4fc*/ LDR         R3, [R6, #232]              @ 0xe8 
    /*0001d500*/ CMP         R5, R3 
    /*0001d504*/ STR         R3, [SP, #16] 
    /*0001d508*/ MOVCS       R5, R3 
    VencQueryPicQueue_x1d50c:
    /*0001d50c*/ LDRB        R3, [SL, #3264]             @ 0xcc0 
    /*0001d510*/ LDR         R2, [SP, #12] 
    /*0001d514*/ CMP         R3, #0 
    /*0001d518*/ CMPNE       R2, R8 
    /*0001d51c*/ BCS         VencQueryPicQueue_x1d5dc
    /*0001d520*/ LDR         R2, [R4, #1036]             @ 0x40c 
    /*0001d524*/ CMP         R2, #0 
    /*0001d528*/ BLE         VencQueryPicQueue_x1d94c
    /*0001d52c*/ LDR         R3, [R4, #1032]             @ 0x408 
    /*0001d530*/ SUB         R2, R2, #1 
    /*0001d534*/ SUBS        R3, R3, #1 
    /*0001d538*/ LDRMI       R1, [R4, #1024]             @ 0x400 
    /*0001d53c*/ ADDMI       R3, R3, R1 
    /*0001d540*/ LDR         R1, [R4, #1020]             @ 0x3fc 
    /*0001d544*/ LDR         R6, [R1, R3, LSL #2] 
    /*0001d548*/ STR         R2, [R4, #1036]             @ 0x40c 
    /*0001d54c*/ STR         R3, [R4, #1032]             @ 0x408 
    VencQueryPicQueue_x1d550:
    /*0001d550*/ MOV         R0, R6 
    /*0001d554*/ BL          0x000000000001D554          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*0001d558*/ CMP         R0, #0 
    /*0001d55c*/ BNE         VencQueryPicQueue_x1d934
    VencQueryPicQueue_x1d560:
    /*0001d560*/ LDR         R3, [R4, #1016]             @ 0x3f8 
    /*0001d564*/ LDR         R1, [R4, #1004]             @ 0x3ec 
    /*0001d568*/ CMP         R3, R1 
    /*0001d56c*/ BGE         VencQueryPicQueue_x1d88c
    /*0001d570*/ LDR         R2, [R4, #1008]             @ 0x3f0 
    /*0001d574*/ ADD         R3, R3, #1 
    /*0001d578*/ SUBS        R2, R2, #1 
    /*0001d57c*/ ADDMI       R2, R2, R1 
    /*0001d580*/ LDR         R1, [R4, #1000]             @ 0x3e8 
    /*0001d584*/ STR         R6, [R1, R2, LSL #2] 
    /*0001d588*/ STR         R3, [R4, #1016]             @ 0x3f8 
    /*0001d58c*/ STR         R2, [R4, #1008]             @ 0x3f0 
    VencQueryPicQueue_x1d590:
    /*0001d590*/ LDR         R3, [SP, #28] 
    /*0001d594*/ SUBS        R3, R3, #1 
    /*0001d598*/ STR         R3, [SP, #28] 
    /*0001d59c*/ BEQ         VencQueryPicQueue_x1d840
    /*0001d5a0*/ LDR         R3, [R4, #1036]             @ 0x40c 
    /*0001d5a4*/ CMP         R3, #0 
    /*0001d5a8*/ BLE         VencQueryPicQueue_x1d964
    /*0001d5ac*/ LDR         R3, [R4, #1032]             @ 0x408 
    /*0001d5b0*/ SUBS        R3, R3, #1 
    /*0001d5b4*/ LDRMI       R2, [R4, #1024]             @ 0x400 
    /*0001d5b8*/ ADDMI       R3, R3, R2 
    /*0001d5bc*/ LDR         R2, [R4, #1020]             @ 0x3fc 
    /*0001d5c0*/ LDR         R6, [R2, R3, LSL #2] 
    VencQueryPicQueue_x1d5c4:
    /*0001d5c4*/ LDR         R3, [R6, #232]              @ 0xe8 
    /*0001d5c8*/ MOV         R2, R3 
    /*0001d5cc*/ STR         R3, [SP, #12] 
    /*0001d5d0*/ CMP         R5, R2 
    /*0001d5d4*/ LDRB        R3, [SL, #3264]             @ 0xcc0 
    /*0001d5d8*/ MOVCS       R5, R2 
    VencQueryPicQueue_x1d5dc:
    /*0001d5dc*/ CMP         R3, #1 
    /*0001d5e0*/ MOVLS       R3, #0 
    /*0001d5e4*/ MOVHI       R3, #1 
    /*0001d5e8*/ CMP         R9, R8 
    /*0001d5ec*/ MOVCS       R3, #0 
    /*0001d5f0*/ CMP         R3, #0 
    /*0001d5f4*/ BEQ         VencQueryPicQueue_x1d6a8
    /*0001d5f8*/ LDR         R2, [R4, #3764]             @ 0xeb4 
    /*0001d5fc*/ CMP         R2, #0 
    /*0001d600*/ BLE         VencQueryPicQueue_x1d904
    /*0001d604*/ LDR         R3, [R4, #3760]             @ 0xeb0 
    /*0001d608*/ SUB         R2, R2, #1 
    /*0001d60c*/ SUBS        R3, R3, #1 
    /*0001d610*/ LDRMI       R1, [R4, #3752]             @ 0xea8 
    /*0001d614*/ ADDMI       R3, R3, R1 
    /*0001d618*/ LDR         R1, [R4, #3748]             @ 0xea4 
    /*0001d61c*/ LDR         R6, [R1, R3, LSL #2] 
    /*0001d620*/ STR         R2, [R4, #3764]             @ 0xeb4 
    /*0001d624*/ STR         R3, [R4, #3760]             @ 0xeb0 
    VencQueryPicQueue_x1d628:
    /*0001d628*/ MOV         R0, R6 
    /*0001d62c*/ BL          0x000000000001D62C          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*0001d630*/ CMP         R0, #0 
    /*0001d634*/ BNE         VencQueryPicQueue_x1d8ec
    VencQueryPicQueue_x1d638:
    /*0001d638*/ LDR         R3, [R4, #3744]             @ 0xea0 
    /*0001d63c*/ LDR         R1, [R4, #3732]             @ 0xe94 
    /*0001d640*/ CMP         R3, R1 
    /*0001d644*/ BGE         VencQueryPicQueue_x1d874
    /*0001d648*/ LDR         R2, [R4, #3736]             @ 0xe98 
    /*0001d64c*/ ADD         R3, R3, #1 
    /*0001d650*/ SUBS        R2, R2, #1 
    /*0001d654*/ ADDMI       R2, R2, R1 
    /*0001d658*/ LDR         R1, [R4, #3728]             @ 0xe90 
    /*0001d65c*/ STR         R6, [R1, R2, LSL #2] 
    /*0001d660*/ STR         R3, [R4, #3744]             @ 0xea0 
    /*0001d664*/ STR         R2, [R4, #3736]             @ 0xe98 
    VencQueryPicQueue_x1d668:
    /*0001d668*/ LDR         R3, [SP, #20] 
    /*0001d66c*/ SUBS        R3, R3, #1 
    /*0001d670*/ STR         R3, [SP, #20] 
    /*0001d674*/ BEQ         VencQueryPicQueue_x1d840
    /*0001d678*/ LDR         R3, [R4, #3764]             @ 0xeb4 
    /*0001d67c*/ CMP         R3, #0 
    /*0001d680*/ BLE         VencQueryPicQueue_x1d91c
    /*0001d684*/ LDR         R3, [R4, #3760]             @ 0xeb0 
    /*0001d688*/ SUBS        R3, R3, #1 
    /*0001d68c*/ LDRMI       R2, [R4, #3752]             @ 0xea8 
    /*0001d690*/ ADDMI       R3, R3, R2 
    /*0001d694*/ LDR         R2, [R4, #3748]             @ 0xea4 
    /*0001d698*/ LDR         R6, [R2, R3, LSL #2] 
    VencQueryPicQueue_x1d69c:
    /*0001d69c*/ LDR         R9, [R6, #232]              @ 0xe8 
    /*0001d6a0*/ CMP         R5, R9 
    /*0001d6a4*/ MOVCS       R5, R9 
    VencQueryPicQueue_x1d6a8:
    /*0001d6a8*/ CMP         R5, R8 
    /*0001d6ac*/ BEQ         VencQueryPicQueue_x1da5c
    /*0001d6b0*/ BHI         VencQueryPicQueue_x1da68
    VencQueryPicQueue_x1d6b4:
    /*0001d6b4*/ LDR         R3, [R4, #3768]             @ 0xeb8 
    /*0001d6b8*/ CMP         R3, #0 
    /*0001d6bc*/ BEQ         VencQueryPicQueue_x1d428
    /*0001d6c0*/ MOV         R0, #1 
    /*0001d6c4*/ BL          0x000000000001D6C4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001d6c8*/ LDR         R3, [R0, #104]              @ 0x68 
    /*0001d6cc*/ MOV         R0, #1 
    /*0001d6d0*/ BLX         R3 
    /*0001d6d4*/ LDR         R3, [SP, #32] 
    /*0001d6d8*/ CMP         R0, #0 
    /*0001d6dc*/ CMPNE       R8, R3 
    /*0001d6e0*/ BLS         VencQueryPicQueue_x1d428
    /*0001d6e4*/ ADD         R5, R7, #4096               @ 0x1000 
    /*0001d6e8*/ LDR         R2, [R5, #2356]             @ 0x934 
    /*0001d6ec*/ CMP         R2, #0 
    /*0001d6f0*/ BLE         VencQueryPicQueue_x1da2c
    /*0001d6f4*/ LDR         R3, [R5, #2352]             @ 0x930 
    /*0001d6f8*/ SUB         R2, R2, #1 
    /*0001d6fc*/ SUBS        R3, R3, #1 
    /*0001d700*/ LDRMI       R1, [R5, #2344]             @ 0x928 
    /*0001d704*/ ADDMI       R3, R3, R1 
    /*0001d708*/ LDR         R1, [R5, #2340]             @ 0x924 
    /*0001d70c*/ LDR         R6, [R1, R3, LSL #2] 
    /*0001d710*/ STR         R2, [R5, #2356]             @ 0x934 
    /*0001d714*/ STR         R3, [R5, #2352]             @ 0x930 
    VencQueryPicQueue_x1d718:
    /*0001d718*/ MOV         R0, R6 
    /*0001d71c*/ BL          0x000000000001D71C          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*0001d720*/ CMP         R0, #0 
    /*0001d724*/ BNE         VencQueryPicQueue_x1da14
    VencQueryPicQueue_x1d728:
    /*0001d728*/ LDR         R3, [R5, #2336]             @ 0x920 
    /*0001d72c*/ LDR         R1, [R5, #2324]             @ 0x914 
    /*0001d730*/ CMP         R3, R1 
    /*0001d734*/ BGE         VencQueryPicQueue_x1d97c
    /*0001d738*/ LDR         R2, [R5, #2328]             @ 0x918 
    /*0001d73c*/ ADD         R3, R3, #1 
    /*0001d740*/ SUBS        R2, R2, #1 
    /*0001d744*/ ADDMI       R2, R2, R1 
    /*0001d748*/ LDR         R1, [R5, #2320]             @ 0x910 
    /*0001d74c*/ STR         R6, [R1, R2, LSL #2] 
    /*0001d750*/ STR         R3, [R5, #2336]             @ 0x920 
    /*0001d754*/ STR         R2, [R5, #2328]             @ 0x918 
    VencQueryPicQueue_x1d758:
    /*0001d758*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0001d75c*/ SUBS        R3, R3, #1 
    /*0001d760*/ STR         R3, [SP, #36]               @ 0x24 
    /*0001d764*/ BEQ         VencQueryPicQueue_x1d840
    /*0001d768*/ LDR         R3, [R5, #2356]             @ 0x934 
    /*0001d76c*/ CMP         R3, #0 
    /*0001d770*/ BLE         VencQueryPicQueue_x1da44
    /*0001d774*/ LDR         R3, [R5, #2352]             @ 0x930 
    /*0001d778*/ SUBS        R3, R3, #1 
    /*0001d77c*/ LDRMI       R2, [R5, #2344]             @ 0x928 
    /*0001d780*/ ADDMI       R3, R3, R2 
    /*0001d784*/ LDR         R2, [R5, #2340]             @ 0x924 
    /*0001d788*/ LDR         R6, [R2, R3, LSL #2] 
    VencQueryPicQueue_x1d78c:
    /*0001d78c*/ LDR         R3, [R6, #232]              @ 0xe8 
    /*0001d790*/ MVN         R5, #0 
    /*0001d794*/ CMP         R3, R5 
    /*0001d798*/ STR         R3, [SP, #32] 
    /*0001d79c*/ MOVCC       R5, R3 
    /*0001d7a0*/ B           VencQueryPicQueue_x1d42c
    VencQueryPicQueue_x1d7a4:
    /*0001d7a4*/ LDR         R5, [SP, #16] 
    /*0001d7a8*/ ADD         R4, R7, #8192               @ 0x2000 
    /*0001d7ac*/ MOV         R9, R3 
    /*0001d7b0*/ STR         R3, [SP, #28] 
    /*0001d7b4*/ STR         R3, [SP, #12] 
    /*0001d7b8*/ MOV         R8, R5 
    /*0001d7bc*/ STR         R3, [SP, #20] 
    VencQueryPicQueue_x1d7c0:
    /*0001d7c0*/ LDR         R0, [R4, #3768]             @ 0xeb8 
    /*0001d7c4*/ CMP         R0, #0 
    /*0001d7c8*/ BNE         VencQueryPicQueue_x1d35c
    VencQueryPicQueue_x1d7cc:
    /*0001d7cc*/ CMP         R5, R8 
    /*0001d7d0*/ STR         R0, [SP, #36]               @ 0x24 
    /*0001d7d4*/ STR         R0, [SP, #32] 
    /*0001d7d8*/ BEQ         VencQueryPicQueue_x1d3d4
    VencQueryPicQueue_x1d7dc:
    /*0001d7dc*/ LDR         R3, [FP, #672]              @ 0x2a0 
    /*0001d7e0*/ CMP         R3, #1 
    /*0001d7e4*/ BEQ         VencQueryPicQueue_x1d3f4
    VencQueryPicQueue_x1d7e8:
    /*0001d7e8*/ CMP         R5, R8 
    /*0001d7ec*/ BCC         VencQueryPicQueue_x1d40c
    /*0001d7f0*/ MOV         R0, #0 
    VencQueryPicQueue_x1d7f4:
    /*0001d7f4*/ CMP         R3, #0 
    /*0001d7f8*/ BEQ         VencQueryPicQueue_x1d844
    VencQueryPicQueue_x1d7fc:
    /*0001d7fc*/ LDRB        R3, [SL, #3352]             @ 0xd18 
    /*0001d800*/ CMP         R3, #0 
    /*0001d804*/ BEQ         VencQueryPicQueue_x1d844
    /*0001d808*/ LDR         R3, [SL, #3340]             @ 0xd0c 
    /*0001d80c*/ CMP         R3, R5 
    /*0001d810*/ MOVEQ       R0, #1 
    /*0001d814*/ BEQ         VencQueryPicQueue_x1d844
    /*0001d818*/ LDR         R2, [SL, #3368]             @ 0xd28 
    /*0001d81c*/ ADD         R4, R7, #36096              @ 0x8d00 
    /*0001d820*/ MOV         R3, #1 
    /*0001d824*/ STR         R3, [SL, #3356]             @ 0xd1c 
    /*0001d828*/ CMP         R2, #0 
    /*0001d82c*/ STR         R3, [SL, #3360]             @ 0xd20 
    /*0001d830*/ ADDEQ       R4, R4, #40                 @ 0x28 
    /*0001d834*/ BNE         VencQueryPicQueue_x1da00
    VencQueryPicQueue_x1d838:
    /*0001d838*/ MOV         R0, R4 
    /*0001d83c*/ BL          0x000000000001D83C          @ VencPutFrmAddInfo [R_ARM_CALL: .text+0x1320] 
    VencQueryPicQueue_x1d840:
    /*0001d840*/ MOV         R0, #0 
    VencQueryPicQueue_x1d844:
    /*0001d844*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0001d848*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencQueryPicQueue_x1d84c:
    /*0001d84c*/ MOV         R6, #0 
    /*0001d850*/ STR         R6, [SP, #24] 
    /*0001d854*/ STR         R6, [SP, #16] 
    /*0001d858*/ B           VencQueryPicQueue_x1d290
    VencQueryPicQueue_x1d85c:
    /*0001d85c*/ LDR         R3, [SP, #4] 
    /*0001d860*/ MOVW        R2, #534                    @ 0x216 
    /*0001d864*/ LDR         R1, [PC, #568]              @ 0x000000000001daa4 
    /*0001d868*/ LDR         R0, [SP, #8] 
    /*0001d86c*/ BL          0x000000000001D86C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d870*/ B           VencQueryPicQueue_x1d4c0
    VencQueryPicQueue_x1d874:
    /*0001d874*/ LDR         R3, [SP, #4] 
    /*0001d878*/ MOVW        R2, #589                    @ 0x24d 
    /*0001d87c*/ LDR         R1, [PC, #544]              @ 0x000000000001daa4 
    /*0001d880*/ LDR         R0, [SP, #8] 
    /*0001d884*/ BL          0x000000000001D884          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d888*/ B           VencQueryPicQueue_x1d668
    VencQueryPicQueue_x1d88c:
    /*0001d88c*/ LDR         R3, [SP, #4] 
    /*0001d890*/ MOVW        R2, #562                    @ 0x232 
    /*0001d894*/ LDR         R1, [PC, #520]              @ 0x000000000001daa4 
    /*0001d898*/ LDR         R0, [SP, #8] 
    /*0001d89c*/ BL          0x000000000001D89C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d8a0*/ B           VencQueryPicQueue_x1d590
    VencQueryPicQueue_x1d8a4:
    /*0001d8a4*/ LDR         R3, [SP, #4] 
    /*0001d8a8*/ MOV         R2, #532                    @ 0x214 
    /*0001d8ac*/ LDR         R1, [PC, #496]              @ 0x000000000001daa4 
    /*0001d8b0*/ LDR         R0, [SP, #8] 
    /*0001d8b4*/ BL          0x000000000001D8B4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d8b8*/ B           VencQueryPicQueue_x1d490
    VencQueryPicQueue_x1d8bc:
    /*0001d8bc*/ LDR         R3, [SP, #4] 
    /*0001d8c0*/ MOV         R2, #528                    @ 0x210 
    /*0001d8c4*/ LDR         R1, [PC, #472]              @ 0x000000000001daa4 
    /*0001d8c8*/ LDR         R0, [SP, #8] 
    /*0001d8cc*/ BL          0x000000000001D8CC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d8d0*/ B           VencQueryPicQueue_x1d480
    VencQueryPicQueue_x1d8d4:
    /*0001d8d4*/ LDR         R3, [SP, #4] 
    /*0001d8d8*/ MOV         R2, #544                    @ 0x220 
    /*0001d8dc*/ LDR         R1, [PC, #448]              @ 0x000000000001daa4 
    /*0001d8e0*/ LDR         R0, [SP, #8] 
    /*0001d8e4*/ BL          0x000000000001D8E4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d8e8*/ B           VencQueryPicQueue_x1d4fc
    VencQueryPicQueue_x1d8ec:
    /*0001d8ec*/ LDR         R3, [SP, #4] 
    /*0001d8f0*/ MOVW        R2, #587                    @ 0x24b 
    /*0001d8f4*/ LDR         R1, [PC, #424]              @ 0x000000000001daa4 
    /*0001d8f8*/ LDR         R0, [SP, #8] 
    /*0001d8fc*/ BL          0x000000000001D8FC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d900*/ B           VencQueryPicQueue_x1d638
    VencQueryPicQueue_x1d904:
    /*0001d904*/ LDR         R3, [SP, #4] 
    /*0001d908*/ MOVW        R2, #583                    @ 0x247 
    /*0001d90c*/ LDR         R1, [PC, #400]              @ 0x000000000001daa4 
    /*0001d910*/ LDR         R0, [SP, #8] 
    /*0001d914*/ BL          0x000000000001D914          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d918*/ B           VencQueryPicQueue_x1d628
    VencQueryPicQueue_x1d91c:
    /*0001d91c*/ LDR         R3, [SP, #4] 
    /*0001d920*/ MOVW        R2, #597                    @ 0x255 
    /*0001d924*/ LDR         R1, [PC, #376]              @ 0x000000000001daa4 
    /*0001d928*/ LDR         R0, [SP, #8] 
    /*0001d92c*/ BL          0x000000000001D92C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d930*/ B           VencQueryPicQueue_x1d69c
    VencQueryPicQueue_x1d934:
    /*0001d934*/ LDR         R3, [SP, #4] 
    /*0001d938*/ MOV         R2, #560                    @ 0x230 
    /*0001d93c*/ LDR         R1, [PC, #352]              @ 0x000000000001daa4 
    /*0001d940*/ LDR         R0, [SP, #8] 
    /*0001d944*/ BL          0x000000000001D944          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d948*/ B           VencQueryPicQueue_x1d560
    VencQueryPicQueue_x1d94c:
    /*0001d94c*/ LDR         R3, [SP, #4] 
    /*0001d950*/ MOV         R2, #556                    @ 0x22c 
    /*0001d954*/ LDR         R1, [PC, #328]              @ 0x000000000001daa4 
    /*0001d958*/ LDR         R0, [SP, #8] 
    /*0001d95c*/ BL          0x000000000001D95C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d960*/ B           VencQueryPicQueue_x1d550
    VencQueryPicQueue_x1d964:
    /*0001d964*/ LDR         R3, [SP, #4] 
    /*0001d968*/ MOVW        R2, #570                    @ 0x23a 
    /*0001d96c*/ LDR         R1, [PC, #304]              @ 0x000000000001daa4 
    /*0001d970*/ LDR         R0, [SP, #8] 
    /*0001d974*/ BL          0x000000000001D974          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d978*/ B           VencQueryPicQueue_x1d5c4
    VencQueryPicQueue_x1d97c:
    /*0001d97c*/ LDR         R3, [SP, #4] 
    /*0001d980*/ MOVW        R2, #505                    @ 0x1f9 
    /*0001d984*/ LDR         R1, [PC, #280]              @ 0x000000000001daa4 
    /*0001d988*/ LDR         R0, [SP, #8] 
    /*0001d98c*/ BL          0x000000000001D98C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d990*/ B           VencQueryPicQueue_x1d758
    VencQueryPicQueue_x1d994:
    /*0001d994*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f6c] 
    /*0001d998*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001d99c*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f6c] 
    /*0001d9a0*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001d9a4*/ MOVW        R2, #390                    @ 0x186 
    /*0001d9a8*/ LDR         R1, [PC, #244]              @ 0x000000000001daa4 
    /*0001d9ac*/ BL          0x000000000001D9AC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d9b0*/ MOV         R3, #0 
    /*0001d9b4*/ MOV         R6, R3 
    /*0001d9b8*/ B           VencQueryPicQueue_x1d288
    VencQueryPicQueue_x1d9bc:
    /*0001d9bc*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f6c] 
    /*0001d9c0*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001d9c4*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f6c] 
    /*0001d9c8*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001d9cc*/ MOVW        R2, #421                    @ 0x1a5 
    /*0001d9d0*/ LDR         R1, [PC, #204]              @ 0x000000000001daa4 
    /*0001d9d4*/ BL          0x000000000001D9D4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d9d8*/ B           VencQueryPicQueue_x1d330
    VencQueryPicQueue_x1d9dc:
    /*0001d9dc*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f6c] 
    /*0001d9e0*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001d9e4*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f6c] 
    /*0001d9e8*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001d9ec*/ MOVW        R2, #402                    @ 0x192 
    /*0001d9f0*/ LDR         R1, [PC, #172]              @ 0x000000000001daa4 
    /*0001d9f4*/ BL          0x000000000001D9F4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001d9f8*/ LDRB        R3, [SL, #3264]             @ 0xcc0 
    /*0001d9fc*/ B           VencQueryPicQueue_x1d2c8
    VencQueryPicQueue_x1da00:
    /*0001da00*/ ADD         R4, R4, #40                 @ 0x28 
    /*0001da04*/ LDR         R0, [R7, #56]               @ 0x38 
    /*0001da08*/ MOV         R1, R4 
    /*0001da0c*/ BL          0x000000000001DA0C          @ VencPutOsd [R_ARM_CALL: .text+0x18c0] 
    /*0001da10*/ B           VencQueryPicQueue_x1d838
    VencQueryPicQueue_x1da14:
    /*0001da14*/ LDR         R3, [SP, #4] 
    /*0001da18*/ MOVW        R2, #502                    @ 0x1f6 
    /*0001da1c*/ LDR         R1, [PC, #128]              @ 0x000000000001daa4 
    /*0001da20*/ LDR         R0, [SP, #8] 
    /*0001da24*/ BL          0x000000000001DA24          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001da28*/ B           VencQueryPicQueue_x1d728
    VencQueryPicQueue_x1da2c:
    /*0001da2c*/ LDR         R3, [SP, #4] 
    /*0001da30*/ MOVW        R2, #498                    @ 0x1f2 
    /*0001da34*/ LDR         R1, [PC, #104]              @ 0x000000000001daa4 
    /*0001da38*/ LDR         R0, [SP, #8] 
    /*0001da3c*/ BL          0x000000000001DA3C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001da40*/ B           VencQueryPicQueue_x1d718
    VencQueryPicQueue_x1da44:
    /*0001da44*/ LDR         R3, [SP, #4] 
    /*0001da48*/ MOVW        R2, #514                    @ 0x202 
    /*0001da4c*/ LDR         R1, [PC, #80]               @ 0x000000000001daa4 
    /*0001da50*/ LDR         R0, [SP, #8] 
    /*0001da54*/ BL          0x000000000001DA54          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001da58*/ B           VencQueryPicQueue_x1d78c
    VencQueryPicQueue_x1da5c:
    /*0001da5c*/ LDR         R3, [FP, #672]              @ 0x2a0 
    /*0001da60*/ MOV         R0, #1 
    /*0001da64*/ B           VencQueryPicQueue_x1d7f4
    VencQueryPicQueue_x1da68:
    /*0001da68*/ LDR         R3, [FP, #672]              @ 0x2a0 
    /*0001da6c*/ MOV         R0, #0 
    /*0001da70*/ B           VencQueryPicQueue_x1d7f4
    VencQueryPicQueue_x1da74:
    /*0001da74*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f6c] 
    /*0001da78*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001da7c*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f6c] 
    /*0001da80*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001da84*/ MOVW        R2, #443                    @ 0x1bb 
    /*0001da88*/ LDR         R1, [PC, #20]               @ 0x000000000001daa4 
    /*0001da8c*/ BL          0x000000000001DA8C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001da90*/ B           VencQueryPicQueue_x1d3a4
    VencQueryPicQueue_x1da94:
    /*0001da94*/ MOV         R3, #0 
    /*0001da98*/ STR         R3, [SP, #20] 
    /*0001da9c*/ MOV         R9, R3 
    /*0001daa0*/ B           VencQueryPicQueue_x1d7c0
    /*0001daa4*/ @           <UNDEFINED> instruction: 0x00000eb0 
FUNC_END VencQueryPicQueue


FUNC_BEGIN VencCheckPicQueue
    /*0001daa8*/ PUSH        {R4, LR} 
    /*0001daac*/ MOV         R4, R0 
    /*0001dab0*/ BL          0x000000000001DAB0          @ VencDealAbnoramlQueue [R_ARM_CALL: .text+0x1ccc8] 
    /*0001dab4*/ CMP         R0, #0 
    /*0001dab8*/ POPEQ       {R4, PC} 
    /*0001dabc*/ MOV         R0, R4 
    /*0001dac0*/ POP         {R4, LR} 
    VencCheckPicQueue_x1dac4:
    /*0001dac4*/ B           VencCheckPicQueue_x1dac4    @ VencQueryPicQueue [R_ARM_JUMP24: .text+0x1d230] 
FUNC_END VencCheckPicQueue


FUNC_BEGIN VencCheckJpegeQueue
    /*0001dac8*/ ADD         R3, R0, #12288              @ 0x3000 
    /*0001dacc*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001dad0*/ MOV         R4, R0 
    /*0001dad4*/ LDR         R6, [R3, #672]              @ 0x2a0 
    /*0001dad8*/ SUB         SP, SP, #28 
    /*0001dadc*/ ADD         R5, R0, #32768              @ 0x8000 
    /*0001dae0*/ CMP         R6, #1 
    /*0001dae4*/ BEQ         VencCheckJpegeQueue_x1db34
    /*0001dae8*/ LDR         R6, [R5, #3360]             @ 0xd20 
    /*0001daec*/ MOV         R3, #0 
    /*0001daf0*/ STRB        R3, [R5, #3352]             @ 0xd18 
    /*0001daf4*/ CMP         R6, #1 
    /*0001daf8*/ BEQ         VencCheckJpegeQueue_x1db0c
    VencCheckJpegeQueue_x1dafc:
    /*0001dafc*/ MOV         R6, #1 
    VencCheckJpegeQueue_x1db00:
    /*0001db00*/ MOV         R0, R6 
    /*0001db04*/ ADD         SP, SP, #28 
    /*0001db08*/ POP         {R4, R5, R6, R7, PC} 
    VencCheckJpegeQueue_x1db0c:
    /*0001db0c*/ ADD         R3, R0, #8192               @ 0x2000 
    /*0001db10*/ LDR         R3, [R3, #3768]             @ 0xeb8 
    /*0001db14*/ CMP         R3, #0 
    /*0001db18*/ BNE         VencCheckJpegeQueue_x1db6c
    VencCheckJpegeQueue_x1db1c:
    /*0001db1c*/ MOV         R3, #0 
    /*0001db20*/ STR         R3, [R5, #3344]             @ 0xd10 
    VencCheckJpegeQueue_x1db24:
    /*0001db24*/ MOV         R0, R4 
    /*0001db28*/ ADD         SP, SP, #28 
    /*0001db2c*/ POP         {R4, R5, R6, R7, LR} 
    VencCheckJpegeQueue_x1db30:
    /*0001db30*/ B           VencCheckJpegeQueue_x1db30  @ VencCheckPicQueue [R_ARM_JUMP24: .text+0x1daa8] 
    VencCheckJpegeQueue_x1db34:
    /*0001db34*/ LDR         R3, [R5, #3360]             @ 0xd20 
    /*0001db38*/ CMP         R3, #1 
    /*0001db3c*/ BEQ         VencCheckJpegeQueue_x1db8c
    /*0001db40*/ LDRB        R3, [R5, #3352]             @ 0xd18 
    /*0001db44*/ CMP         R3, #0 
    /*0001db48*/ BEQ         VencCheckJpegeQueue_x1dafc
    /*0001db4c*/ ADD         R3, R0, #8192               @ 0x2000 
    /*0001db50*/ LDR         R3, [R3, #3768]             @ 0xeb8 
    /*0001db54*/ CMP         R3, #0 
    /*0001db58*/ BNE         VencCheckJpegeQueue_x1dc30
    VencCheckJpegeQueue_x1db5c:
    /*0001db5c*/ LDR         R3, [R5, #3344]             @ 0xd10 
    /*0001db60*/ CMP         R3, #1 
    /*0001db64*/ BNE         VencCheckJpegeQueue_x1dafc
    /*0001db68*/ B           VencCheckJpegeQueue_x1db24
    VencCheckJpegeQueue_x1db6c:
    /*0001db6c*/ MOV         R0, R6 
    /*0001db70*/ BL          0x000000000001DB70          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001db74*/ LDR         R3, [R0, #104]              @ 0x68 
    /*0001db78*/ MOV         R0, R6 
    /*0001db7c*/ BLX         R3 
    /*0001db80*/ CMP         R0, #0 
    /*0001db84*/ BEQ         VencCheckJpegeQueue_x1db1c
    /*0001db88*/ B           VencCheckJpegeQueue_x1dc04
    VencCheckJpegeQueue_x1db8c:
    /*0001db8c*/ CMP         R1, #0 
    /*0001db90*/ MOV         R6, #0 
    /*0001db94*/ MOV         R7, R1 
    /*0001db98*/ STR         R6, [R5, #3356]             @ 0xd1c 
    /*0001db9c*/ BLE         VencCheckJpegeQueue_x1db00
    /*0001dba0*/ LDR         R3, [R0, #3724]             @ 0xe8c 
    /*0001dba4*/ CMP         R3, R6 
    /*0001dba8*/ BLE         VencCheckJpegeQueue_x1dc10
    /*0001dbac*/ LDR         R3, [R0, #3720]             @ 0xe88 
    /*0001dbb0*/ SUBS        R3, R3, #1 
    /*0001dbb4*/ LDRMI       R2, [R0, #3712]             @ 0xe80 
    /*0001dbb8*/ ADDMI       R3, R3, R2 
    /*0001dbbc*/ LDR         R2, [R0, #3708]             @ 0xe7c 
    /*0001dbc0*/ LDR         R6, [R2, R3, LSL #2] 
    VencCheckJpegeQueue_x1dbc4:
    /*0001dbc4*/ LDR         R3, [R6, #400]              @ 0x190 
    /*0001dbc8*/ CMP         R3, #1 
    /*0001dbcc*/ BEQ         VencCheckJpegeQueue_x1dc5c
    /*0001dbd0*/ ADD         R3, R4, #8192               @ 0x2000 
    /*0001dbd4*/ MOV         R2, #0 
    /*0001dbd8*/ STRB        R2, [R5, #3352]             @ 0xd18 
    /*0001dbdc*/ LDR         R3, [R3, #3768]             @ 0xeb8 
    /*0001dbe0*/ CMP         R3, R2 
    /*0001dbe4*/ BEQ         VencCheckJpegeQueue_x1db1c
    /*0001dbe8*/ MOV         R0, #1 
    /*0001dbec*/ BL          0x000000000001DBEC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001dbf0*/ LDR         R3, [R0, #104]              @ 0x68 
    /*0001dbf4*/ MOV         R0, #1 
    /*0001dbf8*/ BLX         R3 
    /*0001dbfc*/ CMP         R0, #0 
    /*0001dc00*/ BEQ         VencCheckJpegeQueue_x1db1c
    VencCheckJpegeQueue_x1dc04:
    /*0001dc04*/ MOV         R3, #3 
    /*0001dc08*/ STR         R3, [R5, #3344]             @ 0xd10 
    /*0001dc0c*/ B           VencCheckJpegeQueue_x1db24
    VencCheckJpegeQueue_x1dc10:
    /*0001dc10*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f6c] 
    /*0001dc14*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001dc18*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f6c] 
    /*0001dc1c*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001dc20*/ MOVW        R2, #665                    @ 0x299 
    /*0001dc24*/ LDR         R1, [PC, #292]              @ 0x000000000001dd50 
    /*0001dc28*/ BL          0x000000000001DC28          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001dc2c*/ B           VencCheckJpegeQueue_x1dbc4
    VencCheckJpegeQueue_x1dc30:
    /*0001dc30*/ MOV         R0, R6 
    /*0001dc34*/ BL          0x000000000001DC34          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001dc38*/ LDR         R3, [R0, #104]              @ 0x68 
    /*0001dc3c*/ MOV         R0, R6 
    /*0001dc40*/ BLX         R3 
    /*0001dc44*/ CMP         R0, #0 
    /*0001dc48*/ BEQ         VencCheckJpegeQueue_x1db5c
    /*0001dc4c*/ LDR         R3, [R5, #3344]             @ 0xd10 
    /*0001dc50*/ CMP         R3, #3 
    /*0001dc54*/ BNE         VencCheckJpegeQueue_x1dafc
    /*0001dc58*/ B           VencCheckJpegeQueue_x1db24
    VencCheckJpegeQueue_x1dc5c:
    /*0001dc5c*/ BL          0x000000000001DC5C          @ VENC_DRV_IsSupportJpegLowDelay [R_ARM_CALL: .text+0x26a30] 
    /*0001dc60*/ CMP         R0, #1 
    /*0001dc64*/ BEQ         VencCheckJpegeQueue_x1dd2c
    /*0001dc68*/ MOV         R3, #0 
    /*0001dc6c*/ STRB        R3, [R5, #3352]             @ 0xd18 
    /*0001dc70*/ LDR         R2, [R6, #312]              @ 0x138 
    /*0001dc74*/ CMP         R2, R3 
    /*0001dc78*/ MOVEQ       R6, R2 
    /*0001dc7c*/ BEQ         VencCheckJpegeQueue_x1dce8
    /*0001dc80*/ LDR         R3, [R6, #12] 
    /*0001dc84*/ LDR         R0, [R6, #4] 
    /*0001dc88*/ SUBS        R3, R3, #25 
    /*0001dc8c*/ LDRH        R1, [R2] 
    /*0001dc90*/ LDRH        R2, [R2, #32] 
    /*0001dc94*/ MOVNE       R3, #1 
    /*0001dc98*/ CMP         R0, R1 
    /*0001dc9c*/ LSR         R3, R0, R3 
    /*0001dca0*/ BNE         VencCheckJpegeQueue_x1dcac
    /*0001dca4*/ CMP         R3, R2 
    /*0001dca8*/ BEQ         VencCheckJpegeQueue_x1dd40
    VencCheckJpegeQueue_x1dcac:
    /*0001dcac*/ LDR         LR, [R4, #56]               @ 0x38 
    /*0001dcb0*/ MOV         IP, #692                    @ 0x2b4 
    /*0001dcb4*/ STR         R2, [SP, #20] 
    /*0001dcb8*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f84] 
    /*0001dcbc*/ STR         R1, [SP, #16] 
    /*0001dcc0*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f84] 
    /*0001dcc4*/ STR         R3, [SP, #12] 
    /*0001dcc8*/ MOV         R1, #8 
    /*0001dccc*/ STR         R0, [SP, #8] 
    /*0001dcd0*/ MOV         R0, #5 
    /*0001dcd4*/ STR         LR, [SP, #4] 
    /*0001dcd8*/ MOV         R6, #0 
    /*0001dcdc*/ STR         IP, [SP] 
    /*0001dce0*/ LDR         R3, [PC, #104]              @ 0x000000000001dd50 
    /*0001dce4*/ BL          0x000000000001DCE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencCheckJpegeQueue_x1dce8:
    /*0001dce8*/ ADD         R4, R4, #8192               @ 0x2000 
    /*0001dcec*/ LDR         R3, [R4, #3768]             @ 0xeb8 
    /*0001dcf0*/ CMP         R3, #0 
    /*0001dcf4*/ BNE         VencCheckJpegeQueue_x1dd04
    VencCheckJpegeQueue_x1dcf8:
    /*0001dcf8*/ MOV         R3, #0 
    /*0001dcfc*/ STR         R3, [R5, #3344]             @ 0xd10 
    /*0001dd00*/ B           VencCheckJpegeQueue_x1db00
    VencCheckJpegeQueue_x1dd04:
    /*0001dd04*/ MOV         R0, #1 
    /*0001dd08*/ BL          0x000000000001DD08          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001dd0c*/ LDR         R3, [R0, #104]              @ 0x68 
    /*0001dd10*/ MOV         R0, #1 
    /*0001dd14*/ BLX         R3 
    /*0001dd18*/ CMP         R0, #0 
    /*0001dd1c*/ MOVNE       R3, #3 
    /*0001dd20*/ STRNE       R3, [R5, #3344]             @ 0xd10 
    /*0001dd24*/ BNE         VencCheckJpegeQueue_x1db00
    /*0001dd28*/ B           VencCheckJpegeQueue_x1dcf8
    VencCheckJpegeQueue_x1dd2c:
    /*0001dd2c*/ MOV         R3, #0 
    /*0001dd30*/ STRB        R0, [R5, #3352]             @ 0xd18 
    /*0001dd34*/ MOV         R6, R7 
    /*0001dd38*/ STR         R3, [R5, #3344]             @ 0xd10 
    /*0001dd3c*/ B           VencCheckJpegeQueue_x1db00
    VencCheckJpegeQueue_x1dd40:
    /*0001dd40*/ MOV         R0, R4 
    /*0001dd44*/ BL          0x000000000001DD44          @ VencCheckPicQueue [R_ARM_CALL: .text+0x1daa8] 
    /*0001dd48*/ MOV         R6, R0 
    /*0001dd4c*/ B           VencCheckJpegeQueue_x1dce8
    /*0001dd50*/ ANDEQ       R0, R0, R4, ASR #29 
FUNC_END VencCheckJpegeQueue


FUNC_BEGIN VencCheckVpssQueryInfo
    /*0001dd54*/ PUSH        {R4, R5, LR} 
    /*0001dd58*/ SUBS        R4, R0, #0 
    /*0001dd5c*/ SUB         SP, SP, #20 
    /*0001dd60*/ MOV         R5, R1 
    /*0001dd64*/ BEQ         VencCheckVpssQueryInfo_x1de68
    VencCheckVpssQueryInfo_x1dd68:
    /*0001dd68*/ CMP         R5, #0 
    /*0001dd6c*/ BEQ         VencCheckVpssQueryInfo_x1de48
    VencCheckVpssQueryInfo_x1dd70:
    /*0001dd70*/ LDR         R3, [R4] 
    /*0001dd74*/ CMP         R3, #0 
    /*0001dd78*/ BEQ         VencCheckVpssQueryInfo_x1ddac
    /*0001dd7c*/ LDR         R2, [R3, #340]              @ 0x154 
    /*0001dd80*/ CMP         R2, #1 
    /*0001dd84*/ BHI         VencCheckVpssQueryInfo_x1dea8
    /*0001dd88*/ LDR         R2, [R3, #12] 
    /*0001dd8c*/ SUB         R1, R2, #25 
    /*0001dd90*/ CMP         R1, #1 
    /*0001dd94*/ BHI         VencCheckVpssQueryInfo_x1ddec
    /*0001dd98*/ LDR         R1, [R3, #232]              @ 0xe8 
    /*0001dd9c*/ LDR         R0, [R5, #32] 
    /*0001dda0*/ BL          0x000000000001DDA0          @ VencCheckTimeRef [R_ARM_CALL: .text+0x5fe8] 
    /*0001dda4*/ CMP         R0, #0 
    /*0001dda8*/ BNE         VencCheckVpssQueryInfo_x1dee4
    VencCheckVpssQueryInfo_x1ddac:
    /*0001ddac*/ LDR         R3, [R4, #16] 
    /*0001ddb0*/ CMP         R3, #1 
    /*0001ddb4*/ BHI         VencCheckVpssQueryInfo_x1de88
    /*0001ddb8*/ LDR         R3, [R4, #8] 
    /*0001ddbc*/ CMP         R3, #1 
    /*0001ddc0*/ BHI         VencCheckVpssQueryInfo_x1dec4
    /*0001ddc4*/ LDR         R3, [R4, #12] 
    /*0001ddc8*/ CMP         R3, #1 
    /*0001ddcc*/ BHI         VencCheckVpssQueryInfo_x1de28
    /*0001ddd0*/ MOV         R0, R4 
    /*0001ddd4*/ MOV         R1, R5 
    /*0001ddd8*/ BL          0x000000000001DDD8          @ VENC_DRV_CheckVpssQueryInfo [R_ARM_CALL: .text+0x26854] 
    /*0001dddc*/ CMP         R0, #0 
    /*0001dde0*/ BNE         VencCheckVpssQueryInfo_x1df18
    VencCheckVpssQueryInfo_x1dde4:
    /*0001dde4*/ ADD         SP, SP, #20 
    /*0001dde8*/ POP         {R4, R5, PC} 
    VencCheckVpssQueryInfo_x1ddec:
    /*0001ddec*/ LDR         R3, [R5, #56]               @ 0x38 
    /*0001ddf0*/ MOVW        R1, #1007                   @ 0x3ef 
    /*0001ddf4*/ STR         R2, [SP, #8] 
    /*0001ddf8*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8078] 
    /*0001ddfc*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8078] 
    /*0001de00*/ STR         R1, [SP] 
    VencCheckVpssQueryInfo_x1de04:
    /*0001de04*/ STR         R3, [SP, #4] 
    VencCheckVpssQueryInfo_x1de08:
    /*0001de08*/ MOV         R1, #8 
    /*0001de0c*/ LDR         R3, [PC, #284]              @ 0x000000000001df30 
    /*0001de10*/ MOV         R0, #3 
    /*0001de14*/ BL          0x000000000001DE14          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001de18*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001de1c*/ MOVT        R0, #40968                  @ 0xa008 
    /*0001de20*/ ADD         SP, SP, #20 
    /*0001de24*/ POP         {R4, R5, PC} 
    VencCheckVpssQueryInfo_x1de28:
    /*0001de28*/ LDR         R1, [R5, #56]               @ 0x38 
    /*0001de2c*/ MOVW        R0, #1039                   @ 0x40f 
    /*0001de30*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x81dc] 
    /*0001de34*/ STR         R3, [SP, #8] 
    /*0001de38*/ STR         R0, [SP] 
    /*0001de3c*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x81dc] 
    /*0001de40*/ STR         R1, [SP, #4] 
    /*0001de44*/ B           VencCheckVpssQueryInfo_x1de08
    VencCheckVpssQueryInfo_x1de48:
    /*0001de48*/ MOVW        R3, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x800c] 
    /*0001de4c*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001de50*/ MOVT        R3, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x800c] 
    /*0001de54*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001de58*/ MOVW        R2, #989                    @ 0x3dd 
    /*0001de5c*/ LDR         R1, [PC, #204]              @ 0x000000000001df30 
    /*0001de60*/ BL          0x000000000001DE60          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001de64*/ B           VencCheckVpssQueryInfo_x1dd70
    VencCheckVpssQueryInfo_x1de68:
    /*0001de68*/ MOVW        R3, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7ff4] 
    /*0001de6c*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001de70*/ MOVT        R3, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7ff4] 
    /*0001de74*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001de78*/ MOV         R2, #988                    @ 0x3dc 
    /*0001de7c*/ LDR         R1, [PC, #172]              @ 0x000000000001df30 
    /*0001de80*/ BL          0x000000000001DE80          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001de84*/ B           VencCheckVpssQueryInfo_x1dd68
    VencCheckVpssQueryInfo_x1de88:
    /*0001de88*/ LDR         R1, [R5, #56]               @ 0x38 
    /*0001de8c*/ MOVW        R0, #1023                   @ 0x3ff 
    /*0001de90*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x810c] 
    /*0001de94*/ STR         R3, [SP, #8] 
    /*0001de98*/ STR         R0, [SP] 
    /*0001de9c*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x810c] 
    /*0001dea0*/ STR         R1, [SP, #4] 
    /*0001dea4*/ B           VencCheckVpssQueryInfo_x1de08
    VencCheckVpssQueryInfo_x1dea8:
    /*0001dea8*/ LDR         R3, [R5, #56]               @ 0x38 
    /*0001deac*/ MOVW        R1, #997                    @ 0x3e5 
    /*0001deb0*/ STR         R2, [SP, #8] 
    /*0001deb4*/ MOVW        R2, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8024] 
    /*0001deb8*/ STR         R1, [SP] 
    /*0001debc*/ MOVT        R2, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8024] 
    /*0001dec0*/ B           VencCheckVpssQueryInfo_x1de04
    VencCheckVpssQueryInfo_x1dec4:
    /*0001dec4*/ LDR         R1, [R5, #56]               @ 0x38 
    /*0001dec8*/ MOVW        R0, #1031                   @ 0x407 
    /*0001decc*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8174] 
    /*0001ded0*/ STR         R3, [SP, #8] 
    /*0001ded4*/ STR         R0, [SP] 
    /*0001ded8*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8174] 
    /*0001dedc*/ STR         R1, [SP, #4] 
    /*0001dee0*/ B           VencCheckVpssQueryInfo_x1de08
    VencCheckVpssQueryInfo_x1dee4:
    /*0001dee4*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x80cc] 
    /*0001dee8*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x80cc] 
    /*0001deec*/ LDR         R1, [R5, #56]               @ 0x38 
    /*0001def0*/ MOVW        R3, #1015                   @ 0x3f7 
    /*0001def4*/ STR         R3, [SP] 
    VencCheckVpssQueryInfo_x1def8:
    /*0001def8*/ STR         R1, [SP, #4] 
    /*0001defc*/ MOV         R0, #3 
    /*0001df00*/ LDR         R3, [PC, #40]               @ 0x000000000001df30 
    /*0001df04*/ MOV         R1, #8 
    /*0001df08*/ BL          0x000000000001DF08          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001df0c*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001df10*/ MOVT        R0, #40968                  @ 0xa008 
    /*0001df14*/ B           VencCheckVpssQueryInfo_x1dde4
    VencCheckVpssQueryInfo_x1df18:
    /*0001df18*/ LDR         R1, [R5, #56]               @ 0x38 
    /*0001df1c*/ MOVW        R3, #1047                   @ 0x417 
    /*0001df20*/ MOVW        R2, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8244] 
    /*0001df24*/ STR         R3, [SP] 
    /*0001df28*/ MOVT        R2, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8244] 
    /*0001df2c*/ B           VencCheckVpssQueryInfo_x1def8
    /*0001df30*/ LDRDEQ      R0, [R0], -R8 
FUNC_END VencCheckVpssQueryInfo


FUNC_BEGIN VENC_VpssQuery
    /*0001df34*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001df38*/ SUB         SP, SP, #164                @ 0xa4 
    /*0001df3c*/ MOV         R0, R1 
    /*0001df40*/ MOV         R5, R1 
    /*0001df44*/ MOV         R6, R2 
    /*0001df48*/ MOV         R7, R3 
    /*0001df4c*/ MOV         R3, #0 
    /*0001df50*/ STR         R3, [SP, #80]               @ 0x50 
    /*0001df54*/ STR         R3, [SP, #76]               @ 0x4c 
    /*0001df58*/ STR         R3, [SP, #84]               @ 0x54 
    /*0001df5c*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001df60*/ BL          0x000000000001DF60          @ MkpVencCheckChn [R_ARM_CALL: .text+0x7ac] 
    /*0001df64*/ SUBS        R4, R0, #0 
    /*0001df68*/ BEQ         VENC_VpssQuery_x1df78
    VENC_VpssQuery_x1df6c:
    /*0001df6c*/ MOV         R0, R4 
    /*0001df70*/ ADD         SP, SP, #164                @ 0xa4 
    /*0001df74*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_VpssQuery_x1df78:
    /*0001df78*/ MOV         R0, R6 
    /*0001df7c*/ BL          0x000000000001DF7C          @ MkpVencCheckNull [R_ARM_CALL: .text+0x798] 
    /*0001df80*/ SUBS        R4, R0, #0 
    /*0001df84*/ BNE         VENC_VpssQuery_x1df6c
    /*0001df88*/ MOV         R0, R7 
    /*0001df8c*/ BL          0x000000000001DF8C          @ MkpVencCheckNull [R_ARM_CALL: .text+0x798] 
    /*0001df90*/ SUBS        R4, R0, #0 
    /*0001df94*/ BNE         VENC_VpssQuery_x1df6c
    /*0001df98*/ MOVW        R3, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0001df9c*/ MOVT        R3, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0001dfa0*/ MOVW        R8, #36240                  @ 0x8d90 
    /*0001dfa4*/ MOV         R2, #1 
    /*0001dfa8*/ LDR         R3, [R3] 
    /*0001dfac*/ MOV         R0, R6 
    /*0001dfb0*/ MLA         R8, R8, R5, R3 
    /*0001dfb4*/ ADD         R9, R8, #8192               @ 0x2000 
    /*0001dfb8*/ LDR         R3, [R9, #3980]             @ 0xf8c 
    /*0001dfbc*/ MOV         R1, R8 
    /*0001dfc0*/ ADD         R3, R3, R2 
    /*0001dfc4*/ STR         R3, [R9, #3980]             @ 0xf8c 
    /*0001dfc8*/ STR         R2, [R8, #52]               @ 0x34 
    /*0001dfcc*/ BL          0x000000000001DFCC          @ VencCheckVpssQueryInfo [R_ARM_CALL: .text+0x1dd54] 
    /*0001dfd0*/ SUBS        R4, R0, #0 
    /*0001dfd4*/ BNE         VENC_VpssQuery_x1e048
    /*0001dfd8*/ ADD         FP, R8, #64                 @ 0x40 
    /*0001dfdc*/ ADD         R1, SP, #72                 @ 0x48 
    /*0001dfe0*/ MOV         R0, FP 
    /*0001dfe4*/ BL          0x000000000001DFE4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001dfe8*/ LDR         SL, [R8, #16] 
    /*0001dfec*/ CMP         SL, #1 
    /*0001dff0*/ BEQ         VENC_VpssQuery_x1e07c
    /*0001dff4*/ LDR         R3, [R9, #3996]             @ 0xf9c 
    /*0001dff8*/ MOV         IP, #1312                   @ 0x520 
    /*0001dffc*/ MOV         R1, #8 
    /*0001e000*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x82b8] 
    /*0001e004*/ ADD         R3, R3, #1 
    /*0001e008*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x82b8] 
    /*0001e00c*/ STR         R3, [R9, #3996]             @ 0xf9c 
    /*0001e010*/ MOV         R0, #4 
    /*0001e014*/ LDR         R3, [PC, #1508]             @ 0x000000000001e600 
    /*0001e018*/ MOVW        R4, #32777                  @ 0x8009 
    /*0001e01c*/ STR         IP, [SP] 
    /*0001e020*/ MOVT        R4, #40968                  @ 0xa008 
    /*0001e024*/ STR         R5, [SP, #4] 
    /*0001e028*/ BL          0x000000000001E028          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e02c*/ ADD         R1, SP, #72                 @ 0x48 
    /*0001e030*/ MOV         R0, FP 
    /*0001e034*/ BL          0x000000000001E034          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VENC_VpssQuery_x1e038:
    /*0001e038*/ LDR         R3, [R9, #3988]             @ 0xf94 
    /*0001e03c*/ ADD         R3, R3, #1 
    /*0001e040*/ STR         R3, [R9, #3988]             @ 0xf94 
    /*0001e044*/ B           VENC_VpssQuery_x1df6c
    VENC_VpssQuery_x1e048:
    /*0001e048*/ LDR         R1, [R9, #3992]             @ 0xf98 
    /*0001e04c*/ MOVW        IP, #1301                   @ 0x515 
    /*0001e050*/ MOVW        R2, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x827c] 
    /*0001e054*/ LDR         R3, [PC, #1444]             @ 0x000000000001e600 
    /*0001e058*/ ADD         R1, R1, #1 
    /*0001e05c*/ MOVT        R2, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x827c] 
    /*0001e060*/ STR         R1, [R9, #3992]             @ 0xf98 
    /*0001e064*/ MOV         R0, #3 
    /*0001e068*/ MOV         R1, #8 
    /*0001e06c*/ STR         R5, [SP, #4] 
    /*0001e070*/ STR         IP, [SP] 
    /*0001e074*/ BL          0x000000000001E074          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e078*/ B           VENC_VpssQuery_x1e038
    VENC_VpssQuery_x1e07c:
    /*0001e07c*/ LDR         R3, [R6] 
    /*0001e080*/ CMP         R3, #0 
    /*0001e084*/ BEQ         VENC_VpssQuery_x1e1a8
    /*0001e088*/ ADD         R2, R8, #12288              @ 0x3000 
    /*0001e08c*/ LDR         R1, [R3] 
    /*0001e090*/ STR         R2, [SP, #24] 
    /*0001e094*/ LDR         R2, [R2, #148]              @ 0x94 
    /*0001e098*/ LDR         R0, [R3, #4] 
    /*0001e09c*/ CMP         R1, R2 
    /*0001e0a0*/ BLT         VENC_VpssQuery_x1e128
    /*0001e0a4*/ LDR         IP, [SP, #24] 
    /*0001e0a8*/ LDR         IP, [IP, #152]              @ 0x98 
    /*0001e0ac*/ CMP         R0, IP 
    /*0001e0b0*/ BGE         VENC_VpssQuery_x1e134
    VENC_VpssQuery_x1e0b4:
    /*0001e0b4*/ MOVW        R3, #1340                   @ 0x53c 
    /*0001e0b8*/ STR         R2, [SP, #16] 
    /*0001e0bc*/ STR         R0, [SP, #12] 
    /*0001e0c0*/ MOVW        R2, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x82fc] 
    /*0001e0c4*/ STR         R1, [SP, #8] 
    /*0001e0c8*/ MOVT        R2, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x82fc] 
    /*0001e0cc*/ STR         R3, [SP] 
    /*0001e0d0*/ MOV         R1, #8 
    /*0001e0d4*/ LDR         R3, [PC, #1316]             @ 0x000000000001e600 
    /*0001e0d8*/ MOV         R0, #4 
    /*0001e0dc*/ STR         IP, [SP, #20] 
    /*0001e0e0*/ STR         R5, [SP, #4] 
    /*0001e0e4*/ BL          0x000000000001E0E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e0e8*/ MOV         R3, #0 
    /*0001e0ec*/ MOV         R2, #1 
    /*0001e0f0*/ STM         R7, {R2, R3} 
    /*0001e0f4*/ LDR         R3, [R9, #4020]             @ 0xfb4 
    /*0001e0f8*/ ADD         R3, R3, #1 
    /*0001e0fc*/ STR         R3, [R9, #4020]             @ 0xfb4 
    VENC_VpssQuery_x1e100:
    /*0001e100*/ MOV         R3, #0 
    /*0001e104*/ STR         R3, [R7, #8] 
    /*0001e108*/ STR         R3, [R7, #12] 
    /*0001e10c*/ ADD         R1, SP, #72                 @ 0x48 
    /*0001e110*/ LDR         R3, [R9, #3984]             @ 0xf90 
    /*0001e114*/ MOV         R0, FP 
    /*0001e118*/ ADD         R3, R3, #1 
    /*0001e11c*/ STR         R3, [R9, #3984]             @ 0xf90 
    /*0001e120*/ BL          0x000000000001E120          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001e124*/ B           VENC_VpssQuery_x1df6c
    VENC_VpssQuery_x1e128:
    /*0001e128*/ LDR         R3, [SP, #24] 
    /*0001e12c*/ LDR         IP, [R3, #152]              @ 0x98 
    /*0001e130*/ B           VENC_VpssQuery_x1e0b4
    VENC_VpssQuery_x1e134:
    /*0001e134*/ LDR         R1, [R3, #232]              @ 0xe8 
    /*0001e138*/ MOV         R0, R8 
    /*0001e13c*/ BL          0x000000000001E13C          @ VencFrmRateCtl [R_ARM_CALL: .text+0xcc0] 
    /*0001e140*/ CMP         R0, #0 
    /*0001e144*/ BEQ         VENC_VpssQuery_x1e1dc
    /*0001e148*/ LDR         R3, [R8, #3704]             @ 0xe78 
    /*0001e14c*/ CMP         R3, #0 
    /*0001e150*/ BNE         VENC_VpssQuery_x1e1c0
    /*0001e154*/ LDR         R3, [R9, #4008]             @ 0xfa8 
    /*0001e158*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x83a8] 
    /*0001e15c*/ MOV         R1, #8 
    /*0001e160*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x83a8] 
    /*0001e164*/ ADD         R3, R3, #1 
    /*0001e168*/ STR         R3, [R9, #4008]             @ 0xfa8 
    /*0001e16c*/ LDR         R3, [R6] 
    /*0001e170*/ MOV         R0, #4 
    /*0001e174*/ LDR         R3, [R3, #340]              @ 0x154 
    /*0001e178*/ CMP         R3, #0 
    /*0001e17c*/ STREQ       R3, [R7, #4] 
    /*0001e180*/ MOVNE       R3, #0 
    /*0001e184*/ MOVEQ       R3, #1 
    /*0001e188*/ STRNE       R3, [R7, #4] 
    /*0001e18c*/ STR         R3, [R7] 
    /*0001e190*/ MOVW        R3, #1368                   @ 0x558 
    /*0001e194*/ STR         R5, [SP, #4] 
    /*0001e198*/ STR         R3, [SP] 
    /*0001e19c*/ LDR         R3, [PC, #1116]             @ 0x000000000001e600 
    /*0001e1a0*/ BL          0x000000000001E1A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e1a4*/ B           VENC_VpssQuery_x1e100
    VENC_VpssQuery_x1e1a8:
    /*0001e1a8*/ STR         R4, [R7, #4] 
    /*0001e1ac*/ STR         R4, [R7] 
    /*0001e1b0*/ LDR         R3, [R9, #4000]             @ 0xfa0 
    /*0001e1b4*/ ADD         R3, R3, #1 
    /*0001e1b8*/ STR         R3, [R9, #4000]             @ 0xfa0 
    /*0001e1bc*/ B           VENC_VpssQuery_x1e100
    VENC_VpssQuery_x1e1c0:
    /*0001e1c0*/ LDR         R3, [R6, #16] 
    /*0001e1c4*/ CMP         R3, #1 
    /*0001e1c8*/ BEQ         VENC_VpssQuery_x1e218
    VENC_VpssQuery_x1e1cc:
    /*0001e1cc*/ MOV         R3, #1 
    /*0001e1d0*/ STR         R3, [R7, #4] 
    /*0001e1d4*/ STR         R3, [R7] 
    /*0001e1d8*/ B           VENC_VpssQuery_x1e100
    VENC_VpssQuery_x1e1dc:
    /*0001e1dc*/ STR         R4, [R7, #4] 
    /*0001e1e0*/ MOVW        IP, #1354                   @ 0x54a 
    /*0001e1e4*/ STR         SL, [R7] 
    /*0001e1e8*/ MOVW        R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8358] 
    /*0001e1ec*/ LDR         R0, [R9, #4004]             @ 0xfa4 
    /*0001e1f0*/ MOVT        R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8358] 
    /*0001e1f4*/ LDR         R3, [PC, #1028]             @ 0x000000000001e600 
    /*0001e1f8*/ MOV         R1, #8 
    /*0001e1fc*/ ADD         R0, R0, #1 
    /*0001e200*/ STR         R0, [R9, #4004]             @ 0xfa4 
    /*0001e204*/ STR         R5, [SP, #4] 
    /*0001e208*/ MOV         R0, #6 
    /*0001e20c*/ STR         IP, [SP] 
    /*0001e210*/ BL          0x000000000001E210          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e214*/ B           VENC_VpssQuery_x1e100
    VENC_VpssQuery_x1e218:
    /*0001e218*/ MOV         R2, #328                    @ 0x148 
    /*0001e21c*/ LDR         R1, [R6] 
    /*0001e220*/ ADD         R0, R7, #24 
    /*0001e224*/ BL          0x000000000001E224          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001e228*/ MOV         R2, R7 
    /*0001e22c*/ MOV         R1, R6 
    /*0001e230*/ MOV         R0, R5 
    /*0001e234*/ BL          0x000000000001E234          @ VENC_DRV_VpssQuery [R_ARM_CALL: .text+0x2685c] 
    /*0001e238*/ LDR         R3, [R6, #8] 
    /*0001e23c*/ CMP         R3, #1 
    /*0001e240*/ BEQ         VENC_VpssQuery_x1e364
    VENC_VpssQuery_x1e244:
    /*0001e244*/ LDR         R3, [R6] 
    /*0001e248*/ LDR         SL, [R3] 
    /*0001e24c*/ LDR         R3, [R3, #4] 
    /*0001e250*/ STR         R3, [SP, #24] 
    VENC_VpssQuery_x1e254:
    /*0001e254*/ LDR         R3, [SP, #24] 
    /*0001e258*/ MOV         R0, #2 
    /*0001e25c*/ STR         SL, [R7, #24] 
    /*0001e260*/ STR         R3, [R7, #28] 
    /*0001e264*/ BL          0x000000000001E264          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001e268*/ ADD         R1, SP, #64                 @ 0x40 
    /*0001e26c*/ LDR         R3, [R0, #16] 
    /*0001e270*/ MOV         R0, SL 
    /*0001e274*/ BLX         R3 
    /*0001e278*/ CMP         R0, #0 
    /*0001e27c*/ BNE         VENC_VpssQuery_x1e404
    VENC_VpssQuery_x1e280:
    /*0001e280*/ LDR         R3, [R8, #4] 
    /*0001e284*/ MOVW        R2, #265                    @ 0x109 
    /*0001e288*/ LDR         IP, [SP, #24] 
    /*0001e28c*/ MOV         R0, #2 
    /*0001e290*/ CMP         R3, R2 
    /*0001e294*/ CMPNE       R3, #96                     @ 0x60 
    /*0001e298*/ LDR         R1, [R7, #44]               @ 0x2c 
    /*0001e29c*/ LDR         R2, [R7, #48]               @ 0x30 
    /*0001e2a0*/ LDRNE       R3, [R6] 
    /*0001e2a4*/ MOVEQ       R8, #26 
    /*0001e2a8*/ STR         IP, [SP, #96]               @ 0x60 
    /*0001e2ac*/ STR         SL, [SP, #92]               @ 0x5c 
    /*0001e2b0*/ MOV         SL, #0 
    /*0001e2b4*/ LDRNE       R8, [R3, #12] 
    /*0001e2b8*/ LDR         R3, [R7, #40]               @ 0x28 
    /*0001e2bc*/ STR         R2, [SP, #108]              @ 0x6c 
    /*0001e2c0*/ STR         R1, [SP, #112]              @ 0x70 
    /*0001e2c4*/ STR         R3, [SP, #116]              @ 0x74 
    /*0001e2c8*/ STR         R8, [SP, #88]               @ 0x58 
    /*0001e2cc*/ STR         SL, [SP, #104]              @ 0x68 
    /*0001e2d0*/ STR         SL, [SP, #120]              @ 0x78 
    /*0001e2d4*/ BL          0x000000000001E2D4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001e2d8*/ ADD         R1, SP, #124                @ 0x7c 
    /*0001e2dc*/ LDR         R3, [R0, #120]              @ 0x78 
    /*0001e2e0*/ ADD         R0, SP, #88                 @ 0x58 
    /*0001e2e4*/ BLX         R3 
    /*0001e2e8*/ MOV         R0, #2 
    /*0001e2ec*/ MOV         R3, #8 
    /*0001e2f0*/ STR         SL, [SP, #80]               @ 0x50 
    /*0001e2f4*/ STR         R3, [SP, #76]               @ 0x4c 
    /*0001e2f8*/ STR         R5, [SP, #84]               @ 0x54 
    /*0001e2fc*/ BL          0x000000000001E2FC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001e300*/ ADD         R1, SP, #68                 @ 0x44 
    /*0001e304*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0001e308*/ ADD         R0, SP, #76                 @ 0x4c 
    /*0001e30c*/ BLX         R3 
    /*0001e310*/ SUBS        R3, R0, #0 
    /*0001e314*/ STR         R3, [SP, #24] 
    /*0001e318*/ BEQ         VENC_VpssQuery_x1e384
    /*0001e31c*/ LDR         R3, [R6] 
    /*0001e320*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x83e4] 
    /*0001e324*/ MOV         R1, #8 
    /*0001e328*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x83e4] 
    /*0001e32c*/ MOV         R0, #3 
    /*0001e330*/ LDR         R3, [R3, #340]              @ 0x154 
    /*0001e334*/ CMP         R3, SL 
    /*0001e338*/ STRNE       SL, [R7, #4] 
    /*0001e33c*/ STREQ       R3, [R7, #4] 
    /*0001e340*/ STRNE       SL, [R7] 
    /*0001e344*/ MOVEQ       R3, #1 
    /*0001e348*/ STREQ       R3, [R7] 
    /*0001e34c*/ MOVW        R3, #1443                   @ 0x5a3 
    /*0001e350*/ STR         R5, [SP, #4] 
    /*0001e354*/ STR         R3, [SP] 
    /*0001e358*/ LDR         R3, [PC, #672]              @ 0x000000000001e600 
    /*0001e35c*/ BL          0x000000000001E35C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e360*/ B           VENC_VpssQuery_x1e100
    VENC_VpssQuery_x1e364:
    /*0001e364*/ LDR         R2, [SP, #24] 
    /*0001e368*/ LDR         R3, [R2, #508]              @ 0x1fc 
    /*0001e36c*/ CMP         R3, #0 
    /*0001e370*/ BNE         VENC_VpssQuery_x1e244
    /*0001e374*/ LDR         R3, [R2, #152]              @ 0x98 
    /*0001e378*/ LDR         SL, [R2, #148]              @ 0x94 
    /*0001e37c*/ STR         R3, [SP, #24] 
    /*0001e380*/ B           VENC_VpssQuery_x1e254
    VENC_VpssQuery_x1e384:
    /*0001e384*/ MOV         R0, #1 
    /*0001e388*/ BL          0x000000000001E388          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001e38c*/ LDR         R3, [SP, #68]               @ 0x44 
    /*0001e390*/ MOV         R2, #10 
    /*0001e394*/ LDR         R1, [SP, #24] 
    /*0001e398*/ LDR         SL, [R0, #12] 
    /*0001e39c*/ LDR         R0, [SP, #124]              @ 0x7c 
    /*0001e3a0*/ BLX         SL 
    /*0001e3a4*/ LDR         R3, [R6] 
    /*0001e3a8*/ CMN         R0, #1 
    /*0001e3ac*/ MOV         SL, R0 
    /*0001e3b0*/ BNE         VENC_VpssQuery_x1e424
    /*0001e3b4*/ LDR         R3, [R3, #340]              @ 0x154 
    /*0001e3b8*/ MOVW        IP, #1455                   @ 0x5af 
    /*0001e3bc*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x841c] 
    /*0001e3c0*/ MOV         R1, #8 
    /*0001e3c4*/ CMP         R3, #0 
    /*0001e3c8*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x841c] 
    /*0001e3cc*/ STREQ       R3, [R7, #4] 
    /*0001e3d0*/ MOV         R0, #1 
    /*0001e3d4*/ LDRNE       R3, [SP, #24] 
    /*0001e3d8*/ MOVEQ       R3, #1 
    /*0001e3dc*/ STRNE       R3, [R7, #4] 
    /*0001e3e0*/ STR         R3, [R7] 
    /*0001e3e4*/ LDR         R3, [R9, #4072]             @ 0xfe8 
    /*0001e3e8*/ ADD         R3, R3, #1 
    /*0001e3ec*/ STR         R3, [R9, #4072]             @ 0xfe8 
    /*0001e3f0*/ LDR         R3, [PC, #520]              @ 0x000000000001e600 
    /*0001e3f4*/ STR         R5, [SP, #4] 
    /*0001e3f8*/ STR         IP, [SP] 
    /*0001e3fc*/ BL          0x000000000001E3FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e400*/ B           VENC_VpssQuery_x1e100
    VENC_VpssQuery_x1e404:
    /*0001e404*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f6c] 
    /*0001e408*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001e40c*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f6c] 
    /*0001e410*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001e414*/ MOVW        R2, #1411                   @ 0x583 
    /*0001e418*/ LDR         R1, [PC, #480]              @ 0x000000000001e600 
    /*0001e41c*/ BL          0x000000000001E41C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001e420*/ B           VENC_VpssQuery_x1e280
    VENC_VpssQuery_x1e424:
    /*0001e424*/ LDR         R3, [R3, #336]              @ 0x150 
    /*0001e428*/ MOV         R0, #1 
    /*0001e42c*/ STR         R3, [R7, #360]              @ 0x168 
    /*0001e430*/ BL          0x000000000001E430          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001e434*/ LDR         R3, [R0, #40]               @ 0x28 
    /*0001e438*/ MOV         R0, SL 
    /*0001e43c*/ BLX         R3 
    /*0001e440*/ LDR         R3, [R7, #44]               @ 0x2c 
    /*0001e444*/ STR         R8, [R7, #36]               @ 0x24 
    /*0001e448*/ STR         R3, [R7, #16] 
    /*0001e44c*/ STR         R0, [R7, #352]              @ 0x160 
    /*0001e450*/ MOV         R0, #1 
    /*0001e454*/ BL          0x000000000001E454          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001e458*/ LDR         R3, [R0, #52]               @ 0x34 
    /*0001e45c*/ MOV         R0, SL 
    /*0001e460*/ BLX         R3 
    /*0001e464*/ MOV         R3, R1 
    /*0001e468*/ LDR         R1, [SP, #136]              @ 0x88 
    /*0001e46c*/ MOV         R2, R0 
    /*0001e470*/ STRD        R2, [R7, #96]               @ 0x60 
    /*0001e474*/ ADDS        R2, R2, R1 
    /*0001e478*/ MOV         R0, #1 
    /*0001e47c*/ ADC         R3, R3, #0 
    /*0001e480*/ STRD        R2, [R7, #104]              @ 0x68 
    /*0001e484*/ BL          0x000000000001E484          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001e488*/ LDR         R3, [R0, #48]               @ 0x30 
    /*0001e48c*/ MOV         R0, SL 
    /*0001e490*/ BLX         R3 
    /*0001e494*/ LDR         R2, [SP, #132]              @ 0x84 
    /*0001e498*/ MOV         R3, #0 
    /*0001e49c*/ LDR         R5, [SP, #136]              @ 0x88 
    /*0001e4a0*/ LDR         R6, [SP, #156]              @ 0x9c 
    /*0001e4a4*/ LDR         IP, [SP, #144]              @ 0x90 
    /*0001e4a8*/ LDR         LR, [SP, #140]              @ 0x8c 
    /*0001e4ac*/ LDR         R8, [SP, #148]              @ 0x94 
    /*0001e4b0*/ STRD        R0, [SP, #40]               @ 0x28 
    /*0001e4b4*/ LDRD        R0, [R7, #96]               @ 0x60 
    /*0001e4b8*/ ADDS        R0, R0, R2 
    /*0001e4bc*/ ADC         R1, R1, R3 
    /*0001e4c0*/ STRD        R0, [SP, #24] 
    /*0001e4c4*/ LDRD        R0, [SP, #40]               @ 0x28 
    /*0001e4c8*/ ADDS        R0, R0, R2 
    /*0001e4cc*/ MOV         R2, IP 
    /*0001e4d0*/ ADC         R1, R1, R3 
    /*0001e4d4*/ STRD        R0, [SP, #32] 
    /*0001e4d8*/ LDRD        R0, [SP, #40]               @ 0x28 
    /*0001e4dc*/ MOV         R3, #0 
    /*0001e4e0*/ STRD        R2, [SP, #56]               @ 0x38 
    /*0001e4e4*/ LDR         IP, [SP, #128]              @ 0x80 
    /*0001e4e8*/ STRD        R0, [R7, #120]              @ 0x78 
    /*0001e4ec*/ ADDS        R0, R0, R5 
    /*0001e4f0*/ ADC         R1, R1, #0 
    /*0001e4f4*/ STRD        R0, [SP, #40]               @ 0x28 
    /*0001e4f8*/ MOV         R0, R6 
    /*0001e4fc*/ MOV         R1, #0 
    /*0001e500*/ STRD        R0, [SP, #48]               @ 0x30 
    /*0001e504*/ LDRD        R0, [SP, #24] 
    /*0001e508*/ STRD        R0, [R7, #144]              @ 0x90 
    /*0001e50c*/ LDRD        R0, [SP, #32] 
    /*0001e510*/ STRD        R0, [R7, #168]              @ 0xa8 
    /*0001e514*/ LDRD        R0, [SP, #40]               @ 0x28 
    /*0001e518*/ STRD        R0, [R7, #128]              @ 0x80 
    /*0001e51c*/ MOV         R0, R2 
    /*0001e520*/ MOV         R1, R3 
    /*0001e524*/ LDRD        R2, [SP, #24] 
    /*0001e528*/ ADDS        R0, R0, R2 
    /*0001e52c*/ ADC         R1, R1, R3 
    /*0001e530*/ LDRD        R2, [SP, #56]               @ 0x38 
    /*0001e534*/ STRD        R0, [SP, #40]               @ 0x28 
    /*0001e538*/ LDRD        R0, [SP, #32] 
    /*0001e53c*/ ADDS        R0, R0, R2 
    /*0001e540*/ ADC         R1, R1, R3 
    /*0001e544*/ MOV         R2, R0 
    /*0001e548*/ MOV         R3, R1 
    /*0001e54c*/ LDRD        R0, [SP, #40]               @ 0x28 
    /*0001e550*/ STRD        R2, [SP, #56]               @ 0x38 
    /*0001e554*/ STRD        R2, [R7, #216]              @ 0xd8 
    /*0001e558*/ LDRD        R2, [SP, #48]               @ 0x30 
    /*0001e55c*/ STRD        R0, [R7, #192]              @ 0xc0 
    /*0001e560*/ ADDS        R0, R0, R2 
    /*0001e564*/ ADC         R1, R1, R3 
    /*0001e568*/ MOV         R2, R0 
    /*0001e56c*/ MOV         R3, R1 
    /*0001e570*/ STRD        R2, [SP, #40]               @ 0x28 
    /*0001e574*/ LDRD        R2, [SP, #56]               @ 0x38 
    /*0001e578*/ LDRD        R0, [SP, #48]               @ 0x30 
    /*0001e57c*/ LDR         R5, [SP, #152]              @ 0x98 
    /*0001e580*/ ADDS        R0, R0, R2 
    /*0001e584*/ STR         IP, [R7, #56]               @ 0x38 
    /*0001e588*/ ADC         R1, R1, R3 
    /*0001e58c*/ LDRD        R2, [SP, #40]               @ 0x28 
    /*0001e590*/ STRD        R0, [R7, #232]              @ 0xe8 
    /*0001e594*/ STRD        R0, [R7, #224]              @ 0xe0 
    /*0001e598*/ LDRD        R0, [SP, #24] 
    /*0001e59c*/ STRD        R2, [R7, #200]              @ 0xc8 
    /*0001e5a0*/ ADDS        R0, R0, R8 
    /*0001e5a4*/ STRD        R2, [R7, #208]              @ 0xd0 
    /*0001e5a8*/ MOV         R3, #0 
    /*0001e5ac*/ ADC         R1, R1, R3 
    /*0001e5b0*/ STRD        R0, [SP, #24] 
    /*0001e5b4*/ LDRD        R0, [SP, #32] 
    /*0001e5b8*/ STR         IP, [R7, #60]               @ 0x3c 
    /*0001e5bc*/ ADDS        R0, R0, R8 
    /*0001e5c0*/ STR         IP, [R7, #64]               @ 0x40 
    /*0001e5c4*/ ADC         R1, R1, R3 
    /*0001e5c8*/ STR         LR, [R7, #68]               @ 0x44 
    /*0001e5cc*/ MOV         R2, R0 
    /*0001e5d0*/ STR         LR, [R7, #72]               @ 0x48 
    /*0001e5d4*/ MOV         R3, R1 
    /*0001e5d8*/ LDRD        R0, [SP, #24] 
    /*0001e5dc*/ STRD        R2, [R7, #176]              @ 0xb0 
    /*0001e5e0*/ STRD        R2, [R7, #184]              @ 0xb8 
    /*0001e5e4*/ STRD        R0, [R7, #152]              @ 0x98 
    /*0001e5e8*/ STRD        R0, [R7, #160]              @ 0xa0 
    /*0001e5ec*/ STR         LR, [R7, #76]               @ 0x4c 
    /*0001e5f0*/ STR         R5, [R7, #80]               @ 0x50 
    /*0001e5f4*/ STR         R5, [R7, #84]               @ 0x54 
    /*0001e5f8*/ STR         R5, [R7, #88]               @ 0x58 
    /*0001e5fc*/ B           VENC_VpssQuery_x1e1cc
    /*0001e600*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VENC_VpssQuery


FUNC_BEGIN VencCheckFreeNode
    /*0001e604*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001e608*/ SUB         SP, SP, #28 
    /*0001e60c*/ LDR         R3, [R0, #4] 
    /*0001e610*/ LDR         R5, [R0, #3704]             @ 0xe78 
    /*0001e614*/ CMP         R3, #26 
    /*0001e618*/ BEQ         VencCheckFreeNode_x1e66c
    /*0001e61c*/ CMP         R5, #0 
    /*0001e620*/ MOVEQ       R3, #1 
    /*0001e624*/ MOVEQ       R6, R3 
    /*0001e628*/ MOVEQ       R7, R3 
    /*0001e62c*/ BNE         VencCheckFreeNode_x1e6b8
    VencCheckFreeNode_x1e630:
    /*0001e630*/ STR         R3, [SP, #16] 
    /*0001e634*/ MOV         R1, #8 
    /*0001e638*/ MOVW        R3, #1085                   @ 0x43d 
    /*0001e63c*/ STR         R6, [SP, #12] 
    /*0001e640*/ STR         R3, [SP] 
    /*0001e644*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x845c] 
    /*0001e648*/ STR         R7, [SP, #8] 
    /*0001e64c*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x845c] 
    /*0001e650*/ STR         R5, [SP, #4] 
    /*0001e654*/ MOV         R0, #4 
    /*0001e658*/ LDR         R3, [PC, #100]              @ 0x000000000001e6c4 
    /*0001e65c*/ BL          0x000000000001E65C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001e660*/ MOV         R0, #0 
    /*0001e664*/ ADD         SP, SP, #28 
    /*0001e668*/ POP         {R4, R5, R6, R7, PC} 
    VencCheckFreeNode_x1e66c:
    /*0001e66c*/ ADD         R3, R0, #8192               @ 0x2000 
    /*0001e670*/ MOV         R4, R0 
    /*0001e674*/ MOV         R0, #1 
    /*0001e678*/ LDR         R7, [R3, #1016]             @ 0x3f8 
    /*0001e67c*/ LDR         R6, [R3, #3744]             @ 0xea0 
    /*0001e680*/ BL          0x000000000001E680          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001e684*/ LDR         R3, [R0, #104]              @ 0x68 
    /*0001e688*/ MOV         R0, #1 
    /*0001e68c*/ BLX         R3 
    /*0001e690*/ CMP         R0, #0 
    /*0001e694*/ ADDNE       R4, R4, #4096               @ 0x1000 
    /*0001e698*/ MOVEQ       R3, #1 
    /*0001e69c*/ LDRNE       R3, [R4, #2336]             @ 0x920 
    /*0001e6a0*/ CMP         R7, #0 
    /*0001e6a4*/ CMPNE       R5, #0 
    /*0001e6a8*/ BEQ         VencCheckFreeNode_x1e630
    /*0001e6ac*/ CMP         R3, #0 
    /*0001e6b0*/ CMPNE       R6, #0 
    /*0001e6b4*/ BEQ         VencCheckFreeNode_x1e630
    VencCheckFreeNode_x1e6b8:
    /*0001e6b8*/ MOV         R0, #1 
    /*0001e6bc*/ ADD         SP, SP, #28 
    /*0001e6c0*/ POP         {R4, R5, R6, R7, PC} 
    /*0001e6c4*/ ANDEQ       R0, R0, R0, LSL #30 
FUNC_END VencCheckFreeNode


FUNC_BEGIN VencCheckVideoCfg
    /*0001e6c8*/ ADD         R3, R0, #12288              @ 0x3000 
    /*0001e6cc*/ LDR         R3, [R3, #508]              @ 0x1fc 
    /*0001e6d0*/ CMP         R3, #1 
    /*0001e6d4*/ BEQ         VencCheckVideoCfg_x1e6e0
    /*0001e6d8*/ MOV         R0, #0 
    /*0001e6dc*/ BX          LR 
    VencCheckVideoCfg_x1e6e0:
    /*0001e6e0*/ B           0x000000000001C298 
FUNC_END VencCheckVideoCfg


FUNC_BEGIN VencValueVpssInfoByMode
    /*0001e6e4*/ CMP         R1, #0 
    /*0001e6e8*/ STREQ       R1, [R0, #4] 
    /*0001e6ec*/ MOVNE       R3, #0 
    /*0001e6f0*/ MOVEQ       R3, #1 
    /*0001e6f4*/ STRNE       R3, [R0, #4] 
    /*0001e6f8*/ STR         R3, [R0] 
    /*0001e6fc*/ BX          LR 
FUNC_END VencValueVpssInfoByMode


FUNC_BEGIN VencSearchPicQueueIndexByReso
    /*0001e700*/ LDR         R3, [R0, #4] 
    /*0001e704*/ CMP         R3, #26 
    /*0001e708*/ BEQ         VencSearchPicQueueIndexByReso_x1e714
    VencSearchPicQueueIndexByReso_x1e70c:
    /*0001e70c*/ MOV         R0, #4 
    /*0001e710*/ BX          LR 
    VencSearchPicQueueIndexByReso_x1e714:
    /*0001e714*/ ADD         R0, R0, #12288              @ 0x3000 
    /*0001e718*/ LDR         R3, [R0, #672]              @ 0x2a0 
    /*0001e71c*/ CMP         R3, #1 
    /*0001e720*/ BNE         VencSearchPicQueueIndexByReso_x1e70c
    /*0001e724*/ LDR         R3, [R1] 
    /*0001e728*/ LDR         R2, [R0, #148]              @ 0x94 
    /*0001e72c*/ LDR         R1, [R1, #4] 
    /*0001e730*/ CMP         R3, R2 
    /*0001e734*/ BEQ         VencSearchPicQueueIndexByReso_x1e784
    VencSearchPicQueueIndexByReso_x1e738:
    /*0001e738*/ LDRB        R2, [R0, #652]              @ 0x28c 
    /*0001e73c*/ CMP         R2, #0 
    /*0001e740*/ BEQ         VencSearchPicQueueIndexByReso_x1e764
    /*0001e744*/ LDR         IP, [R0, #656]              @ 0x290 
    /*0001e748*/ CMP         R3, IP 
    /*0001e74c*/ BEQ         VencSearchPicQueueIndexByReso_x1e7ac
    VencSearchPicQueueIndexByReso_x1e750:
    /*0001e750*/ CMP         R2, #1 
    /*0001e754*/ BLS         VencSearchPicQueueIndexByReso_x1e764
    /*0001e758*/ LDR         R2, [R0, #664]              @ 0x298 
    /*0001e75c*/ CMP         R3, R2 
    /*0001e760*/ BEQ         VencSearchPicQueueIndexByReso_x1e798
    VencSearchPicQueueIndexByReso_x1e764:
    /*0001e764*/ LDR         R2, [R0, #648]              @ 0x288 
    /*0001e768*/ CMP         R2, #1 
    /*0001e76c*/ BNE         VencSearchPicQueueIndexByReso_x1e70c
    /*0001e770*/ CMP         R3, #160                    @ 0xa0 
    /*0001e774*/ CMPEQ       R1, #120                    @ 0x78 
    /*0001e778*/ MOVNE       R0, #4 
    /*0001e77c*/ MOVEQ       R0, #3 
    /*0001e780*/ BX          LR 
    VencSearchPicQueueIndexByReso_x1e784:
    /*0001e784*/ LDR         R2, [R0, #152]              @ 0x98 
    /*0001e788*/ CMP         R1, R2 
    /*0001e78c*/ BNE         VencSearchPicQueueIndexByReso_x1e738
    /*0001e790*/ MOV         R0, #0 
    /*0001e794*/ BX          LR 
    VencSearchPicQueueIndexByReso_x1e798:
    /*0001e798*/ LDR         R2, [R0, #668]              @ 0x29c 
    /*0001e79c*/ CMP         R1, R2 
    /*0001e7a0*/ BNE         VencSearchPicQueueIndexByReso_x1e764
    /*0001e7a4*/ MOV         R0, #2 
    /*0001e7a8*/ BX          LR 
    VencSearchPicQueueIndexByReso_x1e7ac:
    /*0001e7ac*/ LDR         IP, [R0, #660]              @ 0x294 
    /*0001e7b0*/ CMP         R1, IP 
    /*0001e7b4*/ BNE         VencSearchPicQueueIndexByReso_x1e750
    /*0001e7b8*/ MOV         R0, #1 
    /*0001e7bc*/ BX          LR 
FUNC_END VencSearchPicQueueIndexByReso


FUNC_BEGIN VENC_GetFreeQueue.part.8
    /*0001e7c0*/ PUSH        {R4, R5, R6, LR} 
    /*0001e7c4*/ MOV         R4, R0 
    /*0001e7c8*/ BL          0x000000000001E7C8          @ VencSearchPicQueueIndexByReso [R_ARM_CALL: .text+0x1e700] 
    /*0001e7cc*/ CMP         R0, #3 
    /*0001e7d0*/ MOV         R5, R0 
    /*0001e7d4*/ BHI         VENC_GetFreeQueue.part.8_x1e828
    /*0001e7d8*/ CMP         R0, #0 
    /*0001e7dc*/ BNE         VENC_GetFreeQueue.part.8_x1e7ec
    /*0001e7e0*/ ADD         R0, R4, #3680               @ 0xe60 
    /*0001e7e4*/ ADD         R0, R0, #8 
    /*0001e7e8*/ POP         {R4, R5, R6, PC} 
    VENC_GetFreeQueue.part.8_x1e7ec:
    /*0001e7ec*/ CMP         R0, #1 
    /*0001e7f0*/ BEQ         VENC_GetFreeQueue.part.8_x1e848
    VENC_GetFreeQueue.part.8_x1e7f4:
    /*0001e7f4*/ CMP         R5, #2 
    /*0001e7f8*/ BEQ         VENC_GetFreeQueue.part.8_x1e860
    /*0001e7fc*/ CMP         R5, #3 
    /*0001e800*/ BEQ         VENC_GetFreeQueue.part.8_x1e854
    /*0001e804*/ MOV         R2, #1216                   @ 0x4c0 
    /*0001e808*/ LDR         R1, [PC, #92]               @ 0x000000000001e86c 
    /*0001e80c*/ MOVW        R3, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x84c8] 
    /*0001e810*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001e814*/ MOVT        R3, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x84c8] 
    /*0001e818*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001e81c*/ BL          0x000000000001E81C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001e820*/ MOV         R0, #0 
    /*0001e824*/ POP         {R4, R5, R6, PC} 
    VENC_GetFreeQueue.part.8_x1e828:
    /*0001e828*/ MOVW        R3, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x84ac] 
    /*0001e82c*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001e830*/ MOVT        R3, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x84ac] 
    /*0001e834*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001e838*/ MOVW        R2, #1589                   @ 0x635 
    /*0001e83c*/ LDR         R1, [PC, #44]               @ 0x000000000001e870 
    /*0001e840*/ BL          0x000000000001E840          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001e844*/ B           VENC_GetFreeQueue.part.8_x1e7f4
    VENC_GetFreeQueue.part.8_x1e848:
    /*0001e848*/ ADD         R0, R4, #9152               @ 0x23c0 
    /*0001e84c*/ ADD         R0, R0, #40                 @ 0x28 
    /*0001e850*/ POP         {R4, R5, R6, PC} 
    VENC_GetFreeQueue.part.8_x1e854:
    /*0001e854*/ ADD         R0, R4, #6400               @ 0x1900 
    /*0001e858*/ ADD         R0, R0, #16 
    /*0001e85c*/ POP         {R4, R5, R6, PC} 
    VENC_GetFreeQueue.part.8_x1e860:
    /*0001e860*/ ADD         R0, R4, #11904              @ 0x2e80 
    /*0001e864*/ ADD         R0, R0, #16 
    /*0001e868*/ POP         {R4, R5, R6, PC} 
    /*0001e86c*/ ANDEQ       R0, R0, R8, LSR #30 
    /*0001e870*/ ANDEQ       R0, R0, R4, LSL PC 
FUNC_END VENC_GetFreeQueue.part.8


FUNC_BEGIN VENC_GetBusyQueue.part.9
    /*0001e874*/ PUSH        {R4, R5, R6, LR} 
    /*0001e878*/ MOV         R4, R0 
    /*0001e87c*/ BL          0x000000000001E87C          @ VencSearchPicQueueIndexByReso [R_ARM_CALL: .text+0x1e700] 
    /*0001e880*/ CMP         R0, #3 
    /*0001e884*/ MOV         R5, R0 
    /*0001e888*/ BHI         VENC_GetBusyQueue.part.9_x1e8dc
    /*0001e88c*/ CMP         R0, #0 
    /*0001e890*/ BNE         VENC_GetBusyQueue.part.9_x1e8a0
    /*0001e894*/ ADD         R0, R4, #3696               @ 0xe70 
    /*0001e898*/ ADD         R0, R0, #12 
    /*0001e89c*/ POP         {R4, R5, R6, PC} 
    VENC_GetBusyQueue.part.9_x1e8a0:
    /*0001e8a0*/ CMP         R0, #1 
    /*0001e8a4*/ BEQ         VENC_GetBusyQueue.part.9_x1e8fc
    VENC_GetBusyQueue.part.9_x1e8a8:
    /*0001e8a8*/ CMP         R5, #2 
    /*0001e8ac*/ BEQ         VENC_GetBusyQueue.part.9_x1e914
    /*0001e8b0*/ CMP         R5, #3 
    /*0001e8b4*/ BEQ         VENC_GetBusyQueue.part.9_x1e908
    /*0001e8b8*/ MOVW        R2, #1244                   @ 0x4dc 
    /*0001e8bc*/ LDR         R1, [PC, #92]               @ 0x000000000001e920 
    /*0001e8c0*/ MOVW        R3, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x84c8] 
    /*0001e8c4*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001e8c8*/ MOVT        R3, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x84c8] 
    /*0001e8cc*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001e8d0*/ BL          0x000000000001E8D0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001e8d4*/ MOV         R0, #0 
    /*0001e8d8*/ POP         {R4, R5, R6, PC} 
    VENC_GetBusyQueue.part.9_x1e8dc:
    /*0001e8dc*/ MOVW        R3, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x84ac] 
    /*0001e8e0*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001e8e4*/ MOVT        R3, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x84ac] 
    /*0001e8e8*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001e8ec*/ MOVW        R2, #1614                   @ 0x64e 
    /*0001e8f0*/ LDR         R1, [PC, #44]               @ 0x000000000001e924 
    /*0001e8f4*/ BL          0x000000000001E8F4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001e8f8*/ B           VENC_GetBusyQueue.part.9_x1e8a8
    VENC_GetBusyQueue.part.9_x1e8fc:
    /*0001e8fc*/ ADD         R0, R4, #9152               @ 0x23c0 
    /*0001e900*/ ADD         R0, R0, #60                 @ 0x3c 
    /*0001e904*/ POP         {R4, R5, R6, PC} 
    VENC_GetBusyQueue.part.9_x1e908:
    /*0001e908*/ ADD         R0, R4, #6400               @ 0x1900 
    /*0001e90c*/ ADD         R0, R0, #36                 @ 0x24 
    /*0001e910*/ POP         {R4, R5, R6, PC} 
    VENC_GetBusyQueue.part.9_x1e914:
    /*0001e914*/ ADD         R0, R4, #11904              @ 0x2e80 
    /*0001e918*/ ADD         R0, R0, #36                 @ 0x24 
    /*0001e91c*/ POP         {R4, R5, R6, PC} 
    /*0001e920*/ ANDEQ       R0, R0, R8, ASR PC 
    /*0001e924*/ ANDEQ       R0, R0, R4, ASR #30 
FUNC_END VENC_GetBusyQueue.part.9


FUNC_BEGIN VencUpdateLastTimeRef.part.10
    /*0001e928*/ PUSH        {R4, R5, R6, LR} 
    /*0001e92c*/ MOV         R4, R0 
    /*0001e930*/ MOV         R5, R1 
    /*0001e934*/ BL          0x000000000001E934          @ VencSearchPicQueueIndexByReso [R_ARM_CALL: .text+0x1e700] 
    /*0001e938*/ CMP         R0, #3 
    /*0001e93c*/ LDRLS       PC, [PC, R0, LSL #2] 
    /*0001e940*/ B           VencUpdateLastTimeRef.part.10_x1e95c
    /*0001e944*/ ANDEQ       LR, R1, R8, ROR R9 
    /*0001e948*/ ANDEQ       LR, R1, IP, ROR #18 
    /*0001e94c*/ ANDEQ       LR, R1, R0, ROR #18 
    /*0001e950*/ ANDEQ       LR, R1, R4, ASR R9 
    /*0001e954*/ LDR         R3, [R5, #232]              @ 0xe8 
    /*0001e958*/ STR         R3, [R4, #44]               @ 0x2c 
    VencUpdateLastTimeRef.part.10_x1e95c:
    /*0001e95c*/ POP         {R4, R5, R6, PC} 
    /*0001e960*/ LDR         R3, [R5, #232]              @ 0xe8 
    /*0001e964*/ STR         R3, [R4, #40]               @ 0x28 
    /*0001e968*/ POP         {R4, R5, R6, PC} 
    /*0001e96c*/ LDR         R3, [R5, #232]              @ 0xe8 
    /*0001e970*/ STR         R3, [R4, #36]               @ 0x24 
    /*0001e974*/ POP         {R4, R5, R6, PC} 
    /*0001e978*/ LDR         R3, [R5, #232]              @ 0xe8 
    /*0001e97c*/ STR         R3, [R4, #32] 
    /*0001e980*/ POP         {R4, R5, R6, PC} 
FUNC_END VencUpdateLastTimeRef.part.10


FUNC_BEGIN VencCheckGetAddInfoBuf.part.12
    /*0001e984*/ PUSH        {R4, LR} 
    /*0001e988*/ BL          0x000000000001E988          @ VencSearchPicQueueIndexByReso [R_ARM_CALL: .text+0x1e700] 
    /*0001e98c*/ CLZ         R0, R0 
    /*0001e990*/ LSR         R0, R0, #5 
    /*0001e994*/ POP         {R4, PC} 
FUNC_END VencCheckGetAddInfoBuf.part.12


FUNC_BEGIN VencGetLastTimeRef.part.19
    /*0001e998*/ PUSH        {R4, LR} 
    /*0001e99c*/ MOV         R4, R0 
    /*0001e9a0*/ BL          0x000000000001E9A0          @ VencSearchPicQueueIndexByReso [R_ARM_CALL: .text+0x1e700] 
    /*0001e9a4*/ CMP         R0, #3 
    /*0001e9a8*/ LDRLS       PC, [PC, R0, LSL #2] 
    /*0001e9ac*/ B           VencGetLastTimeRef.part.19_x1e9e0
    /*0001e9b0*/ LDRDEQ      LR, [R1], -R8 
    /*0001e9b4*/ LDRDEQ      LR, [R1], -R0 
    /*0001e9b8*/ ANDEQ       LR, R1, R8, ASR #19 
    /*0001e9bc*/ ANDEQ       LR, R1, R0, ASR #19 
    /*0001e9c0*/ LDR         R0, [R4, #44]               @ 0x2c 
    /*0001e9c4*/ POP         {R4, PC} 
    /*0001e9c8*/ LDR         R0, [R4, #40]               @ 0x28 
    /*0001e9cc*/ POP         {R4, PC} 
    /*0001e9d0*/ LDR         R0, [R4, #36]               @ 0x24 
    /*0001e9d4*/ POP         {R4, PC} 
    /*0001e9d8*/ LDR         R0, [R4, #32] 
    /*0001e9dc*/ POP         {R4, PC} 
    VencGetLastTimeRef.part.19_x1e9e0:
    /*0001e9e0*/ MOV         R0, #0 
    /*0001e9e4*/ POP         {R4, PC} 
FUNC_END VencGetLastTimeRef.part.19


FUNC_BEGIN VencCheckResoForMultiMode
    /*0001e9e8*/ PUSH        {R4, LR} 
    /*0001e9ec*/ BL          0x000000000001E9EC          @ VencSearchPicQueueIndexByReso [R_ARM_CALL: .text+0x1e700] 
    /*0001e9f0*/ MOVW        R3, #32777                  @ 0x8009 
    /*0001e9f4*/ MOVT        R3, #40968                  @ 0xa008 
    /*0001e9f8*/ CMP         R0, #3 
    /*0001e9fc*/ MOVHI       R0, R3 
    /*0001ea00*/ MOVLS       R0, #0 
    /*0001ea04*/ POP         {R4, PC} 
FUNC_END VencCheckResoForMultiMode


FUNC_BEGIN VencGetFreePicQueueByIndex
    /*0001ea08*/ CMP         R1, #0 
    /*0001ea0c*/ BEQ         VencGetFreePicQueueByIndex_x1ea34
    /*0001ea10*/ CMP         R1, #1 
    /*0001ea14*/ BEQ         VencGetFreePicQueueByIndex_x1ea40
    /*0001ea18*/ CMP         R1, #2 
    /*0001ea1c*/ BEQ         VencGetFreePicQueueByIndex_x1ea4c
    /*0001ea20*/ CMP         R1, #3 
    /*0001ea24*/ BNE         VencGetFreePicQueueByIndex_x1ea58
    /*0001ea28*/ ADD         R0, R0, #6400               @ 0x1900 
    /*0001ea2c*/ ADD         R0, R0, #16 
    /*0001ea30*/ BX          LR 
    VencGetFreePicQueueByIndex_x1ea34:
    /*0001ea34*/ ADD         R0, R0, #3680               @ 0xe60 
    /*0001ea38*/ ADD         R0, R0, #8 
    /*0001ea3c*/ BX          LR 
    VencGetFreePicQueueByIndex_x1ea40:
    /*0001ea40*/ ADD         R0, R0, #9152               @ 0x23c0 
    /*0001ea44*/ ADD         R0, R0, #40                 @ 0x28 
    /*0001ea48*/ BX          LR 
    VencGetFreePicQueueByIndex_x1ea4c:
    /*0001ea4c*/ ADD         R0, R0, #11904              @ 0x2e80 
    /*0001ea50*/ ADD         R0, R0, #16 
    /*0001ea54*/ BX          LR 
    VencGetFreePicQueueByIndex_x1ea58:
    /*0001ea58*/ PUSH        {R4, LR} 
    /*0001ea5c*/ MOV         R2, #1216                   @ 0x4c0 
    /*0001ea60*/ LDR         R1, [PC, #24]               @ 0x000000000001ea80 
    /*0001ea64*/ MOVW        R3, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x84c8] 
    /*0001ea68*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001ea6c*/ MOVT        R3, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x84c8] 
    /*0001ea70*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001ea74*/ BL          0x000000000001EA74          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001ea78*/ MOV         R0, #0 
    /*0001ea7c*/ POP         {R4, PC} 
    /*0001ea80*/ ANDEQ       R0, R0, R8, LSR #30 
FUNC_END VencGetFreePicQueueByIndex


FUNC_BEGIN VencGetBusyPicQueueByIndex
    /*0001ea84*/ CMP         R1, #0 
    /*0001ea88*/ BEQ         VencGetBusyPicQueueByIndex_x1eab0
    /*0001ea8c*/ CMP         R1, #1 
    /*0001ea90*/ BEQ         VencGetBusyPicQueueByIndex_x1eabc
    /*0001ea94*/ CMP         R1, #2 
    /*0001ea98*/ BEQ         VencGetBusyPicQueueByIndex_x1eac8
    /*0001ea9c*/ CMP         R1, #3 
    /*0001eaa0*/ BNE         VencGetBusyPicQueueByIndex_x1ead4
    /*0001eaa4*/ ADD         R0, R0, #6400               @ 0x1900 
    /*0001eaa8*/ ADD         R0, R0, #36                 @ 0x24 
    /*0001eaac*/ BX          LR 
    VencGetBusyPicQueueByIndex_x1eab0:
    /*0001eab0*/ ADD         R0, R0, #3696               @ 0xe70 
    /*0001eab4*/ ADD         R0, R0, #12 
    /*0001eab8*/ BX          LR 
    VencGetBusyPicQueueByIndex_x1eabc:
    /*0001eabc*/ ADD         R0, R0, #9152               @ 0x23c0 
    /*0001eac0*/ ADD         R0, R0, #60                 @ 0x3c 
    /*0001eac4*/ BX          LR 
    VencGetBusyPicQueueByIndex_x1eac8:
    /*0001eac8*/ ADD         R0, R0, #11904              @ 0x2e80 
    /*0001eacc*/ ADD         R0, R0, #36                 @ 0x24 
    /*0001ead0*/ BX          LR 
    VencGetBusyPicQueueByIndex_x1ead4:
    /*0001ead4*/ PUSH        {R4, LR} 
    /*0001ead8*/ MOVW        R2, #1244                   @ 0x4dc 
    /*0001eadc*/ LDR         R1, [PC, #24]               @ 0x000000000001eafc 
    /*0001eae0*/ MOVW        R3, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x84c8] 
    /*0001eae4*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001eae8*/ MOVT        R3, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x84c8] 
    /*0001eaec*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001eaf0*/ BL          0x000000000001EAF0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001eaf4*/ MOV         R0, #0 
    /*0001eaf8*/ POP         {R4, PC} 
    /*0001eafc*/ ANDEQ       R0, R0, R8, ASR PC 
FUNC_END VencGetBusyPicQueueByIndex


FUNC_BEGIN VENC_PreScale
    /*0001eb00*/ ADD         R1, R1, #12288              @ 0x3000 
    /*0001eb04*/ LDR         R3, [R0, #4] 
    /*0001eb08*/ LDR         R2, [R1, #152]              @ 0x98 
    /*0001eb0c*/ CMP         R3, R2, LSL #1 
    /*0001eb10*/ BXNE        LR 
    /*0001eb14*/ LDR         R2, [R0, #20] 
    /*0001eb18*/ CMP         R2, #0 
    /*0001eb1c*/ BXNE        LR 
    /*0001eb20*/ LDR         R2, [R0, #16] 
    /*0001eb24*/ CMP         R2, #0 
    /*0001eb28*/ BXNE        LR 
    /*0001eb2c*/ PUSH        {R4, R5, LR} 
    /*0001eb30*/ LSR         R1, R3, #1 
    /*0001eb34*/ LDR         LR, [R0, #44]               @ 0x2c 
    /*0001eb38*/ LDRD        R4, [R0, #120]              @ 0x78 
    /*0001eb3c*/ LDR         IP, [R0, #48]               @ 0x30 
    /*0001eb40*/ LDRD        R2, [R0, #128]              @ 0x80 
    /*0001eb44*/ ADDS        R4, R4, LR 
    /*0001eb48*/ ADC         R5, R5, #0 
    /*0001eb4c*/ LSL         LR, LR, #1 
    /*0001eb50*/ ADDS        R2, R2, IP 
    /*0001eb54*/ STR         R1, [R0, #4] 
    /*0001eb58*/ ADC         R3, R3, #0 
    /*0001eb5c*/ LSL         IP, IP, #1 
    /*0001eb60*/ STRD        R4, [R0, #120]              @ 0x78 
    /*0001eb64*/ STR         LR, [R0, #44]               @ 0x2c 
    /*0001eb68*/ STRD        R2, [R0, #128]              @ 0x80 
    /*0001eb6c*/ STR         IP, [R0, #48]               @ 0x30 
    /*0001eb70*/ POP         {R4, R5, PC} 
FUNC_END VENC_PreScale


FUNC_BEGIN VENC_CropPic
    /*0001eb74*/ PUSH        {R4, R5, R6, LR} 
    /*0001eb78*/ MOV         R4, R0 
    /*0001eb7c*/ LDR         R3, [R0, #12] 
    /*0001eb80*/ MOV         IP, R1 
    /*0001eb84*/ LDR         R2, [R0, #44]               @ 0x2c 
    /*0001eb88*/ LDR         R5, [R1, #8] 
    /*0001eb8c*/ CMP         R3, #26 
    /*0001eb90*/ LDR         R3, [R1, #4] 
    /*0001eb94*/ LDR         R6, [R4, #48]               @ 0x30 
    /*0001eb98*/ LDRD        R0, [R0, #120]              @ 0x78 
    /*0001eb9c*/ MLA         R5, R2, R5, R3 
    /*0001eba0*/ LDRD        R2, [R4, #128]              @ 0x80 
    /*0001eba4*/ BEQ         VENC_CropPic_x1ec40
    /*0001eba8*/ ADDS        R0, R0, R5 
    /*0001ebac*/ ADC         R1, R1, #0 
    /*0001ebb0*/ STRD        R0, [R4, #120]              @ 0x78 
    /*0001ebb4*/ LDMIB       IP, {R5, LR} 
    /*0001ebb8*/ MLA         LR, R6, LR, R5 
    /*0001ebbc*/ ADDS        R2, R2, LR 
    /*0001ebc0*/ ADC         R3, R3, #0 
    /*0001ebc4*/ STRD        R2, [R4, #128]              @ 0x80 
    VENC_CropPic_x1ebc8:
    /*0001ebc8*/ LDR         LR, [IP, #12] 
    /*0001ebcc*/ AND         R0, R0, #15 
    /*0001ebd0*/ MOV         R1, #0 
    /*0001ebd4*/ ORRS        R1, R0, R1 
    /*0001ebd8*/ STR         LR, [R4] 
    /*0001ebdc*/ LDR         R1, [IP, #16] 
    /*0001ebe0*/ STR         R1, [R4, #4] 
    /*0001ebe4*/ BNE         VENC_CropPic_x1ec1c
    VENC_CropPic_x1ebe8:
    /*0001ebe8*/ AND         R2, R2, #15 
    /*0001ebec*/ MOV         R3, #0 
    /*0001ebf0*/ ORRS        R3, R2, R3 
    /*0001ebf4*/ BEQ         VENC_CropPic_x1ec14
    /*0001ebf8*/ MOVW        R3, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8514] 
    /*0001ebfc*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001ec00*/ MOVT        R3, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8514] 
    /*0001ec04*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001ec08*/ MOVW        R2, #1574                   @ 0x626 
    /*0001ec0c*/ LDR         R1, [PC, #84]               @ 0x000000000001ec68 
    /*0001ec10*/ BL          0x000000000001EC10          @ osal_panic [R_ARM_CALL: +0x0] 
    VENC_CropPic_x1ec14:
    /*0001ec14*/ MOV         R0, #0 
    /*0001ec18*/ POP         {R4, R5, R6, PC} 
    VENC_CropPic_x1ec1c:
    /*0001ec1c*/ MOVW        R2, #1573                   @ 0x625 
    /*0001ec20*/ MOVW        R3, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x84cc] 
    /*0001ec24*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0001ec28*/ MOVT        R3, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x84cc] 
    /*0001ec2c*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0001ec30*/ LDR         R1, [PC, #48]               @ 0x000000000001ec68 
    /*0001ec34*/ BL          0x000000000001EC34          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001ec38*/ LDRD        R2, [R4, #128]              @ 0x80 
    /*0001ec3c*/ B           VENC_CropPic_x1ebe8
    VENC_CropPic_x1ec40:
    /*0001ec40*/ ADDS        R0, R0, R5 
    /*0001ec44*/ ADC         R1, R1, #0 
    /*0001ec48*/ STRD        R0, [R4, #120]              @ 0x78 
    /*0001ec4c*/ LDMIB       IP, {R5, LR} 
    /*0001ec50*/ ASR         LR, LR, #1 
    /*0001ec54*/ MLA         LR, R6, LR, R5 
    /*0001ec58*/ ADDS        R2, R2, LR 
    /*0001ec5c*/ ADC         R3, R3, #0 
    /*0001ec60*/ STRD        R2, [R4, #128]              @ 0x80 
    /*0001ec64*/ B           VENC_CropPic_x1ebc8
    /*0001ec68*/ ANDEQ       R0, R0, R4, ROR PC 
FUNC_END VENC_CropPic


FUNC_BEGIN VENC_GetFreeQueue
    /*0001ec6c*/ LDR         R2, [R0, #4] 
    /*0001ec70*/ MOV         R3, R0 
    /*0001ec74*/ CMP         R2, #26 
    /*0001ec78*/ BEQ         VENC_GetFreeQueue_x1ec88
    VENC_GetFreeQueue_x1ec7c:
    /*0001ec7c*/ ADD         R0, R3, #3680               @ 0xe60 
    /*0001ec80*/ ADD         R0, R0, #8 
    /*0001ec84*/ BX          LR 
    VENC_GetFreeQueue_x1ec88:
    /*0001ec88*/ ADD         R2, R0, #12288              @ 0x3000 
    /*0001ec8c*/ LDR         R2, [R2, #672]              @ 0x2a0 
    /*0001ec90*/ CMP         R2, #1 
    /*0001ec94*/ BNE         VENC_GetFreeQueue_x1ec7c
    /*0001ec98*/ B           0x000000000001E7C0 
FUNC_END VENC_GetFreeQueue


FUNC_BEGIN VENC_GetBusyQueue
    /*0001ec9c*/ LDR         R2, [R0, #4] 
    /*0001eca0*/ MOV         R3, R0 
    /*0001eca4*/ CMP         R2, #26 
    /*0001eca8*/ BEQ         VENC_GetBusyQueue_x1ecb8
    VENC_GetBusyQueue_x1ecac:
    /*0001ecac*/ ADD         R0, R3, #3696               @ 0xe70 
    /*0001ecb0*/ ADD         R0, R0, #12 
    /*0001ecb4*/ BX          LR 
    VENC_GetBusyQueue_x1ecb8:
    /*0001ecb8*/ ADD         R2, R0, #12288              @ 0x3000 
    /*0001ecbc*/ LDR         R2, [R2, #672]              @ 0x2a0 
    /*0001ecc0*/ CMP         R2, #1 
    /*0001ecc4*/ BNE         VENC_GetBusyQueue_x1ecac
    /*0001ecc8*/ B           0x000000000001E874 
FUNC_END VENC_GetBusyQueue


FUNC_BEGIN VENC_AddOnePic
    /*0001eccc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001ecd0*/ MOV         R5, R1 
    /*0001ecd4*/ LDR         R3, [R1, #4] 
    /*0001ecd8*/ SUB         SP, SP, #12 
    /*0001ecdc*/ MOV         R9, R0 
    /*0001ece0*/ CMP         R3, #26 
    /*0001ece4*/ BEQ         VENC_AddOnePic_x1edf8
    VENC_AddOnePic_x1ece8:
    /*0001ece8*/ ADD         R4, R5, #3680               @ 0xe60 
    /*0001ecec*/ ADD         R4, R4, #8 
    VENC_AddOnePic_x1ecf0:
    /*0001ecf0*/ ADD         R6, R5, #3696               @ 0xe70 
    /*0001ecf4*/ ADD         R6, R6, #12 
    VENC_AddOnePic_x1ecf8:
    /*0001ecf8*/ LDR         R2, [R4, #16] 
    /*0001ecfc*/ CMP         R2, #0 
    /*0001ed00*/ BLE         VENC_AddOnePic_x1edc8
    /*0001ed04*/ LDR         R3, [R4, #12] 
    /*0001ed08*/ MOV         R8, R9 
    /*0001ed0c*/ LDR         R0, [R4] 
    /*0001ed10*/ MOV         FP, #0 
    /*0001ed14*/ SUBS        R3, R3, #1 
    /*0001ed18*/ ADD         SL, R5, #12288              @ 0x3000 
    /*0001ed1c*/ LDRMI       R1, [R4, #4] 
    /*0001ed20*/ ADDMI       R3, R3, R1 
    /*0001ed24*/ SUB         R1, R2, #1 
    /*0001ed28*/ MOV         R2, #336                    @ 0x150 
    /*0001ed2c*/ LDR         R7, [R0, R3, LSL #2] 
    /*0001ed30*/ STR         R3, [R4, #12] 
    /*0001ed34*/ STR         R1, [R4, #16] 
    /*0001ed38*/ STR         FP, [R9, #60]               @ 0x3c 
    /*0001ed3c*/ MOV         R0, R7 
    /*0001ed40*/ LDR         R1, [R8], #8 
    /*0001ed44*/ BL          0x000000000001ED44          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001ed48*/ ADD         R0, R7, #336                @ 0x150 
    /*0001ed4c*/ MOV         R2, #104                    @ 0x68 
    /*0001ed50*/ MOV         R1, R8 
    /*0001ed54*/ BL          0x000000000001ED54          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001ed58*/ STR         FP, [R7, #392]              @ 0x188 
    /*0001ed5c*/ LDR         R3, [SL, #508]              @ 0x1fc 
    /*0001ed60*/ CMP         R3, FP 
    /*0001ed64*/ BNE         VENC_AddOnePic_x1ef54
    VENC_AddOnePic_x1ed68:
    /*0001ed68*/ MOV         R1, R5 
    /*0001ed6c*/ MOV         R0, R7 
    /*0001ed70*/ BL          0x000000000001ED70          @ VENC_PreScale [R_ARM_CALL: .text+0x1eb00] 
    /*0001ed74*/ MOV         R0, R7 
    /*0001ed78*/ BL          0x000000000001ED78          @ VencVbAdd [R_ARM_CALL: .text+0x1e2c] 
    /*0001ed7c*/ CMP         R0, #0 
    /*0001ed80*/ BNE         VENC_AddOnePic_x1ee94
    /*0001ed84*/ LDR         R3, [R6, #16] 
    /*0001ed88*/ LDR         R1, [R6, #4] 
    /*0001ed8c*/ CMP         R3, R1 
    /*0001ed90*/ BGE         VENC_AddOnePic_x1ee44
    /*0001ed94*/ LDR         R2, [R6, #8] 
    /*0001ed98*/ ADD         R3, R3, #1 
    /*0001ed9c*/ SUBS        R2, R2, #1 
    /*0001eda0*/ ADDMI       R2, R2, R1 
    /*0001eda4*/ LDR         R1, [R6] 
    /*0001eda8*/ STR         R7, [R1, R2, LSL #2] 
    /*0001edac*/ STR         R3, [R6, #16] 
    /*0001edb0*/ STR         R2, [R6, #8] 
    /*0001edb4*/ LDR         R3, [SL, #1108]             @ 0x454 
    /*0001edb8*/ CMP         R3, #1 
    /*0001edbc*/ BEQ         VENC_AddOnePic_x1ef14
    VENC_AddOnePic_x1edc0:
    /*0001edc0*/ ADD         SP, SP, #12 
    /*0001edc4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_AddOnePic_x1edc8:
    /*0001edc8*/ MOVW        R2, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x85c4] 
    /*0001edcc*/ MOVT        R2, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x85c4] 
    /*0001edd0*/ LDR         R1, [R5, #56]               @ 0x38 
    /*0001edd4*/ MOVW        R3, #1643                   @ 0x66b 
    /*0001edd8*/ STR         R3, [SP] 
    VENC_AddOnePic_x1eddc:
    /*0001eddc*/ STR         R1, [SP, #4] 
    /*0001ede0*/ MOV         R0, #3 
    /*0001ede4*/ LDR         R3, [PC, #460]              @ 0x000000000001efb8 
    /*0001ede8*/ MOV         R1, #8 
    /*0001edec*/ BL          0x000000000001EDEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001edf0*/ ADD         SP, SP, #12 
    /*0001edf4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_AddOnePic_x1edf8:
    /*0001edf8*/ ADD         R6, R1, #12288              @ 0x3000 
    /*0001edfc*/ LDR         R1, [R0] 
    /*0001ee00*/ LDR         R3, [R6, #672]              @ 0x2a0 
    /*0001ee04*/ CMP         R3, #1 
    /*0001ee08*/ BNE         VENC_AddOnePic_x1ece8
    /*0001ee0c*/ MOV         R0, R5 
    /*0001ee10*/ BL          0x000000000001E7C0 
    /*0001ee14*/ LDR         R3, [R5, #4] 
    /*0001ee18*/ LDR         R1, [R9] 
    /*0001ee1c*/ CMP         R3, #26 
    /*0001ee20*/ MOV         R4, R0 
    /*0001ee24*/ BNE         VENC_AddOnePic_x1ecf0
    /*0001ee28*/ LDR         R3, [R6, #672]              @ 0x2a0 
    /*0001ee2c*/ CMP         R3, #1 
    /*0001ee30*/ BNE         VENC_AddOnePic_x1ecf0
    /*0001ee34*/ MOV         R0, R5 
    /*0001ee38*/ BL          0x000000000001E874 
    /*0001ee3c*/ MOV         R6, R0 
    /*0001ee40*/ B           VENC_AddOnePic_x1ecf8
    VENC_AddOnePic_x1ee44:
    /*0001ee44*/ LDR         R1, [R5, #56]               @ 0x38 
    /*0001ee48*/ MOVW        R3, #1683                   @ 0x693 
    /*0001ee4c*/ MOVW        R2, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8650] 
    /*0001ee50*/ STR         R3, [SP] 
    /*0001ee54*/ MOVT        R2, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8650] 
    /*0001ee58*/ LDR         R3, [PC, #344]              @ 0x000000000001efb8 
    /*0001ee5c*/ STR         R1, [SP, #4] 
    /*0001ee60*/ MOV         R0, #3 
    /*0001ee64*/ MOV         R1, #8 
    /*0001ee68*/ BL          0x000000000001EE68          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ee6c*/ LDR         R3, [R6, #16] 
    /*0001ee70*/ LDR         R2, [R6, #4] 
    /*0001ee74*/ CMP         R3, R2 
    /*0001ee78*/ BLT         VENC_AddOnePic_x1eef0
    /*0001ee7c*/ LDR         R1, [R5, #56]               @ 0x38 
    /*0001ee80*/ MOVW        R3, #1687                   @ 0x697 
    VENC_AddOnePic_x1ee84:
    /*0001ee84*/ MOVW        R2, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x860c] 
    /*0001ee88*/ STR         R3, [SP] 
    /*0001ee8c*/ MOVT        R2, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x860c] 
    /*0001ee90*/ B           VENC_AddOnePic_x1eddc
    VENC_AddOnePic_x1ee94:
    /*0001ee94*/ LDR         R1, [R5, #56]               @ 0x38 
    /*0001ee98*/ MOVW        R3, #1672                   @ 0x688 
    /*0001ee9c*/ MOVW        R2, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x855c] 
    /*0001eea0*/ STR         R3, [SP] 
    /*0001eea4*/ MOVT        R2, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x855c] 
    /*0001eea8*/ LDR         R3, [PC, #264]              @ 0x000000000001efb8 
    /*0001eeac*/ STR         R1, [SP, #4] 
    /*0001eeb0*/ MOV         R0, #3 
    /*0001eeb4*/ MOV         R1, #8 
    /*0001eeb8*/ BL          0x000000000001EEB8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001eebc*/ LDR         R3, [R4, #16] 
    /*0001eec0*/ LDR         R1, [R4, #4] 
    /*0001eec4*/ CMP         R3, R1 
    /*0001eec8*/ BGE         VENC_AddOnePic_x1ef68
    /*0001eecc*/ LDR         R2, [R4, #8] 
    /*0001eed0*/ ADD         R3, R3, #1 
    /*0001eed4*/ SUBS        R2, R2, #1 
    /*0001eed8*/ ADDMI       R2, R2, R1 
    /*0001eedc*/ LDR         R1, [R4] 
    /*0001eee0*/ STR         R7, [R1, R2, LSL #2] 
    /*0001eee4*/ STR         R3, [R4, #16] 
    /*0001eee8*/ STR         R2, [R4, #8] 
    /*0001eeec*/ B           VENC_AddOnePic_x1edc0
    VENC_AddOnePic_x1eef0:
    /*0001eef0*/ LDR         R1, [R6, #8] 
    /*0001eef4*/ ADD         R3, R3, #1 
    /*0001eef8*/ SUBS        R1, R1, #1 
    /*0001eefc*/ ADDMI       R1, R1, R2 
    /*0001ef00*/ LDR         R2, [R6] 
    /*0001ef04*/ STR         R7, [R2, R1, LSL #2] 
    /*0001ef08*/ STR         R3, [R6, #16] 
    /*0001ef0c*/ STR         R1, [R6, #8] 
    /*0001ef10*/ B           VENC_AddOnePic_x1edc0
    VENC_AddOnePic_x1ef14:
    /*0001ef14*/ LDR         R3, [SL, #1128]             @ 0x468 
    /*0001ef18*/ CMP         R3, #1 
    /*0001ef1c*/ BEQ         VENC_AddOnePic_x1ef8c
    VENC_AddOnePic_x1ef20:
    /*0001ef20*/ MOV         R0, R7 
    /*0001ef24*/ BL          0x000000000001EF24          @ VencVbAdd [R_ARM_CALL: .text+0x1e2c] 
    /*0001ef28*/ CMP         R0, #0 
    /*0001ef2c*/ BNE         VENC_AddOnePic_x1ef74
    /*0001ef30*/ ADD         R0, R5, #13376              @ 0x3440 
    /*0001ef34*/ MOV         R3, #1 
    /*0001ef38*/ MOV         R1, R7 
    /*0001ef3c*/ ADD         R0, R0, #48                 @ 0x30 
    /*0001ef40*/ MOV         R2, #440                    @ 0x1b8 
    /*0001ef44*/ STR         R3, [SL, #1128]             @ 0x468 
    /*0001ef48*/ ADD         SP, SP, #12 
    /*0001ef4c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    VENC_AddOnePic_x1ef50:
    /*0001ef50*/ B           VENC_AddOnePic_x1ef50       @ osal_memcpy [R_ARM_JUMP24: +0x0] 
    VENC_AddOnePic_x1ef54:
    /*0001ef54*/ ADD         R1, R5, #12736              @ 0x31c0 
    /*0001ef58*/ MOV         R0, R7 
    /*0001ef5c*/ ADD         R1, R1, #60                 @ 0x3c 
    /*0001ef60*/ BL          0x000000000001EF60          @ VENC_CropPic [R_ARM_CALL: .text+0x1eb74] 
    /*0001ef64*/ B           VENC_AddOnePic_x1ed68
    VENC_AddOnePic_x1ef68:
    /*0001ef68*/ LDR         R1, [R5, #56]               @ 0x38 
    /*0001ef6c*/ MOVW        R3, #1676                   @ 0x68c 
    /*0001ef70*/ B           VENC_AddOnePic_x1ee84
    VENC_AddOnePic_x1ef74:
    /*0001ef74*/ LDR         R1, [R5, #56]               @ 0x38 
    /*0001ef78*/ MOVW        R3, #1707                   @ 0x6ab 
    /*0001ef7c*/ MOVW        R2, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x855c] 
    /*0001ef80*/ STR         R3, [SP] 
    /*0001ef84*/ MOVT        R2, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x855c] 
    /*0001ef88*/ B           VENC_AddOnePic_x1eddc
    VENC_AddOnePic_x1ef8c:
    /*0001ef8c*/ ADD         R0, R5, #13376              @ 0x3440 
    /*0001ef90*/ ADD         R0, R0, #48                 @ 0x30 
    /*0001ef94*/ BL          0x000000000001EF94          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*0001ef98*/ CMP         R0, #0 
    /*0001ef9c*/ BEQ         VENC_AddOnePic_x1ef20
    /*0001efa0*/ LDR         R1, [R5, #56]               @ 0x38 
    /*0001efa4*/ MOVW        R3, #1699                   @ 0x6a3 
    /*0001efa8*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8590] 
    /*0001efac*/ STR         R3, [SP] 
    /*0001efb0*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8590] 
    /*0001efb4*/ B           VENC_AddOnePic_x1eddc
    /*0001efb8*/ ANDEQ       R0, R0, R4, LSL #31 
FUNC_END VENC_AddOnePic


FUNC_BEGIN VencUpdateLastTimeRef
    /*0001efbc*/ LDR         R2, [R0, #4] 
    /*0001efc0*/ MOV         R3, R0 
    /*0001efc4*/ MOV         IP, R1 
    /*0001efc8*/ CMP         R2, #26 
    /*0001efcc*/ BEQ         VencUpdateLastTimeRef_x1efe0
    VencUpdateLastTimeRef_x1efd0:
    /*0001efd0*/ LDR         R2, [IP, #232]              @ 0xe8 
    /*0001efd4*/ MOV         R0, #0 
    /*0001efd8*/ STR         R2, [R3, #32] 
    /*0001efdc*/ BX          LR 
    VencUpdateLastTimeRef_x1efe0:
    /*0001efe0*/ ADD         R2, R0, #12288              @ 0x3000 
    /*0001efe4*/ LDR         R2, [R2, #672]              @ 0x2a0 
    /*0001efe8*/ CMP         R2, #1 
    /*0001efec*/ BNE         VencUpdateLastTimeRef_x1efd0
    /*0001eff0*/ PUSH        {R4, LR} 
    /*0001eff4*/ BL          0x000000000001E928 
    /*0001eff8*/ MOV         R0, #0 
    /*0001effc*/ POP         {R4, PC} 
FUNC_END VencUpdateLastTimeRef


FUNC_BEGIN VENC_NO2VGS_SendPic
    /*0001f000*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001f004*/ SUB         SP, SP, #20 
    /*0001f008*/ MOV         R6, R1 
    /*0001f00c*/ MOV         R4, R0 
    /*0001f010*/ BL          0x000000000001F010          @ MkpVencCheckNull [R_ARM_CALL: .text+0x798] 
    /*0001f014*/ SUBS        R5, R0, #0 
    /*0001f018*/ BEQ         VENC_NO2VGS_SendPic_x1f028
    VENC_NO2VGS_SendPic_x1f01c:
    /*0001f01c*/ MOV         R0, R5 
    /*0001f020*/ ADD         SP, SP, #20 
    /*0001f024*/ POP         {R4, R5, R6, R7, PC} 
    VENC_NO2VGS_SendPic_x1f028:
    /*0001f028*/ MOV         R0, R6 
    /*0001f02c*/ BL          0x000000000001F02C          @ MkpVencCheckNull [R_ARM_CALL: .text+0x798] 
    /*0001f030*/ SUBS        R5, R0, #0 
    /*0001f034*/ BNE         VENC_NO2VGS_SendPic_x1f01c
    /*0001f038*/ ADD         R7, R4, #12288              @ 0x3000 
    /*0001f03c*/ LDR         R3, [R7, #508]              @ 0x1fc 
    /*0001f040*/ CMP         R3, #1 
    /*0001f044*/ LDRNE       R2, [R7, #152]              @ 0x98 
    /*0001f048*/ BEQ         VENC_NO2VGS_SendPic_x1f0b4
    VENC_NO2VGS_SendPic_x1f04c:
    /*0001f04c*/ LDR         R3, [R6] 
    /*0001f050*/ LDR         R1, [R3, #4] 
    /*0001f054*/ CMP         R1, R2, LSL #1 
    /*0001f058*/ BNE         VENC_NO2VGS_SendPic_x1f068
    /*0001f05c*/ LDR         R2, [R3, #20] 
    /*0001f060*/ CMP         R2, #0 
    /*0001f064*/ BEQ         VENC_NO2VGS_SendPic_x1f170
    VENC_NO2VGS_SendPic_x1f068:
    /*0001f068*/ MOV         R1, R4 
    /*0001f06c*/ MOV         R0, R6 
    /*0001f070*/ BL          0x000000000001F070          @ VENC_AddOnePic [R_ARM_CALL: .text+0x1eccc] 
    /*0001f074*/ LDR         R3, [R4, #4] 
    /*0001f078*/ LDR         R1, [R6] 
    /*0001f07c*/ CMP         R3, #26 
    /*0001f080*/ BEQ         VENC_NO2VGS_SendPic_x1f144
    VENC_NO2VGS_SendPic_x1f084:
    /*0001f084*/ LDR         R3, [R1, #232]              @ 0xe8 
    /*0001f088*/ STR         R3, [R4, #32] 
    VENC_NO2VGS_SendPic_x1f08c:
    /*0001f08c*/ ADD         R4, R4, #8192               @ 0x2000 
    /*0001f090*/ MOV         R0, R5 
    /*0001f094*/ LDR         R2, [R4, #4052]             @ 0xfd4 
    /*0001f098*/ LDR         R3, [R4, #4056]             @ 0xfd8 
    /*0001f09c*/ ADD         R2, R2, #1 
    /*0001f0a0*/ STR         R2, [R4, #4052]             @ 0xfd4 
    /*0001f0a4*/ ADD         R3, R3, #1 
    /*0001f0a8*/ STR         R3, [R4, #4056]             @ 0xfd8 
    /*0001f0ac*/ ADD         SP, SP, #20 
    /*0001f0b0*/ POP         {R4, R5, R6, R7, PC} 
    VENC_NO2VGS_SendPic_x1f0b4:
    /*0001f0b4*/ LDR         R2, [R7, #520]              @ 0x208 
    /*0001f0b8*/ LDR         R3, [R7, #148]              @ 0x94 
    /*0001f0bc*/ CMP         R2, R3 
    /*0001f0c0*/ BEQ         VENC_NO2VGS_SendPic_x1f15c
    VENC_NO2VGS_SendPic_x1f0c4:
    /*0001f0c4*/ LDR         R3, [R6, #72]               @ 0x48 
    /*0001f0c8*/ CMP         R3, #0 
    /*0001f0cc*/ BNE         VENC_NO2VGS_SendPic_x1f1cc
    /*0001f0d0*/ LDR         R3, [R6] 
    /*0001f0d4*/ LDR         R2, [R3, #20] 
    /*0001f0d8*/ CMP         R2, #0 
    /*0001f0dc*/ BNE         VENC_NO2VGS_SendPic_x1f0ec
    /*0001f0e0*/ LDR         R3, [R3, #16] 
    /*0001f0e4*/ CMP         R3, #0 
    /*0001f0e8*/ BEQ         VENC_NO2VGS_SendPic_x1f068
    VENC_NO2VGS_SendPic_x1f0ec:
    /*0001f0ec*/ ADD         IP, R4, #8192               @ 0x2000 
    /*0001f0f0*/ MOVW        LR, #1775                   @ 0x6ef 
    /*0001f0f4*/ MOVW        R2, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x86dc] 
    /*0001f0f8*/ LDR         R3, [PC, #232]              @ 0x000000000001f1e8 
    /*0001f0fc*/ LDR         R0, [IP, #4048]             @ 0xfd0 
    /*0001f100*/ MOVT        R2, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x86dc] 
    /*0001f104*/ MOV         R1, #8 
    /*0001f108*/ MOVW        R5, #32776                  @ 0x8008 
    /*0001f10c*/ ADD         R0, R0, #1 
    /*0001f110*/ STR         R0, [IP, #4048]             @ 0xfd0 
    /*0001f114*/ LDR         IP, [R6] 
    /*0001f118*/ MOV         R0, #3 
    /*0001f11c*/ LDR         R4, [R4, #56]               @ 0x38 
    /*0001f120*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001f124*/ LDR         R6, [IP, #16] 
    /*0001f128*/ STR         R6, [SP, #12] 
    /*0001f12c*/ LDR         IP, [IP, #20] 
    /*0001f130*/ STR         R4, [SP, #4] 
    /*0001f134*/ STR         LR, [SP] 
    /*0001f138*/ STR         IP, [SP, #8] 
    /*0001f13c*/ BL          0x000000000001F13C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f140*/ B           VENC_NO2VGS_SendPic_x1f01c
    VENC_NO2VGS_SendPic_x1f144:
    /*0001f144*/ LDR         R3, [R7, #672]              @ 0x2a0 
    /*0001f148*/ CMP         R3, #1 
    /*0001f14c*/ BNE         VENC_NO2VGS_SendPic_x1f084
    /*0001f150*/ MOV         R0, R4 
    /*0001f154*/ BL          0x000000000001E928 
    /*0001f158*/ B           VENC_NO2VGS_SendPic_x1f08c
    VENC_NO2VGS_SendPic_x1f15c:
    /*0001f15c*/ LDR         R2, [R7, #152]              @ 0x98 
    /*0001f160*/ LDR         R3, [R7, #524]              @ 0x20c 
    /*0001f164*/ CMP         R3, R2 
    /*0001f168*/ BNE         VENC_NO2VGS_SendPic_x1f0c4
    /*0001f16c*/ B           VENC_NO2VGS_SendPic_x1f04c
    VENC_NO2VGS_SendPic_x1f170:
    /*0001f170*/ LDR         R3, [R3, #16] 
    /*0001f174*/ CMP         R3, #0 
    /*0001f178*/ BNE         VENC_NO2VGS_SendPic_x1f068
    /*0001f17c*/ LDR         R3, [R6, #72]               @ 0x48 
    /*0001f180*/ CMP         R3, #0 
    /*0001f184*/ BEQ         VENC_NO2VGS_SendPic_x1f068
    /*0001f188*/ ADD         IP, R4, #8192               @ 0x2000 
    /*0001f18c*/ MOVW        R3, #1790                   @ 0x6fe 
    /*0001f190*/ STR         R3, [SP] 
    /*0001f194*/ MOVW        R2, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x873c] 
    /*0001f198*/ LDR         R0, [IP, #4048]             @ 0xfd0 
    /*0001f19c*/ MOVT        R2, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x873c] 
    VENC_NO2VGS_SendPic_x1f1a0:
    /*0001f1a0*/ ADD         R0, R0, #1 
    /*0001f1a4*/ STR         R0, [IP, #4048]             @ 0xfd0 
    /*0001f1a8*/ LDR         IP, [R4, #56]               @ 0x38 
    /*0001f1ac*/ MOV         R1, #8 
    /*0001f1b0*/ LDR         R3, [PC, #48]               @ 0x000000000001f1e8 
    /*0001f1b4*/ MOV         R0, #3 
    /*0001f1b8*/ MOVW        R5, #32777                  @ 0x8009 
    /*0001f1bc*/ MOVT        R5, #40968                  @ 0xa008 
    /*0001f1c0*/ STR         IP, [SP, #4] 
    /*0001f1c4*/ BL          0x000000000001F1C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f1c8*/ B           VENC_NO2VGS_SendPic_x1f01c
    VENC_NO2VGS_SendPic_x1f1cc:
    /*0001f1cc*/ ADD         IP, R4, #8192               @ 0x2000 
    /*0001f1d0*/ MOVW        R3, #1765                   @ 0x6e5 
    /*0001f1d4*/ MOVW        R2, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8690] 
    /*0001f1d8*/ STR         R3, [SP] 
    /*0001f1dc*/ MOVT        R2, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8690] 
    /*0001f1e0*/ LDR         R0, [IP, #4048]             @ 0xfd0 
    /*0001f1e4*/ B           VENC_NO2VGS_SendPic_x1f1a0
    /*0001f1e8*/ MULEQ       R0, R4, PC                  @ <UNPREDICTABLE> 
FUNC_END VENC_NO2VGS_SendPic


FUNC_BEGIN VencCheckVideoAddr
    /*0001f1ec*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0001f1f0*/ MOV         R3, #0 
    /*0001f1f4*/ LDRD        R4, [R1, #120]              @ 0x78 
    /*0001f1f8*/ SUB         SP, SP, #40                 @ 0x28 
    /*0001f1fc*/ LDRD        R6, [R1, #128]              @ 0x80 
    /*0001f200*/ AND         R2, R4, #31 
    /*0001f204*/ ORRS        R3, R2, R3 
    /*0001f208*/ LDRNE       IP, [R1, #44]               @ 0x2c 
    /*0001f20c*/ LDRNE       R2, [R1, #48]               @ 0x30 
    /*0001f210*/ BNE         VencCheckVideoAddr_x1f248
    /*0001f214*/ AND         R2, R6, #31 
    /*0001f218*/ MOV         R3, #0 
    /*0001f21c*/ ORRS        R3, R2, R3 
    /*0001f220*/ LDR         IP, [R1, #44]               @ 0x2c 
    /*0001f224*/ LDR         R2, [R1, #48]               @ 0x30 
    /*0001f228*/ BNE         VencCheckVideoAddr_x1f248
    /*0001f22c*/ TST         IP, #31 
    /*0001f230*/ BNE         VencCheckVideoAddr_x1f248
    /*0001f234*/ ANDS        R3, R2, #31 
    /*0001f238*/ MOVEQ       R0, R3 
    /*0001f23c*/ BNE         VencCheckVideoAddr_x1f248
    /*0001f240*/ ADD         SP, SP, #40                 @ 0x28 
    /*0001f244*/ POP         {R4, R5, R6, R7, R8, PC} 
    VencCheckVideoAddr_x1f248:
    /*0001f248*/ LDR         R1, [R0, #56]               @ 0x38 
    /*0001f24c*/ MOV         R8, R0 
    /*0001f250*/ STR         R2, [SP, #28] 
    /*0001f254*/ MOV         R0, #32 
    /*0001f258*/ STR         IP, [SP, #24] 
    /*0001f25c*/ MOVW        R3, #1817                   @ 0x719 
    /*0001f260*/ STR         R1, [SP, #4] 
    /*0001f264*/ MOVW        R2, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8790] 
    /*0001f268*/ STR         R0, [SP, #32] 
    /*0001f26c*/ MOVT        R2, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8790] 
    /*0001f270*/ STR         R3, [SP] 
    /*0001f274*/ MOV         R1, #8 
    /*0001f278*/ STRD        R6, [SP, #16] 
    /*0001f27c*/ MOV         R0, #3 
    /*0001f280*/ STRD        R4, [SP, #8] 
    /*0001f284*/ ADD         R8, R8, #12288              @ 0x3000 
    /*0001f288*/ LDR         R3, [PC, #24]               @ 0x000000000001f2a8 
    /*0001f28c*/ BL          0x000000000001F28C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f290*/ LDR         R3, [R8, #52]               @ 0x34 
    /*0001f294*/ MVN         R0, #0 
    /*0001f298*/ ADD         R3, R3, #1 
    /*0001f29c*/ STR         R3, [R8, #52]               @ 0x34 
    /*0001f2a0*/ ADD         SP, SP, #40                 @ 0x28 
    /*0001f2a4*/ POP         {R4, R5, R6, R7, R8, PC} 
    /*0001f2a8*/ ANDEQ       R0, R0, R8, LSR #31 
FUNC_END VencCheckVideoAddr


FUNC_BEGIN VencSendPic
    /*0001f2ac*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001f2b0*/ ADD         R8, R1, #8192               @ 0x2000 
    /*0001f2b4*/ ADD         R9, R1, #64                 @ 0x40 
    /*0001f2b8*/ SUB         SP, SP, #92                 @ 0x5c 
    /*0001f2bc*/ LDR         R3, [R8, #4036]             @ 0xfc4 
    /*0001f2c0*/ MOV         R4, R1 
    /*0001f2c4*/ MOV         R5, R0 
    /*0001f2c8*/ ADD         R1, SP, #60                 @ 0x3c 
    /*0001f2cc*/ ADD         R3, R3, #1 
    /*0001f2d0*/ MOV         R0, R9 
    /*0001f2d4*/ STR         R3, [R8, #4036]             @ 0xfc4 
    /*0001f2d8*/ MOV         R3, #0 
    /*0001f2dc*/ STR         R3, [SP, #72]               @ 0x48 
    /*0001f2e0*/ STR         R3, [SP, #64]               @ 0x40 
    /*0001f2e4*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001f2e8*/ STR         R3, [SP, #76]               @ 0x4c 
    /*0001f2ec*/ STR         R3, [SP, #80]               @ 0x50 
    /*0001f2f0*/ STR         R3, [SP, #84]               @ 0x54 
    /*0001f2f4*/ BL          0x000000000001F2F4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001f2f8*/ MOV         R0, R4 
    /*0001f2fc*/ BL          0x000000000001F2FC          @ VencCheckFreeNode [R_ARM_CALL: .text+0x1e604] 
    /*0001f300*/ CMP         R0, #0 
    /*0001f304*/ BEQ         VencSendPic_x1fd4c
    /*0001f308*/ ADD         R6, R4, #12288              @ 0x3000 
    /*0001f30c*/ LDR         R3, [R6, #508]              @ 0x1fc 
    /*0001f310*/ CMP         R3, #1 
    /*0001f314*/ BEQ         VencSendPic_x1f704
    VencSendPic_x1f318:
    /*0001f318*/ LDR         R3, [R4, #4] 
    /*0001f31c*/ CMP         R3, #26 
    /*0001f320*/ BEQ         VencSendPic_x1f478
    VencSendPic_x1f324:
    /*0001f324*/ LDR         R1, [R5] 
    VencSendPic_x1f328:
    /*0001f328*/ MOV         R0, R4 
    /*0001f32c*/ BL          0x000000000001F32C          @ VENC_DRV_IsJpegSupportCmp [R_ARM_CALL: .text+0x25f3c] 
    /*0001f330*/ CMP         R0, #0 
    /*0001f334*/ BEQ         VencSendPic_x1fd98
    /*0001f338*/ LDR         R3, [R4, #4] 
    /*0001f33c*/ ADD         FP, R4, #32768              @ 0x8000 
    /*0001f340*/ CMP         R3, #26 
    /*0001f344*/ LDRB        R2, [FP, #3264]             @ 0xcc0 
    /*0001f348*/ LDREQ       R3, [R5] 
    /*0001f34c*/ MOVNE       R3, #0 
    /*0001f350*/ LDREQ       R3, [R3, #256]              @ 0x100 
    /*0001f354*/ LSREQ       R3, R3, #31 
    /*0001f358*/ STR         R3, [FP, #3284]             @ 0xcd4 
    /*0001f35c*/ STR         R2, [R5, #56]               @ 0x38 
    /*0001f360*/ LDR         R3, [R4, #4] 
    /*0001f364*/ CMP         R3, #26 
    /*0001f368*/ BEQ         VencSendPic_x1f4d0
    VencSendPic_x1f36c:
    /*0001f36c*/ ADD         R1, R5, #8 
    /*0001f370*/ LDR         R0, [R4, #56]               @ 0x38 
    /*0001f374*/ BL          0x000000000001F374          @ VencGetFrmAddInfo [R_ARM_CALL: .text+0x1278] 
    /*0001f378*/ CMP         R0, #0 
    /*0001f37c*/ BNE         VencSendPic_x1fc2c
    /*0001f380*/ LDR         R3, [R5, #52]               @ 0x34 
    /*0001f384*/ STR         R0, [R3, #24] 
    /*0001f388*/ LDR         R3, [R5, #52]               @ 0x34 
    /*0001f38c*/ STR         R0, [R3, #2340]             @ 0x924 
    /*0001f390*/ LDR         R7, [R5] 
    VencSendPic_x1f394:
    /*0001f394*/ MOV         R3, #0 
    /*0001f398*/ STR         R3, [R5, #8] 
    /*0001f39c*/ STR         R3, [R5, #12] 
    /*0001f3a0*/ LDR         R3, [R4, #4] 
    /*0001f3a4*/ CMP         R3, #26 
    /*0001f3a8*/ BEQ         VencSendPic_x1f68c
    VencSendPic_x1f3ac:
    /*0001f3ac*/ ADD         R7, R5, #8 
    /*0001f3b0*/ LDR         R0, [R4, #56]               @ 0x38 
    /*0001f3b4*/ MOV         R1, R7 
    /*0001f3b8*/ BL          0x000000000001F3B8          @ VencGetOverLayEx [R_ARM_CALL: .text+0x134c] 
    /*0001f3bc*/ LDR         R3, [R4, #4] 
    /*0001f3c0*/ MOVW        R2, #265                    @ 0x109 
    /*0001f3c4*/ CMP         R3, R2 
    /*0001f3c8*/ CMPNE       R3, #96                     @ 0x60 
    /*0001f3cc*/ BNE         VencSendPic_x1f818
    /*0001f3d0*/ LDR         R3, [R5, #12] 
    /*0001f3d4*/ CMP         R3, #0 
    /*0001f3d8*/ BNE         VencSendPic_x1f7e0
    VencSendPic_x1f3dc:
    /*0001f3dc*/ ADD         R2, SP, #64                 @ 0x40 
    /*0001f3e0*/ MOV         R1, R4 
    /*0001f3e4*/ MOV         R0, R5 
    /*0001f3e8*/ BL          0x000000000001F3E8          @ VENC_DRV_IsVgs [R_ARM_CALL: .text+0x26140] 
    /*0001f3ec*/ CMP         R0, #0 
    /*0001f3f0*/ BNE         VencSendPic_x1f400
    /*0001f3f4*/ LDR         R3, [R5, #12] 
    /*0001f3f8*/ CMP         R3, #0 
    /*0001f3fc*/ BEQ         VencSendPic_x1f774
    VencSendPic_x1f400:
    /*0001f400*/ MOV         R3, #1 
    /*0001f404*/ STR         R3, [R6, #180]              @ 0xb4 
    /*0001f408*/ LDR         R7, [R5, #72]               @ 0x48 
    /*0001f40c*/ CMP         R7, #0 
    /*0001f410*/ BEQ         VencSendPic_x1f4f8
    /*0001f414*/ MOVW        R2, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a94] 
    /*0001f418*/ MOVT        R2, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a94] 
    /*0001f41c*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0001f420*/ MOVW        R3, #1996                   @ 0x7cc 
    /*0001f424*/ STR         R3, [SP] 
    VencSendPic_x1f428:
    /*0001f428*/ STR         R1, [SP, #4] 
    /*0001f42c*/ MOV         R0, #3 
    /*0001f430*/ LDR         R3, [PC, #3048]             @ 0x0000000000020020 
    /*0001f434*/ MOV         R1, #8 
    /*0001f438*/ MOV         R7, #0 
    /*0001f43c*/ BL          0x000000000001F43C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencSendPic_x1f440:
    /*0001f440*/ LDR         R3, [R5, #12] 
    /*0001f444*/ CMP         R3, #0 
    /*0001f448*/ BNE         VencSendPic_x1f6b0
    /*0001f44c*/ LDR         R3, [R4, #4] 
    /*0001f450*/ CMP         R3, #26 
    /*0001f454*/ BEQ         VencSendPic_x1f6c8
    VencSendPic_x1f458:
    /*0001f458*/ ADD         R0, R5, #8 
    /*0001f45c*/ BL          0x000000000001F45C          @ VencPutFrmAddInfo [R_ARM_CALL: .text+0x1320] 
    VencSendPic_x1f460:
    /*0001f460*/ ADD         R1, SP, #60                 @ 0x3c 
    /*0001f464*/ MOV         R0, R9 
    /*0001f468*/ BL          0x000000000001F468          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VencSendPic_x1f46c:
    /*0001f46c*/ MOV         R0, R7 
    /*0001f470*/ ADD         SP, SP, #92                 @ 0x5c 
    /*0001f474*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSendPic_x1f478:
    /*0001f478*/ LDR         R3, [R6, #128]              @ 0x80 
    /*0001f47c*/ CMP         R3, #1 
    /*0001f480*/ BNE         VencSendPic_x1f324
    /*0001f484*/ BL          0x000000000001F484          @ VENC_DRV_CheckSupportJpegFlash [R_ARM_CALL: .text+0x26978] 
    /*0001f488*/ LDR         R1, [R5] 
    /*0001f48c*/ CMP         R0, #0 
    /*0001f490*/ BEQ         VencSendPic_x1f328
    /*0001f494*/ LDR         R7, [R1, #256]              @ 0x100 
    /*0001f498*/ ANDS        R7, R7, #3 
    /*0001f49c*/ BNE         VencSendPic_x1f328
    /*0001f4a0*/ MOV         R3, #1920                   @ 0x780 
    /*0001f4a4*/ MOV         R1, #8 
    /*0001f4a8*/ STR         R3, [SP] 
    /*0001f4ac*/ MOVW        R2, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x889c] 
    /*0001f4b0*/ LDR         R3, [PC, #2920]             @ 0x0000000000020020 
    /*0001f4b4*/ MOVT        R2, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x889c] 
    /*0001f4b8*/ MOV         R0, #4 
    /*0001f4bc*/ BL          0x000000000001F4BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f4c0*/ ADD         R1, SP, #60                 @ 0x3c 
    /*0001f4c4*/ MOV         R0, R9 
    /*0001f4c8*/ BL          0x000000000001F4C8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001f4cc*/ B           VencSendPic_x1f46c
    VencSendPic_x1f4d0:
    /*0001f4d0*/ LDR         R3, [R6, #672]              @ 0x2a0 
    /*0001f4d4*/ CMP         R3, #1 
    /*0001f4d8*/ BNE         VencSendPic_x1f36c
    /*0001f4dc*/ LDR         R7, [R5] 
    /*0001f4e0*/ MOV         R0, R4 
    /*0001f4e4*/ MOV         R1, R7 
    /*0001f4e8*/ BL          0x000000000001E984 
    /*0001f4ec*/ CMP         R0, #1 
    /*0001f4f0*/ BNE         VencSendPic_x1f394
    /*0001f4f4*/ B           VencSendPic_x1f36c
    VencSendPic_x1f4f8:
    /*0001f4f8*/ LDR         R0, [R5] 
    /*0001f4fc*/ BL          0x000000000001F4FC          @ VencVbAdd [R_ARM_CALL: .text+0x1e2c] 
    /*0001f500*/ SUBS        SL, R0, #0 
    /*0001f504*/ BNE         VencSendPic_x1f7b4
    /*0001f508*/ LDR         R3, [R6] 
    /*0001f50c*/ ADD         R3, R3, #1 
    /*0001f510*/ STR         R3, [R6] 
    /*0001f514*/ LDR         R2, [R4, #3704]             @ 0xe78 
    /*0001f518*/ CMP         R2, #0 
    /*0001f51c*/ BLE         VencSendPic_x1f880
    /*0001f520*/ LDR         R3, [R4, #3700]             @ 0xe74 
    /*0001f524*/ MOV         R7, #0 
    /*0001f528*/ SUB         R2, R2, #1 
    /*0001f52c*/ SUBS        R3, R3, #1 
    /*0001f530*/ LDRMI       R1, [R4, #3692]             @ 0xe6c 
    /*0001f534*/ ADDMI       R3, R3, R1 
    /*0001f538*/ LDR         R1, [R4, #3688]             @ 0xe68 
    /*0001f53c*/ LDR         R1, [R1, R3, LSL #2] 
    /*0001f540*/ STR         R2, [R4, #3704]             @ 0xe78 
    /*0001f544*/ STR         R3, [R4, #3700]             @ 0xe74 
    /*0001f548*/ MOV         SL, R1 
    /*0001f54c*/ STR         R1, [SP, #36]               @ 0x24 
    VencSendPic_x1f550:
    /*0001f550*/ LDR         R3, [R4, #4] 
    /*0001f554*/ CMP         R3, #26 
    /*0001f558*/ BEQ         VencSendPic_x1faf4
    VencSendPic_x1f55c:
    /*0001f55c*/ MOV         R0, #1 
    /*0001f560*/ BL          0x000000000001F560          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001f564*/ LDR         R3, [R0, #104]              @ 0x68 
    /*0001f568*/ MOV         R0, #1 
    /*0001f56c*/ BLX         R3 
    /*0001f570*/ CMP         R0, #0 
    /*0001f574*/ BEQ         VencSendPic_x1f750
    /*0001f578*/ LDR         R3, [R4, #4] 
    /*0001f57c*/ CMP         R3, #26 
    /*0001f580*/ BEQ         VencSendPic_x1fc64
    /*0001f584*/ MOV         R3, #0 
    /*0001f588*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0001f58c*/ STR         R3, [SP, #52]               @ 0x34 
    /*0001f590*/ STR         R3, [SP, #48]               @ 0x30 
    VencSendPic_x1f594:
    /*0001f594*/ MOV         R3, #0 
    /*0001f598*/ STR         R3, [SL, #336]              @ 0x150 
    /*0001f59c*/ STR         R3, [SL, #340]              @ 0x154 
    /*0001f5a0*/ ADD         IP, SL, #352                @ 0x160 
    /*0001f5a4*/ STR         R3, [SL, #392]              @ 0x188 
    /*0001f5a8*/ ADD         R1, SP, #60                 @ 0x3c 
    /*0001f5ac*/ LDR         R0, [R5, #16] 
    /*0001f5b0*/ STR         R3, [SP, #40]               @ 0x28 
    /*0001f5b4*/ STR         R0, [SL, #344]              @ 0x158 
    /*0001f5b8*/ MOV         R0, R9 
    /*0001f5bc*/ LDR         LR, [R5, #32] 
    /*0001f5c0*/ STR         LR, [SL, #360]              @ 0x168 
    /*0001f5c4*/ LDR         LR, [R5, #20] 
    /*0001f5c8*/ STR         LR, [SL, #348]              @ 0x15c 
    /*0001f5cc*/ LDRD        R2, [R5, #24] 
    /*0001f5d0*/ STRD        R2, [IP] 
    /*0001f5d4*/ ADD         IP, SL, #368                @ 0x170 
    /*0001f5d8*/ LDRD        R2, [R5, #40]               @ 0x28 
    /*0001f5dc*/ STRD        R2, [IP] 
    /*0001f5e0*/ LDR         R2, [R5, #48]               @ 0x30 
    /*0001f5e4*/ STR         R2, [SL, #376]              @ 0x178 
    /*0001f5e8*/ LDRB        R2, [FP, #3264]             @ 0xcc0 
    /*0001f5ec*/ STR         R2, [SL, #384]              @ 0x180 
    /*0001f5f0*/ LDR         R2, [R5, #52]               @ 0x34 
    /*0001f5f4*/ STR         R2, [SL, #380]              @ 0x17c 
    /*0001f5f8*/ BL          0x000000000001F5F8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001f5fc*/ LDR         R2, [R4, #4] 
    /*0001f600*/ MOVW        R1, #265                    @ 0x109 
    /*0001f604*/ MOVW        R0, #1002                   @ 0x3ea 
    /*0001f608*/ CMP         R2, R1 
    /*0001f60c*/ CMPNE       R2, #96                     @ 0x60 
    /*0001f610*/ BIC         IP, R2, #4 
    /*0001f614*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0001f618*/ MOVEQ       R1, #1 
    /*0001f61c*/ MOVNE       R1, #0 
    /*0001f620*/ CMP         IP, R0 
    /*0001f624*/ ORREQ       R1, R1, #1 
    /*0001f628*/ CMP         R1, #0 
    /*0001f62c*/ BNE         VencSendPic_x1f6ec
    /*0001f630*/ CMP         R2, #26 
    /*0001f634*/ BEQ         VencSendPic_x1fdcc
    VencSendPic_x1f638:
    /*0001f638*/ CMP         R7, #0 
    /*0001f63c*/ BNE         VencSendPic_x1f8a0
    VencSendPic_x1f640:
    /*0001f640*/ ADD         R1, SP, #60                 @ 0x3c 
    /*0001f644*/ MOV         R0, R9 
    /*0001f648*/ BL          0x000000000001F648          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001f64c*/ LDR         R3, [R6, #132]              @ 0x84 
    /*0001f650*/ CMP         R3, #1 
    /*0001f654*/ BEQ         VencSendPic_x1fb50
    /*0001f658*/ LDR         R3, [R6, #136]              @ 0x88 
    /*0001f65c*/ CMP         R3, #0 
    /*0001f660*/ BEQ         VencSendPic_x1f670
    /*0001f664*/ MOV         R3, #0 
    /*0001f668*/ STR         R3, [R6, #136]              @ 0x88 
    VencSendPic_x1f66c:
    /*0001f66c*/ STR         R3, [R4, #16] 
    VencSendPic_x1f670:
    /*0001f670*/ MOV         R0, R9 
    /*0001f674*/ ADD         R1, SP, #60                 @ 0x3c 
    /*0001f678*/ BL          0x000000000001F678          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001f67c*/ MOV         R7, #0 
    /*0001f680*/ MOV         R0, R7 
    /*0001f684*/ ADD         SP, SP, #92                 @ 0x5c 
    /*0001f688*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSendPic_x1f68c:
    /*0001f68c*/ LDR         R3, [R6, #672]              @ 0x2a0 
    /*0001f690*/ CMP         R3, #1 
    /*0001f694*/ BNE         VencSendPic_x1f3ac
    /*0001f698*/ MOV         R1, R7 
    /*0001f69c*/ MOV         R0, R4 
    /*0001f6a0*/ BL          0x000000000001E984 
    /*0001f6a4*/ CMP         R0, #1 
    /*0001f6a8*/ BNE         VencSendPic_x1f3dc
    /*0001f6ac*/ B           VencSendPic_x1f3ac
    VencSendPic_x1f6b0:
    /*0001f6b0*/ ADD         R1, R5, #8 
    /*0001f6b4*/ LDR         R0, [R4, #56]               @ 0x38 
    /*0001f6b8*/ BL          0x000000000001F6B8          @ VencPutOverLayEx [R_ARM_CALL: .text+0x1528] 
    /*0001f6bc*/ LDR         R3, [R4, #4] 
    /*0001f6c0*/ CMP         R3, #26 
    /*0001f6c4*/ BNE         VencSendPic_x1f458
    VencSendPic_x1f6c8:
    /*0001f6c8*/ LDR         R3, [R6, #672]              @ 0x2a0 
    /*0001f6cc*/ CMP         R3, #1 
    /*0001f6d0*/ BNE         VencSendPic_x1f458
    /*0001f6d4*/ MOV         R0, R4 
    /*0001f6d8*/ LDR         R1, [R5] 
    /*0001f6dc*/ BL          0x000000000001E984 
    /*0001f6e0*/ CMP         R0, #0 
    /*0001f6e4*/ BEQ         VencSendPic_x1f460
    /*0001f6e8*/ B           VencSendPic_x1f458
    VencSendPic_x1f6ec:
    /*0001f6ec*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0001f6f0*/ MOV         R1, R5 
    /*0001f6f4*/ LDR         R0, [R4, #56]               @ 0x38 
    /*0001f6f8*/ BL          0x000000000001F6F8          @ VencSendPic2Vgs [R_ARM_CALL: .text+0x354c] 
    /*0001f6fc*/ MOV         R7, R0 
    /*0001f700*/ B           VencSendPic_x1f638
    VencSendPic_x1f704:
    /*0001f704*/ LDR         R1, [R5] 
    /*0001f708*/ MOV         R0, R4 
    /*0001f70c*/ BL          0x000000000001C298 
    /*0001f710*/ SUBS        R7, R0, #0 
    /*0001f714*/ BEQ         VencSendPic_x1f318
    /*0001f718*/ MOVW        R3, #1907                   @ 0x773 
    /*0001f71c*/ MOV         R1, #8 
    /*0001f720*/ STR         R3, [SP] 
    /*0001f724*/ MOVW        R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8864] 
    /*0001f728*/ LDR         R3, [PC, #2288]             @ 0x0000000000020020 
    /*0001f72c*/ MOVT        R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8864] 
    /*0001f730*/ MOV         R0, #3 
    /*0001f734*/ BL          0x000000000001F734          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f738*/ MOV         R0, R9 
    /*0001f73c*/ ADD         R1, SP, #60                 @ 0x3c 
    /*0001f740*/ BL          0x000000000001F740          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001f744*/ MOV         R0, R7 
    /*0001f748*/ ADD         SP, SP, #92                 @ 0x5c 
    /*0001f74c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencSendPic_x1f750:
    /*0001f750*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0001f754*/ STR         R0, [SP, #44]               @ 0x2c 
    VencSendPic_x1f758:
    /*0001f758*/ LDR         R2, [R4, #4] 
    /*0001f75c*/ CMP         R2, #26 
    /*0001f760*/ BEQ         VencSendPic_x1fa10
    VencSendPic_x1f764:
    /*0001f764*/ MOV         R3, #0 
    /*0001f768*/ STR         R3, [SP, #52]               @ 0x34 
    /*0001f76c*/ STR         R3, [SP, #48]               @ 0x30 
    /*0001f770*/ B           VencSendPic_x1f594
    VencSendPic_x1f774:
    /*0001f774*/ LDR         R1, [R5] 
    /*0001f778*/ MOV         R0, R4 
    /*0001f77c*/ BL          0x000000000001F77C          @ VencCheckVideoAddr [R_ARM_CALL: .text+0x1f1ec] 
    /*0001f780*/ SUBS        R7, R0, #0 
    /*0001f784*/ BEQ         VencSendPic_x1fb18
    /*0001f788*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0001f78c*/ MOVW        R3, #2212                   @ 0x8a4 
    /*0001f790*/ MOVW        R2, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8b5c] 
    /*0001f794*/ STR         R3, [SP] 
    /*0001f798*/ MOVT        R2, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8b5c] 
    /*0001f79c*/ LDR         R3, [PC, #2172]             @ 0x0000000000020020 
    /*0001f7a0*/ STR         R1, [SP, #4] 
    /*0001f7a4*/ MOV         R0, #4 
    /*0001f7a8*/ MOV         R1, #8 
    /*0001f7ac*/ BL          0x000000000001F7AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f7b0*/ B           VencSendPic_x1f440
    VencSendPic_x1f7b4:
    /*0001f7b4*/ MOVW        R2, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8ae0] 
    /*0001f7b8*/ MOVT        R2, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8ae0] 
    /*0001f7bc*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0001f7c0*/ MOVW        R3, #2007                   @ 0x7d7 
    /*0001f7c4*/ STR         R3, [SP] 
    VencSendPic_x1f7c8:
    /*0001f7c8*/ STR         R1, [SP, #4] 
    /*0001f7cc*/ MOV         R0, #3 
    /*0001f7d0*/ LDR         R3, [PC, #2120]             @ 0x0000000000020020 
    /*0001f7d4*/ MOV         R1, #8 
    /*0001f7d8*/ BL          0x000000000001F7D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f7dc*/ B           VencSendPic_x1f440
    VencSendPic_x1f7e0:
    /*0001f7e0*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0001f7e4*/ MOVW        R3, #1965                   @ 0x7ad 
    /*0001f7e8*/ MOVW        R2, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x896c] 
    /*0001f7ec*/ STR         R3, [SP] 
    /*0001f7f0*/ MOVT        R2, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x896c] 
    /*0001f7f4*/ LDR         R3, [PC, #2084]             @ 0x0000000000020020 
    /*0001f7f8*/ STR         R1, [SP, #4] 
    /*0001f7fc*/ MOV         R0, #3 
    /*0001f800*/ MOV         R1, #8 
    /*0001f804*/ BL          0x000000000001F804          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f808*/ MOV         R1, R7 
    /*0001f80c*/ LDR         R0, [R4, #56]               @ 0x38 
    /*0001f810*/ BL          0x000000000001F810          @ VencPutOverLayEx [R_ARM_CALL: .text+0x1528] 
    /*0001f814*/ LDR         R3, [R4, #4] 
    VencSendPic_x1f818:
    /*0001f818*/ MOVW        R1, #1006                   @ 0x3ee 
    /*0001f81c*/ CMP         R3, R1 
    /*0001f820*/ LDR         R2, [R5, #12] 
    /*0001f824*/ BEQ         VencSendPic_x1fbc8
    VencSendPic_x1f828:
    /*0001f828*/ CMP         R2, #0 
    /*0001f82c*/ BEQ         VencSendPic_x1f3dc
    /*0001f830*/ LDR         R3, [R4, #4] 
    /*0001f834*/ CMP         R3, #26 
    /*0001f838*/ BNE         VencSendPic_x1f3dc
    /*0001f83c*/ LDR         R3, [R6, #672]              @ 0x2a0 
    /*0001f840*/ CMP         R3, #1 
    /*0001f844*/ BNE         VencSendPic_x1f3dc
    /*0001f848*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0001f84c*/ MOVW        R3, #1981                   @ 0x7bd 
    /*0001f850*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a30] 
    /*0001f854*/ STR         R3, [SP] 
    /*0001f858*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a30] 
    /*0001f85c*/ LDR         R3, [PC, #1980]             @ 0x0000000000020020 
    /*0001f860*/ STR         R1, [SP, #4] 
    /*0001f864*/ MOV         R0, #3 
    /*0001f868*/ MOV         R1, #8 
    /*0001f86c*/ BL          0x000000000001F86C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f870*/ MOV         R1, R7 
    /*0001f874*/ LDR         R0, [R4, #56]               @ 0x38 
    /*0001f878*/ BL          0x000000000001F878          @ VencPutOverLayEx [R_ARM_CALL: .text+0x1528] 
    /*0001f87c*/ B           VencSendPic_x1f3dc
    VencSendPic_x1f880:
    /*0001f880*/ MOVW        R0, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8b98] 
    /*0001f884*/ MOV         R2, #2016                   @ 0x7e0 
    /*0001f888*/ MOVT        R0, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8b98] 
    /*0001f88c*/ LDR         R1, [PC, #1932]             @ 0x0000000000020020 
    /*0001f890*/ STR         SL, [SP, #36]               @ 0x24 
    /*0001f894*/ MVN         R7, #0 
    /*0001f898*/ BL          0x000000000001F898          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0001f89c*/ B           VencSendPic_x1f550
    VencSendPic_x1f8a0:
    /*0001f8a0*/ LDR         R0, [R5] 
    /*0001f8a4*/ MOVW        R3, #2156                   @ 0x86c 
    /*0001f8a8*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0001f8ac*/ MOVW        R2, #0                      @ .LC69 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8b14] 
    /*0001f8b0*/ MOVT        R2, #0                      @ .LC69 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8b14] 
    /*0001f8b4*/ LDRD        SL, [R0, #240]              @ 0xf0 
    /*0001f8b8*/ MOV         R0, #3 
    /*0001f8bc*/ STR         R1, [SP, #4] 
    /*0001f8c0*/ MOV         R1, #8 
    /*0001f8c4*/ STR         R3, [SP] 
    /*0001f8c8*/ STRD        SL, [SP, #8] 
    /*0001f8cc*/ LDR         R3, [PC, #1868]             @ 0x0000000000020020 
    /*0001f8d0*/ BL          0x000000000001F8D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f8d4*/ LDR         R0, [R5] 
    /*0001f8d8*/ BL          0x000000000001F8D8          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*0001f8dc*/ CMP         R0, #0 
    /*0001f8e0*/ BNE         VencSendPic_x1fb9c
    VencSendPic_x1f8e4:
    /*0001f8e4*/ LDR         R3, [R6, #4] 
    /*0001f8e8*/ ADD         R1, SP, #60                 @ 0x3c 
    /*0001f8ec*/ MOV         R0, R9 
    /*0001f8f0*/ ADD         R3, R3, #1 
    /*0001f8f4*/ STR         R3, [R6, #4] 
    /*0001f8f8*/ BL          0x000000000001F8F8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001f8fc*/ LDR         R3, [R4, #3704]             @ 0xe78 
    /*0001f900*/ LDR         R1, [R4, #3692]             @ 0xe6c 
    /*0001f904*/ CMP         R3, R1 
    /*0001f908*/ BLT         VencSendPic_x1fb74
    /*0001f90c*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0001f910*/ MOVW        R3, #2169                   @ 0x879 
    /*0001f914*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8590] 
    /*0001f918*/ STR         R3, [SP] 
    /*0001f91c*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8590] 
    /*0001f920*/ LDR         R3, [PC, #1784]             @ 0x0000000000020020 
    /*0001f924*/ STR         R1, [SP, #4] 
    /*0001f928*/ MOV         R0, #3 
    /*0001f92c*/ MOV         R1, #8 
    /*0001f930*/ BL          0x000000000001F930          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencSendPic_x1f934:
    /*0001f934*/ ADD         R0, R4, #12352              @ 0x3040 
    /*0001f938*/ ADD         R0, R0, #56                 @ 0x38 
    /*0001f93c*/ BL          0x000000000001F93C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0001f940*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0001f944*/ CMP         R3, #0 
    /*0001f948*/ BEQ         VencSendPic_x1f984
    /*0001f94c*/ ADD         R2, R4, #4096               @ 0x1000 
    /*0001f950*/ LDR         R3, [R2, #2336]             @ 0x920 
    /*0001f954*/ LDR         R0, [R2, #2324]             @ 0x914 
    /*0001f958*/ CMP         R3, R0 
    /*0001f95c*/ BGE         VencSendPic_x1fcdc
    /*0001f960*/ LDR         R1, [R2, #2328]             @ 0x918 
    /*0001f964*/ ADD         R3, R3, #1 
    /*0001f968*/ LDR         IP, [SP, #44]               @ 0x2c 
    /*0001f96c*/ SUBS        R1, R1, #1 
    /*0001f970*/ ADDMI       R1, R1, R0 
    /*0001f974*/ LDR         R0, [R2, #2320]             @ 0x910 
    /*0001f978*/ STR         IP, [R0, R1, LSL #2] 
    /*0001f97c*/ STR         R3, [R2, #2336]             @ 0x920 
    /*0001f980*/ STR         R1, [R2, #2328]             @ 0x918 
    VencSendPic_x1f984:
    /*0001f984*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0001f988*/ CMP         R3, #0 
    /*0001f98c*/ BEQ         VencSendPic_x1f440
    /*0001f990*/ LDR         R3, [R8, #1016]             @ 0x3f8 
    /*0001f994*/ LDR         R1, [R8, #1004]             @ 0x3ec 
    /*0001f998*/ CMP         R3, R1 
    /*0001f99c*/ BGE         VencSendPic_x1fd08
    /*0001f9a0*/ LDR         R2, [R8, #1008]             @ 0x3f0 
    /*0001f9a4*/ ADD         R3, R3, #1 
    /*0001f9a8*/ LDR         R0, [SP, #48]               @ 0x30 
    /*0001f9ac*/ SUBS        R2, R2, #1 
    /*0001f9b0*/ ADDMI       R2, R2, R1 
    /*0001f9b4*/ LDR         R1, [R8, #1000]             @ 0x3e8 
    /*0001f9b8*/ STR         R0, [R1, R2, LSL #2] 
    /*0001f9bc*/ STR         R3, [R8, #1016]             @ 0x3f8 
    /*0001f9c0*/ STR         R2, [R8, #1008]             @ 0x3f0 
    VencSendPic_x1f9c4:
    /*0001f9c4*/ LDR         R3, [SP, #52]               @ 0x34 
    /*0001f9c8*/ CMP         R3, #0 
    /*0001f9cc*/ BEQ         VencSendPic_x1f440
    /*0001f9d0*/ LDR         R3, [R8, #3744]             @ 0xea0 
    /*0001f9d4*/ LDR         R1, [R8, #3732]             @ 0xe94 
    /*0001f9d8*/ CMP         R3, R1 
    /*0001f9dc*/ BGE         VencSendPic_x1fd34
    /*0001f9e0*/ LDR         R2, [R8, #3736]             @ 0xe98 
    /*0001f9e4*/ ADD         R3, R3, #1 
    /*0001f9e8*/ LDR         R0, [SP, #52]               @ 0x34 
    /*0001f9ec*/ SUBS        R2, R2, #1 
    /*0001f9f0*/ ADDMI       R2, R2, R1 
    /*0001f9f4*/ LDR         R1, [R8, #3728]             @ 0xe90 
    /*0001f9f8*/ STR         R0, [R1, R2, LSL #2] 
    /*0001f9fc*/ STR         R3, [R8, #3744]             @ 0xea0 
    /*0001fa00*/ STR         R2, [R8, #3736]             @ 0xe98 
    /*0001fa04*/ B           VencSendPic_x1f440
    VencSendPic_x1fa08:
    /*0001fa08*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0001fa0c*/ STR         R0, [SP, #44]               @ 0x2c 
    VencSendPic_x1fa10:
    /*0001fa10*/ LDRB        R2, [SP, #68]               @ 0x44 
    /*0001fa14*/ CMP         R2, #0 
    /*0001fa18*/ BEQ         VencSendPic_x1f764
    /*0001fa1c*/ LDR         R0, [R8, #1016]             @ 0x3f8 
    /*0001fa20*/ CMP         R0, #0 
    /*0001fa24*/ BLE         VencSendPic_x1fe54
    /*0001fa28*/ LDR         R1, [R8, #1012]             @ 0x3f4 
    /*0001fa2c*/ MOV         R7, #0 
    /*0001fa30*/ SUB         R0, R0, #1 
    /*0001fa34*/ SUBS        R1, R1, #1 
    /*0001fa38*/ LDRMI       R3, [R8, #1004]             @ 0x3ec 
    /*0001fa3c*/ ADDMI       R1, R1, R3 
    /*0001fa40*/ LDR         R3, [R8, #1000]             @ 0x3e8 
    /*0001fa44*/ LDR         R3, [R3, R1, LSL #2] 
    /*0001fa48*/ STR         R0, [R8, #1016]             @ 0x3f8 
    /*0001fa4c*/ STR         R1, [R8, #1012]             @ 0x3f4 
    VencSendPic_x1fa50:
    /*0001fa50*/ MOV         R1, R3 
    /*0001fa54*/ CMP         R2, #2 
    /*0001fa58*/ STR         R3, [SP, #48]               @ 0x30 
    /*0001fa5c*/ MOV         R3, #1 
    /*0001fa60*/ STR         R3, [R1, #376]              @ 0x178 
    /*0001fa64*/ MOV         R3, #0 
    /*0001fa68*/ STR         R3, [R1, #336]              @ 0x150 
    /*0001fa6c*/ STR         R3, [R1, #340]              @ 0x154 
    /*0001fa70*/ STR         R3, [R1, #344]              @ 0x158 
    /*0001fa74*/ STR         R3, [R1, #360]              @ 0x168 
    /*0001fa78*/ LDRB        R2, [FP, #3264]             @ 0xcc0 
    /*0001fa7c*/ STRNE       R3, [SP, #52]               @ 0x34 
    /*0001fa80*/ STR         R3, [R1, #380]              @ 0x17c 
    /*0001fa84*/ STR         R2, [R1, #384]              @ 0x180 
    /*0001fa88*/ BNE         VencSendPic_x1f594
    /*0001fa8c*/ LDR         R2, [R8, #3744]             @ 0xea0 
    /*0001fa90*/ CMP         R2, R3 
    /*0001fa94*/ BLE         VencSendPic_x1fedc
    /*0001fa98*/ LDR         R3, [R8, #3740]             @ 0xe9c 
    /*0001fa9c*/ MOV         R7, #0 
    /*0001faa0*/ SUB         R2, R2, #1 
    /*0001faa4*/ SUBS        R3, R3, #1 
    /*0001faa8*/ LDRMI       R1, [R8, #3732]             @ 0xe94 
    /*0001faac*/ ADDMI       R3, R3, R1 
    /*0001fab0*/ LDR         R1, [R8, #3728]             @ 0xe90 
    /*0001fab4*/ LDR         R1, [R1, R3, LSL #2] 
    /*0001fab8*/ STR         R2, [R8, #3744]             @ 0xea0 
    /*0001fabc*/ STR         R3, [R8, #3740]             @ 0xe9c 
    /*0001fac0*/ STR         R1, [SP, #52]               @ 0x34 
    VencSendPic_x1fac4:
    /*0001fac4*/ LDR         R1, [SP, #52]               @ 0x34 
    /*0001fac8*/ MOV         R3, #0 
    /*0001facc*/ MOV         R2, #2 
    /*0001fad0*/ STR         R3, [R1, #336]              @ 0x150 
    /*0001fad4*/ STR         R3, [R1, #340]              @ 0x154 
    /*0001fad8*/ STR         R3, [R1, #344]              @ 0x158 
    /*0001fadc*/ STR         R3, [R1, #360]              @ 0x168 
    /*0001fae0*/ STR         R3, [R1, #380]              @ 0x17c 
    /*0001fae4*/ MOV         R3, #1 
    /*0001fae8*/ STR         R2, [R1, #384]              @ 0x180 
    /*0001faec*/ STR         R3, [R1, #376]              @ 0x178 
    /*0001faf0*/ B           VencSendPic_x1f594
    VencSendPic_x1faf4:
    /*0001faf4*/ LDRB        R3, [FP, #3264]             @ 0xcc0 
    /*0001faf8*/ CMP         R3, #0 
    /*0001fafc*/ BEQ         VencSendPic_x1f55c
    /*0001fb00*/ ADD         R1, R4, #35840              @ 0x8c00 
    /*0001fb04*/ MOV         R2, #20 
    /*0001fb08*/ ADD         R1, R1, #192                @ 0xc0 
    /*0001fb0c*/ ADD         R0, SP, #68                 @ 0x44 
    /*0001fb10*/ BL          0x000000000001FB10          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001fb14*/ B           VencSendPic_x1f55c
    VencSendPic_x1fb18:
    /*0001fb18*/ MOV         R1, R5 
    /*0001fb1c*/ MOV         R0, R4 
    /*0001fb20*/ BL          0x000000000001FB20          @ VENC_NO2VGS_SendPic [R_ARM_CALL: .text+0x1f000] 
    /*0001fb24*/ SUBS        R7, R0, #0 
    /*0001fb28*/ BNE         VencSendPic_x1f440
    /*0001fb2c*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xc0] 
    /*0001fb30*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xc0] 
    /*0001fb34*/ LDR         R3, [R5, #12] 
    /*0001fb38*/ CMP         R3, #1 
    /*0001fb3c*/ BEQ         VencSendPic_x1fe7c
    VencSendPic_x1fb40:
    /*0001fb40*/ ADD         R1, SP, #60                 @ 0x3c 
    /*0001fb44*/ MOV         R0, R9 
    /*0001fb48*/ BL          0x000000000001FB48          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001fb4c*/ B           VencSendPic_x1f640
    VencSendPic_x1fb50:
    /*0001fb50*/ LDR         R3, [R4, #4] 
    /*0001fb54*/ CMP         R3, #26 
    /*0001fb58*/ BEQ         VencSendPic_x1fc0c
    VencSendPic_x1fb5c:
    /*0001fb5c*/ LDR         R3, [R6, #136]              @ 0x88 
    /*0001fb60*/ SUB         R3, R3, #1 
    /*0001fb64*/ STR         R3, [R6, #136]              @ 0x88 
    /*0001fb68*/ CMP         R3, #0 
    /*0001fb6c*/ BEQ         VencSendPic_x1f66c
    /*0001fb70*/ B           VencSendPic_x1f670
    VencSendPic_x1fb74:
    /*0001fb74*/ LDR         R2, [R4, #3696]             @ 0xe70 
    /*0001fb78*/ ADD         R3, R3, #1 
    /*0001fb7c*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001fb80*/ SUBS        R2, R2, #1 
    /*0001fb84*/ ADDMI       R2, R2, R1 
    /*0001fb88*/ LDR         R1, [R4, #3688]             @ 0xe68 
    /*0001fb8c*/ STR         R0, [R1, R2, LSL #2] 
    /*0001fb90*/ STR         R3, [R4, #3704]             @ 0xe78 
    /*0001fb94*/ STR         R2, [R4, #3696]             @ 0xe70 
    /*0001fb98*/ B           VencSendPic_x1f934
    VencSendPic_x1fb9c:
    /*0001fb9c*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0001fba0*/ MOVW        R3, #2161                   @ 0x871 
    /*0001fba4*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8590] 
    /*0001fba8*/ STR         R3, [SP] 
    /*0001fbac*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8590] 
    /*0001fbb0*/ LDR         R3, [PC, #1128]             @ 0x0000000000020020 
    /*0001fbb4*/ STR         R1, [SP, #4] 
    /*0001fbb8*/ MOV         R0, #3 
    /*0001fbbc*/ MOV         R1, #8 
    /*0001fbc0*/ BL          0x000000000001FBC0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001fbc4*/ B           VencSendPic_x1f8e4
    VencSendPic_x1fbc8:
    /*0001fbc8*/ CMP         R2, #0 
    /*0001fbcc*/ BEQ         VencSendPic_x1f3dc
    /*0001fbd0*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0001fbd4*/ MOVW        R3, #1972                   @ 0x7b4 
    /*0001fbd8*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x89d8] 
    /*0001fbdc*/ STR         R3, [SP] 
    /*0001fbe0*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x89d8] 
    /*0001fbe4*/ LDR         R3, [PC, #1076]             @ 0x0000000000020020 
    /*0001fbe8*/ STR         R1, [SP, #4] 
    /*0001fbec*/ MOV         R0, #3 
    /*0001fbf0*/ MOV         R1, #8 
    /*0001fbf4*/ BL          0x000000000001FBF4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001fbf8*/ MOV         R1, R7 
    /*0001fbfc*/ LDR         R0, [R4, #56]               @ 0x38 
    /*0001fc00*/ BL          0x000000000001FC00          @ VencPutOverLayEx [R_ARM_CALL: .text+0x1528] 
    /*0001fc04*/ LDR         R2, [R5, #12] 
    /*0001fc08*/ B           VencSendPic_x1f828
    VencSendPic_x1fc0c:
    /*0001fc0c*/ LDR         R3, [R6, #672]              @ 0x2a0 
    /*0001fc10*/ CMP         R3, #1 
    /*0001fc14*/ BNE         VencSendPic_x1fb5c
    /*0001fc18*/ MOV         R0, R4 
    /*0001fc1c*/ BL          0x000000000001C348 
    /*0001fc20*/ CMP         R0, #0 
    /*0001fc24*/ BEQ         VencSendPic_x1f670
    /*0001fc28*/ B           VencSendPic_x1fb5c
    VencSendPic_x1fc2c:
    /*0001fc2c*/ MOVW        R3, #1945                   @ 0x799 
    /*0001fc30*/ MOV         R1, #8 
    /*0001fc34*/ STR         R3, [SP] 
    /*0001fc38*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8934] 
    /*0001fc3c*/ LDR         R3, [PC, #988]              @ 0x0000000000020020 
    /*0001fc40*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8934] 
    /*0001fc44*/ MOV         R0, #3 
    /*0001fc48*/ MOVW        R7, #32781                  @ 0x800d 
    /*0001fc4c*/ BL          0x000000000001FC4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001fc50*/ ADD         R1, SP, #60                 @ 0x3c 
    /*0001fc54*/ MOV         R0, R9 
    /*0001fc58*/ MOVT        R7, #40968                  @ 0xa008 
    /*0001fc5c*/ BL          0x000000000001FC5C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001fc60*/ B           VencSendPic_x1f46c
    VencSendPic_x1fc64:
    /*0001fc64*/ LDR         R0, [R8, #3768]             @ 0xeb8 
    /*0001fc68*/ CMP         R0, #0 
    /*0001fc6c*/ BEQ         VencSendPic_x1fa08
    /*0001fc70*/ ADD         R2, R4, #4096               @ 0x1000 
    /*0001fc74*/ LDR         R3, [R2, #2336]             @ 0x920 
    /*0001fc78*/ CMP         R3, #0 
    /*0001fc7c*/ BLE         VencSendPic_x1feb8
    /*0001fc80*/ LDR         R1, [R2, #2332]             @ 0x91c 
    /*0001fc84*/ MOV         R7, #0 
    /*0001fc88*/ LDR         IP, [R2, #2320]             @ 0x910 
    /*0001fc8c*/ SUBS        R1, R1, #1 
    /*0001fc90*/ LDRMI       R0, [R2, #2324]             @ 0x914 
    /*0001fc94*/ ADDMI       R1, R1, R0 
    /*0001fc98*/ SUB         R0, R3, #1 
    /*0001fc9c*/ LDR         R3, [IP, R1, LSL #2] 
    /*0001fca0*/ STR         R0, [R2, #2336]             @ 0x920 
    /*0001fca4*/ STR         R1, [R2, #2332]             @ 0x91c 
    /*0001fca8*/ STR         R3, [SP, #44]               @ 0x2c 
    VencSendPic_x1fcac:
    /*0001fcac*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*0001fcb0*/ MOV         R2, #0 
    /*0001fcb4*/ MOV         R1, #1 
    /*0001fcb8*/ STR         R2, [R0, #336]              @ 0x150 
    /*0001fcbc*/ STR         R2, [R0, #340]              @ 0x154 
    /*0001fcc0*/ STR         R2, [R0, #344]              @ 0x158 
    /*0001fcc4*/ STR         R2, [R0, #360]              @ 0x168 
    /*0001fcc8*/ STR         R1, [R0, #376]              @ 0x178 
    /*0001fccc*/ LDRB        R1, [FP, #3264]             @ 0xcc0 
    /*0001fcd0*/ STR         R2, [R0, #380]              @ 0x17c 
    /*0001fcd4*/ STR         R1, [R0, #384]              @ 0x180 
    /*0001fcd8*/ B           VencSendPic_x1f758
    VencSendPic_x1fcdc:
    /*0001fcdc*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0001fce0*/ MOVW        R3, #2181                   @ 0x885 
    /*0001fce4*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8590] 
    /*0001fce8*/ STR         R3, [SP] 
    /*0001fcec*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8590] 
    /*0001fcf0*/ LDR         R3, [PC, #808]              @ 0x0000000000020020 
    /*0001fcf4*/ STR         R1, [SP, #4] 
    /*0001fcf8*/ MOV         R0, #3 
    /*0001fcfc*/ MOV         R1, #8 
    /*0001fd00*/ BL          0x000000000001FD00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001fd04*/ B           VencSendPic_x1f984
    VencSendPic_x1fd08:
    /*0001fd08*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0001fd0c*/ MOVW        R3, #2190                   @ 0x88e 
    /*0001fd10*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8590] 
    /*0001fd14*/ STR         R3, [SP] 
    /*0001fd18*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8590] 
    /*0001fd1c*/ LDR         R3, [PC, #764]              @ 0x0000000000020020 
    /*0001fd20*/ STR         R1, [SP, #4] 
    /*0001fd24*/ MOV         R0, #3 
    /*0001fd28*/ MOV         R1, #8 
    /*0001fd2c*/ BL          0x000000000001FD2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001fd30*/ B           VencSendPic_x1f9c4
    VencSendPic_x1fd34:
    /*0001fd34*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0001fd38*/ MOVW        R3, #2198                   @ 0x896 
    /*0001fd3c*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8590] 
    /*0001fd40*/ STR         R3, [SP] 
    /*0001fd44*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8590] 
    /*0001fd48*/ B           VencSendPic_x1f7c8
    VencSendPic_x1fd4c:
    /*0001fd4c*/ LDR         R3, [R8, #4044]             @ 0xfcc 
    /*0001fd50*/ MOVW        R1, #1898                   @ 0x76a 
    /*0001fd54*/ STR         R1, [SP] 
    /*0001fd58*/ MOVW        R2, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8828] 
    /*0001fd5c*/ ADD         R3, R3, #1 
    /*0001fd60*/ STR         R3, [R8, #4044]             @ 0xfcc 
    /*0001fd64*/ LDR         IP, [R4, #56]               @ 0x38 
    /*0001fd68*/ MOVT        R2, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8828] 
    /*0001fd6c*/ LDR         R3, [PC, #684]              @ 0x0000000000020020 
    /*0001fd70*/ MOV         R1, #8 
    /*0001fd74*/ MOV         R0, #4 
    /*0001fd78*/ MOVW        R7, #32781                  @ 0x800d 
    /*0001fd7c*/ STR         IP, [SP, #4] 
    /*0001fd80*/ MOVT        R7, #40968                  @ 0xa008 
    /*0001fd84*/ BL          0x000000000001FD84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001fd88*/ ADD         R1, SP, #60                 @ 0x3c 
    /*0001fd8c*/ MOV         R0, R9 
    /*0001fd90*/ BL          0x000000000001FD90          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001fd94*/ B           VencSendPic_x1f46c
    VencSendPic_x1fd98:
    /*0001fd98*/ MOVW        R3, #1930                   @ 0x78a 
    /*0001fd9c*/ MOV         R1, #8 
    /*0001fda0*/ STR         R3, [SP] 
    /*0001fda4*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x88fc] 
    /*0001fda8*/ LDR         R3, [PC, #624]              @ 0x0000000000020020 
    /*0001fdac*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x88fc] 
    /*0001fdb0*/ MOV         R0, #3 
    /*0001fdb4*/ MVN         R7, #0 
    /*0001fdb8*/ BL          0x000000000001FDB8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001fdbc*/ ADD         R1, SP, #60                 @ 0x3c 
    /*0001fdc0*/ MOV         R0, R9 
    /*0001fdc4*/ BL          0x000000000001FDC4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001fdc8*/ B           VencSendPic_x1f46c
    VencSendPic_x1fdcc:
    /*0001fdcc*/ LDR         LR, [SP, #52]               @ 0x34 
    /*0001fdd0*/ MOV         R3, R1 
    /*0001fdd4*/ LDR         R0, [R4, #56]               @ 0x38 
    /*0001fdd8*/ ADD         R2, SP, #68                 @ 0x44 
    /*0001fddc*/ LDR         IP, [SP, #64]               @ 0x40 
    /*0001fde0*/ STR         LR, [SP, #16] 
    /*0001fde4*/ LDR         LR, [SP, #48]               @ 0x30 
    /*0001fde8*/ STR         R2, [SP, #28] 
    /*0001fdec*/ STR         R1, [SP, #20] 
    /*0001fdf0*/ STR         LR, [SP, #8] 
    /*0001fdf4*/ LDR         LR, [SP, #44]               @ 0x2c 
    /*0001fdf8*/ STR         R1, [SP, #12] 
    /*0001fdfc*/ STR         R1, [SP, #4] 
    /*0001fe00*/ MOV         R1, R5 
    /*0001fe04*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0001fe08*/ STR         LR, [SP] 
    /*0001fe0c*/ STR         IP, [SP, #24] 
    /*0001fe10*/ BL          0x000000000001FE10          @ VencSendPic2VgsByJob [R_ARM_CALL: .text+0x4ffc] 
    /*0001fe14*/ SUBS        R7, R0, #0 
    /*0001fe18*/ BNE         VencSendPic_x1f8a0
    /*0001fe1c*/ LDR         R3, [SP, #64]               @ 0x40 
    /*0001fe20*/ CMP         R3, #0 
    /*0001fe24*/ BNE         VencSendPic_x1fe34
    /*0001fe28*/ LDR         R3, [R5, #12] 
    /*0001fe2c*/ CMP         R3, #0 
    /*0001fe30*/ BEQ         VencSendPic_x1ff18
    VencSendPic_x1fe34:
    /*0001fe34*/ LDR         R0, [R5] 
    /*0001fe38*/ BL          0x000000000001FE38          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*0001fe3c*/ CMP         R0, #0 
    /*0001fe40*/ BNE         VencSendPic_x1ff00
    /*0001fe44*/ LDR         R3, [R6, #4] 
    /*0001fe48*/ ADD         R3, R3, #1 
    /*0001fe4c*/ STR         R3, [R6, #4] 
    /*0001fe50*/ B           VencSendPic_x1f640
    VencSendPic_x1fe54:
    /*0001fe54*/ MOVW        R2, #2051                   @ 0x803 
    /*0001fe58*/ MOVW        R0, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8bf8] 
    /*0001fe5c*/ LDR         R1, [PC, #444]              @ 0x0000000000020020 
    /*0001fe60*/ MOVT        R0, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8bf8] 
    /*0001fe64*/ STR         R3, [SP, #40]               @ 0x28 
    /*0001fe68*/ MVN         R7, #0 
    /*0001fe6c*/ BL          0x000000000001FE6C          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0001fe70*/ LDRB        R2, [SP, #68]               @ 0x44 
    /*0001fe74*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0001fe78*/ B           VencSendPic_x1fa50
    VencSendPic_x1fe7c:
    /*0001fe7c*/ LDR         R3, [R4, #3724]             @ 0xe8c 
    /*0001fe80*/ CMP         R3, #1 
    /*0001fe84*/ BNE         VencSendPic_x1fb40
    /*0001fe88*/ LDR         R3, [R6, #1128]             @ 0x468 
    /*0001fe8c*/ CMP         R3, #0 
    /*0001fe90*/ BNE         VencSendPic_x1fb40
    /*0001fe94*/ ADD         R1, SP, #60                 @ 0x3c 
    /*0001fe98*/ MOV         R0, R9 
    /*0001fe9c*/ BL          0x000000000001FE9C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001fea0*/ LDR         R3, [R5, #12] 
    /*0001fea4*/ CMP         R3, #1 
    /*0001fea8*/ BNE         VencSendPic_x1f640
    /*0001feac*/ LDR         R0, [R4, #8] 
    /*0001feb0*/ BL          0x000000000001FEB0          @ VencQuickSchedule [R_ARM_CALL: .text+0x1f84] 
    /*0001feb4*/ B           VencSendPic_x1f640
    VencSendPic_x1feb8:
    /*0001feb8*/ MOVW        R0, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8bc4] 
    /*0001febc*/ MOVW        R2, #2031                   @ 0x7ef 
    /*0001fec0*/ MOVT        R0, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8bc4] 
    /*0001fec4*/ LDR         R1, [PC, #340]              @ 0x0000000000020020 
    /*0001fec8*/ BL          0x000000000001FEC8          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0001fecc*/ MVN         R7, #0 
    /*0001fed0*/ STR         SL, [SP, #44]               @ 0x2c 
    /*0001fed4*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0001fed8*/ B           VencSendPic_x1fcac
    VencSendPic_x1fedc:
    /*0001fedc*/ MOVW        R0, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c28] 
    /*0001fee0*/ MOVW        R2, #2068                   @ 0x814 
    /*0001fee4*/ MOVT        R0, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c28] 
    /*0001fee8*/ LDR         R1, [PC, #304]              @ 0x0000000000020020 
    /*0001feec*/ BL          0x000000000001FEEC          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0001fef0*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0001fef4*/ MVN         R7, #0 
    /*0001fef8*/ STR         R3, [SP, #52]               @ 0x34 
    /*0001fefc*/ B           VencSendPic_x1fac4
    VencSendPic_x1ff00:
    /*0001ff00*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0001ff04*/ MOV         R3, #2144                   @ 0x860 
    /*0001ff08*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8590] 
    /*0001ff0c*/ STR         R3, [SP] 
    /*0001ff10*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8590] 
    /*0001ff14*/ B           VencSendPic_x1f428
    VencSendPic_x1ff18:
    /*0001ff18*/ ADD         R1, SP, #60                 @ 0x3c 
    /*0001ff1c*/ MOV         R0, R9 
    /*0001ff20*/ BL          0x000000000001FF20          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001ff24*/ LDR         R2, [R4, #3704]             @ 0xe78 
    /*0001ff28*/ LDR         R1, [R4, #3692]             @ 0xe6c 
    /*0001ff2c*/ CMP         R2, R1 
    /*0001ff30*/ BGE         VencSendPic_x1ffd4
    /*0001ff34*/ LDR         R3, [R4, #3696]             @ 0xe70 
    /*0001ff38*/ ADD         R2, R2, #1 
    /*0001ff3c*/ LDR         IP, [R4, #3688]             @ 0xe68 
    /*0001ff40*/ MOV         R0, R4 
    /*0001ff44*/ SUBS        R3, R3, #1 
    /*0001ff48*/ LDR         LR, [SP, #36]               @ 0x24 
    /*0001ff4c*/ ADDMI       R3, R3, R1 
    /*0001ff50*/ MOV         R1, R5 
    /*0001ff54*/ STR         LR, [IP, R3, LSL #2] 
    /*0001ff58*/ STR         R2, [R4, #3704]             @ 0xe78 
    /*0001ff5c*/ STR         R3, [R4, #3696]             @ 0xe70 
    /*0001ff60*/ BL          0x000000000001FF60          @ VENC_NO2VGS_SendPic [R_ARM_CALL: .text+0x1f000] 
    /*0001ff64*/ SUBS        R7, R0, #0 
    /*0001ff68*/ BEQ         VencSendPic_x1ffec
    /*0001ff6c*/ LDR         R3, [R4, #4] 
    /*0001ff70*/ CMP         R3, #26 
    /*0001ff74*/ BEQ         VencSendPic_x1fffc
    VencSendPic_x1ff78:
    /*0001ff78*/ ADD         R0, R5, #8 
    /*0001ff7c*/ BL          0x000000000001FF7C          @ VencPutFrmAddInfo [R_ARM_CALL: .text+0x1320] 
    VencSendPic_x1ff80:
    /*0001ff80*/ LDR         R0, [R5] 
    /*0001ff84*/ BL          0x000000000001FF84          @ VencVbSub [R_ARM_CALL: .text+0x1dec] 
    /*0001ff88*/ CMP         R0, #0 
    /*0001ff8c*/ BEQ         VencSendPic_x1ffb8
    /*0001ff90*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0001ff94*/ MOVW        R3, #2130                   @ 0x852 
    /*0001ff98*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8590] 
    /*0001ff9c*/ STR         R3, [SP] 
    /*0001ffa0*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8590] 
    /*0001ffa4*/ LDR         R3, [PC, #116]              @ 0x0000000000020020 
    /*0001ffa8*/ STR         R1, [SP, #4] 
    /*0001ffac*/ MOV         R0, #3 
    /*0001ffb0*/ MOV         R1, #8 
    /*0001ffb4*/ BL          0x000000000001FFB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencSendPic_x1ffb8:
    /*0001ffb8*/ LDR         R3, [R6, #4] 
    /*0001ffbc*/ ADD         R1, SP, #60                 @ 0x3c 
    /*0001ffc0*/ MOV         R0, R9 
    /*0001ffc4*/ ADD         R3, R3, #1 
    /*0001ffc8*/ STR         R3, [R6, #4] 
    /*0001ffcc*/ BL          0x000000000001FFCC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001ffd0*/ B           VencSendPic_x1f46c
    VencSendPic_x1ffd4:
    /*0001ffd4*/ LDR         R1, [R4, #56]               @ 0x38 
    /*0001ffd8*/ MOVW        R3, #2114                   @ 0x842 
    /*0001ffdc*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c58] 
    /*0001ffe0*/ STR         R3, [SP] 
    /*0001ffe4*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c58] 
    /*0001ffe8*/ B           VencSendPic_x1f7c8
    VencSendPic_x1ffec:
    /*0001ffec*/ ADD         R1, SP, #60                 @ 0x3c 
    /*0001fff0*/ MOV         R0, R9 
    /*0001fff4*/ BL          0x000000000001FFF4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001fff8*/ B           VencSendPic_x1fe34
    VencSendPic_x1fffc:
    /*0001fffc*/ LDR         R3, [R6, #672]              @ 0x2a0 
    /*00020000*/ CMP         R3, #1 
    /*00020004*/ BNE         VencSendPic_x1ff78
    /*00020008*/ LDR         R1, [R5] 
    /*0002000c*/ MOV         R0, R4 
    /*00020010*/ BL          0x000000000001E984 
    /*00020014*/ CMP         R0, #0 
    /*00020018*/ BEQ         VencSendPic_x1ff80
    /*0002001c*/ B           VencSendPic_x1ff78
    /*00020020*/ @           <UNDEFINED> instruction: 0x00000fbc 
FUNC_END VencSendPic


FUNC_BEGIN VencCheckGetAddInfoBuf
    /*00020024*/ LDR         R2, [R0, #4] 
    /*00020028*/ CMP         R2, #26 
    /*0002002c*/ BEQ         VencCheckGetAddInfoBuf_x20038
    VencCheckGetAddInfoBuf_x20030:
    /*00020030*/ MOV         R0, #1 
    /*00020034*/ BX          LR 
    VencCheckGetAddInfoBuf_x20038:
    /*00020038*/ ADD         R3, R0, #12288              @ 0x3000 
    /*0002003c*/ LDR         R3, [R3, #672]              @ 0x2a0 
    /*00020040*/ CMP         R3, #1 
    /*00020044*/ BNE         VencCheckGetAddInfoBuf_x20030
    /*00020048*/ B           0x000000000001E984 
FUNC_END VencCheckGetAddInfoBuf


FUNC_BEGIN IsFinshRcvOnePic
    /*0002004c*/ LDR         R2, [R0, #4] 
    /*00020050*/ CMP         R2, #26 
    /*00020054*/ BEQ         IsFinshRcvOnePic_x20060
    IsFinshRcvOnePic_x20058:
    /*00020058*/ MOV         R0, #1 
    /*0002005c*/ BX          LR 
    IsFinshRcvOnePic_x20060:
    /*00020060*/ ADD         R3, R0, #12288              @ 0x3000 
    /*00020064*/ LDR         R3, [R3, #672]              @ 0x2a0 
    /*00020068*/ CMP         R3, #1 
    /*0002006c*/ BNE         IsFinshRcvOnePic_x20058
    /*00020070*/ B           0x000000000001C348 
FUNC_END IsFinshRcvOnePic


FUNC_BEGIN HevcCheckPixelFormat
    /*00020074*/ CMP         R0, #26 
    /*00020078*/ CMPNE       R0, #39                     @ 0x27 
    /*0002007c*/ MOVNE       R3, #1 
    /*00020080*/ MOVEQ       R3, #0 
    /*00020084*/ BNE         HevcCheckPixelFormat_x20090
    /*00020088*/ MOV         R0, R3 
    /*0002008c*/ BX          LR 
    HevcCheckPixelFormat_x20090:
    /*00020090*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00020094*/ SUB         SP, SP, #12 
    /*00020098*/ MOVW        R3, #2290                   @ 0x8f2 
    /*0002009c*/ MOV         R1, #8 
    /*000200a0*/ STR         R0, [SP, #4] 
    /*000200a4*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c9c] 
    /*000200a8*/ STR         R3, [SP] 
    /*000200ac*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c9c] 
    /*000200b0*/ LDR         R3, [PC, #16]               @ 0x00000000000200c8 
    /*000200b4*/ MOV         R0, #3 
    /*000200b8*/ BL          0x00000000000200B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000200bc*/ MVN         R0, #0 
    /*000200c0*/ ADD         SP, SP, #12 
    /*000200c4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000200c8*/ ANDEQ       R0, R0, R8, ASR #31 
FUNC_END HevcCheckPixelFormat


FUNC_BEGIN AvcCheckPixelFormat
    /*000200cc*/ CMP         R0, #26 
    /*000200d0*/ CMPNE       R0, #39                     @ 0x27 
    /*000200d4*/ MOVNE       R3, #1 
    /*000200d8*/ MOVEQ       R3, #0 
    /*000200dc*/ BNE         AvcCheckPixelFormat_x200e8
    /*000200e0*/ MOV         R0, R3 
    /*000200e4*/ BX          LR 
    AvcCheckPixelFormat_x200e8:
    /*000200e8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000200ec*/ SUB         SP, SP, #12 
    /*000200f0*/ MOVW        R3, #2302                   @ 0x8fe 
    /*000200f4*/ MOV         R1, #8 
    /*000200f8*/ STR         R0, [SP, #4] 
    /*000200fc*/ MOVW        R2, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8cd8] 
    /*00020100*/ STR         R3, [SP] 
    /*00020104*/ MOVT        R2, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8cd8] 
    /*00020108*/ LDR         R3, [PC, #16]               @ 0x0000000000020120 
    /*0002010c*/ MOV         R0, #3 
    /*00020110*/ BL          0x0000000000020110          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020114*/ MVN         R0, #0 
    /*00020118*/ ADD         SP, SP, #12 
    /*0002011c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00020120*/ ANDEQ       R0, R0, R0, ROR #31 
FUNC_END AvcCheckPixelFormat


FUNC_BEGIN JpegCheckPixelFormat
    /*00020124*/ SUB         R3, R0, #25 
    /*00020128*/ CMP         R0, #39                     @ 0x27 
    /*0002012c*/ CMPNE       R3, #1 
    /*00020130*/ MOVHI       R3, #1 
    /*00020134*/ MOVLS       R3, #0 
    /*00020138*/ BHI         JpegCheckPixelFormat_x20144
    /*0002013c*/ MOV         R0, R3 
    /*00020140*/ BX          LR 
    JpegCheckPixelFormat_x20144:
    /*00020144*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00020148*/ SUB         SP, SP, #12 
    /*0002014c*/ MOVW        R3, #2316                   @ 0x90c 
    /*00020150*/ MOV         R1, #8 
    /*00020154*/ STR         R0, [SP, #4] 
    /*00020158*/ MOVW        R2, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8d14] 
    /*0002015c*/ STR         R3, [SP] 
    /*00020160*/ MOVT        R2, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8d14] 
    /*00020164*/ LDR         R3, [PC, #16]               @ 0x000000000002017c 
    /*00020168*/ MOV         R0, #3 
    /*0002016c*/ BL          0x000000000002016C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020170*/ MVN         R0, #0 
    /*00020174*/ ADD         SP, SP, #12 
    /*00020178*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0002017c*/ STRDEQ      R0, [R0], -R4 
FUNC_END JpegCheckPixelFormat


FUNC_BEGIN ProresCheckPixelFormat
    /*00020180*/ CMP         R0, #25 
    /*00020184*/ BNE         ProresCheckPixelFormat_x20190
    /*00020188*/ MOV         R0, #0 
    /*0002018c*/ BX          LR 
    ProresCheckPixelFormat_x20190:
    /*00020190*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00020194*/ SUB         SP, SP, #12 
    /*00020198*/ MOVW        R3, #2328                   @ 0x918 
    /*0002019c*/ MOV         R1, #8 
    /*000201a0*/ STR         R0, [SP, #4] 
    /*000201a4*/ MOVW        R2, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8d58] 
    /*000201a8*/ STR         R3, [SP] 
    /*000201ac*/ MOVT        R2, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8d58] 
    /*000201b0*/ LDR         R3, [PC, #16]               @ 0x00000000000201c8 
    /*000201b4*/ MOV         R0, #3 
    /*000201b8*/ BL          0x00000000000201B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000201bc*/ MVN         R0, #0 
    /*000201c0*/ ADD         SP, SP, #12 
    /*000201c4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000201c8*/ ANDEQ       R1, R0, IP 
FUNC_END ProresCheckPixelFormat


FUNC_BEGIN VencCheckPixelFormat
    /*000201cc*/ MOVW        R3, #265                    @ 0x109 
    /*000201d0*/ CMP         R0, R3 
    /*000201d4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000201d8*/ SUB         SP, SP, #12 
    /*000201dc*/ BEQ         VencCheckPixelFormat_x20288
    /*000201e0*/ BLS         VencCheckPixelFormat_x20238
    /*000201e4*/ MOVW        R3, #1002                   @ 0x3ea 
    /*000201e8*/ CMP         R0, R3 
    /*000201ec*/ BEQ         VencCheckPixelFormat_x202f8
    /*000201f0*/ MOVW        R3, #1006                   @ 0x3ee 
    /*000201f4*/ CMP         R0, R3 
    /*000201f8*/ BNE         VencCheckPixelFormat_x202c8
    /*000201fc*/ CMP         R1, #25 
    /*00020200*/ MOVEQ       R0, #0 
    /*00020204*/ BEQ         VencCheckPixelFormat_x20230
    /*00020208*/ STR         R1, [SP, #4] 
    /*0002020c*/ MOVW        R3, #2328                   @ 0x918 
    /*00020210*/ MOVW        R2, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8d58] 
    /*00020214*/ STR         R3, [SP] 
    /*00020218*/ MOVT        R2, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8d58] 
    /*0002021c*/ LDR         R3, [PC, #280]              @ 0x000000000002033c 
    /*00020220*/ MOV         R1, #8 
    /*00020224*/ MOV         R0, #3 
    /*00020228*/ BL          0x0000000000020228          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002022c*/ MVN         R0, #0 
    VencCheckPixelFormat_x20230:
    /*00020230*/ ADD         SP, SP, #12 
    /*00020234*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VencCheckPixelFormat_x20238:
    /*00020238*/ CMP         R0, #26 
    /*0002023c*/ BEQ         VencCheckPixelFormat_x202f8
    /*00020240*/ CMP         R0, #96                     @ 0x60 
    /*00020244*/ BNE         VencCheckPixelFormat_x202c8
    /*00020248*/ CMP         R1, #26 
    /*0002024c*/ CMPNE       R1, #39                     @ 0x27 
    /*00020250*/ MOVNE       R0, #1 
    /*00020254*/ MOVEQ       R0, #0 
    /*00020258*/ BEQ         VencCheckPixelFormat_x20230
    /*0002025c*/ STR         R1, [SP, #4] 
    /*00020260*/ MOVW        R3, #2302                   @ 0x8fe 
    /*00020264*/ MOVW        R2, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8cd8] 
    /*00020268*/ STR         R3, [SP] 
    /*0002026c*/ MOVT        R2, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8cd8] 
    /*00020270*/ LDR         R3, [PC, #200]              @ 0x0000000000020340 
    /*00020274*/ MOV         R1, #8 
    /*00020278*/ MOV         R0, #3 
    /*0002027c*/ BL          0x000000000002027C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020280*/ MVN         R0, #0 
    /*00020284*/ B           VencCheckPixelFormat_x20230
    VencCheckPixelFormat_x20288:
    /*00020288*/ CMP         R1, #26 
    /*0002028c*/ CMPNE       R1, #39                     @ 0x27 
    /*00020290*/ MOVNE       R0, #1 
    /*00020294*/ MOVEQ       R0, #0 
    /*00020298*/ BEQ         VencCheckPixelFormat_x20230
    /*0002029c*/ STR         R1, [SP, #4] 
    /*000202a0*/ MOVW        R3, #2290                   @ 0x8f2 
    /*000202a4*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c9c] 
    /*000202a8*/ STR         R3, [SP] 
    /*000202ac*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c9c] 
    /*000202b0*/ LDR         R3, [PC, #140]              @ 0x0000000000020344 
    /*000202b4*/ MOV         R1, #8 
    /*000202b8*/ MOV         R0, #3 
    /*000202bc*/ BL          0x00000000000202BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000202c0*/ MVN         R0, #0 
    /*000202c4*/ B           VencCheckPixelFormat_x20230
    VencCheckPixelFormat_x202c8:
    /*000202c8*/ STR         R0, [SP, #4] 
    /*000202cc*/ MOVW        R3, #2357                   @ 0x935 
    /*000202d0*/ MOV         R1, #8 
    /*000202d4*/ STR         R3, [SP] 
    /*000202d8*/ MOVW        R2, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8d98] 
    /*000202dc*/ LDR         R3, [PC, #100]              @ 0x0000000000020348 
    /*000202e0*/ MOVT        R2, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8d98] 
    /*000202e4*/ MOV         R0, #3 
    /*000202e8*/ BL          0x00000000000202E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000202ec*/ MVN         R0, #0 
    /*000202f0*/ ADD         SP, SP, #12 
    /*000202f4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VencCheckPixelFormat_x202f8:
    /*000202f8*/ SUB         R0, R1, #25 
    /*000202fc*/ CMP         R1, #39                     @ 0x27 
    /*00020300*/ CMPNE       R0, #1 
    /*00020304*/ MOVHI       R0, #1 
    /*00020308*/ MOVLS       R0, #0 
    /*0002030c*/ BLS         VencCheckPixelFormat_x20230
    /*00020310*/ STR         R1, [SP, #4] 
    /*00020314*/ MOVW        R3, #2316                   @ 0x90c 
    /*00020318*/ MOVW        R2, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8d14] 
    /*0002031c*/ STR         R3, [SP] 
    /*00020320*/ MOVT        R2, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8d14] 
    /*00020324*/ LDR         R3, [PC, #32]               @ 0x000000000002034c 
    /*00020328*/ MOV         R1, #8 
    /*0002032c*/ MOV         R0, #3 
    /*00020330*/ BL          0x0000000000020330          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020334*/ MVN         R0, #0 
    /*00020338*/ B           VencCheckPixelFormat_x20230
    /*0002033c*/ ANDEQ       R1, R0, IP 
    /*00020340*/ ANDEQ       R0, R0, R0, ROR #31 
    /*00020344*/ ANDEQ       R0, R0, R8, ASR #31 
    /*00020348*/ ANDEQ       R1, R0, R4, LSR #32 
    /*0002034c*/ STRDEQ      R0, [R0], -R4 
FUNC_END VencCheckPixelFormat


FUNC_BEGIN VencCheckVideoBuff
    /*00020350*/ PUSH        {R4, LR} 
    /*00020354*/ MOV         R4, R0 
    /*00020358*/ LDR         R3, [R0, #20] 
    /*0002035c*/ SUB         SP, SP, #8 
    /*00020360*/ CMP         R3, #3 
    /*00020364*/ CMPNE       R3, #0 
    /*00020368*/ BEQ         VencCheckVideoBuff_x203c0
    /*0002036c*/ CMP         R3, #5 
    /*00020370*/ BEQ         VencCheckVideoBuff_x2043c
    /*00020374*/ MOV         R0, #1 
    /*00020378*/ BL          0x0000000000020378          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002037c*/ LDRD        R2, [R4, #72]               @ 0x48 
    /*00020380*/ LDR         R1, [R0, #84]               @ 0x54 
    /*00020384*/ LDR         R0, [R4, #328]              @ 0x148 
    /*00020388*/ BLX         R1 
    /*0002038c*/ CMP         R0, #0 
    /*00020390*/ BEQ         VencCheckVideoBuff_x20414
    /*00020394*/ MOV         R0, #1 
    /*00020398*/ BL          0x0000000000020398          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002039c*/ LDRD        R2, [R4, #80]               @ 0x50 
    /*000203a0*/ LDR         R1, [R0, #84]               @ 0x54 
    /*000203a4*/ LDR         R0, [R4, #328]              @ 0x148 
    /*000203a8*/ BLX         R1 
    /*000203ac*/ CMP         R0, #0 
    /*000203b0*/ BEQ         VencCheckVideoBuff_x20414
    VencCheckVideoBuff_x203b4:
    /*000203b4*/ MOV         R0, #0 
    VencCheckVideoBuff_x203b8:
    /*000203b8*/ ADD         SP, SP, #8 
    /*000203bc*/ POP         {R4, PC} 
    VencCheckVideoBuff_x203c0:
    /*000203c0*/ MOV         R0, #1 
    /*000203c4*/ BL          0x00000000000203C4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000203c8*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*000203cc*/ LDR         R1, [R0, #84]               @ 0x54 
    /*000203d0*/ LDR         R0, [R4, #328]              @ 0x148 
    /*000203d4*/ BLX         R1 
    /*000203d8*/ CMP         R0, #0 
    /*000203dc*/ BEQ         VencCheckVideoBuff_x20400
    /*000203e0*/ MOV         R0, #1 
    /*000203e4*/ BL          0x00000000000203E4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000203e8*/ LDRD        R2, [R4, #128]              @ 0x80 
    /*000203ec*/ LDR         R1, [R0, #84]               @ 0x54 
    /*000203f0*/ LDR         R0, [R4, #328]              @ 0x148 
    /*000203f4*/ BLX         R1 
    /*000203f8*/ CMP         R0, #0 
    /*000203fc*/ BNE         VencCheckVideoBuff_x203b4
    VencCheckVideoBuff_x20400:
    /*00020400*/ MOVW        R3, #2372                   @ 0x944 
    /*00020404*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8dcc] 
    /*00020408*/ STR         R3, [SP] 
    /*0002040c*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8dcc] 
    /*00020410*/ B           VencCheckVideoBuff_x20424
    VencCheckVideoBuff_x20414:
    /*00020414*/ MOVW        R2, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8dfc] 
    /*00020418*/ MOVT        R2, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8dfc] 
    /*0002041c*/ MOVW        R3, #2382                   @ 0x94e 
    /*00020420*/ STR         R3, [SP] 
    VencCheckVideoBuff_x20424:
    /*00020424*/ LDR         R3, [PC, #60]               @ 0x0000000000020468 
    /*00020428*/ MOV         R1, #8 
    /*0002042c*/ MOV         R0, #3 
    /*00020430*/ BL          0x0000000000020430          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020434*/ MVN         R0, #0 
    /*00020438*/ B           VencCheckVideoBuff_x203b8
    VencCheckVideoBuff_x2043c:
    /*0002043c*/ STR         R3, [SP, #4] 
    /*00020440*/ MOVW        R2, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8e4c] 
    /*00020444*/ MOVW        R3, #2389                   @ 0x955 
    /*00020448*/ MOVT        R2, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8e4c] 
    /*0002044c*/ STR         R3, [SP] 
    /*00020450*/ MOV         R1, #8 
    /*00020454*/ LDR         R3, [PC, #12]               @ 0x0000000000020468 
    /*00020458*/ MOV         R0, #3 
    /*0002045c*/ BL          0x000000000002045C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020460*/ MVN         R0, #0 
    /*00020464*/ B           VencCheckVideoBuff_x203b8
    /*00020468*/ ANDEQ       R1, R0, IP, LSR R0 
FUNC_END VencCheckVideoBuff


FUNC_BEGIN VencCheckDynamicRange
    /*0002046c*/ PUSH        {R4, R5, LR} 
    /*00020470*/ SUB         SP, SP, #12 
    /*00020474*/ MOV         R5, R0 
    /*00020478*/ MOV         R4, R1 
    /*0002047c*/ BL          0x000000000002047C          @ VENC_DRV_CheckDynamicRange [R_ARM_CALL: .text+0x26898] 
    /*00020480*/ CMP         R0, #0 
    /*00020484*/ BNE         VencCheckDynamicRange_x204e4
    /*00020488*/ ADD         R2, R5, #32768              @ 0x8000 
    /*0002048c*/ LDR         R3, [R2, #3316]             @ 0xcf4 
    /*00020490*/ CMP         R4, R3 
    /*00020494*/ CMPNE       R3, #6 
    /*00020498*/ BEQ         VencCheckDynamicRange_x204a8
    /*0002049c*/ CMP         R3, #0 
    /*000204a0*/ CMPNE       R4, #0 
    /*000204a4*/ BEQ         VencCheckDynamicRange_x204b4
    VencCheckDynamicRange_x204a8:
    /*000204a8*/ STR         R4, [R2, #3316]             @ 0xcf4 
    VencCheckDynamicRange_x204ac:
    /*000204ac*/ ADD         SP, SP, #12 
    /*000204b0*/ POP         {R4, R5, PC} 
    VencCheckDynamicRange_x204b4:
    /*000204b4*/ LDR         R1, [R5, #56]               @ 0x38 
    /*000204b8*/ MOVW        R3, #2407                   @ 0x967 
    /*000204bc*/ MOVW        R2, #0                      @ .LC84 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8e88] 
    /*000204c0*/ STR         R3, [SP] 
    /*000204c4*/ MOVT        R2, #0                      @ .LC84 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8e88] 
    /*000204c8*/ LDR         R3, [PC, #28]               @ 0x00000000000204ec 
    /*000204cc*/ STR         R1, [SP, #4] 
    /*000204d0*/ MOV         R0, #3 
    /*000204d4*/ MOV         R1, #8 
    /*000204d8*/ BL          0x00000000000204D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000204dc*/ MVN         R0, #0 
    /*000204e0*/ B           VencCheckDynamicRange_x204ac
    VencCheckDynamicRange_x204e4:
    /*000204e4*/ MVN         R0, #0 
    /*000204e8*/ B           VencCheckDynamicRange_x204ac
    /*000204ec*/ ANDEQ       R1, R0, R0, ASR R0 
FUNC_END VencCheckDynamicRange


FUNC_BEGIN VencGetLastTimeRef
    /*000204f0*/ LDR         R2, [R0, #4] 
    /*000204f4*/ MOV         R3, R0 
    /*000204f8*/ CMP         R2, #26 
    /*000204fc*/ BEQ         VencGetLastTimeRef_x20508
    VencGetLastTimeRef_x20500:
    /*00020500*/ LDR         R0, [R3, #32] 
    /*00020504*/ BX          LR 
    VencGetLastTimeRef_x20508:
    /*00020508*/ ADD         R2, R0, #12288              @ 0x3000 
    /*0002050c*/ LDR         R2, [R2, #672]              @ 0x2a0 
    /*00020510*/ CMP         R2, #1 
    /*00020514*/ BNE         VencGetLastTimeRef_x20500
    /*00020518*/ B           0x000000000001E998 
FUNC_END VencGetLastTimeRef


FUNC_BEGIN VencCheckVideoInfo
    /*0002051c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00020520*/ MOV         R4, R0 
    /*00020524*/ SUB         SP, SP, #28 
    /*00020528*/ MOV         R0, #1 
    /*0002052c*/ MOV         R5, R1 
    /*00020530*/ BL          0x0000000000020530          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00020534*/ LDR         R3, [R0, #36]               @ 0x24 
    /*00020538*/ LDRD        R0, [R4, #120]              @ 0x78 
    /*0002053c*/ BLX         R3 
    /*00020540*/ CMN         R0, #1 
    /*00020544*/ BEQ         VencCheckVideoInfo_x20800
    /*00020548*/ MOV         R6, R0 
    /*0002054c*/ MOV         R0, #1 
    /*00020550*/ BL          0x0000000000020550          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00020554*/ LDR         R3, [R0, #68]               @ 0x44 
    /*00020558*/ MOV         R0, R6 
    /*0002055c*/ BLX         R3 
    /*00020560*/ CMP         R0, #0 
    /*00020564*/ BEQ         VencCheckVideoInfo_x20794
    /*00020568*/ LDR         R3, [R4, #20] 
    /*0002056c*/ CMP         R3, #4 
    /*00020570*/ BHI         VencCheckVideoInfo_x207ac
    /*00020574*/ LDR         R3, [R4, #16] 
    /*00020578*/ CMP         R3, #3 
    /*0002057c*/ BHI         VencCheckVideoInfo_x207e4
    /*00020580*/ LDR         R3, [R4, #8] 
    /*00020584*/ SUB         R3, R3, #1 
    /*00020588*/ CMP         R3, #3 
    /*0002058c*/ BHI         VencCheckVideoInfo_x20818
    /*00020590*/ LDR         R7, [R5, #4] 
    /*00020594*/ ADD         R6, R5, #12288              @ 0x3000 
    /*00020598*/ CMP         R7, #26 
    /*0002059c*/ BEQ         VencCheckVideoInfo_x2064c
    VencCheckVideoInfo_x205a0:
    /*000205a0*/ LDR         R3, [R4] 
    /*000205a4*/ LDR         R1, [R6, #148]              @ 0x94 
    /*000205a8*/ LDR         R0, [R4, #4] 
    /*000205ac*/ CMP         R3, R1 
    /*000205b0*/ LDR         R2, [R6, #152]              @ 0x98 
    /*000205b4*/ BLT         VencCheckVideoInfo_x20704
    /*000205b8*/ CMP         R0, R2 
    /*000205bc*/ BLT         VencCheckVideoInfo_x20704
    VencCheckVideoInfo_x205c0:
    /*000205c0*/ MOV         R0, R7 
    /*000205c4*/ LDR         R1, [R4, #12] 
    /*000205c8*/ BL          0x00000000000205C8          @ VencCheckPixelFormat [R_ARM_CALL: .text+0x201cc] 
    /*000205cc*/ CMP         R0, #0 
    /*000205d0*/ BNE         VencCheckVideoInfo_x20754
    /*000205d4*/ MOV         R0, R4 
    /*000205d8*/ BL          0x00000000000205D8          @ VencCheckVideoBuff [R_ARM_CALL: .text+0x20350] 
    /*000205dc*/ CMP         R0, #0 
    /*000205e0*/ LDRNE       R1, [R5, #56]               @ 0x38 
    /*000205e4*/ MOVWNE      R3, #2535                   @ 0x9e7 
    /*000205e8*/ BNE         VencCheckVideoInfo_x206d4
    /*000205ec*/ LDR         R3, [R5, #4] 
    /*000205f0*/ CMP         R3, #26 
    /*000205f4*/ BEQ         VencCheckVideoInfo_x206b0
    VencCheckVideoInfo_x205f8:
    /*000205f8*/ LDR         R0, [R5, #32] 
    VencCheckVideoInfo_x205fc:
    /*000205fc*/ LDR         R1, [R4, #232]              @ 0xe8 
    /*00020600*/ BL          0x0000000000020600          @ VencCheckTimeRef [R_ARM_CALL: .text+0x5fe8] 
    /*00020604*/ CMP         R0, #0 
    /*00020608*/ LDRNE       R1, [R5, #56]               @ 0x38 
    /*0002060c*/ MOVWNE      R3, #2545                   @ 0x9f1 
    /*00020610*/ BNE         VencCheckVideoInfo_x206d4
    /*00020614*/ LDR         R1, [R4, #28] 
    /*00020618*/ MOV         R0, R5 
    /*0002061c*/ BL          0x000000000002061C          @ VENC_DRV_CheckColorGamut [R_ARM_CALL: .text+0x268f0] 
    /*00020620*/ CMP         R0, #0 
    /*00020624*/ LDRNE       R1, [R5, #56]               @ 0x38 
    /*00020628*/ MOVWNE      R3, #2552                   @ 0x9f8 
    /*0002062c*/ BNE         VencCheckVideoInfo_x206d4
    /*00020630*/ LDR         R1, [R4, #24] 
    /*00020634*/ MOV         R0, R5 
    /*00020638*/ BL          0x0000000000020638          @ VencCheckDynamicRange [R_ARM_CALL: .text+0x2046c] 
    /*0002063c*/ CMP         R0, #0 
    /*00020640*/ BNE         VencCheckVideoInfo_x206cc
    VencCheckVideoInfo_x20644:
    /*00020644*/ ADD         SP, SP, #28 
    /*00020648*/ POP         {R4, R5, R6, R7, PC} 
    VencCheckVideoInfo_x2064c:
    /*0002064c*/ LDR         R3, [R6, #672]              @ 0x2a0 
    /*00020650*/ CMP         R3, #1 
    /*00020654*/ BNE         VencCheckVideoInfo_x205a0
    /*00020658*/ MOV         R1, R4 
    /*0002065c*/ MOV         R0, R5 
    /*00020660*/ BL          0x0000000000020660          @ VencSearchPicQueueIndexByReso [R_ARM_CALL: .text+0x1e700] 
    /*00020664*/ CMP         R0, #3 
    /*00020668*/ BLS         VencCheckVideoInfo_x205c0
    /*0002066c*/ LDR         R1, [R5, #56]               @ 0x38 
    /*00020670*/ MOVW        R3, #2503                   @ 0x9c7 
    /*00020674*/ LDR         R0, [R4, #4] 
    /*00020678*/ MOVW        R2, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9110] 
    /*0002067c*/ LDR         IP, [R4] 
    /*00020680*/ MOVT        R2, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9110] 
    /*00020684*/ STR         R1, [SP, #4] 
    /*00020688*/ MOV         R1, #8 
    /*0002068c*/ STR         R0, [SP, #12] 
    /*00020690*/ MOV         R0, #3 
    /*00020694*/ STR         R3, [SP] 
    /*00020698*/ STR         IP, [SP, #8] 
    /*0002069c*/ LDR         R3, [PC, #396]              @ 0x0000000000020830 
    /*000206a0*/ BL          0x00000000000206A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000206a4*/ MOVW        R0, #32771                  @ 0x8003 
    /*000206a8*/ MOVT        R0, #40968                  @ 0xa008 
    /*000206ac*/ B           VencCheckVideoInfo_x20644
    VencCheckVideoInfo_x206b0:
    /*000206b0*/ LDR         R3, [R6, #672]              @ 0x2a0 
    /*000206b4*/ CMP         R3, #1 
    /*000206b8*/ BNE         VencCheckVideoInfo_x205f8
    /*000206bc*/ MOV         R1, R4 
    /*000206c0*/ MOV         R0, R5 
    /*000206c4*/ BL          0x000000000001E998 
    /*000206c8*/ B           VencCheckVideoInfo_x205fc
    VencCheckVideoInfo_x206cc:
    /*000206cc*/ LDR         R1, [R5, #56]               @ 0x38 
    /*000206d0*/ MOVW        R3, #2559                   @ 0x9ff 
    VencCheckVideoInfo_x206d4:
    /*000206d4*/ MOVW        R2, #0                      @ .LC91 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x90d0] 
    /*000206d8*/ MOVT        R2, #0                      @ .LC91 [R_ARM_MOVT_ABS: .rodata.str1.4+0x90d0] 
    /*000206dc*/ STR         R3, [SP] 
    VencCheckVideoInfo_x206e0:
    /*000206e0*/ STR         R1, [SP, #4] 
    /*000206e4*/ MOV         R0, #3 
    /*000206e8*/ LDR         R3, [PC, #320]              @ 0x0000000000020830 
    /*000206ec*/ MOV         R1, #8 
    /*000206f0*/ BL          0x00000000000206F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000206f4*/ MOVW        R0, #32771                  @ 0x8003 
    /*000206f8*/ MOVT        R0, #40968                  @ 0xa008 
    /*000206fc*/ ADD         SP, SP, #28 
    /*00020700*/ POP         {R4, R5, R6, R7, PC} 
    VencCheckVideoInfo_x20704:
    /*00020704*/ LDR         LR, [R5, #56]               @ 0x38 
    /*00020708*/ ADD         R5, R5, #8192               @ 0x2000 
    /*0002070c*/ MOVW        IP, #2516                   @ 0x9d4 
    /*00020710*/ STR         R2, [SP, #20] 
    /*00020714*/ STR         R1, [SP, #16] 
    /*00020718*/ MOVW        R2, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9070] 
    /*0002071c*/ STR         R0, [SP, #12] 
    /*00020720*/ MOVT        R2, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9070] 
    /*00020724*/ STR         R3, [SP, #8] 
    /*00020728*/ MOV         R1, #8 
    /*0002072c*/ LDR         R3, [PC, #252]              @ 0x0000000000020830 
    /*00020730*/ MOV         R0, #3 
    /*00020734*/ STM         SP, {IP, LR} 
    /*00020738*/ BL          0x0000000000020738          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002073c*/ LDR         R3, [R5, #4020]             @ 0xfb4 
    /*00020740*/ MOVW        R0, #32771                  @ 0x8003 
    /*00020744*/ MOVT        R0, #40968                  @ 0xa008 
    /*00020748*/ ADD         R3, R3, #1 
    /*0002074c*/ STR         R3, [R5, #4020]             @ 0xfb4 
    /*00020750*/ B           VencCheckVideoInfo_x20644
    VencCheckVideoInfo_x20754:
    /*00020754*/ LDR         R3, [R6, #52]               @ 0x34 
    /*00020758*/ MOV         R1, #2528                   @ 0x9e0 
    /*0002075c*/ STR         R1, [SP] 
    /*00020760*/ MOVW        R2, #0                      @ .LC91 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x90d0] 
    /*00020764*/ ADD         R3, R3, #1 
    /*00020768*/ STR         R3, [R6, #52]               @ 0x34 
    /*0002076c*/ LDR         IP, [R5, #56]               @ 0x38 
    /*00020770*/ MOVT        R2, #0                      @ .LC91 [R_ARM_MOVT_ABS: .rodata.str1.4+0x90d0] 
    /*00020774*/ LDR         R3, [PC, #180]              @ 0x0000000000020830 
    /*00020778*/ MOV         R1, #8 
    /*0002077c*/ MOV         R0, #3 
    /*00020780*/ STR         IP, [SP, #4] 
    /*00020784*/ BL          0x0000000000020784          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020788*/ MOVW        R0, #32771                  @ 0x8003 
    /*0002078c*/ MOVT        R0, #40968                  @ 0xa008 
    /*00020790*/ B           VencCheckVideoInfo_x20644
    VencCheckVideoInfo_x20794:
    /*00020794*/ LDR         R1, [R5, #56]               @ 0x38 
    /*00020798*/ MOVW        R3, #2468                   @ 0x9a4 
    /*0002079c*/ MOVW        R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8f40] 
    /*000207a0*/ STR         R3, [SP] 
    /*000207a4*/ MOVT        R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8f40] 
    /*000207a8*/ B           VencCheckVideoInfo_x206e0
    VencCheckVideoInfo_x207ac:
    /*000207ac*/ MOVW        R2, #0                      @ .LC87 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8f98] 
    /*000207b0*/ MOVT        R2, #0                      @ .LC87 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8f98] 
    /*000207b4*/ LDR         R1, [R5, #56]               @ 0x38 
    /*000207b8*/ MOVW        R0, #2475                   @ 0x9ab 
    /*000207bc*/ STR         R3, [SP, #8] 
    /*000207c0*/ STR         R0, [SP] 
    VencCheckVideoInfo_x207c4:
    /*000207c4*/ STR         R1, [SP, #4] 
    /*000207c8*/ MOV         R0, #3 
    /*000207cc*/ MOV         R1, #8 
    /*000207d0*/ LDR         R3, [PC, #88]               @ 0x0000000000020830 
    /*000207d4*/ BL          0x00000000000207D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000207d8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000207dc*/ MOVT        R0, #40968                  @ 0xa008 
    /*000207e0*/ B           VencCheckVideoInfo_x20644
    VencCheckVideoInfo_x207e4:
    /*000207e4*/ LDR         R1, [R5, #56]               @ 0x38 
    /*000207e8*/ MOVW        R0, #2482                   @ 0x9b2 
    /*000207ec*/ MOVW        R2, #0                      @ .LC88 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8fe4] 
    /*000207f0*/ STR         R3, [SP, #8] 
    /*000207f4*/ STR         R0, [SP] 
    /*000207f8*/ MOVT        R2, #0                      @ .LC88 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8fe4] 
    /*000207fc*/ B           VencCheckVideoInfo_x207c4
    VencCheckVideoInfo_x20800:
    /*00020800*/ LDR         R1, [R5, #56]               @ 0x38 
    /*00020804*/ MOVW        R3, #2461                   @ 0x99d 
    /*00020808*/ MOVW        R2, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8ef0] 
    /*0002080c*/ STR         R3, [SP] 
    /*00020810*/ MOVT        R2, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8ef0] 
    /*00020814*/ B           VencCheckVideoInfo_x206e0
    VencCheckVideoInfo_x20818:
    /*00020818*/ LDR         R1, [R5, #56]               @ 0x38 
    /*0002081c*/ MOVW        R3, #2491                   @ 0x9bb 
    /*00020820*/ MOVW        R2, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9030] 
    /*00020824*/ STR         R3, [SP] 
    /*00020828*/ MOVT        R2, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9030] 
    /*0002082c*/ B           VencCheckVideoInfo_x206e0
    /*00020830*/ ANDEQ       R1, R0, R8, RRX 
FUNC_END VencCheckVideoInfo


FUNC_BEGIN VencCheckLowDelayInfo
    /*00020834*/ LDR         R3, [R0, #4] 
    /*00020838*/ MOVW        R2, #1002                   @ 0x3ea 
    /*0002083c*/ CMP         R3, R2 
    /*00020840*/ BEQ         VencCheckLowDelayInfo_x208e8
    /*00020844*/ CMP         R3, #26 
    /*00020848*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002084c*/ SUB         SP, SP, #20 
    /*00020850*/ BEQ         VencCheckLowDelayInfo_x20880
    /*00020854*/ MOVW        R2, #265                    @ 0x109 
    /*00020858*/ CMP         R3, #96                     @ 0x60 
    /*0002085c*/ CMPNE       R3, R2 
    /*00020860*/ BNE         VencCheckLowDelayInfo_x208f0
    /*00020864*/ ADD         R3, R0, #12288              @ 0x3000 
    /*00020868*/ LDR         R3, [R3, #716]              @ 0x2cc 
    /*0002086c*/ CMP         R3, #4 
    /*00020870*/ BEQ         VencCheckLowDelayInfo_x20924
    VencCheckLowDelayInfo_x20874:
    /*00020874*/ MOV         R0, #0 
    VencCheckLowDelayInfo_x20878:
    /*00020878*/ ADD         SP, SP, #20 
    /*0002087c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VencCheckLowDelayInfo_x20880:
    /*00020880*/ ADD         R3, R0, #12288              @ 0x3000 
    /*00020884*/ LDR         R3, [R3, #672]              @ 0x2a0 
    /*00020888*/ CMP         R3, #0 
    /*0002088c*/ BNE         VencCheckLowDelayInfo_x20874
    /*00020890*/ ADD         R3, R0, #8192               @ 0x2000 
    /*00020894*/ LDR         R3, [R3, #3768]             @ 0xeb8 
    /*00020898*/ CMP         R3, #0 
    /*0002089c*/ BNE         VencCheckLowDelayInfo_x208b0
    /*000208a0*/ ADD         R3, R0, #32768              @ 0x8000 
    /*000208a4*/ LDRB        R3, [R3, #3264]             @ 0xcc0 
    /*000208a8*/ CMP         R3, #0 
    /*000208ac*/ BEQ         VencCheckLowDelayInfo_x20874
    VencCheckLowDelayInfo_x208b0:
    /*000208b0*/ LDR         R3, [R0, #56]               @ 0x38 
    /*000208b4*/ MOV         R1, #0 
    /*000208b8*/ MOVW        R2, #2583                   @ 0xa17 
    /*000208bc*/ STR         R1, [SP, #8] 
    /*000208c0*/ STR         R2, [SP] 
    /*000208c4*/ MOV         R1, #8 
    /*000208c8*/ STR         R3, [SP, #4] 
    /*000208cc*/ MOVW        R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x916c] 
    /*000208d0*/ LDR         R3, [PC, #124]              @ 0x0000000000020954 
    /*000208d4*/ MOVT        R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x916c] 
    /*000208d8*/ MOV         R0, #3 
    /*000208dc*/ BL          0x00000000000208DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000208e0*/ MVN         R0, #0 
    /*000208e4*/ B           VencCheckLowDelayInfo_x20878
    VencCheckLowDelayInfo_x208e8:
    /*000208e8*/ MOV         R0, #0 
    /*000208ec*/ BX          LR 
    VencCheckLowDelayInfo_x208f0:
    /*000208f0*/ LDR         R1, [R0, #56]               @ 0x38 
    /*000208f4*/ MOVW        R2, #0                      @ .LC95 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9214] 
    /*000208f8*/ MOVW        R0, #2601                   @ 0xa29 
    /*000208fc*/ STR         R3, [SP, #8] 
    /*00020900*/ STR         R0, [SP] 
    /*00020904*/ MOVT        R2, #0                      @ .LC95 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9214] 
    /*00020908*/ STR         R1, [SP, #4] 
    /*0002090c*/ MOV         R0, #3 
    /*00020910*/ MOV         R1, #8 
    /*00020914*/ LDR         R3, [PC, #56]               @ 0x0000000000020954 
    /*00020918*/ BL          0x0000000000020918          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002091c*/ MVN         R0, #0 
    /*00020920*/ B           VencCheckLowDelayInfo_x20878
    VencCheckLowDelayInfo_x20924:
    /*00020924*/ LDR         R1, [R0, #56]               @ 0x38 
    /*00020928*/ MOVW        R3, #2594                   @ 0xa22 
    /*0002092c*/ MOVW        R2, #0                      @ .LC94 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x91c8] 
    /*00020930*/ STR         R3, [SP] 
    /*00020934*/ MOVT        R2, #0                      @ .LC94 [R_ARM_MOVT_ABS: .rodata.str1.4+0x91c8] 
    /*00020938*/ LDR         R3, [PC, #20]               @ 0x0000000000020954 
    /*0002093c*/ STR         R1, [SP, #4] 
    /*00020940*/ MOV         R0, #3 
    /*00020944*/ MOV         R1, #8 
    /*00020948*/ BL          0x0000000000020948          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002094c*/ MVN         R0, #0 
    /*00020950*/ B           VencCheckLowDelayInfo_x20878
    /*00020954*/ ANDEQ       R1, R0, IP, ROR R0 
FUNC_END VencCheckLowDelayInfo


FUNC_BEGIN VencCheckSendDataType
    /*00020958*/ CMP         R0, #6 
    /*0002095c*/ BHI         VencCheckSendDataType_x20980
    /*00020960*/ MOV         R2, #1 
    /*00020964*/ MOVW        R3, #32776                  @ 0x8008 
    /*00020968*/ LSL         R0, R2, R0 
    /*0002096c*/ MOVT        R3, #40968                  @ 0xa008 
    /*00020970*/ TST         R0, #87                     @ 0x57 
    /*00020974*/ MOVEQ       R0, R3 
    /*00020978*/ MOVNE       R0, #0 
    /*0002097c*/ BX          LR 
    VencCheckSendDataType_x20980:
    /*00020980*/ MOVW        R0, #32776                  @ 0x8008 
    /*00020984*/ MOVT        R0, #40968                  @ 0xa008 
    /*00020988*/ BX          LR 
FUNC_END VencCheckSendDataType


FUNC_BEGIN VencCheckSendInfo
    /*0002098c*/ CMP         R0, #6 
    /*00020990*/ PUSH        {R4, R5, LR} 
    /*00020994*/ MOV         R5, R2 
    /*00020998*/ SUB         SP, SP, #28 
    /*0002099c*/ BHI         VencCheckSendInfo_x209ec
    /*000209a0*/ MOV         R3, #1 
    /*000209a4*/ LSL         R3, R3, R0 
    /*000209a8*/ TST         R3, #87                     @ 0x57 
    /*000209ac*/ BEQ         VencCheckSendInfo_x209ec
    /*000209b0*/ LDR         R3, [R1, #312]              @ 0x138 
    /*000209b4*/ CMP         R3, #0 
    /*000209b8*/ BEQ         VencCheckSendInfo_x209cc
    /*000209bc*/ LDRB        R3, [R3, #65]               @ 0x41 
    /*000209c0*/ CMP         R3, #1 
    /*000209c4*/ BHI         VencCheckSendInfo_x20a84
    /*000209c8*/ BEQ         VencCheckSendInfo_x20a60
    VencCheckSendInfo_x209cc:
    /*000209cc*/ MOV         R0, R1 
    /*000209d0*/ MOV         R1, R5 
    /*000209d4*/ BL          0x00000000000209D4          @ VencCheckVideoInfo [R_ARM_CALL: .text+0x2051c] 
    /*000209d8*/ SUBS        R4, R0, #0 
    /*000209dc*/ BNE         VencCheckSendInfo_x20a2c
    VencCheckSendInfo_x209e0:
    /*000209e0*/ MOV         R0, R4 
    /*000209e4*/ ADD         SP, SP, #28 
    /*000209e8*/ POP         {R4, R5, PC} 
    VencCheckSendInfo_x209ec:
    /*000209ec*/ LDR         R3, [R5, #56]               @ 0x38 
    /*000209f0*/ MOV         R1, #2640                   @ 0xa50 
    /*000209f4*/ STR         R0, [SP, #8] 
    /*000209f8*/ MOVW        R2, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x92e8] 
    /*000209fc*/ STR         R1, [SP] 
    /*00020a00*/ MOVT        R2, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0x92e8] 
    /*00020a04*/ STR         R3, [SP, #4] 
    /*00020a08*/ MOV         R1, #8 
    /*00020a0c*/ LDR         R3, [PC, #168]              @ 0x0000000000020abc 
    /*00020a10*/ MOV         R0, #3 
    /*00020a14*/ BL          0x0000000000020A14          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020a18*/ MOVW        R4, #32776                  @ 0x8008 
    /*00020a1c*/ MOVT        R4, #40968                  @ 0xa008 
    /*00020a20*/ MOV         R0, R4 
    /*00020a24*/ ADD         SP, SP, #28 
    /*00020a28*/ POP         {R4, R5, PC} 
    VencCheckSendInfo_x20a2c:
    /*00020a2c*/ LDR         R1, [R5, #56]               @ 0x38 
    /*00020a30*/ MOVW        R3, #2684                   @ 0xa7c 
    /*00020a34*/ MOVW        R2, #0                      @ .LC97 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x92b0] 
    /*00020a38*/ STR         R3, [SP] 
    /*00020a3c*/ MOVT        R2, #0                      @ .LC97 [R_ARM_MOVT_ABS: .rodata.str1.4+0x92b0] 
    /*00020a40*/ LDR         R3, [PC, #116]              @ 0x0000000000020abc 
    /*00020a44*/ STR         R1, [SP, #4] 
    /*00020a48*/ MOV         R0, #3 
    /*00020a4c*/ MOV         R1, #8 
    /*00020a50*/ BL          0x0000000000020A50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020a54*/ MOV         R0, R4 
    /*00020a58*/ ADD         SP, SP, #28 
    /*00020a5c*/ POP         {R4, R5, PC} 
    VencCheckSendInfo_x20a60:
    /*00020a60*/ MOV         R0, R5 
    /*00020a64*/ STR         R1, [SP, #20] 
    /*00020a68*/ BL          0x0000000000020A68          @ VencCheckLowDelayInfo [R_ARM_CALL: .text+0x20834] 
    /*00020a6c*/ LDR         R1, [SP, #20] 
    /*00020a70*/ CMP         R0, #0 
    /*00020a74*/ BEQ         VencCheckSendInfo_x209cc
    /*00020a78*/ MOVW        R4, #32777                  @ 0x8009 
    /*00020a7c*/ MOVT        R4, #40968                  @ 0xa008 
    /*00020a80*/ B           VencCheckSendInfo_x209e0
    VencCheckSendInfo_x20a84:
    /*00020a84*/ LDR         R1, [R5, #56]               @ 0x38 
    /*00020a88*/ MOVW        R0, #2652                   @ 0xa5c 
    /*00020a8c*/ STR         R3, [SP, #8] 
    /*00020a90*/ MOVW        R2, #0                      @ .LC96 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9270] 
    /*00020a94*/ STR         R0, [SP] 
    /*00020a98*/ MOVT        R2, #0                      @ .LC96 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9270] 
    /*00020a9c*/ STR         R1, [SP, #4] 
    /*00020aa0*/ MOV         R0, #3 
    /*00020aa4*/ MOV         R1, #8 
    /*00020aa8*/ LDR         R3, [PC, #12]               @ 0x0000000000020abc 
    /*00020aac*/ MOVW        R4, #32771                  @ 0x8003 
    /*00020ab0*/ BL          0x0000000000020AB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020ab4*/ MOVT        R4, #40968                  @ 0xa008 
    /*00020ab8*/ B           VencCheckSendInfo_x209e0
    /*00020abc*/ MULEQ       R0, R4, R0 
FUNC_END VencCheckSendInfo


FUNC_BEGIN Venc_ReceivePic
    /*00020ac0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00020ac4*/ SUB         SP, SP, #136                @ 0x88 
    /*00020ac8*/ MOV         R6, R0 
    /*00020acc*/ MOV         R0, R1 
    /*00020ad0*/ MOV         R5, R1 
    /*00020ad4*/ MOV         R8, R2 
    /*00020ad8*/ MOV         R7, R3 
    /*00020adc*/ MOV         R3, #0 
    /*00020ae0*/ STR         R3, [SP, #20] 
    /*00020ae4*/ BL          0x0000000000020AE4          @ MkpVencCheckChn [R_ARM_CALL: .text+0x7ac] 
    /*00020ae8*/ SUBS        R4, R0, #0 
    /*00020aec*/ BEQ         Venc_ReceivePic_x20afc
    Venc_ReceivePic_x20af0:
    /*00020af0*/ MOV         R0, R4 
    /*00020af4*/ ADD         SP, SP, #136                @ 0x88 
    /*00020af8*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    Venc_ReceivePic_x20afc:
    /*00020afc*/ MOV         R0, R5 
    /*00020b00*/ BL          0x0000000000020B00          @ MkpVencCheckChnCreated [R_ARM_CALL: .text+0x7d4] 
    /*00020b04*/ SUBS        R4, R0, #0 
    /*00020b08*/ BNE         Venc_ReceivePic_x20af0
    /*00020b0c*/ MOV         R0, R5 
    /*00020b10*/ BL          0x0000000000020B10          @ MkpVencCheckChnRegistered [R_ARM_CALL: .text+0x800] 
    /*00020b14*/ SUBS        R4, R0, #0 
    /*00020b18*/ BNE         Venc_ReceivePic_x20af0
    /*00020b1c*/ LDR         R0, [SP, #168]              @ 0xa8 
    /*00020b20*/ BL          0x0000000000020B20          @ MkpVencCheckNull [R_ARM_CALL: .text+0x798] 
    /*00020b24*/ SUBS        R4, R0, #0 
    /*00020b28*/ BNE         Venc_ReceivePic_x20af0
    /*00020b2c*/ MOVW        R3, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00020b30*/ MOVT        R3, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00020b34*/ MOVW        R9, #36240                  @ 0x8d90 
    /*00020b38*/ LDR         R3, [R3] 
    /*00020b3c*/ MLA         R9, R9, R5, R3 
    /*00020b40*/ ADD         SL, R9, #8192               @ 0x2000 
    /*00020b44*/ LDR         R3, [SL, #4028]             @ 0xfbc 
    /*00020b48*/ ADD         R3, R3, #1 
    /*00020b4c*/ STR         R3, [SL, #4028]             @ 0xfbc 
    /*00020b50*/ LDR         R3, [R9, #16] 
    /*00020b54*/ CMP         R3, #1 
    /*00020b58*/ BNE         Venc_ReceivePic_x20d8c
    /*00020b5c*/ LDR         R3, [R9, #4] 
    /*00020b60*/ CMP         R3, #26 
    /*00020b64*/ BEQ         Venc_ReceivePic_x20c58
    Venc_ReceivePic_x20b68:
    /*00020b68*/ CMP         R6, #0 
    /*00020b6c*/ BNE         Venc_ReceivePic_x20e60
    /*00020b70*/ ADD         R3, R9, #12288              @ 0x3000 
    Venc_ReceivePic_x20b74:
    /*00020b74*/ LDR         R3, [R3, #1008]             @ 0x3f0 
    /*00020b78*/ CMP         R3, #1 
    /*00020b7c*/ BEQ         Venc_ReceivePic_x20e30
    /*00020b80*/ MOV         R0, #19 
    /*00020b84*/ BL          0x0000000000020B84          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00020b88*/ ADD         R1, SP, #20 
    /*00020b8c*/ LDR         R3, [R0, #96]               @ 0x60 
    /*00020b90*/ MOV         R0, R5 
    /*00020b94*/ BLX         R3 
    /*00020b98*/ LDR         R3, [SP, #20] 
    /*00020b9c*/ CMP         R3, #0 
    /*00020ba0*/ BNE         Venc_ReceivePic_x20e14
    /*00020ba4*/ MOV         R0, R9 
    /*00020ba8*/ BL          0x0000000000020BA8          @ VencCheckFreeNode [R_ARM_CALL: .text+0x1e604] 
    /*00020bac*/ CMP         R0, #0 
    /*00020bb0*/ BNE         Venc_ReceivePic_x20bf4
    /*00020bb4*/ LDR         R1, [SL, #4044]             @ 0xfcc 
    /*00020bb8*/ MOVW        R0, #3698                   @ 0xe72 
    /*00020bbc*/ MOVW        R2, #0                      @ .LC103 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9454] 
    /*00020bc0*/ LDR         R3, [PC, #692]              @ 0x0000000000020e7c 
    /*00020bc4*/ ADD         R1, R1, #1 
    /*00020bc8*/ MOVT        R2, #0                      @ .LC103 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9454] 
    /*00020bcc*/ STR         R1, [SL, #4044]             @ 0xfcc 
    /*00020bd0*/ MOV         R1, #8 
    /*00020bd4*/ STR         R0, [SP] 
    /*00020bd8*/ MOV         R0, #4 
    /*00020bdc*/ BL          0x0000000000020BDC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020be0*/ CMP         R8, #0 
    /*00020be4*/ MOVW        R4, #32781                  @ 0x800d 
    /*00020be8*/ MOVT        R4, #40968                  @ 0xa008 
    /*00020bec*/ MOVEQ       R4, #0 
    /*00020bf0*/ B           Venc_ReceivePic_x20af0
    Venc_ReceivePic_x20bf4:
    /*00020bf4*/ MOV         R0, R7 
    /*00020bf8*/ MOV         R2, R9 
    /*00020bfc*/ LDR         R1, [SP, #168]              @ 0xa8 
    /*00020c00*/ BL          0x0000000000020C00          @ VencCheckSendInfo [R_ARM_CALL: .text+0x2098c] 
    /*00020c04*/ SUBS        IP, R0, #0 
    /*00020c08*/ BEQ         Venc_ReceivePic_x20ca4
    /*00020c0c*/ LDR         R2, [SP, #168]              @ 0xa8 
    /*00020c10*/ LDR         R3, [R9, #32] 
    /*00020c14*/ LDR         R2, [R2, #232]              @ 0xe8 
    /*00020c18*/ CMP         R2, R3 
    /*00020c1c*/ BEQ         Venc_ReceivePic_x20d64
    /*00020c20*/ LDR         R1, [SL, #4032]             @ 0xfc0 
    /*00020c24*/ MOVW        LR, #3722                   @ 0xe8a 
    /*00020c28*/ MOVW        R2, #0                      @ .LC105 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x94cc] 
    /*00020c2c*/ LDR         R3, [PC, #584]              @ 0x0000000000020e7c 
    /*00020c30*/ ADD         R1, R1, #1 
    /*00020c34*/ MOVT        R2, #0                      @ .LC105 [R_ARM_MOVT_ABS: .rodata.str1.4+0x94cc] 
    /*00020c38*/ STR         R1, [SL, #4032]             @ 0xfc0 
    /*00020c3c*/ MOV         R0, #3 
    /*00020c40*/ MOV         R1, #8 
    /*00020c44*/ STR         R5, [SP, #4] 
    /*00020c48*/ STR         LR, [SP] 
    /*00020c4c*/ MOV         R4, IP 
    /*00020c50*/ BL          0x0000000000020C50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020c54*/ B           Venc_ReceivePic_x20af0
    Venc_ReceivePic_x20c58:
    /*00020c58*/ ADD         R3, R9, #12288              @ 0x3000 
    /*00020c5c*/ LDR         R2, [R3, #672]              @ 0x2a0 
    /*00020c60*/ CMP         R2, #1 
    /*00020c64*/ BNE         Venc_ReceivePic_x20b68
    /*00020c68*/ CMP         R6, #3 
    /*00020c6c*/ BLS         Venc_ReceivePic_x20b74
    /*00020c70*/ MOVW        R2, #0                      @ .LC99 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x932c] 
    /*00020c74*/ MOVT        R2, #0                      @ .LC99 [R_ARM_MOVT_ABS: .rodata.str1.4+0x932c] 
    /*00020c78*/ MOVW        R3, #3660                   @ 0xe4c 
    /*00020c7c*/ STR         R6, [SP, #8] 
    /*00020c80*/ STR         R5, [SP, #4] 
    /*00020c84*/ STR         R3, [SP] 
    Venc_ReceivePic_x20c88:
    /*00020c88*/ LDR         R3, [PC, #492]              @ 0x0000000000020e7c 
    /*00020c8c*/ MOV         R1, #8 
    /*00020c90*/ MOV         R0, #3 
    /*00020c94*/ MOVW        R4, #32777                  @ 0x8009 
    /*00020c98*/ BL          0x0000000000020C98          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020c9c*/ MOVT        R4, #40968                  @ 0xa008 
    /*00020ca0*/ B           Venc_ReceivePic_x20af0
    Venc_ReceivePic_x20ca4:
    /*00020ca4*/ MOV         R1, IP 
    /*00020ca8*/ MOV         R2, #40                     @ 0x28 
    /*00020cac*/ ADD         R0, SP, #96                 @ 0x60 
    /*00020cb0*/ BL          0x0000000000020CB0          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00020cb4*/ LDR         R3, [SP, #168]              @ 0xa8 
    /*00020cb8*/ LDR         R1, [R3, #312]              @ 0x138 
    /*00020cbc*/ CMP         R1, #0 
    /*00020cc0*/ BEQ         Venc_ReceivePic_x20d04
    /*00020cc4*/ ADD         R3, R3, #288                @ 0x120 
    /*00020cc8*/ LDRB        IP, [R1, #65]               @ 0x41 
    /*00020ccc*/ ADD         R0, R1, #64                 @ 0x40 
    /*00020cd0*/ STR         R1, [SP, #112]              @ 0x70 
    /*00020cd4*/ LDRD        R2, [R3, #-8] 
    /*00020cd8*/ STR         IP, [SP, #96]               @ 0x60 
    /*00020cdc*/ ADD         IP, R1, #67                 @ 0x43 
    /*00020ce0*/ STR         R0, [SP, #116]              @ 0x74 
    /*00020ce4*/ ADD         R0, R1, #68                 @ 0x44 
    /*00020ce8*/ STRD        R2, [SP, #104]              @ 0x68 
    /*00020cec*/ STR         IP, [SP, #120]              @ 0x78 
    /*00020cf0*/ STR         R0, [SP, #124]              @ 0x7c 
    /*00020cf4*/ LDR         R3, [R1, #69]               @ 0x45 
    /*00020cf8*/ STR         R3, [SP, #128]              @ 0x80 
    /*00020cfc*/ LDRB        R3, [R1, #73]               @ 0x49 
    /*00020d00*/ STRB        R3, [SP, #132]              @ 0x84 
    Venc_ReceivePic_x20d04:
    /*00020d04*/ MOV         R3, #0 
    /*00020d08*/ STR         R3, [SP, #76]               @ 0x4c 
    /*00020d0c*/ LDR         IP, [R9, #52]               @ 0x34 
    /*00020d10*/ MOV         R0, #0 
    /*00020d14*/ LDR         R2, [SP, #168]              @ 0xa8 
    /*00020d18*/ MOV         R1, #0 
    /*00020d1c*/ CMP         IP, R3 
    /*00020d20*/ STR         R3, [SP, #32] 
    /*00020d24*/ STR         R3, [SP, #36]               @ 0x24 
    /*00020d28*/ STR         R2, [SP, #24] 
    /*00020d2c*/ MOV         R2, #1 
    /*00020d30*/ STR         R3, [SP, #40]               @ 0x28 
    /*00020d34*/ STR         R3, [SP, #56]               @ 0x38 
    /*00020d38*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00020d3c*/ STRD        R0, [SP, #48]               @ 0x30 
    /*00020d40*/ STRD        R0, [SP, #64]               @ 0x40 
    /*00020d44*/ STR         R2, [SP, #72]               @ 0x48 
    /*00020d48*/ STRNE       R3, [R9, #52]               @ 0x34 
    /*00020d4c*/ BEQ         Venc_ReceivePic_x20dc8
    Venc_ReceivePic_x20d50:
    /*00020d50*/ MOV         R1, R9 
    /*00020d54*/ ADD         R0, SP, #24 
    /*00020d58*/ BL          0x000000000001F2AC 
    /*00020d5c*/ MOV         R4, R0 
    /*00020d60*/ B           Venc_ReceivePic_x20af0
    Venc_ReceivePic_x20d64:
    /*00020d64*/ MOVW        R3, #3718                   @ 0xe86 
    /*00020d68*/ STR         R5, [SP, #4] 
    /*00020d6c*/ STR         R3, [SP] 
    /*00020d70*/ MOVW        R2, #0                      @ .LC104 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9490] 
    /*00020d74*/ LDR         R3, [PC, #256]              @ 0x0000000000020e7c 
    /*00020d78*/ MOVT        R2, #0                      @ .LC104 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9490] 
    /*00020d7c*/ MOV         R1, #8 
    /*00020d80*/ MOV         R0, #4 
    /*00020d84*/ BL          0x0000000000020D84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020d88*/ B           Venc_ReceivePic_x20af0
    Venc_ReceivePic_x20d8c:
    /*00020d8c*/ LDR         R1, [SL, #4040]             @ 0xfc8 
    /*00020d90*/ MOVW        IP, #3652                   @ 0xe44 
    /*00020d94*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x82b8] 
    /*00020d98*/ LDR         R3, [PC, #220]              @ 0x0000000000020e7c 
    /*00020d9c*/ ADD         R1, R1, #1 
    /*00020da0*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x82b8] 
    /*00020da4*/ STR         R1, [SL, #4040]             @ 0xfc8 
    /*00020da8*/ MOV         R0, #4 
    /*00020dac*/ MOV         R1, #8 
    /*00020db0*/ STR         R5, [SP, #4] 
    /*00020db4*/ STR         IP, [SP] 
    /*00020db8*/ MOVW        R4, #32777                  @ 0x8009 
    /*00020dbc*/ BL          0x0000000000020DBC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020dc0*/ MOVT        R4, #40968                  @ 0xa008 
    /*00020dc4*/ B           Venc_ReceivePic_x20af0
    Venc_ReceivePic_x20dc8:
    /*00020dc8*/ LDR         R3, [SP, #168]              @ 0xa8 
    /*00020dcc*/ MOV         R0, R9 
    /*00020dd0*/ LDR         R1, [R3, #232]              @ 0xe8 
    /*00020dd4*/ BL          0x0000000000020DD4          @ VencFrmRateCtl [R_ARM_CALL: .text+0xcc0] 
    /*00020dd8*/ SUBS        R4, R0, #0 
    /*00020ddc*/ BNE         Venc_ReceivePic_x20d50
    /*00020de0*/ LDR         R1, [SL, #4004]             @ 0xfa4 
    /*00020de4*/ MOV         IP, #3776                   @ 0xec0 
    /*00020de8*/ MOVW        R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8358] 
    /*00020dec*/ LDR         R3, [PC, #136]              @ 0x0000000000020e7c 
    /*00020df0*/ ADD         R1, R1, #1 
    /*00020df4*/ MOVT        R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8358] 
    /*00020df8*/ STR         R1, [SL, #4004]             @ 0xfa4 
    /*00020dfc*/ MOV         R0, #6 
    /*00020e00*/ MOV         R1, #8 
    /*00020e04*/ STR         R5, [SP, #4] 
    /*00020e08*/ STR         IP, [SP] 
    /*00020e0c*/ BL          0x0000000000020E0C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020e10*/ B           Venc_ReceivePic_x20af0
    Venc_ReceivePic_x20e14:
    /*00020e14*/ STR         R3, [SP, #8] 
    /*00020e18*/ MOVW        R2, #0                      @ .LC102 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9404] 
    /*00020e1c*/ MOVW        R3, #3692                   @ 0xe6c 
    /*00020e20*/ STR         R5, [SP, #4] 
    /*00020e24*/ STR         R3, [SP] 
    /*00020e28*/ MOVT        R2, #0                      @ .LC102 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9404] 
    /*00020e2c*/ B           Venc_ReceivePic_x20c88
    Venc_ReceivePic_x20e30:
    /*00020e30*/ MOVW        R3, #3677                   @ 0xe5d 
    /*00020e34*/ STR         R5, [SP, #4] 
    /*00020e38*/ STR         R3, [SP] 
    /*00020e3c*/ MOVW        R2, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x93b8] 
    /*00020e40*/ LDR         R3, [PC, #52]               @ 0x0000000000020e7c 
    /*00020e44*/ MOVT        R2, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0x93b8] 
    /*00020e48*/ MOV         R1, #8 
    /*00020e4c*/ MOV         R0, #3 
    /*00020e50*/ MOVW        R4, #32777                  @ 0x8009 
    /*00020e54*/ BL          0x0000000000020E54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020e58*/ MOVT        R4, #40968                  @ 0xa008 
    /*00020e5c*/ B           Venc_ReceivePic_x20af0
    Venc_ReceivePic_x20e60:
    /*00020e60*/ MOVW        R3, #3669                   @ 0xe55 
    /*00020e64*/ MOVW        R2, #0                      @ .LC100 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9374] 
    /*00020e68*/ STR         R6, [SP, #8] 
    /*00020e6c*/ MOVT        R2, #0                      @ .LC100 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9374] 
    /*00020e70*/ STR         R5, [SP, #4] 
    /*00020e74*/ STR         R3, [SP] 
    /*00020e78*/ B           Venc_ReceivePic_x20c88
    /*00020e7c*/ ANDEQ       R1, R0, R8, LSR #1 
FUNC_END Venc_ReceivePic


FUNC_BEGIN VencCheckVpssSendInfo
    /*00020e80*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00020e84*/ SUB         SP, SP, #20 
    /*00020e88*/ LDR         R3, [R0] 
    /*00020e8c*/ CMP         R3, #1 
    /*00020e90*/ BNE         VencCheckVpssSendInfo_x20ecc
    /*00020e94*/ LDR         R3, [R0, #12] 
    /*00020e98*/ CMP         R3, #0 
    /*00020e9c*/ BEQ         VencCheckVpssSendInfo_x20f04
    /*00020ea0*/ MOV         R2, R1 
    /*00020ea4*/ MOV         R0, #6 
    /*00020ea8*/ MOV         R1, R3 
    /*00020eac*/ BL          0x0000000000020EAC          @ VencCheckSendInfo [R_ARM_CALL: .text+0x2098c] 
    /*00020eb0*/ MOVW        R3, #32771                  @ 0x8003 
    /*00020eb4*/ MOVT        R3, #40968                  @ 0xa008 
    /*00020eb8*/ CMP         R0, #0 
    /*00020ebc*/ MOVNE       R0, R3 
    /*00020ec0*/ MOVEQ       R0, #0 
    VencCheckVpssSendInfo_x20ec4:
    /*00020ec4*/ ADD         SP, SP, #20 
    /*00020ec8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VencCheckVpssSendInfo_x20ecc:
    /*00020ecc*/ LDR         R1, [R1, #56]               @ 0x38 
    /*00020ed0*/ MOVW        R0, #2702                   @ 0xa8e 
    /*00020ed4*/ STR         R3, [SP, #8] 
    /*00020ed8*/ MOVW        R2, #0                      @ .LC106 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9508] 
    /*00020edc*/ STR         R0, [SP] 
    /*00020ee0*/ MOVT        R2, #0                      @ .LC106 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9508] 
    /*00020ee4*/ STR         R1, [SP, #4] 
    /*00020ee8*/ MOV         R0, #4 
    /*00020eec*/ MOV         R1, #8 
    /*00020ef0*/ LDR         R3, [PC, #64]               @ 0x0000000000020f38 
    /*00020ef4*/ BL          0x0000000000020EF4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020ef8*/ MOVW        R0, #32771                  @ 0x8003 
    /*00020efc*/ MOVT        R0, #40968                  @ 0xa008 
    /*00020f00*/ B           VencCheckVpssSendInfo_x20ec4
    VencCheckVpssSendInfo_x20f04:
    /*00020f04*/ LDR         R1, [R1, #56]               @ 0x38 
    /*00020f08*/ MOVW        R3, #2709                   @ 0xa95 
    /*00020f0c*/ MOVW        R2, #0                      @ .LC107 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9548] 
    /*00020f10*/ STR         R3, [SP] 
    /*00020f14*/ MOVT        R2, #0                      @ .LC107 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9548] 
    /*00020f18*/ LDR         R3, [PC, #24]               @ 0x0000000000020f38 
    /*00020f1c*/ STR         R1, [SP, #4] 
    /*00020f20*/ MOV         R0, #3 
    /*00020f24*/ MOV         R1, #8 
    /*00020f28*/ BL          0x0000000000020F28          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00020f2c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00020f30*/ MOVT        R0, #40968                  @ 0xa008 
    /*00020f34*/ B           VencCheckVpssSendInfo_x20ec4
    /*00020f38*/ STRHEQ      R1, [R0], -R8 
FUNC_END VencCheckVpssSendInfo


FUNC_BEGIN VENC_VpssSend
    /*00020f3c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00020f40*/ SUB         SP, SP, #136                @ 0x88 
    /*00020f44*/ MOV         R0, R1 
    /*00020f48*/ MOV         R3, #0 
    /*00020f4c*/ MOV         R5, R1 
    /*00020f50*/ MOV         R6, R2 
    /*00020f54*/ STR         R3, [SP, #20] 
    /*00020f58*/ BL          0x0000000000020F58          @ MkpVencCheckChn [R_ARM_CALL: .text+0x7ac] 
    /*00020f5c*/ SUBS        R4, R0, #0 
    /*00020f60*/ BEQ         VENC_VpssSend_x20f70
    VENC_VpssSend_x20f64:
    /*00020f64*/ MOV         R0, R4 
    /*00020f68*/ ADD         SP, SP, #136                @ 0x88 
    /*00020f6c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VENC_VpssSend_x20f70:
    /*00020f70*/ MOV         R0, R5 
    /*00020f74*/ BL          0x0000000000020F74          @ MkpVencCheckChnCreated [R_ARM_CALL: .text+0x7d4] 
    /*00020f78*/ SUBS        R4, R0, #0 
    /*00020f7c*/ BNE         VENC_VpssSend_x20f64
    /*00020f80*/ MOV         R0, R5 
    /*00020f84*/ BL          0x0000000000020F84          @ MkpVencCheckChnRegistered [R_ARM_CALL: .text+0x800] 
    /*00020f88*/ SUBS        R4, R0, #0 
    /*00020f8c*/ BNE         VENC_VpssSend_x20f64
    /*00020f90*/ MOV         R0, R6 
    /*00020f94*/ BL          0x0000000000020F94          @ MkpVencCheckNull [R_ARM_CALL: .text+0x798] 
    /*00020f98*/ SUBS        R4, R0, #0 
    /*00020f9c*/ BNE         VENC_VpssSend_x20f64
    /*00020fa0*/ MOVW        R3, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00020fa4*/ MOVT        R3, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00020fa8*/ MOVW        R7, #36240                  @ 0x8d90 
    /*00020fac*/ LDR         R3, [R3] 
    /*00020fb0*/ MLA         R7, R7, R5, R3 
    /*00020fb4*/ ADD         R8, R7, #8192               @ 0x2000 
    /*00020fb8*/ LDR         R3, [R8, #4016]             @ 0xfb0 
    /*00020fbc*/ ADD         R3, R3, #1 
    /*00020fc0*/ STR         R3, [R8, #4016]             @ 0xfb0 
    /*00020fc4*/ LDR         R3, [R7, #16] 
    /*00020fc8*/ CMP         R3, #1 
    /*00020fcc*/ BNE         VENC_VpssSend_x2116c
    /*00020fd0*/ ADD         R3, R7, #12288              @ 0x3000 
    /*00020fd4*/ LDR         R3, [R3, #1008]             @ 0x3f0 
    /*00020fd8*/ CMP         R3, #1 
    /*00020fdc*/ BEQ         VENC_VpssSend_x21218
    /*00020fe0*/ MOV         R0, #19 
    /*00020fe4*/ BL          0x0000000000020FE4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00020fe8*/ ADD         R1, SP, #20 
    /*00020fec*/ LDR         R3, [R0, #96]               @ 0x60 
    /*00020ff0*/ MOV         R0, R5 
    /*00020ff4*/ BLX         R3 
    /*00020ff8*/ LDR         R3, [SP, #20] 
    /*00020ffc*/ CMP         R3, #0 
    /*00021000*/ BNE         VENC_VpssSend_x211a8
    /*00021004*/ MOV         R0, R7 
    /*00021008*/ BL          0x0000000000021008          @ VencCheckFreeNode [R_ARM_CALL: .text+0x1e604] 
    /*0002100c*/ CMP         R0, #0 
    /*00021010*/ BEQ         VENC_VpssSend_x211dc
    /*00021014*/ MOV         R1, R7 
    /*00021018*/ MOV         R0, R6 
    /*0002101c*/ BL          0x000000000002101C          @ VencCheckVpssSendInfo [R_ARM_CALL: .text+0x20e80] 
    /*00021020*/ SUBS        R4, R0, #0 
    /*00021024*/ BNE         VENC_VpssSend_x21138
    /*00021028*/ LDR         R3, [R7, #52]               @ 0x34 
    /*0002102c*/ CMP         R3, #0 
    /*00021030*/ MOVNE       R3, #0 
    /*00021034*/ STRNE       R3, [R7, #52]               @ 0x34 
    /*00021038*/ BEQ         VENC_VpssSend_x210e8
    VENC_VpssSend_x2103c:
    /*0002103c*/ MOV         R2, #40                     @ 0x28 
    /*00021040*/ MOV         R1, #0 
    /*00021044*/ ADD         R0, SP, #96                 @ 0x60 
    /*00021048*/ BL          0x0000000000021048          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0002104c*/ LDR         R2, [R6, #12] 
    /*00021050*/ LDR         R3, [R2, #312]              @ 0x138 
    /*00021054*/ CMP         R3, #0 
    /*00021058*/ BEQ         VENC_VpssSend_x2109c
    /*0002105c*/ ADD         R1, R2, #288                @ 0x120 
    /*00021060*/ LDRB        IP, [R3, #65]               @ 0x41 
    /*00021064*/ ADD         R4, R3, #64                 @ 0x40 
    /*00021068*/ STR         R3, [SP, #112]              @ 0x70 
    /*0002106c*/ LDRD        R0, [R1, #-8] 
    /*00021070*/ ADD         LR, R3, #67                 @ 0x43 
    /*00021074*/ STR         IP, [SP, #96]               @ 0x60 
    /*00021078*/ ADD         IP, R3, #68                 @ 0x44 
    /*0002107c*/ STR         R4, [SP, #116]              @ 0x74 
    /*00021080*/ STRD        R0, [SP, #104]              @ 0x68 
    /*00021084*/ STR         LR, [SP, #120]              @ 0x78 
    /*00021088*/ STR         IP, [SP, #124]              @ 0x7c 
    /*0002108c*/ LDR         R1, [R3, #69]               @ 0x45 
    /*00021090*/ STR         R1, [SP, #128]              @ 0x80 
    /*00021094*/ LDRB        R3, [R3, #73]               @ 0x49 
    /*00021098*/ STRB        R3, [SP, #132]              @ 0x84 
    VENC_VpssSend_x2109c:
    /*0002109c*/ MOV         R1, R7 
    /*000210a0*/ ADD         R0, SP, #24 
    /*000210a4*/ MOV         R3, #0 
    /*000210a8*/ MOV         R4, #0 
    /*000210ac*/ STR         R2, [SP, #24] 
    /*000210b0*/ MOV         R5, #0 
    /*000210b4*/ MOV         R2, #1 
    /*000210b8*/ STRD        R4, [SP, #48]               @ 0x30 
    /*000210bc*/ STRD        R4, [SP, #64]               @ 0x40 
    /*000210c0*/ STR         R3, [SP, #32] 
    /*000210c4*/ STR         R3, [SP, #36]               @ 0x24 
    /*000210c8*/ STR         R3, [SP, #40]               @ 0x28 
    /*000210cc*/ STR         R3, [SP, #56]               @ 0x38 
    /*000210d0*/ STR         R3, [SP, #44]               @ 0x2c 
    /*000210d4*/ STR         R3, [SP, #76]               @ 0x4c 
    /*000210d8*/ STR         R2, [SP, #72]               @ 0x48 
    /*000210dc*/ BL          0x000000000001F2AC 
    /*000210e0*/ MOV         R4, R0 
    /*000210e4*/ B           VENC_VpssSend_x20f64
    VENC_VpssSend_x210e8:
    /*000210e8*/ LDR         R3, [R6, #12] 
    /*000210ec*/ MOV         R0, R7 
    /*000210f0*/ LDR         R1, [R3, #232]              @ 0xe8 
    /*000210f4*/ BL          0x00000000000210F4          @ VencFrmRateCtl [R_ARM_CALL: .text+0xcc0] 
    /*000210f8*/ CMP         R0, #0 
    /*000210fc*/ BNE         VENC_VpssSend_x2103c
    /*00021100*/ LDR         R1, [R8, #4004]             @ 0xfa4 
    /*00021104*/ MOVW        IP, #2811                   @ 0xafb 
    /*00021108*/ MOVW        R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8358] 
    /*0002110c*/ LDR         R3, [PC, #308]              @ 0x0000000000021248 
    /*00021110*/ ADD         R1, R1, #1 
    /*00021114*/ MOVT        R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8358] 
    /*00021118*/ STR         R1, [R8, #4004]             @ 0xfa4 
    /*0002111c*/ MOV         R0, #6 
    /*00021120*/ MOV         R1, #8 
    /*00021124*/ STR         R5, [SP, #4] 
    /*00021128*/ STR         IP, [SP] 
    /*0002112c*/ MVN         R4, #0 
    /*00021130*/ BL          0x0000000000021130          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021134*/ B           VENC_VpssSend_x20f64
    VENC_VpssSend_x21138:
    /*00021138*/ MOVW        R3, #2788                   @ 0xae4 
    /*0002113c*/ STR         R5, [SP, #4] 
    /*00021140*/ STR         R3, [SP] 
    /*00021144*/ MOVW        R2, #0                      @ .LC108 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9588] 
    /*00021148*/ LDR         R3, [PC, #248]              @ 0x0000000000021248 
    /*0002114c*/ MOVT        R2, #0                      @ .LC108 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9588] 
    /*00021150*/ MOV         R1, #8 
    /*00021154*/ MOV         R0, #4 
    /*00021158*/ BL          0x0000000000021158          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002115c*/ LDR         R3, [R8, #4024]             @ 0xfb8 
    /*00021160*/ ADD         R3, R3, #1 
    /*00021164*/ STR         R3, [R8, #4024]             @ 0xfb8 
    /*00021168*/ B           VENC_VpssSend_x20f64
    VENC_VpssSend_x2116c:
    /*0002116c*/ LDR         R1, [R8, #4040]             @ 0xfc8 
    /*00021170*/ MOVW        IP, #2748                   @ 0xabc 
    /*00021174*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x82b8] 
    /*00021178*/ LDR         R3, [PC, #200]              @ 0x0000000000021248 
    /*0002117c*/ ADD         R1, R1, #1 
    /*00021180*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x82b8] 
    /*00021184*/ STR         R1, [R8, #4040]             @ 0xfc8 
    /*00021188*/ MOV         R0, #4 
    /*0002118c*/ MOV         R1, #8 
    /*00021190*/ STR         R5, [SP, #4] 
    /*00021194*/ STR         IP, [SP] 
    /*00021198*/ MOVW        R4, #32777                  @ 0x8009 
    /*0002119c*/ BL          0x000000000002119C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000211a0*/ MOVT        R4, #40968                  @ 0xa008 
    /*000211a4*/ B           VENC_VpssSend_x20f64
    VENC_VpssSend_x211a8:
    /*000211a8*/ STR         R3, [SP, #8] 
    /*000211ac*/ MOVW        R2, #0                      @ .LC102 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9404] 
    /*000211b0*/ MOVW        R3, #2772                   @ 0xad4 
    /*000211b4*/ STR         R5, [SP, #4] 
    /*000211b8*/ STR         R3, [SP] 
    /*000211bc*/ MOVT        R2, #0                      @ .LC102 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9404] 
    /*000211c0*/ LDR         R3, [PC, #128]              @ 0x0000000000021248 
    /*000211c4*/ MOV         R1, #8 
    /*000211c8*/ MOV         R0, #3 
    /*000211cc*/ MOVW        R4, #32777                  @ 0x8009 
    /*000211d0*/ BL          0x00000000000211D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000211d4*/ MOVT        R4, #40968                  @ 0xa008 
    /*000211d8*/ B           VENC_VpssSend_x20f64
    VENC_VpssSend_x211dc:
    /*000211dc*/ LDR         R1, [R8, #4044]             @ 0xfcc 
    /*000211e0*/ MOVW        IP, #2780                   @ 0xadc 
    /*000211e4*/ MOVW        R2, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8828] 
    /*000211e8*/ LDR         R3, [PC, #88]               @ 0x0000000000021248 
    /*000211ec*/ ADD         R1, R1, #1 
    /*000211f0*/ MOVT        R2, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8828] 
    /*000211f4*/ STR         R1, [R8, #4044]             @ 0xfcc 
    /*000211f8*/ MOV         R0, #4 
    /*000211fc*/ MOV         R1, #8 
    /*00021200*/ STR         R5, [SP, #4] 
    /*00021204*/ STR         IP, [SP] 
    /*00021208*/ MOVW        R4, #32781                  @ 0x800d 
    /*0002120c*/ BL          0x000000000002120C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021210*/ MOVT        R4, #40968                  @ 0xa008 
    /*00021214*/ B           VENC_VpssSend_x20f64
    VENC_VpssSend_x21218:
    /*00021218*/ MOVW        R3, #2756                   @ 0xac4 
    /*0002121c*/ STR         R5, [SP, #4] 
    /*00021220*/ STR         R3, [SP] 
    /*00021224*/ MOVW        R2, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x93b8] 
    /*00021228*/ LDR         R3, [PC, #24]               @ 0x0000000000021248 
    /*0002122c*/ MOVT        R2, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0x93b8] 
    /*00021230*/ MOV         R1, #8 
    /*00021234*/ MOV         R0, #3 
    /*00021238*/ MOVW        R4, #32777                  @ 0x8009 
    /*0002123c*/ BL          0x000000000002123C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021240*/ MOVT        R4, #40968                  @ 0xa008 
    /*00021244*/ B           VENC_VpssSend_x20f64
    /*00021248*/ LDRDEQ      R1, [R0], -R0 
FUNC_END VENC_VpssSend


FUNC_BEGIN VENC_UserSend
    /*0002124c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00021250*/ SUB         SP, SP, #180                @ 0xb4 
    /*00021254*/ MOV         R0, R1 
    /*00021258*/ MOV         R8, R1 
    /*0002125c*/ MOV         FP, R2 
    /*00021260*/ MOV         SL, R3 
    /*00021264*/ MOV         R3, #0 
    /*00021268*/ STR         R3, [SP, #52]               @ 0x34 
    /*0002126c*/ BL          0x000000000002126C          @ MkpVencCheckChn [R_ARM_CALL: .text+0x7ac] 
    /*00021270*/ SUBS        R7, R0, #0 
    /*00021274*/ BEQ         VENC_UserSend_x21284
    VENC_UserSend_x21278:
    /*00021278*/ MOV         R0, R7 
    /*0002127c*/ ADD         SP, SP, #180                @ 0xb4 
    /*00021280*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_UserSend_x21284:
    /*00021284*/ MOV         R0, R8 
    /*00021288*/ BL          0x0000000000021288          @ MkpVencCheckChnRegistered [R_ARM_CALL: .text+0x800] 
    /*0002128c*/ SUBS        R7, R0, #0 
    /*00021290*/ BNE         VENC_UserSend_x21278
    /*00021294*/ MOV         R0, FP 
    /*00021298*/ BL          0x0000000000021298          @ MkpVencCheckNull [R_ARM_CALL: .text+0x798] 
    /*0002129c*/ SUBS        R7, R0, #0 
    /*000212a0*/ BNE         VENC_UserSend_x21278
    /*000212a4*/ MOVW        R4, #36240                  @ 0x8d90 
    /*000212a8*/ MOVW        R3, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000212ac*/ MUL         R4, R4, R8 
    /*000212b0*/ MOVT        R3, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000212b4*/ LDR         R5, [R3] 
    /*000212b8*/ ADD         R3, R5, R4 
    /*000212bc*/ STR         R3, [SP, #28] 
    /*000212c0*/ ADD         R3, R3, #12416              @ 0x3080 
    /*000212c4*/ ADD         R3, R3, #16 
    /*000212c8*/ STR         R3, [SP, #20] 
    /*000212cc*/ MOV         R0, R3 
    /*000212d0*/ BL          0x00000000000212D0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000212d4*/ CMP         R0, #0 
    /*000212d8*/ BNE         VENC_UserSend_x21614
    /*000212dc*/ LDR         R3, [R5, R4] 
    /*000212e0*/ CMP         R3, #1 
    /*000212e4*/ BNE         VENC_UserSend_x21700
    /*000212e8*/ LDR         R1, [SP, #28] 
    /*000212ec*/ ADD         R3, R1, #8192               @ 0x2000 
    /*000212f0*/ STR         R3, [SP, #32] 
    /*000212f4*/ MOV         R2, R3 
    /*000212f8*/ LDR         R3, [R3, #4028]             @ 0xfbc 
    /*000212fc*/ ADD         R3, R3, #1 
    /*00021300*/ STR         R3, [R2, #4028]             @ 0xfbc 
    /*00021304*/ LDR         R3, [R1, #16] 
    /*00021308*/ CMP         R3, #1 
    /*0002130c*/ BNE         VENC_UserSend_x21718
    /*00021310*/ CMN         SL, #1 
    /*00021314*/ BLT         VENC_UserSend_x217f0
    /*00021318*/ LDR         R3, [SP, #28] 
    /*0002131c*/ LDR         R3, [R3, #4] 
    /*00021320*/ CMP         R3, #26 
    /*00021324*/ BEQ         VENC_UserSend_x214f4
    /*00021328*/ LDR         R2, [SP, #28] 
    /*0002132c*/ ADD         R2, R2, #12288              @ 0x3000 
    /*00021330*/ MOV         R5, R2 
    /*00021334*/ LDR         R2, [R2, #1008]             @ 0x3f0 
    /*00021338*/ CMP         R2, #1 
    /*0002133c*/ BEQ         VENC_UserSend_x21524
    /*00021340*/ BIC         R3, R3, #4 
    /*00021344*/ MOVW        R2, #1002                   @ 0x3ea 
    /*00021348*/ CMP         R3, R2 
    /*0002134c*/ BEQ         VENC_UserSend_x21374
    /*00021350*/ MOV         R0, #19 
    /*00021354*/ BL          0x0000000000021354          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00021358*/ ADD         R1, SP, #52                 @ 0x34 
    /*0002135c*/ LDR         R3, [R0, #96]               @ 0x60 
    /*00021360*/ MOV         R0, R8 
    /*00021364*/ BLX         R3 
    /*00021368*/ LDR         R3, [SP, #52]               @ 0x34 
    /*0002136c*/ CMP         R3, #0 
    /*00021370*/ BNE         VENC_UserSend_x217b4
    VENC_UserSend_x21374:
    /*00021374*/ LDR         R4, [SP, #28] 
    /*00021378*/ ADD         R3, FP, #48                 @ 0x30 
    /*0002137c*/ STR         R3, [SP, #36]               @ 0x24 
    /*00021380*/ MOV         R0, R3 
    /*00021384*/ MOV         R1, R4 
    /*00021388*/ BL          0x0000000000021388          @ VencCheckVideoInfo [R_ARM_CALL: .text+0x2051c] 
    /*0002138c*/ SUBS        R7, R0, #0 
    /*00021390*/ BNE         VENC_UserSend_x215d0
    /*00021394*/ ADD         R6, R4, #12352              @ 0x3040 
    /*00021398*/ STR         R8, [SP, #24] 
    /*0002139c*/ LDR         R8, [SP, #32] 
    /*000213a0*/ ADD         R6, R6, #56                 @ 0x38 
    /*000213a4*/ STR         FP, [SP, #44]               @ 0x2c 
    /*000213a8*/ MOV         R9, R4 
    /*000213ac*/ MOV         FP, R5 
    /*000213b0*/ STR         R7, [SP, #40]               @ 0x28 
    VENC_UserSend_x213b4:
    /*000213b4*/ MOV         R0, R9 
    /*000213b8*/ BL          0x00000000000213B8          @ VencCheckFreeNode [R_ARM_CALL: .text+0x1e604] 
    /*000213bc*/ CMP         R0, #0 
    /*000213c0*/ BNE         VENC_UserSend_x2162c
    /*000213c4*/ LDR         R0, [SP, #20] 
    /*000213c8*/ BL          0x00000000000213C8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000213cc*/ LDR         R3, [R8, #4044]             @ 0xfcc 
    /*000213d0*/ MOVW        R0, #3015                   @ 0xbc7 
    /*000213d4*/ MOVW        R2, #0                      @ .LC103 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9454] 
    /*000213d8*/ ADD         R3, R3, #1 
    /*000213dc*/ MOVT        R2, #0                      @ .LC103 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9454] 
    /*000213e0*/ STR         R3, [R8, #4044]             @ 0xfcc 
    /*000213e4*/ MOV         R1, #8 
    /*000213e8*/ STR         R0, [SP] 
    /*000213ec*/ MOV         R0, #4 
    /*000213f0*/ LDR         R3, [PC, #1180]             @ 0x0000000000021894 
    /*000213f4*/ BL          0x00000000000213F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000213f8*/ CMP         SL, #0 
    /*000213fc*/ BEQ         VENC_UserSend_x21620
    /*00021400*/ CMN         SL, #1 
    /*00021404*/ LDR         R3, [FP, #176]              @ 0xb0 
    /*00021408*/ BEQ         VENC_UserSend_x2155c
    /*0002140c*/ LDR         R2, [SP, #24] 
    /*00021410*/ MOVW        R7, #0                      @ VENC_WaitConditionCallBack2 [R_ARM_MOVW_ABS_NC: .text+0x1be74] 
    /*00021414*/ ADD         R5, SP, #56                 @ 0x38 
    /*00021418*/ MOVT        R7, #0                      @ VENC_WaitConditionCallBack2 [R_ARM_MOVT_ABS: .text+0x1be74] 
    /*0002141c*/ MOV         R4, SL 
    /*00021420*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00021424*/ STR         R2, [SP, #56]               @ 0x38 
    /*00021428*/ B           VENC_UserSend_x21440
    VENC_UserSend_x2142c:
    /*0002142c*/ BL          0x000000000002142C          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*00021430*/ ADD         R3, R0, #512                @ 0x200 
    /*00021434*/ MOV         R4, R0 
    /*00021438*/ BICS        R3, R3, #512                @ 0x200 
    /*0002143c*/ BEQ         VENC_UserSend_x2146c
    VENC_UserSend_x21440:
    /*00021440*/ MOV         R0, R5 
    /*00021444*/ BL          0x0000000000021444          @ VENC_WaitConditionCallBack2 [R_ARM_CALL: .text+0x1be74] 
    /*00021448*/ MOV         R3, R4 
    /*0002144c*/ MOV         R2, R5 
    /*00021450*/ MOV         R1, R7 
    /*00021454*/ CMP         R0, #0 
    /*00021458*/ MOV         R0, R6 
    /*0002145c*/ BEQ         VENC_UserSend_x2142c
    /*00021460*/ MOV         R0, R4 
    /*00021464*/ BL          0x0000000000021464          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*00021468*/ MOV         R4, R0 
    VENC_UserSend_x2146c:
    /*0002146c*/ CMP         R4, #0 
    /*00021470*/ BLT         VENC_UserSend_x215ec
    /*00021474*/ BEQ         VENC_UserSend_x216cc
    VENC_UserSend_x21478:
    /*00021478*/ LDR         R0, [SP, #20] 
    /*0002147c*/ BL          0x000000000002147C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00021480*/ CMP         R0, #0 
    /*00021484*/ BNE         VENC_UserSend_x21614
    /*00021488*/ LDR         R3, [R9] 
    /*0002148c*/ CMP         R3, #1 
    /*00021490*/ BNE         VENC_UserSend_x214b8
    /*00021494*/ LDR         R2, [SP, #60]               @ 0x3c 
    /*00021498*/ LDR         R3, [FP, #176]              @ 0xb0 
    /*0002149c*/ CMP         R2, R3 
    /*000214a0*/ BNE         VENC_UserSend_x214b8
    /*000214a4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xc0] 
    /*000214a8*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xc0] 
    /*000214ac*/ LDR         R3, [R3] 
    /*000214b0*/ CMP         R3, #0 
    /*000214b4*/ BEQ         VENC_UserSend_x213b4
    VENC_UserSend_x214b8:
    /*000214b8*/ LDR         R8, [SP, #24] 
    /*000214bc*/ MOVW        R2, #0                      @ .LC114 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x970c] 
    /*000214c0*/ MOVT        R2, #0                      @ .LC114 [R_ARM_MOVT_ABS: .rodata.str1.4+0x970c] 
    /*000214c4*/ MOVW        R3, #3058                   @ 0xbf2 
    /*000214c8*/ STR         R3, [SP] 
    /*000214cc*/ STR         R8, [SP, #4] 
    VENC_UserSend_x214d0:
    /*000214d0*/ LDR         R3, [PC, #956]              @ 0x0000000000021894 
    /*000214d4*/ MOV         R1, #8 
    /*000214d8*/ MOV         R0, #3 
    /*000214dc*/ MOVW        R7, #32773                  @ 0x8005 
    /*000214e0*/ BL          0x00000000000214E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000214e4*/ LDR         R0, [SP, #20] 
    /*000214e8*/ BL          0x00000000000214E8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000214ec*/ MOVT        R7, #40968                  @ 0xa008 
    /*000214f0*/ B           VENC_UserSend_x21278
    VENC_UserSend_x214f4:
    /*000214f4*/ LDR         R3, [SP, #28] 
    /*000214f8*/ ADD         R3, R3, #12288              @ 0x3000 
    /*000214fc*/ MOV         R5, R3 
    /*00021500*/ LDR         R3, [R3, #128]              @ 0x80 
    /*00021504*/ CMP         R3, #1 
    /*00021508*/ BEQ         VENC_UserSend_x21878
    /*0002150c*/ LDR         R3, [R5, #672]              @ 0x2a0 
    /*00021510*/ CMP         R3, #0 
    /*00021514*/ BNE         VENC_UserSend_x21824
    /*00021518*/ LDR         R3, [R5, #1008]             @ 0x3f0 
    /*0002151c*/ CMP         R3, #1 
    /*00021520*/ BNE         VENC_UserSend_x21374
    VENC_UserSend_x21524:
    /*00021524*/ MOVW        R3, #2988                   @ 0xbac 
    /*00021528*/ MOV         R1, #8 
    /*0002152c*/ STR         R3, [SP] 
    /*00021530*/ MOVW        R2, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x93b8] 
    /*00021534*/ LDR         R3, [PC, #856]              @ 0x0000000000021894 
    /*00021538*/ MOVT        R2, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0x93b8] 
    /*0002153c*/ STR         R8, [SP, #4] 
    /*00021540*/ MOV         R0, #3 
    /*00021544*/ BL          0x0000000000021544          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021548*/ LDR         R0, [SP, #20] 
    /*0002154c*/ MOVW        R7, #32777                  @ 0x8009 
    /*00021550*/ BL          0x0000000000021550          @ osal_up [R_ARM_CALL: +0x0] 
    /*00021554*/ MOVT        R7, #40968                  @ 0xa008 
    /*00021558*/ B           VENC_UserSend_x21278
    VENC_UserSend_x2155c:
    /*0002155c*/ LDR         R2, [SP, #24] 
    /*00021560*/ MOVW        R4, #0                      @ VENC_WaitConditionCallBack2 [R_ARM_MOVW_ABS_NC: .text+0x1be74] 
    /*00021564*/ ADD         R5, SP, #56                 @ 0x38 
    /*00021568*/ MOVT        R4, #0                      @ VENC_WaitConditionCallBack2 [R_ARM_MOVT_ABS: .text+0x1be74] 
    /*0002156c*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00021570*/ STR         R2, [SP, #56]               @ 0x38 
    VENC_UserSend_x21574:
    /*00021574*/ MOV         R0, R5 
    /*00021578*/ BL          0x0000000000021578          @ VENC_WaitConditionCallBack2 [R_ARM_CALL: .text+0x1be74] 
    /*0002157c*/ MOV         R3, #100                    @ 0x64 
    /*00021580*/ MOV         R2, R5 
    /*00021584*/ MOV         R1, R4 
    /*00021588*/ CMP         R0, #0 
    /*0002158c*/ MOV         R0, R6 
    /*00021590*/ BNE         VENC_UserSend_x21478
    /*00021594*/ BL          0x0000000000021594          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*00021598*/ CMP         R0, #0 
    /*0002159c*/ BGE         VENC_UserSend_x21574
    /*000215a0*/ MOVW        R3, #3028                   @ 0xbd4 
    /*000215a4*/ MOVW        R2, #0                      @ .LC115 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9748] 
    /*000215a8*/ STR         R3, [SP, #4] 
    /*000215ac*/ MOVT        R2, #0                      @ .LC115 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9748] 
    /*000215b0*/ STR         R3, [SP] 
    /*000215b4*/ MOV         R1, #8 
    /*000215b8*/ LDR         R3, [PC, #724]              @ 0x0000000000021894 
    /*000215bc*/ MOV         R0, #1 
    /*000215c0*/ MOV         R7, #65024                  @ 0xfe00 
    /*000215c4*/ BL          0x00000000000215C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000215c8*/ MOVT        R7, #65535                  @ 0xffff 
    /*000215cc*/ B           VENC_UserSend_x21278
    VENC_UserSend_x215d0:
    /*000215d0*/ LDR         R2, [SP, #32] 
    /*000215d4*/ LDR         R0, [SP, #20] 
    /*000215d8*/ LDR         R3, [R2, #4032]             @ 0xfc0 
    /*000215dc*/ ADD         R3, R3, #1 
    /*000215e0*/ STR         R3, [R2, #4032]             @ 0xfc0 
    /*000215e4*/ BL          0x00000000000215E4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000215e8*/ B           VENC_UserSend_x21278
    VENC_UserSend_x215ec:
    /*000215ec*/ LDR         R8, [SP, #24] 
    /*000215f0*/ MOVW        R3, #3041                   @ 0xbe1 
    /*000215f4*/ MOVW        R2, #0                      @ .LC112 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x96a4] 
    /*000215f8*/ STR         R3, [SP] 
    /*000215fc*/ MOVT        R2, #0                      @ .LC112 [R_ARM_MOVT_ABS: .rodata.str1.4+0x96a4] 
    /*00021600*/ LDR         R3, [PC, #652]              @ 0x0000000000021894 
    /*00021604*/ STR         R8, [SP, #4] 
    /*00021608*/ MOV         R1, #8 
    /*0002160c*/ MOV         R0, #1 
    /*00021610*/ BL          0x0000000000021610          @ HI_LOG [R_ARM_CALL: +0x0] 
    VENC_UserSend_x21614:
    /*00021614*/ MOV         R7, #65024                  @ 0xfe00 
    /*00021618*/ MOVT        R7, #65535                  @ 0xffff 
    /*0002161c*/ B           VENC_UserSend_x21278
    VENC_UserSend_x21620:
    /*00021620*/ MOVW        R7, #32781                  @ 0x800d 
    /*00021624*/ MOVT        R7, #40968                  @ 0xa008 
    /*00021628*/ B           VENC_UserSend_x21278
    VENC_UserSend_x2162c:
    /*0002162c*/ LDR         R3, [SP, #28] 
    /*00021630*/ LDR         R7, [SP, #40]               @ 0x28 
    /*00021634*/ LDR         R8, [SP, #24] 
    /*00021638*/ LDR         R3, [R3, #52]               @ 0x34 
    /*0002163c*/ LDR         FP, [SP, #44]               @ 0x2c 
    /*00021640*/ CMP         R3, #0 
    /*00021644*/ BEQ         VENC_UserSend_x21760
    /*00021648*/ LDR         R2, [SP, #28] 
    /*0002164c*/ MOV         R3, #0 
    /*00021650*/ STR         R3, [R2, #52]               @ 0x34 
    VENC_UserSend_x21654:
    /*00021654*/ LDR         R0, [SP, #28] 
    /*00021658*/ BL          0x0000000000021658          @ VencIsSendRateOverflow [R_ARM_CALL: .text+0xdd4] 
    /*0002165c*/ CMP         R0, #1 
    /*00021660*/ BEQ         VENC_UserSend_x21864
    /*00021664*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00021668*/ ADD         R0, SP, #176                @ 0xb0 
    /*0002166c*/ LDR         R1, [SP, #28] 
    /*00021670*/ MOV         R4, #0 
    /*00021674*/ MOV         R5, #0 
    /*00021678*/ MOV         R2, #1 
    /*0002167c*/ STR         R3, [R0, #-112]!            @ 0xffffff90 
    /*00021680*/ MOV         R3, #0 
    /*00021684*/ STRD        R4, [SP, #144]              @ 0x90 
    /*00021688*/ STR         R3, [SP, #136]              @ 0x88 
    /*0002168c*/ STR         R3, [SP, #152]              @ 0x98 
    /*00021690*/ STR         R3, [SP, #156]              @ 0x9c 
    /*00021694*/ STR         R3, [SP, #72]               @ 0x48 
    /*00021698*/ STR         R3, [SP, #80]               @ 0x50 
    /*0002169c*/ STR         R3, [SP, #96]               @ 0x60 
    /*000216a0*/ STR         R3, [SP, #84]               @ 0x54 
    /*000216a4*/ STR         R3, [SP, #116]              @ 0x74 
    /*000216a8*/ STRD        R4, [SP, #88]               @ 0x58 
    /*000216ac*/ STRD        R4, [SP, #104]              @ 0x68 
    /*000216b0*/ STR         R2, [SP, #112]              @ 0x70 
    /*000216b4*/ BL          0x000000000001F2AC 
    /*000216b8*/ SUBS        R7, R0, #0 
    /*000216bc*/ BNE         VENC_UserSend_x215d0
    /*000216c0*/ LDR         R0, [SP, #20] 
    /*000216c4*/ BL          0x00000000000216C4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000216c8*/ B           VENC_UserSend_x21278
    VENC_UserSend_x216cc:
    /*000216cc*/ LDR         R8, [SP, #24] 
    /*000216d0*/ MOVW        R3, #3046                   @ 0xbe6 
    /*000216d4*/ MOVW        R2, #0                      @ .LC113 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x96dc] 
    /*000216d8*/ STR         R3, [SP] 
    /*000216dc*/ MOVT        R2, #0                      @ .LC113 [R_ARM_MOVT_ABS: .rodata.str1.4+0x96dc] 
    /*000216e0*/ LDR         R3, [PC, #428]              @ 0x0000000000021894 
    /*000216e4*/ STR         R8, [SP, #4] 
    /*000216e8*/ MOV         R1, #8 
    /*000216ec*/ MOV         R0, #1 
    /*000216f0*/ MOVW        R7, #32786                  @ 0x8012 
    /*000216f4*/ BL          0x00000000000216F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000216f8*/ MOVT        R7, #40968                  @ 0xa008 
    /*000216fc*/ B           VENC_UserSend_x21278
    VENC_UserSend_x21700:
    /*00021700*/ MOVW        R3, #2938                   @ 0xb7a 
    /*00021704*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7944] 
    /*00021708*/ STR         R8, [SP, #4] 
    /*0002170c*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7944] 
    /*00021710*/ STR         R3, [SP] 
    /*00021714*/ B           VENC_UserSend_x214d0
    VENC_UserSend_x21718:
    /*00021718*/ LDR         R1, [R2, #4040]             @ 0xfc8 
    /*0002171c*/ MOV         R0, R2 
    /*00021720*/ MOVW        IP, #2947                   @ 0xb83 
    /*00021724*/ LDR         R3, [PC, #360]              @ 0x0000000000021894 
    /*00021728*/ ADD         R1, R1, #1 
    /*0002172c*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x82b8] 
    /*00021730*/ STR         R1, [R0, #4040]             @ 0xfc8 
    /*00021734*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x82b8] 
    /*00021738*/ MOV         R1, #8 
    /*0002173c*/ STR         IP, [SP] 
    /*00021740*/ STR         R8, [SP, #4] 
    /*00021744*/ MOV         R0, #3 
    /*00021748*/ BL          0x0000000000021748          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002174c*/ LDR         R0, [SP, #20] 
    /*00021750*/ MOVW        R7, #32777                  @ 0x8009 
    /*00021754*/ BL          0x0000000000021754          @ osal_up [R_ARM_CALL: +0x0] 
    /*00021758*/ MOVT        R7, #40968                  @ 0xa008 
    /*0002175c*/ B           VENC_UserSend_x21278
    VENC_UserSend_x21760:
    /*00021760*/ LDR         R1, [FP, #280]              @ 0x118 
    /*00021764*/ LDR         R0, [SP, #28] 
    /*00021768*/ BL          0x0000000000021768          @ VencFrmRateCtl [R_ARM_CALL: .text+0xcc0] 
    /*0002176c*/ CMP         R0, #0 
    /*00021770*/ BNE         VENC_UserSend_x21654
    /*00021774*/ LDR         R1, [SP, #32] 
    /*00021778*/ MOVW        IP, #3074                   @ 0xc02 
    /*0002177c*/ MOVW        R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8358] 
    /*00021780*/ MOV         R0, #4 
    /*00021784*/ MOVT        R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8358] 
    /*00021788*/ LDR         R3, [R1, #4004]             @ 0xfa4 
    /*0002178c*/ ADD         R3, R3, #1 
    /*00021790*/ STR         R3, [R1, #4004]             @ 0xfa4 
    /*00021794*/ LDR         R3, [PC, #248]              @ 0x0000000000021894 
    /*00021798*/ MOV         R1, #8 
    /*0002179c*/ STR         R8, [SP, #4] 
    /*000217a0*/ STR         IP, [SP] 
    /*000217a4*/ BL          0x00000000000217A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000217a8*/ LDR         R0, [SP, #20] 
    /*000217ac*/ BL          0x00000000000217AC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000217b0*/ B           VENC_UserSend_x21278
    VENC_UserSend_x217b4:
    /*000217b4*/ MOVW        R2, #0                      @ .LC102 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9404] 
    /*000217b8*/ MOVT        R2, #0                      @ .LC102 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9404] 
    /*000217bc*/ STR         R3, [SP, #8] 
    /*000217c0*/ MOVW        R3, #2999                   @ 0xbb7 
    /*000217c4*/ STR         R8, [SP, #4] 
    /*000217c8*/ STR         R3, [SP] 
    VENC_UserSend_x217cc:
    /*000217cc*/ LDR         R3, [PC, #192]              @ 0x0000000000021894 
    /*000217d0*/ MOV         R1, #8 
    /*000217d4*/ MOV         R0, #3 
    /*000217d8*/ MOVW        R7, #32777                  @ 0x8009 
    /*000217dc*/ BL          0x00000000000217DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000217e0*/ LDR         R0, [SP, #20] 
    /*000217e4*/ BL          0x00000000000217E4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000217e8*/ MOVT        R7, #40968                  @ 0xa008 
    /*000217ec*/ B           VENC_UserSend_x21278
    VENC_UserSend_x217f0:
    /*000217f0*/ MOV         R3, SL 
    /*000217f4*/ MVN         R1, #0 
    /*000217f8*/ MOVW        R2, #0                      @ .LC109 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x95c4] 
    /*000217fc*/ STR         R1, [SP] 
    /*00021800*/ MOVT        R2, #0                      @ .LC109 [R_ARM_MOVT_ABS: .rodata.str1.4+0x95c4] 
    /*00021804*/ MOV         R1, #8 
    /*00021808*/ MOV         R0, #3 
    /*0002180c*/ MOVW        R7, #32771                  @ 0x8003 
    /*00021810*/ BL          0x0000000000021810          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021814*/ LDR         R0, [SP, #20] 
    /*00021818*/ BL          0x0000000000021818          @ osal_up [R_ARM_CALL: +0x0] 
    /*0002181c*/ MOVT        R7, #40968                  @ 0xa008 
    /*00021820*/ B           VENC_UserSend_x21278
    VENC_UserSend_x21824:
    /*00021824*/ MOV         R2, #0 
    /*00021828*/ MOVW        R3, #2979                   @ 0xba3 
    /*0002182c*/ STR         R2, [SP, #8] 
    /*00021830*/ MOV         R1, #8 
    /*00021834*/ STR         R3, [SP] 
    /*00021838*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9654] 
    /*0002183c*/ LDR         R3, [PC, #80]               @ 0x0000000000021894 
    /*00021840*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9654] 
    /*00021844*/ STR         R8, [SP, #4] 
    /*00021848*/ MOV         R0, #4 
    /*0002184c*/ BL          0x000000000002184C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021850*/ LDR         R0, [SP, #20] 
    /*00021854*/ MOVW        R7, #32777                  @ 0x8009 
    /*00021858*/ BL          0x0000000000021858          @ osal_up [R_ARM_CALL: +0x0] 
    /*0002185c*/ MOVT        R7, #40968                  @ 0xa008 
    /*00021860*/ B           VENC_UserSend_x21278
    VENC_UserSend_x21864:
    /*00021864*/ LDR         R0, [SP, #20] 
    /*00021868*/ MOVW        R7, #32786                  @ 0x8012 
    /*0002186c*/ BL          0x000000000002186C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00021870*/ MOVT        R7, #40968                  @ 0xa008 
    /*00021874*/ B           VENC_UserSend_x21278
    VENC_UserSend_x21878:
    /*00021878*/ STR         R3, [SP, #8] 
    /*0002187c*/ MOVW        R2, #0                      @ .LC110 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x95f4] 
    /*00021880*/ MOVW        R3, #2961                   @ 0xb91 
    /*00021884*/ STR         R8, [SP, #4] 
    /*00021888*/ STR         R3, [SP] 
    /*0002188c*/ MOVT        R2, #0                      @ .LC110 [R_ARM_MOVT_ABS: .rodata.str1.4+0x95f4] 
    /*00021890*/ B           VENC_UserSend_x217cc
    /*00021894*/ ANDEQ       R1, R0, R0, ROR #1 
FUNC_END VENC_UserSend


FUNC_BEGIN VencCheckUserRcInfo
    /*00021898*/ MOVW        R3, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0002189c*/ MOVT        R3, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000218a0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000218a4*/ SUB         SP, SP, #36                 @ 0x24 
    /*000218a8*/ LDR         R3, [R3] 
    /*000218ac*/ MOVW        R5, #36240                  @ 0x8d90 
    /*000218b0*/ MOV         R2, #0 
    /*000218b4*/ MOV         R7, R0 
    /*000218b8*/ MOV         R6, R1 
    /*000218bc*/ STR         R2, [SP, #28] 
    /*000218c0*/ MLA         R5, R5, R0, R3 
    /*000218c4*/ BL          0x00000000000218C4          @ VENC_DRV_IsSupportQpMap [R_ARM_CALL: .text+0x26a24] 
    /*000218c8*/ CMP         R0, #0 
    /*000218cc*/ BEQ         VencCheckUserRcInfo_x21c08
    /*000218d0*/ LDR         R3, [R5, #4] 
    /*000218d4*/ MOVW        R2, #265                    @ 0x109 
    /*000218d8*/ CMP         R3, #96                     @ 0x60 
    /*000218dc*/ CMPNE       R3, R2 
    /*000218e0*/ BNE         VencCheckUserRcInfo_x21c38
    /*000218e4*/ ADD         R4, R5, #12288              @ 0x3000 
    /*000218e8*/ LDR         R3, [R4, #676]              @ 0x2a4 
    /*000218ec*/ CMP         R3, #16 
    /*000218f0*/ CMPNE       R3, #6 
    /*000218f4*/ BEQ         VencCheckUserRcInfo_x21c6c
    /*000218f8*/ LDR         R3, [R6, #40]               @ 0x28 
    /*000218fc*/ SUB         R2, R3, #1 
    /*00021900*/ CMP         R2, #1 
    /*00021904*/ BHI         VencCheckUserRcInfo_x21b74
    /*00021908*/ LDR         R2, [R4, #716]              @ 0x2cc 
    /*0002190c*/ CMP         R2, #4 
    /*00021910*/ BEQ         VencCheckUserRcInfo_x219c4
    /*00021914*/ LDR         R2, [R4, #608]              @ 0x260 
    /*00021918*/ CMP         R2, #4 
    /*0002191c*/ BEQ         VencCheckUserRcInfo_x219c4
    VencCheckUserRcInfo_x21920:
    /*00021920*/ LDR         R3, [R4, #1008]             @ 0x3f0 
    /*00021924*/ CMP         R3, #0 
    /*00021928*/ BEQ         VencCheckUserRcInfo_x21a0c
    VencCheckUserRcInfo_x2192c:
    /*0002192c*/ LDR         R3, [R6, #8] 
    /*00021930*/ CMP         R3, #51                     @ 0x33 
    /*00021934*/ BHI         VencCheckUserRcInfo_x21c88
    /*00021938*/ LDR         R3, [R6, #4] 
    /*0002193c*/ CMP         R3, #1 
    /*00021940*/ BHI         VencCheckUserRcInfo_x21bb8
    /*00021944*/ CMP         R3, #0 
    /*00021948*/ BNE         VencCheckUserRcInfo_x21a74
    VencCheckUserRcInfo_x2194c:
    /*0002194c*/ LDR         R3, [R6, #24] 
    /*00021950*/ CMP         R3, #1 
    /*00021954*/ BHI         VencCheckUserRcInfo_x21bec
    /*00021958*/ CMP         R3, #0 
    /*0002195c*/ BEQ         VencCheckUserRcInfo_x219b4
    /*00021960*/ LDR         R1, [R5, #4] 
    /*00021964*/ MOVW        R3, #265                    @ 0x109 
    /*00021968*/ LDR         R2, [R4, #148]              @ 0x94 
    /*0002196c*/ CMP         R1, R3 
    /*00021970*/ LDR         R3, [R4, #152]              @ 0x98 
    /*00021974*/ BEQ         VencCheckUserRcInfo_x21b2c
    /*00021978*/ CMP         R1, #96                     @ 0x60 
    /*0002197c*/ ADDEQ       R2, R2, #508                @ 0x1fc 
    /*00021980*/ ADDEQ       R4, R3, #15 
    /*00021984*/ ADDEQ       R2, R2, #3 
    /*00021988*/ MOVNE       R4, #0 
    /*0002198c*/ LSREQ       R4, R4, #4 
    /*00021990*/ LSREQ       R2, R2, #9 
    /*00021994*/ LSLEQ       R2, R2, #4 
    /*00021998*/ MULEQ       R4, R4, R2 
    VencCheckUserRcInfo_x2199c:
    /*0002199c*/ LDR         R5, [R6, #32] 
    /*000219a0*/ MOV         R1, R4 
    /*000219a4*/ MOV         R0, R5 
    /*000219a8*/ BL          0x00000000000219A8          @ hil_is_phys_in_mmz [R_ARM_CALL: +0x0] 
    /*000219ac*/ CMP         R0, #0 
    /*000219b0*/ BNE         VencCheckUserRcInfo_x21ae0
    VencCheckUserRcInfo_x219b4:
    /*000219b4*/ MOV         R8, #0 
    VencCheckUserRcInfo_x219b8:
    /*000219b8*/ MOV         R0, R8 
    /*000219bc*/ ADD         SP, SP, #36                 @ 0x24 
    /*000219c0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VencCheckUserRcInfo_x219c4:
    /*000219c4*/ CMP         R3, #1 
    /*000219c8*/ BEQ         VencCheckUserRcInfo_x21920
    /*000219cc*/ MOV         R2, #1 
    /*000219d0*/ MOV         R3, #2 
    /*000219d4*/ STR         R2, [SP, #12] 
    /*000219d8*/ MOV         R1, #8 
    /*000219dc*/ STR         R3, [SP, #8] 
    /*000219e0*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x98bc] 
    /*000219e4*/ MOVW        R3, #3173                   @ 0xc65 
    /*000219e8*/ STR         R7, [SP, #4] 
    /*000219ec*/ STR         R3, [SP] 
    /*000219f0*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0x98bc] 
    /*000219f4*/ LDR         R3, [PC, #680]              @ 0x0000000000021ca4 
    /*000219f8*/ MOV         R0, #3 
    /*000219fc*/ MOVW        R8, #32777                  @ 0x8009 
    /*00021a00*/ BL          0x0000000000021A00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021a04*/ MOVT        R8, #40968                  @ 0xa008 
    /*00021a08*/ B           VencCheckUserRcInfo_x219b8
    VencCheckUserRcInfo_x21a0c:
    /*00021a0c*/ MOV         R0, #19 
    /*00021a10*/ BL          0x0000000000021A10          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00021a14*/ ADD         R1, SP, #28 
    /*00021a18*/ LDR         R3, [R0, #96]               @ 0x60 
    /*00021a1c*/ MOV         R0, R7 
    /*00021a20*/ BLX         R3 
    /*00021a24*/ SUBS        R8, R0, #0 
    /*00021a28*/ BNE         VencCheckUserRcInfo_x21b4c
    /*00021a2c*/ LDR         R3, [SP, #28] 
    /*00021a30*/ CMP         R3, #0 
    /*00021a34*/ BNE         VencCheckUserRcInfo_x2192c
    /*00021a38*/ STR         R8, [SP, #12] 
    /*00021a3c*/ MOVW        R1, #3189                   @ 0xc75 
    /*00021a40*/ LDR         R3, [R4, #676]              @ 0x2a4 
    /*00021a44*/ MOVW        R2, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9964] 
    /*00021a48*/ STR         R1, [SP] 
    /*00021a4c*/ MOVT        R2, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9964] 
    /*00021a50*/ STR         R7, [SP, #4] 
    /*00021a54*/ MOV         R1, #8 
    /*00021a58*/ STR         R3, [SP, #8] 
    /*00021a5c*/ MOV         R0, #3 
    /*00021a60*/ LDR         R3, [PC, #572]              @ 0x0000000000021ca4 
    /*00021a64*/ MOVW        R8, #32777                  @ 0x8009 
    /*00021a68*/ BL          0x0000000000021A68          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021a6c*/ MOVT        R8, #40968                  @ 0xa008 
    /*00021a70*/ B           VencCheckUserRcInfo_x219b8
    VencCheckUserRcInfo_x21a74:
    /*00021a74*/ LDR         R3, [R4, #148]              @ 0x94 
    /*00021a78*/ LDR         R8, [R4, #152]              @ 0x98 
    /*00021a7c*/ ADD         R3, R3, #508                @ 0x1fc 
    /*00021a80*/ LDR         R9, [R6, #16] 
    /*00021a84*/ ADD         R3, R3, #3 
    /*00021a88*/ ADD         R8, R8, #15 
    /*00021a8c*/ LSR         R3, R3, #9 
    /*00021a90*/ LSR         R8, R8, #4 
    /*00021a94*/ MOV         R0, R9 
    /*00021a98*/ MUL         R8, R8, R3 
    /*00021a9c*/ LSL         R8, R8, #5 
    /*00021aa0*/ MOV         R1, R8 
    /*00021aa4*/ BL          0x0000000000021AA4          @ hil_is_phys_in_mmz [R_ARM_CALL: +0x0] 
    /*00021aa8*/ CMP         R0, #0 
    /*00021aac*/ BEQ         VencCheckUserRcInfo_x2194c
    /*00021ab0*/ MOV         R1, R8 
    /*00021ab4*/ MOV         R0, R9 
    /*00021ab8*/ BL          0x0000000000021AB8          @ hil_map_mmz_check_phys [R_ARM_CALL: +0x0] 
    /*00021abc*/ CMP         R0, #0 
    /*00021ac0*/ BEQ         VencCheckUserRcInfo_x2194c
    /*00021ac4*/ LDRD        R0, [R6, #16] 
    /*00021ac8*/ MOVW        R3, #3212                   @ 0xc8c 
    /*00021acc*/ MOVW        R2, #0                      @ .LC126 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9ae8] 
    /*00021ad0*/ STR         R7, [SP, #4] 
    /*00021ad4*/ STR         R3, [SP] 
    /*00021ad8*/ MOVT        R2, #0                      @ .LC126 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9ae8] 
    /*00021adc*/ B           VencCheckUserRcInfo_x21b0c
    VencCheckUserRcInfo_x21ae0:
    /*00021ae0*/ MOV         R1, R4 
    /*00021ae4*/ MOV         R0, R5 
    /*00021ae8*/ BL          0x0000000000021AE8          @ hil_map_mmz_check_phys [R_ARM_CALL: +0x0] 
    /*00021aec*/ CMP         R0, #0 
    /*00021af0*/ BEQ         VencCheckUserRcInfo_x219b4
    /*00021af4*/ MOVW        R2, #0                      @ .LC127 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9b48] 
    /*00021af8*/ MOVT        R2, #0                      @ .LC127 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9b48] 
    /*00021afc*/ LDRD        R0, [R6, #32] 
    /*00021b00*/ MOVW        R3, #3229                   @ 0xc9d 
    /*00021b04*/ STR         R7, [SP, #4] 
    /*00021b08*/ STR         R3, [SP] 
    VencCheckUserRcInfo_x21b0c:
    /*00021b0c*/ STRD        R0, [SP, #8] 
    /*00021b10*/ MOV         R1, #8 
    /*00021b14*/ LDR         R3, [PC, #392]              @ 0x0000000000021ca4 
    /*00021b18*/ MOV         R0, #3 
    /*00021b1c*/ MOVW        R8, #32771                  @ 0x8003 
    /*00021b20*/ BL          0x0000000000021B20          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021b24*/ MOVT        R8, #40968                  @ 0xa008 
    /*00021b28*/ B           VencCheckUserRcInfo_x219b8
    VencCheckUserRcInfo_x21b2c:
    /*00021b2c*/ ADD         R2, R2, #2032               @ 0x7f0 
    /*00021b30*/ ADD         R4, R3, #63                 @ 0x3f 
    /*00021b34*/ ADD         R2, R2, #15 
    /*00021b38*/ LSR         R4, R4, #6 
    /*00021b3c*/ LSR         R2, R2, #11 
    /*00021b40*/ LSL         R2, R2, #4 
    /*00021b44*/ MUL         R4, R4, R2 
    /*00021b48*/ B           VencCheckUserRcInfo_x2199c
    VencCheckUserRcInfo_x21b4c:
    /*00021b4c*/ MOVW        R3, #3183                   @ 0xc6f 
    /*00021b50*/ STR         R7, [SP, #4] 
    /*00021b54*/ STR         R3, [SP] 
    /*00021b58*/ MOVW        R2, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9914] 
    /*00021b5c*/ LDR         R3, [PC, #320]              @ 0x0000000000021ca4 
    /*00021b60*/ MOVT        R2, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9914] 
    /*00021b64*/ MOV         R1, #8 
    /*00021b68*/ MOV         R0, #3 
    /*00021b6c*/ BL          0x0000000000021B6C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021b70*/ B           VencCheckUserRcInfo_x219b8
    VencCheckUserRcInfo_x21b74:
    /*00021b74*/ MOV         R2, #3 
    /*00021b78*/ STR         R3, [SP, #8] 
    /*00021b7c*/ MOV         R0, R2 
    /*00021b80*/ STR         R2, [SP, #16] 
    /*00021b84*/ MOVW        R3, #3158                   @ 0xc56 
    /*00021b88*/ MOV         R2, #1 
    /*00021b8c*/ STR         R3, [SP] 
    /*00021b90*/ MOV         R1, #8 
    /*00021b94*/ STR         R2, [SP, #12] 
    /*00021b98*/ MOVW        R2, #0                      @ .LC119 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x986c] 
    /*00021b9c*/ STR         R7, [SP, #4] 
    /*00021ba0*/ MOVT        R2, #0                      @ .LC119 [R_ARM_MOVT_ABS: .rodata.str1.4+0x986c] 
    /*00021ba4*/ LDR         R3, [PC, #248]              @ 0x0000000000021ca4 
    /*00021ba8*/ MOVW        R8, #32771                  @ 0x8003 
    /*00021bac*/ BL          0x0000000000021BAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021bb0*/ MOVT        R8, #40968                  @ 0xa008 
    /*00021bb4*/ B           VencCheckUserRcInfo_x219b8
    VencCheckUserRcInfo_x21bb8:
    /*00021bb8*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9a0c] 
    /*00021bbc*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9a0c] 
    /*00021bc0*/ STR         R3, [SP, #8] 
    /*00021bc4*/ MOVW        R3, #3202                   @ 0xc82 
    /*00021bc8*/ STR         R7, [SP, #4] 
    /*00021bcc*/ STR         R3, [SP] 
    VencCheckUserRcInfo_x21bd0:
    /*00021bd0*/ LDR         R3, [PC, #204]              @ 0x0000000000021ca4 
    /*00021bd4*/ MOV         R1, #8 
    /*00021bd8*/ MOV         R0, #3 
    /*00021bdc*/ MOVW        R8, #32771                  @ 0x8003 
    /*00021be0*/ BL          0x0000000000021BE0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021be4*/ MOVT        R8, #40968                  @ 0xa008 
    /*00021be8*/ B           VencCheckUserRcInfo_x219b8
    VencCheckUserRcInfo_x21bec:
    /*00021bec*/ STR         R3, [SP, #8] 
    /*00021bf0*/ MOVW        R2, #0                      @ .LC125 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9a78] 
    /*00021bf4*/ MOVW        R3, #3219                   @ 0xc93 
    /*00021bf8*/ STR         R7, [SP, #4] 
    /*00021bfc*/ STR         R3, [SP] 
    /*00021c00*/ MOVT        R2, #0                      @ .LC125 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9a78] 
    /*00021c04*/ B           VencCheckUserRcInfo_x21bd0
    VencCheckUserRcInfo_x21c08:
    /*00021c08*/ MOVW        R3, #3140                   @ 0xc44 
    /*00021c0c*/ STR         R7, [SP, #4] 
    /*00021c10*/ STR         R3, [SP] 
    /*00021c14*/ MOVW        R2, #0                      @ .LC116 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x978c] 
    /*00021c18*/ LDR         R3, [PC, #132]              @ 0x0000000000021ca4 
    /*00021c1c*/ MOVT        R2, #0                      @ .LC116 [R_ARM_MOVT_ABS: .rodata.str1.4+0x978c] 
    /*00021c20*/ MOV         R1, #8 
    /*00021c24*/ MOV         R0, #3 
    /*00021c28*/ MOVW        R8, #32776                  @ 0x8008 
    /*00021c2c*/ BL          0x0000000000021C2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021c30*/ MOVT        R8, #40968                  @ 0xa008 
    /*00021c34*/ B           VencCheckUserRcInfo_x219b8
    VencCheckUserRcInfo_x21c38:
    /*00021c38*/ MOVW        R2, #0                      @ .LC117 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x97c8] 
    /*00021c3c*/ MOVT        R2, #0                      @ .LC117 [R_ARM_MOVT_ABS: .rodata.str1.4+0x97c8] 
    /*00021c40*/ STR         R3, [SP, #8] 
    /*00021c44*/ MOVW        R3, #3146                   @ 0xc4a 
    /*00021c48*/ STR         R7, [SP, #4] 
    /*00021c4c*/ STR         R3, [SP] 
    VencCheckUserRcInfo_x21c50:
    /*00021c50*/ LDR         R3, [PC, #76]               @ 0x0000000000021ca4 
    /*00021c54*/ MOV         R1, #8 
    /*00021c58*/ MOV         R0, #3 
    /*00021c5c*/ MOVW        R8, #32776                  @ 0x8008 
    /*00021c60*/ BL          0x0000000000021C60          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021c64*/ MOVT        R8, #40968                  @ 0xa008 
    /*00021c68*/ B           VencCheckUserRcInfo_x219b8
    VencCheckUserRcInfo_x21c6c:
    /*00021c6c*/ STR         R3, [SP, #8] 
    /*00021c70*/ MOVW        R2, #0                      @ .LC118 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9818] 
    /*00021c74*/ MOV         R3, #3152                   @ 0xc50 
    /*00021c78*/ STR         R7, [SP, #4] 
    /*00021c7c*/ STR         R3, [SP] 
    /*00021c80*/ MOVT        R2, #0                      @ .LC118 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9818] 
    /*00021c84*/ B           VencCheckUserRcInfo_x21c50
    VencCheckUserRcInfo_x21c88:
    /*00021c88*/ STR         R3, [SP, #8] 
    /*00021c8c*/ MOVW        R2, #0                      @ .LC123 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x99c0] 
    /*00021c90*/ MOVW        R3, #3196                   @ 0xc7c 
    /*00021c94*/ STR         R7, [SP, #4] 
    /*00021c98*/ STR         R3, [SP] 
    /*00021c9c*/ MOVT        R2, #0                      @ .LC123 [R_ARM_MOVT_ABS: .rodata.str1.4+0x99c0] 
    /*00021ca0*/ B           VencCheckUserRcInfo_x21bd0
    /*00021ca4*/ STRDEQ      R1, [R0], -R0 
FUNC_END VencCheckUserRcInfo


FUNC_BEGIN VENC_UserSendEx.part.22
    /*00021ca8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00021cac*/ MOVW        R4, #36240                  @ 0x8d90 
    /*00021cb0*/ MUL         R4, R4, R0 
    /*00021cb4*/ MOVW        R3, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00021cb8*/ MOVT        R3, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00021cbc*/ SUB         SP, SP, #156                @ 0x9c 
    /*00021cc0*/ MOV         FP, R0 
    /*00021cc4*/ MOV         R7, R2 
    /*00021cc8*/ LDR         R5, [R3] 
    /*00021ccc*/ STR         R1, [SP, #24] 
    /*00021cd0*/ ADD         R8, R5, R4 
    /*00021cd4*/ ADD         R9, R8, #12416              @ 0x3080 
    /*00021cd8*/ ADD         R9, R9, #16 
    /*00021cdc*/ MOV         R0, R9 
    /*00021ce0*/ BL          0x0000000000021CE0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00021ce4*/ CMP         R0, #0 
    /*00021ce8*/ BNE         VENC_UserSendEx.part.22_x21f78
    /*00021cec*/ LDR         R3, [R5, R4] 
    /*00021cf0*/ CMP         R3, #1 
    /*00021cf4*/ BNE         VENC_UserSendEx.part.22_x21fec
    /*00021cf8*/ ADD         SL, R8, #8192               @ 0x2000 
    /*00021cfc*/ LDR         R3, [SL, #4028]             @ 0xfbc 
    /*00021d00*/ ADD         R3, R3, #1 
    /*00021d04*/ STR         R3, [SL, #4028]             @ 0xfbc 
    /*00021d08*/ LDR         R3, [R8, #16] 
    /*00021d0c*/ CMP         R3, #1 
    /*00021d10*/ BNE         VENC_UserSendEx.part.22_x22004
    /*00021d14*/ CMN         R7, #1 
    /*00021d18*/ BLT         VENC_UserSendEx.part.22_x21f90
    /*00021d1c*/ LDR         R1, [SP, #24] 
    /*00021d20*/ MOV         R0, FP 
    /*00021d24*/ BL          0x0000000000021D24          @ VencCheckUserRcInfo [R_ARM_CALL: .text+0x21898] 
    /*00021d28*/ SUBS        R3, R0, #0 
    /*00021d2c*/ STR         R3, [SP, #20] 
    /*00021d30*/ BNE         VENC_UserSendEx.part.22_x21ec8
    /*00021d34*/ LDR         R3, [SP, #24] 
    /*00021d38*/ MOV         R1, R8 
    /*00021d3c*/ ADD         R3, R3, #48                 @ 0x30 
    /*00021d40*/ STR         R3, [SP, #28] 
    /*00021d44*/ MOV         R0, R3 
    /*00021d48*/ BL          0x0000000000021D48          @ VencCheckVideoInfo [R_ARM_CALL: .text+0x2051c] 
    /*00021d4c*/ SUBS        R3, R0, #0 
    /*00021d50*/ STR         R3, [SP, #20] 
    /*00021d54*/ BNE         VENC_UserSendEx.part.22_x21fc4
    /*00021d58*/ ADD         R6, R8, #12352              @ 0x3040 
    /*00021d5c*/ STR         FP, [SP, #12] 
    /*00021d60*/ ADD         R6, R6, #56                 @ 0x38 
    /*00021d64*/ MOV         FP, R7 
    /*00021d68*/ STR         R9, [SP, #16] 
    VENC_UserSendEx.part.22_x21d6c:
    /*00021d6c*/ MOV         R0, R8 
    /*00021d70*/ BL          0x0000000000021D70          @ VencCheckFreeNode [R_ARM_CALL: .text+0x1e604] 
    /*00021d74*/ CMP         R0, #0 
    /*00021d78*/ BNE         VENC_UserSendEx.part.22_x22064
    /*00021d7c*/ LDR         R0, [SP, #16] 
    /*00021d80*/ BL          0x0000000000021D80          @ osal_up [R_ARM_CALL: +0x0] 
    /*00021d84*/ LDR         R3, [SL, #4044]             @ 0xfcc 
    /*00021d88*/ MOVW        IP, #3318                   @ 0xcf6 
    /*00021d8c*/ MOVW        R2, #0                      @ .LC130 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c28] 
    /*00021d90*/ ADD         R3, R3, #1 
    /*00021d94*/ STR         R3, [SL, #4044]             @ 0xfcc 
    /*00021d98*/ LDR         R3, [SP, #12] 
    /*00021d9c*/ MOVT        R2, #0                      @ .LC130 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c28] 
    /*00021da0*/ MOV         R1, #8 
    /*00021da4*/ MOV         R0, #4 
    /*00021da8*/ STR         IP, [SP] 
    /*00021dac*/ STR         R3, [SP, #4] 
    /*00021db0*/ LDR         R3, [PC, #1060]             @ 0x00000000000221dc 
    /*00021db4*/ BL          0x0000000000021DB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021db8*/ CMP         FP, #0 
    /*00021dbc*/ BEQ         VENC_UserSendEx.part.22_x22054
    /*00021dc0*/ CMN         FP, #1 
    /*00021dc4*/ ADD         R9, R8, #12288              @ 0x3000 
    /*00021dc8*/ BEQ         VENC_UserSendEx.part.22_x21f0c
    /*00021dcc*/ LDR         R3, [R9, #176]              @ 0xb0 
    /*00021dd0*/ MOVW        R7, #0                      @ VENC_WaitConditionCallBack2 [R_ARM_MOVW_ABS_NC: .text+0x1be74] 
    /*00021dd4*/ LDR         R2, [SP, #12] 
    /*00021dd8*/ ADD         R5, SP, #32 
    /*00021ddc*/ MOVT        R7, #0                      @ VENC_WaitConditionCallBack2 [R_ARM_MOVT_ABS: .text+0x1be74] 
    /*00021de0*/ MOV         R4, FP 
    /*00021de4*/ STR         R3, [SP, #36]               @ 0x24 
    /*00021de8*/ STR         R2, [SP, #32] 
    /*00021dec*/ B           VENC_UserSendEx.part.22_x21e04
    VENC_UserSendEx.part.22_x21df0:
    /*00021df0*/ BL          0x0000000000021DF0          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*00021df4*/ ADD         R3, R0, #512                @ 0x200 
    /*00021df8*/ MOV         R4, R0 
    /*00021dfc*/ BICS        R3, R3, #512                @ 0x200 
    /*00021e00*/ BEQ         VENC_UserSendEx.part.22_x21e30
    VENC_UserSendEx.part.22_x21e04:
    /*00021e04*/ MOV         R0, R5 
    /*00021e08*/ BL          0x0000000000021E08          @ VENC_WaitConditionCallBack2 [R_ARM_CALL: .text+0x1be74] 
    /*00021e0c*/ MOV         R3, R4 
    /*00021e10*/ MOV         R2, R5 
    /*00021e14*/ MOV         R1, R7 
    /*00021e18*/ CMP         R0, #0 
    /*00021e1c*/ MOV         R0, R6 
    /*00021e20*/ BEQ         VENC_UserSendEx.part.22_x21df0
    /*00021e24*/ MOV         R0, R4 
    /*00021e28*/ BL          0x0000000000021E28          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*00021e2c*/ MOV         R4, R0 
    VENC_UserSendEx.part.22_x21e30:
    /*00021e30*/ CMP         R4, #0 
    /*00021e34*/ BLT         VENC_UserSendEx.part.22_x22118
    /*00021e38*/ BEQ         VENC_UserSendEx.part.22_x2213c
    VENC_UserSendEx.part.22_x21e3c:
    /*00021e3c*/ LDR         R0, [SP, #16] 
    /*00021e40*/ BL          0x0000000000021E40          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00021e44*/ CMP         R0, #0 
    /*00021e48*/ BNE         VENC_UserSendEx.part.22_x21f78
    /*00021e4c*/ LDR         R3, [R8] 
    /*00021e50*/ CMP         R3, #1 
    /*00021e54*/ BNE         VENC_UserSendEx.part.22_x21e7c
    /*00021e58*/ LDR         R3, [R9, #176]              @ 0xb0 
    /*00021e5c*/ LDR         R2, [SP, #36]               @ 0x24 
    /*00021e60*/ CMP         R2, R3 
    /*00021e64*/ BNE         VENC_UserSendEx.part.22_x21e7c
    /*00021e68*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xc0] 
    /*00021e6c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xc0] 
    /*00021e70*/ LDR         R3, [R3] 
    /*00021e74*/ CMP         R3, #0 
    /*00021e78*/ BEQ         VENC_UserSendEx.part.22_x21d6c
    VENC_UserSendEx.part.22_x21e7c:
    /*00021e7c*/ LDR         FP, [SP, #12] 
    /*00021e80*/ MOVW        R2, #0                      @ .LC131 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c64] 
    /*00021e84*/ LDR         R9, [SP, #16] 
    /*00021e88*/ MOVT        R2, #0                      @ .LC131 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c64] 
    /*00021e8c*/ MOVW        R3, #3363                   @ 0xd23 
    /*00021e90*/ STR         R3, [SP] 
    /*00021e94*/ STR         FP, [SP, #4] 
    VENC_UserSendEx.part.22_x21e98:
    /*00021e98*/ LDR         R3, [PC, #828]              @ 0x00000000000221dc 
    /*00021e9c*/ MOV         R1, #8 
    /*00021ea0*/ MOV         R0, #3 
    /*00021ea4*/ BL          0x0000000000021EA4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021ea8*/ MOV         R0, R9 
    /*00021eac*/ BL          0x0000000000021EAC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00021eb0*/ MOVW        R3, #32773                  @ 0x8005 
    /*00021eb4*/ MOVT        R3, #40968                  @ 0xa008 
    /*00021eb8*/ STR         R3, [SP, #20] 
    /*00021ebc*/ LDR         R0, [SP, #20] 
    /*00021ec0*/ ADD         SP, SP, #156                @ 0x9c 
    /*00021ec4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_UserSendEx.part.22_x21ec8:
    /*00021ec8*/ MOVW        R3, #3303                   @ 0xce7 
    /*00021ecc*/ MOVW        R2, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9bec] 
    /*00021ed0*/ STR         R3, [SP] 
    /*00021ed4*/ MOVT        R2, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9bec] 
    /*00021ed8*/ STR         FP, [SP, #4] 
    /*00021edc*/ MOV         R1, #8 
    /*00021ee0*/ LDR         R3, [PC, #756]              @ 0x00000000000221dc 
    /*00021ee4*/ MOV         R0, #4 
    /*00021ee8*/ BL          0x0000000000021EE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    VENC_UserSendEx.part.22_x21eec:
    /*00021eec*/ LDR         R3, [SL, #4032]             @ 0xfc0 
    /*00021ef0*/ MOV         R0, R9 
    /*00021ef4*/ ADD         R3, R3, #1 
    /*00021ef8*/ STR         R3, [SL, #4032]             @ 0xfc0 
    /*00021efc*/ BL          0x0000000000021EFC          @ osal_up [R_ARM_CALL: +0x0] 
    VENC_UserSendEx.part.22_x21f00:
    /*00021f00*/ LDR         R0, [SP, #20] 
    /*00021f04*/ ADD         SP, SP, #156                @ 0x9c 
    /*00021f08*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_UserSendEx.part.22_x21f0c:
    /*00021f0c*/ LDR         R3, [SP, #12] 
    /*00021f10*/ MOVW        R4, #0                      @ VENC_WaitConditionCallBack2 [R_ARM_MOVW_ABS_NC: .text+0x1be74] 
    /*00021f14*/ ADD         R5, SP, #32 
    /*00021f18*/ MOVT        R4, #0                      @ VENC_WaitConditionCallBack2 [R_ARM_MOVT_ABS: .text+0x1be74] 
    /*00021f1c*/ STR         R3, [SP, #32] 
    /*00021f20*/ LDR         R3, [R9, #176]              @ 0xb0 
    /*00021f24*/ STR         R3, [SP, #36]               @ 0x24 
    VENC_UserSendEx.part.22_x21f28:
    /*00021f28*/ MOV         R0, R5 
    /*00021f2c*/ BL          0x0000000000021F2C          @ VENC_WaitConditionCallBack2 [R_ARM_CALL: .text+0x1be74] 
    /*00021f30*/ MOV         R3, #100                    @ 0x64 
    /*00021f34*/ MOV         R2, R5 
    /*00021f38*/ MOV         R1, R4 
    /*00021f3c*/ CMP         R0, #0 
    /*00021f40*/ MOV         R0, R6 
    /*00021f44*/ BNE         VENC_UserSendEx.part.22_x21e3c
    /*00021f48*/ BL          0x0000000000021F48          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*00021f4c*/ CMP         R0, #0 
    /*00021f50*/ BGE         VENC_UserSendEx.part.22_x21f28
    /*00021f54*/ MOVW        R3, #3332                   @ 0xd04 
    /*00021f58*/ STR         R3, [SP, #4] 
    /*00021f5c*/ STR         R3, [SP] 
    /*00021f60*/ MOVW        R2, #0                      @ .LC115 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9748] 
    /*00021f64*/ LDR         R3, [PC, #624]              @ 0x00000000000221dc 
    /*00021f68*/ MOVT        R2, #0                      @ .LC115 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9748] 
    /*00021f6c*/ MOV         R1, #8 
    VENC_UserSendEx.part.22_x21f70:
    /*00021f70*/ MOV         R0, #1 
    /*00021f74*/ BL          0x0000000000021F74          @ HI_LOG [R_ARM_CALL: +0x0] 
    VENC_UserSendEx.part.22_x21f78:
    /*00021f78*/ MOV         R3, #65024                  @ 0xfe00 
    /*00021f7c*/ MOVT        R3, #65535                  @ 0xffff 
    /*00021f80*/ STR         R3, [SP, #20] 
    /*00021f84*/ LDR         R0, [SP, #20] 
    /*00021f88*/ ADD         SP, SP, #156                @ 0x9c 
    /*00021f8c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_UserSendEx.part.22_x21f90:
    /*00021f90*/ MOV         R3, FP 
    /*00021f94*/ MVN         R1, #0 
    /*00021f98*/ STR         R7, [SP] 
    /*00021f9c*/ MOVW        R2, #0                      @ .LC128 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9bb0] 
    /*00021fa0*/ STR         R1, [SP, #4] 
    /*00021fa4*/ MOVT        R2, #0                      @ .LC128 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9bb0] 
    /*00021fa8*/ MOV         R1, #8 
    /*00021fac*/ MOV         R0, #3 
    /*00021fb0*/ BL          0x0000000000021FB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021fb4*/ MOVW        R3, #32771                  @ 0x8003 
    /*00021fb8*/ MOVT        R3, #40968                  @ 0xa008 
    /*00021fbc*/ STR         R3, [SP, #20] 
    /*00021fc0*/ B           VENC_UserSendEx.part.22_x21eec
    VENC_UserSendEx.part.22_x21fc4:
    /*00021fc4*/ MOVW        R3, #3310                   @ 0xcee 
    /*00021fc8*/ STR         FP, [SP, #4] 
    /*00021fcc*/ STR         R3, [SP] 
    /*00021fd0*/ MOVW        R2, #0                      @ .LC108 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9588] 
    /*00021fd4*/ LDR         R3, [PC, #512]              @ 0x00000000000221dc 
    /*00021fd8*/ MOVT        R2, #0                      @ .LC108 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9588] 
    /*00021fdc*/ MOV         R1, #8 
    /*00021fe0*/ MOV         R0, #4 
    /*00021fe4*/ BL          0x0000000000021FE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00021fe8*/ B           VENC_UserSendEx.part.22_x21eec
    VENC_UserSendEx.part.22_x21fec:
    /*00021fec*/ MOVW        R3, #3278                   @ 0xcce 
    /*00021ff0*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7944] 
    /*00021ff4*/ STR         FP, [SP, #4] 
    /*00021ff8*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7944] 
    /*00021ffc*/ STR         R3, [SP] 
    /*00022000*/ B           VENC_UserSendEx.part.22_x21e98
    VENC_UserSendEx.part.22_x22004:
    /*00022004*/ LDR         R1, [SL, #4040]             @ 0xfc8 
    /*00022008*/ MOVW        IP, #3288                   @ 0xcd8 
    /*0002200c*/ LDR         R3, [PC, #456]              @ 0x00000000000221dc 
    /*00022010*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x82b8] 
    /*00022014*/ ADD         R1, R1, #1 
    /*00022018*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x82b8] 
    /*0002201c*/ STR         R1, [SL, #4040]             @ 0xfc8 
    /*00022020*/ MOV         R0, #4 
    /*00022024*/ MOV         R1, #8 
    /*00022028*/ STR         IP, [SP] 
    /*0002202c*/ STR         FP, [SP, #4] 
    /*00022030*/ MOVW        IP, #32777                  @ 0x8009 
    /*00022034*/ MOV         R4, IP 
    /*00022038*/ BL          0x0000000000022038          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002203c*/ MOV         R0, R9 
    /*00022040*/ BL          0x0000000000022040          @ osal_up [R_ARM_CALL: +0x0] 
    /*00022044*/ MOV         IP, R4 
    /*00022048*/ MOVT        IP, #40968                  @ 0xa008 
    /*0002204c*/ STR         IP, [SP, #20] 
    /*00022050*/ B           VENC_UserSendEx.part.22_x21f00
    VENC_UserSendEx.part.22_x22054:
    /*00022054*/ MOVW        R3, #32781                  @ 0x800d 
    /*00022058*/ MOVT        R3, #40968                  @ 0xa008 
    /*0002205c*/ STR         R3, [SP, #20] 
    /*00022060*/ B           VENC_UserSendEx.part.22_x21f00
    VENC_UserSendEx.part.22_x22064:
    /*00022064*/ LDR         R3, [R8, #52]               @ 0x34 
    /*00022068*/ LDR         R9, [SP, #16] 
    /*0002206c*/ CMP         R3, #0 
    /*00022070*/ LDR         FP, [SP, #12] 
    /*00022074*/ MOVNE       R3, #0 
    /*00022078*/ STRNE       R3, [R8, #52]               @ 0x34 
    /*0002207c*/ BEQ         VENC_UserSendEx.part.22_x22174
    VENC_UserSendEx.part.22_x22080:
    /*00022080*/ MOV         R0, R8 
    /*00022084*/ BL          0x0000000000022084          @ VencIsSendRateOverflow [R_ARM_CALL: .text+0xdd4] 
    /*00022088*/ CMP         R0, #1 
    /*0002208c*/ BEQ         VENC_UserSendEx.part.22_x221bc
    /*00022090*/ LDR         R5, [SP, #24] 
    /*00022094*/ ADD         R0, SP, #152                @ 0x98 
    /*00022098*/ LDR         R2, [SP, #28] 
    /*0002209c*/ MOV         R1, R8 
    /*000220a0*/ LDR         LR, [R5, #4] 
    /*000220a4*/ STR         R2, [R0, #-112]!            @ 0xffffff90 
    /*000220a8*/ LDRD        R2, [R5, #16] 
    /*000220ac*/ LDR         IP, [R5, #8] 
    /*000220b0*/ LDR         R4, [R5, #24] 
    /*000220b4*/ STR         LR, [SP, #56]               @ 0x38 
    /*000220b8*/ STRD        R2, [SP, #64]               @ 0x40 
    /*000220bc*/ LDR         LR, [R5, #40]               @ 0x28 
    /*000220c0*/ LDRD        R2, [R5, #32] 
    /*000220c4*/ MOV         R5, #0 
    /*000220c8*/ STR         IP, [SP, #60]               @ 0x3c 
    /*000220cc*/ MOV         IP, #0 
    /*000220d0*/ STR         R4, [SP, #72]               @ 0x48 
    /*000220d4*/ MOV         R4, #0 
    /*000220d8*/ STRD        R2, [SP, #80]               @ 0x50 
    /*000220dc*/ STR         LR, [SP, #88]               @ 0x58 
    /*000220e0*/ STR         IP, [SP, #112]              @ 0x70 
    /*000220e4*/ STR         IP, [SP, #128]              @ 0x80 
    /*000220e8*/ STR         IP, [SP, #132]              @ 0x84 
    /*000220ec*/ STR         IP, [SP, #48]               @ 0x30 
    /*000220f0*/ STR         IP, [SP, #52]               @ 0x34 
    /*000220f4*/ STR         IP, [SP, #92]               @ 0x5c 
    /*000220f8*/ STRD        R4, [SP, #120]              @ 0x78 
    /*000220fc*/ BL          0x000000000001F2AC 
    /*00022100*/ SUBS        R3, R0, #0 
    /*00022104*/ STR         R3, [SP, #20] 
    /*00022108*/ BNE         VENC_UserSendEx.part.22_x21eec
    /*0002210c*/ MOV         R0, R9 
    /*00022110*/ BL          0x0000000000022110          @ osal_up [R_ARM_CALL: +0x0] 
    /*00022114*/ B           VENC_UserSendEx.part.22_x21f00
    VENC_UserSendEx.part.22_x22118:
    /*00022118*/ LDR         FP, [SP, #12] 
    /*0002211c*/ MOVW        R3, #3346                   @ 0xd12 
    /*00022120*/ MOVW        R2, #0                      @ .LC112 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x96a4] 
    /*00022124*/ STR         R3, [SP] 
    /*00022128*/ MOVT        R2, #0                      @ .LC112 [R_ARM_MOVT_ABS: .rodata.str1.4+0x96a4] 
    /*0002212c*/ LDR         R3, [PC, #168]              @ 0x00000000000221dc 
    /*00022130*/ STR         FP, [SP, #4] 
    /*00022134*/ MOV         R1, #8 
    /*00022138*/ B           VENC_UserSendEx.part.22_x21f70
    VENC_UserSendEx.part.22_x2213c:
    /*0002213c*/ LDR         FP, [SP, #12] 
    /*00022140*/ MOVW        R3, #3351                   @ 0xd17 
    /*00022144*/ MOVW        R2, #0                      @ .LC113 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x96dc] 
    /*00022148*/ STR         R3, [SP] 
    /*0002214c*/ MOVT        R2, #0                      @ .LC113 [R_ARM_MOVT_ABS: .rodata.str1.4+0x96dc] 
    /*00022150*/ LDR         R3, [PC, #132]              @ 0x00000000000221dc 
    /*00022154*/ STR         FP, [SP, #4] 
    /*00022158*/ MOV         R1, #8 
    /*0002215c*/ MOV         R0, #1 
    /*00022160*/ BL          0x0000000000022160          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00022164*/ MOVW        R3, #32786                  @ 0x8012 
    /*00022168*/ MOVT        R3, #40968                  @ 0xa008 
    /*0002216c*/ STR         R3, [SP, #20] 
    /*00022170*/ B           VENC_UserSendEx.part.22_x21f00
    VENC_UserSendEx.part.22_x22174:
    /*00022174*/ LDR         R3, [SP, #24] 
    /*00022178*/ MOV         R0, R8 
    /*0002217c*/ LDR         R1, [R3, #280]              @ 0x118 
    /*00022180*/ BL          0x0000000000022180          @ VencFrmRateCtl [R_ARM_CALL: .text+0xcc0] 
    /*00022184*/ CMP         R0, #0 
    /*00022188*/ BNE         VENC_UserSendEx.part.22_x22080
    /*0002218c*/ STR         FP, [SP, #4] 
    /*00022190*/ MOVW        R3, #3374                   @ 0xd2e 
    /*00022194*/ MOV         R1, #8 
    /*00022198*/ STR         R3, [SP] 
    /*0002219c*/ MOVW        R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8358] 
    /*000221a0*/ LDR         R3, [PC, #52]               @ 0x00000000000221dc 
    /*000221a4*/ MOVT        R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8358] 
    /*000221a8*/ MOV         R0, #4 
    /*000221ac*/ BL          0x00000000000221AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000221b0*/ MOV         R0, R9 
    /*000221b4*/ BL          0x00000000000221B4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000221b8*/ B           VENC_UserSendEx.part.22_x21f00
    VENC_UserSendEx.part.22_x221bc:
    /*000221bc*/ MOVW        R3, #32786                  @ 0x8012 
    /*000221c0*/ MOV         R0, R9 
    /*000221c4*/ MOV         R4, R3 
    /*000221c8*/ BL          0x00000000000221C8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000221cc*/ MOV         R3, R4 
    /*000221d0*/ MOVT        R3, #40968                  @ 0xa008 
    /*000221d4*/ STR         R3, [SP, #20] 
    /*000221d8*/ B           VENC_UserSendEx.part.22_x21f00
    /*000221dc*/ ANDEQ       R1, R0, R4, LSL #2 
FUNC_END VENC_UserSendEx.part.22


FUNC_BEGIN VENC_UserSendEx
    /*000221e0*/ PUSH        {R4, R5, R6, LR} 
    /*000221e4*/ MOV         R0, R1 
    /*000221e8*/ MOV         R4, R1 
    /*000221ec*/ MOV         R5, R2 
    /*000221f0*/ MOV         R6, R3 
    /*000221f4*/ BL          0x00000000000221F4          @ MkpVencCheckChn [R_ARM_CALL: .text+0x7ac] 
    /*000221f8*/ CMP         R0, #0 
    /*000221fc*/ POPNE       {R4, R5, R6, PC} 
    /*00022200*/ MOV         R0, R4 
    /*00022204*/ BL          0x0000000000022204          @ MkpVencCheckChnRegistered [R_ARM_CALL: .text+0x800] 
    /*00022208*/ CMP         R0, #0 
    /*0002220c*/ POPNE       {R4, R5, R6, PC} 
    /*00022210*/ MOV         R0, R5 
    /*00022214*/ BL          0x0000000000022214          @ MkpVencCheckNull [R_ARM_CALL: .text+0x798] 
    /*00022218*/ CMP         R0, #0 
    /*0002221c*/ POPNE       {R4, R5, R6, PC} 
    /*00022220*/ MOV         R2, R6 
    /*00022224*/ MOV         R1, R5 
    /*00022228*/ MOV         R0, R4 
    /*0002222c*/ POP         {R4, R5, R6, LR} 
    /*00022230*/ B           0x0000000000021CA8 
FUNC_END VENC_UserSendEx


FUNC_BEGIN VENC_Ioctl
    /*00022234*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xc0] 
    /*00022238*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xc0] 
    /*0002223c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00022240*/ SUB         SP, SP, #12 
    /*00022244*/ LDR         R3, [R3] 
    /*00022248*/ LDR         R7, [R2] 
    /*0002224c*/ CMP         R3, #0 
    /*00022250*/ BNE         VENC_Ioctl_x2266c
    /*00022254*/ MOV         R4, R0 
    /*00022258*/ MOVW        R0, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x98] 
    /*0002225c*/ MOVT        R0, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x98] 
    /*00022260*/ MOV         R6, R1 
    /*00022264*/ MOV         R5, R2 
    /*00022268*/ BL          0x0000000000022268          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*0002226c*/ MOVW        R3, #17693                  @ 0x451d 
    /*00022270*/ MOVT        R3, #16584                  @ 0x40c8 
    /*00022274*/ CMP         R4, R3 
    /*00022278*/ BEQ         VENC_Ioctl_x22ffc
    /*0002227c*/ BLS         VENC_Ioctl_x22310
    /*00022280*/ MOVW        R3, #17725                  @ 0x453d 
    /*00022284*/ MOVT        R3, #32788                  @ 0x8014 
    /*00022288*/ CMP         R4, R3 
    /*0002228c*/ BEQ         VENC_Ioctl_x22f84
    /*00022290*/ BHI         VENC_Ioctl_x22430
    /*00022294*/ MOVW        R3, #17682                  @ 0x4512 
    /*00022298*/ MOVT        R3, #32776                  @ 0x8008 
    /*0002229c*/ CMP         R4, R3 
    /*000222a0*/ BEQ         VENC_Ioctl_x22f98
    /*000222a4*/ BLS         VENC_Ioctl_x22578
    /*000222a8*/ MOVW        R3, #17690                  @ 0x451a 
    /*000222ac*/ MOVT        R3, #32780                  @ 0x800c 
    /*000222b0*/ CMP         R4, R3 
    /*000222b4*/ BEQ         VENC_Ioctl_x22d50
    /*000222b8*/ BLS         VENC_Ioctl_x22854
    /*000222bc*/ MOVW        R3, #17744                  @ 0x4550 
    /*000222c0*/ MOVT        R3, #32780                  @ 0x800c 
    /*000222c4*/ CMP         R4, R3 
    /*000222c8*/ BEQ         VENC_Ioctl_x226d0
    /*000222cc*/ MOVW        R3, #17744                  @ 0x4550 
    /*000222d0*/ MOVT        R3, #32780                  @ 0x800c 
    /*000222d4*/ CMP         R4, R3 
    /*000222d8*/ BHI         VENC_Ioctl_x22a44
    /*000222dc*/ MOVW        R3, #17700                  @ 0x4524 
    /*000222e0*/ MOVT        R3, #32780                  @ 0x800c 
    /*000222e4*/ CMP         R4, R3 
    /*000222e8*/ BEQ         VENC_Ioctl_x22db4
    /*000222ec*/ MOVW        R3, #17715                  @ 0x4533 
    /*000222f0*/ MOVT        R3, #32780                  @ 0x800c 
    /*000222f4*/ CMP         R4, R3 
    /*000222f8*/ BNE         VENC_Ioctl_x22640
    /*000222fc*/ MOV         R1, R6 
    /*00022300*/ MOV         R0, R7 
    /*00022304*/ BL          0x0000000000022304          @ VencGetH265Dblk [R_ARM_CALL: .text+0x12f90] 
    /*00022308*/ MOV         R4, R0 
    /*0002230c*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22310:
    /*00022310*/ MOVW        R3, #17699                  @ 0x4523 
    /*00022314*/ MOVT        R3, #16396                  @ 0x400c 
    /*00022318*/ CMP         R4, R3 
    /*0002231c*/ BEQ         VENC_Ioctl_x22fd4
    /*00022320*/ BHI         VENC_Ioctl_x223b4
    /*00022324*/ MOVW        R3, #17712                  @ 0x4530 
    /*00022328*/ MOVT        R3, #16388                  @ 0x4004 
    /*0002232c*/ CMP         R4, R3 
    /*00022330*/ BEQ         VENC_Ioctl_x22fe8
    /*00022334*/ BLS         VENC_Ioctl_x225e0
    /*00022338*/ MOVW        R3, #17704                  @ 0x4528 
    /*0002233c*/ MOVT        R3, #16392                  @ 0x4008 
    /*00022340*/ CMP         R4, R3 
    /*00022344*/ BEQ         VENC_Ioctl_x22e8c
    /*00022348*/ BLS         VENC_Ioctl_x22720
    /*0002234c*/ MOVW        R3, #17716                  @ 0x4534 
    /*00022350*/ MOVT        R3, #16392                  @ 0x4008 
    /*00022354*/ CMP         R4, R3 
    /*00022358*/ BEQ         VENC_Ioctl_x22680
    /*0002235c*/ MOVW        R3, #17716                  @ 0x4534 
    /*00022360*/ MOVT        R3, #16392                  @ 0x4008 
    /*00022364*/ CMP         R4, R3 
    /*00022368*/ BHI         VENC_Ioctl_x22a10
    /*0002236c*/ MOVW        R3, #17706                  @ 0x452a 
    /*00022370*/ MOVT        R3, #16392                  @ 0x4008 
    /*00022374*/ CMP         R4, R3 
    /*00022378*/ BEQ         VENC_Ioctl_x22ea0
    /*0002237c*/ MOVW        R3, #17708                  @ 0x452c 
    /*00022380*/ MOVT        R3, #16392                  @ 0x4008 
    /*00022384*/ CMP         R4, R3 
    /*00022388*/ BNE         VENC_Ioctl_x22640
    /*0002238c*/ MOV         R1, R6 
    /*00022390*/ MOV         R0, R7 
    /*00022394*/ BL          0x0000000000022394          @ VencSetH265Pu [R_ARM_CALL: .text+0x1259c] 
    /*00022398*/ MOV         R4, R0 
    VENC_Ioctl_x2239c:
    /*0002239c*/ MOVW        R0, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x98] 
    /*000223a0*/ MOVT        R0, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x98] 
    /*000223a4*/ BL          0x00000000000223A4          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*000223a8*/ MOV         R0, R4 
    /*000223ac*/ ADD         SP, SP, #12 
    /*000223b0*/ POP         {R4, R5, R6, R7, PC} 
    VENC_Ioctl_x223b4:
    /*000223b4*/ MOVW        R3, #17718                  @ 0x4536 
    /*000223b8*/ MOVT        R3, #16416                  @ 0x4020 
    /*000223bc*/ CMP         R4, R3 
    /*000223c0*/ BEQ         VENC_Ioctl_x22fac
    /*000223c4*/ BLS         VENC_Ioctl_x22514
    /*000223c8*/ MOVW        R3, #17680                  @ 0x4510 
    /*000223cc*/ MOVT        R3, #16472                  @ 0x4058 
    /*000223d0*/ CMP         R4, R3 
    /*000223d4*/ BEQ         VENC_Ioctl_x22f34
    /*000223d8*/ BLS         VENC_Ioctl_x227ac
    /*000223dc*/ MOVW        R3, #17685                  @ 0x4515 
    /*000223e0*/ MOVT        R3, #16528                  @ 0x4090 
    /*000223e4*/ CMP         R4, R3 
    /*000223e8*/ BEQ         VENC_Ioctl_x226f8
    /*000223ec*/ MOVW        R3, #17685                  @ 0x4515 
    /*000223f0*/ MOVT        R3, #16528                  @ 0x4090 
    /*000223f4*/ CMP         R4, R3 
    /*000223f8*/ BHI         VENC_Ioctl_x22a78
    /*000223fc*/ MOV         R3, #17664                  @ 0x4500 
    /*00022400*/ MOVT        R3, #16500                  @ 0x4074 
    /*00022404*/ CMP         R4, R3 
    /*00022408*/ BEQ         VENC_Ioctl_x22e04
    /*0002240c*/ MOVW        R3, #17726                  @ 0x453e 
    /*00022410*/ MOVT        R3, #16500                  @ 0x4074 
    /*00022414*/ CMP         R4, R3 
    /*00022418*/ BNE         VENC_Ioctl_x22640
    /*0002241c*/ MOV         R1, R6 
    /*00022420*/ MOV         R0, R7 
    /*00022424*/ BL          0x0000000000022424          @ VencSetChnAttr [R_ARM_CALL: .text+0x16d30] 
    /*00022428*/ MOV         R4, R0 
    /*0002242c*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22430:
    /*00022430*/ MOVW        R3, #17735                  @ 0x4547 
    /*00022434*/ MOVT        R3, #49176                  @ 0xc018 
    /*00022438*/ CMP         R4, R3 
    /*0002243c*/ BEQ         VENC_Ioctl_x22fc0
    /*00022440*/ BLS         VENC_Ioctl_x224ac
    /*00022444*/ MOVW        R3, #17740                  @ 0x454c 
    /*00022448*/ MOVT        R3, #49196                  @ 0xc02c 
    /*0002244c*/ CMP         R4, R3 
    /*00022450*/ BEQ         VENC_Ioctl_x22f20
    /*00022454*/ BLS         VENC_Ioctl_x22800
    /*00022458*/ MOVW        R3, #17742                  @ 0x454e 
    /*0002245c*/ MOVT        R3, #49296                  @ 0xc090 
    /*00022460*/ CMP         R4, R3 
    /*00022464*/ BEQ         VENC_Ioctl_x226a8
    /*00022468*/ MOVW        R3, #17742                  @ 0x454e 
    /*0002246c*/ MOVT        R3, #49296                  @ 0xc090 
    /*00022470*/ CMP         R4, R3 
    /*00022474*/ BHI         VENC_Ioctl_x22b14
    /*00022478*/ MOVW        R3, #17679                  @ 0x450f 
    /*0002247c*/ MOVT        R3, #49240                  @ 0xc058 
    /*00022480*/ CMP         R4, R3 
    /*00022484*/ BEQ         VENC_Ioctl_x22cc4
    /*00022488*/ MOVW        R3, #17727                  @ 0x453f 
    /*0002248c*/ MOVT        R3, #49268                  @ 0xc074 
    /*00022490*/ CMP         R4, R3 
    /*00022494*/ BNE         VENC_Ioctl_x22640
    /*00022498*/ MOV         R1, R6 
    /*0002249c*/ MOV         R0, R7 
    /*000224a0*/ BL          0x00000000000224A0          @ VencGetChnAttr [R_ARM_CALL: .text+0x170fc] 
    /*000224a4*/ MOV         R4, R0 
    /*000224a8*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x224ac:
    /*000224ac*/ MOVW        R3, #17686                  @ 0x4516 
    /*000224b0*/ MOVT        R3, #32912                  @ 0x8090 
    /*000224b4*/ CMP         R4, R3 
    /*000224b8*/ BEQ         VENC_Ioctl_x22f70
    /*000224bc*/ BLS         VENC_Ioctl_x228a8
    /*000224c0*/ MOVW        R3, #17711                  @ 0x452f 
    /*000224c4*/ MOVT        R3, #33500                  @ 0x82dc 
    /*000224c8*/ CMP         R4, R3 
    /*000224cc*/ BEQ         VENC_Ioctl_x226bc
    /*000224d0*/ MOVW        R3, #17711                  @ 0x452f 
    /*000224d4*/ MOVT        R3, #33500                  @ 0x82dc 
    /*000224d8*/ CMP         R4, R3 
    /*000224dc*/ BHI         VENC_Ioctl_x229e0
    /*000224e0*/ MOVW        R3, #17696                  @ 0x4520 
    /*000224e4*/ MOVT        R3, #32964                  @ 0x80c4 
    /*000224e8*/ CMP         R4, R3 
    /*000224ec*/ BEQ         VENC_Ioctl_x22ddc
    /*000224f0*/ MOVW        R3, #17694                  @ 0x451e 
    /*000224f4*/ MOVT        R3, #32968                  @ 0x80c8 
    /*000224f8*/ CMP         R4, R3 
    /*000224fc*/ BNE         VENC_Ioctl_x22640
    /*00022500*/ MOV         R1, R6 
    /*00022504*/ MOV         R0, R7 
    /*00022508*/ BL          0x0000000000022508          @ VencGetJpegParam [R_ARM_CALL: .text+0x11b98] 
    /*0002250c*/ MOV         R4, R0 
    /*00022510*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22514:
    /*00022514*/ MOVW        R3, #17730                  @ 0x4542 
    /*00022518*/ MOVT        R3, #16400                  @ 0x4010 
    /*0002251c*/ CMP         R4, R3 
    /*00022520*/ BEQ         VENC_Ioctl_x22d64
    /*00022524*/ BLS         VENC_Ioctl_x228fc
    /*00022528*/ MOVW        R3, #17736                  @ 0x4548 
    /*0002252c*/ MOVT        R3, #16408                  @ 0x4018 
    /*00022530*/ CMP         R4, R3 
    /*00022534*/ BEQ         VENC_Ioctl_x2270c
    /*00022538*/ MOVW        R3, #17736                  @ 0x4548 
    /*0002253c*/ MOVT        R3, #16408                  @ 0x4018 
    /*00022540*/ CMP         R4, R3 
    /*00022544*/ BHI         VENC_Ioctl_x229ac
    /*00022548*/ MOVW        R3, #17724                  @ 0x453c 
    /*0002254c*/ MOVT        R3, #16404                  @ 0x4014 
    /*00022550*/ CMP         R4, R3 
    /*00022554*/ BEQ         VENC_Ioctl_x22ec8
    /*00022558*/ MOVW        R3, #17732                  @ 0x4544 
    /*0002255c*/ MOVT        R3, #16408                  @ 0x4018 
    /*00022560*/ CMP         R4, R3 
    /*00022564*/ BNE         VENC_Ioctl_x22640
    /*00022568*/ MOV         R0, R6 
    /*0002256c*/ BL          0x000000000002256C          @ VencSetOtherModParam [R_ARM_CALL: .text+0x189e8] 
    /*00022570*/ MOV         R4, R0 
    /*00022574*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22578:
    /*00022578*/ MOVW        R3, #17710                  @ 0x452e 
    /*0002257c*/ MOVT        R3, #17116                  @ 0x42dc 
    /*00022580*/ CMP         R4, R3 
    /*00022584*/ BEQ         VENC_Ioctl_x22d78
    /*00022588*/ BLS         VENC_Ioctl_x22950
    /*0002258c*/ MOVW        R3, #17713                  @ 0x4531 
    /*00022590*/ MOVT        R3, #32772                  @ 0x8004 
    /*00022594*/ CMP         R4, R3 
    /*00022598*/ BEQ         VENC_Ioctl_x226e4
    /*0002259c*/ MOVW        R3, #17713                  @ 0x4531 
    /*000225a0*/ MOVT        R3, #32772                  @ 0x8004 
    /*000225a4*/ CMP         R4, R3 
    /*000225a8*/ BHI         VENC_Ioctl_x22aac
    /*000225ac*/ MOVW        R3, #17684                  @ 0x4514 
    /*000225b0*/ MOVT        R3, #32772                  @ 0x8004 
    /*000225b4*/ CMP         R4, R3 
    /*000225b8*/ BEQ         VENC_Ioctl_x22f48
    /*000225bc*/ MOVW        R3, #17698                  @ 0x4522 
    /*000225c0*/ MOVT        R3, #32772                  @ 0x8004 
    /*000225c4*/ CMP         R4, R3 
    /*000225c8*/ BNE         VENC_Ioctl_x22640
    /*000225cc*/ MOV         R1, R6 
    /*000225d0*/ MOV         R0, R7 
    /*000225d4*/ BL          0x00000000000225D4          @ VencGetJpegEncodeMode [R_ARM_CALL: .text+0x12188] 
    /*000225d8*/ MOV         R4, R0 
    /*000225dc*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x225e0:
    /*000225e0*/ MOVW        R3, #17668                  @ 0x4504 
    /*000225e4*/ MOVT        R3, #16388                  @ 0x4004 
    /*000225e8*/ CMP         R4, R3 
    /*000225ec*/ BEQ         VENC_Ioctl_x22d3c
    /*000225f0*/ BLS         VENC_Ioctl_x22774
    /*000225f4*/ MOVW        R3, #17683                  @ 0x4513 
    /*000225f8*/ MOVT        R3, #16388                  @ 0x4004 
    /*000225fc*/ CMP         R4, R3 
    /*00022600*/ BEQ         VENC_Ioctl_x22694
    /*00022604*/ MOVW        R3, #17683                  @ 0x4513 
    /*00022608*/ MOVT        R3, #16388                  @ 0x4004 
    /*0002260c*/ CMP         R4, R3 
    /*00022610*/ BHI         VENC_Ioctl_x22ae0
    /*00022614*/ MOVW        R3, #17674                  @ 0x450a 
    /*00022618*/ MOVT        R3, #16388                  @ 0x4004 
    /*0002261c*/ CMP         R4, R3 
    /*00022620*/ BEQ         VENC_Ioctl_x22c9c
    /*00022624*/ MOVW        R3, #17676                  @ 0x450c 
    /*00022628*/ MOVT        R3, #16388                  @ 0x4004 
    /*0002262c*/ CMP         R4, R3 
    /*00022630*/ LDREQ       R3, [R6] 
    /*00022634*/ MOVEQ       R4, #0 
    /*00022638*/ STREQ       R3, [R5] 
    /*0002263c*/ BEQ         VENC_Ioctl_x2239c
    VENC_Ioctl_x22640:
    /*00022640*/ STR         R4, [SP, #4] 
    /*00022644*/ MOVW        R3, #6476                   @ 0x194c 
    /*00022648*/ MOVW        R2, #0                      @ .LC132 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9cac] 
    /*0002264c*/ STR         R3, [SP] 
    /*00022650*/ MOVT        R2, #0                      @ .LC132 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9cac] 
    /*00022654*/ LDR         R3, [PC, #2484]             @ 0x0000000000023010 
    /*00022658*/ MOV         R1, #8 
    /*0002265c*/ MOV         R0, #3 
    /*00022660*/ BL          0x0000000000022660          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00022664*/ MVN         R4, #0 
    /*00022668*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x2266c:
    /*0002266c*/ MOVW        R4, #32784                  @ 0x8010 
    /*00022670*/ MOVT        R4, #40968                  @ 0xa008 
    /*00022674*/ MOV         R0, R4 
    /*00022678*/ ADD         SP, SP, #12 
    /*0002267c*/ POP         {R4, R5, R6, R7, PC} 
    VENC_Ioctl_x22680:
    /*00022680*/ MOV         R1, R6 
    /*00022684*/ MOV         R0, R7 
    /*00022688*/ BL          0x0000000000022688          @ VencSetH265Sao [R_ARM_CALL: .text+0x130fc] 
    /*0002268c*/ MOV         R4, R0 
    /*00022690*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22694:
    /*00022694*/ MOV         R1, R6 
    /*00022698*/ MOV         R0, R7 
    /*0002269c*/ BL          0x000000000002269C          @ VencSetH264IntraPred [R_ARM_CALL: .text+0xfb50] 
    /*000226a0*/ MOV         R4, R0 
    /*000226a4*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x226a8:
    /*000226a8*/ MOV         R1, R6 
    /*000226ac*/ MOV         R0, R7 
    /*000226b0*/ BL          0x00000000000226B0          @ VencGetForeground [R_ARM_CALL: .text+0x1a08c] 
    /*000226b4*/ MOV         R4, R0 
    /*000226b8*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x226bc:
    /*000226bc*/ MOV         R1, R6 
    /*000226c0*/ MOV         R0, R7 
    /*000226c4*/ BL          0x00000000000226C4          @ VencGetH265Tu [R_ARM_CALL: .text+0x129e0] 
    /*000226c8*/ MOV         R4, R0 
    /*000226cc*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x226d0:
    /*000226d0*/ MOV         R1, R6 
    /*000226d4*/ MOV         R0, R7 
    /*000226d8*/ BL          0x00000000000226D8          @ VencGetDeBreathEffect [R_ARM_CALL: .text+0xeafc] 
    /*000226dc*/ MOV         R4, R0 
    /*000226e0*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x226e4:
    /*000226e4*/ MOV         R1, R6 
    /*000226e8*/ MOV         R0, R7 
    /*000226ec*/ BL          0x00000000000226EC          @ VencGetH265Entropy [R_ARM_CALL: .text+0x12cb8] 
    /*000226f0*/ MOV         R4, R0 
    /*000226f4*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x226f8:
    /*000226f8*/ MOV         R1, R6 
    /*000226fc*/ MOV         R0, R7 
    /*00022700*/ BL          0x0000000000022700          @ VencSetH264Trans [R_ARM_CALL: .text+0xfe28] 
    /*00022704*/ MOV         R4, R0 
    /*00022708*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x2270c:
    /*0002270c*/ MOV         R1, R6 
    /*00022710*/ MOV         R0, R7 
    /*00022714*/ BL          0x0000000000022714          @ VencSetSSECfg [R_ARM_CALL: .text+0x18d00] 
    /*00022718*/ MOV         R4, R0 
    /*0002271c*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22720:
    /*00022720*/ MOVW        R3, #17751                  @ 0x4557 
    /*00022724*/ MOVT        R3, #16388                  @ 0x4004 
    /*00022728*/ CMP         R4, R3 
    /*0002272c*/ BEQ         VENC_Ioctl_x22e50
    /*00022730*/ MOVW        R3, #17751                  @ 0x4557 
    /*00022734*/ MOVT        R3, #16388                  @ 0x4004 
    /*00022738*/ CMP         R4, R3 
    /*0002273c*/ BLS         VENC_Ioctl_x22b4c
    /*00022740*/ MOVW        R3, #17675                  @ 0x450b 
    /*00022744*/ MOVT        R3, #16392                  @ 0x4008 
    /*00022748*/ CMP         R4, R3 
    /*0002274c*/ BEQ         VENC_Ioctl_x22e78
    /*00022750*/ MOVW        R3, #17681                  @ 0x4511 
    /*00022754*/ MOVT        R3, #16392                  @ 0x4008 
    /*00022758*/ CMP         R4, R3 
    /*0002275c*/ BNE         VENC_Ioctl_x22640
    /*00022760*/ MOV         R1, R6 
    /*00022764*/ MOV         R0, R7 
    /*00022768*/ BL          0x0000000000022768          @ VencSetH264SliceSplit [R_ARM_CALL: .text+0xf5a0] 
    /*0002276c*/ MOV         R4, R0 
    /*00022770*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22774:
    /*00022774*/ MOVW        R3, #17669                  @ 0x4505 
    /*00022778*/ CMP         R4, R3 
    /*0002277c*/ BEQ         VENC_Ioctl_x22e2c
    /*00022780*/ BLS         VENC_Ioctl_x22b70
    /*00022784*/ MOVW        R3, #17702                  @ 0x4526 
    /*00022788*/ CMP         R4, R3 
    /*0002278c*/ BEQ         VENC_Ioctl_x22c78
    /*00022790*/ MOVW        R3, #17729                  @ 0x4541 
    /*00022794*/ CMP         R4, R3 
    /*00022798*/ BNE         VENC_Ioctl_x22640
    /*0002279c*/ MOV         R0, R7 
    /*000227a0*/ BL          0x00000000000227A0          @ VENC_DetachVbPool [R_ARM_CALL: .text+0x1738c] 
    /*000227a4*/ MOV         R4, R0 
    /*000227a8*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x227ac:
    /*000227ac*/ MOVW        R3, #17747                  @ 0x4553 
    /*000227b0*/ MOVT        R3, #16420                  @ 0x4024 
    /*000227b4*/ CMP         R4, R3 
    /*000227b8*/ BEQ         VENC_Ioctl_x22da0
    /*000227bc*/ MOVW        R3, #17747                  @ 0x4553 
    /*000227c0*/ MOVT        R3, #16420                  @ 0x4024 
    /*000227c4*/ CMP         R4, R3 
    /*000227c8*/ BLS         VENC_Ioctl_x22bd4
    /*000227cc*/ MOVW        R3, #17749                  @ 0x4555 
    /*000227d0*/ MOVT        R3, #16420                  @ 0x4024 
    /*000227d4*/ CMP         R4, R3 
    /*000227d8*/ BEQ         VENC_Ioctl_x22ef8
    /*000227dc*/ MOVW        R3, #17739                  @ 0x454b 
    /*000227e0*/ MOVT        R3, #16428                  @ 0x402c 
    /*000227e4*/ CMP         R4, R3 
    /*000227e8*/ BNE         VENC_Ioctl_x22640
    /*000227ec*/ MOV         R1, R6 
    /*000227f0*/ MOV         R0, R7 
    /*000227f4*/ BL          0x00000000000227F4          @ VencSetChnParam [R_ARM_CALL: .text+0x19b68] 
    /*000227f8*/ MOV         R4, R0 
    /*000227fc*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22800:
    /*00022800*/ MOVW        R3, #17746                  @ 0x4552 
    /*00022804*/ MOVT        R3, #49188                  @ 0xc024 
    /*00022808*/ CMP         R4, R3 
    /*0002280c*/ BEQ         VENC_Ioctl_x22e3c
    /*00022810*/ MOVW        R3, #17746                  @ 0x4552 
    /*00022814*/ MOVT        R3, #49188                  @ 0xc024 
    /*00022818*/ CMP         R4, R3 
    /*0002281c*/ BLS         VENC_Ioctl_x22b8c
    /*00022820*/ MOVW        R3, #17748                  @ 0x4554 
    /*00022824*/ MOVT        R3, #49188                  @ 0xc024 
    /*00022828*/ CMP         R4, R3 
    /*0002282c*/ BEQ         VENC_Ioctl_x22d14
    /*00022830*/ MOVW        R3, #17750                  @ 0x4556 
    /*00022834*/ MOVT        R3, #49188                  @ 0xc024 
    /*00022838*/ CMP         R4, R3 
    /*0002283c*/ BNE         VENC_Ioctl_x22640
    /*00022840*/ MOV         R1, R6 
    /*00022844*/ MOV         R0, R7 
    /*00022848*/ BL          0x0000000000022848          @ VencGetHierarchicalQp [R_ARM_CALL: .text+0x1b1a4] 
    /*0002284c*/ MOV         R4, R0 
    /*00022850*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22854:
    /*00022854*/ MOVW        R3, #17707                  @ 0x452b 
    /*00022858*/ MOVT        R3, #32776                  @ 0x8008 
    /*0002285c*/ CMP         R4, R3 
    /*00022860*/ BEQ         VENC_Ioctl_x22cec
    /*00022864*/ MOVW        R3, #17707                  @ 0x452b 
    /*00022868*/ MOVT        R3, #32776                  @ 0x8008 
    /*0002286c*/ CMP         R4, R3 
    /*00022870*/ BLS         VENC_Ioctl_x22bf8
    /*00022874*/ MOVW        R3, #17709                  @ 0x452d 
    /*00022878*/ MOVT        R3, #32776                  @ 0x8008 
    /*0002287c*/ CMP         R4, R3 
    /*00022880*/ BEQ         VENC_Ioctl_x22f0c
    /*00022884*/ MOVW        R3, #17717                  @ 0x4535 
    /*00022888*/ MOVT        R3, #32776                  @ 0x8008 
    /*0002288c*/ CMP         R4, R3 
    /*00022890*/ BNE         VENC_Ioctl_x22640
    /*00022894*/ MOV         R1, R6 
    /*00022898*/ MOV         R0, R7 
    /*0002289c*/ BL          0x000000000002289C          @ VencGetH265Sao [R_ARM_CALL: .text+0x13268] 
    /*000228a0*/ MOV         R4, R0 
    /*000228a4*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x228a8:
    /*000228a8*/ MOVW        R3, #17673                  @ 0x4509 
    /*000228ac*/ MOVT        R3, #32800                  @ 0x8020 
    /*000228b0*/ CMP         R4, R3 
    /*000228b4*/ BEQ         VENC_Ioctl_x22c64
    /*000228b8*/ MOVW        R3, #17673                  @ 0x4509 
    /*000228bc*/ MOVT        R3, #32800                  @ 0x8020 
    /*000228c0*/ CMP         R4, R3 
    /*000228c4*/ BLS         VENC_Ioctl_x22c40
    /*000228c8*/ MOVW        R3, #17719                  @ 0x4537 
    /*000228cc*/ MOVT        R3, #32800                  @ 0x8020 
    /*000228d0*/ CMP         R4, R3 
    /*000228d4*/ BEQ         VENC_Ioctl_x22c88
    /*000228d8*/ MOVW        R3, #17672                  @ 0x4508 
    /*000228dc*/ MOVT        R3, #32856                  @ 0x8058 
    /*000228e0*/ CMP         R4, R3 
    /*000228e4*/ BNE         VENC_Ioctl_x22640
    /*000228e8*/ MOV         R1, R6 
    /*000228ec*/ MOV         R0, R7 
    /*000228f0*/ BL          0x00000000000228F0          @ VencQuery [R_ARM_CALL: .text+0xe6f8] 
    /*000228f4*/ MOV         R4, R0 
    /*000228f8*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x228fc:
    /*000228fc*/ MOVW        R3, #17743                  @ 0x454f 
    /*00022900*/ MOVT        R3, #16396                  @ 0x400c 
    /*00022904*/ CMP         R4, R3 
    /*00022908*/ BEQ         VENC_Ioctl_x22d00
    /*0002290c*/ MOVW        R3, #17743                  @ 0x454f 
    /*00022910*/ MOVT        R3, #16396                  @ 0x400c 
    /*00022914*/ CMP         R4, R3 
    /*00022918*/ BLS         VENC_Ioctl_x22c1c
    /*0002291c*/ MOVW        R3, #17687                  @ 0x4517 
    /*00022920*/ MOVT        R3, #16400                  @ 0x4010 
    /*00022924*/ CMP         R4, R3 
    /*00022928*/ BEQ         VENC_Ioctl_x22d28
    /*0002292c*/ MOVW        R3, #17720                  @ 0x4538 
    /*00022930*/ MOVT        R3, #16400                  @ 0x4010 
    /*00022934*/ CMP         R4, R3 
    /*00022938*/ BNE         VENC_Ioctl_x22640
    /*0002293c*/ MOV         R1, R6 
    /*00022940*/ MOV         R0, R7 
    /*00022944*/ BL          0x0000000000022944          @ VencSetFrmLostStra [R_ARM_CALL: .text+0x13c38] 
    /*00022948*/ MOV         R4, R0 
    /*0002294c*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22950:
    /*00022950*/ MOVW        R3, #17671                  @ 0x4507 
    /*00022954*/ MOVT        R3, #16768                  @ 0x4180 
    /*00022958*/ CMP         R4, R3 
    /*0002295c*/ BEQ         VENC_Ioctl_x22d8c
    /*00022960*/ MOVW        R3, #17671                  @ 0x4507 
    /*00022964*/ MOVT        R3, #16768                  @ 0x4180 
    /*00022968*/ CMP         R4, R3 
    /*0002296c*/ BLS         VENC_Ioctl_x22bb0
    /*00022970*/ MOVW        R3, #17703                  @ 0x4527 
    /*00022974*/ MOVT        R3, #16768                  @ 0x4180 
    /*00022978*/ CMP         R4, R3 
    /*0002297c*/ BEQ         VENC_Ioctl_x22edc
    /*00022980*/ MOVW        R3, #17734                  @ 0x4546 
    /*00022984*/ MOVT        R3, #16768                  @ 0x4180 
    /*00022988*/ CMP         R4, R3 
    /*0002298c*/ BNE         VENC_Ioctl_x22640
    /*00022990*/ MOV         R1, R7 
    /*00022994*/ LDR         R3, [R6] 
    /*00022998*/ MOV         R2, R6 
    /*0002299c*/ MVN         R0, #0 
    /*000229a0*/ BL          0x00000000000229A0          @ VENC_UserSendEx [R_ARM_CALL: .text+0x221e0] 
    /*000229a4*/ MOV         R4, R0 
    /*000229a8*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x229ac:
    /*000229ac*/ MOVW        R3, #17691                  @ 0x451b 
    /*000229b0*/ MOVT        R3, #16412                  @ 0x401c 
    /*000229b4*/ CMP         R4, R3 
    /*000229b8*/ BEQ         VENC_Ioctl_x22df0
    /*000229bc*/ MOVW        R3, #17678                  @ 0x450e 
    /*000229c0*/ MOVT        R3, #16416                  @ 0x4020 
    /*000229c4*/ CMP         R4, R3 
    /*000229c8*/ BNE         VENC_Ioctl_x22640
    /*000229cc*/ MOV         R1, R6 
    /*000229d0*/ MOV         R0, R7 
    /*000229d4*/ BL          0x00000000000229D4          @ VencSetRoiCfg [R_ARM_CALL: .text+0xee84] 
    /*000229d8*/ MOV         R4, R0 
    /*000229dc*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x229e0:
    /*000229e0*/ MOVW        R3, #17731                  @ 0x4543 
    /*000229e4*/ MOVT        R3, #49168                  @ 0xc010 
    /*000229e8*/ CMP         R4, R3 
    /*000229ec*/ BEQ         VENC_Ioctl_x22eb4
    /*000229f0*/ MOVW        R3, #17733                  @ 0x4545 
    /*000229f4*/ MOVT        R3, #49176                  @ 0xc018 
    /*000229f8*/ CMP         R4, R3 
    /*000229fc*/ BNE         VENC_Ioctl_x22640
    /*00022a00*/ MOV         R0, R6 
    /*00022a04*/ BL          0x0000000000022A04          @ VencGetOtherModParam [R_ARM_CALL: .text+0x1875c] 
    /*00022a08*/ MOV         R4, R0 
    /*00022a0c*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22a10:
    /*00022a10*/ MOVW        R3, #17728                  @ 0x4540 
    /*00022a14*/ MOVT        R3, #16392                  @ 0x4008 
    /*00022a18*/ CMP         R4, R3 
    /*00022a1c*/ BEQ         VENC_Ioctl_x22dc8
    /*00022a20*/ MOVW        R3, #17689                  @ 0x4519 
    /*00022a24*/ MOVT        R3, #16396                  @ 0x400c 
    /*00022a28*/ CMP         R4, R3 
    /*00022a2c*/ BNE         VENC_Ioctl_x22640
    /*00022a30*/ MOV         R1, R6 
    /*00022a34*/ MOV         R0, R7 
    /*00022a38*/ BL          0x0000000000022A38          @ VencSetH264Dblk [R_ARM_CALL: .text+0x106b0] 
    /*00022a3c*/ MOV         R4, R0 
    /*00022a40*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22a44:
    /*00022a44*/ MOVW        R3, #17688                  @ 0x4518 
    /*00022a48*/ MOVT        R3, #32784                  @ 0x8010 
    /*00022a4c*/ CMP         R4, R3 
    /*00022a50*/ BEQ         VENC_Ioctl_x22e18
    /*00022a54*/ MOVW        R3, #17721                  @ 0x4539 
    /*00022a58*/ MOVT        R3, #32784                  @ 0x8010 
    /*00022a5c*/ CMP         R4, R3 
    /*00022a60*/ BNE         VENC_Ioctl_x22640
    /*00022a64*/ MOV         R1, R6 
    /*00022a68*/ MOV         R0, R7 
    /*00022a6c*/ BL          0x0000000000022A6C          @ VencGetFrmLostStra [R_ARM_CALL: .text+0x13db8] 
    /*00022a70*/ MOV         R4, R0 
    /*00022a74*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22a78:
    /*00022a78*/ MOVW        R3, #17741                  @ 0x454d 
    /*00022a7c*/ MOVT        R3, #16528                  @ 0x4090 
    /*00022a80*/ CMP         R4, R3 
    /*00022a84*/ BEQ         VENC_Ioctl_x22f5c
    /*00022a88*/ MOVW        R3, #17695                  @ 0x451f 
    /*00022a8c*/ MOVT        R3, #16580                  @ 0x40c4 
    /*00022a90*/ CMP         R4, R3 
    /*00022a94*/ BNE         VENC_Ioctl_x22640
    /*00022a98*/ MOV         R1, R6 
    /*00022a9c*/ MOV         R0, R7 
    /*00022aa0*/ BL          0x0000000000022AA0          @ VencSetMjpegParam [R_ARM_CALL: .text+0x11d04] 
    /*00022aa4*/ MOV         R4, R0 
    /*00022aa8*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22aac:
    /*00022aac*/ MOVW        R3, #17738                  @ 0x454a 
    /*00022ab0*/ MOVT        R3, #32772                  @ 0x8004 
    /*00022ab4*/ CMP         R4, R3 
    /*00022ab8*/ BEQ         VENC_Ioctl_x22cb0
    /*00022abc*/ MOVW        R3, #17752                  @ 0x4558 
    /*00022ac0*/ MOVT        R3, #32772                  @ 0x8004 
    /*00022ac4*/ CMP         R4, R3 
    /*00022ac8*/ BNE         VENC_Ioctl_x22640
    /*00022acc*/ MOV         R1, R6 
    /*00022ad0*/ MOV         R0, R7 
    /*00022ad4*/ BL          0x0000000000022AD4          @ VencGetRcAdvParam [R_ARM_CALL: .text+0x1b498] 
    /*00022ad8*/ MOV         R4, R0 
    /*00022adc*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22ae0:
    /*00022ae0*/ MOVW        R3, #17697                  @ 0x4521 
    /*00022ae4*/ MOVT        R3, #16388                  @ 0x4004 
    /*00022ae8*/ CMP         R4, R3 
    /*00022aec*/ BEQ         VENC_Ioctl_x22cd8
    /*00022af0*/ MOVW        R3, #17701                  @ 0x4525 
    /*00022af4*/ MOVT        R3, #16388                  @ 0x4004 
    /*00022af8*/ CMP         R4, R3 
    /*00022afc*/ BNE         VENC_Ioctl_x22640
    /*00022b00*/ LDR         R1, [R6] 
    /*00022b04*/ MOV         R0, R7 
    /*00022b08*/ BL          0x0000000000022B08          @ VencEnableIDR [R_ARM_CALL: .text+0x1103c] 
    /*00022b0c*/ MOV         R4, R0 
    /*00022b10*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22b14:
    /*00022b14*/ MOVW        R3, #17667                  @ 0x4503 
    /*00022b18*/ MOVT        R3, #49424                  @ 0xc110 
    /*00022b1c*/ CMP         R4, R3 
    /*00022b20*/ BEQ         VENC_Ioctl_x22e64
    /*00022b24*/ MOVW        R3, #17670                  @ 0x4506 
    /*00022b28*/ MOVT        R3, #49544                  @ 0xc188 
    /*00022b2c*/ CMP         R4, R3 
    /*00022b30*/ BNE         VENC_Ioctl_x22640
    /*00022b34*/ MOV         R1, R6 
    /*00022b38*/ MOV         R0, R7 
    /*00022b3c*/ LDR         R2, [R1], #8 
    /*00022b40*/ BL          0x0000000000022B40          @ VencGetStream [R_ARM_CALL: .text+0x9630] 
    /*00022b44*/ MOV         R4, R0 
    /*00022b48*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22b4c:
    /*00022b4c*/ MOVW        R3, #17737                  @ 0x4549 
    /*00022b50*/ MOVT        R3, #16388                  @ 0x4004 
    /*00022b54*/ CMP         R4, R3 
    /*00022b58*/ BNE         VENC_Ioctl_x22640
    /*00022b5c*/ MOV         R1, R6 
    /*00022b60*/ MOV         R0, R7 
    /*00022b64*/ BL          0x0000000000022B64          @ VencSetSceneMode [R_ARM_CALL: .text+0x19028] 
    /*00022b68*/ MOV         R4, R0 
    /*00022b6c*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22b70:
    /*00022b70*/ MOVW        R3, #17665                  @ 0x4501 
    /*00022b74*/ CMP         R4, R3 
    /*00022b78*/ BNE         VENC_Ioctl_x22640
    /*00022b7c*/ MOV         R0, R7 
    /*00022b80*/ BL          0x0000000000022B80          @ VencDestroyChn [R_ARM_CALL: .text+0xd6bc] 
    /*00022b84*/ MOV         R4, R0 
    /*00022b88*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22b8c:
    /*00022b8c*/ MOVW        R3, #17677                  @ 0x450d 
    /*00022b90*/ MOVT        R3, #49184                  @ 0xc020 
    /*00022b94*/ CMP         R4, R3 
    /*00022b98*/ BNE         VENC_Ioctl_x22640
    /*00022b9c*/ MOV         R1, R6 
    /*00022ba0*/ MOV         R0, R7 
    /*00022ba4*/ BL          0x0000000000022BA4          @ VencGetRoiCfg [R_ARM_CALL: .text+0xecdc] 
    /*00022ba8*/ MOV         R4, R0 
    /*00022bac*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22bb0:
    /*00022bb0*/ MOVW        R3, #17666                  @ 0x4502 
    /*00022bb4*/ MOVT        R3, #16656                  @ 0x4110 
    /*00022bb8*/ CMP         R4, R3 
    /*00022bbc*/ BNE         VENC_Ioctl_x22640
    /*00022bc0*/ MOV         R1, R6 
    /*00022bc4*/ MOV         R0, R7 
    /*00022bc8*/ BL          0x0000000000022BC8          @ VencSetRcParam [R_ARM_CALL: .text+0x8fd0] 
    /*00022bcc*/ MOV         R4, R0 
    /*00022bd0*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22bd4:
    /*00022bd4*/ MOVW        R3, #17745                  @ 0x4551 
    /*00022bd8*/ MOVT        R3, #16420                  @ 0x4024 
    /*00022bdc*/ CMP         R4, R3 
    /*00022be0*/ BNE         VENC_Ioctl_x22640
    /*00022be4*/ MOV         R1, R6 
    /*00022be8*/ MOV         R0, R7 
    /*00022bec*/ BL          0x0000000000022BEC          @ VencSetPrediction [R_ARM_CALL: .text+0x1a700] 
    /*00022bf0*/ MOV         R4, R0 
    /*00022bf4*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22bf8:
    /*00022bf8*/ MOVW        R3, #17705                  @ 0x4529 
    /*00022bfc*/ MOVT        R3, #32776                  @ 0x8008 
    /*00022c00*/ CMP         R4, R3 
    /*00022c04*/ BNE         VENC_Ioctl_x22640
    /*00022c08*/ MOV         R1, R6 
    /*00022c0c*/ MOV         R0, R7 
    /*00022c10*/ BL          0x0000000000022C10          @ VencGetRoiBgFrameRate [R_ARM_CALL: .text+0x1188c] 
    /*00022c14*/ MOV         R4, R0 
    /*00022c18*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22c1c:
    /*00022c1c*/ MOVW        R3, #17714                  @ 0x4532 
    /*00022c20*/ MOVT        R3, #16396                  @ 0x400c 
    /*00022c24*/ CMP         R4, R3 
    /*00022c28*/ BNE         VENC_Ioctl_x22640
    /*00022c2c*/ MOV         R1, R6 
    /*00022c30*/ MOV         R0, R7 
    /*00022c34*/ BL          0x0000000000022C34          @ VencSetH265Dblk [R_ARM_CALL: .text+0x12e24] 
    /*00022c38*/ MOV         R4, R0 
    /*00022c3c*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22c40:
    /*00022c40*/ MOVW        R3, #17692                  @ 0x451c 
    /*00022c44*/ MOVT        R3, #32796                  @ 0x801c 
    /*00022c48*/ CMP         R4, R3 
    /*00022c4c*/ BNE         VENC_Ioctl_x22640
    /*00022c50*/ MOV         R1, R6 
    /*00022c54*/ MOV         R0, R7 
    /*00022c58*/ BL          0x0000000000022C58          @ VencGetH264Vui [R_ARM_CALL: .text+0x10af4] 
    /*00022c5c*/ MOV         R4, R0 
    /*00022c60*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22c64:
    /*00022c64*/ MOV         R1, R6 
    /*00022c68*/ MOV         R0, R7 
    /*00022c6c*/ BL          0x0000000000022C6C          @ VencGetBufAddr [R_ARM_CALL: .text+0x9380] 
    /*00022c70*/ MOV         R4, R0 
    /*00022c74*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22c78:
    /*00022c78*/ MOV         R0, R7 
    /*00022c7c*/ BL          0x0000000000022C7C          @ VencResetChn [R_ARM_CALL: .text+0xb45c] 
    /*00022c80*/ MOV         R4, R0 
    /*00022c84*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22c88:
    /*00022c88*/ MOV         R1, R6 
    /*00022c8c*/ MOV         R0, R7 
    /*00022c90*/ BL          0x0000000000022C90          @ VencGetH265Vui [R_ARM_CALL: .text+0x13818] 
    /*00022c94*/ MOV         R4, R0 
    /*00022c98*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22c9c:
    /*00022c9c*/ LDR         R1, [R6] 
    /*00022ca0*/ MOV         R0, R7 
    /*00022ca4*/ BL          0x0000000000022CA4          @ VencRequestIDR [R_ARM_CALL: .text+0xc618] 
    /*00022ca8*/ MOV         R4, R0 
    /*00022cac*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22cb0:
    /*00022cb0*/ MOV         R1, R6 
    /*00022cb4*/ MOV         R0, R7 
    /*00022cb8*/ BL          0x0000000000022CB8          @ VencGetSceneMode [R_ARM_CALL: .text+0x19354] 
    /*00022cbc*/ MOV         R4, R0 
    /*00022cc0*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22cc4:
    /*00022cc4*/ MOV         R1, R6 
    /*00022cc8*/ MOV         R0, R7 
    /*00022ccc*/ BL          0x0000000000022CCC          @ VencGetRoiCfgEx [R_ARM_CALL: .text+0xf05c] 
    /*00022cd0*/ MOV         R4, R0 
    /*00022cd4*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22cd8:
    /*00022cd8*/ LDR         R1, [R6] 
    /*00022cdc*/ MOV         R0, R7 
    /*00022ce0*/ BL          0x0000000000022CE0          @ VencSetJpegEncodeMode [R_ARM_CALL: .text+0x11fe4] 
    /*00022ce4*/ MOV         R4, R0 
    /*00022ce8*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22cec:
    /*00022cec*/ MOV         R1, R6 
    /*00022cf0*/ MOV         R0, R7 
    /*00022cf4*/ BL          0x0000000000022CF4          @ VencGetH265Slice [R_ARM_CALL: .text+0x12430] 
    /*00022cf8*/ MOV         R4, R0 
    /*00022cfc*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22d00:
    /*00022d00*/ MOV         R1, R6 
    /*00022d04*/ MOV         R0, R7 
    /*00022d08*/ BL          0x0000000000022D08          @ VencSetDeBreathEffect [R_ARM_CALL: .text+0x145dc] 
    /*00022d0c*/ MOV         R4, R0 
    /*00022d10*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22d14:
    /*00022d14*/ MOV         R1, R6 
    /*00022d18*/ MOV         R0, R7 
    /*00022d1c*/ BL          0x0000000000022D1C          @ VencGetSkipBias [R_ARM_CALL: .text+0x1ad0c] 
    /*00022d20*/ MOV         R4, R0 
    /*00022d24*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22d28:
    /*00022d28*/ MOV         R1, R6 
    /*00022d2c*/ MOV         R0, R7 
    /*00022d30*/ BL          0x0000000000022D30          @ VencSetH264Entropy [R_ARM_CALL: .text+0x10100] 
    /*00022d34*/ MOV         R4, R0 
    /*00022d38*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22d3c:
    /*00022d3c*/ MOV         R1, R6 
    /*00022d40*/ MOV         R0, R7 
    /*00022d44*/ BL          0x0000000000022D44          @ VencStartRecvFrame [R_ARM_CALL: .text+0xe420] 
    /*00022d48*/ MOV         R4, R0 
    /*00022d4c*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22d50:
    /*00022d50*/ MOV         R1, R6 
    /*00022d54*/ MOV         R0, R7 
    /*00022d58*/ BL          0x0000000000022D58          @ VencGetH264Dblk [R_ARM_CALL: .text+0x1081c] 
    /*00022d5c*/ MOV         R4, R0 
    /*00022d60*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22d64:
    /*00022d64*/ MOV         R1, R6 
    /*00022d68*/ MOV         R0, R7 
    /*00022d6c*/ BL          0x0000000000022D6C          @ VencSetIntraRefresh [R_ARM_CALL: .text+0x178e0] 
    /*00022d70*/ MOV         R4, R0 
    /*00022d74*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22d78:
    /*00022d78*/ MOV         R1, R6 
    /*00022d7c*/ MOV         R0, R7 
    /*00022d80*/ BL          0x0000000000022D80          @ VencSetH265Tu [R_ARM_CALL: .text+0x12874] 
    /*00022d84*/ MOV         R4, R0 
    /*00022d88*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22d8c:
    /*00022d8c*/ MOV         R1, R6 
    /*00022d90*/ MOV         R0, R7 
    /*00022d94*/ BL          0x0000000000022D94          @ VencPutStream [R_ARM_CALL: .text+0xa06c] 
    /*00022d98*/ MOV         R4, R0 
    /*00022d9c*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22da0:
    /*00022da0*/ MOV         R1, R6 
    /*00022da4*/ MOV         R0, R7 
    /*00022da8*/ BL          0x0000000000022DA8          @ VencSetSkipBias [R_ARM_CALL: .text+0x1ab50] 
    /*00022dac*/ MOV         R4, R0 
    /*00022db0*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22db4:
    /*00022db4*/ MOV         R1, R6 
    /*00022db8*/ MOV         R0, R7 
    /*00022dbc*/ BL          0x0000000000022DBC          @ VencGetRefParam [R_ARM_CALL: .text+0x10ec0] 
    /*00022dc0*/ MOV         R4, R0 
    /*00022dc4*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22dc8:
    /*00022dc8*/ MOV         R1, R6 
    /*00022dcc*/ MOV         R0, R7 
    /*00022dd0*/ BL          0x0000000000022DD0          @ VENC_AttachVbPool [R_ARM_CALL: .text+0x17200] 
    /*00022dd4*/ MOV         R4, R0 
    /*00022dd8*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22ddc:
    /*00022ddc*/ MOV         R1, R6 
    /*00022de0*/ MOV         R0, R7 
    /*00022de4*/ BL          0x0000000000022DE4          @ VencGetMjpegParam [R_ARM_CALL: .text+0x11e74] 
    /*00022de8*/ MOV         R4, R0 
    /*00022dec*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22df0:
    /*00022df0*/ MOV         R1, R6 
    /*00022df4*/ MOV         R0, R7 
    /*00022df8*/ BL          0x0000000000022DF8          @ VencSetH264Vui [R_ARM_CALL: .text+0x10988] 
    /*00022dfc*/ MOV         R4, R0 
    /*00022e00*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22e04:
    /*00022e04*/ MOV         R1, R6 
    /*00022e08*/ MOV         R0, R7 
    /*00022e0c*/ BL          0x0000000000022E0C          @ VencCreateChn [R_ARM_CALL: .text+0x8444] 
    /*00022e10*/ MOV         R4, R0 
    /*00022e14*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22e18:
    /*00022e18*/ MOV         R1, R6 
    /*00022e1c*/ MOV         R0, R7 
    /*00022e20*/ BL          0x0000000000022E20          @ VencGetH264Entropy [R_ARM_CALL: .text+0x1026c] 
    /*00022e24*/ MOV         R4, R0 
    /*00022e28*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22e2c:
    /*00022e2c*/ MOV         R0, R7 
    /*00022e30*/ BL          0x0000000000022E30          @ VencStopRecvPic [R_ARM_CALL: .text+0xe614] 
    /*00022e34*/ MOV         R4, R0 
    /*00022e38*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22e3c:
    /*00022e3c*/ MOV         R1, R6 
    /*00022e40*/ MOV         R0, R7 
    /*00022e44*/ BL          0x0000000000022E44          @ VencGetPrediction [R_ARM_CALL: .text+0x1a8bc] 
    /*00022e48*/ MOV         R4, R0 
    /*00022e4c*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22e50:
    /*00022e50*/ MOV         R1, R6 
    /*00022e54*/ MOV         R0, R7 
    /*00022e58*/ BL          0x0000000000022E58          @ VencSetRcAdvParam [R_ARM_CALL: .text+0x1b314] 
    /*00022e5c*/ MOV         R4, R0 
    /*00022e60*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22e64:
    /*00022e64*/ MOV         R1, R6 
    /*00022e68*/ MOV         R0, R7 
    /*00022e6c*/ BL          0x0000000000022E6C          @ VencGetRcParam [R_ARM_CALL: .text+0x9224] 
    /*00022e70*/ MOV         R4, R0 
    /*00022e74*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22e78:
    /*00022e78*/ MOV         R0, R7 
    /*00022e7c*/ LDM         R6, {R1, R2} 
    /*00022e80*/ BL          0x0000000000022E80          @ VencInsertUserData [R_ARM_CALL: .text+0xc7b8] 
    /*00022e84*/ MOV         R4, R0 
    /*00022e88*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22e8c:
    /*00022e8c*/ MOV         R1, R6 
    /*00022e90*/ MOV         R0, R7 
    /*00022e94*/ BL          0x0000000000022E94          @ VencSetRoiBgFrameRate [R_ARM_CALL: .text+0x1169c] 
    /*00022e98*/ MOV         R4, R0 
    /*00022e9c*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22ea0:
    /*00022ea0*/ MOV         R1, R6 
    /*00022ea4*/ MOV         R0, R7 
    /*00022ea8*/ BL          0x0000000000022EA8          @ VencSetH265Slice [R_ARM_CALL: .text+0x122c4] 
    /*00022eac*/ MOV         R4, R0 
    /*00022eb0*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22eb4:
    /*00022eb4*/ MOV         R1, R6 
    /*00022eb8*/ MOV         R0, R7 
    /*00022ebc*/ BL          0x0000000000022EBC          @ VencGetIntraRefresh [R_ARM_CALL: .text+0x17af4] 
    /*00022ec0*/ MOV         R4, R0 
    /*00022ec4*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22ec8:
    /*00022ec8*/ MOV         R1, R6 
    /*00022ecc*/ MOV         R0, R7 
    /*00022ed0*/ BL          0x0000000000022ED0          @ VencSetRcSuperFrmCfg [R_ARM_CALL: .text+0x1422c] 
    /*00022ed4*/ MOV         R4, R0 
    /*00022ed8*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22edc:
    /*00022edc*/ MOV         R1, R7 
    /*00022ee0*/ LDR         R3, [R6] 
    /*00022ee4*/ MOV         R2, R6 
    /*00022ee8*/ MVN         R0, #0 
    /*00022eec*/ BL          0x0000000000022EEC          @ VENC_UserSend [R_ARM_CALL: .text+0x2124c] 
    /*00022ef0*/ MOV         R4, R0 
    /*00022ef4*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22ef8:
    /*00022ef8*/ MOV         R1, R6 
    /*00022efc*/ MOV         R0, R7 
    /*00022f00*/ BL          0x0000000000022F00          @ VencSetHierarchicalQp [R_ARM_CALL: .text+0x1afa0] 
    /*00022f04*/ MOV         R4, R0 
    /*00022f08*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22f0c:
    /*00022f0c*/ MOV         R1, R6 
    /*00022f10*/ MOV         R0, R7 
    /*00022f14*/ BL          0x0000000000022F14          @ VencGetH265Pu [R_ARM_CALL: .text+0x12708] 
    /*00022f18*/ MOV         R4, R0 
    /*00022f1c*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22f20:
    /*00022f20*/ MOV         R1, R6 
    /*00022f24*/ MOV         R0, R7 
    /*00022f28*/ BL          0x0000000000022F28          @ VencGetChnParam [R_ARM_CALL: .text+0x19e5c] 
    /*00022f2c*/ MOV         R4, R0 
    /*00022f30*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22f34:
    /*00022f34*/ MOV         R1, R6 
    /*00022f38*/ MOV         R0, R7 
    /*00022f3c*/ BL          0x0000000000022F3C          @ VencSetRoiCfgEx [R_ARM_CALL: .text+0xf2b0] 
    /*00022f40*/ MOV         R4, R0 
    /*00022f44*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22f48:
    /*00022f48*/ MOV         R1, R6 
    /*00022f4c*/ MOV         R0, R7 
    /*00022f50*/ BL          0x0000000000022F50          @ VencGetH264IntraPred [R_ARM_CALL: .text+0xfcbc] 
    /*00022f54*/ MOV         R4, R0 
    /*00022f58*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22f5c:
    /*00022f5c*/ MOV         R1, R6 
    /*00022f60*/ MOV         R0, R7 
    /*00022f64*/ BL          0x0000000000022F64          @ VencSetForeground [R_ARM_CALL: .text+0x1a38c] 
    /*00022f68*/ MOV         R4, R0 
    /*00022f6c*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22f70:
    /*00022f70*/ MOV         R1, R6 
    /*00022f74*/ MOV         R0, R7 
    /*00022f78*/ BL          0x0000000000022F78          @ VencGetH264Trans [R_ARM_CALL: .text+0xff94] 
    /*00022f7c*/ MOV         R4, R0 
    /*00022f80*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22f84:
    /*00022f84*/ MOV         R1, R6 
    /*00022f88*/ MOV         R0, R7 
    /*00022f8c*/ BL          0x0000000000022F8C          @ VencGetRcSuperFrmCfg [R_ARM_CALL: .text+0x143b0] 
    /*00022f90*/ MOV         R4, R0 
    /*00022f94*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22f98:
    /*00022f98*/ MOV         R1, R6 
    /*00022f9c*/ MOV         R0, R7 
    /*00022fa0*/ BL          0x0000000000022FA0          @ VencGetH264SliceSplit [R_ARM_CALL: .text+0xf70c] 
    /*00022fa4*/ MOV         R4, R0 
    /*00022fa8*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22fac:
    /*00022fac*/ MOV         R1, R6 
    /*00022fb0*/ MOV         R0, R7 
    /*00022fb4*/ BL          0x0000000000022FB4          @ VencSetH265Vui [R_ARM_CALL: .text+0x136ac] 
    /*00022fb8*/ MOV         R4, R0 
    /*00022fbc*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22fc0:
    /*00022fc0*/ MOV         R1, R6 
    /*00022fc4*/ MOV         R0, R7 
    /*00022fc8*/ BL          0x0000000000022FC8          @ VencGetSSECfg [R_ARM_CALL: .text+0x18e94] 
    /*00022fcc*/ MOV         R4, R0 
    /*00022fd0*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22fd4:
    /*00022fd4*/ MOV         R1, R6 
    /*00022fd8*/ MOV         R0, R7 
    /*00022fdc*/ BL          0x0000000000022FDC          @ VencSetRefParam [R_ARM_CALL: .text+0x10c60] 
    /*00022fe0*/ MOV         R4, R0 
    /*00022fe4*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22fe8:
    /*00022fe8*/ MOV         R1, R6 
    /*00022fec*/ MOV         R0, R7 
    /*00022ff0*/ BL          0x0000000000022FF0          @ VencSetH265Entropy [R_ARM_CALL: .text+0x12b4c] 
    /*00022ff4*/ MOV         R4, R0 
    /*00022ff8*/ B           VENC_Ioctl_x2239c
    VENC_Ioctl_x22ffc:
    /*00022ffc*/ MOV         R1, R6 
    /*00023000*/ MOV         R0, R7 
    /*00023004*/ BL          0x0000000000023004          @ VencSetJpegParam [R_ARM_CALL: .text+0x11a2c] 
    /*00023008*/ MOV         R4, R0 
    /*0002300c*/ B           VENC_Ioctl_x2239c
    /*00023010*/ ANDEQ       R1, R0, R4, LSL R1 
FUNC_END VENC_Ioctl


FUNC_BEGIN VencDetachRgn
    /*00023014*/ MOVW        R0, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00023018*/ MOVT        R0, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0002301c*/ MOVW        R3, #36240                  @ 0x8d90 
    /*00023020*/ LDR         R0, [R0] 
    /*00023024*/ MLA         R1, R3, R1, R0 
    /*00023028*/ ADD         R1, R1, #32768              @ 0x8000 
    /*0002302c*/ STR         R2, [R1, #3324]             @ 0xcfc 
    /*00023030*/ BX          LR 
FUNC_END VencDetachRgn


FUNC_BEGIN VENC_GetChnStreamBufState
    /*00023034*/ MOVW        R3, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00023038*/ MOVT        R3, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0002303c*/ PUSH        {R4, R5, LR} 
    /*00023040*/ MOVW        R4, #36240                  @ 0x8d90 
    /*00023044*/ LDR         R3, [R3] 
    /*00023048*/ MOVW        R2, #265                    @ 0x109 
    /*0002304c*/ SUB         SP, SP, #20 
    /*00023050*/ MOV         R5, R0 
    /*00023054*/ MLA         R4, R4, R0, R3 
    /*00023058*/ LDR         R3, [R4, #4] 
    /*0002305c*/ CMP         R3, R2 
    /*00023060*/ BEQ         VENC_GetChnStreamBufState_x230c8
    /*00023064*/ BHI         VENC_GetChnStreamBufState_x23094
    /*00023068*/ CMP         R3, #26 
    /*0002306c*/ BEQ         VENC_GetChnStreamBufState_x23118
    /*00023070*/ CMP         R3, #96                     @ 0x60 
    /*00023074*/ BNE         VENC_GetChnStreamBufState_x230e4
    /*00023078*/ MOV         R0, #10 
    /*0002307c*/ BL          0x000000000002307C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023080*/ LDR         R3, [R0, #152]              @ 0x98 
    /*00023084*/ MOV         R0, R5 
    /*00023088*/ ADD         SP, SP, #20 
    /*0002308c*/ POP         {R4, R5, LR} 
    /*00023090*/ BX          R3 
    VENC_GetChnStreamBufState_x23094:
    /*00023094*/ MOVW        R2, #1002                   @ 0x3ea 
    /*00023098*/ CMP         R3, R2 
    /*0002309c*/ BEQ         VENC_GetChnStreamBufState_x23118
    /*000230a0*/ MOVW        R2, #1006                   @ 0x3ee 
    /*000230a4*/ CMP         R3, R2 
    /*000230a8*/ BNE         VENC_GetChnStreamBufState_x230e4
    /*000230ac*/ MOV         R0, #44                     @ 0x2c 
    /*000230b0*/ BL          0x00000000000230B0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000230b4*/ LDR         R3, [R0, #28] 
    /*000230b8*/ MOV         R0, R5 
    /*000230bc*/ ADD         SP, SP, #20 
    /*000230c0*/ POP         {R4, R5, LR} 
    /*000230c4*/ BX          R3 
    VENC_GetChnStreamBufState_x230c8:
    /*000230c8*/ MOV         R0, #13 
    /*000230cc*/ BL          0x00000000000230CC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000230d0*/ LDR         R3, [R0, #148]              @ 0x94 
    /*000230d4*/ MOV         R0, R5 
    /*000230d8*/ ADD         SP, SP, #20 
    /*000230dc*/ POP         {R4, R5, LR} 
    /*000230e0*/ BX          R3 
    VENC_GetChnStreamBufState_x230e4:
    /*000230e4*/ STR         R3, [SP, #8] 
    /*000230e8*/ MOV         R1, #8 
    /*000230ec*/ MOVW        R3, #3839                   @ 0xeff 
    /*000230f0*/ STR         R5, [SP, #4] 
    /*000230f4*/ STR         R3, [SP] 
    /*000230f8*/ MOVW        R2, #0                      @ .LC133 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9ce0] 
    /*000230fc*/ LDR         R3, [PC, #56]               @ 0x000000000002313c 
    /*00023100*/ MOVT        R2, #0                      @ .LC133 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9ce0] 
    /*00023104*/ MOV         R0, #3 
    /*00023108*/ BL          0x0000000000023108          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002310c*/ MOV         R0, #0 
    /*00023110*/ ADD         SP, SP, #20 
    /*00023114*/ POP         {R4, R5, PC} 
    VENC_GetChnStreamBufState_x23118:
    /*00023118*/ MOV         R0, #11 
    /*0002311c*/ ADD         R4, R4, #32768              @ 0x8000 
    /*00023120*/ BL          0x0000000000023120          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023124*/ LDR         R1, [R4, #3356]             @ 0xd1c 
    /*00023128*/ LDR         R3, [R0, #84]               @ 0x54 
    /*0002312c*/ MOV         R0, R5 
    /*00023130*/ ADD         SP, SP, #20 
    /*00023134*/ POP         {R4, R5, LR} 
    /*00023138*/ BX          R3 
    /*0002313c*/ ANDEQ       R1, R0, R0, LSR #2 
FUNC_END VENC_GetChnStreamBufState


FUNC_BEGIN VENC_InsertFrame
    /*00023140*/ MOVW        R3, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00023144*/ MOVT        R3, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00023148*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0002314c*/ MOVW        R4, #36240                  @ 0x8d90 
    /*00023150*/ LDR         R3, [R3] 
    /*00023154*/ SUB         SP, SP, #16 
    /*00023158*/ MOV         R7, R0 
    /*0002315c*/ MLA         R4, R4, R0, R3 
    /*00023160*/ LDR         R2, [R4, #3704]             @ 0xe78 
    /*00023164*/ CMP         R2, #0 
    /*00023168*/ BLE         VENC_InsertFrame_x23260
    /*0002316c*/ LDR         R3, [R4, #3700]             @ 0xe74 
    /*00023170*/ SUB         R2, R2, #1 
    /*00023174*/ SUBS        R3, R3, #1 
    /*00023178*/ LDRMI       R1, [R4, #3692]             @ 0xe6c 
    /*0002317c*/ ADDMI       R3, R3, R1 
    /*00023180*/ LDR         R1, [R4, #3688]             @ 0xe68 
    /*00023184*/ LDR         R8, [R1, R3, LSL #2] 
    /*00023188*/ STR         R2, [R4, #3704]             @ 0xe78 
    /*0002318c*/ STR         R3, [R4, #3700]             @ 0xe74 
    /*00023190*/ MOV         R6, R8 
    VENC_InsertFrame_x23194:
    /*00023194*/ ADD         R5, R4, #13376              @ 0x3440 
    /*00023198*/ MOV         R2, #440                    @ 0x1b8 
    /*0002319c*/ ADD         R5, R5, #48                 @ 0x30 
    /*000231a0*/ MOV         R0, R6 
    /*000231a4*/ MOV         R1, R5 
    /*000231a8*/ BL          0x00000000000231A8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000231ac*/ MOV         R3, #1 
    /*000231b0*/ ADD         R1, R6, #336                @ 0x150 
    /*000231b4*/ STR         R3, [R6, #392]              @ 0x188 
    /*000231b8*/ MOV         R0, R7 
    /*000231bc*/ BL          0x00000000000231BC          @ VencGetFrmAddInfo [R_ARM_CALL: .text+0x1278] 
    /*000231c0*/ CMP         R0, #0 
    /*000231c4*/ BNE         VENC_InsertFrame_x232a8
    VENC_InsertFrame_x231c8:
    /*000231c8*/ MOV         R0, R5 
    /*000231cc*/ BL          0x00000000000231CC          @ VencVbAdd [R_ARM_CALL: .text+0x1e2c] 
    /*000231d0*/ CMP         R0, #0 
    /*000231d4*/ BNE         VENC_InsertFrame_x23288
    VENC_InsertFrame_x231d8:
    /*000231d8*/ LDR         R3, [R4, #3724]             @ 0xe8c 
    /*000231dc*/ LDR         R1, [R4, #3712]             @ 0xe80 
    /*000231e0*/ CMP         R3, R1 
    /*000231e4*/ BGE         VENC_InsertFrame_x23240
    /*000231e8*/ LDR         R2, [R4, #3716]             @ 0xe84 
    /*000231ec*/ ADD         R3, R3, #1 
    /*000231f0*/ SUBS        R2, R2, #1 
    /*000231f4*/ ADDMI       R2, R2, R1 
    /*000231f8*/ LDR         R1, [R4, #3708]             @ 0xe7c 
    /*000231fc*/ STR         R8, [R1, R2, LSL #2] 
    /*00023200*/ STR         R3, [R4, #3724]             @ 0xe8c 
    /*00023204*/ STR         R2, [R4, #3716]             @ 0xe84 
    VENC_InsertFrame_x23208:
    /*00023208*/ ADD         R4, R4, #12288              @ 0x3000 
    /*0002320c*/ MOV         R0, #3872                   @ 0xf20 
    /*00023210*/ LDR         R3, [PC, #176]              @ 0x00000000000232c8 
    /*00023214*/ MOV         R1, #8 
    /*00023218*/ LDR         IP, [R4, #1132]             @ 0x46c 
    /*0002321c*/ MOVW        R2, #0                      @ .LC134 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9d1c] 
    /*00023220*/ STR         R0, [SP] 
    /*00023224*/ MOVT        R2, #0                      @ .LC134 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9d1c] 
    /*00023228*/ STR         R7, [SP, #4] 
    /*0002322c*/ MOV         R0, #6 
    /*00023230*/ STR         IP, [SP, #8] 
    /*00023234*/ BL          0x0000000000023234          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023238*/ ADD         SP, SP, #16 
    /*0002323c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VENC_InsertFrame_x23240:
    /*00023240*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f6c] 
    /*00023244*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*00023248*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f6c] 
    /*0002324c*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*00023250*/ MOVW        R2, #3871                   @ 0xf1f 
    /*00023254*/ LDR         R1, [PC, #108]              @ 0x00000000000232c8 
    /*00023258*/ BL          0x0000000000023258          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0002325c*/ B           VENC_InsertFrame_x23208
    VENC_InsertFrame_x23260:
    /*00023260*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f6c] 
    /*00023264*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*00023268*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f6c] 
    /*0002326c*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*00023270*/ MOVW        R2, #3860                   @ 0xf14 
    /*00023274*/ LDR         R1, [PC, #76]               @ 0x00000000000232c8 
    /*00023278*/ MOV         R6, #0 
    /*0002327c*/ BL          0x000000000002327C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00023280*/ MOV         R8, R6 
    /*00023284*/ B           VENC_InsertFrame_x23194
    VENC_InsertFrame_x23288:
    /*00023288*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f6c] 
    /*0002328c*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*00023290*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f6c] 
    /*00023294*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*00023298*/ MOVW        R2, #3869                   @ 0xf1d 
    /*0002329c*/ LDR         R1, [PC, #36]               @ 0x00000000000232c8 
    /*000232a0*/ BL          0x00000000000232A0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000232a4*/ B           VENC_InsertFrame_x231d8
    VENC_InsertFrame_x232a8:
    /*000232a8*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f6c] 
    /*000232ac*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*000232b0*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f6c] 
    /*000232b4*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*000232b8*/ MOVW        R2, #3867                   @ 0xf1b 
    /*000232bc*/ LDR         R1, [PC, #4]                @ 0x00000000000232c8 
    /*000232c0*/ BL          0x00000000000232C0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000232c4*/ B           VENC_InsertFrame_x231c8
    /*000232c8*/ ANDEQ       R1, R0, IP, LSR R1 
FUNC_END VENC_InsertFrame


FUNC_BEGIN VENC_InqTaskCallBack
    /*000232cc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000232d0*/ SUB         SP, SP, #60                 @ 0x3c 
    /*000232d4*/ MOV         R3, #0 
    /*000232d8*/ MOV         R8, R0 
    /*000232dc*/ STR         R3, [SP, #48]               @ 0x30 
    /*000232e0*/ BL          0x00000000000232E0          @ MkpVencCheckChn [R_ARM_CALL: .text+0x7ac] 
    /*000232e4*/ SUBS        R5, R0, #0 
    /*000232e8*/ BEQ         VENC_InqTaskCallBack_x232f8
    /*000232ec*/ MOV         R0, R5 
    /*000232f0*/ ADD         SP, SP, #60                 @ 0x3c 
    /*000232f4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_InqTaskCallBack_x232f8:
    /*000232f8*/ MOVW        R7, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000232fc*/ MOVT        R7, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00023300*/ MOVW        FP, #36240                  @ 0x8d90 
    /*00023304*/ ADD         R1, SP, #52                 @ 0x34 
    /*00023308*/ LDR         R4, [R7] 
    /*0002330c*/ MOVW        R9, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x98] 
    /*00023310*/ MOVT        R9, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x98] 
    /*00023314*/ MLA         R4, FP, R8, R4 
    /*00023318*/ ADD         R6, R4, #32768              @ 0x8000 
    /*0002331c*/ ADD         SL, R4, #64                 @ 0x40 
    /*00023320*/ LDR         R3, [R6, #3324]             @ 0xcfc 
    /*00023324*/ MOV         R0, SL 
    /*00023328*/ STR         R5, [R6, #3324]             @ 0xcfc 
    /*0002332c*/ STR         R3, [SP, #28] 
    /*00023330*/ BL          0x0000000000023330          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00023334*/ MOV         R0, #2 
    /*00023338*/ BL          0x0000000000023338          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002333c*/ LDR         R2, [R0, #88]               @ 0x58 
    /*00023340*/ BLX         R2 
    /*00023344*/ MOV         R3, R1 
    /*00023348*/ MOVW        R1, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xc0] 
    /*0002334c*/ MOVT        R1, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xc0] 
    /*00023350*/ MOV         R2, R0 
    /*00023354*/ STR         R1, [SP, #24] 
    /*00023358*/ MOV         IP, R1 
    /*0002335c*/ LDRD        R0, [R1, #16] 
    /*00023360*/ STRD        R2, [SP, #32] 
    /*00023364*/ STRD        R2, [R9, #8] 
    /*00023368*/ STRD        R0, [SP, #40]               @ 0x28 
    /*0002336c*/ SUBS        R0, R2, R0 
    /*00023370*/ SBC         R1, R3, R1 
    /*00023374*/ ADD         R3, PC, #940                @ 0x3ac 
    /*00023378*/ LDRD        R2, [R3] 
    /*0002337c*/ STRD        R0, [SP, #16] 
    /*00023380*/ CMP         R1, R3 
    /*00023384*/ CMPEQ       R0, R2 
    /*00023388*/ BLS         VENC_InqTaskCallBack_x233fc
    /*0002338c*/ LDR         IP, [IP, #4] 
    /*00023390*/ CMP         IP, #0 
    /*00023394*/ BEQ         VENC_InqTaskCallBack_x233d8
    /*00023398*/ LDR         LR, [R7] 
    /*0002339c*/ MOV         R0, R5 
    /*000233a0*/ LDR         R2, [SP, #24] 
    /*000233a4*/ MOV         R1, R5 
    VENC_InqTaskCallBack_x233a8:
    /*000233a8*/ MLA         R3, FP, R0, LR 
    /*000233ac*/ ADD         R1, R1, #1 
    /*000233b0*/ UXTB        R1, R1 
    /*000233b4*/ ADD         R3, R3, #12288              @ 0x3000 
    /*000233b8*/ CMP         R1, IP 
    /*000233bc*/ MOV         R0, R1 
    /*000233c0*/ LDR         R7, [R3, #588]              @ 0x24c 
    /*000233c4*/ STR         R5, [R3, #604]              @ 0x25c 
    /*000233c8*/ STR         R5, [R3, #588]              @ 0x24c 
    /*000233cc*/ STR         R7, [R3, #600]              @ 0x258 
    /*000233d0*/ BCC         VENC_InqTaskCallBack_x233a8
    /*000233d4*/ STR         R2, [SP, #24] 
    VENC_InqTaskCallBack_x233d8:
    /*000233d8*/ ADD         R1, PC, #848                @ 0x350 
    /*000233dc*/ LDRD        R0, [R1] 
    /*000233e0*/ LDRD        R2, [SP, #16] 
    /*000233e4*/ CMP         R3, R1 
    /*000233e8*/ CMPEQ       R2, R0 
    /*000233ec*/ BLS         VENC_InqTaskCallBack_x23700
    /*000233f0*/ LDRD        R2, [SP, #32] 
    /*000233f4*/ LDR         R1, [SP, #24] 
    /*000233f8*/ STRD        R2, [R1, #16] 
    VENC_InqTaskCallBack_x233fc:
    /*000233fc*/ LDR         R3, [R4, #16] 
    /*00023400*/ CMP         R3, #0 
    /*00023404*/ BEQ         VENC_InqTaskCallBack_x234b8
    VENC_InqTaskCallBack_x23408:
    /*00023408*/ LDR         R3, [R6, #3300]             @ 0xce4 
    /*0002340c*/ CMP         R3, #0 
    /*00023410*/ ADDEQ       R5, R4, #12288              @ 0x3000 
    /*00023414*/ BNE         VENC_InqTaskCallBack_x23618
    VENC_InqTaskCallBack_x23418:
    /*00023418*/ LDR         R3, [R4, #4] 
    /*0002341c*/ LDR         R1, [R4, #3724]             @ 0xe8c 
    /*00023420*/ CMP         R3, #26 
    /*00023424*/ STR         R1, [SP, #48]               @ 0x30 
    /*00023428*/ BEQ         VENC_InqTaskCallBack_x23744
    VENC_InqTaskCallBack_x2342c:
    /*0002342c*/ LDR         R3, [R6, #3344]             @ 0xd10 
    /*00023430*/ CMP         R3, #0 
    /*00023434*/ BEQ         VENC_InqTaskCallBack_x23608
    VENC_InqTaskCallBack_x23438:
    /*00023438*/ MOV         R0, R8 
    /*0002343c*/ BL          0x000000000002343C          @ VENC_GetChnStreamBufState [R_ARM_CALL: .text+0x23034] 
    /*00023440*/ SUBS        IP, R0, #0 
    /*00023444*/ BEQ         VENC_InqTaskCallBack_x2355c
    /*00023448*/ LDR         IP, [R4, #4] 
    /*0002344c*/ CMP         IP, #26 
    /*00023450*/ BEQ         VENC_InqTaskCallBack_x236f8
    /*00023454*/ LDR         R3, [R5, #1108]             @ 0x454 
    /*00023458*/ CMP         R3, #1 
    /*0002345c*/ BEQ         VENC_InqTaskCallBack_x2367c
    /*00023460*/ MOVW        R3, #265                    @ 0x109 
    /*00023464*/ CMP         IP, R3 
    /*00023468*/ CMPNE       IP, #96                     @ 0x60 
    /*0002346c*/ BNE         VENC_InqTaskCallBack_x236f8
    /*00023470*/ LDR         R1, [SP, #48]               @ 0x30 
    /*00023474*/ CMP         R1, #0 
    /*00023478*/ BEQ         VENC_InqTaskCallBack_x236d4
    VENC_InqTaskCallBack_x2347c:
    /*0002347c*/ CMP         R1, #0 
    /*00023480*/ BLE         VENC_InqTaskCallBack_x23490
    VENC_InqTaskCallBack_x23484:
    /*00023484*/ LDR         R3, [R5, #32] 
    /*00023488*/ ADD         R3, R3, #1 
    /*0002348c*/ STR         R3, [R5, #32] 
    VENC_InqTaskCallBack_x23490:
    /*00023490*/ LDR         R3, [R5, #28] 
    /*00023494*/ MOV         R0, SL 
    /*00023498*/ ADD         R1, SP, #52                 @ 0x34 
    /*0002349c*/ ADD         R3, R3, #1 
    /*000234a0*/ STR         R3, [R5, #28] 
    /*000234a4*/ BL          0x00000000000234A4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000234a8*/ LDR         R5, [SP, #48]               @ 0x30 
    /*000234ac*/ MOV         R0, R5 
    /*000234b0*/ ADD         SP, SP, #60                 @ 0x3c 
    /*000234b4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_InqTaskCallBack_x234b8:
    /*000234b8*/ ADD         R5, R4, #12288              @ 0x3000 
    /*000234bc*/ LDR         R3, [R5, #132]              @ 0x84 
    /*000234c0*/ CMP         R3, #0 
    /*000234c4*/ BNE         VENC_InqTaskCallBack_x23408
    /*000234c8*/ LDR         IP, [R6, #3300]             @ 0xce4 
    /*000234cc*/ CMP         IP, #0 
    /*000234d0*/ BNE         VENC_InqTaskCallBack_x23618
    /*000234d4*/ LDR         R3, [R6, #3360]             @ 0xd20 
    /*000234d8*/ CMP         R3, #1 
    /*000234dc*/ BNE         VENC_InqTaskCallBack_x23418
    /*000234e0*/ MOV         R3, #3952                   @ 0xf70 
    /*000234e4*/ STR         R8, [SP, #4] 
    /*000234e8*/ STR         R3, [SP] 
    /*000234ec*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x82b8] 
    /*000234f0*/ LDR         R3, [PC, #584]              @ 0x0000000000023740 
    /*000234f4*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x82b8] 
    /*000234f8*/ MOV         R1, #8 
    /*000234fc*/ MOV         R0, #4 
    /*00023500*/ STR         IP, [SP, #48]               @ 0x30 
    /*00023504*/ BL          0x0000000000023504          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023508*/ LDR         R3, [SP, #28] 
    /*0002350c*/ CMP         R3, #1 
    /*00023510*/ BNE         VENC_InqTaskCallBack_x23490
    /*00023514*/ LDR         R3, [R4, #3724]             @ 0xe8c 
    /*00023518*/ CMP         R3, #0 
    /*0002351c*/ BEQ         VENC_InqTaskCallBack_x23490
    /*00023520*/ LDR         R3, [R4, #3720]             @ 0xe88 
    /*00023524*/ SUB         R3, R3, #1 
    /*00023528*/ BLE         VENC_InqTaskCallBack_x23834
    /*0002352c*/ CMP         R3, #0 
    /*00023530*/ LDRLT       R2, [R4, #3712]             @ 0xe80 
    /*00023534*/ ADDLT       R3, R3, R2 
    /*00023538*/ LDR         R2, [R4, #3708]             @ 0xe7c 
    /*0002353c*/ LDR         R1, [R2, R3, LSL #2] 
    /*00023540*/ LDR         R3, [R1, #336]              @ 0x150 
    /*00023544*/ CMP         R3, #1 
    /*00023548*/ BNE         VENC_InqTaskCallBack_x23490
    /*0002354c*/ ADD         R1, R1, #336                @ 0x150 
    /*00023550*/ MOV         R0, R8 
    /*00023554*/ BL          0x0000000000023554          @ VencPutOsd [R_ARM_CALL: .text+0x18c0] 
    /*00023558*/ B           VENC_InqTaskCallBack_x23490
    VENC_InqTaskCallBack_x2355c:
    /*0002355c*/ MOVW        R3, #4036                   @ 0xfc4 
    /*00023560*/ STR         R8, [SP, #4] 
    /*00023564*/ STR         R3, [SP] 
    /*00023568*/ MOVW        R2, #0                      @ .LC137 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9dd0] 
    /*0002356c*/ LDR         R3, [PC, #460]              @ 0x0000000000023740 
    /*00023570*/ MOVT        R2, #0                      @ .LC137 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9dd0] 
    /*00023574*/ MOV         R1, #8 
    /*00023578*/ MOV         R0, #3 
    /*0002357c*/ STR         IP, [SP, #48]               @ 0x30 
    /*00023580*/ BL          0x0000000000023580          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023584*/ LDR         R3, [SP, #28] 
    /*00023588*/ CMP         R3, #1 
    /*0002358c*/ BNE         VENC_InqTaskCallBack_x23490
    /*00023590*/ LDR         R3, [R4, #3724]             @ 0xe8c 
    /*00023594*/ CMP         R3, #0 
    /*00023598*/ BEQ         VENC_InqTaskCallBack_x235c4
    /*0002359c*/ BLE         VENC_InqTaskCallBack_x237b8
    /*000235a0*/ LDR         R3, [R4, #3720]             @ 0xe88 
    /*000235a4*/ SUBS        R3, R3, #1 
    /*000235a8*/ LDRMI       R2, [R4, #3712]             @ 0xe80 
    /*000235ac*/ ADDMI       R3, R3, R2 
    /*000235b0*/ LDR         R2, [R4, #3708]             @ 0xe7c 
    /*000235b4*/ LDR         R1, [R2, R3, LSL #2] 
    /*000235b8*/ LDR         R3, [R1, #336]              @ 0x150 
    /*000235bc*/ CMP         R3, #1 
    /*000235c0*/ BEQ         VENC_InqTaskCallBack_x23800
    VENC_InqTaskCallBack_x235c4:
    /*000235c4*/ LDR         R3, [R6, #3368]             @ 0xd28 
    /*000235c8*/ CMP         R3, #0 
    /*000235cc*/ BEQ         VENC_InqTaskCallBack_x23490
    /*000235d0*/ ADD         R1, R4, #36096              @ 0x8d00 
    /*000235d4*/ LDR         R0, [R4, #56]               @ 0x38 
    /*000235d8*/ ADD         R1, R1, #40                 @ 0x28 
    /*000235dc*/ BL          0x00000000000235DC          @ VencPutOsd [R_ARM_CALL: .text+0x18c0] 
    /*000235e0*/ MOVW        R3, #4065                   @ 0xfe1 
    /*000235e4*/ STR         R8, [SP, #4] 
    /*000235e8*/ MOVW        R2, #0                      @ .LC136 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9da0] 
    /*000235ec*/ STR         R3, [SP] 
    /*000235f0*/ MOVT        R2, #0                      @ .LC136 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9da0] 
    /*000235f4*/ LDR         R3, [PC, #324]              @ 0x0000000000023740 
    /*000235f8*/ MOV         R1, #8 
    /*000235fc*/ MOV         R0, #3 
    /*00023600*/ BL          0x0000000000023600          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023604*/ B           VENC_InqTaskCallBack_x23490
    VENC_InqTaskCallBack_x23608:
    /*00023608*/ MOV         R1, R8 
    /*0002360c*/ ADD         R0, SP, #48                 @ 0x30 
    /*00023610*/ BL          0x0000000000023610          @ VENC_DRV_RingPreProcess [R_ARM_CALL: .text+0x26a70] 
    /*00023614*/ B           VENC_InqTaskCallBack_x23438
    VENC_InqTaskCallBack_x23618:
    /*00023618*/ MOV         R0, SL 
    /*0002361c*/ ADD         R1, SP, #52                 @ 0x34 
    /*00023620*/ BL          0x0000000000023620          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00023624*/ LDR         R0, [R6, #3300]             @ 0xce4 
    /*00023628*/ LDR         R3, [R6, #3296]             @ 0xce0 
    /*0002362c*/ CMP         R0, R3 
    /*00023630*/ BCC         VENC_InqTaskCallBack_x23664
    /*00023634*/ STR         R3, [SP, #8] 
    /*00023638*/ MOVW        R2, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9d60] 
    /*0002363c*/ MOV         R3, #3984                   @ 0xf90 
    /*00023640*/ STR         R0, [SP, #4] 
    /*00023644*/ STR         R3, [SP] 
    /*00023648*/ MOVT        R2, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9d60] 
    /*0002364c*/ LDR         R3, [PC, #236]              @ 0x0000000000023740 
    /*00023650*/ MOV         R1, #8 
    /*00023654*/ MOV         R0, #3 
    /*00023658*/ BL          0x0000000000023658          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002365c*/ LDR         R0, [R6, #3300]             @ 0xce4 
    /*00023660*/ LDR         R3, [R6, #3296]             @ 0xce0 
    VENC_InqTaskCallBack_x23664:
    /*00023664*/ CMP         R0, R3 
    /*00023668*/ MOVCS       R5, #0 
    /*0002366c*/ MOVCC       R5, #1 
    /*00023670*/ MOV         R0, R5 
    /*00023674*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00023678*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_InqTaskCallBack_x2367c:
    /*0002367c*/ MOVW        R3, #13408                  @ 0x3460 
    /*00023680*/ ADD         R2, R4, R3 
    /*00023684*/ LDRD        R6, [R4, R3] 
    /*00023688*/ LDRD        R0, [R2, #-8] 
    /*0002368c*/ LDRD        R2, [R9, #8] 
    /*00023690*/ ADDS        R0, R0, R6 
    /*00023694*/ ADC         R1, R1, R7 
    /*00023698*/ CMP         R1, R3 
    /*0002369c*/ CMPEQ       R0, R2 
    /*000236a0*/ MOVHI       R3, #0 
    /*000236a4*/ STRHI       R3, [SP, #48]               @ 0x30 
    /*000236a8*/ BHI         VENC_InqTaskCallBack_x237a4
    /*000236ac*/ LDR         R1, [SP, #48]               @ 0x30 
    /*000236b0*/ CMP         R1, #0 
    /*000236b4*/ BNE         VENC_InqTaskCallBack_x2347c
    /*000236b8*/ LDR         R6, [R5, #1128]             @ 0x468 
    /*000236bc*/ CMP         R6, #1 
    /*000236c0*/ BEQ         VENC_InqTaskCallBack_x237e0
    /*000236c4*/ MOVW        R3, #265                    @ 0x109 
    /*000236c8*/ CMP         IP, R3 
    /*000236cc*/ CMPNE       IP, #96                     @ 0x60 
    /*000236d0*/ BNE         VENC_InqTaskCallBack_x23490
    VENC_InqTaskCallBack_x236d4:
    /*000236d4*/ MOVW        R3, #4098                   @ 0x1002 
    /*000236d8*/ MOVW        R2, #0                      @ .LC138 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9e0c] 
    /*000236dc*/ STR         R3, [SP] 
    /*000236e0*/ MOVT        R2, #0                      @ .LC138 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9e0c] 
    /*000236e4*/ STR         R8, [SP, #4] 
    /*000236e8*/ MOV         R1, #8 
    /*000236ec*/ LDR         R3, [PC, #76]               @ 0x0000000000023740 
    /*000236f0*/ MOV         R0, #5 
    /*000236f4*/ BL          0x00000000000236F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    VENC_InqTaskCallBack_x236f8:
    /*000236f8*/ LDR         R1, [SP, #48]               @ 0x30 
    /*000236fc*/ B           VENC_InqTaskCallBack_x2347c
    VENC_InqTaskCallBack_x23700:
    /*00023700*/ ADD         R1, PC, #48                 @ 0x30 
    /*00023704*/ LDRD        R0, [R1] 
    /*00023708*/ LDRD        R2, [SP, #40]               @ 0x28 
    /*0002370c*/ ADDS        R2, R2, R0 
    /*00023710*/ ADC         R3, R3, R1 
    /*00023714*/ MOV         R0, R2 
    /*00023718*/ MOV         R1, R3 
    /*0002371c*/ LDR         R3, [SP, #24] 
    /*00023720*/ STRD        R0, [R3, #16] 
    /*00023724*/ B           VENC_InqTaskCallBack_x233fc
    /*00023728*/ BLCC        0xFFFFFFFFFE6D5F2C 
    /*0002372c*/ ANDEQ       R0, R0, R0 
    /*00023730*/ @           <UNDEFINED> instruction: 0x773593ff 
    /*00023734*/ ANDEQ       R0, R0, R0 
    /*00023738*/ BLCC        0xFFFFFFFFFE6D5F40 
    /*0002373c*/ ANDEQ       R0, R0, R0 
    /*00023740*/ ANDEQ       R1, R0, R0, ASR R1 
    VENC_InqTaskCallBack_x23744:
    /*00023744*/ MOV         R0, R4 
    /*00023748*/ BL          0x0000000000023748          @ VencCheckJpegeQueue [R_ARM_CALL: .text+0x1dac8] 
    /*0002374c*/ LDR         R3, [SP, #28] 
    /*00023750*/ CMP         R0, #0 
    /*00023754*/ CMPEQ       R3, #1 
    /*00023758*/ STR         R0, [SP, #48]               @ 0x30 
    /*0002375c*/ BNE         VENC_InqTaskCallBack_x2342c
    /*00023760*/ LDR         R3, [R6, #3368]             @ 0xd28 
    /*00023764*/ CMP         R3, #0 
    /*00023768*/ BEQ         VENC_InqTaskCallBack_x2342c
    /*0002376c*/ ADD         R1, R4, #36096              @ 0x8d00 
    /*00023770*/ LDR         R0, [R4, #56]               @ 0x38 
    /*00023774*/ ADD         R1, R1, #40                 @ 0x28 
    /*00023778*/ BL          0x0000000000023778          @ VencPutOsd [R_ARM_CALL: .text+0x18c0] 
    /*0002377c*/ MOVW        R3, #4019                   @ 0xfb3 
    /*00023780*/ STR         R8, [SP, #4] 
    /*00023784*/ MOVW        R2, #0                      @ .LC136 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9da0] 
    /*00023788*/ STR         R3, [SP] 
    /*0002378c*/ MOVT        R2, #0                      @ .LC136 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9da0] 
    /*00023790*/ LDR         R3, [PC, #-88]              @ 0x0000000000023740 
    /*00023794*/ MOV         R1, #8 
    /*00023798*/ MOV         R0, #3 
    /*0002379c*/ BL          0x000000000002379C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000237a0*/ B           VENC_InqTaskCallBack_x2342c
    VENC_InqTaskCallBack_x237a4:
    /*000237a4*/ MOVW        R3, #265                    @ 0x109 
    /*000237a8*/ CMP         IP, R3 
    /*000237ac*/ CMPNE       IP, #96                     @ 0x60 
    /*000237b0*/ BEQ         VENC_InqTaskCallBack_x236d4
    /*000237b4*/ B           VENC_InqTaskCallBack_x236f8
    VENC_InqTaskCallBack_x237b8:
    /*000237b8*/ MOVW        R3, #4046                   @ 0xfce 
    /*000237bc*/ STR         R8, [SP, #4] 
    VENC_InqTaskCallBack_x237c0:
    /*000237c0*/ STR         R3, [SP] 
    /*000237c4*/ MOVW        R2, #0                      @ .LC139 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9e4c] 
    /*000237c8*/ LDR         R3, [PC, #-144]             @ 0x0000000000023740 
    /*000237cc*/ MOVT        R2, #0                      @ .LC139 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9e4c] 
    /*000237d0*/ MOV         R1, #8 
    /*000237d4*/ MOV         R0, #3 
    /*000237d8*/ BL          0x00000000000237D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000237dc*/ B           VENC_InqTaskCallBack_x23490
    VENC_InqTaskCallBack_x237e0:
    /*000237e0*/ LDR         R0, [R4, #3704]             @ 0xe78 
    /*000237e4*/ CMP         R0, #0 
    /*000237e8*/ BLE         VENC_InqTaskCallBack_x237a4
    /*000237ec*/ STR         R1, [SP] 
    /*000237f0*/ MOV         R0, R8 
    /*000237f4*/ BL          0x00000000000237F4          @ VENC_InsertFrame [R_ARM_CALL: .text+0x23140] 
    /*000237f8*/ STR         R6, [SP, #48]               @ 0x30 
    /*000237fc*/ B           VENC_InqTaskCallBack_x23484
    VENC_InqTaskCallBack_x23800:
    /*00023800*/ MOV         R0, R8 
    /*00023804*/ ADD         R1, R1, #336                @ 0x150 
    /*00023808*/ BL          0x0000000000023808          @ VencPutOsd [R_ARM_CALL: .text+0x18c0] 
    /*0002380c*/ MOVW        R3, #4056                   @ 0xfd8 
    /*00023810*/ STR         R8, [SP, #4] 
    /*00023814*/ MOVW        R2, #0                      @ .LC136 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9da0] 
    /*00023818*/ STR         R3, [SP] 
    /*0002381c*/ MOVT        R2, #0                      @ .LC136 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9da0] 
    /*00023820*/ LDR         R3, [PC, #-232]             @ 0x0000000000023740 
    /*00023824*/ MOV         R1, #8 
    /*00023828*/ MOV         R0, #3 
    /*0002382c*/ BL          0x000000000002382C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023830*/ B           VENC_InqTaskCallBack_x235c4
    VENC_InqTaskCallBack_x23834:
    /*00023834*/ STR         R8, [SP, #4] 
    /*00023838*/ MOVW        R3, #3962                   @ 0xf7a 
    /*0002383c*/ B           VENC_InqTaskCallBack_x237c0
FUNC_END VENC_InqTaskCallBack


FUNC_BEGIN VencCheckOsd
    /*00023840*/ MOVW        R3, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00023844*/ MOVT        R3, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00023848*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002384c*/ MOVW        R6, #36240                  @ 0x8d90 
    /*00023850*/ LDR         R3, [R3] 
    /*00023854*/ SUB         SP, SP, #28 
    /*00023858*/ MOVW        R4, #265                    @ 0x109 
    /*0002385c*/ STR         R0, [SP, #16] 
    /*00023860*/ MLA         R6, R6, R0, R3 
    /*00023864*/ LDR         R3, [R6, #80]               @ 0x50 
    /*00023868*/ LDR         IP, [R6, #4] 
    /*0002386c*/ LDR         R0, [R3, #380]              @ 0x17c 
    /*00023870*/ CMP         IP, R4 
    /*00023874*/ CMPNE       IP, #96                     @ 0x60 
    /*00023878*/ MOVEQ       IP, #1 
    /*0002387c*/ MOVNE       IP, #0 
    /*00023880*/ LDR         R8, [R0, #24] 
    /*00023884*/ CMP         R8, #8 
    /*00023888*/ MOVLS       R4, #0 
    /*0002388c*/ ANDHI       R4, IP, #1 
    /*00023890*/ CMP         R4, #0 
    /*00023894*/ BNE         VencCheckOsd_x239e8
    /*00023898*/ ADD         R0, R0, #8 
    /*0002389c*/ BL          0x000000000002389C          @ VENC_DRV_CheckOsdFormat [R_ARM_CALL: .text+0x25f44] 
    /*000238a0*/ CMP         R0, #0 
    /*000238a4*/ BEQ         VencCheckOsd_x239b8
    /*000238a8*/ CMP         R8, #0 
    /*000238ac*/ BEQ         VencCheckOsd_x239ac
    /*000238b0*/ MOVW        R3, #0                      @ .LC143 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9fa4] 
    /*000238b4*/ MOVW        R9, #0                      @ .LC142 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9f34] 
    /*000238b8*/ MOVT        R3, #0                      @ .LC143 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9fa4] 
    /*000238bc*/ MOVT        R9, #0                      @ .LC142 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9f34] 
    /*000238c0*/ STR         R3, [SP, #20] 
    /*000238c4*/ MOV         IP, R4 
    /*000238c8*/ B           VencCheckOsd_x238d8
    VencCheckOsd_x238cc:
    /*000238cc*/ CMP         R8, R4 
    /*000238d0*/ MOV         IP, R4 
    /*000238d4*/ BEQ         VencCheckOsd_x239ac
    VencCheckOsd_x238d8:
    /*000238d8*/ LDR         R5, [R6, #4] 
    /*000238dc*/ MOVW        R7, #1002                   @ 0x3ea 
    /*000238e0*/ ADD         R4, IP, #1 
    /*000238e4*/ MOV         LR, #96                     @ 0x60 
    /*000238e8*/ CMP         R5, R7 
    /*000238ec*/ CMPNE       R5, #26 
    /*000238f0*/ LDR         R3, [PC, #308]              @ 0x0000000000023a2c 
    /*000238f4*/ MOV         R2, R9 
    /*000238f8*/ MOV         R1, #8 
    /*000238fc*/ MOV         FP, #0 
    /*00023900*/ MOVW        SL, #4162                   @ 0x1042 
    /*00023904*/ MOV         R0, #3 
    /*00023908*/ BNE         VencCheckOsd_x238cc
    /*0002390c*/ LDR         R5, [R6, #80]               @ 0x50 
    /*00023910*/ LDR         R5, [R5, #380]              @ 0x17c 
    /*00023914*/ MLA         IP, LR, IP, R5 
    /*00023918*/ LDR         LR, [IP, #76]               @ 0x4c 
    /*0002391c*/ CMP         LR, #0 
    /*00023920*/ BNE         VencCheckOsd_x2393c
    /*00023924*/ LDR         LR, [IP, #80]               @ 0x50 
    /*00023928*/ CMP         LR, #0 
    /*0002392c*/ BNE         VencCheckOsd_x2393c
    /*00023930*/ LDR         IP, [IP, #84]               @ 0x54 
    /*00023934*/ CMP         IP, #0 
    /*00023938*/ BEQ         VencCheckOsd_x23954
    VencCheckOsd_x2393c:
    /*0002393c*/ LDR         IP, [SP, #16] 
    /*00023940*/ STR         FP, [R5, #12] 
    /*00023944*/ STM         SP, {SL, IP} 
    /*00023948*/ BL          0x0000000000023948          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002394c*/ LDR         R3, [R6, #80]               @ 0x50 
    /*00023950*/ LDR         R5, [R3, #380]              @ 0x17c 
    VencCheckOsd_x23954:
    /*00023954*/ MOV         R3, #96                     @ 0x60 
    /*00023958*/ MLA         R3, R3, R4, R5 
    /*0002395c*/ LDR         R3, [R3, #12] 
    /*00023960*/ CMP         R3, #2 
    /*00023964*/ BLS         VencCheckOsd_x238cc
    /*00023968*/ LDR         LR, [SP, #16] 
    /*0002396c*/ MOV         R1, #0 
    /*00023970*/ MOVW        IP, #4171                   @ 0x104b 
    /*00023974*/ STR         R1, [R5, #12] 
    /*00023978*/ MOV         R0, #2 
    /*0002397c*/ STR         R1, [SP, #8] 
    /*00023980*/ STR         R0, [SP, #12] 
    /*00023984*/ MOV         R1, #8 
    /*00023988*/ STR         IP, [SP] 
    /*0002398c*/ MOV         R0, #3 
    /*00023990*/ LDR         R3, [PC, #148]              @ 0x0000000000023a2c 
    /*00023994*/ LDR         R2, [SP, #20] 
    /*00023998*/ STR         LR, [SP, #4] 
    /*0002399c*/ BL          0x000000000002399C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000239a0*/ CMP         R8, R4 
    /*000239a4*/ MOV         IP, R4 
    /*000239a8*/ BNE         VencCheckOsd_x238d8
    VencCheckOsd_x239ac:
    /*000239ac*/ MOV         R0, #0 
    VencCheckOsd_x239b0:
    /*000239b0*/ ADD         SP, SP, #28 
    /*000239b4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VencCheckOsd_x239b8:
    /*000239b8*/ LDR         R3, [SP, #16] 
    /*000239bc*/ MOVW        R2, #0                      @ .LC141 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9eec] 
    /*000239c0*/ MOV         R1, #8 
    /*000239c4*/ MOVT        R2, #0                      @ .LC141 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9eec] 
    /*000239c8*/ MOV         R0, #3 
    /*000239cc*/ STR         R3, [SP, #4] 
    /*000239d0*/ MOVW        R3, #4146                   @ 0x1032 
    /*000239d4*/ STR         R3, [SP] 
    /*000239d8*/ LDR         R3, [PC, #76]               @ 0x0000000000023a2c 
    /*000239dc*/ BL          0x00000000000239DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000239e0*/ MVN         R0, #0 
    /*000239e4*/ B           VencCheckOsd_x239b0
    VencCheckOsd_x239e8:
    /*000239e8*/ MOV         R3, #1 
    /*000239ec*/ STR         R3, [R0, #8] 
    /*000239f0*/ LDR         R1, [R6, #80]               @ 0x50 
    /*000239f4*/ MOV         R4, #0 
    /*000239f8*/ MOVW        IP, #4138                   @ 0x102a 
    /*000239fc*/ MOVW        R2, #0                      @ .LC140 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9e90] 
    /*00023a00*/ LDR         R3, [PC, #36]               @ 0x0000000000023a2c 
    /*00023a04*/ MOVT        R2, #0                      @ .LC140 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9e90] 
    /*00023a08*/ LDR         LR, [R1, #380]              @ 0x17c 
    /*00023a0c*/ MOV         R0, #3 
    /*00023a10*/ MOV         R1, #8 
    /*00023a14*/ STR         R4, [LR, #12] 
    /*00023a18*/ LDR         LR, [SP, #16] 
    /*00023a1c*/ STM         SP, {IP, LR} 
    /*00023a20*/ BL          0x0000000000023A20          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023a24*/ MVN         R0, #0 
    /*00023a28*/ B           VencCheckOsd_x239b0
    /*00023a2c*/ ANDEQ       R1, R0, R8, ROR #2 
FUNC_END VencCheckOsd


FUNC_BEGIN VencStartDeBreathEffectFrame
    /*00023a30*/ MOVW        R3, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00023a34*/ MOVT        R3, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00023a38*/ PUSH        {R4, R5, R6, LR} 
    /*00023a3c*/ MOVW        R4, #36240                  @ 0x8d90 
    /*00023a40*/ LDR         R3, [R3] 
    /*00023a44*/ SUB         SP, SP, #64                 @ 0x40 
    /*00023a48*/ MOV         R5, R0 
    /*00023a4c*/ MLA         R4, R4, R0, R3 
    /*00023a50*/ LDR         R3, [R4, #80]               @ 0x50 
    /*00023a54*/ CMP         R3, #0 
    /*00023a58*/ BEQ         VencStartDeBreathEffectFrame_x23b54
    VencStartDeBreathEffectFrame_x23a5c:
    /*00023a5c*/ LDR         R1, [R3, #376]              @ 0x178 
    /*00023a60*/ MOV         R0, #19 
    /*00023a64*/ LDR         R2, [R4, #84]               @ 0x54 
    /*00023a68*/ ADD         R6, R4, #68                 @ 0x44 
    /*00023a6c*/ STR         R3, [SP, #16] 
    /*00023a70*/ STR         R1, [SP, #60]               @ 0x3c 
    /*00023a74*/ STR         R2, [SP, #20] 
    /*00023a78*/ BL          0x0000000000023A78          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023a7c*/ ADD         R2, SP, #4 
    /*00023a80*/ ADD         R1, SP, #16 
    /*00023a84*/ LDR         R3, [R0, #12] 
    /*00023a88*/ MOV         R0, R5 
    /*00023a8c*/ BLX         R3 
    /*00023a90*/ LDR         R3, [SP, #4] 
    /*00023a94*/ LDR         R1, [SP, #8] 
    /*00023a98*/ ADD         IP, R4, #32768              @ 0x8000 
    /*00023a9c*/ LDR         R0, [SP, #12] 
    /*00023aa0*/ CMP         R3, #5 
    /*00023aa4*/ CMPNE       R3, #0 
    /*00023aa8*/ STR         R3, [R4, #84]               @ 0x54 
    /*00023aac*/ STR         R1, [R4, #88]               @ 0x58 
    /*00023ab0*/ MOVEQ       R2, #1 
    /*00023ab4*/ STR         R0, [R4, #96]               @ 0x60 
    /*00023ab8*/ MOVNE       R2, #0 
    /*00023abc*/ LDR         IP, [IP, #3328]             @ 0xd00 
    /*00023ac0*/ MOV         R1, R6 
    /*00023ac4*/ MOV         R0, R5 
    /*00023ac8*/ STR         IP, [R4, #100]              @ 0x64 
    /*00023acc*/ BL          0x0000000000023ACC          @ VencGetRoi [R_ARM_CALL: .text+0x1b30] 
    /*00023ad0*/ LDR         R3, [R4, #4] 
    /*00023ad4*/ CMP         R3, #96                     @ 0x60 
    /*00023ad8*/ BEQ         VencStartDeBreathEffectFrame_x23b38
    /*00023adc*/ MOVW        R2, #265                    @ 0x109 
    /*00023ae0*/ CMP         R3, R2 
    /*00023ae4*/ BEQ         VencStartDeBreathEffectFrame_x23b04
    /*00023ae8*/ MOVW        R3, #0                      @ .LC145 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa034] 
    /*00023aec*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*00023af0*/ MOVT        R3, #0                      @ .LC145 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa034] 
    /*00023af4*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*00023af8*/ MOVW        R2, #4218                   @ 0x107a 
    /*00023afc*/ LDR         R1, [PC, #116]              @ 0x0000000000023b78 
    /*00023b00*/ BL          0x0000000000023B00          @ osal_panic [R_ARM_CALL: +0x0] 
    VencStartDeBreathEffectFrame_x23b04:
    /*00023b04*/ MOV         R0, #13 
    /*00023b08*/ BL          0x0000000000023B08          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023b0c*/ MOV         R1, R6 
    /*00023b10*/ LDR         R3, [R0, #44]               @ 0x2c 
    /*00023b14*/ MOV         R0, R5 
    /*00023b18*/ BLX         R3 
    VencStartDeBreathEffectFrame_x23b1c:
    /*00023b1c*/ CMP         R0, #0 
    /*00023b20*/ ADDEQ       R4, R4, #12288              @ 0x3000 
    /*00023b24*/ LDREQ       R3, [R4, #40]               @ 0x28 
    /*00023b28*/ ADDEQ       R3, R3, #1 
    /*00023b2c*/ STREQ       R3, [R4, #40]               @ 0x28 
    /*00023b30*/ ADD         SP, SP, #64                 @ 0x40 
    /*00023b34*/ POP         {R4, R5, R6, PC} 
    VencStartDeBreathEffectFrame_x23b38:
    /*00023b38*/ MOV         R0, #10 
    /*00023b3c*/ BL          0x0000000000023B3C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023b40*/ MOV         R1, R6 
    /*00023b44*/ LDR         R3, [R0, #32] 
    /*00023b48*/ MOV         R0, R5 
    /*00023b4c*/ BLX         R3 
    /*00023b50*/ B           VencStartDeBreathEffectFrame_x23b1c
    VencStartDeBreathEffectFrame_x23b54:
    /*00023b54*/ MOVW        R3, #0                      @ .LC144 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa000] 
    /*00023b58*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*00023b5c*/ MOVT        R3, #0                      @ .LC144 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa000] 
    /*00023b60*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*00023b64*/ MOVW        R2, #4191                   @ 0x105f 
    /*00023b68*/ LDR         R1, [PC, #8]                @ 0x0000000000023b78 
    /*00023b6c*/ BL          0x0000000000023B6C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00023b70*/ LDR         R3, [R4, #80]               @ 0x50 
    /*00023b74*/ B           VencStartDeBreathEffectFrame_x23a5c
    /*00023b78*/ ANDEQ       R1, R0, R8, ROR R1 
FUNC_END VencStartDeBreathEffectFrame


FUNC_BEGIN VencDisableDeBreathEffect
    /*00023b7c*/ MOVW        R2, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00023b80*/ MOVT        R2, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00023b84*/ PUSH        {R4, LR} 
    /*00023b88*/ MOVW        R3, #36240                  @ 0x8d90 
    /*00023b8c*/ LDR         R1, [R2] 
    /*00023b90*/ MOV         R4, R0 
    /*00023b94*/ SUB         SP, SP, #16 
    /*00023b98*/ MOV         R2, #0 
    /*00023b9c*/ MOV         R0, #19 
    /*00023ba0*/ MLA         R3, R3, R4, R1 
    /*00023ba4*/ ADD         R3, R3, #32768              @ 0x8000 
    /*00023ba8*/ STR         R2, [R3, #3328]             @ 0xd00 
    /*00023bac*/ BL          0x0000000000023BAC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023bb0*/ ADD         R1, SP, #4 
    /*00023bb4*/ LDR         R3, [R0, #116]              @ 0x74 
    /*00023bb8*/ MOV         R0, R4 
    /*00023bbc*/ BLX         R3 
    /*00023bc0*/ SUBS        R3, R0, #0 
    /*00023bc4*/ BNE         VencDisableDeBreathEffect_x23bd4
    /*00023bc8*/ LDR         R2, [SP, #4] 
    /*00023bcc*/ CMP         R2, #1 
    /*00023bd0*/ BEQ         VencDisableDeBreathEffect_x23be0
    VencDisableDeBreathEffect_x23bd4:
    /*00023bd4*/ MOV         R0, R3 
    /*00023bd8*/ ADD         SP, SP, #16 
    /*00023bdc*/ POP         {R4, PC} 
    VencDisableDeBreathEffect_x23be0:
    /*00023be0*/ MOV         R0, #19 
    /*00023be4*/ STR         R3, [SP, #4] 
    /*00023be8*/ BL          0x0000000000023BE8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023bec*/ ADD         R1, SP, #4 
    /*00023bf0*/ LDR         R3, [R0, #112]              @ 0x70 
    /*00023bf4*/ MOV         R0, R4 
    /*00023bf8*/ BLX         R3 
    /*00023bfc*/ MOV         R3, R0 
    /*00023c00*/ MOV         R0, R3 
    /*00023c04*/ ADD         SP, SP, #16 
    /*00023c08*/ POP         {R4, PC} 
FUNC_END VencDisableDeBreathEffect


FUNC_BEGIN VencChangeGopMode
    /*00023c0c*/ MOVW        R3, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00023c10*/ MOVT        R3, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00023c14*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00023c18*/ SUB         SP, SP, #360                @ 0x168 
    /*00023c1c*/ LDR         IP, [R3] 
    /*00023c20*/ MOV         R6, R0 
    /*00023c24*/ MOVW        R3, #4332                   @ 0x10ec 
    /*00023c28*/ MOV         R1, #8 
    /*00023c2c*/ STR         R3, [SP] 
    /*00023c30*/ MOVW        R4, #36240                  @ 0x8d90 
    /*00023c34*/ LDR         R3, [PC, #1240]             @ 0x0000000000024114 
    /*00023c38*/ MOVW        R2, #0                      @ .LC146 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa054] 
    /*00023c3c*/ MOV         R0, #4 
    /*00023c40*/ MOVT        R2, #0                      @ .LC146 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa054] 
    /*00023c44*/ MLA         R4, R4, R6, IP 
    /*00023c48*/ MOV         IP, #0 
    /*00023c4c*/ STR         IP, [SP, #20] 
    /*00023c50*/ BL          0x0000000000023C50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023c54*/ BL          0x0000000000023C54          @ VENC_DRV_IsSupportDeBreathEffect [R_ARM_CALL: .text+0x26a28] 
    /*00023c58*/ CMP         R0, #1 
    /*00023c5c*/ BEQ         VencChangeGopMode_x2405c
    VencChangeGopMode_x23c60:
    /*00023c60*/ ADD         R5, R4, #12928              @ 0x3280 
    /*00023c64*/ ADD         R7, R4, #12992              @ 0x32c0 
    /*00023c68*/ ADD         R5, R5, #36                 @ 0x24 
    /*00023c6c*/ ADD         R7, R7, #12 
    /*00023c70*/ MOV         R2, #40                     @ 0x28 
    /*00023c74*/ ADD         R0, SP, #32 
    /*00023c78*/ MOV         R1, R5 
    /*00023c7c*/ ADD         R8, R4, #12864              @ 0x3240 
    /*00023c80*/ BL          0x0000000000023C80          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00023c84*/ MOV         R1, R7 
    /*00023c88*/ MOV         R2, #16 
    /*00023c8c*/ ADD         R0, SP, #72                 @ 0x48 
    /*00023c90*/ BL          0x0000000000023C90          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00023c94*/ LDR         R3, [R4, #4] 
    /*00023c98*/ ADD         R8, R8, #40                 @ 0x28 
    /*00023c9c*/ CMP         R3, #96                     @ 0x60 
    /*00023ca0*/ BEQ         VencChangeGopMode_x23e88
    /*00023ca4*/ MOVW        R2, #265                    @ 0x109 
    /*00023ca8*/ CMP         R3, R2 
    /*00023cac*/ BNE         VencChangeGopMode_x23e00
    /*00023cb0*/ MOV         R0, R5 
    /*00023cb4*/ ADD         R1, SP, #20 
    /*00023cb8*/ BL          0x0000000000023CB8          @ VencGetGop [R_ARM_CALL: .text+0x14534] 
    /*00023cbc*/ CMP         R0, #0 
    /*00023cc0*/ STRNE       R6, [SP, #4] 
    /*00023cc4*/ MOVWNE      R3, #4383                   @ 0x111f 
    /*00023cc8*/ BNE         VencChangeGopMode_x240cc
    /*00023ccc*/ ADD         R5, R4, #12288              @ 0x3000 
    /*00023cd0*/ MOV         R0, #19 
    /*00023cd4*/ LDR         R2, [R5, #640]              @ 0x280 
    /*00023cd8*/ LDR         R3, [R5, #644]              @ 0x284 
    /*00023cdc*/ STR         R2, [SP, #24] 
    /*00023ce0*/ STR         R3, [SP, #28] 
    /*00023ce4*/ BL          0x0000000000023CE4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023ce8*/ ADD         R1, SP, #24 
    /*00023cec*/ MOV         R2, #1 
    /*00023cf0*/ LDR         R3, [R0, #32] 
    /*00023cf4*/ MOV         R0, R6 
    /*00023cf8*/ BLX         R3 
    /*00023cfc*/ CMP         R0, #0 
    /*00023d00*/ BNE         VencChangeGopMode_x240ec
    /*00023d04*/ MOV         R0, #13 
    /*00023d08*/ BL          0x0000000000023D08          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023d0c*/ LDR         R3, [SP, #20] 
    /*00023d10*/ MOV         R2, R7 
    /*00023d14*/ MOV         IP, #1 
    /*00023d18*/ MOV         R1, R8 
    /*00023d1c*/ STR         IP, [SP] 
    /*00023d20*/ LDR         R7, [R0, #12] 
    /*00023d24*/ MOV         R0, R6 
    /*00023d28*/ BLX         R7 
    /*00023d2c*/ CMP         R0, #0 
    /*00023d30*/ STRNE       R6, [SP, #4] 
    /*00023d34*/ MOVWNE      R3, #4401                   @ 0x1131 
    /*00023d38*/ BNE         VencChangeGopMode_x240a4
    /*00023d3c*/ MOV         R0, #13 
    /*00023d40*/ BL          0x0000000000023D40          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023d44*/ ADD         R1, R4, #13248              @ 0x33c0 
    /*00023d48*/ ADD         R1, R1, #52                 @ 0x34 
    /*00023d4c*/ LDR         R3, [R0, #164]              @ 0xa4 
    /*00023d50*/ MOV         R0, R6 
    /*00023d54*/ BLX         R3 
    /*00023d58*/ CMP         R0, #0 
    /*00023d5c*/ STRNE       R6, [SP, #4] 
    /*00023d60*/ MOVWNE      R3, #4408                   @ 0x1138 
    /*00023d64*/ BNE         VencChangeGopMode_x240a4
    /*00023d68*/ MOV         R0, #13 
    /*00023d6c*/ BL          0x0000000000023D6C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023d70*/ ADD         R1, R4, #12800              @ 0x3200 
    /*00023d74*/ ADD         R1, R1, #48                 @ 0x30 
    /*00023d78*/ LDR         R3, [R0, #144]              @ 0x90 
    /*00023d7c*/ MOV         R0, R6 
    /*00023d80*/ BLX         R3 
    /*00023d84*/ CMP         R0, #0 
    /*00023d88*/ STRNE       R6, [SP, #4] 
    /*00023d8c*/ MOVWNE      R3, #4415                   @ 0x113f 
    /*00023d90*/ BNE         VencChangeGopMode_x240a4
    /*00023d94*/ MOV         R0, #19 
    /*00023d98*/ BL          0x0000000000023D98          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023d9c*/ ADD         R1, R4, #13312              @ 0x3400 
    /*00023da0*/ ADD         R1, R1, #4 
    /*00023da4*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00023da8*/ MOV         R0, R6 
    /*00023dac*/ BLX         R3 
    /*00023db0*/ CMP         R0, #0 
    /*00023db4*/ STRNE       R6, [SP, #4] 
    /*00023db8*/ MOVWNE      R3, #4422                   @ 0x1146 
    /*00023dbc*/ BNE         VencChangeGopMode_x240a4
    /*00023dc0*/ MOV         R0, #19 
    /*00023dc4*/ BL          0x0000000000023DC4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023dc8*/ ADD         R1, R4, #13312              @ 0x3400 
    /*00023dcc*/ ADD         R1, R1, #20 
    /*00023dd0*/ LDR         R3, [R0, #112]              @ 0x70 
    /*00023dd4*/ MOV         R0, R6 
    /*00023dd8*/ BLX         R3 
    /*00023ddc*/ SUBS        R7, R0, #0 
    /*00023de0*/ BNE         VencChangeGopMode_x2409c
    /*00023de4*/ LDR         R3, [R5, #1004]             @ 0x3ec 
    /*00023de8*/ CMP         R3, #0 
    /*00023dec*/ BNE         VencChangeGopMode_x24008
    /*00023df0*/ LDR         R3, [SP, #32] 
    /*00023df4*/ CMP         R3, #16 
    /*00023df8*/ BNE         VencChangeGopMode_x23fd4
    /*00023dfc*/ B           VencChangeGopMode_x23e4c
    VencChangeGopMode_x23e00:
    /*00023e00*/ STR         R3, [SP, #8] 
    /*00023e04*/ MOV         R1, #8 
    /*00023e08*/ MOVW        R3, #4528                   @ 0x11b0 
    /*00023e0c*/ STR         R6, [SP, #4] 
    /*00023e10*/ STR         R3, [SP] 
    /*00023e14*/ MOVW        R2, #0                      @ .LC151 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa1dc] 
    /*00023e18*/ LDR         R3, [PC, #756]              @ 0x0000000000024114 
    /*00023e1c*/ MOVT        R2, #0                      @ .LC151 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa1dc] 
    /*00023e20*/ MOV         R0, #3 
    /*00023e24*/ ADD         R5, R4, #12288              @ 0x3000 
    /*00023e28*/ BL          0x0000000000023E28          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00023e2c*/ MOVW        R3, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x84c8] 
    /*00023e30*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*00023e34*/ MOVT        R3, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x84c8] 
    /*00023e38*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*00023e3c*/ MOVW        R2, #4529                   @ 0x11b1 
    /*00023e40*/ LDR         R1, [PC, #716]              @ 0x0000000000024114 
    /*00023e44*/ MOV         R7, #0 
    /*00023e48*/ BL          0x0000000000023E48          @ osal_panic [R_ARM_CALL: +0x0] 
    VencChangeGopMode_x23e4c:
    /*00023e4c*/ LDR         R3, [R5, #676]              @ 0x2a4 
    /*00023e50*/ ADD         R4, R4, #32768              @ 0x8000 
    /*00023e54*/ LDR         R2, [R5, #716]              @ 0x2cc 
    /*00023e58*/ MOV         R1, #0 
    /*00023e5c*/ CMP         R3, #17 
    /*00023e60*/ CMPNE       R3, #7 
    /*00023e64*/ STR         R1, [R5, #612]              @ 0x264 
    /*00023e68*/ MOV         R0, R7 
    /*00023e6c*/ STR         R2, [R5, #608]              @ 0x260 
    /*00023e70*/ MOVEQ       R2, #1 
    /*00023e74*/ MOVNE       R2, #0 
    /*00023e78*/ STR         R3, [R4, #3332]             @ 0xd04 
    /*00023e7c*/ STR         R2, [R5, #1008]             @ 0x3f0 
    /*00023e80*/ ADD         SP, SP, #360                @ 0x168 
    /*00023e84*/ POP         {R4, R5, R6, R7, R8, PC} 
    VencChangeGopMode_x23e88:
    /*00023e88*/ MOV         R0, R5 
    /*00023e8c*/ ADD         R1, SP, #20 
    /*00023e90*/ BL          0x0000000000023E90          @ VencGetGop [R_ARM_CALL: .text+0x14534] 
    /*00023e94*/ CMP         R0, #0 
    /*00023e98*/ BNE         VencChangeGopMode_x240c4
    /*00023e9c*/ ADD         R5, R4, #12288              @ 0x3000 
    /*00023ea0*/ MOV         R0, #19 
    /*00023ea4*/ LDR         R2, [R5, #640]              @ 0x280 
    /*00023ea8*/ LDR         R3, [R5, #644]              @ 0x284 
    /*00023eac*/ STR         R2, [SP, #24] 
    /*00023eb0*/ STR         R3, [SP, #28] 
    /*00023eb4*/ BL          0x0000000000023EB4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023eb8*/ ADD         R1, SP, #24 
    /*00023ebc*/ MOV         R2, #1 
    /*00023ec0*/ LDR         R3, [R0, #32] 
    /*00023ec4*/ MOV         R0, R6 
    /*00023ec8*/ BLX         R3 
    /*00023ecc*/ CMP         R0, #0 
    /*00023ed0*/ STRNE       R6, [SP, #4] 
    /*00023ed4*/ MOVWNE      R3, #4469                   @ 0x1175 
    /*00023ed8*/ BNE         VencChangeGopMode_x24070
    /*00023edc*/ MOV         R0, #10 
    /*00023ee0*/ BL          0x0000000000023EE0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023ee4*/ LDR         R3, [SP, #20] 
    /*00023ee8*/ MOV         R2, R7 
    /*00023eec*/ MOV         IP, #1 
    /*00023ef0*/ MOV         R1, R8 
    /*00023ef4*/ STR         IP, [SP] 
    /*00023ef8*/ LDR         R7, [R0, #12] 
    /*00023efc*/ MOV         R0, R6 
    /*00023f00*/ BLX         R7 
    /*00023f04*/ CMP         R0, #0 
    /*00023f08*/ STRNE       R6, [SP, #4] 
    /*00023f0c*/ MOVWNE      R3, #4477                   @ 0x117d 
    /*00023f10*/ BNE         VencChangeGopMode_x24070
    /*00023f14*/ MOV         R0, #10 
    /*00023f18*/ BL          0x0000000000023F18          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023f1c*/ ADD         R1, R4, #13248              @ 0x33c0 
    /*00023f20*/ ADD         R1, R1, #52                 @ 0x34 
    /*00023f24*/ LDR         R3, [R0, #168]              @ 0xa8 
    /*00023f28*/ MOV         R0, R6 
    /*00023f2c*/ BLX         R3 
    /*00023f30*/ CMP         R0, #0 
    /*00023f34*/ STRNE       R6, [SP, #4] 
    /*00023f38*/ MOVWNE      R3, #4484                   @ 0x1184 
    /*00023f3c*/ BNE         VencChangeGopMode_x24070
    /*00023f40*/ MOV         R0, #10 
    /*00023f44*/ BL          0x0000000000023F44          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023f48*/ ADD         R1, R4, #12800              @ 0x3200 
    /*00023f4c*/ ADD         R1, R1, #48                 @ 0x30 
    /*00023f50*/ LDR         R3, [R0, #140]              @ 0x8c 
    /*00023f54*/ MOV         R0, R6 
    /*00023f58*/ BLX         R3 
    /*00023f5c*/ CMP         R0, #0 
    /*00023f60*/ STRNE       R6, [SP, #4] 
    /*00023f64*/ MOVWNE      R3, #4491                   @ 0x118b 
    /*00023f68*/ BNE         VencChangeGopMode_x24070
    /*00023f6c*/ MOV         R0, #19 
    /*00023f70*/ BL          0x0000000000023F70          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023f74*/ ADD         R1, R4, #13312              @ 0x3400 
    /*00023f78*/ ADD         R1, R1, #4 
    /*00023f7c*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00023f80*/ MOV         R0, R6 
    /*00023f84*/ BLX         R3 
    /*00023f88*/ SUBS        R8, R0, #0 
    /*00023f8c*/ STRNE       R6, [SP, #4] 
    /*00023f90*/ MOVWNE      R3, #4498                   @ 0x1192 
    /*00023f94*/ BNE         VencChangeGopMode_x24070
    /*00023f98*/ MOV         R0, #19 
    /*00023f9c*/ BL          0x0000000000023F9C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023fa0*/ ADD         R1, R4, #13312              @ 0x3400 
    /*00023fa4*/ ADD         R1, R1, #20 
    /*00023fa8*/ LDR         R3, [R0, #112]              @ 0x70 
    /*00023fac*/ MOV         R0, R6 
    /*00023fb0*/ BLX         R3 
    /*00023fb4*/ SUBS        R7, R0, #0 
    /*00023fb8*/ BNE         VencChangeGopMode_x24068
    /*00023fbc*/ LDR         R3, [R5, #1004]             @ 0x3ec 
    /*00023fc0*/ CMP         R3, #0 
    /*00023fc4*/ BNE         VencChangeGopMode_x24034
    /*00023fc8*/ LDR         R3, [SP, #32] 
    /*00023fcc*/ CMP         R3, #6 
    /*00023fd0*/ BEQ         VencChangeGopMode_x23e4c
    VencChangeGopMode_x23fd4:
    /*00023fd4*/ MOV         R0, #19 
    /*00023fd8*/ BL          0x0000000000023FD8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00023fdc*/ ADD         R1, SP, #88                 @ 0x58 
    /*00023fe0*/ LDR         R3, [R0, #52]               @ 0x34 
    /*00023fe4*/ MOV         R0, R6 
    /*00023fe8*/ BLX         R3 
    /*00023fec*/ ADD         R1, SP, #88                 @ 0x58 
    /*00023ff0*/ MOV         R2, #272                    @ 0x110 
    /*00023ff4*/ MOV         R7, R0 
    /*00023ff8*/ ADD         R0, R4, #12992              @ 0x32c0 
    /*00023ffc*/ ADD         R0, R0, #28 
    /*00024000*/ BL          0x0000000000024000          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00024004*/ B           VencChangeGopMode_x23e4c
    VencChangeGopMode_x24008:
    /*00024008*/ MOV         R0, #19 
    /*0002400c*/ BL          0x000000000002400C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024010*/ ADD         R1, R4, #12992              @ 0x32c0 
    /*00024014*/ ADD         R1, R1, #28 
    /*00024018*/ LDR         R3, [R0, #44]               @ 0x2c 
    /*0002401c*/ MOV         R0, R6 
    /*00024020*/ BLX         R3 
    /*00024024*/ MOV         R3, #0 
    /*00024028*/ STR         R3, [R5, #1004]             @ 0x3ec 
    /*0002402c*/ MOV         R7, R0 
    /*00024030*/ B           VencChangeGopMode_x23e4c
    VencChangeGopMode_x24034:
    /*00024034*/ MOV         R0, #19 
    /*00024038*/ BL          0x0000000000024038          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002403c*/ ADD         R1, R4, #12992              @ 0x32c0 
    /*00024040*/ ADD         R1, R1, #28 
    /*00024044*/ LDR         R3, [R0, #44]               @ 0x2c 
    /*00024048*/ MOV         R0, R6 
    /*0002404c*/ BLX         R3 
    /*00024050*/ STR         R8, [R5, #1004]             @ 0x3ec 
    /*00024054*/ MOV         R7, R0 
    /*00024058*/ B           VencChangeGopMode_x23e4c
    VencChangeGopMode_x2405c:
    /*0002405c*/ MOV         R0, R6 
    /*00024060*/ BL          0x0000000000024060          @ VencDisableDeBreathEffect [R_ARM_CALL: .text+0x23b7c] 
    /*00024064*/ B           VencChangeGopMode_x23c60
    VencChangeGopMode_x24068:
    /*00024068*/ MOVW        R3, #4505                   @ 0x1199 
    /*0002406c*/ STR         R6, [SP, #4] 
    VencChangeGopMode_x24070:
    /*00024070*/ MOVW        R2, #0                      @ .LC150 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa184] 
    /*00024074*/ STR         R3, [SP] 
    /*00024078*/ MOVT        R2, #0                      @ .LC150 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa184] 
    /*0002407c*/ LDR         R3, [PC, #144]              @ 0x0000000000024114 
    /*00024080*/ MOV         R1, #8 
    /*00024084*/ MOV         R0, #3 
    /*00024088*/ BL          0x0000000000024088          @ HI_LOG [R_ARM_CALL: +0x0] 
    VencChangeGopMode_x2408c:
    /*0002408c*/ MVN         R7, #0 
    /*00024090*/ MOV         R0, R7 
    /*00024094*/ ADD         SP, SP, #360                @ 0x168 
    /*00024098*/ POP         {R4, R5, R6, R7, R8, PC} 
    VencChangeGopMode_x2409c:
    /*0002409c*/ MOVW        R3, #4429                   @ 0x114d 
    /*000240a0*/ STR         R6, [SP, #4] 
    VencChangeGopMode_x240a4:
    /*000240a4*/ STR         R3, [SP] 
    /*000240a8*/ MOVW        R2, #0                      @ .LC149 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa12c] 
    /*000240ac*/ LDR         R3, [PC, #96]               @ 0x0000000000024114 
    /*000240b0*/ MOVT        R2, #0                      @ .LC149 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa12c] 
    /*000240b4*/ MOV         R1, #8 
    /*000240b8*/ MOV         R0, #3 
    /*000240bc*/ BL          0x00000000000240BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000240c0*/ B           VencChangeGopMode_x2408c
    VencChangeGopMode_x240c4:
    /*000240c4*/ MOVW        R3, #4458                   @ 0x116a 
    /*000240c8*/ STR         R6, [SP, #4] 
    VencChangeGopMode_x240cc:
    /*000240cc*/ STR         R3, [SP] 
    /*000240d0*/ MOVW        R2, #0                      @ .LC147 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa0a0] 
    /*000240d4*/ LDR         R3, [PC, #56]               @ 0x0000000000024114 
    /*000240d8*/ MOVT        R2, #0                      @ .LC147 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa0a0] 
    /*000240dc*/ MOV         R1, #8 
    /*000240e0*/ MOV         R0, #3 
    /*000240e4*/ BL          0x00000000000240E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000240e8*/ B           VencChangeGopMode_x2408c
    VencChangeGopMode_x240ec:
    /*000240ec*/ MOVW        R3, #4393                   @ 0x1129 
    /*000240f0*/ STR         R6, [SP, #4] 
    /*000240f4*/ STR         R3, [SP] 
    /*000240f8*/ MOVW        R2, #0                      @ .LC148 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa0d8] 
    /*000240fc*/ LDR         R3, [PC, #16]               @ 0x0000000000024114 
    /*00024100*/ MOVT        R2, #0                      @ .LC148 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa0d8] 
    /*00024104*/ MOV         R1, #8 
    /*00024108*/ MOV         R0, #3 
    /*0002410c*/ BL          0x000000000002410C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00024110*/ B           VencChangeGopMode_x2408c
    /*00024114*/ MULEQ       R0, R8, R1 
FUNC_END VencChangeGopMode


FUNC_BEGIN VencGetVeduState
    /*00024118*/ MOVW        IP, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0002411c*/ MOVT        IP, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00024120*/ PUSH        {R4, R5, R6, LR} 
    /*00024124*/ MOV         R4, R0 
    /*00024128*/ LDR         R0, [IP] 
    /*0002412c*/ MOVW        R3, #36240                  @ 0x8d90 
    /*00024130*/ MOV         R5, R1 
    /*00024134*/ MOV         R6, R2 
    /*00024138*/ MLA         R3, R3, R4, R0 
    /*0002413c*/ LDR         R3, [R3, #4] 
    /*00024140*/ CMP         R3, #96                     @ 0x60 
    /*00024144*/ BEQ         VencGetVeduState_x24168
    /*00024148*/ MOV         R0, #13 
    /*0002414c*/ BL          0x000000000002414C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024150*/ MOV         R2, R6 
    /*00024154*/ MOV         R1, R5 
    /*00024158*/ LDR         R3, [R0, #244]              @ 0xf4 
    /*0002415c*/ MOV         R0, R4 
    /*00024160*/ POP         {R4, R5, R6, LR} 
    /*00024164*/ BX          R3 
    VencGetVeduState_x24168:
    /*00024168*/ MOV         R0, #10 
    /*0002416c*/ BL          0x000000000002416C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024170*/ MOV         R2, R6 
    /*00024174*/ MOV         R1, R5 
    /*00024178*/ LDR         R3, [R0, #224]              @ 0xe0 
    /*0002417c*/ MOV         R0, R4 
    /*00024180*/ POP         {R4, R5, R6, LR} 
    /*00024184*/ BX          R3 
FUNC_END VencGetVeduState


FUNC_BEGIN VENC_StartOneFrameH264
    /*00024188*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0002418c*/ SUB         SP, SP, #124                @ 0x7c 
    /*00024190*/ MOV         R6, #1 
    /*00024194*/ STR         R6, [R1] 
    /*00024198*/ MOV         R3, #0 
    /*0002419c*/ STR         R1, [SP, #24] 
    /*000241a0*/ MOV         R5, R0 
    /*000241a4*/ STR         R3, [SP, #56]               @ 0x38 
    /*000241a8*/ BL          0x00000000000241A8          @ MkpVencCheckChn [R_ARM_CALL: .text+0x7ac] 
    /*000241ac*/ SUBS        R4, R0, #0 
    /*000241b0*/ BNE         VENC_StartOneFrameH264_x244a0
    /*000241b4*/ MOVW        R2, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000241b8*/ MOVT        R2, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000241bc*/ MOVW        R3, #36240                  @ 0x8d90 
    /*000241c0*/ LDR         LR, [R2] 
    /*000241c4*/ MLA         FP, R3, R5, LR 
    /*000241c8*/ ADD         R7, FP, #32768              @ 0x8000 
    /*000241cc*/ LDR         R1, [R7, #3300]             @ 0xce4 
    /*000241d0*/ CMP         R1, #0 
    /*000241d4*/ BNE         VENC_StartOneFrameH264_x244ac
    /*000241d8*/ MOVW        R2, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*000241dc*/ MOVT        R2, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*000241e0*/ LDR         R4, [R2] 
    /*000241e4*/ LDRB        R9, [R4, #40]               @ 0x28 
    /*000241e8*/ SUB         R2, R9, #1 
    /*000241ec*/ CMP         R2, #1 
    /*000241f0*/ BLS         VENC_StartOneFrameH264_x24658
    /*000241f4*/ SUB         R2, R9, #5 
    /*000241f8*/ MOVW        IP, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xc0] 
    /*000241fc*/ CMP         R2, #1 
    /*00024200*/ BLS         VENC_StartOneFrameH264_x244d8
    /*00024204*/ CMP         R9, #12 
    /*00024208*/ BEQ         VENC_StartOneFrameH264_x24a48
    /*0002420c*/ CMP         R9, #9 
    /*00024210*/ BEQ         VENC_StartOneFrameH264_x2492c
    /*00024214*/ ADDS        R0, R9, #0 
    /*00024218*/ MOVT        IP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xc0] 
    /*0002421c*/ MOV         R6, R1 
    /*00024220*/ MOVNE       R0, #1 
    /*00024224*/ B           VENC_StartOneFrameH264_x24530
    VENC_StartOneFrameH264_x24228:
    /*00024228*/ LDR         R3, [IP, #4] 
    /*0002422c*/ CMP         R3, #0 
    /*00024230*/ BEQ         VENC_StartOneFrameH264_x24280
    /*00024234*/ MOVW        R0, #12880                  @ 0x3250 
    /*00024238*/ MOVW        R4, #36240                  @ 0x8d90 
    /*0002423c*/ MLA         R3, R4, R3, R0 
    /*00024240*/ ADD         R0, LR, R0 
    /*00024244*/ ADD         LR, LR, R3 
    VENC_StartOneFrameH264_x24248:
    /*00024248*/ LDR         R3, [R0, #12] 
    /*0002424c*/ LDR         R2, [R0], R4 
    /*00024250*/ CMP         R0, LR 
    /*00024254*/ ADD         R3, R3, R2 
    /*00024258*/ ADD         R1, R1, R3 
    /*0002425c*/ BNE         VENC_StartOneFrameH264_x24248
    /*00024260*/ MOVW        R3, #51199                  @ 0xc7ff 
    /*00024264*/ MOVT        R3, #1525                   @ 0x5f5 
    /*00024268*/ CMP         R1, R3 
    /*0002426c*/ MOVLS       R1, #0 
    /*00024270*/ MOVHI       R1, #1 
    VENC_StartOneFrameH264_x24274:
    /*00024274*/ CMP         R1, #0 
    /*00024278*/ MOVNE       R3, #0 
    /*0002427c*/ STRNE       R3, [IP, #8] 
    VENC_StartOneFrameH264_x24280:
    /*00024280*/ MOV         R3, #0 
    /*00024284*/ STR         R3, [FP, #68]               @ 0x44 
    /*00024288*/ STR         R3, [FP, #72]               @ 0x48 
    /*0002428c*/ ADD         R0, FP, #64                 @ 0x40 
    /*00024290*/ STR         R3, [FP, #76]               @ 0x4c 
    /*00024294*/ ADD         R1, SP, #52                 @ 0x34 
    /*00024298*/ LDR         R3, [R9, #36]               @ 0x24 
    /*0002429c*/ STR         R0, [SP, #28] 
    /*000242a0*/ ADD         R3, R3, #1 
    /*000242a4*/ STR         R3, [R9, #36]               @ 0x24 
    /*000242a8*/ BL          0x00000000000242A8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000242ac*/ LDR         R3, [R9, #612]              @ 0x264 
    /*000242b0*/ CMP         R3, #1 
    /*000242b4*/ BEQ         VENC_StartOneFrameH264_x24a28
    /*000242b8*/ LDR         R3, [R7, #3328]             @ 0xd00 
    /*000242bc*/ CMP         R3, #1 
    /*000242c0*/ BEQ         VENC_StartOneFrameH264_x24aa4
    VENC_StartOneFrameH264_x242c4:
    /*000242c4*/ MOVW        R3, #0                      @ g_u64PhyAddr [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*000242c8*/ MOVT        R3, #0                      @ g_u64PhyAddr [R_ARM_MOVT_ABS: .bss+0x8] 
    /*000242cc*/ MOVW        R8, #0                      @ g_s32PixelFmt [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*000242d0*/ ADD         R4, R3, R5, LSL #3 
    /*000242d4*/ MOVT        R8, #0                      @ g_s32PixelFmt [R_ARM_MOVT_ABS: .data+0x0] 
    /*000242d8*/ MOV         R6, #0 
    VENC_StartOneFrameH264_x242dc:
    /*000242dc*/ LDR         R3, [FP, #3724]             @ 0xe8c 
    /*000242e0*/ CMP         R3, #0 
    /*000242e4*/ BLE         VENC_StartOneFrameH264_x248a4
    /*000242e8*/ LDR         R3, [FP, #3720]             @ 0xe88 
    /*000242ec*/ LDR         R1, [R7, #3336]             @ 0xd08 
    /*000242f0*/ SUBS        R3, R3, #1 
    /*000242f4*/ LDRMI       R2, [FP, #3712]             @ 0xe80 
    /*000242f8*/ ADDMI       R3, R3, R2 
    /*000242fc*/ LDR         R2, [FP, #3708]             @ 0xe7c 
    /*00024300*/ CMP         R1, #2 
    /*00024304*/ LDR         SL, [R2, R3, LSL #2] 
    /*00024308*/ BEQ         VENC_StartOneFrameH264_x24324
    /*0002430c*/ LDR         R3, [SL, #380]              @ 0x17c 
    /*00024310*/ STR         R6, [R3, #24] 
    /*00024314*/ LDR         R3, [SL, #380]              @ 0x17c 
    /*00024318*/ STR         R6, [SL, #336]              @ 0x150 
    /*0002431c*/ STR         R6, [SL, #340]              @ 0x154 
    /*00024320*/ STR         R6, [R3, #12] 
    VENC_StartOneFrameH264_x24324:
    /*00024324*/ MVN         R3, #0 
    /*00024328*/ STR         SL, [FP, #80]               @ 0x50 
    /*0002432c*/ STR         R3, [FP, #96]               @ 0x60 
    /*00024330*/ LDR         R0, [SL, #12] 
    /*00024334*/ BL          0x0000000000024334          @ VencProcGetPixelFormat [R_ARM_CALL: .text+0x10cc] 
    /*00024338*/ LDRD        R2, [SL, #120]              @ 0x78 
    /*0002433c*/ LDR         R1, [R7, #3292]             @ 0xcdc 
    /*00024340*/ STRD        R2, [R4] 
    /*00024344*/ LDR         R3, [FP, #80]               @ 0x50 
    /*00024348*/ STR         R3, [SP, #72]               @ 0x48 
    /*0002434c*/ STR         R0, [R8, R5, LSL #2] 
    /*00024350*/ LDR         R3, [SL, #28] 
    /*00024354*/ CMP         R3, R1 
    /*00024358*/ BEQ         VENC_StartOneFrameH264_x24890
    VENC_StartOneFrameH264_x2435c:
    /*0002435c*/ CMP         R1, #4 
    /*00024360*/ BEQ         VENC_StartOneFrameH264_x24380
    /*00024364*/ MOV         R0, #19 
    /*00024368*/ BL          0x0000000000024368          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002436c*/ MOV         R1, #1 
    /*00024370*/ LDR         R3, [R0, #56]               @ 0x38 
    /*00024374*/ MOV         R0, R5 
    /*00024378*/ BLX         R3 
    /*0002437c*/ LDR         R3, [SL, #28] 
    VENC_StartOneFrameH264_x24380:
    /*00024380*/ STR         R3, [R7, #3292]             @ 0xcdc 
    /*00024384*/ LDR         R3, [SL, #24] 
    /*00024388*/ STR         R3, [R7, #3288]             @ 0xcd8 
    VENC_StartOneFrameH264_x2438c:
    /*0002438c*/ LDR         R2, [SL, #376]              @ 0x178 
    /*00024390*/ MOV         R0, #19 
    /*00024394*/ LDR         R3, [FP, #84]               @ 0x54 
    /*00024398*/ STR         R2, [SP, #116]              @ 0x74 
    /*0002439c*/ STR         R3, [SP, #76]               @ 0x4c 
    /*000243a0*/ BL          0x00000000000243A0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000243a4*/ ADD         R2, SP, #60                 @ 0x3c 
    /*000243a8*/ ADD         R1, SP, #72                 @ 0x48 
    /*000243ac*/ LDR         R3, [R0, #12] 
    /*000243b0*/ MOV         R0, R5 
    /*000243b4*/ BLX         R3 
    /*000243b8*/ LDR         R2, [SP, #60]               @ 0x3c 
    /*000243bc*/ LDR         R3, [R7, #3336]             @ 0xd08 
    /*000243c0*/ CMP         R2, #2 
    /*000243c4*/ BEQ         VENC_StartOneFrameH264_x247c8
    /*000243c8*/ CMP         R3, #2 
    /*000243cc*/ BNE         VENC_StartOneFrameH264_x246f8
    VENC_StartOneFrameH264_x243d0:
    /*000243d0*/ MOV         R4, R2 
    /*000243d4*/ LDR         R3, [SP, #64]               @ 0x40 
    /*000243d8*/ CMP         R2, #5 
    /*000243dc*/ CMPNE       R2, #0 
    /*000243e0*/ LDR         R2, [SP, #68]               @ 0x44 
    /*000243e4*/ STR         R4, [FP, #84]               @ 0x54 
    /*000243e8*/ STR         R3, [FP, #88]               @ 0x58 
    /*000243ec*/ MOV         R3, #0 
    /*000243f0*/ STR         R2, [FP, #96]               @ 0x60 
    /*000243f4*/ STR         R3, [FP, #100]              @ 0x64 
    /*000243f8*/ BEQ         VENC_StartOneFrameH264_x249f4
    /*000243fc*/ LDR         R0, [R7, #3296]             @ 0xce0 
    VENC_StartOneFrameH264_x24400:
    /*00024400*/ LDR         R3, [FP, #4] 
    /*00024404*/ STR         R0, [FP, #112]              @ 0x70 
    /*00024408*/ CMP         R3, #96                     @ 0x60 
    /*0002440c*/ BEQ         VENC_StartOneFrameH264_x24b60
    /*00024410*/ MOVW        R2, #265                    @ 0x109 
    /*00024414*/ CMP         R3, R2 
    /*00024418*/ BEQ         VENC_StartOneFrameH264_x24438
    /*0002441c*/ MOVW        R3, #0                      @ .LC145 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa034] 
    /*00024420*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*00024424*/ MOVT        R3, #0                      @ .LC145 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa034] 
    /*00024428*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0002442c*/ MOVW        R2, #4942                   @ 0x134e 
    /*00024430*/ LDR         R1, [PC, #1912]             @ 0x0000000000024bb0 
    /*00024434*/ BL          0x0000000000024434          @ osal_panic [R_ARM_CALL: +0x0] 
    VENC_StartOneFrameH264_x24438:
    /*00024438*/ MOV         R0, #13 
    /*0002443c*/ BL          0x000000000002443C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024440*/ ADD         R1, FP, #68                 @ 0x44 
    /*00024444*/ LDR         R3, [R0, #44]               @ 0x2c 
    /*00024448*/ MOV         R0, R5 
    /*0002444c*/ BLX         R3 
    /*00024450*/ MOV         R4, R0 
    VENC_StartOneFrameH264_x24454:
    /*00024454*/ CMP         R4, #0 
    /*00024458*/ BNE         VENC_StartOneFrameH264_x24b20
    /*0002445c*/ LDR         R3, [SP, #60]               @ 0x3c 
    /*00024460*/ CMP         R3, #9 
    /*00024464*/ LDRNE       R3, [R9, #40]               @ 0x28 
    /*00024468*/ ADDNE       R3, R3, #1 
    /*0002446c*/ STRNE       R3, [R9, #40]               @ 0x28 
    VENC_StartOneFrameH264_x24470:
    /*00024470*/ LDR         R3, [R7, #3300]             @ 0xce4 
    /*00024474*/ ADD         R1, SP, #52                 @ 0x34 
    /*00024478*/ LDR         R2, [R7, #3296]             @ 0xce0 
    /*0002447c*/ ADD         R3, R3, #1 
    /*00024480*/ STR         R3, [R7, #3300]             @ 0xce4 
    /*00024484*/ SUB         R3, R2, R3 
    /*00024488*/ LDR         R2, [SP, #24] 
    /*0002448c*/ CLZ         R3, R3 
    /*00024490*/ LDR         R0, [SP, #28] 
    /*00024494*/ LSR         R3, R3, #5 
    /*00024498*/ STR         R3, [R2] 
    /*0002449c*/ BL          0x000000000002449C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VENC_StartOneFrameH264_x244a0:
    /*000244a0*/ MOV         R0, R4 
    /*000244a4*/ ADD         SP, SP, #124                @ 0x7c 
    /*000244a8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_StartOneFrameH264_x244ac:
    /*000244ac*/ LDR         R3, [R7, #3296]             @ 0xce0 
    /*000244b0*/ ADD         R1, R1, R6 
    /*000244b4*/ STR         R1, [R7, #3300]             @ 0xce4 
    /*000244b8*/ MOV         R0, R4 
    /*000244bc*/ SUB         R1, R3, R1 
    /*000244c0*/ LDR         R3, [SP, #24] 
    /*000244c4*/ CLZ         R1, R1 
    /*000244c8*/ LSR         R1, R1, #5 
    /*000244cc*/ STR         R1, [R3] 
    /*000244d0*/ ADD         SP, SP, #124                @ 0x7c 
    /*000244d4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_StartOneFrameH264_x244d8:
    /*000244d8*/ MOVT        IP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xc0] 
    /*000244dc*/ LDR         R0, [IP, #4] 
    /*000244e0*/ CMP         R0, #0 
    /*000244e4*/ BEQ         VENC_StartOneFrameH264_x245b8
    /*000244e8*/ MOVW        R2, #12880                  @ 0x3250 
    /*000244ec*/ ADD         R6, LR, R2 
    /*000244f0*/ MLA         R2, R3, R0, R2 
    /*000244f4*/ MOV         R8, R3 
    /*000244f8*/ MOV         R0, R1 
    /*000244fc*/ ADD         SL, LR, R2 
    VENC_StartOneFrameH264_x24500:
    /*00024500*/ LDR         R3, [R6, #12] 
    /*00024504*/ LDR         R2, [R6], R8 
    /*00024508*/ CMP         SL, R6 
    /*0002450c*/ ADD         R3, R3, R2 
    /*00024510*/ ADD         R0, R0, R3 
    /*00024514*/ BNE         VENC_StartOneFrameH264_x24500
    /*00024518*/ MOVW        R3, #36863                  @ 0x8fff 
    /*0002451c*/ MOVT        R3, #2466                   @ 0x9a2 
    /*00024520*/ CMP         R0, R3 
    /*00024524*/ MOV         R6, #0 
    /*00024528*/ MOVLS       R0, #0 
    /*0002452c*/ MOVHI       R0, #1 
    VENC_StartOneFrameH264_x24530:
    /*00024530*/ CMP         R0, #0 
    /*00024534*/ BEQ         VENC_StartOneFrameH264_x245bc
    /*00024538*/ LDR         R3, [IP, #8] 
    /*0002453c*/ CMP         R3, #1 
    /*00024540*/ BNE         VENC_StartOneFrameH264_x24ac4
    /*00024544*/ CMP         R6, #0 
    /*00024548*/ BEQ         VENC_StartOneFrameH264_x245cc
    VENC_StartOneFrameH264_x2454c:
    /*0002454c*/ ADD         R9, FP, #12288              @ 0x3000 
    /*00024550*/ MOVW        R3, #56319                  @ 0xdbff 
    /*00024554*/ MOVT        R3, #980                    @ 0x3d4 
    /*00024558*/ LDR         R2, [R9, #604]              @ 0x25c 
    /*0002455c*/ CMP         R2, R3 
    /*00024560*/ BHI         VENC_StartOneFrameH264_x24638
    VENC_StartOneFrameH264_x24564:
    /*00024564*/ LDR         R3, [R9, #148]              @ 0x94 
    /*00024568*/ LDR         R2, [R9, #152]              @ 0x98 
    /*0002456c*/ MUL         R3, R2, R3 
    VENC_StartOneFrameH264_x24570:
    /*00024570*/ STR         R3, [R9, #592]              @ 0x250 
    /*00024574*/ LDRB        R2, [R4, #40]               @ 0x28 
    /*00024578*/ ADD         R3, IP, R5, LSL #2 
    /*0002457c*/ MOV         R4, #1 
    /*00024580*/ SUB         R0, R2, #1 
    /*00024584*/ STR         R4, [R3, #24] 
    /*00024588*/ CMP         R0, R4 
    /*0002458c*/ BLS         VENC_StartOneFrameH264_x24228
    /*00024590*/ SUB         R3, R2, #5 
    /*00024594*/ CMP         R3, #1 
    /*00024598*/ BLS         VENC_StartOneFrameH264_x248dc
    /*0002459c*/ CMP         R2, #12 
    /*000245a0*/ BEQ         VENC_StartOneFrameH264_x24ad0
    /*000245a4*/ CMP         R2, #9 
    /*000245a8*/ BEQ         VENC_StartOneFrameH264_x249a4
    /*000245ac*/ ADDS        R1, R2, #0 
    /*000245b0*/ MOVNE       R1, #1 
    /*000245b4*/ B           VENC_StartOneFrameH264_x24274
    VENC_StartOneFrameH264_x245b8:
    /*000245b8*/ MOV         R6, R1 
    VENC_StartOneFrameH264_x245bc:
    /*000245bc*/ CMP         R6, #0 
    /*000245c0*/ MOV         R3, #1 
    /*000245c4*/ STR         R3, [IP, #8] 
    /*000245c8*/ BNE         VENC_StartOneFrameH264_x2454c
    VENC_StartOneFrameH264_x245cc:
    /*000245cc*/ SUB         R3, R9, #5 
    /*000245d0*/ CMP         R3, #1 
    /*000245d4*/ BLS         VENC_StartOneFrameH264_x246b8
    /*000245d8*/ CMP         R9, #12 
    /*000245dc*/ BEQ         VENC_StartOneFrameH264_x24604
    /*000245e0*/ CMP         R9, #9 
    /*000245e4*/ BEQ         VENC_StartOneFrameH264_x24988
    /*000245e8*/ CMP         R9, #0 
    /*000245ec*/ BNE         VENC_StartOneFrameH264_x24638
    /*000245f0*/ ADD         R9, FP, #12288              @ 0x3000 
    /*000245f4*/ LDR         R3, [R9, #148]              @ 0x94 
    /*000245f8*/ LDR         R2, [R9, #152]              @ 0x98 
    /*000245fc*/ MUL         R3, R2, R3 
    /*00024600*/ B           VENC_StartOneFrameH264_x24570
    VENC_StartOneFrameH264_x24604:
    /*00024604*/ ADD         R9, FP, #12288              @ 0x3000 
    /*00024608*/ MOV         R2, #40960                  @ 0xa000 
    /*0002460c*/ MOVT        R2, #65                     @ 0x41 
    /*00024610*/ LDR         R3, [R9, #148]              @ 0x94 
    /*00024614*/ LDR         R0, [R9, #152]              @ 0x98 
    /*00024618*/ MUL         R3, R0, R3 
    /*0002461c*/ CMP         R3, R2 
    /*00024620*/ BHI         VENC_StartOneFrameH264_x246e8
    /*00024624*/ LDR         R0, [R9, #604]              @ 0x25c 
    /*00024628*/ MOVW        R2, #24575                  @ 0x5fff 
    /*0002462c*/ MOVT        R2, #2034                   @ 0x7f2 
    /*00024630*/ CMP         R0, R2 
    /*00024634*/ BLS         VENC_StartOneFrameH264_x24570
    VENC_StartOneFrameH264_x24638:
    /*00024638*/ ADD         IP, IP, R5, LSL #2 
    /*0002463c*/ MOVW        R4, #32786                  @ 0x8012 
    /*00024640*/ MOVT        R4, #40968                  @ 0xa008 
    /*00024644*/ MOV         R3, #0 
    /*00024648*/ STR         R3, [IP, #24] 
    /*0002464c*/ MOV         R0, R4 
    /*00024650*/ ADD         SP, SP, #124                @ 0x7c 
    /*00024654*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_StartOneFrameH264_x24658:
    /*00024658*/ MOVW        IP, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xc0] 
    /*0002465c*/ MOVT        IP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xc0] 
    /*00024660*/ LDR         R0, [IP, #4] 
    /*00024664*/ CMP         R0, #0 
    /*00024668*/ BEQ         VENC_StartOneFrameH264_x245bc
    /*0002466c*/ MOVW        R2, #12880                  @ 0x3250 
    /*00024670*/ ADD         R6, LR, R2 
    /*00024674*/ MLA         R2, R3, R0, R2 
    /*00024678*/ MOV         R8, R3 
    /*0002467c*/ MOV         R0, R1 
    /*00024680*/ ADD         SL, LR, R2 
    VENC_StartOneFrameH264_x24684:
    /*00024684*/ LDR         R3, [R6, #12] 
    /*00024688*/ LDR         R2, [R6], R8 
    /*0002468c*/ CMP         SL, R6 
    /*00024690*/ ADD         R3, R3, R2 
    /*00024694*/ ADD         R0, R0, R3 
    /*00024698*/ BNE         VENC_StartOneFrameH264_x24684
    /*0002469c*/ MOVW        R3, #51199                  @ 0xc7ff 
    /*000246a0*/ MOVT        R3, #1525                   @ 0x5f5 
    /*000246a4*/ CMP         R0, R3 
    /*000246a8*/ MOV         R6, #1 
    /*000246ac*/ MOVLS       R0, #0 
    /*000246b0*/ MOVHI       R0, #1 
    /*000246b4*/ B           VENC_StartOneFrameH264_x24530
    VENC_StartOneFrameH264_x246b8:
    /*000246b8*/ ADD         R9, FP, #12288              @ 0x3000 
    /*000246bc*/ LDR         R3, [R9, #148]              @ 0x94 
    /*000246c0*/ LDR         R2, [R9, #152]              @ 0x98 
    /*000246c4*/ MUL         R3, R2, R3 
    /*000246c8*/ CMP         R3, #4128768                @ 0x3f0000 
    /*000246cc*/ BHI         VENC_StartOneFrameH264_x246e8
    /*000246d0*/ LDR         R0, [R9, #604]              @ 0x25c 
    /*000246d4*/ MOVW        R2, #65535                  @ 0xffff 
    /*000246d8*/ MOVT        R2, #1952                   @ 0x7a0 
    /*000246dc*/ CMP         R0, R2 
    /*000246e0*/ BHI         VENC_StartOneFrameH264_x24638
    /*000246e4*/ B           VENC_StartOneFrameH264_x24570
    VENC_StartOneFrameH264_x246e8:
    /*000246e8*/ LDR         R2, [R9, #588]              @ 0x24c 
    /*000246ec*/ CMP         R2, #20 
    /*000246f0*/ BLS         VENC_StartOneFrameH264_x24570
    /*000246f4*/ B           VENC_StartOneFrameH264_x24638
    VENC_StartOneFrameH264_x246f8:
    /*000246f8*/ ADD         R3, FP, #68                 @ 0x44 
    /*000246fc*/ MOV         R0, R5 
    /*00024700*/ STR         R2, [SP, #16] 
    /*00024704*/ MOV         R1, R3 
    /*00024708*/ STR         R3, [SP, #8] 
    /*0002470c*/ BL          0x000000000002470C          @ VencGetOsd [R_ARM_CALL: .text+0x1648] 
    /*00024710*/ LDR         R2, [SP, #16] 
    /*00024714*/ LDR         R3, [SP, #8] 
    /*00024718*/ MOV         R0, R5 
    /*0002471c*/ CMP         R2, #5 
    /*00024720*/ CMPNE       R2, #0 
    /*00024724*/ MOV         R1, R3 
    /*00024728*/ MOVEQ       R2, #1 
    /*0002472c*/ MOVNE       R2, #0 
    /*00024730*/ LDR         R3, [SP, #60]               @ 0x3c 
    /*00024734*/ BL          0x0000000000024734          @ VencGetRoi [R_ARM_CALL: .text+0x1b30] 
    /*00024738*/ MOV         R0, R5 
    /*0002473c*/ BL          0x000000000002473C          @ VencCheckOsd [R_ARM_CALL: .text+0x23840] 
    /*00024740*/ LDR         R3, [R7, #3336]             @ 0xd08 
    /*00024744*/ CMP         R3, #2 
    /*00024748*/ BEQ         VENC_StartOneFrameH264_x24758
    /*0002474c*/ LDR         R3, [R9, #1108]             @ 0x454 
    /*00024750*/ CMP         R3, #1 
    /*00024754*/ BEQ         VENC_StartOneFrameH264_x247dc
    VENC_StartOneFrameH264_x24758:
    /*00024758*/ LDR         R2, [SP, #60]               @ 0x3c 
    VENC_StartOneFrameH264_x2475c:
    /*0002475c*/ CMP         R2, #2 
    /*00024760*/ BNE         VENC_StartOneFrameH264_x243d0
    VENC_StartOneFrameH264_x24764:
    /*00024764*/ LDR         R3, [R9, #56]               @ 0x38 
    /*00024768*/ MOV         R1, #0 
    /*0002476c*/ MOV         R0, R5 
    /*00024770*/ ADD         R3, R3, #1 
    /*00024774*/ STR         R3, [R9, #56]               @ 0x38 
    /*00024778*/ BL          0x0000000000024778          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*0002477c*/ ADD         R0, SL, #336                @ 0x150 
    /*00024780*/ BL          0x0000000000024780          @ VencPutFrmAddInfo [R_ARM_CALL: .text+0x1320] 
    /*00024784*/ ADD         R0, FP, #12352              @ 0x3040 
    /*00024788*/ ADD         R0, R0, #56                 @ 0x38 
    /*0002478c*/ BL          0x000000000002478C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00024790*/ LDR         R3, [R9, #1108]             @ 0x454 
    /*00024794*/ CMP         R3, #1 
    /*00024798*/ BNE         VENC_StartOneFrameH264_x242dc
    /*0002479c*/ ADD         R1, SP, #52                 @ 0x34 
    /*000247a0*/ LDR         R0, [SP, #28] 
    /*000247a4*/ BL          0x00000000000247A4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000247a8*/ MVN         R4, #0 
    VENC_StartOneFrameH264_x247ac:
    /*000247ac*/ LDR         R3, [R9, #592]              @ 0x250 
    /*000247b0*/ MOV         R0, R4 
    /*000247b4*/ CMP         R3, #0 
    /*000247b8*/ MOVNE       R3, #0 
    /*000247bc*/ STRNE       R3, [R9, #592]              @ 0x250 
    /*000247c0*/ ADD         SP, SP, #124                @ 0x7c 
    /*000247c4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_StartOneFrameH264_x247c8:
    /*000247c8*/ CMP         R3, #2 
    /*000247cc*/ BEQ         VENC_StartOneFrameH264_x24764
    /*000247d0*/ LDR         R3, [R9, #1108]             @ 0x454 
    /*000247d4*/ CMP         R3, #1 
    /*000247d8*/ BNE         VENC_StartOneFrameH264_x24758
    VENC_StartOneFrameH264_x247dc:
    /*000247dc*/ MOV         R0, #2 
    /*000247e0*/ BL          0x00000000000247E0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000247e4*/ LDR         R3, [R0, #88]               @ 0x58 
    /*000247e8*/ BLX         R3 
    /*000247ec*/ MOVW        IP, #13408                  @ 0x3460 
    /*000247f0*/ ADD         R3, FP, IP 
    /*000247f4*/ STRD        R0, [SP, #8] 
    /*000247f8*/ LDRD        R0, [R3, #-8] 
    /*000247fc*/ ADD         R3, PC, #932                @ 0x3a4 
    /*00024800*/ LDRD        R2, [R3] 
    /*00024804*/ CMP         R1, R3 
    /*00024808*/ STRD        R0, [SP, #32] 
    /*0002480c*/ CMPEQ       R0, R2 
    /*00024810*/ STRD        R0, [SP, #16] 
    /*00024814*/ STRDCC      R2, [SP, #16] 
    /*00024818*/ LDRD        R2, [SP, #16] 
    /*0002481c*/ LDRD        R0, [SP, #8] 
    /*00024820*/ LDR         LR, [R9, #1132]             @ 0x46c 
    /*00024824*/ ADDS        R0, R0, R2 
    /*00024828*/ ADC         R1, R1, R3 
    /*0002482c*/ STRD        R0, [SP, #40]               @ 0x28 
    /*00024830*/ ADD         R0, LR, #1 
    /*00024834*/ STR         R0, [R9, #1132]             @ 0x46c 
    /*00024838*/ LDRD        R0, [FP, IP] 
    /*0002483c*/ LDRD        R2, [SP, #32] 
    /*00024840*/ ADDS        R2, R2, R0 
    /*00024844*/ ADC         R3, R3, R1 
    /*00024848*/ LDRD        R0, [SP, #40]               @ 0x28 
    /*0002484c*/ STRD        R2, [FP, IP] 
    /*00024850*/ CMP         R3, R1 
    /*00024854*/ CMPEQ       R2, R0 
    /*00024858*/ BHI         VENC_StartOneFrameH264_x24880
    /*0002485c*/ LDRD        R0, [SP, #16] 
    /*00024860*/ ADDS        R0, R0, R2 
    /*00024864*/ ADC         R1, R1, R3 
    /*00024868*/ MOV         R2, R0 
    /*0002486c*/ MOV         R3, R1 
    /*00024870*/ LDRD        R0, [SP, #8] 
    /*00024874*/ CMP         R1, R3 
    /*00024878*/ CMPEQ       R0, R2 
    /*0002487c*/ BLS         VENC_StartOneFrameH264_x24758
    VENC_StartOneFrameH264_x24880:
    /*00024880*/ LDRD        R0, [SP, #8] 
    /*00024884*/ LDR         R2, [SP, #60]               @ 0x3c 
    /*00024888*/ STRD        R0, [FP, IP] 
    /*0002488c*/ B           VENC_StartOneFrameH264_x2475c
    VENC_StartOneFrameH264_x24890:
    /*00024890*/ LDR         R0, [SL, #24] 
    /*00024894*/ LDR         R2, [R7, #3288]             @ 0xcd8 
    /*00024898*/ CMP         R0, R2 
    /*0002489c*/ BNE         VENC_StartOneFrameH264_x2435c
    /*000248a0*/ B           VENC_StartOneFrameH264_x2438c
    VENC_StartOneFrameH264_x248a4:
    /*000248a4*/ MOV         R3, #4736                   @ 0x1280 
    /*000248a8*/ MOV         R1, #8 
    /*000248ac*/ STR         R3, [SP] 
    /*000248b0*/ MOVW        R2, #0                      @ .LC139 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9e4c] 
    /*000248b4*/ LDR         R3, [PC, #756]              @ 0x0000000000024bb0 
    /*000248b8*/ MOVT        R2, #0                      @ .LC139 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9e4c] 
    /*000248bc*/ STR         R5, [SP, #4] 
    /*000248c0*/ MOV         R0, #4 
    /*000248c4*/ BL          0x00000000000248C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000248c8*/ ADD         R1, SP, #52                 @ 0x34 
    /*000248cc*/ LDR         R0, [SP, #28] 
    /*000248d0*/ MVN         R4, #0 
    /*000248d4*/ BL          0x00000000000248D4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000248d8*/ B           VENC_StartOneFrameH264_x247ac
    VENC_StartOneFrameH264_x248dc:
    /*000248dc*/ LDR         R3, [IP, #4] 
    /*000248e0*/ CMP         R3, #0 
    /*000248e4*/ BEQ         VENC_StartOneFrameH264_x24280
    /*000248e8*/ MOVW        R0, #12880                  @ 0x3250 
    /*000248ec*/ MOVW        R4, #36240                  @ 0x8d90 
    /*000248f0*/ MLA         R3, R4, R3, R0 
    /*000248f4*/ ADD         R0, LR, R0 
    /*000248f8*/ ADD         LR, LR, R3 
    VENC_StartOneFrameH264_x248fc:
    /*000248fc*/ LDR         R3, [R0, #12] 
    /*00024900*/ LDR         R2, [R0], R4 
    /*00024904*/ CMP         R0, LR 
    /*00024908*/ ADD         R3, R3, R2 
    /*0002490c*/ ADD         R1, R1, R3 
    /*00024910*/ BNE         VENC_StartOneFrameH264_x248fc
    /*00024914*/ MOVW        R3, #36863                  @ 0x8fff 
    /*00024918*/ MOVT        R3, #2466                   @ 0x9a2 
    /*0002491c*/ CMP         R1, R3 
    /*00024920*/ MOVLS       R1, #0 
    /*00024924*/ MOVHI       R1, #1 
    /*00024928*/ B           VENC_StartOneFrameH264_x24274
    VENC_StartOneFrameH264_x2492c:
    /*0002492c*/ MOVT        IP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xc0] 
    /*00024930*/ LDR         R2, [IP, #4] 
    /*00024934*/ CMP         R2, #0 
    /*00024938*/ BEQ         VENC_StartOneFrameH264_x245b8
    /*0002493c*/ MOVW        R0, #12880                  @ 0x3250 
    /*00024940*/ ADD         R6, LR, R0 
    /*00024944*/ MLA         R2, R3, R2, R0 
    /*00024948*/ MOV         R8, R3 
    /*0002494c*/ MOV         R3, R1 
    /*00024950*/ ADD         SL, LR, R2 
    VENC_StartOneFrameH264_x24954:
    /*00024954*/ LDR         R2, [R6, #12] 
    /*00024958*/ LDR         R0, [R6], R8 
    /*0002495c*/ CMP         SL, R6 
    /*00024960*/ ADD         R2, R2, R0 
    /*00024964*/ ADD         R3, R3, R2 
    /*00024968*/ BNE         VENC_StartOneFrameH264_x24954
    /*0002496c*/ MOVW        R0, #49151                  @ 0xbfff 
    /*00024970*/ MOVT        R0, #4218                   @ 0x107a 
    /*00024974*/ CMP         R3, R0 
    /*00024978*/ MOV         R6, #0 
    /*0002497c*/ MOVLS       R0, #0 
    /*00024980*/ MOVHI       R0, #1 
    /*00024984*/ B           VENC_StartOneFrameH264_x24530
    VENC_StartOneFrameH264_x24988:
    /*00024988*/ ADD         R9, FP, #12288              @ 0x3000 
    /*0002498c*/ MOVW        R3, #28671                  @ 0x6fff 
    /*00024990*/ MOVT        R3, #3923                   @ 0xf53 
    /*00024994*/ LDR         R2, [R9, #604]              @ 0x25c 
    /*00024998*/ CMP         R2, R3 
    /*0002499c*/ BHI         VENC_StartOneFrameH264_x24638
    /*000249a0*/ B           VENC_StartOneFrameH264_x24564
    VENC_StartOneFrameH264_x249a4:
    /*000249a4*/ LDR         R3, [IP, #4] 
    /*000249a8*/ CMP         R3, #0 
    /*000249ac*/ BEQ         VENC_StartOneFrameH264_x24280
    /*000249b0*/ MOVW        R0, #12880                  @ 0x3250 
    /*000249b4*/ MOVW        R4, #36240                  @ 0x8d90 
    /*000249b8*/ MLA         R3, R4, R3, R0 
    /*000249bc*/ ADD         R0, LR, R0 
    /*000249c0*/ ADD         LR, LR, R3 
    VENC_StartOneFrameH264_x249c4:
    /*000249c4*/ LDR         R3, [R0, #12] 
    /*000249c8*/ LDR         R2, [R0], R4 
    /*000249cc*/ CMP         R0, LR 
    /*000249d0*/ ADD         R3, R3, R2 
    /*000249d4*/ ADD         R1, R1, R3 
    /*000249d8*/ BNE         VENC_StartOneFrameH264_x249c4
    /*000249dc*/ MOVW        R3, #49151                  @ 0xbfff 
    /*000249e0*/ MOVT        R3, #4218                   @ 0x107a 
    /*000249e4*/ CMP         R1, R3 
    /*000249e8*/ MOVLS       R1, #0 
    /*000249ec*/ MOVHI       R1, #1 
    /*000249f0*/ B           VENC_StartOneFrameH264_x24274
    VENC_StartOneFrameH264_x249f4:
    /*000249f4*/ ADD         R0, FP, #12928              @ 0x3280 
    /*000249f8*/ ADD         R1, SP, #56                 @ 0x38 
    /*000249fc*/ ADD         R0, R0, #36                 @ 0x24 
    /*00024a00*/ BL          0x0000000000024A00          @ VencGetDstFrameRate [R_ARM_CALL: .text+0x149ac] 
    /*00024a04*/ LDR         R3, [FP, #4] 
    /*00024a08*/ LDR         R2, [SP, #56]               @ 0x38 
    /*00024a0c*/ CMP         R3, #96                     @ 0x60 
    /*00024a10*/ LDR         R1, [R9, #644]              @ 0x284 
    /*00024a14*/ LDR         R0, [R9, #640]              @ 0x280 
    /*00024a18*/ BEQ         VENC_StartOneFrameH264_x24b98
    /*00024a1c*/ BL          0x0000000000024A1C          @ VencGetHevcTileNum [R_ARM_CALL: .text+0x269a0] 
    /*00024a20*/ STR         R0, [R7, #3296]             @ 0xce0 
    /*00024a24*/ B           VENC_StartOneFrameH264_x24400
    VENC_StartOneFrameH264_x24a28:
    /*00024a28*/ MOV         R0, R5 
    /*00024a2c*/ BL          0x0000000000024A2C          @ VencChangeGopMode [R_ARM_CALL: .text+0x23c0c] 
    /*00024a30*/ SUBS        R4, R0, #0 
    /*00024a34*/ BEQ         VENC_StartOneFrameH264_x242c4
    VENC_StartOneFrameH264_x24a38:
    /*00024a38*/ ADD         R1, SP, #52                 @ 0x34 
    /*00024a3c*/ LDR         R0, [SP, #28] 
    /*00024a40*/ BL          0x0000000000024A40          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00024a44*/ B           VENC_StartOneFrameH264_x247ac
    VENC_StartOneFrameH264_x24a48:
    /*00024a48*/ MOVT        IP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xc0] 
    /*00024a4c*/ LDR         R0, [IP, #4] 
    /*00024a50*/ CMP         R0, #0 
    /*00024a54*/ BEQ         VENC_StartOneFrameH264_x245b8
    /*00024a58*/ MOVW        R2, #12880                  @ 0x3250 
    /*00024a5c*/ ADD         R6, LR, R2 
    /*00024a60*/ MLA         R2, R3, R0, R2 
    /*00024a64*/ MOV         R8, R3 
    /*00024a68*/ MOV         R0, R1 
    /*00024a6c*/ ADD         SL, LR, R2 
    VENC_StartOneFrameH264_x24a70:
    /*00024a70*/ LDR         R3, [R6, #12] 
    /*00024a74*/ LDR         R2, [R6], R8 
    /*00024a78*/ CMP         SL, R6 
    /*00024a7c*/ ADD         R3, R3, R2 
    /*00024a80*/ ADD         R0, R0, R3 
    /*00024a84*/ BNE         VENC_StartOneFrameH264_x24a70
    /*00024a88*/ MOVW        R3, #40959                  @ 0x9fff 
    /*00024a8c*/ MOVT        R3, #2390                   @ 0x956 
    /*00024a90*/ CMP         R0, R3 
    /*00024a94*/ MOV         R6, #0 
    /*00024a98*/ MOVLS       R0, #0 
    /*00024a9c*/ MOVHI       R0, #1 
    /*00024aa0*/ B           VENC_StartOneFrameH264_x24530
    VENC_StartOneFrameH264_x24aa4:
    /*00024aa4*/ BL          0x0000000000024AA4          @ VENC_DRV_IsSupportDeBreathEffect [R_ARM_CALL: .text+0x26a28] 
    /*00024aa8*/ CMP         R0, #0 
    /*00024aac*/ BEQ         VENC_StartOneFrameH264_x242c4
    /*00024ab0*/ MOV         R0, R5 
    /*00024ab4*/ BL          0x0000000000024AB4          @ VencStartDeBreathEffectFrame [R_ARM_CALL: .text+0x23a30] 
    /*00024ab8*/ SUBS        R4, R0, #0 
    /*00024abc*/ BNE         VENC_StartOneFrameH264_x24a38
    /*00024ac0*/ B           VENC_StartOneFrameH264_x24470
    VENC_StartOneFrameH264_x24ac4:
    /*00024ac4*/ MOVW        R4, #32786                  @ 0x8012 
    /*00024ac8*/ MOVT        R4, #40968                  @ 0xa008 
    /*00024acc*/ B           VENC_StartOneFrameH264_x244a0
    VENC_StartOneFrameH264_x24ad0:
    /*00024ad0*/ LDR         R3, [IP, #4] 
    /*00024ad4*/ CMP         R3, #0 
    /*00024ad8*/ BEQ         VENC_StartOneFrameH264_x24280
    /*00024adc*/ MOVW        R0, #12880                  @ 0x3250 
    /*00024ae0*/ MOVW        R4, #36240                  @ 0x8d90 
    /*00024ae4*/ MLA         R3, R4, R3, R0 
    /*00024ae8*/ ADD         R0, LR, R0 
    /*00024aec*/ ADD         LR, LR, R3 
    VENC_StartOneFrameH264_x24af0:
    /*00024af0*/ LDR         R3, [R0, #12] 
    /*00024af4*/ LDR         R2, [R0], R4 
    /*00024af8*/ CMP         R0, LR 
    /*00024afc*/ ADD         R3, R3, R2 
    /*00024b00*/ ADD         R1, R1, R3 
    /*00024b04*/ BNE         VENC_StartOneFrameH264_x24af0
    /*00024b08*/ MOVW        R3, #40959                  @ 0x9fff 
    /*00024b0c*/ MOVT        R3, #2390                   @ 0x956 
    /*00024b10*/ CMP         R1, R3 
    /*00024b14*/ MOVLS       R1, #0 
    /*00024b18*/ MOVHI       R1, #1 
    /*00024b1c*/ B           VENC_StartOneFrameH264_x24274
    VENC_StartOneFrameH264_x24b20:
    /*00024b20*/ ADD         R1, SP, #52                 @ 0x34 
    /*00024b24*/ LDR         R0, [SP, #28] 
    /*00024b28*/ BL          0x0000000000024B28          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00024b2c*/ LDR         R3, [SL, #336]              @ 0x150 
    /*00024b30*/ CMP         R3, #1 
    /*00024b34*/ BEQ         VENC_StartOneFrameH264_x24b80
    VENC_StartOneFrameH264_x24b38:
    /*00024b38*/ MOVW        R3, #4995                   @ 0x1383 
    /*00024b3c*/ STR         R5, [SP, #4] 
    /*00024b40*/ STR         R3, [SP] 
    /*00024b44*/ MOVW        R2, #0                      @ .LC152 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa224] 
    /*00024b48*/ LDR         R3, [PC, #96]               @ 0x0000000000024bb0 
    /*00024b4c*/ MOVT        R2, #0                      @ .LC152 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa224] 
    /*00024b50*/ MOV         R1, #8 
    /*00024b54*/ MOV         R0, #4 
    /*00024b58*/ BL          0x0000000000024B58          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00024b5c*/ B           VENC_StartOneFrameH264_x247ac
    VENC_StartOneFrameH264_x24b60:
    /*00024b60*/ MOV         R0, #10 
    /*00024b64*/ BL          0x0000000000024B64          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024b68*/ ADD         R1, FP, #68                 @ 0x44 
    /*00024b6c*/ LDR         R3, [R0, #32] 
    /*00024b70*/ MOV         R0, R5 
    /*00024b74*/ BLX         R3 
    /*00024b78*/ MOV         R4, R0 
    /*00024b7c*/ B           VENC_StartOneFrameH264_x24454
    VENC_StartOneFrameH264_x24b80:
    /*00024b80*/ ADD         R1, SL, #336                @ 0x150 
    /*00024b84*/ MOV         R0, R5 
    /*00024b88*/ BL          0x0000000000024B88          @ VencPutOsd [R_ARM_CALL: .text+0x18c0] 
    /*00024b8c*/ MOV         R3, #0 
    /*00024b90*/ STR         R3, [SL, #336]              @ 0x150 
    /*00024b94*/ B           VENC_StartOneFrameH264_x24b38
    VENC_StartOneFrameH264_x24b98:
    /*00024b98*/ BL          0x0000000000024B98          @ VencGetAvcTileNum [R_ARM_CALL: .text+0x26998] 
    /*00024b9c*/ STR         R0, [R7, #3296]             @ 0xce0 
    /*00024ba0*/ B           VENC_StartOneFrameH264_x24400
    /*00024ba4*/ NOP         {0} 
    /*00024ba8*/ TEQEQ       R1, R0, LSL #26 
    /*00024bac*/ ANDEQ       R0, R0, R0 
    /*00024bb0*/ ANDEQ       R1, R0, IP, LSR #3 
FUNC_END VENC_StartOneFrameH264


FUNC_BEGIN VENC_IntHandlerH264
    /*00024bb4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00024bb8*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00024bbc*/ MOV         R6, R1 
    /*00024bc0*/ MOV         R5, R0 
    /*00024bc4*/ BL          0x0000000000024BC4          @ MkpVencCheckChn [R_ARM_CALL: .text+0x7ac] 
    /*00024bc8*/ SUBS        R4, R0, #0 
    /*00024bcc*/ BEQ         VENC_IntHandlerH264_x24bdc
    VENC_IntHandlerH264_x24bd0:
    /*00024bd0*/ MOV         R0, R4 
    /*00024bd4*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00024bd8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VENC_IntHandlerH264_x24bdc:
    /*00024bdc*/ MOV         R0, R5 
    /*00024be0*/ BL          0x0000000000024BE0          @ MkpVencCheckChnCreated [R_ARM_CALL: .text+0x7d4] 
    /*00024be4*/ SUBS        R4, R0, #0 
    /*00024be8*/ BNE         VENC_IntHandlerH264_x24bd0
    /*00024bec*/ MOV         R0, R5 
    /*00024bf0*/ BL          0x0000000000024BF0          @ MkpVencCheckChnRegistered [R_ARM_CALL: .text+0x800] 
    /*00024bf4*/ SUBS        R4, R0, #0 
    /*00024bf8*/ BNE         VENC_IntHandlerH264_x24bd0
    /*00024bfc*/ CMP         R6, #0 
    /*00024c00*/ BEQ         VENC_IntHandlerH264_x24e18
    /*00024c04*/ MOVW        R3, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00024c08*/ MOVT        R3, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00024c0c*/ MOVW        R8, #36240                  @ 0x8d90 
    /*00024c10*/ MOV         R1, #1 
    /*00024c14*/ LDR         R3, [R3] 
    /*00024c18*/ MOV         R0, R5 
    /*00024c1c*/ MLA         R8, R8, R5, R3 
    /*00024c20*/ ADD         R7, R8, #32768              @ 0x8000 
    /*00024c24*/ LDR         R3, [R8, #84]               @ 0x54 
    /*00024c28*/ LDR         R9, [R8, #56]               @ 0x38 
    /*00024c2c*/ CMP         R3, #9 
    /*00024c30*/ ADDNE       R2, R8, #12288              @ 0x3000 
    /*00024c34*/ LDRNE       R3, [R2, #48]               @ 0x30 
    /*00024c38*/ ADDNE       R3, R3, #1 
    /*00024c3c*/ STRNE       R3, [R2, #48]               @ 0x30 
    /*00024c40*/ MOV         R2, R6 
    /*00024c44*/ LDR         R3, [R7, #3304]             @ 0xce8 
    /*00024c48*/ CMP         R3, #0 
    /*00024c4c*/ MVNEQ       R3, #0 
    /*00024c50*/ STRBEQ      R3, [R7, #3312]             @ 0xcf0 
    /*00024c54*/ BL          0x0000000000024C54          @ VencGetVeduState [R_ARM_CALL: .text+0x24118] 
    /*00024c58*/ LDR         R3, [R7, #3304]             @ 0xce8 
    /*00024c5c*/ LDR         R2, [R7, #3296]             @ 0xce0 
    /*00024c60*/ ADD         R3, R3, #1 
    /*00024c64*/ STR         R3, [R7, #3304]             @ 0xce8 
    /*00024c68*/ SUB         R3, R2, R3 
    /*00024c6c*/ LDRB        R1, [R7, #3312]             @ 0xcf0 
    /*00024c70*/ CLZ         R3, R3 
    /*00024c74*/ LSR         R3, R3, #5 
    /*00024c78*/ AND         R0, R0, R1 
    /*00024c7c*/ STRB        R0, [R7, #3312]             @ 0xcf0 
    /*00024c80*/ STR         R3, [R6] 
    /*00024c84*/ LDR         R2, [R7, #3304]             @ 0xce8 
    /*00024c88*/ LDR         R3, [R7, #3296]             @ 0xce0 
    /*00024c8c*/ CMP         R2, R3 
    /*00024c90*/ BCC         VENC_IntHandlerH264_x24bd0
    /*00024c94*/ LDRB        R2, [R7, #3312]             @ 0xcf0 
    /*00024c98*/ MOV         R3, #0 
    /*00024c9c*/ MOV         R4, #1 
    /*00024ca0*/ STR         R6, [SP, #28] 
    /*00024ca4*/ STR         R4, [SP, #16] 
    /*00024ca8*/ STRB        R2, [SP, #36]               @ 0x24 
    /*00024cac*/ STR         R3, [SP, #20] 
    /*00024cb0*/ STR         R3, [SP, #24] 
    /*00024cb4*/ STR         R3, [SP, #32] 
    /*00024cb8*/ LDR         R3, [R8, #4] 
    /*00024cbc*/ STR         R4, [SP, #12] 
    /*00024cc0*/ CMP         R3, #96                     @ 0x60 
    /*00024cc4*/ BEQ         VENC_IntHandlerH264_x24d54
    /*00024cc8*/ MOVW        R2, #265                    @ 0x109 
    /*00024ccc*/ CMP         R3, R2 
    /*00024cd0*/ BEQ         VENC_IntHandlerH264_x24cf0
    /*00024cd4*/ MOVW        R3, #0                      @ .LC145 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa034] 
    /*00024cd8*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*00024cdc*/ MOVT        R3, #0                      @ .LC145 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa034] 
    /*00024ce0*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*00024ce4*/ MOVW        R2, #5107                   @ 0x13f3 
    /*00024ce8*/ LDR         R1, [PC, #336]              @ 0x0000000000024e40 
    /*00024cec*/ BL          0x0000000000024CEC          @ osal_panic [R_ARM_CALL: +0x0] 
    VENC_IntHandlerH264_x24cf0:
    /*00024cf0*/ MOV         R0, #13 
    /*00024cf4*/ BL          0x0000000000024CF4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024cf8*/ ADD         R2, SP, #12 
    /*00024cfc*/ MOV         R1, #1 
    /*00024d00*/ LDR         R3, [R0, #56]               @ 0x38 
    /*00024d04*/ MOV         R0, R9 
    /*00024d08*/ BLX         R3 
    /*00024d0c*/ MOV         R4, R0 
    VENC_IntHandlerH264_x24d10:
    /*00024d10*/ LDR         R2, [SP, #32] 
    /*00024d14*/ LDR         R3, [SP, #12] 
    /*00024d18*/ STR         R2, [R7, #3336]             @ 0xd08 
    /*00024d1c*/ CMP         R3, #1 
    /*00024d20*/ LDR         R3, [R8, #80]               @ 0x50 
    /*00024d24*/ LDR         R3, [R3, #232]              @ 0xe8 
    /*00024d28*/ STR         R3, [R7, #3340]             @ 0xd0c 
    /*00024d2c*/ BEQ         VENC_IntHandlerH264_x24d78
    VENC_IntHandlerH264_x24d30:
    /*00024d30*/ LDR         R3, [R7, #3328]             @ 0xd00 
    /*00024d34*/ CMP         R3, #1 
    /*00024d38*/ MOVNE       R3, #0 
    /*00024d3c*/ STRNE       R3, [R8, #80]               @ 0x50 
    /*00024d40*/ MOV         R3, #0 
    /*00024d44*/ STR         R3, [R7, #3304]             @ 0xce8 
    /*00024d48*/ STR         R3, [R7, #3300]             @ 0xce4 
    /*00024d4c*/ STR         R3, [R7, #3308]             @ 0xcec 
    /*00024d50*/ B           VENC_IntHandlerH264_x24bd0
    VENC_IntHandlerH264_x24d54:
    /*00024d54*/ MOV         R0, #10 
    /*00024d58*/ BL          0x0000000000024D58          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024d5c*/ MOV         R1, R4 
    /*00024d60*/ ADD         R2, SP, #12 
    /*00024d64*/ LDR         R3, [R0, #44]               @ 0x2c 
    /*00024d68*/ MOV         R0, R9 
    /*00024d6c*/ BLX         R3 
    /*00024d70*/ MOV         R4, R0 
    /*00024d74*/ B           VENC_IntHandlerH264_x24d10
    VENC_IntHandlerH264_x24d78:
    /*00024d78*/ ADD         R6, R8, #64                 @ 0x40 
    /*00024d7c*/ ADD         R1, SP, #8 
    /*00024d80*/ MOV         R0, R6 
    /*00024d84*/ BL          0x0000000000024D84          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00024d88*/ LDR         R3, [SP, #32] 
    /*00024d8c*/ CMP         R3, #1 
    /*00024d90*/ BEQ         VENC_IntHandlerH264_x24de8
    VENC_IntHandlerH264_x24d94:
    /*00024d94*/ MOV         R1, #0 
    /*00024d98*/ MOV         R0, R5 
    /*00024d9c*/ STR         R1, [R7, #3328]             @ 0xd00 
    /*00024da0*/ BL          0x0000000000024DA0          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*00024da4*/ SUBS        R1, R0, #0 
    /*00024da8*/ BEQ         VENC_IntHandlerH264_x24dc4
    /*00024dac*/ LDR         R3, [R1, #336]              @ 0x150 
    /*00024db0*/ CMP         R3, #0 
    /*00024db4*/ BNE         VENC_IntHandlerH264_x24e08
    VENC_IntHandlerH264_x24db8:
    /*00024db8*/ LDR         R0, [R8, #80]               @ 0x50 
    /*00024dbc*/ ADD         R0, R0, #336                @ 0x150 
    /*00024dc0*/ BL          0x0000000000024DC0          @ VencPutFrmAddInfo [R_ARM_CALL: .text+0x1320] 
    VENC_IntHandlerH264_x24dc4:
    /*00024dc4*/ MOV         R0, R8 
    /*00024dc8*/ BL          0x0000000000024DC8          @ VencDecSnapEnc [R_ARM_CALL: .text+0x33a4] 
    VENC_IntHandlerH264_x24dcc:
    /*00024dcc*/ ADD         R0, R8, #12352              @ 0x3040 
    /*00024dd0*/ ADD         R0, R0, #56                 @ 0x38 
    /*00024dd4*/ BL          0x0000000000024DD4          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00024dd8*/ ADD         R1, SP, #8 
    /*00024ddc*/ MOV         R0, R6 
    /*00024de0*/ BL          0x0000000000024DE0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00024de4*/ B           VENC_IntHandlerH264_x24d30
    VENC_IntHandlerH264_x24de8:
    /*00024de8*/ LDR         R3, [R8, #84]               @ 0x54 
    /*00024dec*/ CMP         R3, #9 
    /*00024df0*/ BNE         VENC_IntHandlerH264_x24d94
    /*00024df4*/ LDR         R3, [SP, #24] 
    /*00024df8*/ CMP         R3, #1 
    /*00024dfc*/ STREQ       R3, [R7, #3328]             @ 0xd00 
    /*00024e00*/ BNE         VENC_IntHandlerH264_x24d94
    /*00024e04*/ B           VENC_IntHandlerH264_x24dcc
    VENC_IntHandlerH264_x24e08:
    /*00024e08*/ ADD         R1, R1, #336                @ 0x150 
    /*00024e0c*/ MOV         R0, R5 
    /*00024e10*/ BL          0x0000000000024E10          @ VencPutOsd [R_ARM_CALL: .text+0x18c0] 
    /*00024e14*/ B           VENC_IntHandlerH264_x24db8
    VENC_IntHandlerH264_x24e18:
    /*00024e18*/ MOVW        R3, #5053                   @ 0x13bd 
    /*00024e1c*/ MOVW        R2, #0                      @ .LC153 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa268] 
    /*00024e20*/ STR         R3, [SP] 
    /*00024e24*/ MOVT        R2, #0                      @ .LC153 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa268] 
    /*00024e28*/ LDR         R3, [PC, #16]               @ 0x0000000000024e40 
    /*00024e2c*/ MOV         R1, #8 
    /*00024e30*/ MOV         R0, #3 
    /*00024e34*/ MVN         R4, #0 
    /*00024e38*/ BL          0x0000000000024E38          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00024e3c*/ B           VENC_IntHandlerH264_x24bd0
    /*00024e40*/ ANDEQ       R1, R0, R4, ASR #3 
FUNC_END VENC_IntHandlerH264


FUNC_BEGIN VENC_StartOneFrameJpeg
    /*00024e44*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00024e48*/ SUB         SP, SP, #36                 @ 0x24 
    /*00024e4c*/ MOV         R5, R0 
    /*00024e50*/ BL          0x0000000000024E50          @ MkpVencCheckChn [R_ARM_CALL: .text+0x7ac] 
    /*00024e54*/ SUBS        SL, R0, #0 
    /*00024e58*/ BNE         VENC_StartOneFrameJpeg_x24f68
    /*00024e5c*/ MOVW        R3, #36240                  @ 0x8d90 
    /*00024e60*/ MOVW        R2, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00024e64*/ MUL         R3, R3, R5 
    /*00024e68*/ MOVT        R2, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00024e6c*/ LDR         R2, [R2] 
    /*00024e70*/ ADD         R4, R2, R3 
    /*00024e74*/ STR         SL, [R4, #68]               @ 0x44 
    /*00024e78*/ LDR         R3, [R2, R3] 
    /*00024e7c*/ CMP         R3, #1 
    /*00024e80*/ BNE         VENC_StartOneFrameJpeg_x252a8
    /*00024e84*/ LDR         R3, [R4, #56]               @ 0x38 
    /*00024e88*/ CMN         R3, #1 
    /*00024e8c*/ BEQ         VENC_StartOneFrameJpeg_x25324
    /*00024e90*/ LDR         R2, [R4, #4] 
    /*00024e94*/ MOVW        R3, #1006                   @ 0x3ee 
    /*00024e98*/ CMP         R2, R3 
    /*00024e9c*/ BEQ         VENC_StartOneFrameJpeg_x252f8
    /*00024ea0*/ ADD         R7, R4, #12288              @ 0x3000 
    /*00024ea4*/ ADD         R9, R4, #8192               @ 0x2000 
    /*00024ea8*/ ADD         R8, R4, #64                 @ 0x40 
    /*00024eac*/ ADD         R1, SP, #28 
    /*00024eb0*/ LDR         R3, [R7, #36]               @ 0x24 
    /*00024eb4*/ MOV         R0, R8 
    /*00024eb8*/ ADD         R3, R3, #1 
    /*00024ebc*/ STR         R3, [R7, #36]               @ 0x24 
    /*00024ec0*/ LDR         R3, [R9, #3768]             @ 0xeb8 
    /*00024ec4*/ STR         R3, [R4, #76]               @ 0x4c 
    /*00024ec8*/ BL          0x0000000000024EC8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00024ecc*/ MOV         R0, R5 
    /*00024ed0*/ BL          0x0000000000024ED0          @ VencQueryOnePic [R_ARM_CALL: .text+0x1cc4] 
    /*00024ed4*/ CMP         R0, #0 
    /*00024ed8*/ BNE         VENC_StartOneFrameJpeg_x25034
    VENC_StartOneFrameJpeg_x24edc:
    /*00024edc*/ LDR         R2, [R4, #4] 
    /*00024ee0*/ MOVW        R3, #1002                   @ 0x3ea 
    /*00024ee4*/ ADD         R6, R4, #32768              @ 0x8000 
    /*00024ee8*/ CMP         R2, R3 
    /*00024eec*/ BEQ         VENC_StartOneFrameJpeg_x250a4
    VENC_StartOneFrameJpeg_x24ef0:
    /*00024ef0*/ LDR         R3, [R6, #3336]             @ 0xd08 
    /*00024ef4*/ CMP         R3, #2 
    /*00024ef8*/ BEQ         VENC_StartOneFrameJpeg_x25110
    /*00024efc*/ LDR         R3, [R6, #3344]             @ 0xd10 
    /*00024f00*/ CMP         R3, #0 
    /*00024f04*/ BEQ         VENC_StartOneFrameJpeg_x25054
    VENC_StartOneFrameJpeg_x24f08:
    /*00024f08*/ ADD         SL, R4, #68                 @ 0x44 
    VENC_StartOneFrameJpeg_x24f0c:
    /*00024f0c*/ CMP         R3, #1 
    /*00024f10*/ BEQ         VENC_StartOneFrameJpeg_x251d0
    VENC_StartOneFrameJpeg_x24f14:
    /*00024f14*/ LDR         R1, [R4, #4] 
    /*00024f18*/ MOVW        R2, #1006                   @ 0x3ee 
    /*00024f1c*/ LDRB        R3, [R6, #3352]             @ 0xd18 
    /*00024f20*/ CMP         R1, R2 
    /*00024f24*/ STRB        R3, [R4, #108]              @ 0x6c 
    /*00024f28*/ BEQ         VENC_StartOneFrameJpeg_x25070
    /*00024f2c*/ MOV         R0, #11 
    /*00024f30*/ BL          0x0000000000024F30          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00024f34*/ MOV         R1, SL 
    /*00024f38*/ LDR         R3, [R0, #32] 
    /*00024f3c*/ MOV         R0, R5 
    /*00024f40*/ BLX         R3 
    /*00024f44*/ MOV         SL, R0 
    VENC_StartOneFrameJpeg_x24f48:
    /*00024f48*/ CMP         SL, #0 
    /*00024f4c*/ BNE         VENC_StartOneFrameJpeg_x24f74
    /*00024f50*/ LDR         R3, [R7, #40]               @ 0x28 
    /*00024f54*/ ADD         R3, R3, #1 
    /*00024f58*/ STR         R3, [R7, #40]               @ 0x28 
    VENC_StartOneFrameJpeg_x24f5c:
    /*00024f5c*/ ADD         R1, SP, #28 
    /*00024f60*/ MOV         R0, R8 
    /*00024f64*/ BL          0x0000000000024F64          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VENC_StartOneFrameJpeg_x24f68:
    /*00024f68*/ MOV         R0, SL 
    /*00024f6c*/ ADD         SP, SP, #36                 @ 0x24 
    /*00024f70*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_StartOneFrameJpeg_x24f74:
    /*00024f74*/ LDRB        R3, [R6, #3352]             @ 0xd18 
    /*00024f78*/ CMP         R3, #0 
    /*00024f7c*/ BNE         VENC_StartOneFrameJpeg_x2511c
    /*00024f80*/ LDR         R3, [R9, #3768]             @ 0xeb8 
    /*00024f84*/ CMP         R3, #0 
    /*00024f88*/ BNE         VENC_StartOneFrameJpeg_x25100
    VENC_StartOneFrameJpeg_x24f8c:
    /*00024f8c*/ LDR         R3, [R6, #3344]             @ 0xd10 
    /*00024f90*/ CMP         R3, #3 
    /*00024f94*/ BEQ         VENC_StartOneFrameJpeg_x25000
    /*00024f98*/ MOV         R1, #0 
    /*00024f9c*/ MOV         R0, R5 
    /*00024fa0*/ BL          0x0000000000024FA0          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*00024fa4*/ CMP         R0, #0 
    /*00024fa8*/ BEQ         VENC_StartOneFrameJpeg_x24fc4
    /*00024fac*/ LDR         R3, [R0, #336]              @ 0x150 
    /*00024fb0*/ ADD         R7, R0, #336                @ 0x150 
    /*00024fb4*/ CMP         R3, #0 
    /*00024fb8*/ BNE         VENC_StartOneFrameJpeg_x25298
    VENC_StartOneFrameJpeg_x24fbc:
    /*00024fbc*/ MOV         R0, R7 
    /*00024fc0*/ BL          0x0000000000024FC0          @ VencPutFrmAddInfo [R_ARM_CALL: .text+0x1320] 
    VENC_StartOneFrameJpeg_x24fc4:
    /*00024fc4*/ LDR         R3, [R4, #80]               @ 0x50 
    /*00024fc8*/ LDR         R1, [R3, #384]              @ 0x180 
    /*00024fcc*/ CMP         R1, #0 
    /*00024fd0*/ BEQ         VENC_StartOneFrameJpeg_x25000
    /*00024fd4*/ LDR         R3, [R6, #3344]             @ 0xd10 
    /*00024fd8*/ CMP         R3, #3 
    /*00024fdc*/ CMPNE       R3, #0 
    /*00024fe0*/ BEQ         VENC_StartOneFrameJpeg_x24ff8
    /*00024fe4*/ MOV         R1, #1 
    /*00024fe8*/ MOV         R0, R5 
    /*00024fec*/ BL          0x0000000000024FEC          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*00024ff0*/ LDR         R3, [R4, #80]               @ 0x50 
    /*00024ff4*/ LDR         R1, [R3, #384]              @ 0x180 
    VENC_StartOneFrameJpeg_x24ff8:
    /*00024ff8*/ CMP         R1, #2 
    /*00024ffc*/ BEQ         VENC_StartOneFrameJpeg_x251e0
    VENC_StartOneFrameJpeg_x25000:
    /*00025000*/ ADD         R0, R4, #12352              @ 0x3040 
    /*00025004*/ ADD         R0, R0, #56                 @ 0x38 
    /*00025008*/ BL          0x0000000000025008          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0002500c*/ MOVW        R3, #5444                   @ 0x1544 
    /*00025010*/ STR         R5, [SP, #4] 
    /*00025014*/ MOVW        R2, #0                      @ .LC152 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa224] 
    /*00025018*/ STR         R3, [SP] 
    /*0002501c*/ MOVT        R2, #0                      @ .LC152 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa224] 
    /*00025020*/ LDR         R3, [PC, #800]              @ 0x0000000000025348 
    /*00025024*/ MOV         R1, #8 
    /*00025028*/ MOV         R0, #4 
    /*0002502c*/ BL          0x000000000002502C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00025030*/ B           VENC_StartOneFrameJpeg_x24f5c
    VENC_StartOneFrameJpeg_x25034:
    /*00025034*/ MOVW        R3, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f6c] 
    /*00025038*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0002503c*/ MOVT        R3, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f6c] 
    /*00025040*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*00025044*/ MOVW        R2, #5321                   @ 0x14c9 
    /*00025048*/ LDR         R1, [PC, #760]              @ 0x0000000000025348 
    /*0002504c*/ BL          0x000000000002504C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00025050*/ B           VENC_StartOneFrameJpeg_x24edc
    VENC_StartOneFrameJpeg_x25054:
    /*00025054*/ LDR         R2, [R4, #4] 
    /*00025058*/ MOVW        R3, #1006                   @ 0x3ee 
    /*0002505c*/ CMP         R2, R3 
    /*00025060*/ BNE         VENC_StartOneFrameJpeg_x250c8
    /*00025064*/ LDRB        R3, [R6, #3352]             @ 0xd18 
    /*00025068*/ ADD         SL, R4, #68                 @ 0x44 
    /*0002506c*/ STRB        R3, [R4, #108]              @ 0x6c 
    VENC_StartOneFrameJpeg_x25070:
    /*00025070*/ LDR         R2, [R7, #652]              @ 0x28c 
    /*00025074*/ LDR         R1, [R7, #644]              @ 0x284 
    /*00025078*/ LDR         R0, [R7, #640]              @ 0x280 
    /*0002507c*/ BL          0x000000000002507C          @ VencGetProResTileNum [R_ARM_CALL: .text+0x26990] 
    /*00025080*/ STR         R0, [R4, #112]              @ 0x70 
    /*00025084*/ MOV         R0, #44                     @ 0x2c 
    /*00025088*/ BL          0x0000000000025088          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002508c*/ MOV         R1, SL 
    /*00025090*/ LDR         R3, [R0, #8] 
    /*00025094*/ MOV         R0, R5 
    /*00025098*/ BLX         R3 
    /*0002509c*/ MOV         SL, R0 
    /*000250a0*/ B           VENC_StartOneFrameJpeg_x24f48
    VENC_StartOneFrameJpeg_x250a4:
    /*000250a4*/ LDR         R3, [R6, #3336]             @ 0xd08 
    /*000250a8*/ CMP         R3, #2 
    /*000250ac*/ BEQ         VENC_StartOneFrameJpeg_x25110
    /*000250b0*/ LDR         R3, [R7, #1108]             @ 0x454 
    /*000250b4*/ CMP         R3, #0 
    /*000250b8*/ BNE         VENC_StartOneFrameJpeg_x251f8
    /*000250bc*/ LDR         R3, [R6, #3344]             @ 0xd10 
    /*000250c0*/ CMP         R3, #0 
    /*000250c4*/ BNE         VENC_StartOneFrameJpeg_x24f08
    VENC_StartOneFrameJpeg_x250c8:
    /*000250c8*/ ADD         SL, R4, #68                 @ 0x44 
    /*000250cc*/ MOV         R0, R5 
    /*000250d0*/ MOV         R1, SL 
    /*000250d4*/ BL          0x00000000000250D4          @ VencGetOsd [R_ARM_CALL: .text+0x1648] 
    /*000250d8*/ MOV         R0, R5 
    /*000250dc*/ BL          0x00000000000250DC          @ VencCheckOsd [R_ARM_CALL: .text+0x23840] 
    /*000250e0*/ LDR         R1, [R4, #80]               @ 0x50 
    /*000250e4*/ ADD         R0, R4, #36096              @ 0x8d00 
    /*000250e8*/ MOV         R2, #104                    @ 0x68 
    /*000250ec*/ ADD         R1, R1, #336                @ 0x150 
    /*000250f0*/ ADD         R0, R0, #40                 @ 0x28 
    /*000250f4*/ BL          0x00000000000250F4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000250f8*/ LDR         R3, [R6, #3344]             @ 0xd10 
    /*000250fc*/ B           VENC_StartOneFrameJpeg_x24f0c
    VENC_StartOneFrameJpeg_x25100:
    /*00025100*/ MOV         R1, #3 
    /*00025104*/ MOV         R0, R5 
    /*00025108*/ BL          0x0000000000025108          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*0002510c*/ B           VENC_StartOneFrameJpeg_x24f8c
    VENC_StartOneFrameJpeg_x25110:
    /*00025110*/ ADD         SL, R4, #68                 @ 0x44 
    /*00025114*/ LDR         R3, [R6, #3344]             @ 0xd10 
    /*00025118*/ B           VENC_StartOneFrameJpeg_x24f0c
    VENC_StartOneFrameJpeg_x2511c:
    /*0002511c*/ MOV         R1, #0 
    /*00025120*/ MOV         R0, R5 
    /*00025124*/ BL          0x0000000000025124          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*00025128*/ CMP         R0, #0 
    /*0002512c*/ BEQ         VENC_StartOneFrameJpeg_x25148
    /*00025130*/ LDR         R3, [R0, #336]              @ 0x150 
    /*00025134*/ ADD         R7, R0, #336                @ 0x150 
    /*00025138*/ CMP         R3, #0 
    /*0002513c*/ BNE         VENC_StartOneFrameJpeg_x252e8
    VENC_StartOneFrameJpeg_x25140:
    /*00025140*/ MOV         R0, R7 
    /*00025144*/ BL          0x0000000000025144          @ VencPutFrmAddInfo [R_ARM_CALL: .text+0x1320] 
    VENC_StartOneFrameJpeg_x25148:
    /*00025148*/ LDR         R3, [R9, #3768]             @ 0xeb8 
    /*0002514c*/ CMP         R3, #0 
    /*00025150*/ BEQ         VENC_StartOneFrameJpeg_x2516c
    /*00025154*/ LDR         R3, [R6, #3344]             @ 0xd10 
    /*00025158*/ CMP         R3, #0 
    /*0002515c*/ BEQ         VENC_StartOneFrameJpeg_x251bc
    /*00025160*/ MOV         R1, #3 
    /*00025164*/ MOV         R0, R5 
    /*00025168*/ BL          0x0000000000025168          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    VENC_StartOneFrameJpeg_x2516c:
    /*0002516c*/ LDR         R3, [R4, #80]               @ 0x50 
    /*00025170*/ LDR         R1, [R3, #384]              @ 0x180 
    /*00025174*/ CMP         R1, #0 
    /*00025178*/ BEQ         VENC_StartOneFrameJpeg_x251bc
    /*0002517c*/ LDR         R3, [R6, #3344]             @ 0xd10 
    /*00025180*/ CMP         R3, #3 
    /*00025184*/ CMPNE       R3, #0 
    /*00025188*/ BEQ         VENC_StartOneFrameJpeg_x251a0
    /*0002518c*/ MOV         R1, #1 
    /*00025190*/ MOV         R0, R5 
    /*00025194*/ BL          0x0000000000025194          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*00025198*/ LDR         R3, [R4, #80]               @ 0x50 
    /*0002519c*/ LDR         R1, [R3, #384]              @ 0x180 
    VENC_StartOneFrameJpeg_x251a0:
    /*000251a0*/ CMP         R1, #2 
    /*000251a4*/ BNE         VENC_StartOneFrameJpeg_x251bc
    /*000251a8*/ LDR         R3, [R6, #3344]             @ 0xd10 
    /*000251ac*/ CMP         R3, #2 
    /*000251b0*/ BNE         VENC_StartOneFrameJpeg_x251bc
    /*000251b4*/ MOV         R0, R5 
    /*000251b8*/ BL          0x00000000000251B8          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    VENC_StartOneFrameJpeg_x251bc:
    /*000251bc*/ MOV         R3, #1 
    /*000251c0*/ STR         R3, [R6, #3360]             @ 0xd20 
    /*000251c4*/ MOV         R3, #4 
    /*000251c8*/ STR         R3, [R6, #3344]             @ 0xd10 
    /*000251cc*/ B           VENC_StartOneFrameJpeg_x25000
    VENC_StartOneFrameJpeg_x251d0:
    /*000251d0*/ MOV         R1, SL 
    /*000251d4*/ MOV         R0, R5 
    /*000251d8*/ BL          0x00000000000251D8          @ VencPrepareMpfOsdInfo [R_ARM_CALL: .text+0x19e0] 
    /*000251dc*/ B           VENC_StartOneFrameJpeg_x24f14
    VENC_StartOneFrameJpeg_x251e0:
    /*000251e0*/ LDR         R3, [R6, #3344]             @ 0xd10 
    /*000251e4*/ CMP         R3, #2 
    /*000251e8*/ BNE         VENC_StartOneFrameJpeg_x25000
    /*000251ec*/ MOV         R0, R5 
    /*000251f0*/ BL          0x00000000000251F0          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*000251f4*/ B           VENC_StartOneFrameJpeg_x25000
    VENC_StartOneFrameJpeg_x251f8:
    /*000251f8*/ MOV         R0, #2 
    /*000251fc*/ BL          0x00000000000251FC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00025200*/ LDR         R3, [R0, #88]               @ 0x58 
    /*00025204*/ BLX         R3 
    /*00025208*/ ADD         R3, PC, #304                @ 0x130 
    /*0002520c*/ LDRD        R2, [R3] 
    /*00025210*/ MOVW        IP, #13408                  @ 0x3460 
    /*00025214*/ STRD        R0, [SP, #8] 
    /*00025218*/ ADD         R1, R4, #13376              @ 0x3440 
    /*0002521c*/ LDRD        SL, [R1, #24] 
    /*00025220*/ CMP         FP, R3 
    /*00025224*/ CMPEQ       SL, R2 
    /*00025228*/ MOV         R1, FP 
    /*0002522c*/ MOV         R0, SL 
    /*00025230*/ MOVCC       R1, R3 
    /*00025234*/ LDR         R3, [R7, #1132]             @ 0x46c 
    /*00025238*/ MOVCC       R0, R2 
    /*0002523c*/ ADD         R3, R3, #1 
    /*00025240*/ STR         R3, [R7, #1132]             @ 0x46c 
    /*00025244*/ LDRD        R2, [SP, #8] 
    /*00025248*/ ADDS        R2, R2, R0 
    /*0002524c*/ ADC         R3, R3, R1 
    /*00025250*/ STRD        R2, [SP, #16] 
    /*00025254*/ LDRD        R2, [R4, IP] 
    /*00025258*/ ADDS        R2, R2, SL 
    /*0002525c*/ ADC         R3, R3, FP 
    /*00025260*/ MOV         SL, R2 
    /*00025264*/ MOV         FP, R3 
    /*00025268*/ LDRD        R2, [SP, #16] 
    /*0002526c*/ CMP         FP, R3 
    /*00025270*/ CMPEQ       SL, R2 
    /*00025274*/ BHI         VENC_StartOneFrameJpeg_x252d8
    /*00025278*/ ADDS        R2, SL, R0 
    /*0002527c*/ ADC         R3, FP, R1 
    /*00025280*/ LDRD        R0, [SP, #8] 
    /*00025284*/ CMP         R1, R3 
    /*00025288*/ CMPEQ       R0, R2 
    /*0002528c*/ BHI         VENC_StartOneFrameJpeg_x252d8
    /*00025290*/ STRD        SL, [R4, IP] 
    /*00025294*/ B           VENC_StartOneFrameJpeg_x24ef0
    VENC_StartOneFrameJpeg_x25298:
    /*00025298*/ MOV         R0, R5 
    /*0002529c*/ MOV         R1, R7 
    /*000252a0*/ BL          0x00000000000252A0          @ VencPutOsd [R_ARM_CALL: .text+0x18c0] 
    /*000252a4*/ B           VENC_StartOneFrameJpeg_x24fbc
    VENC_StartOneFrameJpeg_x252a8:
    /*000252a8*/ MOVW        R2, #0                      @ .LC154 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa29c] 
    /*000252ac*/ MOVT        R2, #0                      @ .LC154 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa29c] 
    /*000252b0*/ MOVW        R3, #5290                   @ 0x14aa 
    /*000252b4*/ STR         R5, [SP, #4] 
    /*000252b8*/ STR         R3, [SP] 
    VENC_StartOneFrameJpeg_x252bc:
    /*000252bc*/ LDR         R3, [PC, #132]              @ 0x0000000000025348 
    /*000252c0*/ MOV         R1, #8 
    /*000252c4*/ MOV         R0, #3 
    /*000252c8*/ MOVW        SL, #32773                  @ 0x8005 
    /*000252cc*/ BL          0x00000000000252CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000252d0*/ MOVT        SL, #40968                  @ 0xa008 
    /*000252d4*/ B           VENC_StartOneFrameJpeg_x24f68
    VENC_StartOneFrameJpeg_x252d8:
    /*000252d8*/ LDRD        R0, [SP, #8] 
    /*000252dc*/ MOVW        R3, #13408                  @ 0x3460 
    /*000252e0*/ STRD        R0, [R4, R3] 
    /*000252e4*/ B           VENC_StartOneFrameJpeg_x24ef0
    VENC_StartOneFrameJpeg_x252e8:
    /*000252e8*/ MOV         R0, R5 
    /*000252ec*/ MOV         R1, R7 
    /*000252f0*/ BL          0x00000000000252F0          @ VencPutOsd [R_ARM_CALL: .text+0x18c0] 
    /*000252f4*/ B           VENC_StartOneFrameJpeg_x25140
    VENC_StartOneFrameJpeg_x252f8:
    /*000252f8*/ MOVW        R3, #5307                   @ 0x14bb 
    /*000252fc*/ MOVW        R2, #0                      @ .LC156 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa344] 
    /*00025300*/ STR         R3, [SP] 
    /*00025304*/ MOVT        R2, #0                      @ .LC156 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa344] 
    /*00025308*/ LDR         R3, [PC, #56]               @ 0x0000000000025348 
    /*0002530c*/ MOV         R1, #8 
    /*00025310*/ MOV         R0, #3 
    /*00025314*/ MOVW        SL, #32776                  @ 0x8008 
    /*00025318*/ BL          0x0000000000025318          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002531c*/ MOVT        SL, #40968                  @ 0xa008 
    /*00025320*/ B           VENC_StartOneFrameJpeg_x24f68
    VENC_StartOneFrameJpeg_x25324:
    /*00025324*/ MOVW        R3, #5297                   @ 0x14b1 
    /*00025328*/ MOVW        R2, #0                      @ .LC155 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa2e0] 
    /*0002532c*/ STR         R5, [SP, #4] 
    /*00025330*/ MOVT        R2, #0                      @ .LC155 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa2e0] 
    /*00025334*/ STR         R3, [SP] 
    /*00025338*/ B           VENC_StartOneFrameJpeg_x252bc
    /*0002533c*/ NOP         {0} 
    /*00025340*/ TEQEQ       R1, R0, LSL #26 
    /*00025344*/ ANDEQ       R0, R0, R0 
    /*00025348*/ LDRDEQ      R1, [R0], -R8 
FUNC_END VENC_StartOneFrameJpeg


FUNC_BEGIN VENC_IntHandlerJpeg
    /*0002534c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00025350*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00025354*/ MOV         R6, R1 
    /*00025358*/ MOV         R5, R0 
    /*0002535c*/ BL          0x000000000002535C          @ MkpVencCheckChn [R_ARM_CALL: .text+0x7ac] 
    /*00025360*/ SUBS        R4, R0, #0 
    /*00025364*/ BEQ         VENC_IntHandlerJpeg_x25374
    VENC_IntHandlerJpeg_x25368:
    /*00025368*/ MOV         R0, R4 
    /*0002536c*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00025370*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VENC_IntHandlerJpeg_x25374:
    /*00025374*/ MOV         R0, R5 
    /*00025378*/ BL          0x0000000000025378          @ MkpVencCheckChnCreated [R_ARM_CALL: .text+0x7d4] 
    /*0002537c*/ SUBS        R4, R0, #0 
    /*00025380*/ BNE         VENC_IntHandlerJpeg_x25368
    /*00025384*/ MOV         R0, R5 
    /*00025388*/ BL          0x0000000000025388          @ MkpVencCheckChnRegistered [R_ARM_CALL: .text+0x800] 
    /*0002538c*/ SUBS        R4, R0, #0 
    /*00025390*/ BNE         VENC_IntHandlerJpeg_x25368
    /*00025394*/ CMP         R6, #0 
    /*00025398*/ BEQ         VENC_IntHandlerJpeg_x258e0
    /*0002539c*/ MOVW        R3, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000253a0*/ MOVT        R3, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000253a4*/ MOVW        R7, #36240                  @ 0x8d90 
    /*000253a8*/ MOVW        R0, #1002                   @ 0x3ea 
    /*000253ac*/ LDR         R3, [R3] 
    /*000253b0*/ MOV         R8, #1 
    /*000253b4*/ STR         R8, [SP, #12] 
    /*000253b8*/ MLA         R7, R7, R5, R3 
    /*000253bc*/ ADD         R1, R7, #12288              @ 0x3000 
    /*000253c0*/ LDR         R2, [R7, #4] 
    /*000253c4*/ LDR         R3, [R1, #48]               @ 0x30 
    /*000253c8*/ CMP         R2, R0 
    /*000253cc*/ STR         R4, [SP, #32] 
    /*000253d0*/ ADD         R3, R3, R8 
    /*000253d4*/ LDR         R4, [R7, #56]               @ 0x38 
    /*000253d8*/ STR         R6, [SP, #28] 
    /*000253dc*/ STR         R8, [SP, #16] 
    /*000253e0*/ STR         R3, [R1, #48]               @ 0x30 
    /*000253e4*/ BEQ         VENC_IntHandlerJpeg_x25524
    /*000253e8*/ MOVW        R3, #1006                   @ 0x3ee 
    /*000253ec*/ CMP         R2, R3 
    /*000253f0*/ BEQ         VENC_IntHandlerJpeg_x254bc
    /*000253f4*/ CMP         R2, #26 
    /*000253f8*/ BEQ         VENC_IntHandlerJpeg_x25524
    /*000253fc*/ MOVW        R3, #5500                   @ 0x157c 
    /*00025400*/ MOV         R0, R8 
    /*00025404*/ STR         R3, [SP] 
    /*00025408*/ MOVW        R2, #0                      @ .LC157 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa384] 
    /*0002540c*/ LDR         R3, [PC, #1268]             @ 0x0000000000025908 
    /*00025410*/ MOVT        R2, #0                      @ .LC157 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa384] 
    /*00025414*/ MOV         R1, #8 
    /*00025418*/ MOVW        R4, #32776                  @ 0x8008 
    /*0002541c*/ BL          0x000000000002541C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00025420*/ MOVT        R4, #40968                  @ 0xa008 
    VENC_IntHandlerJpeg_x25424:
    /*00025424*/ LDR         R3, [SP, #32] 
    /*00025428*/ ADD         R6, R7, #32768              @ 0x8000 
    /*0002542c*/ LDR         R8, [SP, #12] 
    /*00025430*/ STR         R3, [R6, #3336]             @ 0xd08 
    /*00025434*/ CMP         R8, #1 
    /*00025438*/ LDR         R2, [R7, #80]               @ 0x50 
    /*0002543c*/ LDR         R2, [R2, #232]              @ 0xe8 
    /*00025440*/ STR         R2, [R6, #3340]             @ 0xd0c 
    /*00025444*/ BEQ         VENC_IntHandlerJpeg_x2559c
    /*00025448*/ CMP         R3, #2 
    /*0002544c*/ BEQ         VENC_IntHandlerJpeg_x254e0
    /*00025450*/ ADD         R5, R7, #64                 @ 0x40 
    /*00025454*/ ADD         R9, SP, #8 
    /*00025458*/ MOV         R0, R5 
    /*0002545c*/ MOV         R1, R9 
    /*00025460*/ BL          0x0000000000025460          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00025464*/ LDR         R3, [R6, #3344]             @ 0xd10 
    /*00025468*/ CMP         R3, #3 
    /*0002546c*/ BEQ         VENC_IntHandlerJpeg_x25634
    /*00025470*/ CMP         R3, #0 
    /*00025474*/ BNE         VENC_IntHandlerJpeg_x2557c
    /*00025478*/ LDRB        R3, [R6, #3352]             @ 0xd18 
    /*0002547c*/ CMP         R3, #0 
    /*00025480*/ BNE         VENC_IntHandlerJpeg_x25720
    VENC_IntHandlerJpeg_x25484:
    /*00025484*/ LDR         R3, [R7, #80]               @ 0x50 
    /*00025488*/ LDR         R3, [R3, #384]              @ 0x180 
    /*0002548c*/ CMP         R3, #0 
    /*00025490*/ BEQ         VENC_IntHandlerJpeg_x25804
    VENC_IntHandlerJpeg_x25494:
    /*00025494*/ MOV         R3, #1 
    /*00025498*/ STR         R3, [R6, #3344]             @ 0xd10 
    VENC_IntHandlerJpeg_x2549c:
    /*0002549c*/ MOV         R3, #0 
    /*000254a0*/ MOV         R1, R9 
    /*000254a4*/ MOV         R0, R5 
    /*000254a8*/ STR         R3, [R6, #3360]             @ 0xd20 
    /*000254ac*/ BL          0x00000000000254AC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VENC_IntHandlerJpeg_x254b0:
    /*000254b0*/ MOV         R3, #0 
    /*000254b4*/ STR         R3, [R7, #80]               @ 0x50 
    /*000254b8*/ B           VENC_IntHandlerJpeg_x25368
    VENC_IntHandlerJpeg_x254bc:
    /*000254bc*/ MOV         R0, #44                     @ 0x2c 
    /*000254c0*/ BL          0x00000000000254C0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000254c4*/ MOV         R1, R8 
    /*000254c8*/ ADD         R2, SP, #12 
    /*000254cc*/ LDR         R3, [R0, #16] 
    /*000254d0*/ MOV         R0, R4 
    /*000254d4*/ BLX         R3 
    /*000254d8*/ MOV         R4, R0 
    /*000254dc*/ B           VENC_IntHandlerJpeg_x25424
    VENC_IntHandlerJpeg_x254e0:
    /*000254e0*/ LDRB        R3, [R6, #3352]             @ 0xd18 
    /*000254e4*/ CMP         R3, #0 
    /*000254e8*/ LDR         R3, [R6, #3344]             @ 0xd10 
    /*000254ec*/ BNE         VENC_IntHandlerJpeg_x25548
    /*000254f0*/ CMP         R3, #3 
    /*000254f4*/ BNE         VENC_IntHandlerJpeg_x254b0
    /*000254f8*/ LDR         R3, [R6, #3360]             @ 0xd20 
    /*000254fc*/ CMP         R3, #1 
    /*00025500*/ BEQ         VENC_IntHandlerJpeg_x254b0
    /*00025504*/ MOVW        R3, #0                      @ .LC160 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa428] 
    /*00025508*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0002550c*/ MOVT        R3, #0                      @ .LC160 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa428] 
    /*00025510*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*00025514*/ MOVW        R2, #5714                   @ 0x1652 
    /*00025518*/ LDR         R1, [PC, #1000]             @ 0x0000000000025908 
    /*0002551c*/ BL          0x000000000002551C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00025520*/ B           VENC_IntHandlerJpeg_x254b0
    VENC_IntHandlerJpeg_x25524:
    /*00025524*/ MOV         R0, #11 
    /*00025528*/ BL          0x0000000000025528          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002552c*/ ADD         R2, SP, #12 
    /*00025530*/ MOV         R1, #1 
    /*00025534*/ LDR         R3, [R0, #36]               @ 0x24 
    /*00025538*/ MOV         R0, R4 
    /*0002553c*/ BLX         R3 
    /*00025540*/ MOV         R4, R0 
    /*00025544*/ B           VENC_IntHandlerJpeg_x25424
    VENC_IntHandlerJpeg_x25548:
    /*00025548*/ CMP         R3, #0 
    /*0002554c*/ BNE         VENC_IntHandlerJpeg_x254b0
    /*00025550*/ LDR         R3, [R6, #3360]             @ 0xd20 
    /*00025554*/ CMP         R3, #1 
    /*00025558*/ BEQ         VENC_IntHandlerJpeg_x254b0
    /*0002555c*/ MOVW        R3, #0                      @ .LC160 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa428] 
    /*00025560*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*00025564*/ MOVT        R3, #0                      @ .LC160 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa428] 
    /*00025568*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*0002556c*/ MOVW        R2, #5722                   @ 0x165a 
    /*00025570*/ LDR         R1, [PC, #912]              @ 0x0000000000025908 
    /*00025574*/ BL          0x0000000000025574          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00025578*/ B           VENC_IntHandlerJpeg_x254b0
    VENC_IntHandlerJpeg_x2557c:
    /*0002557c*/ CMP         R3, #1 
    /*00025580*/ BNE         VENC_IntHandlerJpeg_x25678
    /*00025584*/ LDR         R3, [R7, #80]               @ 0x50 
    /*00025588*/ LDR         R3, [R3, #384]              @ 0x180 
    /*0002558c*/ CMP         R3, #2 
    /*00025590*/ BNE         VENC_IntHandlerJpeg_x2549c
    VENC_IntHandlerJpeg_x25594:
    /*00025594*/ STR         R3, [R6, #3344]             @ 0xd10 
    /*00025598*/ B           VENC_IntHandlerJpeg_x2549c
    VENC_IntHandlerJpeg_x2559c:
    /*0002559c*/ ADD         SL, R7, #64                 @ 0x40 
    /*000255a0*/ ADD         R9, SP, #8 
    /*000255a4*/ MOV         R0, SL 
    /*000255a8*/ MOV         R1, R9 
    /*000255ac*/ BL          0x00000000000255AC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000255b0*/ LDRB        R3, [R6, #3352]             @ 0xd18 
    /*000255b4*/ CMP         R3, #0 
    /*000255b8*/ BNE         VENC_IntHandlerJpeg_x25698
    /*000255bc*/ ADD         R3, R7, #8192               @ 0x2000 
    /*000255c0*/ LDR         R3, [R3, #3768]             @ 0xeb8 
    /*000255c4*/ CMP         R3, #0 
    /*000255c8*/ BNE         VENC_IntHandlerJpeg_x2584c
    VENC_IntHandlerJpeg_x255cc:
    /*000255cc*/ LDR         R3, [R7, #80]               @ 0x50 
    /*000255d0*/ LDR         R3, [R3, #384]              @ 0x180 
    /*000255d4*/ CMP         R3, #0 
    /*000255d8*/ BNE         VENC_IntHandlerJpeg_x25824
    VENC_IntHandlerJpeg_x255dc:
    /*000255dc*/ MOV         R1, #0 
    /*000255e0*/ MOV         R0, R5 
    /*000255e4*/ BL          0x00000000000255E4          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*000255e8*/ SUBS        R8, R0, #0 
    /*000255ec*/ BEQ         VENC_IntHandlerJpeg_x25608
    VENC_IntHandlerJpeg_x255f0:
    /*000255f0*/ LDR         R3, [R8, #336]              @ 0x150 
    /*000255f4*/ ADD         R8, R8, #336                @ 0x150 
    /*000255f8*/ CMP         R3, #0 
    /*000255fc*/ BNE         VENC_IntHandlerJpeg_x257f4
    VENC_IntHandlerJpeg_x25600:
    /*00025600*/ MOV         R0, R8 
    /*00025604*/ BL          0x0000000000025604          @ VencPutFrmAddInfo [R_ARM_CALL: .text+0x1320] 
    VENC_IntHandlerJpeg_x25608:
    /*00025608*/ MOV         R3, #1 
    /*0002560c*/ MOV         R0, R7 
    /*00025610*/ STR         R3, [R6, #3360]             @ 0xd20 
    /*00025614*/ BL          0x0000000000025614          @ VencDecSnapEnc [R_ARM_CALL: .text+0x33a4] 
    VENC_IntHandlerJpeg_x25618:
    /*00025618*/ ADD         R0, R7, #12352              @ 0x3040 
    /*0002561c*/ ADD         R0, R0, #56                 @ 0x38 
    /*00025620*/ BL          0x0000000000025620          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00025624*/ MOV         R1, R9 
    /*00025628*/ MOV         R0, SL 
    /*0002562c*/ BL          0x000000000002562C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00025630*/ B           VENC_IntHandlerJpeg_x254b0
    VENC_IntHandlerJpeg_x25634:
    /*00025634*/ LDRB        R3, [R6, #3352]             @ 0xd18 
    /*00025638*/ CMP         R3, #0 
    /*0002563c*/ BEQ         VENC_IntHandlerJpeg_x25594
    /*00025640*/ MOV         R3, #1 
    /*00025644*/ STR         R3, [R6, #3344]             @ 0xd10 
    /*00025648*/ LDR         R3, [R7, #80]               @ 0x50 
    /*0002564c*/ LDR         R3, [R3, #384]              @ 0x180 
    /*00025650*/ CMP         R3, #0 
    /*00025654*/ BNE         VENC_IntHandlerJpeg_x2549c
    /*00025658*/ MOVW        R3, #0                      @ .LC158 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa3bc] 
    /*0002565c*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*00025660*/ MOVT        R3, #0                      @ .LC158 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa3bc] 
    /*00025664*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*00025668*/ MOVW        R2, #5668                   @ 0x1624 
    /*0002566c*/ LDR         R1, [PC, #660]              @ 0x0000000000025908 
    /*00025670*/ BL          0x0000000000025670          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00025674*/ B           VENC_IntHandlerJpeg_x2549c
    VENC_IntHandlerJpeg_x25678:
    /*00025678*/ MOVW        R3, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x84c8] 
    /*0002567c*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*00025680*/ MOVT        R3, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x84c8] 
    /*00025684*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*00025688*/ MOVW        R2, #5702                   @ 0x1646 
    /*0002568c*/ LDR         R1, [PC, #628]              @ 0x0000000000025908 
    /*00025690*/ BL          0x0000000000025690          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00025694*/ B           VENC_IntHandlerJpeg_x2549c
    VENC_IntHandlerJpeg_x25698:
    /*00025698*/ LDR         FP, [R6, #3344]             @ 0xd10 
    /*0002569c*/ CMP         FP, #0 
    /*000256a0*/ BNE         VENC_IntHandlerJpeg_x25790
    /*000256a4*/ LDR         R3, [SP, #32] 
    /*000256a8*/ CMP         R3, #1 
    /*000256ac*/ BEQ         VENC_IntHandlerJpeg_x258a8
    /*000256b0*/ MOV         R0, R8 
    /*000256b4*/ BL          0x00000000000256B4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000256b8*/ LDR         R3, [R0, #104]              @ 0x68 
    /*000256bc*/ MOV         R0, R8 
    /*000256c0*/ BLX         R3 
    /*000256c4*/ CMP         R0, #0 
    /*000256c8*/ BEQ         VENC_IntHandlerJpeg_x2585c
    /*000256cc*/ ADD         R3, R7, #8192               @ 0x2000 
    /*000256d0*/ LDR         R3, [R3, #3768]             @ 0xeb8 
    /*000256d4*/ CMP         R3, #0 
    /*000256d8*/ BEQ         VENC_IntHandlerJpeg_x2585c
    /*000256dc*/ MOV         R3, #3 
    /*000256e0*/ STR         FP, [R6, #3360]             @ 0xd20 
    /*000256e4*/ STR         R3, [R6, #3344]             @ 0xd10 
    VENC_IntHandlerJpeg_x256e8:
    /*000256e8*/ LDRB        R1, [R6, #3264]             @ 0xcc0 
    /*000256ec*/ CMP         R1, #0 
    /*000256f0*/ BNE         VENC_IntHandlerJpeg_x25878
    /*000256f4*/ MOV         R0, R5 
    /*000256f8*/ BL          0x00000000000256F8          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*000256fc*/ SUBS        R6, R0, #0 
    /*00025700*/ BEQ         VENC_IntHandlerJpeg_x25618
    /*00025704*/ LDR         R3, [R6, #336]              @ 0x150 
    /*00025708*/ ADD         R6, R6, #336                @ 0x150 
    /*0002570c*/ CMP         R3, #0 
    /*00025710*/ BNE         VENC_IntHandlerJpeg_x258d0
    VENC_IntHandlerJpeg_x25714:
    /*00025714*/ MOV         R0, R6 
    /*00025718*/ BL          0x0000000000025718          @ VencPutFrmAddInfo [R_ARM_CALL: .text+0x1320] 
    /*0002571c*/ B           VENC_IntHandlerJpeg_x25618
    VENC_IntHandlerJpeg_x25720:
    /*00025720*/ MOVW        R3, #0                      @ .LC159 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa408] 
    /*00025724*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*00025728*/ MOVT        R3, #0                      @ .LC159 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa408] 
    /*0002572c*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*00025730*/ MOVW        R2, #5673                   @ 0x1629 
    /*00025734*/ LDR         R1, [PC, #460]              @ 0x0000000000025908 
    /*00025738*/ BL          0x0000000000025738          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0002573c*/ LDRB        R3, [R6, #3352]             @ 0xd18 
    /*00025740*/ CMP         R3, #0 
    /*00025744*/ BEQ         VENC_IntHandlerJpeg_x25484
    /*00025748*/ ADD         R3, R7, #8192               @ 0x2000 
    /*0002574c*/ LDR         R3, [R3, #3768]             @ 0xeb8 
    /*00025750*/ CMP         R3, #0 
    /*00025754*/ MOVNE       R3, #3 
    /*00025758*/ STRNE       R3, [R6, #3344]             @ 0xd10 
    /*0002575c*/ BNE         VENC_IntHandlerJpeg_x2549c
    /*00025760*/ LDR         R3, [R7, #80]               @ 0x50 
    /*00025764*/ LDR         R3, [R3, #384]              @ 0x180 
    /*00025768*/ CMP         R3, #0 
    /*0002576c*/ BNE         VENC_IntHandlerJpeg_x25494
    /*00025770*/ MOVW        R3, #0                      @ .LC158 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa3bc] 
    /*00025774*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*00025778*/ MOVT        R3, #0                      @ .LC158 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa3bc] 
    /*0002577c*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*00025780*/ MOVW        R2, #5687                   @ 0x1637 
    /*00025784*/ LDR         R1, [PC, #380]              @ 0x0000000000025908 
    /*00025788*/ BL          0x0000000000025788          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0002578c*/ B           VENC_IntHandlerJpeg_x25494
    VENC_IntHandlerJpeg_x25790:
    /*00025790*/ ADD         R3, R7, #8192               @ 0x2000 
    /*00025794*/ LDR         R3, [R3, #3768]             @ 0xeb8 
    /*00025798*/ CMP         R3, #0 
    /*0002579c*/ BNE         VENC_IntHandlerJpeg_x25888
    /*000257a0*/ LDR         R3, [R7, #80]               @ 0x50 
    /*000257a4*/ LDR         R3, [R3, #384]              @ 0x180 
    /*000257a8*/ CMP         R3, #0 
    /*000257ac*/ BEQ         VENC_IntHandlerJpeg_x25608
    VENC_IntHandlerJpeg_x257b0:
    /*000257b0*/ MOV         R1, #1 
    /*000257b4*/ MOV         R0, R5 
    /*000257b8*/ BL          0x00000000000257B8          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*000257bc*/ LDR         R3, [R7, #80]               @ 0x50 
    /*000257c0*/ LDR         R1, [R3, #384]              @ 0x180 
    /*000257c4*/ CMP         R1, #2 
    /*000257c8*/ BNE         VENC_IntHandlerJpeg_x257d4
    /*000257cc*/ MOV         R0, R5 
    /*000257d0*/ BL          0x00000000000257D0          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    VENC_IntHandlerJpeg_x257d4:
    /*000257d4*/ LDRB        R3, [R6, #3264]             @ 0xcc0 
    /*000257d8*/ CMP         R3, #0 
    /*000257dc*/ CMPNE       R0, #0 
    /*000257e0*/ BEQ         VENC_IntHandlerJpeg_x25608
    /*000257e4*/ LDR         R3, [R0, #336]              @ 0x150 
    /*000257e8*/ ADD         R8, R0, #336                @ 0x150 
    /*000257ec*/ CMP         R3, #0 
    /*000257f0*/ BEQ         VENC_IntHandlerJpeg_x25600
    VENC_IntHandlerJpeg_x257f4:
    /*000257f4*/ MOV         R0, R5 
    /*000257f8*/ MOV         R1, R8 
    /*000257fc*/ BL          0x00000000000257FC          @ VencPutOsd [R_ARM_CALL: .text+0x18c0] 
    /*00025800*/ B           VENC_IntHandlerJpeg_x25600
    VENC_IntHandlerJpeg_x25804:
    /*00025804*/ MOVW        R3, #0                      @ .LC158 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa3bc] 
    /*00025808*/ MOVW        R0, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*0002580c*/ MOVT        R3, #0                      @ .LC158 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa3bc] 
    /*00025810*/ MOVT        R0, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*00025814*/ MOVW        R2, #5676                   @ 0x162c 
    /*00025818*/ LDR         R1, [PC, #232]              @ 0x0000000000025908 
    /*0002581c*/ BL          0x000000000002581C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00025820*/ B           VENC_IntHandlerJpeg_x25494
    VENC_IntHandlerJpeg_x25824:
    /*00025824*/ MOV         R1, #1 
    /*00025828*/ MOV         R0, R5 
    /*0002582c*/ BL          0x000000000002582C          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*00025830*/ LDR         R3, [R7, #80]               @ 0x50 
    /*00025834*/ LDR         R1, [R3, #384]              @ 0x180 
    /*00025838*/ CMP         R1, #2 
    /*0002583c*/ BNE         VENC_IntHandlerJpeg_x255dc
    /*00025840*/ MOV         R0, R5 
    /*00025844*/ BL          0x0000000000025844          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*00025848*/ B           VENC_IntHandlerJpeg_x255dc
    VENC_IntHandlerJpeg_x2584c:
    /*0002584c*/ MOV         R1, #3 
    /*00025850*/ MOV         R0, R5 
    /*00025854*/ BL          0x0000000000025854          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*00025858*/ B           VENC_IntHandlerJpeg_x255cc
    VENC_IntHandlerJpeg_x2585c:
    /*0002585c*/ LDRB        R3, [R6, #3264]             @ 0xcc0 
    /*00025860*/ CMP         R3, #0 
    /*00025864*/ MOV         R3, #1 
    /*00025868*/ BEQ         VENC_IntHandlerJpeg_x258c0
    /*0002586c*/ STR         R3, [R6, #3344]             @ 0xd10 
    /*00025870*/ MOV         R3, #0 
    /*00025874*/ STR         R3, [R6, #3360]             @ 0xd20 
    VENC_IntHandlerJpeg_x25878:
    /*00025878*/ MOV         R0, R5 
    /*0002587c*/ MOV         R1, #0 
    /*00025880*/ BL          0x0000000000025880          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*00025884*/ B           VENC_IntHandlerJpeg_x25618
    VENC_IntHandlerJpeg_x25888:
    /*00025888*/ MOV         R1, #3 
    /*0002588c*/ MOV         R0, R5 
    /*00025890*/ BL          0x0000000000025890          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*00025894*/ LDR         R3, [R7, #80]               @ 0x50 
    /*00025898*/ LDR         R3, [R3, #384]              @ 0x180 
    /*0002589c*/ CMP         R3, #0 
    /*000258a0*/ BEQ         VENC_IntHandlerJpeg_x257d4
    /*000258a4*/ B           VENC_IntHandlerJpeg_x257b0
    VENC_IntHandlerJpeg_x258a8:
    /*000258a8*/ MOV         R1, FP 
    /*000258ac*/ MOV         R0, R5 
    /*000258b0*/ BL          0x00000000000258B0          @ VencReleaseOnePic [R_ARM_CALL: .text+0x33c0] 
    /*000258b4*/ SUBS        R8, R0, #0 
    /*000258b8*/ BNE         VENC_IntHandlerJpeg_x255f0
    /*000258bc*/ B           VENC_IntHandlerJpeg_x25608
    VENC_IntHandlerJpeg_x258c0:
    /*000258c0*/ STR         R3, [R6, #3360]             @ 0xd20 
    /*000258c4*/ MOV         R0, R7 
    /*000258c8*/ BL          0x00000000000258C8          @ VencDecSnapEnc [R_ARM_CALL: .text+0x33a4] 
    /*000258cc*/ B           VENC_IntHandlerJpeg_x256e8
    VENC_IntHandlerJpeg_x258d0:
    /*000258d0*/ MOV         R0, R5 
    /*000258d4*/ MOV         R1, R6 
    /*000258d8*/ BL          0x00000000000258D8          @ VencPutOsd [R_ARM_CALL: .text+0x18c0] 
    /*000258dc*/ B           VENC_IntHandlerJpeg_x25714
    VENC_IntHandlerJpeg_x258e0:
    /*000258e0*/ MOVW        R3, #5468                   @ 0x155c 
    /*000258e4*/ MOVW        R2, #0                      @ .LC153 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa268] 
    /*000258e8*/ STR         R3, [SP] 
    /*000258ec*/ MOVT        R2, #0                      @ .LC153 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa268] 
    /*000258f0*/ LDR         R3, [PC, #16]               @ 0x0000000000025908 
    /*000258f4*/ MOV         R1, #8 
    /*000258f8*/ MOV         R0, #3 
    /*000258fc*/ MVN         R4, #0 
    /*00025900*/ BL          0x0000000000025900          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00025904*/ B           VENC_IntHandlerJpeg_x25368
    /*00025908*/ STRDEQ      R1, [R0], -R0 
FUNC_END VENC_IntHandlerJpeg


FUNC_BEGIN VENC_ConfigRegsCallBack
    /*0002590c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00025910*/ MOV         R6, R1 
    /*00025914*/ MOV         R7, R2 
    /*00025918*/ MOV         R5, R0 
    /*0002591c*/ BL          0x000000000002591C          @ MkpVencCheckChn [R_ARM_CALL: .text+0x7ac] 
    /*00025920*/ SUBS        R4, R0, #0 
    /*00025924*/ BEQ         VENC_ConfigRegsCallBack_x25930
    VENC_ConfigRegsCallBack_x25928:
    /*00025928*/ MOV         R0, R4 
    /*0002592c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VENC_ConfigRegsCallBack_x25930:
    /*00025930*/ MOV         R0, R5 
    /*00025934*/ BL          0x0000000000025934          @ MkpVencCheckChnCreated [R_ARM_CALL: .text+0x7d4] 
    /*00025938*/ SUBS        R4, R0, #0 
    /*0002593c*/ BNE         VENC_ConfigRegsCallBack_x25928
    /*00025940*/ MOV         R0, R5 
    /*00025944*/ BL          0x0000000000025944          @ MkpVencCheckChnRegistered [R_ARM_CALL: .text+0x800] 
    /*00025948*/ SUBS        R4, R0, #0 
    /*0002594c*/ BNE         VENC_ConfigRegsCallBack_x25928
    /*00025950*/ MOVW        R2, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00025954*/ MOVT        R2, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00025958*/ MOVW        R3, #36240                  @ 0x8d90 
    /*0002595c*/ MOV         R1, R6 
    /*00025960*/ LDR         R2, [R2] 
    /*00025964*/ MOV         R0, R5 
    /*00025968*/ MLA         R3, R3, R5, R2 
    /*0002596c*/ LDR         R2, [R3, #84]               @ 0x54 
    /*00025970*/ CMP         R2, #9 
    /*00025974*/ ADDNE       R3, R3, #12288              @ 0x3000 
    /*00025978*/ LDRNE       R2, [R3, #44]               @ 0x2c 
    /*0002597c*/ ADDNE       R2, R2, #1 
    /*00025980*/ STRNE       R2, [R3, #44]               @ 0x2c 
    /*00025984*/ MOV         R2, R7 
    /*00025988*/ BL          0x0000000000025988          @ VencConfigOneChn [R_ARM_CALL: .text+0x90c] 
    /*0002598c*/ B           VENC_ConfigRegsCallBack_x25928
FUNC_END VENC_ConfigRegsCallBack


FUNC_BEGIN VENC_ReadRegsCallBack
    /*00025990*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00025994*/ SUB         SP, SP, #12 
    /*00025998*/ MOV         R7, R1 
    /*0002599c*/ MOV         R6, R2 
    /*000259a0*/ MOV         R5, R0 
    /*000259a4*/ BL          0x00000000000259A4          @ MkpVencCheckChn [R_ARM_CALL: .text+0x7ac] 
    /*000259a8*/ SUBS        R4, R0, #0 
    /*000259ac*/ BEQ         VENC_ReadRegsCallBack_x259bc
    VENC_ReadRegsCallBack_x259b0:
    /*000259b0*/ MOV         R0, R4 
    /*000259b4*/ ADD         SP, SP, #12 
    /*000259b8*/ POP         {R4, R5, R6, R7, PC} 
    VENC_ReadRegsCallBack_x259bc:
    /*000259bc*/ MOV         R0, R5 
    /*000259c0*/ BL          0x00000000000259C0          @ MkpVencCheckChnCreated [R_ARM_CALL: .text+0x7d4] 
    /*000259c4*/ SUBS        R4, R0, #0 
    /*000259c8*/ BNE         VENC_ReadRegsCallBack_x259b0
    /*000259cc*/ MOV         R0, R5 
    /*000259d0*/ BL          0x00000000000259D0          @ MkpVencCheckChnRegistered [R_ARM_CALL: .text+0x800] 
    /*000259d4*/ SUBS        R4, R0, #0 
    /*000259d8*/ BNE         VENC_ReadRegsCallBack_x259b0
    /*000259dc*/ CMP         R6, #0 
    /*000259e0*/ BEQ         VENC_ReadRegsCallBack_x259f8
    /*000259e4*/ LDR         R2, [R6, #12] 
    /*000259e8*/ MOV         R1, R7 
    /*000259ec*/ MOV         R0, R5 
    /*000259f0*/ BL          0x00000000000259F0          @ VencReadOneChn [R_ARM_CALL: .text+0xab0] 
    /*000259f4*/ B           VENC_ReadRegsCallBack_x259b0
    VENC_ReadRegsCallBack_x259f8:
    /*000259f8*/ MOVW        R3, #5781                   @ 0x1695 
    /*000259fc*/ MOVW        R2, #0                      @ .LC153 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa268] 
    /*00025a00*/ STR         R3, [SP] 
    /*00025a04*/ MOVT        R2, #0                      @ .LC153 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa268] 
    /*00025a08*/ LDR         R3, [PC, #16]               @ 0x0000000000025a20 
    /*00025a0c*/ MOV         R1, #8 
    /*00025a10*/ MOV         R0, #3 
    /*00025a14*/ MVN         R4, #0 
    /*00025a18*/ BL          0x0000000000025A18          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00025a1c*/ B           VENC_ReadRegsCallBack_x259b0
    /*00025a20*/ ANDEQ       R1, R0, R4, LSL #4 
FUNC_END VENC_ReadRegsCallBack


FUNC_BEGIN VENC_DestroyGroupCallBack
    /*00025a24*/ MOV         R0, #0 
    /*00025a28*/ BX          LR 
FUNC_END VENC_DestroyGroupCallBack


FUNC_BEGIN VENC_StopChnRecvPic
    /*00025a2c*/ MOVW        R3, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00025a30*/ MOVT        R3, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00025a34*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00025a38*/ MOVW        R4, #36240                  @ 0x8d90 
    /*00025a3c*/ LDR         R3, [R3] 
    /*00025a40*/ SUB         SP, SP, #20 
    /*00025a44*/ MLA         R4, R4, R0, R3 
    /*00025a48*/ ADD         R6, R4, #12288              @ 0x3000 
    /*00025a4c*/ LDR         R3, [R6, #132]              @ 0x84 
    /*00025a50*/ CMP         R3, #0 
    /*00025a54*/ BNE         VENC_StopChnRecvPic_x25a64
    /*00025a58*/ LDR         R3, [R4, #16] 
    /*00025a5c*/ CMP         R3, #0 
    /*00025a60*/ BEQ         VENC_StopChnRecvPic_x25abc
    VENC_StopChnRecvPic_x25a64:
    /*00025a64*/ ADD         R7, R4, #64                 @ 0x40 
    /*00025a68*/ MOV         R5, R0 
    /*00025a6c*/ ADD         R1, SP, #12 
    /*00025a70*/ MOV         R0, R7 
    /*00025a74*/ BL          0x0000000000025A74          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00025a78*/ MOV         R3, #0 
    /*00025a7c*/ ADD         R1, SP, #12 
    /*00025a80*/ STR         R3, [R4, #16] 
    /*00025a84*/ MOV         R0, R7 
    /*00025a88*/ STR         R3, [R6, #132]              @ 0x84 
    /*00025a8c*/ STR         R3, [R6, #140]              @ 0x8c 
    /*00025a90*/ STR         R3, [R6, #136]              @ 0x88 
    /*00025a94*/ BL          0x0000000000025A94          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00025a98*/ MOVW        R3, #5825                   @ 0x16c1 
    /*00025a9c*/ MOVW        R2, #0                      @ .LC161 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa450] 
    /*00025aa0*/ STR         R3, [SP] 
    /*00025aa4*/ STR         R5, [SP, #4] 
    /*00025aa8*/ MOVT        R2, #0                      @ .LC161 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa450] 
    /*00025aac*/ LDR         R3, [PC, #20]               @ 0x0000000000025ac8 
    /*00025ab0*/ MOV         R1, #8 
    /*00025ab4*/ MOV         R0, #5 
    /*00025ab8*/ BL          0x0000000000025AB8          @ HI_LOG [R_ARM_CALL: +0x0] 
    VENC_StopChnRecvPic_x25abc:
    /*00025abc*/ MOV         R0, #0 
    /*00025ac0*/ ADD         SP, SP, #20 
    /*00025ac4*/ POP         {R4, R5, R6, R7, PC} 
    /*00025ac8*/ ANDEQ       R1, R0, IP, LSL R2 
FUNC_END VENC_StopChnRecvPic


FUNC_BEGIN VENC_InqStatInfo
    /*00025acc*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00025ad0*/ SUB         SP, SP, #12 
    /*00025ad4*/ MOV         R6, R1 
    /*00025ad8*/ MOV         R5, R0 
    /*00025adc*/ BL          0x0000000000025ADC          @ MkpVencCheckChn [R_ARM_CALL: .text+0x7ac] 
    /*00025ae0*/ SUBS        R4, R0, #0 
    /*00025ae4*/ BEQ         VENC_InqStatInfo_x25af4
    VENC_InqStatInfo_x25ae8:
    /*00025ae8*/ MOV         R0, R4 
    /*00025aec*/ ADD         SP, SP, #12 
    /*00025af0*/ POP         {R4, R5, R6, R7, PC} 
    VENC_InqStatInfo_x25af4:
    /*00025af4*/ MOV         R0, R5 
    /*00025af8*/ BL          0x0000000000025AF8          @ MkpVencCheckChnCreated [R_ARM_CALL: .text+0x7d4] 
    /*00025afc*/ SUBS        R4, R0, #0 
    /*00025b00*/ BNE         VENC_InqStatInfo_x25ae8
    /*00025b04*/ MOVW        R3, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00025b08*/ MOVT        R3, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00025b0c*/ MOVW        R2, #36240                  @ 0x8d90 
    /*00025b10*/ ADD         R1, SP, #4 
    /*00025b14*/ LDR         R3, [R3] 
    /*00025b18*/ MLA         R5, R2, R5, R3 
    /*00025b1c*/ ADD         R7, R5, #64                 @ 0x40 
    /*00025b20*/ MOV         R0, R7 
    /*00025b24*/ BL          0x0000000000025B24          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00025b28*/ ADD         R3, R5, #12288              @ 0x3000 
    /*00025b2c*/ MOV         R0, R7 
    /*00025b30*/ ADD         R1, SP, #4 
    /*00025b34*/ LDR         R2, [R3, #136]              @ 0x88 
    /*00025b38*/ STR         R2, [R6] 
    /*00025b3c*/ LDR         R3, [R3, #140]              @ 0x8c 
    /*00025b40*/ STR         R3, [R6, #4] 
    /*00025b44*/ LDR         R3, [R5, #3724]             @ 0xe8c 
    /*00025b48*/ STR         R3, [R6, #8] 
    /*00025b4c*/ LDR         R2, [R5, #3704]             @ 0xe78 
    /*00025b50*/ ADD         R3, R3, R2 
    /*00025b54*/ RSB         R3, R3, #6 
    /*00025b58*/ STR         R3, [R6, #12] 
    /*00025b5c*/ BL          0x0000000000025B5C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00025b60*/ MOV         R0, R4 
    /*00025b64*/ ADD         SP, SP, #12 
    /*00025b68*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END VENC_InqStatInfo


FUNC_BEGIN VENC_ModInit
    /*00025b6c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00025b70*/ MOVW        R0, #0                      @ .LC162 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa488] 
    /*00025b74*/ SUB         SP, SP, #8 
    /*00025b78*/ MOVT        R0, #0                      @ .LC162 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa488] 
    /*00025b7c*/ BL          0x0000000000025B7C          @ osal_createdev [R_ARM_CALL: +0x0] 
    /*00025b80*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xc0] 
    /*00025b84*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xc0] 
    /*00025b88*/ MOVW        R7, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x98] 
    /*00025b8c*/ MOVT        R7, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x98] 
    /*00025b90*/ ADD         R2, R6, #88                 @ 0x58 
    /*00025b94*/ LDR         R1, [R6, #4] 
    /*00025b98*/ SUB         R3, R1, #1 
    /*00025b9c*/ CMP         R3, #15 
    /*00025ba0*/ ADD         R3, R6, #120                @ 0x78 
    /*00025ba4*/ STR         R2, [R0, #56]               @ 0x38 
    /*00025ba8*/ MOV         R2, #2 
    /*00025bac*/ STR         R3, [R0, #60]               @ 0x3c 
    /*00025bb0*/ STR         R2, [R0, #52]               @ 0x34 
    /*00025bb4*/ STR         R0, [R7, #16] 
    /*00025bb8*/ BLS         VENC_ModInit_x25bd8
    /*00025bbc*/ MOVW        R0, #0                      @ .LC163 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa490] 
    /*00025bc0*/ MOV         R2, #16 
    /*00025bc4*/ MOVT        R0, #0                      @ .LC163 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa490] 
    /*00025bc8*/ BL          0x0000000000025BC8          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00025bcc*/ LDR         R0, [R7, #16] 
    /*00025bd0*/ MOV         R3, #16 
    /*00025bd4*/ STR         R3, [R6, #4] 
    VENC_ModInit_x25bd8:
    /*00025bd8*/ BL          0x0000000000025BD8          @ osal_registerdevice [R_ARM_CALL: +0x0] 
    /*00025bdc*/ SUBS        R9, R0, #0 
    /*00025be0*/ BNE         VENC_ModInit_x25d48
    /*00025be4*/ MOVW        R0, #0                      @ .LC162 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa488] 
    /*00025be8*/ MOV         R1, R9 
    /*00025bec*/ MOVT        R0, #0                      @ .LC162 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa488] 
    /*00025bf0*/ BL          0x0000000000025BF0          @ osal_create_proc_entry [R_ARM_CALL: +0x0] 
    /*00025bf4*/ CMP         R0, #0 
    /*00025bf8*/ BEQ         VENC_ModInit_x25dec
    /*00025bfc*/ LDR         R2, [R6, #4] 
    /*00025c00*/ MOVW        R4, #36240                  @ 0x8d90 
    /*00025c04*/ MOVW        R3, #0                      @ VencProcShow [R_ARM_MOVW_ABS_NC: .text+0x769c] 
    /*00025c08*/ MOVT        R3, #0                      @ VencProcShow [R_ARM_MOVT_ABS: .text+0x769c] 
    /*00025c0c*/ STR         R3, [R0, #60]               @ 0x3c 
    /*00025c10*/ MOVW        R5, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00025c14*/ MUL         R4, R4, R2 
    /*00025c18*/ MOVT        R5, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00025c1c*/ MOV         R0, R4 
    /*00025c20*/ BL          0x0000000000025C20          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00025c24*/ CMP         R0, #0 
    /*00025c28*/ STR         R0, [R5] 
    /*00025c2c*/ BEQ         VENC_ModInit_x25dc0
    /*00025c30*/ MOV         R2, R4 
    /*00025c34*/ MOV         R1, R9 
    /*00025c38*/ BL          0x0000000000025C38          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00025c3c*/ LDR         R0, [PC, #448]              @ 0x0000000000025e04 
    /*00025c40*/ BL          0x0000000000025C40          @ CMPI_RegisterModule [R_ARM_CALL: +0x0] 
    /*00025c44*/ CMP         R0, #0 
    /*00025c48*/ BNE         VENC_ModInit_x25d78
    /*00025c4c*/ MOVW        R0, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x98] 
    /*00025c50*/ MOVT        R0, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x98] 
    /*00025c54*/ BL          0x0000000000025C54          @ osal_atomic_init [R_ARM_CALL: +0x0] 
    /*00025c58*/ MOV         R1, R9 
    /*00025c5c*/ MOVW        R0, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x98] 
    /*00025c60*/ MOVT        R0, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x98] 
    /*00025c64*/ BL          0x0000000000025C64          @ osal_atomic_set [R_ARM_CALL: +0x0] 
    /*00025c68*/ LDR         R3, [R6, #4] 
    /*00025c6c*/ CMP         R3, #0 
    /*00025c70*/ MOVNE       R4, R9 
    /*00025c74*/ MOVNE       SL, R9 
    /*00025c78*/ MOVWNE      R8, #12432                  @ 0x3090 
    /*00025c7c*/ MOVWNE      R7, #12404                  @ 0x3074 
    /*00025c80*/ BEQ         VENC_ModInit_x25d18
    VENC_ModInit_x25c84:
    /*00025c84*/ LDR         R0, [R5] 
    /*00025c88*/ MOV         R1, #1 
    /*00025c8c*/ ADD         SL, SL, R1 
    /*00025c90*/ ADD         R0, R0, R4 
    /*00025c94*/ ADD         R0, R0, R8 
    /*00025c98*/ BL          0x0000000000025C98          @ osal_sema_init [R_ARM_CALL: +0x0] 
    /*00025c9c*/ LDR         R0, [R5] 
    /*00025ca0*/ ADD         R0, R0, R4 
    /*00025ca4*/ ADD         R0, R0, R7 
    /*00025ca8*/ BL          0x0000000000025CA8          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*00025cac*/ LDR         R0, [R5] 
    /*00025cb0*/ ADD         R0, R0, R4 
    /*00025cb4*/ ADD         R0, R0, #12352              @ 0x3040 
    /*00025cb8*/ ADD         R0, R0, #56                 @ 0x38 
    /*00025cbc*/ BL          0x0000000000025CBC          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*00025cc0*/ LDR         R0, [R5] 
    /*00025cc4*/ ADD         R0, R0, R4 
    /*00025cc8*/ ADD         R0, R0, #12352              @ 0x3040 
    /*00025ccc*/ ADD         R0, R0, #60                 @ 0x3c 
    /*00025cd0*/ BL          0x0000000000025CD0          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*00025cd4*/ LDR         R0, [R5] 
    /*00025cd8*/ ADD         R0, R0, R4 
    /*00025cdc*/ ADD         R0, R0, #12864              @ 0x3240 
    /*00025ce0*/ BL          0x0000000000025CE0          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*00025ce4*/ LDR         R0, [R5] 
    /*00025ce8*/ ADD         R0, R0, R4 
    /*00025cec*/ ADD         R0, R0, #64                 @ 0x40 
    /*00025cf0*/ BL          0x0000000000025CF0          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*00025cf4*/ LDR         R0, [R5] 
    /*00025cf8*/ ADD         R0, R0, R4 
    /*00025cfc*/ ADD         R4, R4, #36096              @ 0x8d00 
    /*00025d00*/ ADD         R0, R0, #60                 @ 0x3c 
    /*00025d04*/ ADD         R4, R4, #144                @ 0x90 
    /*00025d08*/ BL          0x0000000000025D08          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*00025d0c*/ LDR         R3, [R6, #4] 
    /*00025d10*/ CMP         R3, SL 
    /*00025d14*/ BHI         VENC_ModInit_x25c84
    VENC_ModInit_x25d18:
    /*00025d18*/ MOV         R1, #1 
    /*00025d1c*/ MOVW        R0, #0                      @ stModParamSem [R_ARM_MOVW_ABS_NC: .bss+0x90] 
    /*00025d20*/ MOVT        R0, #0                      @ stModParamSem [R_ARM_MOVT_ABS: .bss+0x90] 
    /*00025d24*/ BL          0x0000000000025D24          @ osal_sema_init [R_ARM_CALL: +0x0] 
    /*00025d28*/ MOVW        R1, #0                      @ .LC167 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa578] 
    /*00025d2c*/ MOVW        R0, #0                      @ .LC168 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa584] 
    /*00025d30*/ MOVT        R1, #0                      @ .LC167 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa578] 
    /*00025d34*/ MOVT        R0, #0                      @ .LC168 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa584] 
    /*00025d38*/ BL          0x0000000000025D38          @ osal_printk [R_ARM_CALL: +0x0] 
    VENC_ModInit_x25d3c:
    /*00025d3c*/ MOV         R0, R9 
    /*00025d40*/ ADD         SP, SP, #8 
    /*00025d44*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VENC_ModInit_x25d48:
    /*00025d48*/ LDR         R0, [R7, #16] 
    /*00025d4c*/ MVN         R9, #0 
    /*00025d50*/ BL          0x0000000000025D50          @ osal_destroydev [R_ARM_CALL: +0x0] 
    /*00025d54*/ MOVW        R3, #7005                   @ 0x1b5d 
    /*00025d58*/ MOVW        R2, #0                      @ .LC164 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa4d0] 
    /*00025d5c*/ STR         R3, [SP] 
    /*00025d60*/ MOVT        R2, #0                      @ .LC164 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa4d0] 
    /*00025d64*/ LDR         R3, [PC, #156]              @ 0x0000000000025e08 
    /*00025d68*/ MOV         R1, #8 
    /*00025d6c*/ MOV         R0, #3 
    /*00025d70*/ BL          0x0000000000025D70          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00025d74*/ B           VENC_ModInit_x25d3c
    VENC_ModInit_x25d78:
    /*00025d78*/ MOVW        R3, #7034                   @ 0x1b7a 
    /*00025d7c*/ MOVW        R2, #0                      @ .LC166 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa548] 
    /*00025d80*/ STR         R3, [SP] 
    /*00025d84*/ MOVT        R2, #0                      @ .LC166 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa548] 
    /*00025d88*/ LDR         R3, [PC, #120]              @ 0x0000000000025e08 
    /*00025d8c*/ MOV         R1, #8 
    /*00025d90*/ MOV         R0, #3 
    /*00025d94*/ BL          0x0000000000025D94          @ HI_LOG [R_ARM_CALL: +0x0] 
    VENC_ModInit_x25d98:
    /*00025d98*/ MOV         R1, R9 
    /*00025d9c*/ MOVW        R0, #0                      @ .LC162 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa488] 
    /*00025da0*/ MOVT        R0, #0                      @ .LC162 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa488] 
    /*00025da4*/ MVN         R9, #0 
    /*00025da8*/ BL          0x0000000000025DA8          @ osal_remove_proc_entry [R_ARM_CALL: +0x0] 
    /*00025dac*/ LDR         R0, [R7, #16] 
    /*00025db0*/ BL          0x0000000000025DB0          @ osal_deregisterdevice [R_ARM_CALL: +0x0] 
    /*00025db4*/ LDR         R0, [R7, #16] 
    /*00025db8*/ BL          0x0000000000025DB8          @ osal_destroydev [R_ARM_CALL: +0x0] 
    /*00025dbc*/ B           VENC_ModInit_x25d3c
    VENC_ModInit_x25dc0:
    /*00025dc0*/ LDR         R1, [R6, #4] 
    /*00025dc4*/ MOVW        R3, #7023                   @ 0x1b6f 
    /*00025dc8*/ MOVW        R2, #0                      @ .LC165 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa500] 
    /*00025dcc*/ STR         R3, [SP] 
    /*00025dd0*/ MOVT        R2, #0                      @ .LC165 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa500] 
    /*00025dd4*/ LDR         R3, [PC, #44]               @ 0x0000000000025e08 
    /*00025dd8*/ STR         R1, [SP, #4] 
    /*00025ddc*/ MOV         R0, #3 
    /*00025de0*/ MOV         R1, #8 
    /*00025de4*/ BL          0x0000000000025DE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00025de8*/ B           VENC_ModInit_x25d98
    VENC_ModInit_x25dec:
    /*00025dec*/ LDR         R0, [R7, #16] 
    /*00025df0*/ MVN         R9, #0 
    /*00025df4*/ BL          0x0000000000025DF4          @ osal_deregisterdevice [R_ARM_CALL: +0x0] 
    /*00025df8*/ LDR         R0, [R7, #16] 
    /*00025dfc*/ BL          0x0000000000025DFC          @ osal_destroydev [R_ARM_CALL: +0x0] 
    /*00025e00*/ B           VENC_ModInit_x25d3c
    /*00025e04*/ ANDEQ       R0, R0, R8, LSL #3 
    /*00025e08*/ ANDEQ       R1, R0, R0, LSR R2 
FUNC_END VENC_ModInit


FUNC_BEGIN VENC_ModExit
    /*00025e0c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00025e10*/ MOVW        R5, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00025e14*/ MOVT        R5, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00025e18*/ LDR         R3, [R5] 
    /*00025e1c*/ CMP         R3, #0 
    /*00025e20*/ BEQ         VENC_ModExit_x25ef0
    /*00025e24*/ MOVW        SL, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0xc0] 
    /*00025e28*/ MOVT        SL, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0xc0] 
    /*00025e2c*/ MOV         R0, #8 
    /*00025e30*/ BL          0x0000000000025E30          @ CMPI_UnRegisterModule [R_ARM_CALL: +0x0] 
    /*00025e34*/ LDR         R3, [SL, #4] 
    /*00025e38*/ CMP         R3, #0 
    /*00025e3c*/ BEQ         VENC_ModExit_x25ee0
    /*00025e40*/ MOV         R4, #0 
    /*00025e44*/ MOVW        R8, #12432                  @ 0x3090 
    /*00025e48*/ MOV         R9, R4 
    /*00025e4c*/ MOVW        R7, #12404                  @ 0x3074 
    /*00025e50*/ MOVW        R6, #12408                  @ 0x3078 
    VENC_ModExit_x25e54:
    /*00025e54*/ LDR         R0, [R5] 
    /*00025e58*/ ADD         R9, R9, #1 
    /*00025e5c*/ ADD         R0, R0, R4 
    /*00025e60*/ ADD         R0, R0, R8 
    /*00025e64*/ BL          0x0000000000025E64          @ osal_sema_destory [R_ARM_CALL: +0x0] 
    /*00025e68*/ LDR         R0, [R5] 
    /*00025e6c*/ ADD         R0, R0, R4 
    /*00025e70*/ ADD         R0, R0, R7 
    /*00025e74*/ BL          0x0000000000025E74          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*00025e78*/ LDR         R0, [R5] 
    /*00025e7c*/ ADD         R0, R0, R4 
    /*00025e80*/ ADD         R0, R0, R6 
    /*00025e84*/ BL          0x0000000000025E84          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*00025e88*/ LDR         R0, [R5] 
    /*00025e8c*/ ADD         R0, R0, R4 
    /*00025e90*/ ADD         R0, R0, #12352              @ 0x3040 
    /*00025e94*/ ADD         R0, R0, #60                 @ 0x3c 
    /*00025e98*/ BL          0x0000000000025E98          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*00025e9c*/ LDR         R0, [R5] 
    /*00025ea0*/ ADD         R0, R0, R4 
    /*00025ea4*/ ADD         R0, R0, #12864              @ 0x3240 
    /*00025ea8*/ BL          0x0000000000025EA8          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*00025eac*/ LDR         R0, [R5] 
    /*00025eb0*/ ADD         R0, R0, R4 
    /*00025eb4*/ ADD         R0, R0, #64                 @ 0x40 
    /*00025eb8*/ BL          0x0000000000025EB8          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*00025ebc*/ LDR         R0, [R5] 
    /*00025ec0*/ ADD         R0, R0, R4 
    /*00025ec4*/ ADD         R4, R4, #36096              @ 0x8d00 
    /*00025ec8*/ ADD         R0, R0, #60                 @ 0x3c 
    /*00025ecc*/ ADD         R4, R4, #144                @ 0x90 
    /*00025ed0*/ BL          0x0000000000025ED0          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*00025ed4*/ LDR         R3, [SL, #4] 
    /*00025ed8*/ CMP         R3, R9 
    /*00025edc*/ BHI         VENC_ModExit_x25e54
    VENC_ModExit_x25ee0:
    /*00025ee0*/ LDR         R0, [R5] 
    /*00025ee4*/ BL          0x0000000000025EE4          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00025ee8*/ MOV         R3, #0 
    /*00025eec*/ STR         R3, [R5] 
    VENC_ModExit_x25ef0:
    /*00025ef0*/ MOVW        R0, #0                      @ stModParamSem [R_ARM_MOVW_ABS_NC: .bss+0x90] 
    /*00025ef4*/ MOVW        R4, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x98] 
    /*00025ef8*/ MOVT        R0, #0                      @ stModParamSem [R_ARM_MOVT_ABS: .bss+0x90] 
    /*00025efc*/ MOVT        R4, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x98] 
    /*00025f00*/ BL          0x0000000000025F00          @ osal_sema_destory [R_ARM_CALL: +0x0] 
    /*00025f04*/ MOV         R1, #0 
    /*00025f08*/ MOVW        R0, #0                      @ .LC162 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa488] 
    /*00025f0c*/ MOVT        R0, #0                      @ .LC162 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa488] 
    /*00025f10*/ BL          0x0000000000025F10          @ osal_remove_proc_entry [R_ARM_CALL: +0x0] 
    /*00025f14*/ LDR         R0, [R4, #16] 
    /*00025f18*/ BL          0x0000000000025F18          @ osal_deregisterdevice [R_ARM_CALL: +0x0] 
    /*00025f1c*/ MOV         R0, R4 
    /*00025f20*/ BL          0x0000000000025F20          @ osal_atomic_destory [R_ARM_CALL: +0x0] 
    /*00025f24*/ MOVW        R1, #0                      @ .LC167 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa578] 
    /*00025f28*/ MOVW        R0, #0                      @ .LC169 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa5a0] 
    /*00025f2c*/ MOVT        R1, #0                      @ .LC167 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa578] 
    /*00025f30*/ MOVT        R0, #0                      @ .LC169 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa5a0] 
    /*00025f34*/ POP         {R4, R5, R6, R7, R8, R9, SL, LR} 
    VENC_ModExit_x25f38:
    /*00025f38*/ B           VENC_ModExit_x25f38         @ osal_printk [R_ARM_JUMP24: +0x0] 
FUNC_END VENC_ModExit


FUNC_BEGIN VENC_DRV_IsJpegSupportCmp
    /*00025f3c*/ MOV         R0, #1 
    /*00025f40*/ BX          LR 
FUNC_END VENC_DRV_IsJpegSupportCmp


FUNC_BEGIN VENC_DRV_CheckOsdFormat
    /*00025f44*/ PUSH        {R4, LR} 
    /*00025f48*/ SUBS        R4, R0, #0 
    /*00025f4c*/ BEQ         VENC_DRV_CheckOsdFormat_x25fa4
    VENC_DRV_CheckOsdFormat_x25f50:
    /*00025f50*/ LDR         R3, [R4, #16] 
    /*00025f54*/ CMP         R3, #1 
    /*00025f58*/ BLS         VENC_DRV_CheckOsdFormat_x25f9c
    /*00025f5c*/ LDR         R1, [R4, #116]              @ 0x74 
    /*00025f60*/ LDR         R2, [R4, #212]              @ 0xd4 
    /*00025f64*/ CMP         R2, R1 
    /*00025f68*/ MOVEQ       R1, #1 
    /*00025f6c*/ BEQ         VENC_DRV_CheckOsdFormat_x25f78
    /*00025f70*/ MOV         R0, #0 
    /*00025f74*/ POP         {R4, PC} 
    VENC_DRV_CheckOsdFormat_x25f78:
    /*00025f78*/ ADD         R1, R1, #1 
    /*00025f7c*/ ADD         R4, R4, #96                 @ 0x60 
    /*00025f80*/ CMP         R3, R1 
    /*00025f84*/ BEQ         VENC_DRV_CheckOsdFormat_x25f9c
    /*00025f88*/ LDR         R0, [R4, #212]              @ 0xd4 
    /*00025f8c*/ CMP         R0, R2 
    /*00025f90*/ BEQ         VENC_DRV_CheckOsdFormat_x25f78
    /*00025f94*/ MOV         R0, #0 
    /*00025f98*/ POP         {R4, PC} 
    VENC_DRV_CheckOsdFormat_x25f9c:
    /*00025f9c*/ MOV         R0, #1 
    /*00025fa0*/ POP         {R4, PC} 
    VENC_DRV_CheckOsdFormat_x25fa4:
    /*00025fa4*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa5c0] 
    /*00025fa8*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x1240] 
    /*00025fac*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa5c0] 
    /*00025fb0*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x1240] 
    /*00025fb4*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa5dc] 
    /*00025fb8*/ MOV         R2, #37                     @ 0x25 
    /*00025fbc*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa5dc] 
    /*00025fc0*/ BL          0x0000000000025FC0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00025fc4*/ B           VENC_DRV_CheckOsdFormat_x25f50
FUNC_END VENC_DRV_CheckOsdFormat


FUNC_BEGIN VENC_DRV_CheckType
    /*00025fc8*/ CMP         R0, #96                     @ 0x60 
    /*00025fcc*/ BEQ         VENC_DRV_CheckType_x25ffc
    /*00025fd0*/ BLS         VENC_DRV_CheckType_x25ff4
    /*00025fd4*/ MOVW        R3, #265                    @ 0x109 
    /*00025fd8*/ CMP         R0, R3 
    /*00025fdc*/ BEQ         VENC_DRV_CheckType_x25ffc
    /*00025fe0*/ MOVW        R3, #1002                   @ 0x3ea 
    /*00025fe4*/ CMP         R0, R3 
    /*00025fe8*/ BEQ         VENC_DRV_CheckType_x25ffc
    VENC_DRV_CheckType_x25fec:
    /*00025fec*/ MOV         R0, #0 
    /*00025ff0*/ BX          LR 
    VENC_DRV_CheckType_x25ff4:
    /*00025ff4*/ CMP         R0, #26 
    /*00025ff8*/ BNE         VENC_DRV_CheckType_x25fec
    VENC_DRV_CheckType_x25ffc:
    /*00025ffc*/ MOV         R0, #1 
    /*00026000*/ BX          LR 
FUNC_END VENC_DRV_CheckType


FUNC_BEGIN VENC_DRV_IsSupportGopMode
    /*00026004*/ SUB         R3, R0, #3 
    /*00026008*/ CMP         R3, #2 
    /*0002600c*/ BLS         VENC_DRV_IsSupportGopMode_x26050
    /*00026010*/ CMP         R0, #2 
    /*00026014*/ BEQ         VENC_DRV_IsSupportGopMode_x26028
    /*00026018*/ CMP         R0, #1 
    /*0002601c*/ BEQ         VENC_DRV_IsSupportGopMode_x26028
    /*00026020*/ MOV         R0, #1 
    /*00026024*/ BX          LR 
    VENC_DRV_IsSupportGopMode_x26028:
    /*00026028*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*0002602c*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00026030*/ LDR         R3, [R3] 
    /*00026034*/ LDRB        R0, [R3, #40]               @ 0x28 
    /*00026038*/ CMP         R0, #9 
    /*0002603c*/ CMPNE       R0, #12 
    /*00026040*/ MOVEQ       R0, #1 
    /*00026044*/ MOVNE       R0, #0 
    /*00026048*/ EOR         R0, R0, #1 
    /*0002604c*/ BX          LR 
    VENC_DRV_IsSupportGopMode_x26050:
    /*00026050*/ MOV         R0, #0 
    /*00026054*/ BX          LR 
FUNC_END VENC_DRV_IsSupportGopMode


FUNC_BEGIN VENC_DRV_CheckSnapMode
    /*00026058*/ MOV         R3, #1 
    /*0002605c*/ LSL         R0, R3, R0 
    /*00026060*/ AND         R0, R0, #3 
    /*00026064*/ BX          LR 
FUNC_END VENC_DRV_CheckSnapMode


FUNC_BEGIN VENC_DRV_CheckSupportRoiBg
    /*00026068*/ MOV         R0, #1 
    /*0002606c*/ BX          LR 
FUNC_END VENC_DRV_CheckSupportRoiBg


FUNC_BEGIN VENC_DRV_IsScale
    /*00026070*/ LDR         R2, [R0, #20] 
    /*00026074*/ LDR         R3, [R0] 
    /*00026078*/ CMP         R2, #0 
    /*0002607c*/ LDR         R0, [R0, #4] 
    /*00026080*/ BNE         VENC_DRV_IsScale_x260b0
    /*00026084*/ ADD         R1, R1, #12288              @ 0x3000 
    /*00026088*/ LDR         R2, [R1, #508]              @ 0x1fc 
    /*0002608c*/ CMP         R2, #1 
    /*00026090*/ LDR         R2, [R1, #148]              @ 0x94 
    /*00026094*/ LDREQ       R3, [R1, #520]              @ 0x208 
    /*00026098*/ LDREQ       R0, [R1, #524]              @ 0x20c 
    /*0002609c*/ CMP         R2, R3 
    /*000260a0*/ BEQ         VENC_DRV_IsScale_x26100
    /*000260a4*/ BCS         VENC_DRV_IsScale_x260ec
    VENC_DRV_IsScale_x260a8:
    /*000260a8*/ MOV         R0, #1 
    /*000260ac*/ BX          LR 
    VENC_DRV_IsScale_x260b0:
    /*000260b0*/ CMP         R2, #1 
    /*000260b4*/ BNE         VENC_DRV_IsScale_x260a8
    /*000260b8*/ ADD         R1, R1, #12288              @ 0x3000 
    /*000260bc*/ PUSH        {R4, LR} 
    /*000260c0*/ LDR         R2, [R1, #508]              @ 0x1fc 
    /*000260c4*/ CMP         R2, #1 
    /*000260c8*/ BEQ         VENC_DRV_IsScale_x26114
    /*000260cc*/ LDR         IP, [R1, #148]              @ 0x94 
    VENC_DRV_IsScale_x260d0:
    /*000260d0*/ CMP         R3, IP 
    /*000260d4*/ BHI         VENC_DRV_IsScale_x26124
    /*000260d8*/ LDR         R3, [R1, #152]              @ 0x98 
    /*000260dc*/ CMP         R0, R3 
    /*000260e0*/ MOVLS       R0, #0 
    /*000260e4*/ MOVHI       R0, #1 
    /*000260e8*/ POP         {R4, PC} 
    VENC_DRV_IsScale_x260ec:
    /*000260ec*/ LDR         R3, [R1, #152]              @ 0x98 
    VENC_DRV_IsScale_x260f0:
    /*000260f0*/ CMP         R0, R3 
    /*000260f4*/ MOVLS       R0, #0 
    /*000260f8*/ MOVHI       R0, #1 
    /*000260fc*/ BX          LR 
    VENC_DRV_IsScale_x26100:
    /*00026100*/ LDR         R3, [R1, #152]              @ 0x98 
    /*00026104*/ CMP         R3, R0, ASR #1 
    /*00026108*/ BNE         VENC_DRV_IsScale_x260f0
    /*0002610c*/ MOV         R0, #0 
    /*00026110*/ BX          LR 
    VENC_DRV_IsScale_x26114:
    /*00026114*/ LDR         IP, [R1, #520]              @ 0x208 
    /*00026118*/ LDR         LR, [R1, #148]              @ 0x94 
    /*0002611c*/ CMP         IP, LR 
    /*00026120*/ BEQ         VENC_DRV_IsScale_x2612c
    VENC_DRV_IsScale_x26124:
    /*00026124*/ MOV         R0, #1 
    /*00026128*/ POP         {R4, PC} 
    VENC_DRV_IsScale_x2612c:
    /*0002612c*/ LDR         R4, [R1, #524]              @ 0x20c 
    /*00026130*/ LDR         LR, [R1, #152]              @ 0x98 
    /*00026134*/ CMP         R4, LR 
    /*00026138*/ BNE         VENC_DRV_IsScale_x26124
    /*0002613c*/ B           VENC_DRV_IsScale_x260d0
FUNC_END VENC_DRV_IsScale


FUNC_BEGIN VENC_DRV_IsVgs
    /*00026140*/ ADD         R3, R1, #12288              @ 0x3000 
    /*00026144*/ PUSH        {R4, R5, R6, LR} 
    /*00026148*/ LDR         IP, [R3, #672]              @ 0x2a0 
    /*0002614c*/ CMP         IP, #1 
    /*00026150*/ MOVEQ       R4, #0 
    /*00026154*/ STREQ       R4, [R2] 
    /*00026158*/ BEQ         VENC_DRV_IsVgs_x2620c
    /*0002615c*/ MOV         IP, #0 
    /*00026160*/ LDR         R0, [R0] 
    /*00026164*/ STR         IP, [R2] 
    /*00026168*/ MOVW        IP, #1002                   @ 0x3ea 
    /*0002616c*/ LDR         R4, [R1, #4] 
    /*00026170*/ CMP         R4, IP 
    /*00026174*/ CMPNE       R4, #26 
    /*00026178*/ MOVEQ       R4, #1 
    /*0002617c*/ MOVNE       R4, #0 
    /*00026180*/ BNE         VENC_DRV_IsVgs_x261b4
    /*00026184*/ ADD         IP, R1, #8192               @ 0x2000 
    /*00026188*/ LDR         R4, [IP, #3768]             @ 0xeb8 
    /*0002618c*/ CMP         R4, #0 
    /*00026190*/ BNE         VENC_DRV_IsVgs_x261a4
    /*00026194*/ ADD         IP, R1, #32768              @ 0x8000 
    /*00026198*/ LDRB        IP, [IP, #3264]             @ 0xcc0 
    /*0002619c*/ CMP         IP, #0 
    /*000261a0*/ BEQ         VENC_DRV_IsVgs_x261b4
    VENC_DRV_IsVgs_x261a4:
    /*000261a4*/ LDR         R4, [R3, #508]              @ 0x1fc 
    /*000261a8*/ CMP         R4, #1 
    /*000261ac*/ MOVNE       R4, #1 
    /*000261b0*/ BEQ         VENC_DRV_IsVgs_x26228
    VENC_DRV_IsVgs_x261b4:
    /*000261b4*/ LDR         IP, [R0, #24] 
    /*000261b8*/ CMP         IP, #0 
    /*000261bc*/ BEQ         VENC_DRV_IsVgs_x261ec
    /*000261c0*/ LDR         IP, [R1, #4] 
    /*000261c4*/ MOVW        LR, #265                    @ 0x109 
    /*000261c8*/ CMP         IP, LR 
    /*000261cc*/ BEQ         VENC_DRV_IsVgs_x26244
    /*000261d0*/ MOVW        R3, #1006                   @ 0x3ee 
    /*000261d4*/ CMP         IP, R3 
    /*000261d8*/ BEQ         VENC_DRV_IsVgs_x261ec
    VENC_DRV_IsVgs_x261dc:
    /*000261dc*/ LDR         R3, [R2] 
    /*000261e0*/ MOV         R4, #1 
    /*000261e4*/ ORR         R3, R3, R4 
    /*000261e8*/ STR         R3, [R2] 
    VENC_DRV_IsVgs_x261ec:
    /*000261ec*/ LDR         R3, [R0, #16] 
    /*000261f0*/ MOV         R5, R2 
    /*000261f4*/ CMP         R3, #0 
    /*000261f8*/ BEQ         VENC_DRV_IsVgs_x26214
    VENC_DRV_IsVgs_x261fc:
    /*000261fc*/ LDR         R3, [R5] 
    /*00026200*/ MOV         R4, #1 
    /*00026204*/ ORR         R3, R3, R4 
    /*00026208*/ STR         R3, [R5] 
    VENC_DRV_IsVgs_x2620c:
    /*0002620c*/ MOV         R0, R4 
    /*00026210*/ POP         {R4, R5, R6, PC} 
    VENC_DRV_IsVgs_x26214:
    /*00026214*/ BL          0x0000000000026214          @ VENC_DRV_IsScale [R_ARM_CALL: .text+0x26070] 
    /*00026218*/ CMP         R0, #0 
    /*0002621c*/ BNE         VENC_DRV_IsVgs_x261fc
    /*00026220*/ MOV         R0, R4 
    /*00026224*/ POP         {R4, R5, R6, PC} 
    VENC_DRV_IsVgs_x26228:
    /*00026228*/ LDR         LR, [R3, #520]              @ 0x208 
    /*0002622c*/ LDR         IP, [R3, #148]              @ 0x94 
    /*00026230*/ CMP         LR, IP 
    /*00026234*/ BEQ         VENC_DRV_IsVgs_x26254
    VENC_DRV_IsVgs_x26238:
    /*00026238*/ MOV         IP, #1 
    /*0002623c*/ STR         IP, [R2] 
    /*00026240*/ B           VENC_DRV_IsVgs_x261b4
    VENC_DRV_IsVgs_x26244:
    /*00026244*/ LDR         R3, [R3, #632]              @ 0x278 
    /*00026248*/ CMP         R3, #0 
    /*0002624c*/ BNE         VENC_DRV_IsVgs_x261ec
    /*00026250*/ B           VENC_DRV_IsVgs_x261dc
    VENC_DRV_IsVgs_x26254:
    /*00026254*/ LDR         LR, [R3, #524]              @ 0x20c 
    /*00026258*/ LDR         IP, [R3, #152]              @ 0x98 
    /*0002625c*/ CMP         LR, IP 
    /*00026260*/ BNE         VENC_DRV_IsVgs_x26238
    /*00026264*/ B           VENC_DRV_IsVgs_x261b4
FUNC_END VENC_DRV_IsVgs


FUNC_BEGIN VENC_DRV_OUTPUTQUERYPICFORMAT
    /*00026268*/ MOVW        R3, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0002626c*/ MOVT        R3, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00026270*/ PUSH        {R4, R5, R6, LR} 
    /*00026274*/ MOV         R5, R1 
    /*00026278*/ LDR         R4, [R3] 
    /*0002627c*/ MOV         R6, R2 
    /*00026280*/ MOVW        R3, #36240                  @ 0x8d90 
    /*00026284*/ MLAS        R4, R3, R0, R4 
    /*00026288*/ BEQ         VENC_DRV_OUTPUTQUERYPICFORMAT_x262c0
    VENC_DRV_OUTPUTQUERYPICFORMAT_x2628c:
    /*0002628c*/ LDR         R2, [R4, #4] 
    /*00026290*/ MOVW        R1, #265                    @ 0x109 
    /*00026294*/ MOV         R3, #0 
    /*00026298*/ STR         R3, [R5, #20] 
    /*0002629c*/ CMP         R2, R1 
    /*000262a0*/ CMPNE       R2, #96                     @ 0x60 
    /*000262a4*/ STR         R3, [R5, #16] 
    /*000262a8*/ POPNE       {R4, R5, R6, PC} 
    /*000262ac*/ LDR         R3, [R6] 
    /*000262b0*/ CMP         R3, #8192                   @ 0x2000 
    /*000262b4*/ MOVLS       R3, #1 
    /*000262b8*/ STRLS       R3, [R5, #20] 
    /*000262bc*/ POP         {R4, R5, R6, PC} 
    VENC_DRV_OUTPUTQUERYPICFORMAT_x262c0:
    /*000262c0*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa61c] 
    /*000262c4*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa5dc] 
    /*000262c8*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa61c] 
    /*000262cc*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa5dc] 
    /*000262d0*/ MOVW        R2, #258                    @ 0x102 
    /*000262d4*/ LDR         R1, [PC, #4]                @ 0x00000000000262e0 
    /*000262d8*/ BL          0x00000000000262D8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000262dc*/ B           VENC_DRV_OUTPUTQUERYPICFORMAT_x2628c
    /*000262e0*/ ANDEQ       R1, R0, R8, ASR R2 
FUNC_END VENC_DRV_OUTPUTQUERYPICFORMAT


FUNC_BEGIN VENC_DRV_OUTPUTPICFORMAT
    /*000262e4*/ MOVW        R3, #0                      @ g_pstVencChn [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000262e8*/ MOVT        R3, #0                      @ g_pstVencChn [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000262ec*/ PUSH        {R4, R5, R6, LR} 
    /*000262f0*/ MOV         R5, R1 
    /*000262f4*/ LDR         R4, [R3] 
    /*000262f8*/ MOV         R6, R2 
    /*000262fc*/ MOVW        R3, #36240                  @ 0x8d90 
    /*00026300*/ MLAS        R4, R3, R0, R4 
    /*00026304*/ BEQ         VENC_DRV_OUTPUTPICFORMAT_x2635c
    VENC_DRV_OUTPUTPICFORMAT_x26308:
    /*00026308*/ LDR         R2, [R4, #4] 
    /*0002630c*/ MOV         R3, #0 
    /*00026310*/ STR         R3, [R5, #20] 
    /*00026314*/ STR         R3, [R5, #16] 
    /*00026318*/ LDR         R3, [R6] 
    /*0002631c*/ CMP         R3, #8192                   @ 0x2000 
    /*00026320*/ MOVLS       R3, #1 
    /*00026324*/ STRLS       R3, [R5, #20] 
    /*00026328*/ MOVW        R3, #265                    @ 0x109 
    /*0002632c*/ CMP         R2, R3 
    /*00026330*/ BEQ         VENC_DRV_OUTPUTPICFORMAT_x26340
    VENC_DRV_OUTPUTPICFORMAT_x26334:
    /*00026334*/ MOV         R3, #0 
    /*00026338*/ STR         R3, [R5, #24] 
    /*0002633c*/ POP         {R4, R5, R6, PC} 
    VENC_DRV_OUTPUTPICFORMAT_x26340:
    /*00026340*/ ADD         R3, R4, #12288              @ 0x3000 
    /*00026344*/ LDR         R3, [R3, #632]              @ 0x278 
    /*00026348*/ CMP         R3, #1 
    /*0002634c*/ BNE         VENC_DRV_OUTPUTPICFORMAT_x26334
    /*00026350*/ LDR         R3, [R6, #24] 
    /*00026354*/ STR         R3, [R5, #24] 
    /*00026358*/ POP         {R4, R5, R6, PC} 
    VENC_DRV_OUTPUTPICFORMAT_x2635c:
    /*0002635c*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa61c] 
    /*00026360*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa5dc] 
    /*00026364*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa61c] 
    /*00026368*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa5dc] 
    /*0002636c*/ MOVW        R2, #282                    @ 0x11a 
    /*00026370*/ LDR         R1, [PC, #4]                @ 0x000000000002637c 
    /*00026374*/ BL          0x0000000000026374          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00026378*/ B           VENC_DRV_OUTPUTPICFORMAT_x26308
    /*0002637c*/ ANDEQ       R1, R0, R8, ROR R2 
FUNC_END VENC_DRV_OUTPUTPICFORMAT


FUNC_BEGIN VENC_DRV_GetRgnCapacity
    /*00026380*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00026384*/ SUBS        R4, R0, #0 
    /*00026388*/ MOV         R5, R1 
    /*0002638c*/ BEQ         VENC_DRV_GetRgnCapacity_x26614
    VENC_DRV_GetRgnCapacity_x26390:
    /*00026390*/ MOV         R2, #328                    @ 0x148 
    /*00026394*/ MOV         R1, #0 
    /*00026398*/ MOV         R0, R4 
    /*0002639c*/ BL          0x000000000002639C          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000263a0*/ CMP         R5, #3 
    /*000263a4*/ MOV         R3, #0 
    /*000263a8*/ STR         R3, [R4, #320]              @ 0x140 
    /*000263ac*/ STR         R3, [R4, #324]              @ 0x144 
    /*000263b0*/ BEQ         VENC_DRV_GetRgnCapacity_x264ec
    /*000263b4*/ CMP         R5, #0 
    /*000263b8*/ POPNE       {R4, R5, R6, R7, R8, PC} 
    /*000263bc*/ MOV         R3, #1 
    /*000263c0*/ MOV         R2, #2 
    /*000263c4*/ MOVW        IP, #8190                   @ 0x1ffe 
    /*000263c8*/ MOV         R1, #8192                   @ 0x2000 
    /*000263cc*/ MOV         R0, #7 
    /*000263d0*/ STR         R2, [R4, #40]               @ 0x28 
    /*000263d4*/ STR         R0, [R4, #12] 
    /*000263d8*/ MOV         LR, #9 
    /*000263dc*/ STR         R2, [R4, #44]               @ 0x2c 
    /*000263e0*/ MOV         R0, #8 
    /*000263e4*/ STR         R2, [R4, #72]               @ 0x48 
    /*000263e8*/ MOV         R7, #67108864               @ 0x4000000 
    /*000263ec*/ STR         R2, [R4, #76]               @ 0x4c 
    /*000263f0*/ MOV         R6, #3 
    /*000263f4*/ STR         R2, [R4, #56]               @ 0x38 
    /*000263f8*/ STR         R2, [R4, #60]               @ 0x3c 
    /*000263fc*/ MOV         R2, #128                    @ 0x80 
    /*00026400*/ STR         IP, [R4, #32] 
    /*00026404*/ STR         IP, [R4, #36]               @ 0x24 
    /*00026408*/ MOV         IP, #12 
    /*0002640c*/ STR         R1, [R4, #64]               @ 0x40 
    /*00026410*/ STR         R1, [R4, #68]               @ 0x44 
    /*00026414*/ MOV         R1, #51                     @ 0x33 
    /*00026418*/ STR         LR, [R4, #144]              @ 0x90 
    /*0002641c*/ MVN         LR, #50                     @ 0x32 
    /*00026420*/ STR         IP, [R4, #148]              @ 0x94 
    /*00026424*/ MOV         IP, #64                     @ 0x40 
    /*00026428*/ STR         R5, [R4] 
    /*0002642c*/ STR         R5, [R4, #8] 
    /*00026430*/ STR         R5, [R4, #16] 
    /*00026434*/ STR         R5, [R4, #24] 
    /*00026438*/ STR         R5, [R4, #28] 
    /*0002643c*/ STR         R5, [R4, #52]               @ 0x34 
    /*00026440*/ STR         R5, [R4, #132]              @ 0x84 
    /*00026444*/ STR         R5, [R4, #160]              @ 0xa0 
    /*00026448*/ STR         R3, [R4, #4] 
    /*0002644c*/ STR         R3, [R4, #20] 
    /*00026450*/ STR         R3, [R4, #48]               @ 0x30 
    /*00026454*/ STR         R3, [R4, #124]              @ 0x7c 
    /*00026458*/ STR         R3, [R4, #128]              @ 0x80 
    /*0002645c*/ STR         R3, [R4, #156]              @ 0x9c 
    /*00026460*/ STR         R3, [R4, #164]              @ 0xa4 
    /*00026464*/ STR         R7, [R4, #80]               @ 0x50 
    /*00026468*/ STR         R6, [R4, #136]              @ 0x88 
    /*0002646c*/ STR         R0, [R4, #140]              @ 0x8c 
    /*00026470*/ STR         R2, [R4, #168]              @ 0xa8 
    /*00026474*/ STR         R5, [R4, #172]              @ 0xac 
    /*00026478*/ STR         R0, [R4, #316]              @ 0x13c 
    /*0002647c*/ STR         R3, [R4, #176]              @ 0xb0 
    /*00026480*/ STR         R3, [R4, #184]              @ 0xb8 
    /*00026484*/ STR         R2, [R4, #188]              @ 0xbc 
    /*00026488*/ STR         R3, [R4, #204]              @ 0xcc 
    /*0002648c*/ STR         R2, [R4, #208]              @ 0xd0 
    /*00026490*/ STR         R3, [R4, #216]              @ 0xd8 
    /*00026494*/ STR         R3, [R4, #220]              @ 0xdc 
    /*00026498*/ STR         R3, [R4, #224]              @ 0xe0 
    /*0002649c*/ STR         R3, [R4, #232]              @ 0xe8 
    /*000264a0*/ STR         R3, [R4, #240]              @ 0xf0 
    /*000264a4*/ STR         R3, [R4, #244]              @ 0xf4 
    /*000264a8*/ STR         R3, [R4, #252]              @ 0xfc 
    /*000264ac*/ STR         R3, [R4, #256]              @ 0x100 
    /*000264b0*/ STR         R3, [R4, #304]              @ 0x130 
    /*000264b4*/ STR         R3, [R4, #308]              @ 0x134 
    /*000264b8*/ STR         R5, [R4, #180]              @ 0xb4 
    /*000264bc*/ STR         R5, [R4, #192]              @ 0xc0 
    /*000264c0*/ STR         R5, [R4, #196]              @ 0xc4 
    /*000264c4*/ STR         R5, [R4, #200]              @ 0xc8 
    /*000264c8*/ STR         R5, [R4, #212]              @ 0xd4 
    /*000264cc*/ STR         R5, [R4, #236]              @ 0xec 
    /*000264d0*/ STR         R5, [R4, #248]              @ 0xf8 
    /*000264d4*/ STR         R5, [R4, #260]              @ 0x104 
    /*000264d8*/ STR         R1, [R4, #264]              @ 0x108 
    /*000264dc*/ STR         R1, [R4, #272]              @ 0x110 
    /*000264e0*/ STR         LR, [R4, #268]              @ 0x10c 
    /*000264e4*/ STR         IP, [R4, #312]              @ 0x138 
    /*000264e8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VENC_DRV_GetRgnCapacity_x264ec:
    /*000264ec*/ MOV         R2, #1 
    /*000264f0*/ MOV         R1, #2 
    /*000264f4*/ MOVW        IP, #8190                   @ 0x1ffe 
    /*000264f8*/ MOV         R0, #8192                   @ 0x2000 
    /*000264fc*/ MOV         LR, #7 
    /*00026500*/ STR         R5, [R4, #136]              @ 0x88 
    /*00026504*/ STR         LR, [R4, #12] 
    /*00026508*/ MOV         R7, #67108864               @ 0x4000000 
    /*0002650c*/ STR         R1, [R4, #40]               @ 0x28 
    /*00026510*/ MOV         R6, #8 
    /*00026514*/ STR         R1, [R4, #44]               @ 0x2c 
    /*00026518*/ MOV         R5, #9 
    /*0002651c*/ STR         R1, [R4, #72]               @ 0x48 
    /*00026520*/ MOV         LR, #11 
    /*00026524*/ STR         R1, [R4, #76]               @ 0x4c 
    /*00026528*/ STR         R1, [R4, #56]               @ 0x38 
    /*0002652c*/ STR         R1, [R4, #60]               @ 0x3c 
    /*00026530*/ MOV         R1, #255                    @ 0xff 
    /*00026534*/ STR         IP, [R4, #32] 
    /*00026538*/ STR         IP, [R4, #36]               @ 0x24 
    /*0002653c*/ MOV         IP, #64                     @ 0x40 
    /*00026540*/ STR         R0, [R4, #64]               @ 0x40 
    /*00026544*/ STR         R0, [R4, #68]               @ 0x44 
    /*00026548*/ MOV         R0, #99                     @ 0x63 
    /*0002654c*/ STR         R3, [R4] 
    /*00026550*/ STR         R3, [R4, #8] 
    /*00026554*/ STR         R3, [R4, #16] 
    /*00026558*/ STR         R3, [R4, #24] 
    /*0002655c*/ STR         R3, [R4, #28] 
    /*00026560*/ STR         R3, [R4, #52]               @ 0x34 
    /*00026564*/ STR         R3, [R4, #132]              @ 0x84 
    /*00026568*/ STR         R3, [R4, #160]              @ 0xa0 
    /*0002656c*/ STR         R2, [R4, #4] 
    /*00026570*/ STR         R2, [R4, #20] 
    /*00026574*/ STR         R2, [R4, #48]               @ 0x30 
    /*00026578*/ STR         R2, [R4, #124]              @ 0x7c 
    /*0002657c*/ STR         R2, [R4, #128]              @ 0x80 
    /*00026580*/ STR         R2, [R4, #156]              @ 0x9c 
    /*00026584*/ STR         R2, [R4, #164]              @ 0xa4 
    /*00026588*/ STR         R7, [R4, #80]               @ 0x50 
    /*0002658c*/ STR         R6, [R4, #140]              @ 0x8c 
    /*00026590*/ STR         R5, [R4, #144]              @ 0x90 
    /*00026594*/ STR         LR, [R4, #148]              @ 0x94 
    /*00026598*/ STR         R1, [R4, #168]              @ 0xa8 
    /*0002659c*/ STR         R3, [R4, #172]              @ 0xac 
    /*000265a0*/ STR         R2, [R4, #176]              @ 0xb0 
    /*000265a4*/ STR         R2, [R4, #184]              @ 0xb8 
    /*000265a8*/ STR         R1, [R4, #188]              @ 0xbc 
    /*000265ac*/ STR         R2, [R4, #204]              @ 0xcc 
    /*000265b0*/ STR         R1, [R4, #208]              @ 0xd0 
    /*000265b4*/ STR         R2, [R4, #216]              @ 0xd8 
    /*000265b8*/ STR         R2, [R4, #220]              @ 0xdc 
    /*000265bc*/ STR         R2, [R4, #224]              @ 0xe0 
    /*000265c0*/ STR         R2, [R4, #232]              @ 0xe8 
    /*000265c4*/ STR         R2, [R4, #240]              @ 0xf0 
    /*000265c8*/ STR         R2, [R4, #260]              @ 0x104 
    /*000265cc*/ STR         R2, [R4, #268]              @ 0x10c 
    /*000265d0*/ STR         R2, [R4, #304]              @ 0x130 
    /*000265d4*/ STR         R2, [R4, #308]              @ 0x134 
    /*000265d8*/ STR         R3, [R4, #180]              @ 0xb4 
    /*000265dc*/ STR         R3, [R4, #192]              @ 0xc0 
    /*000265e0*/ STR         R3, [R4, #196]              @ 0xc4 
    /*000265e4*/ STR         R3, [R4, #200]              @ 0xc8 
    /*000265e8*/ STR         R3, [R4, #212]              @ 0xd4 
    /*000265ec*/ STR         R3, [R4, #236]              @ 0xec 
    /*000265f0*/ STR         R3, [R4, #244]              @ 0xf4 
    /*000265f4*/ STR         R3, [R4, #248]              @ 0xf8 
    /*000265f8*/ STR         R3, [R4, #252]              @ 0xfc 
    /*000265fc*/ STR         R3, [R4, #256]              @ 0x100 
    /*00026600*/ STR         R3, [R4, #316]              @ 0x13c 
    /*00026604*/ STR         R0, [R4, #264]              @ 0x108 
    /*00026608*/ STR         R0, [R4, #272]              @ 0x110 
    /*0002660c*/ STR         IP, [R4, #312]              @ 0x138 
    /*00026610*/ POP         {R4, R5, R6, R7, R8, PC} 
    VENC_DRV_GetRgnCapacity_x26614:
    /*00026614*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa634] 
    /*00026618*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa5dc] 
    /*0002661c*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa634] 
    /*00026620*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa5dc] 
    /*00026624*/ MOV         R2, #316                    @ 0x13c 
    /*00026628*/ LDR         R1, [PC, #4]                @ 0x0000000000026634 
    /*0002662c*/ BL          0x000000000002662C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00026630*/ B           VENC_DRV_GetRgnCapacity_x26390
    /*00026634*/ MULEQ       R0, R4, R2 
FUNC_END VENC_DRV_GetRgnCapacity


FUNC_BEGIN VENC_DRV_RegisterRgnCapacity
    /*00026638*/ PUSH        {R4, R5, R6, LR} 
    /*0002663c*/ MOV         R0, #3 
    /*00026640*/ SUB         SP, SP, #352                @ 0x160 
    /*00026644*/ BL          0x0000000000026644          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00026648*/ CMP         R0, #0 
    /*0002664c*/ BEQ         VENC_DRV_RegisterRgnCapacity_x266d4
    /*00026650*/ MOV         R0, #3 
    /*00026654*/ BL          0x0000000000026654          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00026658*/ LDR         R3, [R0] 
    /*0002665c*/ CMP         R3, #0 
    /*00026660*/ BEQ         VENC_DRV_RegisterRgnCapacity_x266d4
    /*00026664*/ MOV         R0, #3 
    /*00026668*/ BL          0x0000000000026668          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002666c*/ LDR         R3, [R0, #4] 
    /*00026670*/ CMP         R3, #0 
    /*00026674*/ BEQ         VENC_DRV_RegisterRgnCapacity_x266d4
    /*00026678*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*0002667c*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00026680*/ MOV         R1, #0 
    /*00026684*/ ADD         R0, SP, #24 
    /*00026688*/ LDR         R2, [R3] 
    /*0002668c*/ MOV         R5, #8 
    /*00026690*/ MOVW        R3, #0                      @ VencDetachRgn [R_ARM_MOVW_ABS_NC: .text+0x23014] 
    /*00026694*/ STR         R5, [SP, #8] 
    /*00026698*/ MOVT        R3, #0                      @ VencDetachRgn [R_ARM_MOVT_ABS: .text+0x23014] 
    /*0002669c*/ STR         R3, [SP, #20] 
    /*000266a0*/ STR         R2, [SP, #16] 
    /*000266a4*/ MOV         R3, #1 
    /*000266a8*/ STR         R3, [SP, #12] 
    /*000266ac*/ BL          0x00000000000266AC          @ VENC_DRV_GetRgnCapacity [R_ARM_CALL: .text+0x26380] 
    /*000266b0*/ MOV         R0, #3 
    /*000266b4*/ BL          0x00000000000266B4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000266b8*/ ADD         R1, SP, #24 
    /*000266bc*/ ADD         R2, SP, R5 
    /*000266c0*/ LDR         R3, [R0] 
    /*000266c4*/ MOV         R0, #0 
    /*000266c8*/ BLX         R3 
    /*000266cc*/ SUBS        R4, R0, #0 
    /*000266d0*/ BNE         VENC_DRV_RegisterRgnCapacity_x2682c
    VENC_DRV_RegisterRgnCapacity_x266d4:
    /*000266d4*/ MOV         R0, #3 
    /*000266d8*/ BL          0x00000000000266D8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000266dc*/ CMP         R0, #0 
    /*000266e0*/ BEQ         VENC_DRV_RegisterRgnCapacity_x26764
    /*000266e4*/ MOV         R0, #3 
    /*000266e8*/ BL          0x00000000000266E8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000266ec*/ LDR         R3, [R0] 
    /*000266f0*/ CMP         R3, #0 
    /*000266f4*/ BEQ         VENC_DRV_RegisterRgnCapacity_x26764
    /*000266f8*/ MOV         R0, #3 
    /*000266fc*/ BL          0x00000000000266FC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00026700*/ LDR         R3, [R0, #4] 
    /*00026704*/ CMP         R3, #0 
    /*00026708*/ BEQ         VENC_DRV_RegisterRgnCapacity_x26764
    /*0002670c*/ MOVW        R3, #0                      @ VencMaxChnNum [R_ARM_MOVW_ABS_NC: .data+0xc4] 
    /*00026710*/ MOVT        R3, #0                      @ VencMaxChnNum [R_ARM_MOVT_ABS: .data+0xc4] 
    /*00026714*/ MOV         R1, #3 
    /*00026718*/ ADD         R0, SP, #24 
    /*0002671c*/ LDR         R2, [R3] 
    /*00026720*/ MOV         R5, #8 
    /*00026724*/ MOV         R3, #1 
    /*00026728*/ STR         R5, [SP, #8] 
    /*0002672c*/ STR         R3, [SP, #12] 
    /*00026730*/ MOV         R6, #0 
    /*00026734*/ STR         R2, [SP, #16] 
    /*00026738*/ STR         R6, [SP, #20] 
    /*0002673c*/ BL          0x000000000002673C          @ VENC_DRV_GetRgnCapacity [R_ARM_CALL: .text+0x26380] 
    /*00026740*/ MOV         R0, #3 
    /*00026744*/ BL          0x0000000000026744          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00026748*/ ADD         R1, SP, #24 
    /*0002674c*/ ADD         R2, SP, R5 
    /*00026750*/ LDR         R3, [R0] 
    /*00026754*/ MOV         R0, #3 
    /*00026758*/ BLX         R3 
    /*0002675c*/ SUBS        R4, R0, #0 
    /*00026760*/ BNE         VENC_DRV_RegisterRgnCapacity_x26774
    VENC_DRV_RegisterRgnCapacity_x26764:
    /*00026764*/ MOV         R4, #0 
    VENC_DRV_RegisterRgnCapacity_x26768:
    /*00026768*/ MOV         R0, R4 
    /*0002676c*/ ADD         SP, SP, #352                @ 0x160 
    /*00026770*/ POP         {R4, R5, R6, PC} 
    VENC_DRV_RegisterRgnCapacity_x26774:
    /*00026774*/ MOVW        R3, #573                    @ 0x23d 
    /*00026778*/ MOV         R1, R5 
    /*0002677c*/ STR         R3, [SP] 
    /*00026780*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa684] 
    /*00026784*/ LDR         R3, [PC, #196]              @ 0x0000000000026850 
    /*00026788*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa684] 
    /*0002678c*/ MOV         R0, #3 
    /*00026790*/ BL          0x0000000000026790          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00026794*/ MOV         R0, #3 
    /*00026798*/ BL          0x0000000000026798          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0002679c*/ CMP         R0, R6 
    /*000267a0*/ BEQ         VENC_DRV_RegisterRgnCapacity_x26768
    /*000267a4*/ MOV         R0, #3 
    /*000267a8*/ BL          0x00000000000267A8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000267ac*/ LDR         R3, [R0] 
    /*000267b0*/ CMP         R3, R6 
    /*000267b4*/ BEQ         VENC_DRV_RegisterRgnCapacity_x26768
    /*000267b8*/ MOV         R0, #3 
    /*000267bc*/ BL          0x00000000000267BC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000267c0*/ LDR         R3, [R0, #4] 
    /*000267c4*/ CMP         R3, R6 
    /*000267c8*/ BEQ         VENC_DRV_RegisterRgnCapacity_x26768
    /*000267cc*/ MOV         R0, #3 
    /*000267d0*/ BL          0x00000000000267D0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000267d4*/ MOV         R1, R5 
    /*000267d8*/ LDR         R3, [R0, #4] 
    /*000267dc*/ MOV         R0, R6 
    /*000267e0*/ BLX         R3 
    /*000267e4*/ CMP         R0, R6 
    /*000267e8*/ BEQ         VENC_DRV_RegisterRgnCapacity_x26768
    /*000267ec*/ MOV         R1, R5 
    /*000267f0*/ MOV         R3, #588                    @ 0x24c 
    /*000267f4*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa6c4] 
    /*000267f8*/ STR         R3, [SP] 
    /*000267fc*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa6c4] 
    /*00026800*/ LDR         R3, [PC, #72]               @ 0x0000000000026850 
    /*00026804*/ MOV         R0, #3 
    /*00026808*/ BL          0x0000000000026808          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002680c*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa700] 
    /*00026810*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa5dc] 
    /*00026814*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa700] 
    /*00026818*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa5dc] 
    /*0002681c*/ MOVW        R2, #590                    @ 0x24e 
    /*00026820*/ LDR         R1, [PC, #40]               @ 0x0000000000026850 
    /*00026824*/ BL          0x0000000000026824          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00026828*/ B           VENC_DRV_RegisterRgnCapacity_x26768
    VENC_DRV_RegisterRgnCapacity_x2682c:
    /*0002682c*/ MOVW        R3, #554                    @ 0x22a 
    /*00026830*/ MOV         R1, R5 
    /*00026834*/ STR         R3, [SP] 
    /*00026838*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa64c] 
    /*0002683c*/ LDR         R3, [PC, #12]               @ 0x0000000000026850 
    /*00026840*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa64c] 
    /*00026844*/ MOV         R0, #3 
    /*00026848*/ BL          0x0000000000026848          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0002684c*/ B           VENC_DRV_RegisterRgnCapacity_x26768
    /*00026850*/ ANDEQ       R1, R0, IP, LSR #5 
FUNC_END VENC_DRV_RegisterRgnCapacity


FUNC_BEGIN VENC_DRV_CheckVpssQueryInfo
    /*00026854*/ MOV         R0, #0 
    /*00026858*/ BX          LR 
FUNC_END VENC_DRV_CheckVpssQueryInfo


FUNC_BEGIN VENC_DRV_VpssQuery
    /*0002685c*/ PUSH        {R4, R5, R6, LR} 
    /*00026860*/ MOV         R4, R2 
    /*00026864*/ MOV         R5, R1 
    /*00026868*/ MOV         R6, R0 
    /*0002686c*/ LDR         R2, [R1] 
    /*00026870*/ ADD         R1, R4, #24 
    /*00026874*/ BL          0x0000000000026874          @ VENC_DRV_OUTPUTQUERYPICFORMAT [R_ARM_CALL: .text+0x26268] 
    /*00026878*/ MOV         R0, R6 
    /*0002687c*/ LDR         R2, [R5] 
    /*00026880*/ ADD         R1, R4, #384                @ 0x180 
    /*00026884*/ BL          0x0000000000026884          @ VENC_DRV_OUTPUTQUERYPICFORMAT [R_ARM_CALL: .text+0x26268] 
    /*00026888*/ LDR         R3, [R4, #44]               @ 0x2c 
    /*0002688c*/ MOV         R0, #0 
    /*00026890*/ STR         R3, [R4, #16] 
    /*00026894*/ POP         {R4, R5, R6, PC} 
FUNC_END VENC_DRV_VpssQuery


FUNC_BEGIN VENC_DRV_CheckDynamicRange
    /*00026898*/ CMP         R1, #0 
    /*0002689c*/ BNE         VENC_DRV_CheckDynamicRange_x268a8
    /*000268a0*/ MOV         R0, R1 
    /*000268a4*/ BX          LR 
    VENC_DRV_CheckDynamicRange_x268a8:
    /*000268a8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000268ac*/ SUB         SP, SP, #20 
    /*000268b0*/ LDR         R3, [R0, #56]               @ 0x38 
    /*000268b4*/ MOV         R1, #0 
    /*000268b8*/ MOV         R2, #624                    @ 0x270 
    /*000268bc*/ STR         R1, [SP, #8] 
    /*000268c0*/ STR         R2, [SP] 
    /*000268c4*/ MOV         R1, #8 
    /*000268c8*/ STR         R3, [SP, #4] 
    /*000268cc*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa71c] 
    /*000268d0*/ LDR         R3, [PC, #20]               @ 0x00000000000268ec 
    /*000268d4*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa71c] 
    /*000268d8*/ MOV         R0, #3 
    /*000268dc*/ BL          0x00000000000268DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000268e0*/ MVN         R0, #0 
    /*000268e4*/ ADD         SP, SP, #20 
    /*000268e8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000268ec*/ ANDEQ       R1, R0, IP, ASR #5 
FUNC_END VENC_DRV_CheckDynamicRange


FUNC_BEGIN VENC_DRV_CheckColorGamut
    /*000268f0*/ CMP         R1, #3 
    /*000268f4*/ MOVLS       R3, #0 
    /*000268f8*/ MOVHI       R3, #1 
    /*000268fc*/ CMP         R1, #2 
    /*00026900*/ MOVNE       R1, R3 
    /*00026904*/ ORREQ       R1, R3, #1 
    /*00026908*/ CMP         R1, #0 
    /*0002690c*/ BNE         VENC_DRV_CheckColorGamut_x26918
    /*00026910*/ MOV         R0, R1 
    /*00026914*/ BX          LR 
    VENC_DRV_CheckColorGamut_x26918:
    /*00026918*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0002691c*/ SUB         SP, SP, #28 
    /*00026920*/ LDR         IP, [R0, #56]               @ 0x38 
    /*00026924*/ MOV         R3, #3 
    /*00026928*/ MOV         R0, R3 
    /*0002692c*/ STR         R3, [SP, #16] 
    /*00026930*/ MOV         R2, #1 
    /*00026934*/ MOV         R1, #0 
    /*00026938*/ STR         R2, [SP, #12] 
    /*0002693c*/ MOV         R3, #636                    @ 0x27c 
    /*00026940*/ STR         R1, [SP, #8] 
    /*00026944*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa760] 
    /*00026948*/ STR         R3, [SP] 
    /*0002694c*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa760] 
    /*00026950*/ STR         IP, [SP, #4] 
    /*00026954*/ MOV         R1, #8 
    /*00026958*/ LDR         R3, [PC, #12]               @ 0x000000000002696c 
    /*0002695c*/ BL          0x000000000002695C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00026960*/ MVN         R0, #0 
    /*00026964*/ ADD         SP, SP, #28 
    /*00026968*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0002696c*/ ANDEQ       R1, R0, R8, ROR #5 
FUNC_END VENC_DRV_CheckColorGamut


FUNC_BEGIN VENC_DRV_IsSupportColumnIntraRefresh
    /*00026970*/ MOV         R0, #1 
    /*00026974*/ BX          LR 
FUNC_END VENC_DRV_IsSupportColumnIntraRefresh


FUNC_BEGIN VENC_DRV_CheckSupportJpegFlash
    /*00026978*/ MOV         R0, #1 
    /*0002697c*/ BX          LR 
FUNC_END VENC_DRV_CheckSupportJpegFlash


FUNC_BEGIN VENC_DRV_CheckFlash
    /*00026980*/ CMP         R0, #-2147483648            @ 0x80000000 
    /*00026984*/ MOVLS       R0, #0 
    /*00026988*/ MVNHI       R0, #0 
    /*0002698c*/ BX          LR 
FUNC_END VENC_DRV_CheckFlash


FUNC_BEGIN VencGetProResTileNum
    /*00026990*/ MOV         R0, #1 
    /*00026994*/ BX          LR 
FUNC_END VencGetProResTileNum


FUNC_BEGIN VencGetAvcTileNum
    /*00026998*/ MOV         R0, #1 
    /*0002699c*/ BX          LR 
FUNC_END VencGetAvcTileNum


FUNC_BEGIN VencGetHevcTileNum
    /*000269a0*/ MOV         R0, #1 
    /*000269a4*/ BX          LR 
FUNC_END VencGetHevcTileNum


FUNC_BEGIN VENC_DVR_BGWriteReg
    /*000269a8*/ BX          LR 
FUNC_END VENC_DVR_BGWriteReg


FUNC_BEGIN VENC_DVR_BGReadReg
    /*000269ac*/ BX          LR 
FUNC_END VENC_DVR_BGReadReg


FUNC_BEGIN VENC_DRV_IsSupportSeceneMode
    /*000269b0*/ CMP         R0, #0 
    /*000269b4*/ BNE         VENC_DRV_IsSupportSeceneMode_x269e0
    /*000269b8*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*000269bc*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*000269c0*/ LDR         R3, [R3] 
    /*000269c4*/ LDRB        R0, [R3, #40]               @ 0x28 
    /*000269c8*/ CMP         R0, #9 
    /*000269cc*/ CMPNE       R0, #12 
    /*000269d0*/ MOVEQ       R0, #1 
    /*000269d4*/ MOVNE       R0, #0 
    /*000269d8*/ EOR         R0, R0, #1 
    /*000269dc*/ BX          LR 
    VENC_DRV_IsSupportSeceneMode_x269e0:
    /*000269e0*/ MOV         R0, #1 
    /*000269e4*/ BX          LR 
FUNC_END VENC_DRV_IsSupportSeceneMode


FUNC_BEGIN VENC_DRV_IsSupportAdvSmartp
    /*000269e8*/ MOV         R0, #0 
    /*000269ec*/ BX          LR 
FUNC_END VENC_DRV_IsSupportAdvSmartp


FUNC_BEGIN VENC_DRV_IsSupportQVBR
    /*000269f0*/ MOV         R0, #1 
    /*000269f4*/ BX          LR 
FUNC_END VENC_DRV_IsSupportQVBR


FUNC_BEGIN VENC_DRV_IsSupportRef
    /*000269f8*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*000269fc*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00026a00*/ LDR         R3, [R3] 
    /*00026a04*/ LDRB        R0, [R3, #40]               @ 0x28 
    /*00026a08*/ CMP         R0, #9 
    /*00026a0c*/ CMPNE       R0, #12 
    /*00026a10*/ MOVEQ       R0, #1 
    /*00026a14*/ MOVNE       R0, #0 
    /*00026a18*/ EOR         R0, R0, #1 
    /*00026a1c*/ BX          LR 
FUNC_END VENC_DRV_IsSupportRef


FUNC_BEGIN VENC_DRV_IsSupportAVBR
    VENC_DRV_IsSupportAVBR_x26a20:
    /*00026a20*/ B           VENC_DRV_IsSupportAVBR_x26a20@ VENC_DRV_IsSupportRef [R_ARM_JUMP24: .text+0x269f8] 
FUNC_END VENC_DRV_IsSupportAVBR


FUNC_BEGIN VENC_DRV_IsSupportQpMap
    VENC_DRV_IsSupportQpMap_x26a24:
    /*00026a24*/ B           VENC_DRV_IsSupportQpMap_x26a24@ VENC_DRV_IsSupportRef [R_ARM_JUMP24: .text+0x269f8] 
FUNC_END VENC_DRV_IsSupportQpMap


FUNC_BEGIN VENC_DRV_IsSupportDeBreathEffect
    /*00026a28*/ MOV         R0, #1 
    /*00026a2c*/ BX          LR 
FUNC_END VENC_DRV_IsSupportDeBreathEffect


FUNC_BEGIN VENC_DRV_IsSupportJpegLowDelay
    /*00026a30*/ MOV         R0, #1 
    /*00026a34*/ BX          LR 
FUNC_END VENC_DRV_IsSupportJpegLowDelay


FUNC_BEGIN VENC_DRV_IsSupportRecvMult
    /*00026a38*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00026a3c*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00026a40*/ LDR         R3, [R3] 
    /*00026a44*/ LDRB        R0, [R3, #40]               @ 0x28 
    /*00026a48*/ SUB         R3, R0, #1 
    /*00026a4c*/ CMP         R3, #1 
    /*00026a50*/ BLS         VENC_DRV_IsSupportRecvMult_x26a68
    /*00026a54*/ SUB         R0, R0, #5 
    /*00026a58*/ CMP         R0, #1 
    /*00026a5c*/ MOVLS       R0, #0 
    /*00026a60*/ MOVHI       R0, #1 
    /*00026a64*/ BX          LR 
    VENC_DRV_IsSupportRecvMult_x26a68:
    /*00026a68*/ MOV         R0, #0 
    /*00026a6c*/ BX          LR 
FUNC_END VENC_DRV_IsSupportRecvMult


FUNC_BEGIN VENC_DRV_RingPreProcess
    /*00026a70*/ BX          LR 
FUNC_END VENC_DRV_RingPreProcess


FUNC_BEGIN VencDrvCheckResolution
    /*00026a74*/ PUSH        {R4, R5, LR} 
    /*00026a78*/ MOVW        R3, #265                    @ 0x109 
    /*00026a7c*/ LDR         R2, [R0] 
    /*00026a80*/ SUB         SP, SP, #20 
    /*00026a84*/ LDR         R1, [R0, #24] 
    /*00026a88*/ CMP         R2, R3 
    /*00026a8c*/ CMPNE       R2, #96                     @ 0x60 
    /*00026a90*/ LDR         LR, [R0, #4] 
    /*00026a94*/ LDR         R3, [R0, #28] 
    /*00026a98*/ LDR         R4, [R0, #8] 
    /*00026a9c*/ BNE         VencDrvCheckResolution_x26b90
    /*00026aa0*/ MOVW        R2, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00026aa4*/ MOVT        R2, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00026aa8*/ LDR         R2, [R2] 
    /*00026aac*/ LDRB        R2, [R2, #40]               @ 0x28 
    /*00026ab0*/ SUB         R0, R2, #1 
    /*00026ab4*/ CMP         R0, #1 
    /*00026ab8*/ BLS         VencDrvCheckResolution_x26bdc
    /*00026abc*/ SUB         R0, R2, #5 
    /*00026ac0*/ CMP         R0, #1 
    /*00026ac4*/ BLS         VencDrvCheckResolution_x26c04
    /*00026ac8*/ CMP         R2, #12 
    /*00026acc*/ BEQ         VencDrvCheckResolution_x26bf0
    /*00026ad0*/ CMP         R2, #9 
    /*00026ad4*/ BEQ         VencDrvCheckResolution_x26c40
    /*00026ad8*/ CMP         R2, #0 
    /*00026adc*/ BNE         VencDrvCheckResolution_x26c18
    /*00026ae0*/ MOV         R2, #114                    @ 0x72 
    /*00026ae4*/ MOV         R5, #16777216               @ 0x1000000 
    /*00026ae8*/ MOV         R0, #4096                   @ 0x1000 
    VencDrvCheckResolution_x26aec:
    /*00026aec*/ CMP         R2, LR 
    /*00026af0*/ MOVLS       IP, #0 
    /*00026af4*/ MOVHI       IP, #1 
    /*00026af8*/ CMP         R0, LR 
    /*00026afc*/ ORRCC       IP, IP, #1 
    /*00026b00*/ CMP         IP, #0 
    /*00026b04*/ BNE         VencDrvCheckResolution_x26c54
    /*00026b08*/ CMP         R2, R1 
    /*00026b0c*/ MOVLS       IP, #0 
    /*00026b10*/ MOVHI       IP, #1 
    /*00026b14*/ CMP         R0, R1 
    /*00026b18*/ ORRCC       IP, IP, #1 
    /*00026b1c*/ CMP         IP, #0 
    /*00026b20*/ BNE         VencDrvCheckResolution_x26c8c
    /*00026b24*/ CMP         R2, R4 
    /*00026b28*/ MOVLS       IP, #0 
    /*00026b2c*/ MOVHI       IP, #1 
    /*00026b30*/ CMP         R0, R4 
    /*00026b34*/ ORRCC       IP, IP, #1 
    /*00026b38*/ CMP         IP, #0 
    /*00026b3c*/ BNE         VencDrvCheckResolution_x26cac
    /*00026b40*/ CMP         R2, R3 
    /*00026b44*/ MOVLS       IP, #0 
    /*00026b48*/ MOVHI       IP, #1 
    /*00026b4c*/ CMP         R0, R3 
    /*00026b50*/ ORRCC       IP, IP, #1 
    /*00026b54*/ CMP         IP, #0 
    /*00026b58*/ BNE         VencDrvCheckResolution_x26ccc
    /*00026b5c*/ TST         LR, #1 
    /*00026b60*/ BNE         VencDrvCheckResolution_x26cec
    /*00026b64*/ TST         R4, #1 
    /*00026b68*/ BNE         VencDrvCheckResolution_x26d1c
    /*00026b6c*/ TST         R1, #1 
    /*00026b70*/ BNE         VencDrvCheckResolution_x26d34
    /*00026b74*/ ANDS        R0, R3, #1 
    /*00026b78*/ BNE         VencDrvCheckResolution_x26d4c
    /*00026b7c*/ MUL         R2, R3, R1 
    /*00026b80*/ CMP         R5, R2 
    /*00026b84*/ BCC         VencDrvCheckResolution_x26d64
    VencDrvCheckResolution_x26b88:
    /*00026b88*/ ADD         SP, SP, #20 
    /*00026b8c*/ POP         {R4, R5, PC} 
    VencDrvCheckResolution_x26b90:
    /*00026b90*/ MOVW        R0, #1002                   @ 0x3ea 
    /*00026b94*/ CMP         R2, #26 
    /*00026b98*/ CMPNE       R2, R0 
    /*00026b9c*/ MOVEQ       R2, #32 
    /*00026ba0*/ MOVEQ       R5, #67108864               @ 0x4000000 
    /*00026ba4*/ MOVEQ       R0, #8192                   @ 0x2000 
    /*00026ba8*/ BEQ         VencDrvCheckResolution_x26aec
    /*00026bac*/ STR         R2, [SP, #4] 
    /*00026bb0*/ MOVW        R3, #977                    @ 0x3d1 
    /*00026bb4*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa7ac] 
    /*00026bb8*/ STR         R3, [SP] 
    /*00026bbc*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa7ac] 
    /*00026bc0*/ LDR         R3, [PC, #444]              @ 0x0000000000026d84 
    /*00026bc4*/ MOV         R1, #8 
    /*00026bc8*/ MOV         R0, #3 
    /*00026bcc*/ BL          0x0000000000026BCC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00026bd0*/ MOVW        R0, #32776                  @ 0x8008 
    /*00026bd4*/ MOVT        R0, #40968                  @ 0xa008 
    /*00026bd8*/ B           VencDrvCheckResolution_x26b88
    VencDrvCheckResolution_x26bdc:
    /*00026bdc*/ MOV         R5, #36864                  @ 0x9000 
    /*00026be0*/ MOV         R2, #114                    @ 0x72 
    /*00026be4*/ MOVT        R5, #45                     @ 0x2d 
    /*00026be8*/ MOV         R0, #2304                   @ 0x900 
    /*00026bec*/ B           VencDrvCheckResolution_x26aec
    VencDrvCheckResolution_x26bf0:
    /*00026bf0*/ MOV         R5, #40960                  @ 0xa000 
    /*00026bf4*/ MOV         R2, #114                    @ 0x72 
    /*00026bf8*/ MOVT        R5, #65                     @ 0x41 
    /*00026bfc*/ MOV         R0, #2688                   @ 0xa80 
    /*00026c00*/ B           VencDrvCheckResolution_x26aec
    VencDrvCheckResolution_x26c04:
    /*00026c04*/ MOV         R5, #48128                  @ 0xbc00 
    /*00026c08*/ MOV         R2, #114                    @ 0x72 
    /*00026c0c*/ MOVT        R5, #79                     @ 0x4f 
    /*00026c10*/ MOV         R0, #2688                   @ 0xa80 
    /*00026c14*/ B           VencDrvCheckResolution_x26aec
    VencDrvCheckResolution_x26c18:
    /*00026c18*/ MOVW        R3, #963                    @ 0x3c3 
    /*00026c1c*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaa78] 
    /*00026c20*/ STR         R3, [SP] 
    /*00026c24*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaa78] 
    /*00026c28*/ LDR         R3, [PC, #340]              @ 0x0000000000026d84 
    /*00026c2c*/ MOV         R1, #8 
    /*00026c30*/ MOV         R0, #3 
    /*00026c34*/ BL          0x0000000000026C34          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00026c38*/ MVN         R0, #0 
    /*00026c3c*/ B           VencDrvCheckResolution_x26b88
    VencDrvCheckResolution_x26c40:
    /*00026c40*/ MOV         R5, #36864                  @ 0x9000 
    /*00026c44*/ MOV         R2, #114                    @ 0x72 
    /*00026c48*/ MOVT        R5, #126                    @ 0x7e 
    /*00026c4c*/ MOV         R0, #3840                   @ 0xf00 
    /*00026c50*/ B           VencDrvCheckResolution_x26aec
    VencDrvCheckResolution_x26c54:
    /*00026c54*/ STR         R2, [SP, #8] 
    /*00026c58*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa7e8] 
    /*00026c5c*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa7e8] 
    /*00026c60*/ MOVW        R3, #987                    @ 0x3db 
    /*00026c64*/ STR         R0, [SP, #12] 
    /*00026c68*/ STR         LR, [SP, #4] 
    /*00026c6c*/ STR         R3, [SP] 
    VencDrvCheckResolution_x26c70:
    /*00026c70*/ MOV         R1, #8 
    /*00026c74*/ LDR         R3, [PC, #264]              @ 0x0000000000026d84 
    /*00026c78*/ MOV         R0, #3 
    /*00026c7c*/ BL          0x0000000000026C7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00026c80*/ MOVW        R0, #32771                  @ 0x8003 
    /*00026c84*/ MOVT        R0, #40968                  @ 0xa008 
    /*00026c88*/ B           VencDrvCheckResolution_x26b88
    VencDrvCheckResolution_x26c8c:
    /*00026c8c*/ MOV         R3, #996                    @ 0x3e4 
    /*00026c90*/ STR         R2, [SP, #8] 
    /*00026c94*/ STR         R0, [SP, #12] 
    /*00026c98*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa834] 
    /*00026c9c*/ STR         R1, [SP, #4] 
    /*00026ca0*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa834] 
    /*00026ca4*/ STR         R3, [SP] 
    /*00026ca8*/ B           VencDrvCheckResolution_x26c70
    VencDrvCheckResolution_x26cac:
    /*00026cac*/ MOVW        R3, #1005                   @ 0x3ed 
    /*00026cb0*/ STR         R2, [SP, #8] 
    /*00026cb4*/ STR         R0, [SP, #12] 
    /*00026cb8*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa87c] 
    /*00026cbc*/ STR         R4, [SP, #4] 
    /*00026cc0*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa87c] 
    /*00026cc4*/ STR         R3, [SP] 
    /*00026cc8*/ B           VencDrvCheckResolution_x26c70
    VencDrvCheckResolution_x26ccc:
    /*00026ccc*/ MOVW        R1, #1014                   @ 0x3f6 
    /*00026cd0*/ STR         R2, [SP, #8] 
    /*00026cd4*/ STR         R0, [SP, #12] 
    /*00026cd8*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa8c8] 
    /*00026cdc*/ STR         R3, [SP, #4] 
    /*00026ce0*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa8c8] 
    /*00026ce4*/ STR         R1, [SP] 
    /*00026ce8*/ B           VencDrvCheckResolution_x26c70
    VencDrvCheckResolution_x26cec:
    /*00026cec*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa910] 
    /*00026cf0*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa910] 
    /*00026cf4*/ MOVW        R3, #1022                   @ 0x3fe 
    /*00026cf8*/ STR         LR, [SP, #4] 
    /*00026cfc*/ STR         R3, [SP] 
    VencDrvCheckResolution_x26d00:
    /*00026d00*/ LDR         R3, [PC, #124]              @ 0x0000000000026d84 
    /*00026d04*/ MOV         R1, #8 
    /*00026d08*/ MOV         R0, #3 
    /*00026d0c*/ BL          0x0000000000026D0C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00026d10*/ MOVW        R0, #32771                  @ 0x8003 
    /*00026d14*/ MOVT        R0, #40968                  @ 0xa008 
    /*00026d18*/ B           VencDrvCheckResolution_x26b88
    VencDrvCheckResolution_x26d1c:
    /*00026d1c*/ MOVW        R3, #1030                   @ 0x406 
    /*00026d20*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa958] 
    /*00026d24*/ STR         R4, [SP, #4] 
    /*00026d28*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa958] 
    /*00026d2c*/ STR         R3, [SP] 
    /*00026d30*/ B           VencDrvCheckResolution_x26d00
    VencDrvCheckResolution_x26d34:
    /*00026d34*/ MOVW        R3, #1038                   @ 0x40e 
    /*00026d38*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa9a4] 
    /*00026d3c*/ STR         R1, [SP, #4] 
    /*00026d40*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa9a4] 
    /*00026d44*/ STR         R3, [SP] 
    /*00026d48*/ B           VencDrvCheckResolution_x26d00
    VencDrvCheckResolution_x26d4c:
    /*00026d4c*/ STR         R3, [SP, #4] 
    /*00026d50*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa9e4] 
    /*00026d54*/ MOVW        R3, #1046                   @ 0x416 
    /*00026d58*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa9e4] 
    /*00026d5c*/ STR         R3, [SP] 
    /*00026d60*/ B           VencDrvCheckResolution_x26d00
    VencDrvCheckResolution_x26d64:
    /*00026d64*/ MOVW        R0, #1055                   @ 0x41f 
    /*00026d68*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaa28] 
    /*00026d6c*/ STR         R5, [SP, #12] 
    /*00026d70*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaa28] 
    /*00026d74*/ STR         R3, [SP, #8] 
    /*00026d78*/ STR         R1, [SP, #4] 
    /*00026d7c*/ STR         R0, [SP] 
    /*00026d80*/ B           VencDrvCheckResolution_x26c70
    /*00026d84*/ ANDEQ       R1, R0, R4, LSL #6 
FUNC_END VencDrvCheckResolution


FUNC_BEGIN VencDrvEnableNnie
    /*00026d88*/ BX          LR 
FUNC_END VencDrvEnableNnie


FUNC_BEGIN VencDrvDisableNnie
    /*00026d8c*/ BX          LR 
FUNC_END VencDrvDisableNnie


FUNC_BEGIN VencDrvConfigNnie
    /*00026d90*/ BX          LR 
FUNC_END VencDrvConfigNnie


FUNC_BEGIN VENC_DRV_Init
    /*00026d94*/ BX          LR 
FUNC_END VENC_DRV_Init


FUNC_BEGIN VENC_DRV_Exit
    /*00026d98*/ BX          LR 
FUNC_END VENC_DRV_Exit


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .init.text
@ Size: 0x10
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN venc_mod_init
    /*00000000*/ PUSH        {R4, LR} 
    /*00000004*/ BL          0x0000000000000004          @ VENC_ModInit [R_ARM_CALL: .text+0x25b6c] 
    /*00000008*/ MOV         R0, #0 
    /*0000000c*/ POP         {R4, PC} 
FUNC_END venc_mod_init


FUNC_BEGIN init_module
    /*00000000*/ PUSH        {R4, LR} 
    /*00000004*/ BL          0x0000000000000004          @ VENC_ModInit [R_ARM_CALL: .text+0x25b6c] 
    /*00000008*/ MOV         R0, #0 
    /*0000000c*/ POP         {R4, PC} 
FUNC_END init_module


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .exit.text
@ Size: 0x4
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN venc_mod_exit
    venc_mod_exit_x0:
    /*00000000*/ B           venc_mod_exit_x0            @ VENC_ModExit [R_ARM_JUMP24: .text+0x25e0c] 
FUNC_END venc_mod_exit


FUNC_BEGIN cleanup_module
    cleanup_module_x0:
    /*00000000*/ B           cleanup_module_x0           @ VENC_ModExit [R_ARM_JUMP24: .text+0x25e0c] 
FUNC_END cleanup_module



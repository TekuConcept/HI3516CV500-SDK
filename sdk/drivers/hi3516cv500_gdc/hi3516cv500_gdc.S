@
@ -- FILES --
@

@ gdc.c
@ gdc_midware.c
@ gdc_buf.c
@ gdc_exe.c
@ gdc_drv_comm.c
@ gdc_drv_buf.c
@ gdc_drv.c
@ gdc_hal.c
@ hiisp_gdc_fw_kernel.c
@ gdc_init.c
@ hi3516cv500_gdc.mod.c


unsigned char rodata[5332] = {
    /*0000*/ "GDC_TaskNotifyCaller\0\0\0\0",
    /*0018*/ "t$\0\0",
    /*001c*/ "\x80$\0\0",
    /*0020*/ "\x8c$\0\0",
    /*0024*/ "\x98$\0\0",
    /*0028*/ "\xa4$\0\0",
    /*002c*/ "\xb0$\0\0",
    /*0030*/ "\xc0$\0\0",
    /*0034*/ "\xd0$\0\0",
    /*0038*/ "\xe0$\0\0",
    /*003c*/ "P$\0\0",
    /*0040*/ "\x14$\0\0",
    /*0044*/ "\$\0\0",
    /*0048*/ " $\0\0",
    /*004c*/ "h$\0\0",
    /*0050*/ ",$\0\0",
    /*0054*/ "8$\0\0",
    /*0058*/ "D$\0\0",
    /*005c*/ "\x08$\0\0",
    /*0060*/ "\x14$\0\0",
    /*0064*/ " $\0\0",
    /*0068*/ "\xe4#\0\0",
    /*006c*/ "\xf0#\0\0",
    /*0070*/ "\xfc#\0\0",
    /*0074*/ "GDC_CheckLMFCoef\0\0\0\0",
    /*0088*/ "GDC_WaitConditionCallBack\0\0\0",
    /*00a4*/ "GDC_Exit\0\0\0\0",
    /*00b0*/ "GDC_QueryState\0\0",
    /*00c0*/ "GDC_CheckNullPtr\0\0\0\0",
    /*00d4*/ "GDC_CheckModStart\0\0\0",
    /*00e8*/ "GDC_RlsTmpBuff\0\0",
    /*00f8*/ "\x01\0\0\0",
    /*00fc*/ "\x04\0\0\0",
    /*0100*/ "\x04\0\0\0",
    /*0104*/ "\x04\0\0\0",
    /*0108*/ "\x04\0\0\0",
    /*010c*/ "\x04\0\0\0",
    /*0110*/ "\x04\0\0\0",
    /*0114*/ "\x04\0\0\0",
    /*0118*/ "\x03\0\0\0",
    /*011c*/ "\0\0\0\0",
    /*0120*/ "\x04\0\0\0",
    /*0124*/ "\x04\0\0\0",
    /*0128*/ "\x04\0\0\0",
    /*012c*/ "\x04\0\0\0",
    /*0130*/ "\x04\0\0\0",
    /*0134*/ "\x04\0\0\0",
    /*0138*/ "\x04\0\0\0",
    /*013c*/ "\x04\0\0\0",
    /*0140*/ "\x04\0\0\0",
    /*0144*/ "\x04\0\0\0",
    /*0148*/ "\x04\0\0\0",
    /*014c*/ "\x04\0\0\0",
    /*0150*/ "\x04\0\0\0",
    /*0154*/ "\x02\0\0\0",
    /*0158*/ "\x10\0\0\0",
    /*015c*/ "\x07\0\0\0",
    /*0160*/ "\x1e\0\0\0",
    /*0164*/ "\x0f\0\0\0",
    /*0168*/ "GDC_CheckOtherImageInfo\0",
    /*0180*/ "GDC_CheckInImage\0\0\0\0",
    /*0194*/ "GDC_CheckOutImage\0\0\0",
    /*01a8*/ "GDC_CheckImage\0\0",
    /*01b8*/ "GDC_CheckLDCImage\0\0\0",
    /*01cc*/ "GDC_CheckPMFInfo\0\0\0\0",
    /*01e0*/ "GDC_CheckGyroInfo\0\0\0",
    /*01f4*/ "GDC_CheckMmzPhyAddr\0",
    /*0208*/ "GDC_VbAdd\0\0\0",
    /*0214*/ "GDC_AddBypassTask\0\0\0",
    /*0228*/ "GDC_VbSub\0\0\0",
    /*0234*/ "GDC_ProcTaskInJob\0\0\0",
    /*0248*/ "GDC_EndJob\0\0",
    /*0254*/ "GDC_CancelJob\0\0\0",
    /*0264*/ "GDC_CancelJob\0\0\0",
    /*0274*/ "GDC_CancelJobByModDev\0\0\0",
    /*028c*/ "GDC_CancelJobByModDev\0\0\0",
    /*02a4*/ "GDC_InitJobProcInfo\0",
    /*02b8*/ "GDC_BeginJob\0\0\0\0",
    /*02c8*/ "GDC_AddJobProcArea\0\0",
    /*02dc*/ "GDC_AddCorrectionTask\0\0\0",
    /*02f4*/ "GDC_AddLDCOrPMFTask\0",
    /*0308*/ "GDC_SetJobConfig\0\0\0\0",
    /*031c*/ "GDC_GetJobConfig\0\0\0\0",
    /*0330*/ "GDC_AddGyroTask\0",
    /*0340*/ "GDC_DrvCallBack\0",
    /*0350*/ "GDC_GetHWEndTime\0\0\0\0",
    /*0364*/ "GDC_CancelAllBusyJob\0\0\0\0",
    /*037c*/ "GDC_CancelAllCreatedJob\0",
    /*0394*/ "GDC_Notify\0\0",
    /*03a0*/ "GDC_UsrEndJob\0\0\0",
    /*03b0*/ "GDC_LowDelayIntCallBack\0",
    /*03c8*/ "GDC_IntCallBack\0",
    /*03d8*/ "GDC_FinishJobProcInfo\0\0\0",
    /*03f0*/ "GDC_Init\0\0\0\0",
    /*03fc*/ "GDC_CheckFramePhyAddr\0\0\0",
    /*0414*/ "GDC_AddUserLimitPMFTask\0",
    /*042c*/ "GdcIoctl\0\0\0\0",
    /*0438*/ "GDC_ModInit\0",
    /*0444*/ "GDC_MidwareGetFreeNode\0\0",
    /*045c*/ "GDC_MidwareReleaseNode\0\0",
    /*0474*/ "GDC_CheckChnId\0\0",
    /*0484*/ "GetGDCCommCfg\0\0\0",
    /*0494*/ "GDC_AddGyroDisTask\0\0",
    /*04a8*/ "GDC_AddRotationExTask\0\0\0",
    /*04c0*/ "GDC_AddDISTask\0\0",
    /*04d0*/ "GDC_AddDISLDCTask_Zero\0\0",
    /*04e8*/ "GDC_AddDISLDCTask_ExpectZero\0\0\0\0",
    /*0508*/ "GDC_AddSpreadAndLDCTask2Gdc_ExpectZero\0\0",
    /*0530*/ "GDC_AddSpreadAndLDCTask2Gdc_Zero\0\0\0\0",
    /*0554*/ "GDC_AddSpreadTask\0\0\0",
    /*0568*/ "GDC_AddLdcTask2Gdc_ExpectZero\0\0\0",
    /*0588*/ "GDC_AddLdcTask2Gdc_Zero\0",
    /*05a0*/ "GDC_CheckGdcChnAttr\0",
    /*05b4*/ "GDC_CheckLDCInfo\0\0\0\0",
    /*05c8*/ "GDC_CheckSpreadInfo\0",
    /*05dc*/ "GDC_CheckLDCV2Info\0\0",
    /*05f0*/ "GDC_CheckRotationExInfo\0",
    /*0608*/ "GDC_PutVb\0\0\0",
    /*0614*/ "Gdc_VgsCallBack\0",
    /*0624*/ "Gdc_B4ViCallBack\0\0\0\0",
    /*0638*/ "GDC_MiddleTaskCallBack\0\0",
    /*0650*/ "GDC_AddVb\0\0\0",
    /*065c*/ "GDC_GetYUVFrmVbBlk\0\0",
    /*0670*/ "GDC_GetFrmVbBlk\0",
    /*0680*/ "GDC_MidProc\0",
    /*068c*/ "GDC_ProcAllRotationEx\0\0\0",
    /*06a4*/ "GDC_ProcAllVgsEx\0\0\0\0",
    /*06b8*/ "GDC_ProcDISLDCSpread\0\0\0\0",
    /*06d0*/ "GDC_ProcDISLDCRotationEx\0\0\0\0",
    /*06ec*/ "GDC_ProcDISLDCRotationVgs\0\0\0",
    /*0708*/ "GDC_ProcDISLDC\0\0",
    /*0718*/ "GDC_ProDISSpreadRotationEx\0\0",
    /*0734*/ "GDC_ProDISSpreadRotationVgs\0",
    /*0750*/ "GDC_ProDISSpread\0\0\0\0",
    /*0764*/ "GDC_ProcDISRotationEx\0\0\0",
    /*077c*/ "GDC_ProcDISRotationGdc\0\0",
    /*0794*/ "GDC_ProGyroRotation\0",
    /*07a8*/ "GDC_ProDIS\0\0",
    /*07b4*/ "GDC_ProLDCSpeadRotationEx\0\0\0",
    /*07d0*/ "GDC_ProLDCSpeadRotationVgs\0\0",
    /*07ec*/ "GDC_ProLDCSpead\0",
    /*07fc*/ "GDC_ProLDCRotation\0\0",
    /*0810*/ "GDC_ProLDCRotationEx\0\0\0\0",
    /*0828*/ "GDC_ProSpreadRotationEx\0",
    /*0840*/ "GDC_ProSpreadRotationVgs\0\0\0\0",
    /*085c*/ "GDC_ProSpread\0\0\0",
    /*086c*/ "GDC_ProRotationVgs\0\0",
    /*0880*/ "GDC_AddRotationTaskVgs\0\0",
    /*0898*/ "Gdc_B4VgsCallBack\0\0\0",
    /*08ac*/ "GDC_ProRotationEx\0\0\0",
    /*08c0*/ "GDC_ProLDCV2\0\0\0\0",
    /*08d0*/ "GDC_ProLDCV2RotationEx\0\0",
    /*08e8*/ "GDC_ProLDCV2Spread\0\0",
    /*08fc*/ "GDC_ProLDCV2SpreadRotationVgs\0\0\0",
    /*091c*/ "GDC_ProLDCV2SpreadRotationEx\0\0\0\0",
    /*093c*/ "GDC_ProcBypassTask\0\0",
    /*0950*/ "GDC_ProcGDCFunction\0",
    /*0964*/ "Gdc_GetChnId\0\0\0\0",
    /*0974*/ "Gdc_MotionAlgInit\0\0\0",
    /*0988*/ "Gdc_MotionAlgDeInit\0",
    /*099c*/ "Gdc_CreatChn\0\0\0\0",
    /*09ac*/ "GDC_DeInitQueueBuf\0\0",
    /*09c0*/ "GDC_DeInitTaskBuf\0\0\0",
    /*09d4*/ "GDC_DeInitNodeBuf\0\0\0",
    /*09e8*/ "GDC_DeInitJobBuf\0\0\0\0",
    /*09fc*/ "GDC_InitNodeBuf\0",
    /*0a0c*/ "GDC_GetNodeFromFreeList\0",
    /*0a24*/ "GDC_GetNodeFromBusyList\0",
    /*0a3c*/ "GDC_GetCurrentNodeFromBusyList\0\0",
    /*0a5c*/ "GDC_DeInitBuf\0\0\0",
    /*0a6c*/ "GDC_GetTaskFromFreeList\0",
    /*0a84*/ "GDC_GetTaskFromJob\0\0",
    /*0a98*/ "GDC_GetJobFromFreeList\0\0",
    /*0ab0*/ "GDC_InitQueueBuf\0\0\0\0",
    /*0ac4*/ "GDC_InitJobBuf\0\0",
    /*0ad4*/ "GDC_InitTaskBuf\0",
    /*0ae4*/ "GDC_GetJobFromCreatedList\0\0\0",
    /*0b00*/ "GDC_GetFirstJobFromBusyList\0",
    /*0b1c*/ "GDC_QueryFirstJobFromBusyList\0\0\0",
    /*0b3c*/ "GDC_GetJobFromBusyList\0\0",
    /*0b54*/ "GDC_GetJobFromProcList\0\0",
    /*0b6c*/ "GDC_LastProcIsRegionCallBack\0\0\0\0",
    /*0b8c*/ "GDC_LastProcIsVgsScaleCallBack\0\0",
    /*0bac*/ "GDC_ProcVgsScaleFirstCallBack\0\0\0",
    /*0bcc*/ "GDC_ProcRegionsFirstCallBack\0\0\0\0",
    /*0bec*/ "GDC_ProcCorrectionWithBgColor\0\0\0",
    /*0c0c*/ "GDC_ExeGetFreeNode\0\0",
    /*0c20*/ "GDC_CheckCompressOutputAlign\0\0\0\0",
    /*0c40*/ "GDC_CheckSeamlessOutput\0",
    /*0c58*/ "GDC_CheckFisheyeImage\0\0\0",
    /*0c70*/ "GDC_CheckRegionCompressFormat\0\0\0",
    /*0c90*/ "GDC_CheckRegionInfo\0",
    /*0ca4*/ "GDC_CheckCorrectionInfo\0",
    /*0cbc*/ "GDC_ProcAllRegions\0\0",
    /*0cd0*/ "GDC_ProcAllVgsScale\0",
    /*0ce4*/ "GDC_ProcVgsScaleFisrt\0\0\0",
    /*0cfc*/ "GDC_ProcRegionsFisrt\0\0\0\0",
    /*0d14*/ "GDC_ProcCorrectionWithBgColorCallBack\0\0\0",
    /*0d3c*/ "GDC_ProcCorrection\0\0",
    /*0d50*/ "GDC_DrvCommCancelJob\0\0\0\0",
    /*0d68*/ "GDC_DrvCommCalcNodeNum\0\0",
    /*0d80*/ "GDC_DrvCommConvertTaskInfo\0\0",
    /*0d9c*/ "GDC_DrvCommCalcWeight\0\0\0",
    /*0db4*/ "GDC_DrvCommPrepareHWInfo\0\0\0\0",
    /*0dd0*/ "GDC_DrvCommPrepareNodes\0",
    /*0de8*/ "GDC_DrvCommStartWaitlist\0\0\0\0",
    /*0e04*/ "GDC_DrvCommSubmitJob\0\0\0\0",
    /*0e1c*/ "GDC_DrvCommIrqProc\0\0",
    /*0e30*/ "GDC_DrvCommOpen\0",
    /*0e40*/ "GDC_DrvCommExitEx\0\0\0",
    /*0e54*/ "GDC_DrvDeInitJobBuf\0",
    /*0e68*/ "GDC_DrvDeInitTaskBuf\0\0\0\0",
    /*0e80*/ "GDC_DrvInitJobBuf\0\0\0",
    /*0e94*/ "GDC_DrvInitTaskBuf\0\0",
    /*0ea8*/ "GDC_DrvInitNodeBuf\0\0",
    /*0ebc*/ "GDC_DrvDeInitBuf\0\0\0\0",
    /*0ed0*/ "GDC_DrvDeInitNodeBuf\0\0\0\0",
    /*0ee8*/ "GDC_DrvGetNodeFromFreeList\0\0",
    /*0f04*/ "GDC_DrvGetNodeFromTask\0\0",
    /*0f1c*/ "GDC_DrvGetTaskFromFreeList\0\0",
    /*0f38*/ "GDC_DrvGetTaskFromJob\0\0\0",
    /*0f50*/ "GDC_DrvGetJobFromFreeList\0\0\0",
    /*0f6c*/ "GDC_DrvGetJobFromWaitList\0\0\0",
    /*0f88*/ "GDC_DrvGetJobFromBusyList\0\0\0",
    /*0fa4*/ "GetPixFormatInfo\0\0\0\0",
    /*0fb8*/ "GDC_DRV_RequestIrq\0\0",
    /*0fcc*/ "GDC_DRV_MallocInterPoleCoefAddr\0",
    /*0fec*/ "GDC_DRV_MallocAngleVelAddr\0\0",
    /*1008*/ "GDC_DRV_CheckCommWH\0",
    /*101c*/ "GDC_DRV_CheckChipFisheyeAttr\0\0\0\0",
    /*103c*/ "GDC_DRV_CheckChipFisheyeRegionAttr\0\0",
    /*1060*/ "GDC_DRV_IsWrongInt\0\0",
    /*1074*/ "GDC_DRV_ConvertCorrectionInfo\0\0\0",
    /*1094*/ "GDC_DRV_CheckLDCV2Info\0\0",
    /*10ac*/ "\0\0\0\0",
    /*10b0*/ "\0\0@\0",
    /*10b4*/ "\0\0\x01\xfd?\x04\xff\0",
    /*10bc*/ "\x01\xfb>\x08\xfe\0\x02\xf9<\x0c\xfd\0",
    /*10c8*/ "\x02\xf88\x11\xfc\x01\x02\xf84\x16\xfb\x01\x02\xf70\x1c\xfa\x01\x02\xf8+!\xf9\x01\x02\xf8&&\xf8\x02\0\0",
    /*10e8*/ "\0@\0\0",
    /*10ec*/ "\xfb@\x05\0",
    /*10f0*/ "\xf8>\x0b\xff\xf6<\x10\xfe\xf4:\x16\xfc\xf47\x1b\xfa\xf43!\xf8\xf4/&\xf7\xf6**\xf6GDC_FIFO_COMM_CFG\0\0\0",
    /*1120*/ "PMFConvert\0\0",
    /*112c*/ "calWinSzAfterHomo\0\0\0",
    /*1140*/ "\0\x80\0\0",
    /*1144*/ "\x90K\0\0",
    /*1148*/ "\xed'\0\0",
    /*114c*/ "D\x14\0\0",
    /*1150*/ ",\n\0\0",
    /*1154*/ "\x17\x05\0\0",
    /*1158*/ "\x8c\x02\0\0",
    /*115c*/ "F\x01\0\0",
    /*1160*/ "\xa3\0\0\0",
    /*1164*/ "Q\0\0\0",
    /*1168*/ ")\0\0\0",
    /*116c*/ "\x14\0\0\0",
    /*1170*/ "\n\0\0\0",
    /*1174*/ "\x05\0\0\0",
    /*1178*/ "\x03\0\0\0",
    /*117c*/ "\x01\0\0\0",
    /*1180*/ "\x01\0\0\0",
    /*1184*/ "\0\x80\0\0",
    /*1188*/ "\x82Z\0\0",
    /*118c*/ "\xf4P\0\0",
    /*1190*/ "\x8aN\0\0",
    /*1194*/ "\xeeM\0\0",
    /*1198*/ "\xc7M\0\0",
    /*119c*/ "\xbeM\0\0",
    /*11a0*/ "\xbbM\0\0",
    /*11a4*/ "\xbbM\0\0",
    /*11a8*/ "\xbbM\0\0",
    /*11ac*/ "\xbaM\0\0",
    /*11b0*/ "\xbaM\0\0",
    /*11b4*/ "\xbaM\0\0",
    /*11b8*/ "\xbaM\0\0",
    /*11bc*/ "\xbaM\0\0",
    /*11c0*/ "\xbaM\0\0",
    /*11c4*/ "\xbaM\0\0",
    /*11c8*/ "\x01\0\0\0",
    /*11cc*/ "\xff\xff\xff\xff\xff\xff\xff\xff\x01\0\0\0",
    /*11d8*/ "\x01\0\0\0",
    /*11dc*/ "\x01\0\0\0",
    /*11e0*/ "\x01\0\0\0",
    /*11e4*/ "\xff\xff\xff\xff\xff\xff\xff\xff\x01\0\0\0",
    /*11f0*/ "GDCPolar2Cartesian\0\0",
    /*1204*/ "GDC_Fisheye_MPI_LMF_Check\0\0\0",
    /*1220*/ "\x01\0\0\0",
    /*1224*/ "\0\0\0\0",
    /*1228*/ "\0\0\0\0",
    /*122c*/ "\0\0\0\0",
    /*1230*/ "\0\0\0\0",
    /*1234*/ "\0\0\0\0",
    /*1238*/ "\0\0\0\0",
    /*123c*/ "\0\0\0\0",
    /*1240*/ "\x01\0\0\0",
    /*1244*/ "\0\0\0\0",
    /*1248*/ "\0\0\0\0",
    /*124c*/ "\0\0\0\0",
    /*1250*/ "\0\0\0\0",
    /*1254*/ "\0\0\0\0",
    /*1258*/ "\0\0\0\0",
    /*125c*/ "\0\0\0\0",
    /*1260*/ "\x01\0\0\0",
    /*1264*/ "\0\0\0\0",
    /*1268*/ "GDC_PMF_MPI_Check\0\0\0",
    /*127c*/ "GDC_PMF_ConfigExt\0\0\0",
    /*1290*/ "GDC_FisheyePano360_FIFO_CFG\0",
    /*12ac*/ "GDC_FisheyeRectlinear_FIFO_CFG\0\0",
    /*12cc*/ "GDC_Fisheye_FIFO_CFG\0\0\0\0",
    /*12e4*/ "GDC_LDC_FIFO_CFG\0\0\0\0",
    /*12f8*/ "nnie0\0\0\0",
    /*1300*/ "\0\0\0\0",
    /*1304*/ "\0\0\0\0",
    /*1308*/ "\0\0\0\0",
    /*130c*/ "\0\0\0\0",
    /*1310*/ "\0\0\0\0",
    /*1314*/ "\0\0\0\0",
    /*1318*/ "\0\0\0\0",
    /*131c*/ "\0\0\0\0",
    /*1320*/ "\0\0\0\0",
    /*1324*/ "\0\0\0\0",
    /*1328*/ "\0\0\0\0",
    /*132c*/ "\0\0\0\0",
    /*1330*/ "\0\0\0\0",
    /*1334*/ "\0\0\0\0",
    /*1338*/ "\0\0\0\0",
    /*133c*/ "\0\0\0\0",
    /*1340*/ "\0\0\0\0",
    /*1344*/ "hisilicon,hisi-gdc\0\0",
    /*1358*/ "\0\0\0\0",
    /*135c*/ "\0\0\0\0",
    /*1360*/ "\0\0\0\0",
    /*1364*/ "\0\0\0\0",
    /*1368*/ "\0\0\0\0",
    /*136c*/ "\0\0\0\0",
    /*1370*/ "\0\0\0\0",
    /*1374*/ "\0\0\0\0",
    /*1378*/ "\0\0\0\0",
    /*137c*/ "\0\0\0\0",
    /*1380*/ "\0\0\0\0",
    /*1384*/ "\0\0\0\0",
    /*1388*/ "\0\0\0\0",
    /*138c*/ "\0\0\0\0",
    /*1390*/ "\0\0\0\0",
    /*1394*/ "\0\0\0\0",
    /*1398*/ "\0\0\0\0",
    /*139c*/ "\0\0\0\0",
    /*13a0*/ "\0\0\0\0",
    /*13a4*/ "\0\0\0\0",
    /*13a8*/ "\0\0\0\0",
    /*13ac*/ "\0\0\0\0",
    /*13b0*/ "\0\0\0\0",
    /*13b4*/ "\0\0\0\0",
    /*13b8*/ "\0\0\0\0",
    /*13bc*/ "\0\0\0\0",
    /*13c0*/ "\0\0\0\0",
    /*13c4*/ "\0\0\0\0",
    /*13c8*/ "\0\0\0\0",
    /*13cc*/ "\0\0\0\0",
    /*13d0*/ "\0\0\0\0",
    /*13d4*/ "\0\0\0\0",
    /*13d8*/ "\0\0\0\0",
    /*13dc*/ "\0\0\0\0",
    /*13e0*/ "\0\0\0\0",
    /*13e4*/ "\0\0\0\0",
    /*13e8*/ "\0\0\0\0",
    /*13ec*/ "\0\0\0\0",
    /*13f0*/ "\0\0\0\0",
    /*13f4*/ "\0\0\0\0",
    /*13f8*/ "\0\0\0\0",
    /*13fc*/ "\0\0\0\0",
    /*1400*/ "\0\0\0\0",
    /*1404*/ "\0\0\0\0",
    /*1408*/ "\0\0\0\0",
    /*140c*/ "\0\0\0\0",
    /*1410*/ "\0\0\0\0",
    /*1414*/ "\0\0\0\0",
    /*1418*/ "\0\0\0\0",
    /*141c*/ "\0\0\0\0",
    /*1420*/ "\0\0\0\0",
    /*1424*/ "\0\0\0\0",
    /*1428*/ "\0\0\0\0",
    /*142c*/ "\0\0\0\0",
    /*1430*/ "\0\0\0\0",
    /*1434*/ "\0\0\0\0",
    /*1438*/ "\0\0\0\0",
    /*143c*/ "\0\0\0\0",
    /*1440*/ "\0\0\0\0",
    /*1444*/ "\0\0\0\0",
    /*1448*/ "\0\0\0\0",
    /*144c*/ "\0\0\0\0",
    /*1450*/ "\0\0\0\0",
    /*1454*/ "\0\0\0\0",
    /*1458*/ "\0\0\0\0",
    /*145c*/ "\0\0\0\0",
    /*1460*/ "\0\0\0\0",
    /*1464*/ "\0\0\0\0",
    /*1468*/ "\0\0\0\0",
    /*146c*/ "\0\0\0\0",
    /*1470*/ "\0\0\0\0",
    /*1474*/ "\0\0\0\0",
    /*1478*/ "\0\0\0\0",
    /*147c*/ "\0\0\0\0",
    /*1480*/ "\0\0\0\0",
    /*1484*/ "\0\0\0\0",
    /*1488*/ "\0\0\0\0",
    /*148c*/ "max_gdc_node\0\0\0\0",
    /*149c*/ "max_gdc_task\0\0\0\0",
    /*14ac*/ "max_gdc_job\0",
    /*14b8*/ "gdc_en\0\0",
    /*14c0*/ "\x01\0\0\0",
    /*14c4*/ "\x04\0\0\0",
    /*14c8*/ "\0\0\0\0",
    /*14cc*/ "\0\0\0\0",
    /*14d0*/ "\0\0\0\0",
    /*14d4*/ ""
};

unsigned char rel.rodata[200] = {
    /*0000*/ "\x18\0\0\0",
    /*0004*/ "\x02\x06\0\0",
    /*0008*/ "\x1c\0\0\0",
    /*000c*/ "\x02\x06\0\0",
    /*0010*/ " \0\0\0",
    /*0014*/ "\x02\x06\0\0",
    /*0018*/ "$\0\0\0",
    /*001c*/ "\x02\x06\0\0",
    /*0020*/ "(\0\0\0",
    /*0024*/ "\x02\x06\0\0",
    /*0028*/ ",\0\0\0",
    /*002c*/ "\x02\x06\0\0",
    /*0030*/ "0\0\0\0",
    /*0034*/ "\x02\x06\0\0",
    /*0038*/ "4\0\0\0",
    /*003c*/ "\x02\x06\0\0",
    /*0040*/ "8\0\0\0",
    /*0044*/ "\x02\x06\0\0",
    /*0048*/ "<\0\0\0",
    /*004c*/ "\x02\x06\0\0",
    /*0050*/ "@\0\0\0",
    /*0054*/ "\x02\x06\0\0",
    /*0058*/ "D\0\0\0",
    /*005c*/ "\x02\x06\0\0",
    /*0060*/ "H\0\0\0",
    /*0064*/ "\x02\x06\0\0",
    /*0068*/ "L\0\0\0",
    /*006c*/ "\x02\x06\0\0",
    /*0070*/ "P\0\0\0",
    /*0074*/ "\x02\x06\0\0",
    /*0078*/ "T\0\0\0",
    /*007c*/ "\x02\x06\0\0",
    /*0080*/ "X\0\0\0",
    /*0084*/ "\x02\x06\0\0",
    /*0088*/ "\\0\0\0",
    /*008c*/ "\x02\x06\0\0",
    /*0090*/ "`\0\0\0",
    /*0094*/ "\x02\x06\0\0",
    /*0098*/ "d\0\0\0",
    /*009c*/ "\x02\x06\0\0",
    /*00a0*/ "h\0\0\0",
    /*00a4*/ "\x02\x06\0\0",
    /*00a8*/ "l\0\0\0",
    /*00ac*/ "\x02\x06\0\0",
    /*00b0*/ "p\0\0\0",
    /*00b4*/ "\x02\x06\0\0",
    /*00b8*/ "\xcc\x14\0\0",
    /*00bc*/ "\x02\xed\x04\0",
    /*00c0*/ "\xd0\x14\0\0",
    /*00c4*/ "\x02\xe4\x05\0",
    /*00c8*/ ""
};

unsigned char rodata.str1.4[28679] = {
    /*0000*/ "[Func]:%s [Line]:%d [Info]:notify has finished\n\0",
    /*0030*/ "[Func]:%s [Line]:%d [Info]:fmt = %d width = %d height = %d field = %d YphyAddr = %llX CbphyAddr = %llX CrphyAddr = %llX YVirAddr = %llX CbVirAddr = %llX CrVirAddr = %llX YStride = %d CbStride = %d CrStride = %d\n\0",
    /*0104*/ "    Free\0\0\0\0",
    /*0110*/ "   Begin\0\0\0\0",
    /*011c*/ "  EndJob\0\0\0\0",
    /*0128*/ "  Summit\0\0\0\0",
    /*0134*/ "WaitProc\0\0\0\0",
    /*0140*/ " Procing\0\0\0\0",
    /*014c*/ "  Proced\0\0\0\0",
    /*0158*/ " ProcErr\0\0\0\0",
    /*0164*/ "    Butt\0\0\0\0",
    /*0170*/ "\n[GDC] Version: [Hi3516CV500_MPP_V2.0.1.0 B090 Release], Build Time[Jan 14 2019, 20:23:44]\n\n\0\0\0\0",
    /*01d0*/ "\n-----MODULE PARAM-----------------------------\n\0\0\0\0",
    /*0204*/ "max_task_num\0\0\0\0",
    /*0214*/ "max_job_num\0",
    /*0220*/ "%15s%15s%15s\n\0\0\0",
    /*0230*/ "max_node_num\0\0\0\0",
    /*0240*/ "%15u%15u%15u\n\0\0\0",
    /*0250*/ "\n-----RECENT JOB INFO------------------------------------------------------------------\n\0\0\0\0",
    /*02ac*/ "%s\0\0",
    /*02b0*/ "\r\n\n\0",
    /*02b4*/ "\n%8d%8s%8d%8d%8s%12d%12d%12d%10d\0\0\0\0",
    /*02d8*/ "\r\n\0\0",
    /*02dc*/ "\n-----MAX WASTE TIME JOB INFO----------------------------------------------------------\n\0\0\0\0",
    /*0338*/ "\n-----GDC JOB STATUS--------------------------------------------------------------\n\0",
    /*038c*/ "\n%10d%10d%10d\0\0\0",
    /*039c*/ "%10d%10d%10d%10d%10d\0\0\0\0",
    /*03b4*/ "\n-----GDC TASK STATUS-----------------------------------------------------------\n\0\0\0",
    /*0408*/ "%10d%10d%10d\0\0\0\0",
    /*0418*/ "\n-----GDC NODE STATUS-----------------------------------------------------------\n\0\0\0",
    /*046c*/ "BusyNum\0",
    /*0474*/ "AllNodeNum\0\0",
    /*0480*/ "%13s%10s%10s%10s%12s%10s\n\0\0\0",
    /*049c*/ "IntFail\0",
    /*04a4*/ "SubmitFail\0\0",
    /*04b0*/ "MaxInJob\0\0\0\0",
    /*04bc*/ "MinFree\0",
    /*04c4*/ "%13d%10d%10d%10d%12d%10d\n\0\0\0",
    /*04e0*/ "\n-----GDC INT STATUS------------------------------------------------------------\n\0\0\0",
    /*0534*/ "\n%10d%10d%11d\0\0\0",
    /*0544*/ "\n-----GDC CALL VGS COVER STATUS--------------------------------------------------\n\0\0",
    /*0598*/ "BeginFail\0\0\0",
    /*05a4*/ "BeginSuc\0\0\0\0",
    /*05b0*/ "%12s%12s%12s%12s%12s%12s%12s\n\0\0\0",
    /*05d0*/ "CbCnt\0\0\0",
    /*05d8*/ "EndFail\0",
    /*05e0*/ "EndSuc\0\0",
    /*05e8*/ "TaskFail\0\0\0\0",
    /*05f4*/ "TaskSuc\0",
    /*05fc*/ "%12d%12d%12d%12d%12d%12d%12d\n\0\0\0",
    /*061c*/ "\n-----GDC CALL VGS SCALE STATUS--------------------------------------------------\n\0\0",
    /*0670*/ "\n-----GDC CALL CORRECTION STATUS-------------------------------------------------\n\0\0",
    /*06c4*/ "[Func]:%s [Line]:%d [Info]:FISHEYE:LMF[%d](%d) LMF[%d](%d) err\n\0",
    /*0704*/ "[Func]:%s [Line]:%d [Info]:FISHEYE:LMF[57]:%d LMF[85]:%d err\n\0\0\0",
    /*0744*/ "[Func]:%s [Line]:%d [Info]:FISHEYE: au16LMFCoef[0]:%d !\n\0\0\0\0",
    /*0780*/ "[Func]:%s [Line]:%d [Info]:pParam is NULL \n\0",
    /*07ac*/ "[Func]:%s [Line]:%d [Info]:GDC exit successfully...\n\0\0\0\0",
    /*07e4*/ "[Func]:%s [Line]:%d [Info]:gdc was query state:job num:%d, free job num:%d\n\0",
    /*0830*/ "[Func]:%s [Line]:%d [Info]:input NULL Ptr\n\0\0",
    /*085c*/ "[Func]:%s [Line]:%d [Info]:gdc mod not ready\n\0\0\0",
    /*088c*/ "HI_SUCCESS == s32Ret\0\0\0\0",
    /*08a4*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*08e4*/ "[Func]:%s [Line]:%d [Info]:in-img addr(Y:%llx) Err\n\0",
    /*0918*/ "[Func]:%s [Line]:%d [Info]:in-stride1:%d Err\n\0\0\0",
    /*0948*/ "[Func]:%s [Line]:%d [Info]:in-img addr(C:%llx) Err\n\0",
    /*097c*/ "[Func]:%s [Line]:%d [Info]:in-fmt:%d Err\n\0\0\0",
    /*09a8*/ "[Func]:%s [Line]:%d [Info]:in-VideoFormat:%d Err\n\0\0\0",
    /*09dc*/ "[Func]:%s [Line]:%d [Info]:in-enDynamicRange:%d in-enColorGamut:%d in-enField:%d Err\n\0\0\0",
    /*0a34*/ "[Func]:%s [Line]:%d [Info]:in-stride0:%d Err\n\0\0\0",
    /*0a64*/ "[Func]:%s [Line]:%d [Info]:in-CompressMode:%d Err\n\0\0",
    /*0a98*/ "[Func]:%s [Line]:%d [Info]:out-stride0:%d Err\n\0\0",
    /*0ac8*/ "[Func]:%s [Line]:%d [Info]:out-CompressMode:%d Err\n\0",
    /*0afc*/ "[Func]:%s [Line]:%d [Info]:enPixelFormat: in(%d) Out(%d) err\n\0\0\0",
    /*0b3c*/ "[Func]:%s [Line]:%d [Info]:LDC infmt:%d outfmt:%d err\n\0\0",
    /*0b74*/ "[Func]:%s [Line]:%d [Info]:LDC: bDIS(%d) Rotate(%d) inW:%d inH:%d outW:%d outH:%d err\n\0\0",
    /*0bcc*/ "[Func]:%s [Line]:%d [Info]:bPMFEn:%d Err\n\0\0\0",
    /*0bf8*/ "[Func]:%s [Line]:%d [Info]:in-size(%d,%d) Err\n\0\0",
    /*0c28*/ "[Func]:%s [Line]:%d [Info]:Gyro En :%d Err\n\0",
    /*0c54*/ "[Func]:%s [Line]:%d [Info]:Check u64HeaderPhyAddr[0] failed!\n\0\0\0",
    /*0c94*/ "[Func]:%s [Line]:%d [Info]:Check u64HeaderPhyAddr[1] failed!\n\0\0\0",
    /*0cd4*/ "[Func]:%s [Line]:%d [Info]:Check u64ExtPhyAddr[0] failed!\n\0\0",
    /*0d10*/ "[Func]:%s [Line]:%d [Info]:Check u64ExtPhyAddr[1] failed!\n\0\0",
    /*0d4c*/ "[Func]:%s [Line]:%d [Info]:Check u64PhyAddr[0] failed!\n\0",
    /*0d84*/ "[Func]:%s [Line]:%d [Info]:Check u64PhyAddr[1] failed!\n\0",
    /*0dbc*/ "NULL != pTaskNode\0\0\0",
    /*0dd0*/ "[Func]:%s [Line]:%d [Info]:in-VB mod %d chn %d add failed\n\0\0",
    /*0e0c*/ "[Func]:%s [Line]:%d [Info]:Out-VB mod %d chn %d add failed\n\n\0\0\0\0",
    /*0e4c*/ "[Func]:%s [Line]:%d [Info]:inimg VB++: pool:%d PhyAddr:0x%llx\n\0\0",
    /*0e8c*/ "[Func]:%s [Line]:%d [Info]:Outimg VB++: pool:%d PhyAddr:0x%llx\n\0",
    /*0ecc*/ "[Func]:%s [Line]:%d [Info]:input illegal param: job handle %d\n\0\0",
    /*0f0c*/ "NULL != pJob\0\0\0\0",
    /*0f1c*/ "[Func]:%s [Line]:%d [Info]:input illegal param: mod id %d\n\0\0",
    /*0f58*/ "[Func]:%s [Line]:%d [Info]:input illegal param: task callmodid %d (not equal job modid:%d)\n\0",
    /*0fb4*/ "[Func]:%s [Line]:%d [Info]:input illegal param: job calldevid %d\n\0\0\0",
    /*0ff8*/ "[Func]:%s [Line]:%d [Info]:input illegal param: task devid %d (not equal job devid:%d)\n\0",
    /*1050*/ "[Func]:%s [Line]:%d [Info]:input illegal param: job callchnid %d\n\0\0\0",
    /*1094*/ "[Func]:%s [Line]:%d [Info]:Canceling:%d, enJobType:%d err\n\0\0",
    /*10d0*/ "[Func]:%s [Line]:%d [Info]:enJobType:%d err\n\0\0\0\0",
    /*1100*/ "[Func]:%s [Line]:%d [Info]:enJobType:%d  enJobState:%d err\n\0",
    /*113c*/ "[Func]:%s [Line]:%d [Info]:hHandle:%d enCallModId:%d GetTask err\n\0\0\0",
    /*1180*/ "[Func]:%s [Line]:%d [Info]:addvb failed(0x%x)\n\0\0",
    /*11b0*/ "[Func]:%s [Line]:%d [Info]: In-VB mod %d chn %d sub Err\n\0\0\0\0",
    /*11ec*/ "[Func]:%s [Line]:%d [Info]: Out-VB mod %d chn %d sub Err\n\0\0\0",
    /*1228*/ "[Func]:%s [Line]:%d [Info]:inimg VB--: pool:%d PhyAddr:0x%llx\n\0\0",
    /*1268*/ "[Func]:%s [Line]:%d [Info]:Outimg VB--: pool:%d PhyAddr:0x%llx\n\0",
    /*12a8*/ "NULL != pCurTask\0\0\0\0",
    /*12bc*/ "[Func]:%s [Line]:%d [Info]:hal=%d job=%p\n\0\0\0",
    /*12e8*/ "[Func]:%s [Line]:%d [Info]:jobstate:%d not CREATED\n\0",
    /*131c*/ "[Func]:%s [Line]:%d [Info]:job from mod %d chn %d with handle %d has no task\n\0\0\0",
    /*136c*/ "HI_ID_BUTT > pJob->enCallModId\0\0",
    /*138c*/ "[Func]:%s [Line]:%d [Info]:SubmitJob err !\n\0",
    /*13b8*/ "[Func]:%s [Line]:%d [Info]:job(state :%d) cannot be canceled right now,it's not begin or has been done\n\0",
    /*1420*/ "[Func]:%s [Line]:%d [Info]:job(state :%d) cannot be canceled right now,it has been summit to hardware\n\0\0",
    /*1488*/ "[Func]:%s [Line]:%d [Info]:job(handle %d)(state :%d) now is canceling......\n\0\0\0\0",
    /*14d8*/ "[Func]:%s [Line]:%d [Info]:%s %d :job cancel failed!!\n\0\0",
    /*1510*/ "%s %d pJob->enJobState %d \n\0",
    /*152c*/ "0\0\0\0",
    /*1530*/ "[Func]:%s [Line]:%d [Info]:%s %d %d %d %d \n\0",
    /*155c*/ "[Func]:%s [Line]:%d [Info]:cancle job:%d (addr:%p) and free job num:%d, task num:%d\n\0\0\0\0",
    /*15b4*/ "[Func]:%s [Line]:%d [Info]:Mod : %d ,DevID : %d ChnID : %d now is canceling ,cannot cancel again\n\0\0\0",
    /*1618*/ "HI_NULL != pJob\0",
    /*1628*/ "[Func]:%s [Line]:%d [Info]:mod %d dev %d chn %d cancel job:%d failed\n\0\0\0",
    /*1670*/ "[Func]:%s [Line]:%d [Info]:%s %d %d %d %d %d \n\0\0",
    /*16a0*/ "NULL != pstProcInfo\0",
    /*16b4*/ "[Func]:%s [Line]:%d [Info]:input illegal param: job type %d\n\0\0\0\0",
    /*16f4*/ "[Func]:%s [Line]:%d [Info]:no free job for\n\0",
    /*1720*/ "GDC_JOB_STATE_FREE == pJob->enJobState\0\0",
    /*1748*/ "[Func]:%s [Line]:%d [Info]:BeginJob ok: put job(hdl=%d addr=%p)\n\0\0\0\0",
    /*178c*/ "[Func]:%s [Line]:%d [Info]:Correction Canceling:%d, enJobType:%d err\n\0\0\0",
    /*17d4*/ "[Func]:%s [Line]:%d [Info]:job not in created state,now state is %d\n\0\0\0\0",
    /*181c*/ "[Func]:%s [Line]:%d [Info]:gdc has no free task for job(%d) from mod %d !!\n\0",
    /*1868*/ "[Func]:%s [Line]:%d [Info]:addvb fail(0x%x)\n\0\0\0\0",
    /*1898*/ "[Func]:%s [Line]:%d [Info]:bLDCTask:%d Canceling:%d, enJobType:%d err\n\0\0",
    /*18e0*/ "[Func]:%s [Line]:%d [Info]:bLDCTask:%d enJobType:%d err\n\0\0\0\0",
    /*191c*/ "[Func]:%s [Line]:%d [Info]:not enough task\n\0",
    /*1948*/ "[Func]:%s [Line]:%d [Info]:Remap failed\n\0\0\0\0",
    /*1974*/ "[Func]:%s [Line]:%d [Info]:LenMap PhyAddr(0x%llx) invalid!\n\0",
    /*19b0*/ "[Func]:%s [Line]:%d [Info]:job %d need to config\n\0\0\0",
    /*19e4*/ "[Func]:%s [Line]:%d [Info]:Job Canceling,Task cannot add to a enJobType:%d job .\n\0\0\0",
    /*1a38*/ "[Func]:%s [Line]:%d [Info]:The ldc task cannot add to a enJobType:%d job .\n\0",
    /*1a84*/ "[Func]:%s [Line]:%d [Info]:GDC free task not enough for LDC\n\0\0\0\0",
    /*1ac4*/ "[Func]:%s [Line]:%d [Info]:GDC add vb failed with:0x%x.\n\0\0\0\0",
    /*1b00*/ "pJob->enJobState %d \n\0\0\0",
    /*1b18*/ "GDC_JOB_STATE_BUSY == pJob->enJobState\0\0",
    /*1b40*/ "HI_ID_BUTT > enModId\0\0\0\0",
    /*1b58*/ "pJobTemp->enJobState %d \n\0\0\0",
    /*1b74*/ "GDC_JOB_STATE_PROCING == pJobTemp->enJobState\0\0\0",
    /*1ba4*/ "NULL != pCurJob && (GDC_JOB_STATE_PROCED == pCurJob->enJobState || GDC_JOB_STATE_PROCING == pCurJob->enJobState)\0\0\0\0",
    /*1c18*/ "NULL != pCurJob && (GDC_JOB_STATE_BUSY == pCurJob->enJobState)\0\0",
    /*1c58*/ "NULL != pCurJob && GDC_JOB_STATE_CREATED == pCurJob->enJobState\0",
    /*1c98*/ "[Func]:%s [Line]:%d [Info]:GDC was notified to exit ...\n\0\0\0\0",
    /*1cd4*/ "[Func]:%s [Line]:%d [Info]:usr end job with handle %d failed, because this hanle is not begun by usr !\n\0",
    /*1d3c*/ "[Func]:%s [Line]:%d [Info]:U-job %d end failed\n\0",
    /*1d6c*/ "[Func]:%s [Line]:%d [Info]:wait_event_interruptible err, %d %d %d %d \n\0\0",
    /*1db4*/ "0 <= GdcHandle && GDC_MAX_JOB_NUM > GdcHandle\0\0\0",
    /*1de4*/ "%s %d pJob->enJobState  %d \n\0\0\0\0",
    /*1e04*/ "%s %d pJob is NULL \n\0\0\0\0",
    /*1e1c*/ "(NULL != pJob) && (GDC_JOB_STATE_PROCING == pJob->enJobState)\0\0\0",
    /*1e5c*/ "[Func]:%s [Line]:%d [Info]: Proc job num:%d, first Job:%d(addr:%p)\n\0",
    /*1ea0*/ "ModuleParam: max_gdc_job %d Range[%d,%d] Default %d\n\0\0\0\0",
    /*1ed8*/ "ModuleParam: max_gdc_task %d Range[%d,%d] Default %d\n\0\0\0",
    /*1f10*/ "ModuleParam: max_gdc_task %d Range [%d,%d] Default %d\n\0\0",
    /*1f48*/ "ModuleParam: max_gdc_node %d Range[%d,%d] Default %d\n\0\0\0",
    /*1f80*/ "ModuleParam: max_gdc_node %d Range[%d,%d] Default %d!\n\0\0",
    /*1fb8*/ "ModuleParam: gdc_weight_threshold %d Range[%d,%d] Default %d!\n\0\0",
    /*1ff8*/ "ModuleParam:gdc_en[0]=%d Range[1]\n\0\0",
    /*201c*/ "GDC module param is illegal!\n\0\0\0",
    /*203c*/ "[Func]:%s [Line]:%d [Info]:vmalloc for g_pstGdcCtx(size = %lu)failed!!  \n\0\0\0",
    /*2088*/ "[Func]:%s [Line]:%d [Info]:open hal err = %X\n\0\0\0",
    /*20b8*/ "[Func]:%s [Line]:%d [Info]:open drv err = %X\n\0\0\0",
    /*20e8*/ "[Func]:%s [Line]:%d [Info]:Check in-img err\n\0\0\0\0",
    /*2118*/ "[Func]:%s [Line]:%d [Info]:Check out-img err\n\0\0\0",
    /*2148*/ "[Func]:%s [Line]:%d [Info]:enDynamicRange:%d is Err\n\0\0\0\0",
    /*2180*/ "[Func]:%s [Line]:%d [Info]:IN-img size(%u,%u) illegal\n\0\0",
    /*21b8*/ "[Func]:%s [Line]:%d [Info]:job %u cannot be canceled, it's not the user job !\n\0\0",
    /*2208*/ "gdc\0",
    /*220c*/ "[Func]:%s [Line]:%d [Info]:Regist device err.\n\0\0",
    /*223c*/ "Hi3516CV500\0",
    /*2248*/ "load gdc.ko for %s...FAILURE!\n\0\0",
    /*2268*/ "[Func]:%s [Line]:%d [Info]:GDC create proc failed. \n\0\0\0\0",
    /*22a0*/ "[Func]:%s [Line]:%d [Info]:GDC atomic init failed. \n\0\0\0\0",
    /*22d8*/ "[Func]:%s [Line]:%d [Info]:GDC Init init failed. \n\0\0",
    /*230c*/ "[Func]:%s [Line]:%d [Info]:gdc lock init failed. \n\0\0",
    /*2340*/ "[Func]:%s [Line]:%d [Info]:gdc nnie lock init failed \n\0\0",
    /*2378*/ "[Func]:%s [Line]:%d [Info]:gdc sem init failed. \n\0\0\0",
    /*23ac*/ "load gdc.ko for %s...OK!\n\0\0\0",
    /*23c8*/ "unload gdc.ko for %s...OK!\n\0",
    /*23e4*/ "    IntNum\0\0",
    /*23f0*/ "     IntTm\0\0",
    /*23fc*/ " HalProcTm\0\0",
    /*2408*/ " AllTaskNum\0",
    /*2414*/ "    FreeNum\0",
    /*2420*/ "    BusyNum\0",
    /*242c*/ "   Success\0\0",
    /*2438*/ "      Fail\0\0",
    /*2444*/ "    Cancel\0\0",
    /*2450*/ "  AllJobNum\0",
    /*245c*/ "   BeginNum\0",
    /*2468*/ " ProcingNum\0",
    /*2474*/ "   SeqNo\0\0\0\0",
    /*2480*/ " ModName\0\0\0\0",
    /*248c*/ "  JobHdl\0\0\0\0",
    /*2498*/ " TaskNum\0\0\0\0",
    /*24a4*/ "   State\0\0\0\0",
    /*24b0*/ "      InSize\0\0\0\0",
    /*24c0*/ "     OutSize\0\0\0\0",
    /*24d0*/ "    CostTime\0\0\0\0",
    /*24e0*/ "    HwTime\0\0",
    /*24ec*/ "[Func]:%s [Line]:%d [Info]:no free node\n\0\0\0\0",
    /*2518*/ "[Func]:%s [Line]:%d [Info]:node busy list empty\0",
    /*2548*/ "[Func]:%s [Line]:%d [Info]:GDC chn ID(%d) is invalid chn, chn's range is [%d, %d].\r\n\0\0\0\0",
    /*25a0*/ "[Func]:%s [Line]:%d [Info]:enDynamicRange:%d is Err\n\0\0\0\0",
    /*25d8*/ "[Func]:%s [Line]:%d [Info]:GDC Gyro task failed ! \n\0",
    /*260c*/ "[Func]:%s [Line]:%d [Info]:Pipe:%d Chn:%d FIFO_CFG failed ! \n\0\0\0",
    /*264c*/ "[Func]:%s [Line]:%d [Info]:Pipe:%d Chn:%d addpmf task failed ! \n\0\0\0\0",
    /*2690*/ "0\0\0\0",
    /*2694*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*26d4*/ "[Func]:%s [Line]:%d [Info]:GDC_PMF_And_Rotation_CFG coef! \n\0",
    /*2710*/ "[Func]:%s [Line]:%d [Info]:GDC_DstSize_CFG failed ! \n\0\0\0",
    /*2748*/ "[Func]:%s [Line]:%d [Info]:GDC PMF FIFO CFG failed ! \n\0\0",
    /*2780*/ "[Func]:%s [Line]:%d [Info]:GDC Addpmf task failed ! \n\0\0\0",
    /*27b8*/ "[Func]:%s [Line]:%d [Info]:GDC_LDCRatio0_CFG failed!\n\0\0\0",
    /*27f0*/ "[Func]:%s [Line]:%d [Info]:Pipe:%d Chn:%d FIFO_CFG failed!\n\0",
    /*282c*/ "[Func]:%s [Line]:%d [Info]:Pipe:%d Chn:%d FIFO_CFG Err! \n\0\0\0",
    /*2868*/ "[Func]:%s [Line]:%d [Info]:Pipe:%d Chn:%d addtask failed ! \n\0\0\0\0",
    /*28a8*/ "[Func]:%s [Line]:%d [Info]:GDC_LDC_FIFO_CFG failed ! \n\0\0",
    /*28e0*/ "[Func]:%s [Line]:%d [Info]:GDC Add LDC Task failed ! \n\0\0",
    /*2918*/ "[Func]:%s [Line]:%d [Info]:GDC_LDCRatio0_CFG failed ! \n\0",
    /*2950*/ "[Func]:%s [Line]:%d [Info]:GDC_PMF_FIFO_CFG failed ! \n\0\0",
    /*2988*/ "[Func]:%s [Line]:%d [Info]:GDC Add PMF Task failed ! \n\0\0",
    /*29c0*/ "[Func]:%s [Line]:%d [Info]:Pipe:%d Chn:%d add gdc pmf task failed ! \n\0\0\0",
    /*2a08*/ "[Func]:%s [Line]:%d [Info]:Add GDC LDC task failed ! \n\0\0",
    /*2a40*/ "[Func]:%s [Line]:%d [Info]:GDC add LDC task failed ! \n\0\0",
    /*2a78*/ "[Func]:%s [Line]:%d [Info]:LDC In-pixelformat(%d) illegal\n\0\0",
    /*2ab4*/ "[Func]:%s [Line]:%d [Info]:LDC In-CompressMode %d illegal\n\0\0",
    /*2af0*/ "[Func]:%s [Line]:%d [Info]:LDC in_size(%d,%d) illegal\n\0\0",
    /*2b28*/ "[Func]:%s [Line]:%d [Info]:LDC XRatio:%d Range[%d,%d];YRatio:%d Range[%d,%d]\n\0\0\0",
    /*2b78*/ "[Func]:%s [Line]:%d [Info]:LDC s32XYRatio:%d Range[%d,%d].\n\0",
    /*2bb4*/ "[Func]:%s [Line]:%d [Info]:LDC bAspect %d Err!\n\0",
    /*2be4*/ "[Func]:%s [Line]:%d [Info]:LDC s32CenterXOffset:%d Range[%d,%d];s32CenterYOffset:%d Range[%d,%d].\n\0\0",
    /*2c48*/ "[Func]:%s [Line]:%d [Info]:LDC s32DistortionRatio:%d Range[%d,%d]\n\0\0",
    /*2c8c*/ "[Func]:%s [Line]:%d [Info]:spread_benable:%u should 0/1.\n\0\0\0",
    /*2cc8*/ "[Func]:%s [Line]:%d [Info]:spreadcoef:%u Range[0,%u].\n\0\0",
    /*2d00*/ "[Func]:%s [Line]:%d [Info]:spread dest width(%d) item must be align at 2.\n\0\0",
    /*2d4c*/ "[Func]:%s [Line]:%d [Info]:spread dest height(%d) item must be align at 2.\n\0",
    /*2d98*/ "[Func]:%s [Line]:%d [Info]:LDCV2 s32FocalLenX:%d Range[%d,%d];s32FocalLenY:%d Range[%d,%d]\n\0",
    /*2df4*/ "[Func]:%s [Line]:%d [Info]:LDCV2 s32CoorShiftX:%d Range[%d,%d];s32CoorShiftY:%d Range[%d,%d]\n\0\0\0",
    /*2e54*/ "[Func]:%s [Line]:%d [Info]:RotationEx in_size(%d,%d) illegal\n\0\0\0",
    /*2e94*/ "[Func]:%s [Line]:%d [Info]:RotateEx enViewType(%u) Range[0,%d];u32Angle(%u) Range[0,%d].\n\0\0\0",
    /*2ef0*/ "[Func]:%s [Line]:%d [Info]:RotateEx s32CenterXOffset:%d Range[%d,%d] s32CenterYOffset:%d Range[%d,%d]\n\0\0",
    /*2f58*/ "[Func]:%s [Line]:%d [Info]:RotateEx Dst-Size(%d,%d) Err.\n\0\0\0",
    /*2f94*/ "[Func]:%s [Line]:%d [Info]:NULL point \r\n\0\0\0\0",
    /*2fc0*/ "[Func]:%s [Line]:%d [Info]:User Sub Err! 0x%x \r\n\0\0\0\0",
    /*2ff4*/ "[Func]:%s [Line]:%d [Info]:VI:VB invalid \r\n\0",
    /*3020*/ "[Func]:%s [Line]:%d [Info]:GDC_AddVb fail with 0x%x!\n\0\0\0",
    /*3058*/ "HI_NULL != pNode\0\0\0\0",
    /*306c*/ "HI_NULL != pstSubmitTask\0\0\0\0",
    /*3088*/ "[Func]:%s [Line]:%d [Info]:Vgs scale task finish status is NOK ! enFinishStat: 0x%x\n\0\0\0\0",
    /*30e0*/ "HI_NULL != pstLowDelayInfo\0\0",
    /*30fc*/ "[Func]:%s [Line]:%d [Info]:PutVb Err 0x%x!\n\0",
    /*3128*/ "[Func]:%s [Line]:%d [Info]:GDC-enFinishStat: 0x%x Err\n\0\0",
    /*3160*/ "[Func]:%s [Line]:%d [Info]:PutVb fail!\n\0",
    /*3188*/ "[Func]:%s [Line]:%d [Info]:GDC:VB invalid \r\n\0\0\0\0",
    /*31b8*/ "[Func]:%s [Line]:%d [Info]:SYS_GetVBCfg is NULL!\n\0\0\0",
    /*31ec*/ "[Func]:%s [Line]:%d [Info]:MmzName is not TRUE!\n\0\0\0\0",
    /*3220*/ "[Func]:%s [Line]:%d [Info]:GDC get mmz name fail!\n\0\0",
    /*3254*/ "[Func]:%s [Line]:%d [Info]:GetVB fail,size %d\n\0\0",
    /*3284*/ "[Func]:%s [Line]:%d [Info]:VideoFormat :%d Err\n\0",
    /*32b4*/ "[Func]:%s [Line]:%d [Info]:PixelFormat :%d Err\n\0",
    /*32e4*/ "[Func]:%s [Line]:%d [Info]:GetVb:(%d,%d) Fail.\n\0",
    /*3314*/ "[Func]:%s [Line]:%d [Info]:GDC get free node fail !\n\0\0\0\0",
    /*334c*/ "[Func]:%s [Line]:%d [Info]:MidProc fail 0x%x!\n\0\0",
    /*337c*/ "[Func]:%s [Line]:%d [Info]:Add dis and LDC task fail with 0x%x!\n\0\0\0\0",
    /*33c0*/ "[Func]:%s [Line]:%d [Info]:Get VB fail 0x%x!\n\0\0\0",
    /*33f0*/ "[Func]:%s [Line]:%d [Info]:Add spreadtask fail 0x%x!\n\0\0\0",
    /*3428*/ "[Func]:%s [Line]:%d [Info]:Add rotationex task fail 0x%x!\n\0\0",
    /*3464*/ "[Func]:%s [Line]:%d [Info]:End job fail 0x%x!\n\0\0",
    /*3494*/ "[Func]:%s [Line]:%d [Info]:AddVb fail 0x%x!\n\0\0\0\0",
    /*34c4*/ "[Func]:%s [Line]:%d [Info]:get free node fail!\n\0",
    /*34f4*/ "[Func]:%s [Line]:%d [Info]:Middle Proc fail 0x%x!\n\0\0",
    /*3528*/ "[Func]:%s [Line]:%d [Info]:Addtask fail 0x%x!\n\0\0",
    /*3558*/ "[Func]:%s [Line]:%d [Info]:Add spread task fail 0x%x!\n\0\0",
    /*3590*/ "[Func]:%s [Line]:%d [Info]:End job fail with 0x%x!\n\0",
    /*35c4*/ "[Func]:%s [Line]:%d [Info]:Add spread task fail with 0x%x!\n\0",
    /*3600*/ "[Func]:%s [Line]:%d [Info]:GDC Begin Job fail with 0x%x!\n\0\0\0",
    /*363c*/ "[Func]:%s [Line]:%d [Info]:Add dis And LDC task fail with 0x%x!\n\0\0\0\0",
    /*3680*/ "[Func]:%s [Line]:%d [Info]:Add one of rotation task fail with 0x%x!\n\0\0\0\0",
    /*36c8*/ "[Func]:%s [Line]:%d [Info]:Gdc Begin Job fail with 0x%x!\n\0\0\0",
    /*3704*/ "[Func]:%s [Line]:%d [Info]:Add dis and LDC+DIS task fail with 0x%x!\n\0\0\0\0",
    /*374c*/ "[Func]:%s [Line]:%d [Info]:Add dis task fail with 0x%x!\n\0\0\0\0",
    /*3788*/ "[Func]:%s [Line]:%d [Info]:Add Spread task fail with 0x%x!\n\0",
    /*37c4*/ "[Func]:%s [Line]:%d [Info]:Add rotation_ex task fail with 0x%x!\n\0\0\0\0",
    /*3808*/ "[Func]:%s [Line]:%d [Info]:Add Gyro task fail with 0x%x!\n\0\0\0",
    /*3844*/ "[Func]:%s [Line]:%d [Info]:Gdc begin job fail with 0x%x!\n\0\0\0",
    /*3880*/ "[Func]:%s [Line]:%d [Info]:Add spread and LDC task fail with 0x%x!\n\0",
    /*38c4*/ "[Func]:%s [Line]:%d [Info]:Add LDC task fail with 0x%x!\n\0\0\0\0",
    /*3900*/ "[Func]:%s [Line]:%d [Info]:can't get VGS export function, it may be VGS module has not been inserted\n\0\0\0",
    /*3968*/ "[Func]:%s [Line]:%d [Info]:VGS job start fail!\n\0",
    /*3998*/ "[Func]:%s [Line]:%d [Info]:get VGS task fail!\n\0\0",
    /*39c8*/ "[Func]:%s [Line]:%d [Info]:GDC Add pmf task failed ! \n\0\0",
    /*3a00*/ "[Func]:%s [Line]:%d [Info]:Vgs end job fail with 0x%x!\n\0",
    /*3a38*/ "[Func]:%s [Line]:%d [Info]:Add task or end job fail with 0x%x!\n\0",
    /*3a78*/ "[Func]:%s [Line]:%d [Info]:Add Vgs Rotation task fail with 0x%x!\n\0\0\0",
    /*3abc*/ "[Func]:%s [Line]:%d [Info]:PutVb Err!\n\0\0",
    /*3ae4*/ "[Func]:%s [Line]:%d [Info]:enFinishStat: 0x%x\n Err\n\0",
    /*3b18*/ "[Func]:%s [Line]:%d [Info]:Begin job fail with 0x%x!\n\0\0\0",
    /*3b50*/ "[Func]:%s [Line]:%d [Info]:Add bypass task fail with 0x%x!\n\0",
    /*3b8c*/ "[Func]:%s [Line]:%d [Info]:gdc chn %d not created\n\0\0",
    /*3bc0*/ "[Func]:%s [Line]:%d [Info]:gdc chn %d Gyro algorithm not inited\n\0\0\0\0",
    /*3c04*/ "[Func]:%s [Line]:%d [Info]:can't get GyroDis export function, it may be GyroDis module has not been inserted\n\0\0\0",
    /*3c74*/ "[Func]:%s [Line]:%d [Info]:pfnGyroDisGDCPreProDis fail!\n\0\0\0\0",
    /*3cb0*/ "[Func]:%s [Line]:%d [Info]:All GDC chn are busy!\n\0\0\0",
    /*3ce4*/ "[Func]:%s [Line]:%d [Info]:GDC_DRV_MallocAngleVelAddr 0x%x!\n\0\0\0\0",
    /*3d24*/ "[Func]:%s [Line]:%d [Info]:pfnGyroDisInit fail!\n\0\0\0\0",
    /*3d58*/ "[Func]:%s [Line]:%d [Info]:pfnGyroDisDeInit fail!\n\0\0",
    /*3d8c*/ "[Func]:%s [Line]:%d [Info]:gdc create chn vmalloc failed !\n\0",
    /*3dc8*/ "[Func]:%s [Line]:%d [Info]:Gdc Get ChnId failed : 0x%x !\n\0\0\0",
    /*3e04*/ "[Func]:%s [Line]:%d [Info]:to free queue buff:%p\n\0\0\0",
    /*3e38*/ "[Func]:%s [Line]:%d [Info]:to free task node buff:%p\n\0\0\0",
    /*3e70*/ "[Func]:%s [Line]:%d [Info]:to free job index buff:%p\n\0\0\0",
    /*3ea8*/ "[Func]:%s [Line]:%d [Info]:to free job node buff:%p\n\0\0\0\0",
    /*3ee0*/ "[Func]:%s [Line]:%d [Info]:malloc NodeList buf(%u*%lu byte) for GDC err\n\0\0\0\0",
    /*3f2c*/ "[Func]:%s [Line]:%d [Info]:node free list empty\0",
    /*3f5c*/ "plist != HI_NULL\0\0\0\0",
    /*3f70*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*3fb0*/ "[Func]:%s [Line]:%d [Info]:node busy list empty\0",
    /*3fe0*/ "[Func]:%s [Line]:%d [Info]:BusyList null\n\0\0\0",
    /*400c*/ "NULL != pJobBuf\0",
    /*401c*/ "NULL != pTaskBuf\0\0\0\0",
    /*4030*/ "[Func]:%s [Line]:%d [Info]:job free list empty\0\0",
    /*4060*/ "pJob != HI_NULL\0",
    /*4070*/ "[Func]:%s [Line]:%d [Info]:task list of job %p empty\n\0\0\0",
    /*40a8*/ "[Func]:%s [Line]:%d [Info]:malloc buf(%ubyte) for GDC err\n\0\0",
    /*40e4*/ "[Func]:%s [Line]:%d [Info]:malloc job index buf(%u*%lu byte) for GDC err\n\0\0\0",
    /*4130*/ "[Func]:%s [Line]:%d [Info]:malloc JobList buf(%u*%lu byte) for GDC err\n\0",
    /*4178*/ "[Func]:%s [Line]:%d [Info]:malloc TaskList buf(%u*%lu byte) for GDC err\n\0\0\0\0",
    /*41c4*/ "[Func]:%s [Line]:%d [Info]:CreatedJobList null\n\0",
    /*41f4*/ "[Func]:%s [Line]:%d [Info]:job  busylist[%d][%d][%d] empty\n\0",
    /*4230*/ "pListNext != HI_NULL\0\0\0\0",
    /*4248*/ "[Func]:%s [Line]:%d [Info]:BusyList null!\n\0\0",
    /*4274*/ "[Func]:%s [Line]:%d [Info]:ProcList is null!\n\0\0\0",
    /*42a4*/ "HI_NULL != pstGdcTaskOrig\0\0\0",
    /*42c0*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*4300*/ "[Func]:%s [Line]:%d [Info]:no busy node\n\0\0\0\0",
    /*432c*/ "HI_NULL != pNode\0\0\0\0",
    /*4340*/ "HI_NULL != pstSubmitTask\0\0\0\0",
    /*435c*/ "[Func]:%s [Line]:%d [Info]:Gdc correction task finish status is NOK ! enFinishStat: 0x%x\n\0\0\0",
    /*43b8*/ "HI_NULL != pstVgsTaskOrig\0\0\0",
    /*43d4*/ "[Func]:%s [Line]:%d [Info]:Vgs scale task finish status is NOK ! enFinishStat: 0x%x\n\0\0\0\0",
    /*442c*/ "HI_NULL != pstFishEyeDrvAttr\0\0\0\0",
    /*444c*/ "u32Index < u32RegionNum\0",
    /*4464*/ "[Func]:%s [Line]:%d [Info]:Begin gdc job failed ! CallModId:%d, u32CallChnId:%d.\n\0\0\0",
    /*44b8*/ "[Func]:%s [Line]:%d [Info]:Add gdc correction task failed ! CallModId:%d, u32CallChnId:%d.\n\0",
    /*4514*/ "[Func]:%s [Line]:%d [Info]:End gdc job failed ! CallModId:%d, u32CallChnId:%d.\n\0",
    /*4564*/ "[Func]:%s [Line]:%d [Info]:can't get VGS export function, it may be VGS module has not been inserted\n\0\0\0",
    /*45cc*/ "[Func]:%s [Line]:%d [Info]:Begin vgs job failed ! CallModId:%d.\n\0\0\0\0",
    /*4610*/ "[Func]:%s [Line]:%d [Info]:get vgs task failed ! CallModId:%d.\n\0",
    /*4650*/ "[Func]:%s [Line]:%d [Info]:Add vgs online task failed ! CallModId:%d.\n\0\0",
    /*4698*/ "[Func]:%s [Line]:%d [Info]:End vgs job failed ! CallModId:%d.\n\0\0",
    /*46d8*/ "[Func]:%s [Line]:%d [Info]:Add vgs cover task failed ! CallModId:%d.\n\0\0\0",
    /*4720*/ "[Func]:%s [Line]:%d [Info]:no free node\n\0\0\0\0",
    /*474c*/ "[Func]:%s [Line]:%d [Info]:gdc correction REGION:%d width:%d NEITHER align by 256 NOR equal to (output width - x):%d!(when COMPRESS output).\n\0\0\0",
    /*47dc*/ "[Func]:%s [Line]:%d [Info]:gdc correction REGION:%d x:%d NOT align by 256!\n\0",
    /*4828*/ "[Func]:%s [Line]:%d [Info]:gdc correction REGION 0 does NOT cover the whole output!\n\0\0\0\0",
    /*4880*/ "[Func]:%s [Line]:%d [Info]:illegal param: in img size(%u,%u)\n\0\0\0",
    /*48c0*/ "[Func]:%s [Line]:%d [Info]:illegal param: out img size(%u,%u)\n\0\0",
    /*4900*/ "[Func]:%s [Line]:%d [Info]:input illegal param: in img fmt: %d\n\0",
    /*4940*/ "[Func]:%s [Line]:%d [Info]:illegal param: in img CompressMode: %d\n\0\0",
    /*4984*/ "[Func]:%s [Line]:%d [Info]:output illegal param: out img fmt: %d\n\0\0\0",
    /*49c8*/ "[Func]:%s [Line]:%d [Info]:output illegal param: out img fmt: %d must be YUV400 while input is YUV400\n\0\0",
    /*4a30*/ "[Func]:%s [Line]:%d [Info]:illegal param: out img CompressMode: %d\n\0",
    /*4a74*/ "[Func]:%s [Line]:%d [Info]:GDC_CheckCompressOutputAlign check gdc correction compress output align err \n\0\0\0\0",
    /*4ae0*/ "[Func]:%s [Line]:%d [Info]:GDC_CheckSeamlessOutput check gdc correction seamless output err \n\0\0\0",
    /*4b40*/ "[Func]:%s [Line]:%d [Info]:bBgColor MUST BE TRUE when COMPRESS output UNLESS region_num is 1 and cover the whole output!\n\0\0\0",
    /*4bbc*/ "[Func]:%s [Line]:%d [Info]:gdc correction region num:%u is illegal,range is [1,%u].\n\0\0\0\0",
    /*4c14*/ "[Func]:%s [Line]:%d [Info]:gdc correction REGION:%u InRadius:%u MUST BE smaller than OutRadius:%u.\n\0",
    /*4c78*/ "[Func]:%s [Line]:%d [Info]:gdc correction REGION %u OutRadius:%u is invalid, the range is[1, %u].\n\0\0",
    /*4cdc*/ "[Func]:%s [Line]:%d [Info]:gdc correction REGION:%d u32Pan:%u is invalid, the range is[0, %u].\n\0",
    /*4d3c*/ "[Func]:%s [Line]:%d [Info]:gdc correction REGION:%u u32Tilt:%u is invalid, the range is[0, %u].\n\0\0\0\0",
    /*4da0*/ "[Func]:%s [Line]:%d [Info]:gdc correction REGION:%u u32HorZoom:%u is invalid, the range is[%u, %u].\n\0\0\0\0",
    /*4e08*/ "[Func]:%s [Line]:%d [Info]:gdc correction REGION:%u u32VerZoom:%d is invalid, the range is[%u, %u].\n\0\0\0\0",
    /*4e70*/ "[Func]:%s [Line]:%d [Info]:gdc correction REGION:%d view mode 180 is invalid with desktop or ceiling mount.\n\0\0\0\0",
    /*4ee0*/ "[Func]:%s [Line]:%d [Info]:gdc correction REGION:%d view mode 360 is invalid with wall mount.\n\0\0",
    /*4f40*/ "[Func]:%s [Line]:%d [Info]:gdc correction REGION:%d output image x:%d y:%d is not align.\n\0\0\0",
    /*4f9c*/ "[Func]:%s [Line]:%d [Info]:gdc correction REGION:%d output image x:%d y:%d is illegal.\n\0",
    /*4ff4*/ "[Func]:%s [Line]:%d [Info]:gdc correction REGION:%d x:%d y:%d is illegal, output img width:%d, height:%d.\n\0\0",
    /*5060*/ "[Func]:%s [Line]:%d [Info]:gdc correction REGION:%u output region width:%u is not align.\n\0\0\0",
    /*50bc*/ "[Func]:%s [Line]:%d [Info]:gdc correction REGION:%d output region height:%d is not align.\n\0\0",
    /*5118*/ "[Func]:%s [Line]:%d [Info]:gdc correction REGION:%u output region width:%u  is illegal, range[%u, %u].\n\0",
    /*5180*/ "[Func]:%s [Line]:%d [Info]:gdc correction REGION:%u output region height:%u  is illegal, range[%u, %u].\n\0\0\0\0",
    /*51ec*/ "[Func]:%s [Line]:%d [Info]:fishey correction REGION:%u output region x:%d, y:%d, width:%u height:%u is illegal, output img width:%u, height:%u.\n\0\0\0\0",
    /*5280*/ "[Func]:%s [Line]:%d [Info]:gdc correction bEnable:%d is neither HI_TRUE nor HI_FALSE.\n\0\0",
    /*52d8*/ "[Func]:%s [Line]:%d [Info]:gdc correction bBgColor:%d is neither HI_TRUE nor HI_FALSE.\n\0",
    /*5330*/ "[Func]:%s [Line]:%d [Info]:illegal param: background color (0x%x) err, range is [0x%x,0x%x]\n\0\0\0\0",
    /*5390*/ "[Func]:%s [Line]:%d [Info]:gdc correction s32HorOffset:%d is illegal, range is [%d,%d].\n\0\0\0\0",
    /*53ec*/ "[Func]:%s [Line]:%d [Info]:gdc correction s32VerOffset:%d is illegal, range is [%d,%d].\n\0\0\0\0",
    /*5448*/ "[Func]:%s [Line]:%d [Info]:gdc correction s32FanStrength:%d is illegal, range is [%d,%d].\n\0\0",
    /*54a4*/ "[Func]:%s [Line]:%d [Info]:gdc correction u32TrapezoidCoef:%u is illegal, range is [0,%u].\n\0",
    /*5500*/ "[Func]:%s [Line]:%d [Info]:Add gdc correction task failed ! CallModId:%d, CallChnId:%d.\n\0\0\0\0",
    /*555c*/ "[Func]:%s [Line]:%d [Info]:End gdc job failed ! CallModId:%d, u32CallDevId:%d CallChnId:%d.\n\0\0\0\0",
    /*55bc*/ "[Func]:%s [Line]:%d [Info]:End gdc job failed ! CallModId:%d, CallChnId:%d.\n\0\0\0\0",
    /*560c*/ "[Func]:%s [Line]:%d [Info]:Gdc call VGS cover Task finish status is NOK ! enFinishStat: 0x%x\n\0\0\0",
    /*566c*/ "[Func]:%s [Line]:%d [Info]:gdc correction bEnable is not HI_TRUE.\n\0\0",
    /*56b0*/ "[Func]:%s [Line]:%d [Info]:check gdc correction frame attr err \n\0\0\0\0",
    /*56f4*/ "[Func]:%s [Line]:%d [Info]:Job handle(%d) enJobState:%d is Wrong.\n\0\0",
    /*5738*/ "pDrvJob->enJobState %d \n\0\0\0\0",
    /*5754*/ "0\0\0\0",
    /*5758*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*5798*/ "NULL != pJob\0\0\0\0",
    /*57a8*/ "GDC_JOB_STATE_BUSY == pJob->enJobState\0\0",
    /*57d0*/ "NULL != pDrvTask\0\0\0\0",
    /*57e4*/ "NULL != pDrvJob\0",
    /*57f4*/ "GDC_JOB_STATE_SUMMITTING == pDrvJob->enJobState || GDC_JOB_STATE_WAITPROC == pDrvJob->enJobState\0\0\0\0",
    /*5858*/ "HI_NULL != pDrvNode\0",
    /*586c*/ "[Func]:%s [Line]:%d [Info]:vgs has no free node for job(%d) from mod %d when interrupt!!\n\0\0\0",
    /*58c8*/ "[Func]:%s [Line]:%d [Info]:LMF coefficient update!\n\0",
    /*58fc*/ "HI_NULL != pJob\0",
    /*590c*/ "[Func]:%s [Line]:%d [Info]:SysExiting bExiting:%d\n\0\0",
    /*5940*/ "GDC_JOB_STATE_FREE == pDrvJob->enJobState\0\0\0",
    /*596c*/ "pDrvJob->s32NodeNum > 0\0",
    /*5984*/ "[Func]:%s [Line]:%d [Info]:no free node:job:%d mod:%d s32FreeNode %d ,need:%d\n\0\0",
    /*59d4*/ "[Func]:%s [Line]:%d [Info]:not submi:job(%d) mod:%d g_u32GdcJobNotReadyCnt:%d\n\0\0",
    /*5a24*/ "[Func]:%s [Line]:%d [Info]:u32GdcId:%d nodeid should be %d but actual %d\n\0\0\0",
    /*5a70*/ "[Func]:%s [Line]:%d [Info]:u32GdcId:%d inttrupes abnormal : 0x%x\n\0\0\0",
    /*5ab4*/ "[Func]:%s [Line]:%d [Info]:vmalloc for g_pstGdcCtx failed!!  \n\0\0",
    /*5af4*/ "[Func]:%s [Line]:%d [Info]:osal_vmalloc for apbCancelFlags[] failed!!\n\0\0",
    /*5b3c*/ "[Func]:%s [Line]:%d [Info]:GDC_DrvInitBuf err = %X\n\0",
    /*5b70*/ "[Func]:%s [Line]:%d [Info]:GDC_HAL_Open err = %X\n\0\0\0",
    /*5ba4*/ "[Func]:%s [Line]:%d [Info]:BusyTotalJobNum not 0\n\0\0\0",
    /*5bd8*/ "[Func]:%s [Line]:%d [Info]:job not all free!\n\0\0\0",
    /*5c08*/ "[Func]:%s [Line]:%d [Info]:Task not all free!\n\0\0",
    /*5c38*/ "[Func]:%s [Line]:%d [Info]:node not all free!\n\0\0",
    /*5c68*/ "[Func]:%s [Line]:%d [Info]:to free job index buff:%p\n\0\0\0",
    /*5ca0*/ "[Func]:%s [Line]:%d [Info]:to free job node buff:%p\n\0\0\0\0",
    /*5cd8*/ "[Func]:%s [Line]:%d [Info]:to free task node buff:%p\n\0\0\0",
    /*5d10*/ "[Func]:%s [Line]:%d [Info]:malloc job index buf(%u*%lu byte) for GDC err\n\0\0\0",
    /*5d5c*/ "[Func]:%s [Line]:%d [Info]:malloc JobList buf(%u*%lu byte) for GDC err\n\0",
    /*5da4*/ "[Func]:%s [Line]:%d [Info]:malloc TaskList buf(%u*%lu byte) for GDC err\n\0\0\0\0",
    /*5df0*/ "GDC_NodeBuf\0",
    /*5dfc*/ "[Func]:%s [Line]:%d [Info]:alloc GDC_NodeBuf dma buf failure\n\0\0\0",
    /*5e3c*/ "NULL != pJobBuf\0",
    /*5e4c*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*5e8c*/ "NULL != pTaskBuf\0\0\0\0",
    /*5ea0*/ "NULL != pNodeBuf\0\0\0\0",
    /*5eb4*/ "[Func]:%s [Line]:%d [Info]:node free list empty\0",
    /*5ee4*/ "plist != HI_NULL\0\0\0\0",
    /*5ef8*/ "[Func]:%s [Line]:%d [Info]:Node in Task is empty\n\0\0\0",
    /*5f2c*/ "[Func]:%s [Line]:%d [Info]:Task free list empty\0",
    /*5f5c*/ "pJob != HI_NULL\0",
    /*5f6c*/ "[Func]:%s [Line]:%d [Info]:task list of job %p empty\n\0\0\0",
    /*5fa4*/ "[Func]:%s [Line]:%d [Info]:BusyTotalJobNum not 0\n\0\0\0",
    /*5fd8*/ "[Func]:%s [Line]:%d [Info]:waitlist null\n\0\0\0",
    /*6004*/ "[Func]:%s [Line]:%d [Info]:BusyList is empty!GdcId:%u WorkingQueId:%u\n\0\0",
    /*604c*/ "0\0\0\0",
    /*6050*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*6090*/ "GDC\0",
    /*6094*/ "[Func]:%s [Line]:%d [Info]:GDC[%d] failed request irq\n\0\0",
    /*60cc*/ "GDC_NNIE\0\0\0\0",
    /*60d8*/ "[Func]:%s [Line]:%d [Info]:GDC_NNIE failed request irq\n\0",
    /*6110*/ "GDC INTPoleCoef\0",
    /*6120*/ "[Func]:%s [Line]:%d [Info]:alloc InterPoleCoef buf failure\n\0",
    /*615c*/ "GDC AngleVel\0\0\0\0",
    /*616c*/ "[Func]:%s [Line]:%d [Info]:alloc AngleVel buf failure\n\0\0",
    /*61a4*/ "[Func]:%s [Line]:%d [Info]:In/Out img size(%d,%d) MaxW:%d MaxH:%d Err\n\0\0",
    /*61ec*/ "[Func]:%s [Line]:%d [Info]:In/Out img size(%d,%d) Range:W[%d,%d]H[%d,%d] Err\n\0\0\0",
    /*623c*/ "[Func]:%s [Line]:%d [Info]:gdc correction bLMF:%d must be false.\n\0\0\0",
    /*6280*/ "[Func]:%s [Line]:%d [Info]:gdc correction mount mode:%d is illegal.\n\0\0\0\0",
    /*62c8*/ "[Func]:%s [Line]:%d [Info]:gdc correction REGION:%d view mode:%d is illegal.\n\0\0\0",
    /*6318*/ "[Func]:%s [Line]:%d [Info]:#########################IntStatus err![int:%d]]\n\0\0\0\0",
    /*6368*/ "[Func]:%s [Line]:%d [Info]:#########################APB err![int:%d]]\n\0\0",
    /*63b0*/ "[Func]:%s [Line]:%d [Info]:#########################BUF OVERFLOW err![int:%d]]\n\0",
    /*6400*/ "[Func]:%s [Line]:%d [Info]:#########################WBUS err![int:%d]]\n\0",
    /*6448*/ "[Func]:%s [Line]:%d [Info]:#########################RBUS err![int:%d]]\n\0",
    /*6490*/ "[Func]:%s [Line]:%d [Info]:#########################TIMEOUT err![int:%d]]\n\0\0",
    /*64dc*/ "[Func]:%s [Line]:%d [Info]:#########################u32IntStat err![int:%d]]\n\0\0\0",
    /*652c*/ "[Func]:%s [Line]:%d [Info]:u64PhyAddr:0x%llx is not 16 align!\n\0\0",
    /*656c*/ "[Func]:%s [Line]:%d [Info]:pstHalHwInfo->pstDestPic->enCompressMode:%d \n\0\0\0\0",
    /*65b8*/ "[Func]:%s [Line]:%d [Info]:as32SrcCaliRatio[0][0]:%d must be 100000\n\0\0\0\0",
    /*6600*/ "[Func]:%s [Line]:%d [Info]:LDCV2 as32SrcCaliRatio[%d][%d]:%d Range[%d,%d]\n\0\0",
    /*664c*/ "[Func]:%s [Line]:%d [Info]:LDCV2 s32SrcJunPt(%d) Range[%d, %d]\n\0",
    /*668c*/ "[Func]:%s [Line]:%d [Info]:LDCV2 as32DstCaliRatio[%d][%d](%d) Range[%d,%d]\n\0",
    /*66d8*/ "[Func]:%s [Line]:%d [Info]:LDCV2 as32DstJunPt(%d) Range[%d,%d]\n\0",
    /*6718*/ "pGdc->GDC_PNEXT_HIGH:%#x pGdc->GDC_PNEXT_LOW:%#x u64NextPhyAddr:%#llx\n\0\0",
    /*6760*/ "[Func]:%s [Line]:%d [Info]:Error in configuration of interpolation kernel...\n\0\0\0",
    /*67b0*/ "[Func]:%s [Line]:%d [Info]:The input homography is out of design spec...\n g = %lld h = %lld NormOne = %lld \n\0\0\0\0",
    /*6820*/ "[Func]:%s [Line]:%d [Info]:Input angle cannot be nagetive value...\n\0",
    /*6864*/ "/home/pub/himpp_git_hi3516cv500/himpp/board/mpp/cbb/gdc/gdc/.//arch/hi3516cv500/algorithm/src/kernel/hiisp_gdc_fw_kernel.c\0\0",
    /*68e0*/ "\nASSERT failed at:\n  >File name: %s\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*6938*/ "ABS(p_sign_x[phase]) == 1\0\0\0",
    /*6954*/ "ABS(p_sign_y[phase]) == 1\0\0\0",
    /*6970*/ "[Func]:%s [Line]:%d [Info]:illegal param: au16LMFCoef[%d](%d) >= 5+au16LMFCoef[%d](%d),LMFCoef must be great than 5 incremental and smaller than 31!\n\0\0\0",
    /*6a08*/ "[Func]:%s [Line]:%d [Info]:illegal param: au16LMFCoef[57]:%d au16LMFCoef[85]:%d au16LMFCoef[0]:%d !\n\0\0\0\0",
    /*6a70*/ "[Func]:%s [Line]:%d [Info]: PMF correct coef8 must be [524288],but coef8 %lld.\n\0",
    /*6ac0*/ "[Func]:%s [Line]:%d [Info]: PMF correct coef0 must be [PMF[8]*0.3, PMF[8]*1.7 ] but coef0 %lld.\n\0\0\0\0",
    /*6b24*/ "[Func]:%s [Line]:%d [Info]: PMF correct coef1 must be [-PMF[8] * 0.7, PMF[8] * 0.7],but coef1 %lld.\n\0\0\0\0",
    /*6b8c*/ "[Func]:%s [Line]:%d [Info]: PMF correct coef2 must be [-1073741824, 1073741823], but coef2 %lld.\n\0\0\0",
    /*6bf0*/ "[Func]:%s [Line]:%d [Info]: PMF correct coef3 must be  [-PMF[8]*0.7, PMF[8]*0.7 ],but coef3 %lld.\n\0\0",
    /*6c54*/ "[Func]:%s [Line]:%d [Info]: PMF correct coef4 must be [PMF[8]*0.3, PMF[8]*1.7 ], but coef4 %lld.\n\0\0\0",
    /*6cb8*/ "[Func]:%s [Line]:%d [Info]: PMF correct coef5 must be [-1073741824, 1073741823], but coef5 %lld.\n\0\0\0",
    /*6d1c*/ "[Func]:%s [Line]:%d [Info]: PMF correct coef6 must be [-pstPMF[8]/20000, -pstPMF[8]/5000], but coef6 %lld.\n\0",
    /*6d88*/ "[Func]:%s [Line]:%d [Info]: PMF correct coef7 must be [-pstPMF[8]/20000, -pstPMF[8]/5000], but coef7 %lld.\n\0",
    /*6df4*/ "[Func]:%s [Line]:%d [Info]:Error in GDC_PMF_And_Rotation_CFG ...\n\0\0\0",
    /*6e38*/ "[Func]:%s [Line]:%d [Info]:Error in GDC_PMF_MPI_Check ...\n\0\0",
    /*6e74*/ "[Func]:%s [Line]:%d [Info]:Fifo configuration error in Fisheye Pano 360 mode...\n\0\0\0\0",
    /*6ec8*/ "[Func]:%s [Line]:%d [Info]:GDCPolar2Cartesian error...\n\0",
    /*6f00*/ "[Func]:%s [Line]:%d [Info]:Fifo configuration error in Fisheye Rectlinear mode...\n\0\0",
    /*6f54*/ "[Func]:%s [Line]:%d [Info]:Fifo configuration error in Fisheye Pano 180 mode...\n\0\0\0\0",
    /*6fa8*/ "s32AnchorRatio > s32AnchorRatio2\0\0\0\0",
    /*6fcc*/ "cannot find gdc%d IRQ\n\0\0",
    /*6fe4*/ "cannot find nnie0 IRQ\n\0\0",
    /*6ffc*/ "hi35xx_gdc\0"
};

unsigned char data[448] = {
    /*0000*/ 0x20, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 
    /*0010*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0020*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0030*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0040*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0050*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0060*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0070*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0080*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0x64, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0090*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00a0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00b0*/ 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00c0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00d0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00e0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00f0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0100*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0110*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0120*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0130*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0140*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0150*/ 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x49, 0x00, 0x00, 0x00, 
    /*0160*/ 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0170*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0180*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0190*/ 0x04, 0x13, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*01a0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*01b0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

unsigned char rel.data[400] = {
    /*0000*/ 0x10, 0x00, 0x00, 0x00, 0x02, 0x72, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x02, 0x70, 0x00, 0x00, 
    /*0010*/ 0x24, 0x00, 0x00, 0x00, 0x02, 0x2b, 0x01, 0x00, 0x40, 0x00, 0x00, 0x00, 0x02, 0x71, 0x00, 0x00, 
    /*0020*/ 0x4c, 0x00, 0x00, 0x00, 0x02, 0x1a, 0x00, 0x00, 0x9c, 0x00, 0x00, 0x00, 0x02, 0x01, 0x05, 0x00, 
    /*0030*/ 0xa0, 0x00, 0x00, 0x00, 0x02, 0x3b, 0x05, 0x00, 0xa4, 0x00, 0x00, 0x00, 0x02, 0x5f, 0x00, 0x00, 
    /*0040*/ 0xa8, 0x00, 0x00, 0x00, 0x02, 0x02, 0x01, 0x00, 0xac, 0x00, 0x00, 0x00, 0x02, 0x19, 0x00, 0x00, 
    /*0050*/ 0xb4, 0x00, 0x00, 0x00, 0x02, 0x0e, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x02, 0x06, 0x05, 0x00, 
    /*0060*/ 0xc4, 0x00, 0x00, 0x00, 0x02, 0x1a, 0x06, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x02, 0xdd, 0x05, 0x00, 
    /*0070*/ 0xcc, 0x00, 0x00, 0x00, 0x02, 0xfc, 0x05, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x02, 0x4f, 0x06, 0x00, 
    /*0080*/ 0xd4, 0x00, 0x00, 0x00, 0x02, 0x70, 0x05, 0x00, 0xd8, 0x00, 0x00, 0x00, 0x02, 0x16, 0x06, 0x00, 
    /*0090*/ 0xdc, 0x00, 0x00, 0x00, 0x02, 0xef, 0x04, 0x00, 0xe4, 0x00, 0x00, 0x00, 0x02, 0x69, 0x05, 0x00, 
    /*00a0*/ 0xe8, 0x00, 0x00, 0x00, 0x02, 0x30, 0x06, 0x00, 0xec, 0x00, 0x00, 0x00, 0x02, 0xf8, 0x05, 0x00, 
    /*00b0*/ 0xf0, 0x00, 0x00, 0x00, 0x02, 0x54, 0x05, 0x00, 0xf4, 0x00, 0x00, 0x00, 0x02, 0xa3, 0x05, 0x00, 
    /*00c0*/ 0xf8, 0x00, 0x00, 0x00, 0x02, 0xa1, 0x05, 0x00, 0x00, 0x01, 0x00, 0x00, 0x02, 0xea, 0x04, 0x00, 
    /*00d0*/ 0x04, 0x01, 0x00, 0x00, 0x02, 0x55, 0x05, 0x00, 0x08, 0x01, 0x00, 0x00, 0x02, 0xf3, 0x05, 0x00, 
    /*00e0*/ 0x0c, 0x01, 0x00, 0x00, 0x02, 0x0e, 0x06, 0x00, 0x10, 0x01, 0x00, 0x00, 0x02, 0xbd, 0x05, 0x00, 
    /*00f0*/ 0x14, 0x01, 0x00, 0x00, 0x02, 0x23, 0x05, 0x00, 0x18, 0x01, 0x00, 0x00, 0x02, 0x1d, 0x05, 0x00, 
    /*0100*/ 0x1c, 0x01, 0x00, 0x00, 0x02, 0x9a, 0x05, 0x00, 0x20, 0x01, 0x00, 0x00, 0x02, 0x80, 0x05, 0x00, 
    /*0110*/ 0x24, 0x01, 0x00, 0x00, 0x02, 0x75, 0x05, 0x00, 0x28, 0x01, 0x00, 0x00, 0x02, 0x49, 0x06, 0x00, 
    /*0120*/ 0x2c, 0x01, 0x00, 0x00, 0x02, 0x8d, 0x05, 0x00, 0x30, 0x01, 0x00, 0x00, 0x02, 0xe6, 0x04, 0x00, 
    /*0130*/ 0x34, 0x01, 0x00, 0x00, 0x02, 0xe3, 0x04, 0x00, 0x38, 0x01, 0x00, 0x00, 0x02, 0x2a, 0x06, 0x00, 
    /*0140*/ 0x3c, 0x01, 0x00, 0x00, 0x02, 0x03, 0x05, 0x00, 0x40, 0x01, 0x00, 0x00, 0x02, 0x4b, 0x05, 0x00, 
    /*0150*/ 0x44, 0x01, 0x00, 0x00, 0x02, 0x7d, 0x05, 0x00, 0x48, 0x01, 0x00, 0x00, 0x02, 0xb8, 0x05, 0x00, 
    /*0160*/ 0x4c, 0x01, 0x00, 0x00, 0x02, 0x28, 0x05, 0x00, 0x50, 0x01, 0x00, 0x00, 0x02, 0x1d, 0x06, 0x00, 
    /*0170*/ 0x64, 0x01, 0x00, 0x00, 0x02, 0xb4, 0x04, 0x00, 0x68, 0x01, 0x00, 0x00, 0x02, 0xb2, 0x04, 0x00, 
    /*0180*/ 0x78, 0x01, 0x00, 0x00, 0x02, 0x06, 0x00, 0x00, 0x90, 0x01, 0x00, 0x00, 0x02, 0x05, 0x00, 0x00, 
};

unsigned char bss[8192];

@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text
@ Size: 0x1bf54
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN GDC_GetMaxJobNum
    /*00000000*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00000004*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00000008*/ LDR         R3, [R3] 
    /*0000000c*/ STR         R3, [R0] 
    /*00000010*/ BX          LR 
FUNC_END GDC_GetMaxJobNum


FUNC_BEGIN GDC_GetMaxTaskNum
    /*00000014*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00000018*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000001c*/ LDR         R3, [R3, #4] 
    /*00000020*/ STR         R3, [R0] 
    /*00000024*/ BX          LR 
FUNC_END GDC_GetMaxTaskNum


FUNC_BEGIN GDC_GetVerMagic
    /*00000028*/ MOVW        R0, #61479                  @ 0xf027 
    /*0000002c*/ MOVT        R0, #307                    @ 0x133 
    /*00000030*/ BX          LR 
FUNC_END GDC_GetVerMagic


FUNC_BEGIN GdcRestore
    /*00000034*/ MOV         R0, #0 
    /*00000038*/ BX          LR 
FUNC_END GdcRestore


FUNC_BEGIN GDC_TaskNotifyCaller
    /*0000003c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00000040*/ SUB         SP, SP, #92                 @ 0x5c 
    /*00000044*/ LDR         R5, [R3, #756]              @ 0x2f4 
    /*00000048*/ CMP         R5, #0 
    /*0000004c*/ BEQ         GDC_TaskNotifyCaller_x1a8
    /*00000050*/ MOV         R4, R3 
    /*00000054*/ ADD         R3, R3, #8 
    /*00000058*/ BLX         R5 
    /*0000005c*/ MOVW        R2, #861                    @ 0x35d 
    /*00000060*/ MOV         R1, #37                     @ 0x25 
    /*00000064*/ STR         R2, [SP] 
    /*00000068*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*0000006c*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x0] 
    /*00000070*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00000074*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x0] 
    /*00000078*/ MOV         R0, #7 
    /*0000007c*/ BL          0x000000000000007C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000080*/ LDR         R2, [R4, #16] 
    /*00000084*/ LDR         LR, [R4, #12] 
    /*00000088*/ MOVW        IP, #862                    @ 0x35e 
    /*0000008c*/ LDR         R1, [R4, #8] 
    /*00000090*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00000094*/ LDR         R0, [R4, #20] 
    /*00000098*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*0000009c*/ LDR         R5, [R4, #60]               @ 0x3c 
    /*000000a0*/ STR         R2, [SP, #16] 
    /*000000a4*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30] 
    /*000000a8*/ STR         LR, [SP, #12] 
    /*000000ac*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30] 
    /*000000b0*/ LDR         LR, [R4, #56]               @ 0x38 
    /*000000b4*/ STR         R1, [SP, #8] 
    /*000000b8*/ MOV         R1, #37                     @ 0x25 
    /*000000bc*/ STR         R0, [SP, #4] 
    /*000000c0*/ MOV         R0, #7 
    /*000000c4*/ STR         IP, [SP] 
    /*000000c8*/ LDR         IP, [R4, #52]               @ 0x34 
    /*000000cc*/ STR         R5, [SP, #80]               @ 0x50 
    /*000000d0*/ ADD         R5, R4, #496                @ 0x1f0 
    /*000000d4*/ LDRD        R8, [R4, #168]              @ 0xa8 
    /*000000d8*/ STR         LR, [SP, #76]               @ 0x4c 
    /*000000dc*/ STR         IP, [SP, #72]               @ 0x48 
    /*000000e0*/ LDRD        R6, [R4, #160]              @ 0xa0 
    /*000000e4*/ STRD        R8, [SP, #64]               @ 0x40 
    /*000000e8*/ LDRD        R8, [R4, #152]              @ 0x98 
    /*000000ec*/ STRD        R6, [SP, #56]               @ 0x38 
    /*000000f0*/ LDRD        R6, [R4, #144]              @ 0x90 
    /*000000f4*/ STRD        R8, [SP, #48]               @ 0x30 
    /*000000f8*/ LDRD        R8, [R4, #136]              @ 0x88 
    /*000000fc*/ STRD        R6, [SP, #40]               @ 0x28 
    /*00000100*/ LDRD        R6, [R4, #128]              @ 0x80 
    /*00000104*/ STRD        R8, [SP, #32] 
    /*00000108*/ STRD        R6, [SP, #24] 
    /*0000010c*/ BL          0x000000000000010C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000110*/ ADD         R2, R4, #512                @ 0x200 
    /*00000114*/ LDR         R1, [R4, #352]              @ 0x160 
    /*00000118*/ MOVW        R3, #863                    @ 0x35f 
    /*0000011c*/ ADD         IP, R4, #480                @ 0x1e0 
    /*00000120*/ LDRD        R6, [R2, #-8] 
    /*00000124*/ ADD         LR, R4, #464                @ 0x1d0 
    /*00000128*/ LDR         R2, [R4, #348]              @ 0x15c 
    /*0000012c*/ STR         R1, [SP, #16] 
    /*00000130*/ LDR         R1, [R4, #344]              @ 0x158 
    /*00000134*/ STR         R2, [SP, #12] 
    /*00000138*/ LDR         R2, [R4, #356]              @ 0x164 
    /*0000013c*/ STR         R3, [SP] 
    /*00000140*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00000144*/ STR         R1, [SP, #8] 
    /*00000148*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*0000014c*/ STR         R2, [SP, #4] 
    /*00000150*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30] 
    /*00000154*/ LDRD        R0, [R5] 
    /*00000158*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30] 
    /*0000015c*/ STRD        R6, [SP, #64]               @ 0x40 
    /*00000160*/ LDRD        R8, [R5, #-8] 
    /*00000164*/ STRD        R0, [SP, #56]               @ 0x38 
    /*00000168*/ MOV         R1, #37                     @ 0x25 
    /*0000016c*/ LDRD        R6, [IP] 
    /*00000170*/ MOV         R0, #7 
    /*00000174*/ STRD        R8, [SP, #48]               @ 0x30 
    /*00000178*/ LDRD        R8, [IP, #-8] 
    /*0000017c*/ STRD        R6, [SP, #40]               @ 0x28 
    /*00000180*/ LDRD        R6, [LR] 
    /*00000184*/ STRD        R8, [SP, #32] 
    /*00000188*/ LDR         R5, [R4, #396]              @ 0x18c 
    /*0000018c*/ LDR         LR, [R4, #392]              @ 0x188 
    /*00000190*/ LDR         IP, [R4, #388]              @ 0x184 
    /*00000194*/ STRD        R6, [SP, #24] 
    /*00000198*/ STR         R5, [SP, #80]               @ 0x50 
    /*0000019c*/ STR         LR, [SP, #76]               @ 0x4c 
    /*000001a0*/ STR         IP, [SP, #72]               @ 0x48 
    /*000001a4*/ BL          0x00000000000001A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_TaskNotifyCaller_x1a8:
    /*000001a8*/ ADD         SP, SP, #92                 @ 0x5c 
    /*000001ac*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
FUNC_END GDC_TaskNotifyCaller


FUNC_BEGIN GDC_ProcShow
    /*000001b0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000001b4*/ SUB         SP, SP, #196                @ 0xc4 
    /*000001b8*/ LDR         R7, [PC, #2096]             @ 0x00000000000009f0 
    /*000001bc*/ MOV         R4, R0 
    /*000001c0*/ MOV         R2, #40                     @ 0x28 
    /*000001c4*/ MOV         R1, #0 
    /*000001c8*/ ADD         R0, SP, #152                @ 0x98 
    /*000001cc*/ ADD         R5, SP, #116                @ 0x74 
    /*000001d0*/ BL          0x00000000000001D0          @ memset [R_ARM_CALL: +0x0] 
    /*000001d4*/ LDM         R7!, {R0, R1, R2, R3} 
    /*000001d8*/ MOVW        R6, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x104] 
    /*000001dc*/ MOVT        R6, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x104] 
    /*000001e0*/ STR         R6, [SP, #152]              @ 0x98 
    /*000001e4*/ MOVW        R6, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11c] 
    /*000001e8*/ MOVT        R6, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11c] 
    /*000001ec*/ STR         R6, [SP, #160]              @ 0xa0 
    /*000001f0*/ MOVW        IP, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x110] 
    /*000001f4*/ STMIA       R5!, {R0, R1, R2, R3} 
    /*000001f8*/ MOVT        IP, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x110] 
    /*000001fc*/ LDM         R7!, {R0, R1, R2, R3} 
    /*00000200*/ ADD         LR, SP, #96                 @ 0x60 
    /*00000204*/ STR         IP, [SP, #156]              @ 0x9c 
    /*00000208*/ MOVW        IP, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x128] 
    /*0000020c*/ MOVT        IP, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x128] 
    /*00000210*/ STR         IP, [SP, #164]              @ 0xa4 
    /*00000214*/ ADD         IP, R7, #24 
    /*00000218*/ MOVW        R8, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x134] 
    /*0000021c*/ MOV         R6, R7 
    /*00000220*/ MOVT        R8, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x134] 
    /*00000224*/ LDR         R9, [R6], #4 
    /*00000228*/ ADD         FP, SP, #48                 @ 0x30 
    /*0000022c*/ STMIA       R5!, {R0, R1, R2, R3} 
    /*00000230*/ MOVW        SL, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00000234*/ LDM         R6!, {R0, R1, R2, R3} 
    /*00000238*/ MOVT        SL, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000023c*/ STR         R8, [SP, #168]              @ 0xa8 
    /*00000240*/ MOVW        R8, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x140] 
    /*00000244*/ STR         R9, [R5] 
    /*00000248*/ MOVT        R8, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x140] 
    /*0000024c*/ MOVW        R5, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14c] 
    /*00000250*/ STR         R8, [SP, #172]              @ 0xac 
    /*00000254*/ MOVT        R5, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14c] 
    /*00000258*/ STR         R5, [SP, #176]              @ 0xb0 
    /*0000025c*/ MOVW        R5, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x158] 
    /*00000260*/ MOVT        R5, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x158] 
    /*00000264*/ STR         R5, [SP, #180]              @ 0xb4 
    /*00000268*/ MOVW        R5, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x164] 
    /*0000026c*/ MOVT        R5, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x164] 
    /*00000270*/ STR         R5, [SP, #184]              @ 0xb8 
    /*00000274*/ STMIA       LR!, {R0, R1, R2, R3} 
    /*00000278*/ ADD         R5, R7, #36                 @ 0x24 
    /*0000027c*/ LDM         IP, {R0, R1, R2} 
    /*00000280*/ ADD         R3, R7, #48                 @ 0x30 
    /*00000284*/ LDR         R6, [R6] 
    /*00000288*/ ADD         R8, SP, #112                @ 0x70 
    /*0000028c*/ ADD         R7, SP, #148                @ 0x94 
    /*00000290*/ STM         FP, {R0, R1, R2} 
    /*00000294*/ LDM         R5, {R0, R1, R2} 
    /*00000298*/ MOV         R5, R8 
    /*0000029c*/ STR         R6, [LR] 
    /*000002a0*/ ADD         LR, SP, #60                 @ 0x3c 
    /*000002a4*/ MOVW        R6, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ac] 
    /*000002a8*/ MOVT        R6, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ac] 
    /*000002ac*/ STM         LR, {R0, R1, R2} 
    /*000002b0*/ LDM         IP, {R0, R1, R2} 
    /*000002b4*/ ADD         IP, SP, #72                 @ 0x48 
    /*000002b8*/ STM         IP, {R0, R1, R2} 
    /*000002bc*/ LDM         R3, {R0, R1, R2} 
    /*000002c0*/ ADD         R3, SP, #84                 @ 0x54 
    /*000002c4*/ STM         R3, {R0, R1, R2} 
    /*000002c8*/ MOV         R0, R4 
    /*000002cc*/ MOVW        R1, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x170] 
    /*000002d0*/ MOVT        R1, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x170] 
    /*000002d4*/ BL          0x00000000000002D4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000002d8*/ MOV         R0, R4 
    /*000002dc*/ MOVW        R1, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d0] 
    /*000002e0*/ MOVT        R1, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d0] 
    /*000002e4*/ BL          0x00000000000002E4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000002e8*/ MOVW        R2, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x230] 
    /*000002ec*/ MOV         R0, R4 
    /*000002f0*/ MOVT        R2, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x230] 
    /*000002f4*/ MOVW        R3, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x204] 
    /*000002f8*/ STR         R2, [SP] 
    /*000002fc*/ MOVT        R3, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x204] 
    /*00000300*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x214] 
    /*00000304*/ MOVW        R1, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x220] 
    /*00000308*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x214] 
    /*0000030c*/ MOVT        R1, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x220] 
    /*00000310*/ BL          0x0000000000000310          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000314*/ LDR         R1, [SL, #8] 
    /*00000318*/ LDM         SL, {R2, R3} 
    /*0000031c*/ MOV         R0, R4 
    /*00000320*/ STR         R1, [SP] 
    /*00000324*/ MOVW        R1, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x240] 
    /*00000328*/ MOVT        R1, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x240] 
    /*0000032c*/ BL          0x000000000000032C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000330*/ MOVW        R1, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x250] 
    /*00000334*/ MOV         R0, R4 
    /*00000338*/ MOVT        R1, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x250] 
    /*0000033c*/ BL          0x000000000000033C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    GDC_ProcShow_x340:
    /*00000340*/ LDR         R2, [R5, #4]! 
    /*00000344*/ MOV         R1, R6 
    /*00000348*/ MOV         R0, R4 
    /*0000034c*/ BL          0x000000000000034C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000350*/ CMP         R5, R7 
    /*00000354*/ BNE         GDC_ProcShow_x340
    /*00000358*/ MOVW        R7, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000035c*/ MOVT        R7, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000360*/ LDR         R3, [R7] 
    /*00000364*/ CMP         R3, #1 
    /*00000368*/ BNE         GDC_ProcShow_x9d4
    /*0000036c*/ LDR         R3, [R7, #4] 
    /*00000370*/ MOVW        R2, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b4] 
    /*00000374*/ MOV         R9, #8 
    /*00000378*/ MOVT        R2, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b4] 
    /*0000037c*/ STR         R8, [SP, #40]               @ 0x28 
    /*00000380*/ LDR         R6, [R3, #1220]             @ 0x4c4 
    /*00000384*/ STR         R2, [SP, #36]               @ 0x24 
    /*00000388*/ MOV         R2, #0 
    /*0000038c*/ CMP         R6, #0 
    /*00000390*/ STR         R2, [SP, #32] 
    /*00000394*/ SUBNE       R6, R6, #1 
    /*00000398*/ STR         R5, [SP, #44]               @ 0x2c 
    /*0000039c*/ MOVEQ       R6, #7 
    /*000003a0*/ B           GDC_ProcShow_x3bc
    GDC_ProcShow_x3a4:
    /*000003a4*/ CMP         R6, #0 
    /*000003a8*/ SUB         R6, R6, #1 
    /*000003ac*/ MOVEQ       R6, #7 
    /*000003b0*/ SUBS        R9, R9, #1 
    /*000003b4*/ BEQ         GDC_ProcShow_x440
    /*000003b8*/ LDR         R3, [R7, #4] 
    GDC_ProcShow_x3bc:
    /*000003bc*/ MOV         R2, #68                     @ 0x44 
    /*000003c0*/ MLA         R5, R2, R6, R3 
    /*000003c4*/ LDR         R2, [R5, #676]              @ 0x2a4 
    /*000003c8*/ CMP         R2, #1 
    /*000003cc*/ BNE         GDC_ProcShow_x3a4
    /*000003d0*/ LDR         R3, [SP, #32] 
    /*000003d4*/ LDR         R0, [R5, #684]              @ 0x2ac 
    /*000003d8*/ ADD         R8, R3, #1 
    /*000003dc*/ BL          0x00000000000003DC          @ CMPI_GetModuleName [R_ARM_CALL: +0x0] 
    /*000003e0*/ LDR         IP, [R5, #740]              @ 0x2e4 
    /*000003e4*/ ADD         R3, SP, #192                @ 0xc0 
    /*000003e8*/ LDR         R2, [SP, #32] 
    /*000003ec*/ LDR         R1, [SP, #36]               @ 0x24 
    /*000003f0*/ STR         IP, [SP, #24] 
    /*000003f4*/ LDR         IP, [R5, #736]              @ 0x2e0 
    /*000003f8*/ STR         R8, [SP, #32] 
    /*000003fc*/ STR         IP, [SP, #20] 
    /*00000400*/ LDR         IP, [R5, #700]              @ 0x2bc 
    /*00000404*/ STR         IP, [SP, #16] 
    /*00000408*/ LDR         IP, [R5, #696]              @ 0x2b8 
    /*0000040c*/ STR         IP, [SP, #12] 
    /*00000410*/ LDR         IP, [R5, #692]              @ 0x2b4 
    /*00000414*/ ADD         IP, R3, IP, LSL #2 
    /*00000418*/ LDR         IP, [IP, #-40]              @ 0xffffffd8 
    /*0000041c*/ STR         IP, [SP, #8] 
    /*00000420*/ LDR         IP, [R5, #688]              @ 0x2b0 
    /*00000424*/ STR         IP, [SP, #4] 
    /*00000428*/ LDR         IP, [R5, #680]              @ 0x2a8 
    /*0000042c*/ MOV         R3, R0 
    /*00000430*/ MOV         R0, R4 
    /*00000434*/ STR         IP, [SP] 
    /*00000438*/ BL          0x0000000000000438          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000043c*/ B           GDC_ProcShow_x3a4
    GDC_ProcShow_x440:
    /*00000440*/ MOVW        R1, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d8] 
    /*00000444*/ MOV         R0, R4 
    /*00000448*/ MOVT        R1, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d8] 
    /*0000044c*/ LDR         R8, [SP, #40]               @ 0x28 
    /*00000450*/ LDR         R5, [SP, #44]               @ 0x2c 
    /*00000454*/ BL          0x0000000000000454          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000458*/ MOVW        R1, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2dc] 
    /*0000045c*/ MOV         R0, R4 
    /*00000460*/ MOVT        R1, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2dc] 
    /*00000464*/ MOVW        R6, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ac] 
    /*00000468*/ BL          0x0000000000000468          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000046c*/ MOVT        R6, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ac] 
    GDC_ProcShow_x470:
    /*00000470*/ LDR         R2, [R8, #4]! 
    /*00000474*/ MOV         R1, R6 
    /*00000478*/ MOV         R0, R4 
    /*0000047c*/ BL          0x000000000000047C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000480*/ CMP         R8, R5 
    /*00000484*/ BNE         GDC_ProcShow_x470
    /*00000488*/ LDR         R5, [R7, #4] 
    /*0000048c*/ LDR         R3, [R5, #1224]             @ 0x4c8 
    /*00000490*/ CMP         R3, #0 
    /*00000494*/ BNE         GDC_ProcShow_x96c
    GDC_ProcShow_x498:
    /*00000498*/ MOVW        R1, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d8] 
    /*0000049c*/ MOV         R0, R4 
    /*000004a0*/ MOVT        R1, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d8] 
    /*000004a4*/ MOVW        R5, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ac] 
    /*000004a8*/ BL          0x00000000000004A8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000004ac*/ MOVW        R1, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x338] 
    /*000004b0*/ MOV         R0, R4 
    /*000004b4*/ MOVT        R1, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x338] 
    /*000004b8*/ BL          0x00000000000004B8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000004bc*/ MOVT        R5, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ac] 
    /*000004c0*/ MOV         R6, FP 
    GDC_ProcShow_x4c4:
    /*000004c4*/ LDR         R2, [R6], #4 
    /*000004c8*/ MOV         R1, R5 
    /*000004cc*/ MOV         R0, R4 
    /*000004d0*/ BL          0x00000000000004D0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000004d4*/ ADD         R3, SP, #60                 @ 0x3c 
    /*000004d8*/ CMP         R3, R6 
    /*000004dc*/ BNE         GDC_ProcShow_x4c4
    /*000004e0*/ MOVW        R5, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ac] 
    /*000004e4*/ ADD         R6, SP, #96                 @ 0x60 
    /*000004e8*/ MOVT        R5, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ac] 
    GDC_ProcShow_x4ec:
    /*000004ec*/ LDR         R2, [R6], #4 
    /*000004f0*/ MOV         R1, R5 
    /*000004f4*/ MOV         R0, R4 
    /*000004f8*/ BL          0x00000000000004F8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000004fc*/ ADD         R3, SP, #116                @ 0x74 
    /*00000500*/ CMP         R3, R6 
    /*00000504*/ BNE         GDC_ProcShow_x4ec
    /*00000508*/ LDR         R0, [R7, #4] 
    /*0000050c*/ MOVW        R5, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ac] 
    /*00000510*/ BL          0x0000000000000510          @ GDC_QueryBusyTotalJobNum [R_ARM_CALL: .text+0x10b94] 
    /*00000514*/ MOVT        R5, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ac] 
    /*00000518*/ MOV         R8, R0 
    /*0000051c*/ LDR         R0, [R7, #4] 
    /*00000520*/ BL          0x0000000000000520          @ GDC_QueryProcTotalJobNum [R_ARM_CALL: .text+0x10d38] 
    /*00000524*/ LDR         IP, [R7, #4] 
    /*00000528*/ MOVW        R1, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38c] 
    /*0000052c*/ MOVT        R1, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38c] 
    /*00000530*/ LDR         R3, [IP, #1320]             @ 0x528 
    /*00000534*/ LDR         R2, [IP, #1316]             @ 0x524 
    /*00000538*/ LDR         IP, [IP, #1324]             @ 0x52c 
    /*0000053c*/ STR         IP, [SP] 
    /*00000540*/ MOV         R6, R0 
    /*00000544*/ MOV         R0, R4 
    /*00000548*/ BL          0x0000000000000548          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000054c*/ LDR         R0, [R7, #4] 
    /*00000550*/ LDR         R9, [SL] 
    /*00000554*/ BL          0x0000000000000554          @ GDC_QueryFreeJobNum [R_ARM_CALL: .text+0x10258] 
    /*00000558*/ MOV         FP, R0 
    /*0000055c*/ LDR         R0, [R7, #4] 
    /*00000560*/ BL          0x0000000000000560          @ GDC_QueryCreatedJobNum [R_ARM_CALL: .text+0x10790] 
    /*00000564*/ STR         R6, [SP, #8] 
    /*00000568*/ MOV         R3, FP 
    /*0000056c*/ MOV         R2, R9 
    /*00000570*/ STR         R8, [SP, #4] 
    /*00000574*/ MOVW        R1, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x39c] 
    /*00000578*/ MOVT        R1, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x39c] 
    /*0000057c*/ ADD         R6, SP, #72                 @ 0x48 
    /*00000580*/ STR         R0, [SP] 
    /*00000584*/ MOV         R0, R4 
    /*00000588*/ BL          0x0000000000000588          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000058c*/ MOVW        R1, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d8] 
    /*00000590*/ MOV         R0, R4 
    /*00000594*/ MOVT        R1, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d8] 
    /*00000598*/ BL          0x0000000000000598          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000059c*/ MOVW        R1, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b4] 
    /*000005a0*/ MOV         R0, R4 
    /*000005a4*/ MOVT        R1, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b4] 
    /*000005a8*/ BL          0x00000000000005A8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    GDC_ProcShow_x5ac:
    /*000005ac*/ LDR         R2, [R6], #4 
    /*000005b0*/ MOV         R1, R5 
    /*000005b4*/ MOV         R0, R4 
    /*000005b8*/ BL          0x00000000000005B8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000005bc*/ ADD         R3, SP, #84                 @ 0x54 
    /*000005c0*/ CMP         R3, R6 
    /*000005c4*/ BNE         GDC_ProcShow_x5ac
    /*000005c8*/ MOVW        R5, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ac] 
    /*000005cc*/ ADD         R6, SP, #60                 @ 0x3c 
    /*000005d0*/ MOVT        R5, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ac] 
    GDC_ProcShow_x5d4:
    /*000005d4*/ LDR         R2, [R6], #4 
    /*000005d8*/ MOV         R1, R5 
    /*000005dc*/ MOV         R0, R4 
    /*000005e0*/ BL          0x00000000000005E0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000005e4*/ ADD         R3, SP, #72                 @ 0x48 
    /*000005e8*/ CMP         R3, R6 
    /*000005ec*/ BNE         GDC_ProcShow_x5d4
    /*000005f0*/ LDR         R0, [R7, #4] 
    /*000005f4*/ MOVW        R6, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ac] 
    /*000005f8*/ ADD         R5, SP, #84                 @ 0x54 
    /*000005fc*/ MOVT        R6, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ac] 
    /*00000600*/ ADD         R0, R0, #604                @ 0x25c 
    /*00000604*/ BL          0x0000000000000604          @ GDC_QueryFreeTaskNum [R_ARM_CALL: .text+0x10084] 
    /*00000608*/ LDR         IP, [R7, #4] 
    /*0000060c*/ MOVW        R1, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38c] 
    /*00000610*/ MOVT        R1, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38c] 
    /*00000614*/ ADD         R2, IP, #1328               @ 0x530 
    /*00000618*/ LDM         R2, {R2, R3, IP} 
    /*0000061c*/ STR         IP, [SP] 
    /*00000620*/ MOV         R8, R0 
    /*00000624*/ MOV         R0, R4 
    /*00000628*/ BL          0x0000000000000628          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000062c*/ LDR         R2, [SL, #4] 
    /*00000630*/ MOV         R3, R8 
    /*00000634*/ MOVW        R1, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x408] 
    /*00000638*/ SUB         R8, R2, R8 
    /*0000063c*/ MOVT        R1, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0x408] 
    /*00000640*/ STR         R8, [SP] 
    /*00000644*/ MOV         R0, R4 
    /*00000648*/ BL          0x0000000000000648          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000064c*/ MOVW        R1, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d8] 
    /*00000650*/ MOV         R0, R4 
    /*00000654*/ MOVT        R1, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d8] 
    /*00000658*/ BL          0x0000000000000658          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000065c*/ MOVW        R1, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x418] 
    /*00000660*/ MOV         R0, R4 
    /*00000664*/ MOVT        R1, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x418] 
    /*00000668*/ BL          0x0000000000000668          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000066c*/ MOVW        R2, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x49c] 
    /*00000670*/ MOVW        R3, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4a4] 
    /*00000674*/ MOVT        R2, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x49c] 
    /*00000678*/ MOVT        R3, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4a4] 
    /*0000067c*/ STR         R2, [SP, #12] 
    /*00000680*/ STR         R3, [SP, #8] 
    /*00000684*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4b0] 
    /*00000688*/ MOVW        R3, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4bc] 
    /*0000068c*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4b0] 
    /*00000690*/ MOVT        R3, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4bc] 
    /*00000694*/ STR         R2, [SP, #4] 
    /*00000698*/ STR         R3, [SP] 
    /*0000069c*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x474] 
    /*000006a0*/ MOVW        R3, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x46c] 
    /*000006a4*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x474] 
    /*000006a8*/ MOVT        R3, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x46c] 
    /*000006ac*/ MOVW        R1, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x480] 
    /*000006b0*/ MOV         R0, R4 
    /*000006b4*/ MOVT        R1, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x480] 
    /*000006b8*/ BL          0x00000000000006B8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000006bc*/ BL          0x00000000000006BC          @ GDC_DrvCommGetProc [R_ARM_CALL: .text+0x14d9c] 
    /*000006c0*/ LDR         R2, [SL, #8] 
    /*000006c4*/ MOVW        R1, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c4] 
    /*000006c8*/ MOVT        R1, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c4] 
    /*000006cc*/ LDR         LR, [R0, #16] 
    /*000006d0*/ MOV         IP, R0 
    /*000006d4*/ LDR         R3, [R0] 
    /*000006d8*/ MOV         R0, R4 
    /*000006dc*/ STR         LR, [SP, #12] 
    /*000006e0*/ SUB         R3, R2, R3 
    /*000006e4*/ LDR         LR, [IP, #12] 
    /*000006e8*/ STR         LR, [SP, #8] 
    /*000006ec*/ LDR         LR, [IP, #8] 
    /*000006f0*/ STR         LR, [SP, #4] 
    /*000006f4*/ LDR         IP, [IP, #4] 
    /*000006f8*/ STR         IP, [SP] 
    /*000006fc*/ BL          0x00000000000006FC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000700*/ MOVW        R1, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d8] 
    /*00000704*/ MOV         R0, R4 
    /*00000708*/ MOVT        R1, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d8] 
    /*0000070c*/ BL          0x000000000000070C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000710*/ MOVW        R1, #0                      @ .LC69 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4e0] 
    /*00000714*/ MOV         R0, R4 
    /*00000718*/ MOVT        R1, #0                      @ .LC69 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4e0] 
    /*0000071c*/ BL          0x000000000000071C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    GDC_ProcShow_x720:
    /*00000720*/ LDR         R2, [R5], #4 
    /*00000724*/ MOV         R1, R6 
    /*00000728*/ MOV         R0, R4 
    /*0000072c*/ BL          0x000000000000072C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000730*/ ADD         R3, SP, #96                 @ 0x60 
    /*00000734*/ CMP         R5, R3 
    /*00000738*/ BNE         GDC_ProcShow_x720
    /*0000073c*/ LDR         IP, [R7, #4] 
    /*00000740*/ MOV         R0, R4 
    /*00000744*/ MOVW        R1, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x534] 
    /*00000748*/ MOVT        R1, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0x534] 
    /*0000074c*/ MOVW        SL, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5d0] 
    /*00000750*/ MOVW        R9, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5d8] 
    /*00000754*/ LDR         R3, [IP, #1308]             @ 0x51c 
    /*00000758*/ MOVT        SL, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5d0] 
    /*0000075c*/ LDR         R2, [IP, #1300]             @ 0x514 
    /*00000760*/ MOVT        R9, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5d8] 
    /*00000764*/ LDR         IP, [IP, #1312]             @ 0x520 
    /*00000768*/ MOVW        R8, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e0] 
    /*0000076c*/ MOVW        R6, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e8] 
    /*00000770*/ MOVT        R8, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e0] 
    /*00000774*/ MOVT        R6, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e8] 
    /*00000778*/ MOVW        R5, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5f4] 
    /*0000077c*/ STR         IP, [SP] 
    /*00000780*/ MOVT        R5, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5f4] 
    /*00000784*/ BL          0x0000000000000784          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000788*/ MOV         R0, R4 
    /*0000078c*/ MOVW        R1, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d8] 
    /*00000790*/ MOVT        R1, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d8] 
    /*00000794*/ BL          0x0000000000000794          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000798*/ MOV         R0, R4 
    /*0000079c*/ MOVW        R1, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x544] 
    /*000007a0*/ MOVT        R1, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0x544] 
    /*000007a4*/ BL          0x00000000000007A4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000007a8*/ STR         SL, [SP, #16] 
    /*000007ac*/ STR         R9, [SP, #12] 
    /*000007b0*/ MOV         R0, R4 
    /*000007b4*/ STR         R8, [SP, #8] 
    /*000007b8*/ MOVW        R3, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x598] 
    /*000007bc*/ STR         R6, [SP, #4] 
    /*000007c0*/ MOVT        R3, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x598] 
    /*000007c4*/ STR         R5, [SP] 
    /*000007c8*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5a4] 
    /*000007cc*/ MOVW        R1, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b0] 
    /*000007d0*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5a4] 
    /*000007d4*/ MOVT        R1, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b0] 
    /*000007d8*/ BL          0x00000000000007D8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000007dc*/ LDR         IP, [R7, #4] 
    /*000007e0*/ MOVW        R1, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5fc] 
    /*000007e4*/ MOVT        R1, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5fc] 
    /*000007e8*/ LDR         R0, [IP, #1408]             @ 0x580 
    /*000007ec*/ LDR         R3, [IP, #1364]             @ 0x554 
    /*000007f0*/ LDR         R2, [IP, #1360]             @ 0x550 
    /*000007f4*/ STR         R0, [SP, #16] 
    /*000007f8*/ MOV         R0, R4 
    /*000007fc*/ LDR         LR, [IP, #1396]             @ 0x574 
    /*00000800*/ STR         LR, [SP, #12] 
    /*00000804*/ LDR         LR, [IP, #1392]             @ 0x570 
    /*00000808*/ STR         LR, [SP, #8] 
    /*0000080c*/ LDR         LR, [IP, #1380]             @ 0x564 
    /*00000810*/ STR         LR, [SP, #4] 
    /*00000814*/ LDR         IP, [IP, #1376]             @ 0x560 
    /*00000818*/ STR         IP, [SP] 
    /*0000081c*/ BL          0x000000000000081C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000820*/ MOV         R0, R4 
    /*00000824*/ MOVW        R1, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d8] 
    /*00000828*/ MOVT        R1, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d8] 
    /*0000082c*/ BL          0x000000000000082C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000830*/ MOV         R0, R4 
    /*00000834*/ MOVW        R1, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61c] 
    /*00000838*/ MOVT        R1, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61c] 
    /*0000083c*/ BL          0x000000000000083C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000840*/ STR         SL, [SP, #16] 
    /*00000844*/ STR         R9, [SP, #12] 
    /*00000848*/ MOV         R0, R4 
    /*0000084c*/ STR         R8, [SP, #8] 
    /*00000850*/ MOVW        R3, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x598] 
    /*00000854*/ STR         R6, [SP, #4] 
    /*00000858*/ MOVT        R3, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x598] 
    /*0000085c*/ STR         R5, [SP] 
    /*00000860*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5a4] 
    /*00000864*/ MOVW        R1, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b0] 
    /*00000868*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5a4] 
    /*0000086c*/ MOVT        R1, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b0] 
    /*00000870*/ BL          0x0000000000000870          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000874*/ LDR         IP, [R7, #4] 
    /*00000878*/ MOVW        R1, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5fc] 
    /*0000087c*/ MOVT        R1, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5fc] 
    /*00000880*/ LDR         R0, [IP, #1412]             @ 0x584 
    /*00000884*/ LDR         R3, [IP, #1372]             @ 0x55c 
    /*00000888*/ LDR         R2, [IP, #1368]             @ 0x558 
    /*0000088c*/ STR         R0, [SP, #16] 
    /*00000890*/ MOV         R0, R4 
    /*00000894*/ LDR         LR, [IP, #1404]             @ 0x57c 
    /*00000898*/ STR         LR, [SP, #12] 
    /*0000089c*/ LDR         LR, [IP, #1400]             @ 0x578 
    /*000008a0*/ STR         LR, [SP, #8] 
    /*000008a4*/ LDR         LR, [IP, #1388]             @ 0x56c 
    /*000008a8*/ STR         LR, [SP, #4] 
    /*000008ac*/ LDR         IP, [IP, #1384]             @ 0x568 
    /*000008b0*/ STR         IP, [SP] 
    /*000008b4*/ BL          0x00000000000008B4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000008b8*/ MOV         R0, R4 
    /*000008bc*/ MOVW        R1, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d8] 
    /*000008c0*/ MOVT        R1, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d8] 
    /*000008c4*/ BL          0x00000000000008C4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000008c8*/ MOV         R0, R4 
    /*000008cc*/ MOVW        R1, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x670] 
    /*000008d0*/ MOVT        R1, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0x670] 
    /*000008d4*/ BL          0x00000000000008D4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000008d8*/ STR         SL, [SP, #16] 
    /*000008dc*/ STR         R9, [SP, #12] 
    /*000008e0*/ MOV         R0, R4 
    /*000008e4*/ STR         R8, [SP, #8] 
    /*000008e8*/ MOVW        R3, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x598] 
    /*000008ec*/ STR         R6, [SP, #4] 
    /*000008f0*/ MOVT        R3, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x598] 
    /*000008f4*/ STR         R5, [SP] 
    /*000008f8*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5a4] 
    /*000008fc*/ MOVW        R1, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b0] 
    /*00000900*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5a4] 
    /*00000904*/ MOVT        R1, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b0] 
    /*00000908*/ BL          0x0000000000000908          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000090c*/ LDR         IP, [R7, #4] 
    /*00000910*/ MOV         R0, R4 
    /*00000914*/ MOVW        R1, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5fc] 
    /*00000918*/ MOVT        R1, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5fc] 
    /*0000091c*/ LDR         LR, [IP, #1440]             @ 0x5a0 
    /*00000920*/ LDR         R3, [IP, #1420]             @ 0x58c 
    /*00000924*/ LDR         R2, [IP, #1416]             @ 0x588 
    /*00000928*/ STR         LR, [SP, #16] 
    /*0000092c*/ LDR         LR, [IP, #1436]             @ 0x59c 
    /*00000930*/ STR         LR, [SP, #12] 
    /*00000934*/ LDR         LR, [IP, #1432]             @ 0x598 
    /*00000938*/ STR         LR, [SP, #8] 
    /*0000093c*/ LDR         LR, [IP, #1428]             @ 0x594 
    /*00000940*/ STR         LR, [SP, #4] 
    /*00000944*/ LDR         IP, [IP, #1424]             @ 0x590 
    /*00000948*/ STR         IP, [SP] 
    /*0000094c*/ BL          0x000000000000094C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000950*/ MOV         R0, R4 
    /*00000954*/ MOVW        R1, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d8] 
    /*00000958*/ MOVT        R1, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d8] 
    /*0000095c*/ BL          0x000000000000095C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000960*/ MOV         R0, #0 
    /*00000964*/ ADD         SP, SP, #196                @ 0xc4 
    /*00000968*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcShow_x96c:
    /*0000096c*/ LDR         R0, [R5, #1232]             @ 0x4d0 
    /*00000970*/ BL          0x0000000000000970          @ CMPI_GetModuleName [R_ARM_CALL: +0x0] 
    /*00000974*/ LDR         R3, [R5, #1288]             @ 0x508 
    /*00000978*/ ADD         IP, SP, #192                @ 0xc0 
    /*0000097c*/ LDR         R2, [SP, #32] 
    /*00000980*/ MOVW        R1, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b4] 
    /*00000984*/ MOVT        R1, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b4] 
    /*00000988*/ STR         R3, [SP, #24] 
    /*0000098c*/ LDR         R3, [R5, #1284]             @ 0x504 
    /*00000990*/ STR         R3, [SP, #20] 
    /*00000994*/ LDR         R3, [R5, #1248]             @ 0x4e0 
    /*00000998*/ STR         R3, [SP, #16] 
    /*0000099c*/ LDR         R3, [R5, #1244]             @ 0x4dc 
    /*000009a0*/ STR         R3, [SP, #12] 
    /*000009a4*/ LDR         R3, [R5, #1240]             @ 0x4d8 
    /*000009a8*/ ADD         R3, IP, R3, LSL #2 
    /*000009ac*/ LDR         R3, [R3, #-40]              @ 0xffffffd8 
    /*000009b0*/ STR         R3, [SP, #8] 
    /*000009b4*/ LDR         R3, [R5, #1236]             @ 0x4d4 
    /*000009b8*/ STR         R3, [SP, #4] 
    /*000009bc*/ LDR         IP, [R5, #1228]             @ 0x4cc 
    /*000009c0*/ MOV         R3, R0 
    /*000009c4*/ STR         IP, [SP] 
    /*000009c8*/ MOV         R0, R4 
    /*000009cc*/ BL          0x00000000000009CC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000009d0*/ B           GDC_ProcShow_x498
    GDC_ProcShow_x9d4:
    /*000009d4*/ MOV         R0, R4 
    /*000009d8*/ MOVW        R1, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b0] 
    /*000009dc*/ MOVT        R1, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b0] 
    /*000009e0*/ BL          0x00000000000009E0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000009e4*/ MOV         R0, #0 
    /*000009e8*/ ADD         SP, SP, #196                @ 0xc4 
    /*000009ec*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*000009f0*/ ANDEQ       R0, R0, R8, LSL R0 
FUNC_END GDC_ProcShow


FUNC_BEGIN GDC_CheckLMFCoef
    /*000009f4*/ PUSH        {R4, R5, R6, LR} 
    /*000009f8*/ MOV         IP, #0 
    /*000009fc*/ LDRH        R6, [R0] 
    /*00000a00*/ SUB         SP, SP, #24 
    /*00000a04*/ MOV         LR, R0 
    /*00000a08*/ MOV         R2, R6 
    /*00000a0c*/ B           GDC_CheckLMFCoef_xa28
    GDC_CheckLMFCoef_xa10:
    /*00000a10*/ CMP         R1, R5 
    /*00000a14*/ BGT         GDC_CheckLMFCoef_xa40
    /*00000a18*/ CMP         R4, #127                    @ 0x7f 
    /*00000a1c*/ MOV         IP, R4 
    /*00000a20*/ MOV         R2, R1 
    /*00000a24*/ BEQ         GDC_CheckLMFCoef_xa80
    GDC_CheckLMFCoef_xa28:
    /*00000a28*/ LDRH        R1, [LR, #2]! 
    /*00000a2c*/ ADD         R3, R2, #5 
    /*00000a30*/ ADD         R5, R2, #31 
    /*00000a34*/ ADD         R4, IP, #1 
    /*00000a38*/ CMP         R1, R3 
    /*00000a3c*/ BGE         GDC_CheckLMFCoef_xa10
    GDC_CheckLMFCoef_xa40:
    /*00000a40*/ STR         R2, [SP, #16] 
    /*00000a44*/ MOVW        R3, #474                    @ 0x1da 
    /*00000a48*/ STR         R1, [SP, #8] 
    /*00000a4c*/ MOVW        R2, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6c4] 
    /*00000a50*/ STR         R3, [SP] 
    /*00000a54*/ MOVT        R2, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6c4] 
    /*00000a58*/ STR         IP, [SP, #12] 
    /*00000a5c*/ MOV         R1, #37                     @ 0x25 
    /*00000a60*/ STR         R4, [SP, #4] 
    /*00000a64*/ MOV         R0, #3 
    /*00000a68*/ LDR         R3, [PC, #152]              @ 0x0000000000000b08 
    /*00000a6c*/ BL          0x0000000000000A6C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000a70*/ MOVW        R0, #32771                  @ 0x8003 
    /*00000a74*/ MOVT        R0, #40997                  @ 0xa025 
    GDC_CheckLMFCoef_xa78:
    /*00000a78*/ ADD         SP, SP, #24 
    /*00000a7c*/ POP         {R4, R5, R6, PC} 
    GDC_CheckLMFCoef_xa80:
    /*00000a80*/ LDRH        R3, [R0, #114]              @ 0x72 
    /*00000a84*/ LDRH        R2, [R0, #170]              @ 0xaa 
    /*00000a88*/ CMP         R3, #1024                   @ 0x400 
    /*00000a8c*/ BCS         GDC_CheckLMFCoef_xad4
    /*00000a90*/ CMP         R2, #1024                   @ 0x400 
    /*00000a94*/ BLS         GDC_CheckLMFCoef_xad4
    /*00000a98*/ CMP         R6, #0 
    /*00000a9c*/ MOVEQ       R0, R6 
    /*00000aa0*/ BEQ         GDC_CheckLMFCoef_xa78
    /*00000aa4*/ MOVW        R3, #487                    @ 0x1e7 
    /*00000aa8*/ STR         R6, [SP, #4] 
    /*00000aac*/ STR         R3, [SP] 
    /*00000ab0*/ MOVW        R2, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x744] 
    /*00000ab4*/ LDR         R3, [PC, #76]               @ 0x0000000000000b08 
    /*00000ab8*/ MOVT        R2, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x744] 
    /*00000abc*/ MOV         R1, #37                     @ 0x25 
    /*00000ac0*/ MOV         R0, #3 
    /*00000ac4*/ BL          0x0000000000000AC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000ac8*/ MOVW        R0, #32771                  @ 0x8003 
    /*00000acc*/ MOVT        R0, #40997                  @ 0xa025 
    /*00000ad0*/ B           GDC_CheckLMFCoef_xa78
    GDC_CheckLMFCoef_xad4:
    /*00000ad4*/ STR         R2, [SP, #8] 
    /*00000ad8*/ MOVW        R1, #481                    @ 0x1e1 
    /*00000adc*/ STR         R3, [SP, #4] 
    /*00000ae0*/ MOVW        R2, #0                      @ .LC84 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x704] 
    /*00000ae4*/ STR         R1, [SP] 
    /*00000ae8*/ MOVT        R2, #0                      @ .LC84 [R_ARM_MOVT_ABS: .rodata.str1.4+0x704] 
    /*00000aec*/ LDR         R3, [PC, #20]               @ 0x0000000000000b08 
    /*00000af0*/ MOV         R1, #37                     @ 0x25 
    /*00000af4*/ MOV         R0, #3 
    /*00000af8*/ BL          0x0000000000000AF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000afc*/ MOVW        R0, #32771                  @ 0x8003 
    /*00000b00*/ MOVT        R0, #40997                  @ 0xa025 
    /*00000b04*/ B           GDC_CheckLMFCoef_xa78
    /*00000b08*/ ANDEQ       R0, R0, R4, ROR R0 
FUNC_END GDC_CheckLMFCoef


FUNC_BEGIN GDC_WaitConditionCallBack
    /*00000b0c*/ CMP         R0, #0 
    /*00000b10*/ BEQ         GDC_WaitConditionCallBack_xb64
    /*00000b14*/ LDR         R3, [R0, #4] 
    /*00000b18*/ CMP         R3, #0 
    /*00000b1c*/ BEQ         GDC_WaitConditionCallBack_xb64
    /*00000b20*/ LDR         R2, [R3, #16] 
    /*00000b24*/ SUB         R1, R2, #6 
    /*00000b28*/ CMP         R2, #0 
    /*00000b2c*/ CMPNE       R1, #1 
    /*00000b30*/ BHI         GDC_WaitConditionCallBack_xb44
    /*00000b34*/ LDR         R2, [R0] 
    /*00000b38*/ LDR         R3, [R3, #80]               @ 0x50 
    /*00000b3c*/ CMP         R2, R3 
    /*00000b40*/ BEQ         GDC_WaitConditionCallBack_xb5c
    GDC_WaitConditionCallBack_xb44:
    /*00000b44*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000b48*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000b4c*/ LDR         R0, [R3] 
    /*00000b50*/ SUBS        R0, R0, #1 
    /*00000b54*/ MOVNE       R0, #1 
    /*00000b58*/ BX          LR 
    GDC_WaitConditionCallBack_xb5c:
    /*00000b5c*/ MOV         R0, #1 
    /*00000b60*/ BX          LR 
    GDC_WaitConditionCallBack_xb64:
    /*00000b64*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00000b68*/ SUB         SP, SP, #12 
    /*00000b6c*/ MOVW        R3, #2294                   @ 0x8f6 
    /*00000b70*/ MOV         R1, #37                     @ 0x25 
    /*00000b74*/ STR         R3, [SP] 
    /*00000b78*/ MOVW        R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x780] 
    /*00000b7c*/ LDR         R3, [PC, #20]               @ 0x0000000000000b98 
    /*00000b80*/ MOVT        R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x780] 
    /*00000b84*/ MOV         R0, #3 
    /*00000b88*/ BL          0x0000000000000B88          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000b8c*/ MOV         R0, #0 
    /*00000b90*/ ADD         SP, SP, #12 
    /*00000b94*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00000b98*/ ANDEQ       R0, R0, R8, LSL #1 
FUNC_END GDC_WaitConditionCallBack


FUNC_BEGIN GDC_Exit
    /*00000b9c*/ PUSH        {R4, LR} 
    /*00000ba0*/ MOVW        R4, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000ba4*/ MOVT        R4, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000ba8*/ SUB         SP, SP, #8 
    /*00000bac*/ LDR         R3, [R4] 
    /*00000bb0*/ CMP         R3, #0 
    /*00000bb4*/ BEQ         GDC_Exit_xc04
    /*00000bb8*/ BL          0x0000000000000BB8          @ GDC_DrvCommClose [R_ARM_CALL: .text+0x160ac] 
    /*00000bbc*/ LDR         R0, [R4, #4] 
    /*00000bc0*/ ADD         R3, R0, #648                @ 0x288 
    /*00000bc4*/ ADD         R2, R0, #620                @ 0x26c 
    /*00000bc8*/ ADD         R1, R0, #604                @ 0x25c 
    /*00000bcc*/ BL          0x0000000000000BCC          @ GDC_DeInitBuf [R_ARM_CALL: .text+0xfffc] 
    /*00000bd0*/ LDR         R0, [R4, #4] 
    /*00000bd4*/ BL          0x0000000000000BD4          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00000bd8*/ MOVW        R3, #3272                   @ 0xcc8 
    /*00000bdc*/ MOVW        R2, #0                      @ .LC87 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7ac] 
    /*00000be0*/ STR         R3, [SP] 
    /*00000be4*/ MOVT        R2, #0                      @ .LC87 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7ac] 
    /*00000be8*/ LDR         R3, [PC, #28]               @ 0x0000000000000c0c 
    /*00000bec*/ MOV         R1, #37                     @ 0x25 
    /*00000bf0*/ MOV         R0, #6 
    /*00000bf4*/ MOV         IP, #0 
    /*00000bf8*/ STR         IP, [R4, #4] 
    /*00000bfc*/ STR         IP, [R4] 
    /*00000c00*/ BL          0x0000000000000C00          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_Exit_xc04:
    /*00000c04*/ ADD         SP, SP, #8 
    /*00000c08*/ POP         {R4, PC} 
    /*00000c0c*/ ANDEQ       R0, R0, R4, LSR #1 
FUNC_END GDC_Exit


FUNC_BEGIN GDC_QueryState
    /*00000c10*/ PUSH        {R4, R5, R6, LR} 
    /*00000c14*/ MOVW        R4, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000c18*/ MOVT        R4, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000c1c*/ SUB         SP, SP, #16 
    /*00000c20*/ MOV         R5, R0 
    /*00000c24*/ ADD         R0, R4, #8 
    /*00000c28*/ BL          0x0000000000000C28          @ osal_atomic_read [R_ARM_CALL: +0x0] 
    /*00000c2c*/ CMP         R0, #0 
    /*00000c30*/ BNE         GDC_QueryState_xc9c
    /*00000c34*/ LDR         R3, [R4] 
    /*00000c38*/ CMP         R3, #0 
    /*00000c3c*/ BNE         GDC_QueryState_xc50
    GDC_QueryState_xc40:
    /*00000c40*/ MOV         R3, #17 
    /*00000c44*/ STR         R3, [R5] 
    /*00000c48*/ ADD         SP, SP, #16 
    /*00000c4c*/ POP         {R4, R5, R6, PC} 
    GDC_QueryState_xc50:
    /*00000c50*/ LDR         R0, [R4, #4] 
    /*00000c54*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00000c58*/ BL          0x0000000000000C58          @ GDC_QueryFreeJobNum [R_ARM_CALL: .text+0x10258] 
    /*00000c5c*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00000c60*/ MOVW        R1, #3334                   @ 0xd06 
    /*00000c64*/ MOVW        R2, #0                      @ .LC88 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7e4] 
    /*00000c68*/ LDR         R3, [R6] 
    /*00000c6c*/ MOVT        R2, #0                      @ .LC88 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7e4] 
    /*00000c70*/ STR         R1, [SP] 
    /*00000c74*/ MOV         R1, #37                     @ 0x25 
    /*00000c78*/ STR         R3, [SP, #8] 
    /*00000c7c*/ LDR         R3, [PC, #40]               @ 0x0000000000000cac 
    /*00000c80*/ MOV         R4, R0 
    /*00000c84*/ STR         R0, [SP, #4] 
    /*00000c88*/ MOV         R0, #7 
    /*00000c8c*/ BL          0x0000000000000C8C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000c90*/ LDR         R3, [R6] 
    /*00000c94*/ CMP         R4, R3 
    /*00000c98*/ BEQ         GDC_QueryState_xc40
    GDC_QueryState_xc9c:
    /*00000c9c*/ MOV         R3, #34                     @ 0x22 
    /*00000ca0*/ STR         R3, [R5] 
    /*00000ca4*/ ADD         SP, SP, #16 
    /*00000ca8*/ POP         {R4, R5, R6, PC} 
    /*00000cac*/ STRHEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END GDC_QueryState


FUNC_BEGIN GDC_CheckNullPtr.part.4
    /*00000cb0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00000cb4*/ SUB         SP, SP, #12 
    /*00000cb8*/ MOV         R3, #102                    @ 0x66 
    /*00000cbc*/ MOV         R1, #37                     @ 0x25 
    /*00000cc0*/ STR         R3, [SP] 
    /*00000cc4*/ MOVW        R2, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x830] 
    /*00000cc8*/ LDR         R3, [PC, #24]               @ 0x0000000000000ce8 
    /*00000ccc*/ MOVT        R2, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x830] 
    /*00000cd0*/ MOV         R0, #3 
    /*00000cd4*/ BL          0x0000000000000CD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000cd8*/ MOVW        R0, #32774                  @ 0x8006 
    /*00000cdc*/ MOVT        R0, #40997                  @ 0xa025 
    /*00000ce0*/ ADD         SP, SP, #12 
    /*00000ce4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00000ce8*/ ANDEQ       R0, R0, R0, ASR #1 
FUNC_END GDC_CheckNullPtr.part.4


FUNC_BEGIN GDC_CheckModStart.part.5
    /*00000cec*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00000cf0*/ SUB         SP, SP, #12 
    /*00000cf4*/ MOV         R3, #112                    @ 0x70 
    /*00000cf8*/ MOV         R1, #37                     @ 0x25 
    /*00000cfc*/ STR         R3, [SP] 
    /*00000d00*/ MOVW        R2, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x85c] 
    /*00000d04*/ LDR         R3, [PC, #24]               @ 0x0000000000000d24 
    /*00000d08*/ MOVT        R2, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0x85c] 
    /*00000d0c*/ MOV         R0, #3 
    /*00000d10*/ BL          0x0000000000000D10          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000d14*/ MOVW        R0, #32784                  @ 0x8010 
    /*00000d18*/ MOVT        R0, #40997                  @ 0xa025 
    /*00000d1c*/ ADD         SP, SP, #12 
    /*00000d20*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00000d24*/ LDRDEQ      R0, [R0], -R4 
FUNC_END GDC_CheckModStart.part.5


FUNC_BEGIN GDC_RlsTmpBuff.part.9
    /*00000d28*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00000d2c*/ MOV         R4, R0 
    /*00000d30*/ SUB         SP, SP, #12 
    /*00000d34*/ MOV         R0, #1 
    /*00000d38*/ BL          0x0000000000000D38          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00000d3c*/ LDR         R3, [R0, #40]               @ 0x28 
    /*00000d40*/ LDR         R0, [R4, #784]              @ 0x310 
    /*00000d44*/ BLX         R3 
    /*00000d48*/ MOV         R5, R0 
    /*00000d4c*/ MOV         R0, #1 
    /*00000d50*/ BL          0x0000000000000D50          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00000d54*/ LDR         R3, [R0, #52]               @ 0x34 
    /*00000d58*/ LDR         R0, [R4, #784]              @ 0x310 
    /*00000d5c*/ BLX         R3 
    /*00000d60*/ MOV         R6, R0 
    /*00000d64*/ MOV         R0, #1 
    /*00000d68*/ MOV         R7, R1 
    /*00000d6c*/ BL          0x0000000000000D6C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00000d70*/ MOV         R1, #18 
    /*00000d74*/ MOV         R2, R6 
    /*00000d78*/ STR         R1, [SP] 
    /*00000d7c*/ MOV         R3, R7 
    /*00000d80*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00000d84*/ MOV         R0, R5 
    /*00000d88*/ BLX         R1 
    /*00000d8c*/ CMP         R0, #0 
    /*00000d90*/ BNE         GDC_RlsTmpBuff.part.9_xda4
    /*00000d94*/ MVN         R3, #0 
    /*00000d98*/ STR         R3, [R4, #784]              @ 0x310 
    /*00000d9c*/ ADD         SP, SP, #12 
    /*00000da0*/ POP         {R4, R5, R6, R7, PC} 
    GDC_RlsTmpBuff.part.9_xda4:
    /*00000da4*/ MOV         R2, #792                    @ 0x318 
    /*00000da8*/ LDR         R1, [PC, #32]               @ 0x0000000000000dd0 
    /*00000dac*/ MOVW        R3, #0                      @ .LC91 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x88c] 
    /*00000db0*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00000db4*/ MOVT        R3, #0                      @ .LC91 [R_ARM_MOVT_ABS: .rodata.str1.4+0x88c] 
    /*00000db8*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00000dbc*/ BL          0x0000000000000DBC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00000dc0*/ MVN         R3, #0 
    /*00000dc4*/ STR         R3, [R4, #784]              @ 0x310 
    /*00000dc8*/ ADD         SP, SP, #12 
    /*00000dcc*/ POP         {R4, R5, R6, R7, PC} 
    /*00000dd0*/ ANDEQ       R0, R0, R8, ROR #1 
FUNC_END GDC_RlsTmpBuff.part.9


FUNC_BEGIN GdcClose
    /*00000dd4*/ MOV         R0, #0 
    /*00000dd8*/ BX          LR 
FUNC_END GdcClose


FUNC_BEGIN GdcFreeze
    /*00000ddc*/ MOV         R0, #0 
    /*00000de0*/ BX          LR 
FUNC_END GdcFreeze


FUNC_BEGIN GdcOpen
    /*00000de4*/ MOV         R0, #0 
    /*00000de8*/ BX          LR 
FUNC_END GdcOpen


FUNC_BEGIN GDC_CheckNullPtr
    /*00000dec*/ CMP         R0, #0 
    /*00000df0*/ BEQ         GDC_CheckNullPtr_xdfc
    /*00000df4*/ MOV         R0, #0 
    /*00000df8*/ BX          LR 
    GDC_CheckNullPtr_xdfc:
    /*00000dfc*/ B           0x0000000000000CB0 
FUNC_END GDC_CheckNullPtr


FUNC_BEGIN GDC_CheckModStart
    /*00000e00*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000e04*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000e08*/ LDR         R3, [R3] 
    /*00000e0c*/ CMP         R3, #1 
    /*00000e10*/ BNE         GDC_CheckModStart_xe1c
    /*00000e14*/ MOV         R0, #0 
    /*00000e18*/ BX          LR 
    GDC_CheckModStart_xe1c:
    /*00000e1c*/ B           0x0000000000000CEC 
FUNC_END GDC_CheckModStart


FUNC_BEGIN GDC_HiModId2CallerId
    /*00000e20*/ SUB         R0, R0, #7 
    /*00000e24*/ CMP         R0, #23 
    /*00000e28*/ MOVWLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00000e2c*/ MOVTLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00000e30*/ ADDLS       R3, R3, R0, LSL #2 
    /*00000e34*/ LDRLS       R0, [R3, #248]              @ 0xf8 
    /*00000e38*/ MOVHI       R0, #4 
    /*00000e3c*/ BX          LR 
FUNC_END GDC_HiModId2CallerId


FUNC_BEGIN GDC_CallerId2HiModId
    /*00000e40*/ CMP         R0, #3 
    /*00000e44*/ MOVWLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00000e48*/ MOVTLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00000e4c*/ ADDLS       R3, R3, R0, LSL #2 
    /*00000e50*/ LDRLS       R0, [R3, #344]              @ 0x158 
    /*00000e54*/ MOVHI       R0, #60                     @ 0x3c 
    /*00000e58*/ BX          LR 
FUNC_END GDC_CallerId2HiModId


FUNC_BEGIN GDC_GetPointerByOffset
    /*00000e5c*/ MOVW        IP, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000e60*/ MOVT        IP, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000e64*/ ADD         R2, IP, R2, LSL #2 
    /*00000e68*/ LDR         IP, [SP] 
    /*00000e6c*/ LDR         R2, [R2, #28] 
    /*00000e70*/ MLA         R3, R2, R3, IP 
    /*00000e74*/ MLA         R0, R1, R3, R0 
    /*00000e78*/ BX          LR 
FUNC_END GDC_GetPointerByOffset


FUNC_BEGIN GDC_GetReturnGdcState
    /*00000e7c*/ CMP         R1, #1 
    /*00000e80*/ BEQ         GDC_GetReturnGdcState_xe94
    /*00000e84*/ CMP         R1, #2 
    /*00000e88*/ BEQ         GDC_GetReturnGdcState_xe94
    /*00000e8c*/ CMP         R1, #3 
    /*00000e90*/ BXNE        LR 
    GDC_GetReturnGdcState_xe94:
    /*00000e94*/ STR         R1, [R0] 
    /*00000e98*/ BX          LR 
FUNC_END GDC_GetReturnGdcState


FUNC_BEGIN GDC_CheckOtherImageInfo
    /*00000e9c*/ PUSH        {R4, R6, R7, LR} 
    /*00000ea0*/ MOV         R4, R0 
    /*00000ea4*/ LDRD        R2, [R0, #120]              @ 0x78 
    /*00000ea8*/ MOV         R1, #0 
    /*00000eac*/ SUB         SP, SP, #16 
    /*00000eb0*/ AND         R0, R2, #15 
    /*00000eb4*/ ORRS        R1, R0, R1 
    /*00000eb8*/ MOVNE       R1, #1 
    /*00000ebc*/ MOVEQ       R1, #0 
    /*00000ec0*/ ORRS        R0, R2, R3 
    /*00000ec4*/ ORREQ       R1, R1, #1 
    /*00000ec8*/ CMP         R1, #0 
    /*00000ecc*/ BNE         GDC_CheckOtherImageInfo_xf94
    /*00000ed0*/ LDR         R0, [R4, #12] 
    /*00000ed4*/ CMP         R0, #39                     @ 0x27 
    /*00000ed8*/ BEQ         GDC_CheckOtherImageInfo_xf18
    /*00000edc*/ LDR         R3, [R4, #48]               @ 0x30 
    /*00000ee0*/ CMP         R3, #15 
    /*00000ee4*/ BLS         GDC_CheckOtherImageInfo_xfc4
    /*00000ee8*/ TST         R3, #15 
    /*00000eec*/ BNE         GDC_CheckOtherImageInfo_xfc4
    /*00000ef0*/ LDRD        R2, [R4, #128]              @ 0x80 
    /*00000ef4*/ MOV         R7, #0 
    /*00000ef8*/ AND         R6, R2, #15 
    /*00000efc*/ ORRS        R1, R6, R7 
    /*00000f00*/ MOVNE       R1, #1 
    /*00000f04*/ MOVEQ       R1, #0 
    /*00000f08*/ ORRS        IP, R2, R3 
    /*00000f0c*/ ORREQ       R1, R1, #1 
    /*00000f10*/ CMP         R1, #0 
    /*00000f14*/ BNE         GDC_CheckOtherImageInfo_xff4
    GDC_CheckOtherImageInfo_xf18:
    /*00000f18*/ BL          0x0000000000000F18          @ GDC_DRV_CheckPixelFormat [R_ARM_CALL: .text+0x18f00] 
    /*00000f1c*/ CMP         R0, #0 
    /*00000f20*/ BNE         GDC_CheckOtherImageInfo_x100c
    /*00000f24*/ LDR         R3, [R4, #16] 
    /*00000f28*/ CMP         R3, #0 
    /*00000f2c*/ BNE         GDC_CheckOtherImageInfo_x102c
    /*00000f30*/ LDR         R3, [R4, #24] 
    /*00000f34*/ LDR         R2, [R4, #28] 
    /*00000f38*/ CMP         R3, #5 
    /*00000f3c*/ LDR         R1, [R4, #8] 
    /*00000f40*/ BHI         GDC_CheckOtherImageInfo_xf5c
    /*00000f44*/ CMP         R2, #3 
    /*00000f48*/ BHI         GDC_CheckOtherImageInfo_xf5c
    /*00000f4c*/ CMP         R1, #4 
    /*00000f50*/ BHI         GDC_CheckOtherImageInfo_xf5c
    GDC_CheckOtherImageInfo_xf54:
    /*00000f54*/ ADD         SP, SP, #16 
    /*00000f58*/ POP         {R4, R6, R7, PC} 
    GDC_CheckOtherImageInfo_xf5c:
    /*00000f5c*/ STR         R1, [SP, #12] 
    /*00000f60*/ MOV         R0, #3 
    /*00000f64*/ MOV         R1, #249                    @ 0xf9 
    /*00000f68*/ STR         R2, [SP, #8] 
    /*00000f6c*/ STR         R3, [SP, #4] 
    /*00000f70*/ MOVW        R2, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9dc] 
    /*00000f74*/ STR         R1, [SP] 
    /*00000f78*/ MOVT        R2, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9dc] 
    /*00000f7c*/ MOV         R1, #37                     @ 0x25 
    /*00000f80*/ LDR         R3, [PC, #188]              @ 0x0000000000001044 
    /*00000f84*/ BL          0x0000000000000F84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000f88*/ MOVW        R0, #32771                  @ 0x8003 
    /*00000f8c*/ MOVT        R0, #40997                  @ 0xa025 
    /*00000f90*/ B           GDC_CheckOtherImageInfo_xf54
    GDC_CheckOtherImageInfo_xf94:
    /*00000f94*/ STRD        R2, [SP, #8] 
    /*00000f98*/ MOVW        R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8e4] 
    /*00000f9c*/ MOVT        R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8e4] 
    /*00000fa0*/ MOV         R3, #210                    @ 0xd2 
    /*00000fa4*/ STR         R3, [SP] 
    GDC_CheckOtherImageInfo_xfa8:
    /*00000fa8*/ LDR         R3, [PC, #148]              @ 0x0000000000001044 
    /*00000fac*/ MOV         R1, #37                     @ 0x25 
    /*00000fb0*/ MOV         R0, #3 
    /*00000fb4*/ BL          0x0000000000000FB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000fb8*/ MOVW        R0, #32771                  @ 0x8003 
    /*00000fbc*/ MOVT        R0, #40997                  @ 0xa025 
    /*00000fc0*/ B           GDC_CheckOtherImageInfo_xf54
    GDC_CheckOtherImageInfo_xfc4:
    /*00000fc4*/ MOVW        R2, #0                      @ .LC94 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x918] 
    /*00000fc8*/ MOVT        R2, #0                      @ .LC94 [R_ARM_MOVT_ABS: .rodata.str1.4+0x918] 
    /*00000fcc*/ STR         R3, [SP, #4] 
    /*00000fd0*/ MOV         R3, #219                    @ 0xdb 
    /*00000fd4*/ STR         R3, [SP] 
    GDC_CheckOtherImageInfo_xfd8:
    /*00000fd8*/ LDR         R3, [PC, #100]              @ 0x0000000000001044 
    GDC_CheckOtherImageInfo_xfdc:
    /*00000fdc*/ MOV         R1, #37                     @ 0x25 
    /*00000fe0*/ MOV         R0, #3 
    /*00000fe4*/ BL          0x0000000000000FE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00000fe8*/ MOVW        R0, #32771                  @ 0x8003 
    /*00000fec*/ MOVT        R0, #40997                  @ 0xa025 
    /*00000ff0*/ B           GDC_CheckOtherImageInfo_xf54
    GDC_CheckOtherImageInfo_xff4:
    /*00000ff4*/ STRD        R2, [SP, #8] 
    /*00000ff8*/ MOV         R3, #225                    @ 0xe1 
    /*00000ffc*/ MOVW        R2, #0                      @ .LC95 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x948] 
    /*00001000*/ STR         R3, [SP] 
    /*00001004*/ MOVT        R2, #0                      @ .LC95 [R_ARM_MOVT_ABS: .rodata.str1.4+0x948] 
    /*00001008*/ B           GDC_CheckOtherImageInfo_xfa8
    GDC_CheckOtherImageInfo_x100c:
    /*0000100c*/ LDR         R1, [R4, #12] 
    /*00001010*/ MOV         R3, #234                    @ 0xea 
    /*00001014*/ MOVW        R2, #0                      @ .LC96 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x97c] 
    /*00001018*/ STR         R3, [SP] 
    /*0000101c*/ MOVT        R2, #0                      @ .LC96 [R_ARM_MOVT_ABS: .rodata.str1.4+0x97c] 
    /*00001020*/ LDR         R3, [PC, #28]               @ 0x0000000000001044 
    /*00001024*/ STR         R1, [SP, #4] 
    /*00001028*/ B           GDC_CheckOtherImageInfo_xfdc
    GDC_CheckOtherImageInfo_x102c:
    /*0000102c*/ STR         R3, [SP, #4] 
    /*00001030*/ MOVW        R2, #0                      @ .LC97 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9a8] 
    /*00001034*/ MOV         R3, #240                    @ 0xf0 
    /*00001038*/ MOVT        R2, #0                      @ .LC97 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9a8] 
    /*0000103c*/ STR         R3, [SP] 
    /*00001040*/ B           GDC_CheckOtherImageInfo_xfd8
    /*00001044*/ ANDEQ       R0, R0, R8, ROR #2 
FUNC_END GDC_CheckOtherImageInfo


FUNC_BEGIN GDC_CheckInImage
    /*00001048*/ PUSH        {R4, LR} 
    /*0000104c*/ MOV         R3, #0 
    /*00001050*/ LDR         R1, [R0, #4] 
    /*00001054*/ SUB         SP, SP, #8 
    /*00001058*/ MOV         R4, R0 
    /*0000105c*/ MOV         R2, #1 
    /*00001060*/ LDR         R0, [R0] 
    /*00001064*/ BL          0x0000000000001064          @ GDC_DRV_CheckCommWH [R_ARM_CALL: .text+0x1793c] 
    /*00001068*/ CMP         R0, #0 
    /*0000106c*/ BNE         GDC_CheckInImage_x10ac
    /*00001070*/ LDR         R3, [R4, #44]               @ 0x2c 
    /*00001074*/ CMP         R3, #15 
    /*00001078*/ BLS         GDC_CheckInImage_x10b4
    /*0000107c*/ TST         R3, #15 
    /*00001080*/ BNE         GDC_CheckInImage_x10b4
    /*00001084*/ LDR         R3, [R4, #20] 
    /*00001088*/ CMP         R3, #0 
    /*0000108c*/ BNE         GDC_CheckInImage_x10e4
    /*00001090*/ MOV         R0, R4 
    /*00001094*/ BL          0x0000000000001094          @ GDC_CheckOtherImageInfo [R_ARM_CALL: .text+0xe9c] 
    /*00001098*/ MOVW        R3, #32771                  @ 0x8003 
    /*0000109c*/ MOVT        R3, #40997                  @ 0xa025 
    /*000010a0*/ CMP         R0, #0 
    /*000010a4*/ MOVNE       R0, R3 
    /*000010a8*/ MOVEQ       R0, #0 
    GDC_CheckInImage_x10ac:
    /*000010ac*/ ADD         SP, SP, #8 
    /*000010b0*/ POP         {R4, PC} 
    GDC_CheckInImage_x10b4:
    /*000010b4*/ MOVW        R2, #0                      @ .LC99 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa34] 
    /*000010b8*/ MOVT        R2, #0                      @ .LC99 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa34] 
    /*000010bc*/ STR         R3, [SP, #4] 
    /*000010c0*/ MOVW        R3, #270                    @ 0x10e 
    /*000010c4*/ STR         R3, [SP] 
    GDC_CheckInImage_x10c8:
    /*000010c8*/ LDR         R3, [PC, #44]               @ 0x00000000000010fc 
    /*000010cc*/ MOV         R1, #37                     @ 0x25 
    /*000010d0*/ MOV         R0, #3 
    /*000010d4*/ BL          0x00000000000010D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000010d8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000010dc*/ MOVT        R0, #40997                  @ 0xa025 
    /*000010e0*/ B           GDC_CheckInImage_x10ac
    GDC_CheckInImage_x10e4:
    /*000010e4*/ STR         R3, [SP, #4] 
    /*000010e8*/ MOVW        R2, #0                      @ .LC100 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa64] 
    /*000010ec*/ MOV         R3, #276                    @ 0x114 
    /*000010f0*/ MOVT        R2, #0                      @ .LC100 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa64] 
    /*000010f4*/ STR         R3, [SP] 
    /*000010f8*/ B           GDC_CheckInImage_x10c8
    /*000010fc*/ ANDEQ       R0, R0, R0, LSL #3 
FUNC_END GDC_CheckInImage


FUNC_BEGIN GDC_CheckOutImage
    /*00001100*/ PUSH        {R4, LR} 
    /*00001104*/ MOV         R4, R0 
    /*00001108*/ MOV         R2, R1 
    /*0000110c*/ SUB         SP, SP, #8 
    /*00001110*/ LDR         R0, [R0] 
    /*00001114*/ MOV         R3, #1 
    /*00001118*/ LDR         R1, [R4, #4] 
    /*0000111c*/ BL          0x000000000000111C          @ GDC_DRV_CheckCommWH [R_ARM_CALL: .text+0x1793c] 
    /*00001120*/ CMP         R0, #0 
    /*00001124*/ BNE         GDC_CheckOutImage_x1168
    /*00001128*/ LDR         R3, [R4, #44]               @ 0x2c 
    /*0000112c*/ CMP         R3, #15 
    /*00001130*/ BLS         GDC_CheckOutImage_x1170
    /*00001134*/ TST         R3, #15 
    /*00001138*/ BNE         GDC_CheckOutImage_x1170
    /*0000113c*/ LDR         R0, [R4, #20] 
    /*00001140*/ BL          0x0000000000001140          @ GDC_DRV_CheckCompressFormat [R_ARM_CALL: .text+0x18f1c] 
    /*00001144*/ CMP         R0, #0 
    /*00001148*/ BNE         GDC_CheckOutImage_x11a0
    /*0000114c*/ MOV         R0, R4 
    /*00001150*/ BL          0x0000000000001150          @ GDC_CheckOtherImageInfo [R_ARM_CALL: .text+0xe9c] 
    /*00001154*/ MOVW        R3, #32771                  @ 0x8003 
    /*00001158*/ MOVT        R3, #40997                  @ 0xa025 
    /*0000115c*/ CMP         R0, #0 
    /*00001160*/ MOVNE       R0, R3 
    /*00001164*/ MOVEQ       R0, #0 
    GDC_CheckOutImage_x1168:
    /*00001168*/ ADD         SP, SP, #8 
    /*0000116c*/ POP         {R4, PC} 
    GDC_CheckOutImage_x1170:
    /*00001170*/ STR         R3, [SP, #4] 
    /*00001174*/ MOVW        R3, #301                    @ 0x12d 
    /*00001178*/ STR         R3, [SP] 
    /*0000117c*/ MOVW        R2, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa98] 
    /*00001180*/ LDR         R3, [PC, #56]               @ 0x00000000000011c0 
    /*00001184*/ MOVT        R2, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa98] 
    GDC_CheckOutImage_x1188:
    /*00001188*/ MOV         R1, #37                     @ 0x25 
    /*0000118c*/ MOV         R0, #3 
    /*00001190*/ BL          0x0000000000001190          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001194*/ MOVW        R0, #32771                  @ 0x8003 
    /*00001198*/ MOVT        R0, #40997                  @ 0xa025 
    /*0000119c*/ B           GDC_CheckOutImage_x1168
    GDC_CheckOutImage_x11a0:
    /*000011a0*/ LDR         R1, [R4, #20] 
    /*000011a4*/ MOVW        R3, #307                    @ 0x133 
    /*000011a8*/ MOVW        R2, #0                      @ .LC102 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xac8] 
    /*000011ac*/ STR         R3, [SP] 
    /*000011b0*/ MOVT        R2, #0                      @ .LC102 [R_ARM_MOVT_ABS: .rodata.str1.4+0xac8] 
    /*000011b4*/ LDR         R3, [PC, #4]                @ 0x00000000000011c0 
    /*000011b8*/ STR         R1, [SP, #4] 
    /*000011bc*/ B           GDC_CheckOutImage_x1188
    /*000011c0*/ MULEQ       R0, R4, R1 
FUNC_END GDC_CheckOutImage


FUNC_BEGIN GDC_CheckImage
    /*000011c4*/ PUSH        {R4, R5, R6, LR} 
    /*000011c8*/ SUB         SP, SP, #16 
    /*000011cc*/ MOV         R4, R1 
    /*000011d0*/ MOV         R5, R2 
    /*000011d4*/ MOV         R6, R0 
    /*000011d8*/ BL          0x00000000000011D8          @ GDC_CheckInImage [R_ARM_CALL: .text+0x1048] 
    /*000011dc*/ CMP         R0, #0 
    /*000011e0*/ BEQ         GDC_CheckImage_x11ec
    GDC_CheckImage_x11e4:
    /*000011e4*/ ADD         SP, SP, #16 
    /*000011e8*/ POP         {R4, R5, R6, PC} 
    GDC_CheckImage_x11ec:
    /*000011ec*/ MOV         R1, R5 
    /*000011f0*/ MOV         R0, R4 
    /*000011f4*/ BL          0x00000000000011F4          @ GDC_CheckOutImage [R_ARM_CALL: .text+0x1100] 
    /*000011f8*/ CMP         R0, #0 
    /*000011fc*/ BNE         GDC_CheckImage_x11e4
    /*00001200*/ MOV         R1, R4 
    /*00001204*/ MOV         R0, R6 
    /*00001208*/ BL          0x0000000000001208          @ GDC_DRV_CheckPixelFormatConsistence [R_ARM_CALL: .text+0x18ed8] 
    /*0000120c*/ CMP         R0, #0 
    /*00001210*/ BEQ         GDC_CheckImage_x11e4
    /*00001214*/ LDR         R1, [R4, #12] 
    /*00001218*/ MOVW        R0, #341                    @ 0x155 
    /*0000121c*/ LDR         R3, [R6, #12] 
    /*00001220*/ MOVW        R2, #0                      @ .LC103 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xafc] 
    /*00001224*/ STR         R0, [SP] 
    /*00001228*/ MOVT        R2, #0                      @ .LC103 [R_ARM_MOVT_ABS: .rodata.str1.4+0xafc] 
    /*0000122c*/ STR         R1, [SP, #8] 
    /*00001230*/ MOV         R0, #3 
    /*00001234*/ STR         R3, [SP, #4] 
    /*00001238*/ MOV         R1, #37                     @ 0x25 
    /*0000123c*/ LDR         R3, [PC, #12]               @ 0x0000000000001250 
    /*00001240*/ BL          0x0000000000001240          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001244*/ MOVW        R0, #32771                  @ 0x8003 
    /*00001248*/ MOVT        R0, #40997                  @ 0xa025 
    /*0000124c*/ B           GDC_CheckImage_x11e4
    /*00001250*/ ANDEQ       R0, R0, R8, LSR #3 
FUNC_END GDC_CheckImage


FUNC_BEGIN GDC_CheckLDCImage
    /*00001254*/ PUSH        {R4, R5, R6, LR} 
    /*00001258*/ MOV         LR, R2 
    /*0000125c*/ LDR         IP, [R0, #12] 
    /*00001260*/ SUB         SP, SP, #32 
    /*00001264*/ LDR         R2, [R1, #12] 
    /*00001268*/ CMP         IP, R2 
    /*0000126c*/ BNE         GDC_CheckLDCImage_x1338
    /*00001270*/ CMP         LR, #0 
    /*00001274*/ BEQ         GDC_CheckLDCImage_x12a8
    /*00001278*/ LDR         IP, [R0] 
    /*0000127c*/ LDR         R2, [R1] 
    /*00001280*/ LSR         R5, IP, #1 
    /*00001284*/ CMP         R5, R2 
    /*00001288*/ BLS         GDC_CheckLDCImage_x1298
    /*0000128c*/ LDR         R4, [R1, #4] 
    /*00001290*/ CMP         R5, R4 
    /*00001294*/ BHI         GDC_CheckLDCImage_x1330
    GDC_CheckLDCImage_x1298:
    /*00001298*/ MOV         R2, #1 
    /*0000129c*/ ADD         SP, SP, #32 
    /*000012a0*/ POP         {R4, R5, R6, LR} 
    GDC_CheckLDCImage_x12a4:
    /*000012a4*/ B           GDC_CheckLDCImage_x12a4     @ GDC_CheckImage [R_ARM_JUMP24: .text+0x11c4] 
    GDC_CheckLDCImage_x12a8:
    /*000012a8*/ BIC         R2, R3, #2 
    /*000012ac*/ LDR         IP, [R0] 
    /*000012b0*/ CMP         R2, #1 
    /*000012b4*/ BNE         GDC_CheckLDCImage_x1318
    /*000012b8*/ LDR         R4, [R1, #4] 
    /*000012bc*/ CMP         IP, R4 
    /*000012c0*/ BEQ         GDC_CheckLDCImage_x1298
    /*000012c4*/ LDR         R5, [R0, #4] 
    /*000012c8*/ LDR         R2, [R1] 
    /*000012cc*/ CMP         R5, R2 
    /*000012d0*/ BEQ         GDC_CheckLDCImage_x1298
    GDC_CheckLDCImage_x12d4:
    /*000012d4*/ STR         R2, [SP, #24] 
    /*000012d8*/ MOV         R6, #412                    @ 0x19c 
    /*000012dc*/ STR         R3, [SP, #8] 
    /*000012e0*/ MOVW        R2, #0                      @ .LC105 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb74] 
    /*000012e4*/ STR         R4, [SP, #20] 
    /*000012e8*/ MOVT        R2, #0                      @ .LC105 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb74] 
    /*000012ec*/ STR         R5, [SP, #16] 
    /*000012f0*/ MOV         R1, #37                     @ 0x25 
    /*000012f4*/ STR         IP, [SP, #12] 
    /*000012f8*/ MOV         R0, #3 
    /*000012fc*/ STM         SP, {R6, LR} 
    /*00001300*/ LDR         R3, [PC, #100]              @ 0x000000000000136c 
    /*00001304*/ BL          0x0000000000001304          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001308*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000130c*/ MOVT        R0, #40997                  @ 0xa025 
    GDC_CheckLDCImage_x1310:
    /*00001310*/ ADD         SP, SP, #32 
    /*00001314*/ POP         {R4, R5, R6, PC} 
    GDC_CheckLDCImage_x1318:
    /*00001318*/ LDR         R2, [R1] 
    /*0000131c*/ CMP         IP, R2 
    /*00001320*/ BEQ         GDC_CheckLDCImage_x1298
    /*00001324*/ LDR         R4, [R1, #4] 
    /*00001328*/ CMP         IP, R4 
    /*0000132c*/ BEQ         GDC_CheckLDCImage_x1298
    GDC_CheckLDCImage_x1330:
    /*00001330*/ LDR         R5, [R0, #4] 
    /*00001334*/ B           GDC_CheckLDCImage_x12d4
    GDC_CheckLDCImage_x1338:
    /*00001338*/ STR         R2, [SP, #8] 
    /*0000133c*/ MOVW        R3, #354                    @ 0x162 
    /*00001340*/ STR         IP, [SP, #4] 
    /*00001344*/ MOVW        R2, #0                      @ .LC104 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb3c] 
    /*00001348*/ STR         R3, [SP] 
    /*0000134c*/ MOVT        R2, #0                      @ .LC104 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb3c] 
    /*00001350*/ LDR         R3, [PC, #20]               @ 0x000000000000136c 
    /*00001354*/ MOV         R1, #37                     @ 0x25 
    /*00001358*/ MOV         R0, #3 
    /*0000135c*/ BL          0x000000000000135C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001360*/ MOVW        R0, #32771                  @ 0x8003 
    /*00001364*/ MOVT        R0, #40997                  @ 0xa025 
    /*00001368*/ B           GDC_CheckLDCImage_x1310
    /*0000136c*/ @           <UNDEFINED> instruction: 0x000001b8 
FUNC_END GDC_CheckLDCImage


FUNC_BEGIN GDC_CheckPMFInfo
    /*00001370*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00001374*/ SUB         SP, SP, #20 
    /*00001378*/ LDR         IP, [R2] 
    /*0000137c*/ CMP         IP, #1 
    /*00001380*/ BNE         GDC_CheckPMFInfo_x13fc
    /*00001384*/ LDR         IP, [R0] 
    /*00001388*/ LDR         R3, [R0, #4] 
    /*0000138c*/ CMP         IP, #360                    @ 0x168 
    /*00001390*/ BCC         GDC_CheckPMFInfo_x13c4
    /*00001394*/ CMP         R3, #360                    @ 0x168 
    /*00001398*/ BCC         GDC_CheckPMFInfo_x13c4
    /*0000139c*/ LDR         LR, [R1] 
    /*000013a0*/ CMP         LR, #360                    @ 0x168 
    /*000013a4*/ BCC         GDC_CheckPMFInfo_x13c4
    /*000013a8*/ LDR         R2, [R1, #4] 
    /*000013ac*/ CMP         R2, #360                    @ 0x168 
    /*000013b0*/ BCC         GDC_CheckPMFInfo_x13c4
    /*000013b4*/ MOV         R2, #0 
    /*000013b8*/ ADD         SP, SP, #20 
    /*000013bc*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_CheckPMFInfo_x13c0:
    /*000013c0*/ B           GDC_CheckPMFInfo_x13c0      @ GDC_CheckImage [R_ARM_JUMP24: .text+0x11c4] 
    GDC_CheckPMFInfo_x13c4:
    /*000013c4*/ STR         R3, [SP, #8] 
    /*000013c8*/ MOVW        R2, #0                      @ .LC107 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbf8] 
    /*000013cc*/ MOV         R3, #432                    @ 0x1b0 
    /*000013d0*/ STR         IP, [SP, #4] 
    /*000013d4*/ STR         R3, [SP] 
    /*000013d8*/ MOVT        R2, #0                      @ .LC107 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbf8] 
    /*000013dc*/ LDR         R3, [PC, #72]               @ 0x000000000000142c 
    /*000013e0*/ MOV         R1, #37                     @ 0x25 
    /*000013e4*/ MOV         R0, #3 
    /*000013e8*/ BL          0x00000000000013E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000013ec*/ MOVW        R0, #32771                  @ 0x8003 
    /*000013f0*/ MOVT        R0, #40997                  @ 0xa025 
    GDC_CheckPMFInfo_x13f4:
    /*000013f4*/ ADD         SP, SP, #20 
    /*000013f8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    GDC_CheckPMFInfo_x13fc:
    /*000013fc*/ MOV         R3, #424                    @ 0x1a8 
    /*00001400*/ STR         IP, [SP, #4] 
    /*00001404*/ STR         R3, [SP] 
    /*00001408*/ MOVW        R2, #0                      @ .LC106 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbcc] 
    /*0000140c*/ LDR         R3, [PC, #24]               @ 0x000000000000142c 
    /*00001410*/ MOVT        R2, #0                      @ .LC106 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbcc] 
    /*00001414*/ MOV         R1, #37                     @ 0x25 
    /*00001418*/ MOV         R0, #3 
    /*0000141c*/ BL          0x000000000000141C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001420*/ MOVW        R0, #32771                  @ 0x8003 
    /*00001424*/ MOVT        R0, #40997                  @ 0xa025 
    /*00001428*/ B           GDC_CheckPMFInfo_x13f4
    /*0000142c*/ ANDEQ       R0, R0, IP, ASR #3 
FUNC_END GDC_CheckPMFInfo


FUNC_BEGIN GDC_CheckGyroInfo
    /*00001430*/ LDR         R3, [R2] 
    /*00001434*/ CMP         R3, #1 
    /*00001438*/ BNE         GDC_CheckGyroInfo_x1444
    /*0000143c*/ MOV         R2, #0 
    GDC_CheckGyroInfo_x1440:
    /*00001440*/ B           GDC_CheckGyroInfo_x1440     @ GDC_CheckImage [R_ARM_JUMP24: .text+0x11c4] 
    GDC_CheckGyroInfo_x1444:
    /*00001444*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00001448*/ SUB         SP, SP, #12 
    /*0000144c*/ MOV         R1, #37                     @ 0x25 
    /*00001450*/ MOVW        R2, #0                      @ .LC108 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc28] 
    /*00001454*/ STR         R3, [SP, #4] 
    /*00001458*/ MOVT        R2, #0                      @ .LC108 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc28] 
    /*0000145c*/ MOV         R3, #452                    @ 0x1c4 
    /*00001460*/ MOV         R0, #3 
    /*00001464*/ STR         R3, [SP] 
    /*00001468*/ LDR         R3, [PC, #16]               @ 0x0000000000001480 
    /*0000146c*/ BL          0x000000000000146C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001470*/ MOVW        R0, #32771                  @ 0x8003 
    /*00001474*/ MOVT        R0, #40997                  @ 0xa025 
    /*00001478*/ ADD         SP, SP, #12 
    /*0000147c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00001480*/ ANDEQ       R0, R0, R0, ROR #3 
FUNC_END GDC_CheckGyroInfo


FUNC_BEGIN GDC_CheckMmzPhyAddr
    /*00001484*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00001488*/ MOV         R4, R0 
    /*0000148c*/ LDR         R3, [R0, #20] 
    /*00001490*/ SUB         SP, SP, #12 
    /*00001494*/ CMP         R3, #1 
    /*00001498*/ BEQ         GDC_CheckMmzPhyAddr_x1534
    GDC_CheckMmzPhyAddr_x149c:
    /*0000149c*/ LDR         R3, [R4, #4] 
    /*000014a0*/ MOV         R7, #0 
    /*000014a4*/ LDR         R6, [R4] 
    /*000014a8*/ LDR         R2, [R4, #44]               @ 0x2c 
    /*000014ac*/ SUB         R3, R3, #1 
    /*000014b0*/ LDR         R5, [R4, #120]              @ 0x78 
    /*000014b4*/ UMLAL       R6, R7, R2, R3 
    /*000014b8*/ MOV         R0, R5 
    /*000014bc*/ MOV         R1, R6 
    /*000014c0*/ BL          0x00000000000014C0          @ hil_is_phys_in_mmz [R_ARM_CALL: +0x0] 
    /*000014c4*/ CMP         R0, #0 
    /*000014c8*/ BNE         GDC_CheckMmzPhyAddr_x14f4
    GDC_CheckMmzPhyAddr_x14cc:
    /*000014cc*/ LDR         R3, [R4, #12] 
    /*000014d0*/ CMP         R3, #29 
    /*000014d4*/ CMPNE       R3, #26 
    /*000014d8*/ BEQ         GDC_CheckMmzPhyAddr_x16a4
    /*000014dc*/ CMP         R3, #28 
    /*000014e0*/ CMPNE       R3, #25 
    /*000014e4*/ BEQ         GDC_CheckMmzPhyAddr_x15f4
    GDC_CheckMmzPhyAddr_x14e8:
    /*000014e8*/ MOV         R0, #0 
    /*000014ec*/ ADD         SP, SP, #12 
    /*000014f0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    GDC_CheckMmzPhyAddr_x14f4:
    /*000014f4*/ MOV         R1, R6 
    /*000014f8*/ MOV         R0, R5 
    /*000014fc*/ BL          0x00000000000014FC          @ hil_map_mmz_check_phys [R_ARM_CALL: +0x0] 
    /*00001500*/ CMP         R0, #0 
    /*00001504*/ BEQ         GDC_CheckMmzPhyAddr_x14cc
    /*00001508*/ MOVW        R2, #0                      @ .LC113 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd4c] 
    /*0000150c*/ MOVT        R2, #0                      @ .LC113 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd4c] 
    /*00001510*/ MOVW        R3, #553                    @ 0x229 
    /*00001514*/ STR         R3, [SP] 
    GDC_CheckMmzPhyAddr_x1518:
    /*00001518*/ LDR         R3, [PC, #552]              @ 0x0000000000001748 
    /*0000151c*/ MOV         R1, #37                     @ 0x25 
    /*00001520*/ MOV         R0, #3 
    /*00001524*/ BL          0x0000000000001524          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001528*/ MVN         R0, #0 
    /*0000152c*/ ADD         SP, SP, #12 
    /*00001530*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    GDC_CheckMmzPhyAddr_x1534:
    /*00001534*/ LDR         R6, [R0, #4] 
    /*00001538*/ LDR         R3, [R0, #32] 
    /*0000153c*/ SUB         R6, R6, #1 
    /*00001540*/ LDR         R5, [R0, #72]               @ 0x48 
    /*00001544*/ UMULL       R6, R7, R6, R3 
    /*00001548*/ MOV         R0, R5 
    /*0000154c*/ MOV         R1, R6 
    /*00001550*/ BL          0x0000000000001550          @ hil_is_phys_in_mmz [R_ARM_CALL: +0x0] 
    /*00001554*/ CMP         R0, #0 
    /*00001558*/ BNE         GDC_CheckMmzPhyAddr_x1654
    GDC_CheckMmzPhyAddr_x155c:
    /*0000155c*/ LDR         R6, [R4, #4] 
    /*00001560*/ LDR         R3, [R4, #36]               @ 0x24 
    /*00001564*/ SUB         R6, R6, #1 
    /*00001568*/ LDR         R5, [R4, #80]               @ 0x50 
    /*0000156c*/ UMULL       R6, R7, R6, R3 
    /*00001570*/ MOV         R0, R5 
    /*00001574*/ MOV         R1, R6 
    /*00001578*/ BL          0x0000000000001578          @ hil_is_phys_in_mmz [R_ARM_CALL: +0x0] 
    /*0000157c*/ CMP         R0, #0 
    /*00001580*/ BNE         GDC_CheckMmzPhyAddr_x167c
    GDC_CheckMmzPhyAddr_x1584:
    /*00001584*/ LDR         R3, [R4, #24] 
    /*00001588*/ CMP         R3, #0 
    /*0000158c*/ BEQ         GDC_CheckMmzPhyAddr_x149c
    /*00001590*/ LDRD        R6, [R4, #168]              @ 0xa8 
    /*00001594*/ ORRS        R3, R6, R7 
    /*00001598*/ BNE         GDC_CheckMmzPhyAddr_x16fc
    GDC_CheckMmzPhyAddr_x159c:
    /*0000159c*/ LDRD        R6, [R4, #176]              @ 0xb0 
    /*000015a0*/ ORRS        R3, R6, R7 
    /*000015a4*/ BEQ         GDC_CheckMmzPhyAddr_x149c
    /*000015a8*/ LDR         R8, [R4, #4] 
    /*000015ac*/ MOV         R0, R6 
    /*000015b0*/ LDR         R3, [R4, #60]               @ 0x3c 
    /*000015b4*/ SUB         R8, R8, #1 
    /*000015b8*/ UMULL       R8, R9, R8, R3 
    /*000015bc*/ MOV         R1, R8 
    /*000015c0*/ BL          0x00000000000015C0          @ hil_is_phys_in_mmz [R_ARM_CALL: +0x0] 
    /*000015c4*/ CMP         R0, #0 
    /*000015c8*/ BEQ         GDC_CheckMmzPhyAddr_x149c
    /*000015cc*/ MOV         R1, R8 
    /*000015d0*/ MOV         R0, R6 
    /*000015d4*/ BL          0x00000000000015D4          @ hil_map_mmz_check_phys [R_ARM_CALL: +0x0] 
    /*000015d8*/ CMP         R0, #0 
    /*000015dc*/ BEQ         GDC_CheckMmzPhyAddr_x149c
    /*000015e0*/ MOVW        R3, #541                    @ 0x21d 
    /*000015e4*/ MOVW        R2, #0                      @ .LC112 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd10] 
    /*000015e8*/ STR         R3, [SP] 
    /*000015ec*/ MOVT        R2, #0                      @ .LC112 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd10] 
    /*000015f0*/ B           GDC_CheckMmzPhyAddr_x1518
    GDC_CheckMmzPhyAddr_x15f4:
    /*000015f4*/ LDR         R2, [R4] 
    /*000015f8*/ MOV         R3, #0 
    /*000015fc*/ LDR         R1, [R4, #4] 
    /*00001600*/ LDR         R0, [R4, #48]               @ 0x30 
    /*00001604*/ SUB         R1, R1, #1 
    /*00001608*/ LSR         R2, R2, #1 
    /*0000160c*/ LDR         R6, [R4, #128]              @ 0x80 
    /*00001610*/ UMLAL       R2, R3, R0, R1 
    /*00001614*/ MOV         R0, R6 
    /*00001618*/ MOV         R1, R2 
    /*0000161c*/ MOV         R4, R2 
    /*00001620*/ BL          0x0000000000001620          @ hil_is_phys_in_mmz [R_ARM_CALL: +0x0] 
    /*00001624*/ CMP         R0, #0 
    /*00001628*/ BEQ         GDC_CheckMmzPhyAddr_x14e8
    /*0000162c*/ MOV         R1, R4 
    /*00001630*/ MOV         R0, R6 
    /*00001634*/ BL          0x0000000000001634          @ hil_map_mmz_check_phys [R_ARM_CALL: +0x0] 
    /*00001638*/ CMP         R0, #0 
    /*0000163c*/ BEQ         GDC_CheckMmzPhyAddr_x14e8
    /*00001640*/ MOVW        R3, #577                    @ 0x241 
    GDC_CheckMmzPhyAddr_x1644:
    /*00001644*/ MOVW        R2, #0                      @ .LC114 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd84] 
    /*00001648*/ STR         R3, [SP] 
    /*0000164c*/ MOVT        R2, #0                      @ .LC114 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd84] 
    /*00001650*/ B           GDC_CheckMmzPhyAddr_x1518
    GDC_CheckMmzPhyAddr_x1654:
    /*00001654*/ MOV         R1, R6 
    /*00001658*/ MOV         R0, R5 
    /*0000165c*/ BL          0x000000000000165C          @ hil_map_mmz_check_phys [R_ARM_CALL: +0x0] 
    /*00001660*/ CMP         R0, #0 
    /*00001664*/ BEQ         GDC_CheckMmzPhyAddr_x155c
    /*00001668*/ MOVW        R3, #507                    @ 0x1fb 
    /*0000166c*/ MOVW        R2, #0                      @ .LC109 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc54] 
    /*00001670*/ STR         R3, [SP] 
    /*00001674*/ MOVT        R2, #0                      @ .LC109 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc54] 
    /*00001678*/ B           GDC_CheckMmzPhyAddr_x1518
    GDC_CheckMmzPhyAddr_x167c:
    /*0000167c*/ MOV         R1, R6 
    /*00001680*/ MOV         R0, R5 
    /*00001684*/ BL          0x0000000000001684          @ hil_map_mmz_check_phys [R_ARM_CALL: +0x0] 
    /*00001688*/ CMP         R0, #0 
    /*0000168c*/ BEQ         GDC_CheckMmzPhyAddr_x1584
    /*00001690*/ MOV         R3, #516                    @ 0x204 
    /*00001694*/ MOVW        R2, #0                      @ .LC110 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc94] 
    /*00001698*/ STR         R3, [SP] 
    /*0000169c*/ MOVT        R2, #0                      @ .LC110 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc94] 
    /*000016a0*/ B           GDC_CheckMmzPhyAddr_x1518
    GDC_CheckMmzPhyAddr_x16a4:
    /*000016a4*/ LDR         R3, [R4, #4] 
    /*000016a8*/ LDR         R1, [R4, #48]               @ 0x30 
    /*000016ac*/ SUB         R3, R3, #1 
    /*000016b0*/ LDR         R2, [R4] 
    /*000016b4*/ LDR         R6, [R4, #128]              @ 0x80 
    /*000016b8*/ UMULL       R4, R5, R3, R1 
    /*000016bc*/ LSR         R3, R2, #1 
    /*000016c0*/ MOV         R0, R6 
    /*000016c4*/ LSRS        R5, R5, #1 
    /*000016c8*/ RRX         R4, R4 
    /*000016cc*/ ADDS        R4, R4, R3 
    /*000016d0*/ MOV         R1, R4 
    /*000016d4*/ BL          0x00000000000016D4          @ hil_is_phys_in_mmz [R_ARM_CALL: +0x0] 
    /*000016d8*/ CMP         R0, #0 
    /*000016dc*/ BEQ         GDC_CheckMmzPhyAddr_x14e8
    /*000016e0*/ MOV         R1, R4 
    /*000016e4*/ MOV         R0, R6 
    /*000016e8*/ BL          0x00000000000016E8          @ hil_map_mmz_check_phys [R_ARM_CALL: +0x0] 
    /*000016ec*/ CMP         R0, #0 
    /*000016f0*/ BEQ         GDC_CheckMmzPhyAddr_x14e8
    /*000016f4*/ MOVW        R3, #565                    @ 0x235 
    /*000016f8*/ B           GDC_CheckMmzPhyAddr_x1644
    GDC_CheckMmzPhyAddr_x16fc:
    /*000016fc*/ LDR         R8, [R4, #4] 
    /*00001700*/ MOV         R0, R6 
    /*00001704*/ LDR         R3, [R4, #56]               @ 0x38 
    /*00001708*/ SUB         R8, R8, #1 
    /*0000170c*/ UMULL       R8, R9, R8, R3 
    /*00001710*/ MOV         R1, R8 
    /*00001714*/ BL          0x0000000000001714          @ hil_is_phys_in_mmz [R_ARM_CALL: +0x0] 
    /*00001718*/ CMP         R0, #0 
    /*0000171c*/ BEQ         GDC_CheckMmzPhyAddr_x159c
    /*00001720*/ MOV         R1, R8 
    /*00001724*/ MOV         R0, R6 
    /*00001728*/ BL          0x0000000000001728          @ hil_map_mmz_check_phys [R_ARM_CALL: +0x0] 
    /*0000172c*/ CMP         R0, #0 
    /*00001730*/ BEQ         GDC_CheckMmzPhyAddr_x159c
    /*00001734*/ MOVW        R3, #529                    @ 0x211 
    /*00001738*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcd4] 
    /*0000173c*/ STR         R3, [SP] 
    /*00001740*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcd4] 
    /*00001744*/ B           GDC_CheckMmzPhyAddr_x1518
    /*00001748*/ STRDEQ      R0, [R0], -R4 
FUNC_END GDC_CheckMmzPhyAddr


FUNC_BEGIN GDC_VbAdd
    /*0000174c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00001750*/ SUBS        R4, R0, #0 
    /*00001754*/ SUB         SP, SP, #16 
    /*00001758*/ BEQ         GDC_VbAdd_x197c
    GDC_VbAdd_x175c:
    /*0000175c*/ LDR         R2, [R4, #752]              @ 0x2f0 
    /*00001760*/ ADD         R3, R4, #464                @ 0x1d0 
    /*00001764*/ LDRD        R6, [R4, #120]              @ 0x78 
    /*00001768*/ CMP         R2, #30 
    /*0000176c*/ LDRD        R8, [R3, #-8] 
    /*00001770*/ BEQ         GDC_VbAdd_x1894
    /*00001774*/ MOV         R0, #1 
    /*00001778*/ BL          0x0000000000001778          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000177c*/ MOV         R1, R7 
    /*00001780*/ LDR         R3, [R0, #36]               @ 0x24 
    /*00001784*/ MOV         R0, R6 
    /*00001788*/ BLX         R3 
    /*0000178c*/ CMN         R0, #1 
    /*00001790*/ BEQ         GDC_VbAdd_x1888
    GDC_VbAdd_x1794:
    /*00001794*/ MOV         R0, #1 
    /*00001798*/ BL          0x0000000000001798          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000179c*/ LDR         IP, [R4, #328]              @ 0x148 
    /*000017a0*/ MOV         R3, #18 
    /*000017a4*/ MOV         R2, R6 
    /*000017a8*/ STR         R3, [SP] 
    /*000017ac*/ MOV         R3, R7 
    /*000017b0*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*000017b4*/ MOV         R0, IP 
    /*000017b8*/ BLX         R1 
    /*000017bc*/ SUBS        R5, R0, #0 
    /*000017c0*/ BNE         GDC_VbAdd_x18f0
    /*000017c4*/ LDR         R3, [R4, #752]              @ 0x2f0 
    /*000017c8*/ CMP         R3, #30 
    /*000017cc*/ BNE         GDC_VbAdd_x18c0
    GDC_VbAdd_x17d0:
    /*000017d0*/ MOV         R0, #1 
    /*000017d4*/ BL          0x00000000000017D4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000017d8*/ MOV         R1, R9 
    /*000017dc*/ LDR         R3, [R0, #36]               @ 0x24 
    /*000017e0*/ MOV         R0, R8 
    /*000017e4*/ BLX         R3 
    /*000017e8*/ CMN         R0, #1 
    /*000017ec*/ BEQ         GDC_VbAdd_x1820
    GDC_VbAdd_x17f0:
    /*000017f0*/ MOV         R0, #1 
    /*000017f4*/ MOV         SL, #18 
    /*000017f8*/ BL          0x00000000000017F8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000017fc*/ LDR         IP, [R4, #664]              @ 0x298 
    /*00001800*/ MOV         R2, R8 
    /*00001804*/ STR         SL, [SP] 
    /*00001808*/ MOV         R3, R9 
    /*0000180c*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*00001810*/ MOV         R0, IP 
    /*00001814*/ BLX         R1 
    /*00001818*/ SUBS        R5, R0, #0 
    /*0000181c*/ BNE         GDC_VbAdd_x1924
    GDC_VbAdd_x1820:
    /*00001820*/ STRD        R6, [SP, #8] 
    /*00001824*/ MOVW        R3, #631                    @ 0x277 
    /*00001828*/ LDR         R0, [R4, #328]              @ 0x148 
    /*0000182c*/ MOV         R1, #37                     @ 0x25 
    /*00001830*/ STR         R3, [SP] 
    /*00001834*/ MOVW        R2, #0                      @ .LC118 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe4c] 
    /*00001838*/ LDR         R3, [PC, #348]              @ 0x000000000000199c 
    /*0000183c*/ MOVT        R2, #0                      @ .LC118 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe4c] 
    /*00001840*/ STR         R0, [SP, #4] 
    /*00001844*/ MOV         R0, #7 
    /*00001848*/ BL          0x0000000000001848          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000184c*/ STRD        R8, [SP, #8] 
    /*00001850*/ LDR         R1, [R4, #664]              @ 0x298 
    /*00001854*/ MOV         R3, #632                    @ 0x278 
    /*00001858*/ MOVW        R2, #0                      @ .LC119 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe8c] 
    /*0000185c*/ STR         R3, [SP] 
    /*00001860*/ MOVT        R2, #0                      @ .LC119 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe8c] 
    /*00001864*/ LDR         R3, [PC, #304]              @ 0x000000000000199c 
    /*00001868*/ STR         R1, [SP, #4] 
    /*0000186c*/ MOV         R0, #7 
    /*00001870*/ MOV         R1, #37                     @ 0x25 
    /*00001874*/ MOV         R5, #0 
    /*00001878*/ BL          0x0000000000001878          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_VbAdd_x187c:
    /*0000187c*/ MOV         R0, R5 
    /*00001880*/ ADD         SP, SP, #16 
    /*00001884*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    GDC_VbAdd_x1888:
    /*00001888*/ LDR         R3, [R4, #752]              @ 0x2f0 
    /*0000188c*/ CMP         R3, #30 
    /*00001890*/ BNE         GDC_VbAdd_x18c0
    GDC_VbAdd_x1894:
    /*00001894*/ MOV         R0, #1 
    /*00001898*/ BL          0x0000000000001898          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000189c*/ MOV         R1, R7 
    /*000018a0*/ LDR         R3, [R0, #36]               @ 0x24 
    /*000018a4*/ MOV         R0, R6 
    /*000018a8*/ BLX         R3 
    /*000018ac*/ CMN         R0, #1 
    /*000018b0*/ BNE         GDC_VbAdd_x1794
    /*000018b4*/ LDR         R3, [R4, #752]              @ 0x2f0 
    /*000018b8*/ CMP         R3, #30 
    /*000018bc*/ BEQ         GDC_VbAdd_x17d0
    GDC_VbAdd_x18c0:
    /*000018c0*/ MOV         R0, #1 
    /*000018c4*/ BL          0x00000000000018C4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000018c8*/ MOV         R1, R9 
    /*000018cc*/ LDR         R3, [R0, #36]               @ 0x24 
    /*000018d0*/ MOV         R0, R8 
    /*000018d4*/ BLX         R3 
    /*000018d8*/ CMN         R0, #1 
    /*000018dc*/ BNE         GDC_VbAdd_x17f0
    /*000018e0*/ LDR         R3, [R4, #752]              @ 0x2f0 
    /*000018e4*/ CMP         R3, #30 
    /*000018e8*/ BNE         GDC_VbAdd_x1820
    /*000018ec*/ B           GDC_VbAdd_x17d0
    GDC_VbAdd_x18f0:
    /*000018f0*/ LDR         R0, [R4, #760]              @ 0x2f8 
    /*000018f4*/ MOVW        LR, #611                    @ 0x263 
    /*000018f8*/ MOVW        R2, #0                      @ .LC116 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdd0] 
    /*000018fc*/ LDR         R3, [PC, #152]              @ 0x000000000000199c 
    /*00001900*/ MOVT        R2, #0                      @ .LC116 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdd0] 
    /*00001904*/ MOV         R1, #37                     @ 0x25 
    /*00001908*/ STR         R0, [SP, #8] 
    /*0000190c*/ MOV         R0, #3 
    /*00001910*/ LDR         IP, [R4, #752]              @ 0x2f0 
    /*00001914*/ STR         LR, [SP] 
    /*00001918*/ STR         IP, [SP, #4] 
    /*0000191c*/ BL          0x000000000000191C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001920*/ B           GDC_VbAdd_x187c
    GDC_VbAdd_x1924:
    /*00001924*/ LDR         IP, [R4, #760]              @ 0x2f8 
    /*00001928*/ MOV         R1, #37                     @ 0x25 
    /*0000192c*/ LDR         R3, [PC, #104]              @ 0x000000000000199c 
    /*00001930*/ MOV         R0, #624                    @ 0x270 
    /*00001934*/ MOVW        R2, #0                      @ .LC117 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe0c] 
    /*00001938*/ MOVT        R2, #0                      @ .LC117 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe0c] 
    /*0000193c*/ STR         IP, [SP, #8] 
    /*00001940*/ LDR         IP, [R4, #752]              @ 0x2f0 
    /*00001944*/ STR         R0, [SP] 
    /*00001948*/ MOV         R0, #3 
    /*0000194c*/ STR         IP, [SP, #4] 
    /*00001950*/ BL          0x0000000000001950          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001954*/ MOV         R0, #1 
    /*00001958*/ BL          0x0000000000001958          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000195c*/ LDR         IP, [R4, #328]              @ 0x148 
    /*00001960*/ MOV         R2, R6 
    /*00001964*/ STR         SL, [SP] 
    /*00001968*/ MOV         R3, R7 
    /*0000196c*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00001970*/ MOV         R0, IP 
    /*00001974*/ BLX         R1 
    /*00001978*/ B           GDC_VbAdd_x187c
    GDC_VbAdd_x197c:
    /*0000197c*/ MOVW        R3, #0                      @ .LC115 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdbc] 
    /*00001980*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00001984*/ MOVT        R3, #0                      @ .LC115 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdbc] 
    /*00001988*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*0000198c*/ MOVW        R2, #598                    @ 0x256 
    /*00001990*/ LDR         R1, [PC, #4]                @ 0x000000000000199c 
    /*00001994*/ BL          0x0000000000001994          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00001998*/ B           GDC_VbAdd_x175c
    /*0000199c*/ ANDEQ       R0, R0, R8, LSL #4 
FUNC_END GDC_VbAdd


FUNC_BEGIN GDC_AddBypassTask
    /*000019a0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000019a4*/ SUBS        R7, R0, #0 
    /*000019a8*/ SUB         SP, SP, #28 
    /*000019ac*/ BLT         GDC_AddBypassTask_x1bb0
    /*000019b0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*000019b4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*000019b8*/ LDR         R3, [R3] 
    /*000019bc*/ CMP         R3, R7 
    /*000019c0*/ BLS         GDC_AddBypassTask_x1bb0
    /*000019c4*/ CMP         R1, #0 
    /*000019c8*/ MOV         R5, R1 
    /*000019cc*/ BEQ         GDC_AddBypassTask_x1b70
    GDC_AddBypassTask_x19d0:
    /*000019d0*/ MOVW        R4, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000019d4*/ MOVT        R4, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000019d8*/ LDR         R3, [R4] 
    /*000019dc*/ CMP         R3, #1 
    /*000019e0*/ BEQ         GDC_AddBypassTask_x19fc
    /*000019e4*/ BL          0x0000000000000CEC 
    /*000019e8*/ SUBS        R8, R0, #0 
    /*000019ec*/ BEQ         GDC_AddBypassTask_x19fc
    GDC_AddBypassTask_x19f0:
    /*000019f0*/ MOV         R0, R8 
    /*000019f4*/ ADD         SP, SP, #28 
    /*000019f8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    GDC_AddBypassTask_x19fc:
    /*000019fc*/ LDR         R3, [R4, #4] 
    /*00001a00*/ LDR         R3, [R3, #4] 
    /*00001a04*/ LDR         R6, [R3, R7, LSL #2] 
    /*00001a08*/ CMP         R6, #0 
    /*00001a0c*/ BEQ         GDC_AddBypassTask_x1c3c
    GDC_AddBypassTask_x1a10:
    /*00001a10*/ LDR         R1, [R5, #752]              @ 0x2f0 
    /*00001a14*/ SUB         R2, R1, #7 
    /*00001a18*/ CMP         R2, #23 
    /*00001a1c*/ BHI         GDC_AddBypassTask_x1b80
    /*00001a20*/ MOVW        R8, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00001a24*/ MOVT        R8, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00001a28*/ ADD         R2, R8, R2, LSL #2 
    /*00001a2c*/ LDR         R2, [R2, #248]              @ 0xf8 
    /*00001a30*/ CMP         R2, #3 
    /*00001a34*/ BHI         GDC_AddBypassTask_x1b80
    /*00001a38*/ LDR         R3, [R6, #28] 
    /*00001a3c*/ CMP         R1, R3 
    /*00001a40*/ BNE         GDC_AddBypassTask_x1c5c
    /*00001a44*/ ADD         R1, R4, R2, LSL #2 
    /*00001a48*/ LDR         R0, [R5, #756]              @ 0x2f4 
    /*00001a4c*/ LDR         R3, [R1, #12] 
    /*00001a50*/ CMP         R3, R0 
    /*00001a54*/ BLS         GDC_AddBypassTask_x1c7c
    /*00001a58*/ LDR         R3, [R6, #32] 
    /*00001a5c*/ CMP         R0, R3 
    /*00001a60*/ BNE         GDC_AddBypassTask_x1bc8
    /*00001a64*/ ADD         R2, R4, R2, LSL #2 
    /*00001a68*/ LDR         R1, [R5, #760]              @ 0x2f8 
    /*00001a6c*/ LDR         R3, [R2, #28] 
    /*00001a70*/ CMP         R3, R1 
    /*00001a74*/ BLS         GDC_AddBypassTask_x1c98
    /*00001a78*/ LDR         R3, [R6, #36]               @ 0x24 
    /*00001a7c*/ CMP         R1, R3 
    /*00001a80*/ STRNE       R1, [SP, #4] 
    /*00001a84*/ STRNE       R3, [SP, #8] 
    /*00001a88*/ ADDNE       R3, R8, #532                @ 0x214 
    /*00001a8c*/ MOVWNE      R1, #1546                   @ 0x60a 
    /*00001a90*/ BNE         GDC_AddBypassTask_x1bd8
    /*00001a94*/ LDR         R0, [PC, #680]              @ 0x0000000000001d44 
    /*00001a98*/ ADD         R1, SP, #20 
    /*00001a9c*/ BL          0x0000000000001A9C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00001aa0*/ LDR         R2, [R6, #92]               @ 0x5c 
    /*00001aa4*/ CMP         R2, #1 
    /*00001aa8*/ BEQ         GDC_AddBypassTask_x1d20
    /*00001aac*/ LDR         R3, [R6, #64]               @ 0x40 
    /*00001ab0*/ CMP         R3, #0 
    /*00001ab4*/ BNE         GDC_AddBypassTask_x1cb4
    /*00001ab8*/ LDR         R3, [R6, #16] 
    /*00001abc*/ CMP         R3, #1 
    /*00001ac0*/ BNE         GDC_AddBypassTask_x1bfc
    /*00001ac4*/ LDR         R0, [R4, #4] 
    /*00001ac8*/ ADD         R0, R0, #604                @ 0x25c 
    /*00001acc*/ BL          0x0000000000001ACC          @ GDC_GetTaskFromFreeList [R_ARM_CALL: .text+0x1008c] 
    /*00001ad0*/ SUBS        R9, R0, #0 
    /*00001ad4*/ BEQ         GDC_AddBypassTask_x1cdc
    /*00001ad8*/ ADD         R3, R9, #8 
    /*00001adc*/ MOV         R1, R5 
    /*00001ae0*/ MOV         R2, #776                    @ 0x308 
    /*00001ae4*/ MOV         R5, R3 
    /*00001ae8*/ MOV         R0, R3 
    /*00001aec*/ BL          0x0000000000001AEC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00001af0*/ MOV         R3, #6 
    /*00001af4*/ MOV         R0, R5 
    /*00001af8*/ STR         R3, [R9, #788]              @ 0x314 
    /*00001afc*/ BL          0x0000000000001AFC          @ GDC_VbAdd [R_ARM_CALL: .text+0x174c] 
    /*00001b00*/ SUBS        R8, R0, #0 
    /*00001b04*/ BNE         GDC_AddBypassTask_x1b2c
    /*00001b08*/ MOV         R1, R6 
    /*00001b0c*/ MOV         R0, R9 
    /*00001b10*/ BL          0x0000000000001B10          @ GDC_PutTaskToJob [R_ARM_CALL: .text+0x10220] 
    /*00001b14*/ ADD         R1, SP, #20 
    /*00001b18*/ LDR         R0, [PC, #548]              @ 0x0000000000001d44 
    /*00001b1c*/ BL          0x0000000000001B1C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001b20*/ MOV         R0, R8 
    /*00001b24*/ ADD         SP, SP, #28 
    /*00001b28*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    GDC_AddBypassTask_x1b2c:
    /*00001b2c*/ LDR         R0, [R4, #4] 
    /*00001b30*/ MOV         R1, R9 
    /*00001b34*/ ADD         R0, R0, #604                @ 0x25c 
    /*00001b38*/ BL          0x0000000000001B38          @ GDC_PutTaskToFreeList [R_ARM_CALL: .text+0x10138] 
    /*00001b3c*/ ADD         R1, SP, #20 
    /*00001b40*/ LDR         R0, [PC, #508]              @ 0x0000000000001d44 
    /*00001b44*/ BL          0x0000000000001B44          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001b48*/ MOVW        R3, #1595                   @ 0x63b 
    /*00001b4c*/ STR         R8, [SP, #4] 
    /*00001b50*/ MOVW        R2, #0                      @ .LC131 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1180] 
    /*00001b54*/ STR         R3, [SP] 
    /*00001b58*/ MOVT        R2, #0                      @ .LC131 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1180] 
    /*00001b5c*/ LDR         R3, [PC, #484]              @ 0x0000000000001d48 
    /*00001b60*/ MOV         R1, #37                     @ 0x25 
    /*00001b64*/ MOV         R0, #3 
    /*00001b68*/ BL          0x0000000000001B68          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001b6c*/ B           GDC_AddBypassTask_x19f0
    GDC_AddBypassTask_x1b70:
    /*00001b70*/ BL          0x0000000000000CB0 
    /*00001b74*/ SUBS        R8, R0, #0 
    /*00001b78*/ BNE         GDC_AddBypassTask_x19f0
    /*00001b7c*/ B           GDC_AddBypassTask_x19d0
    GDC_AddBypassTask_x1b80:
    /*00001b80*/ MOVW        R2, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf1c] 
    /*00001b84*/ MOVT        R2, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf1c] 
    /*00001b88*/ MOVW        R3, #1544                   @ 0x608 
    /*00001b8c*/ STR         R1, [SP, #4] 
    /*00001b90*/ STR         R3, [SP] 
    GDC_AddBypassTask_x1b94:
    /*00001b94*/ LDR         R3, [PC, #428]              @ 0x0000000000001d48 
    GDC_AddBypassTask_x1b98:
    /*00001b98*/ MOV         R1, #37                     @ 0x25 
    /*00001b9c*/ MOV         R0, #3 
    /*00001ba0*/ MOVW        R8, #32771                  @ 0x8003 
    /*00001ba4*/ BL          0x0000000000001BA4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001ba8*/ MOVT        R8, #40997                  @ 0xa025 
    /*00001bac*/ B           GDC_AddBypassTask_x19f0
    GDC_AddBypassTask_x1bb0:
    /*00001bb0*/ MOVW        R3, #1530                   @ 0x5fa 
    /*00001bb4*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xecc] 
    /*00001bb8*/ STR         R7, [SP, #4] 
    /*00001bbc*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0xecc] 
    /*00001bc0*/ STR         R3, [SP] 
    /*00001bc4*/ B           GDC_AddBypassTask_x1b94
    GDC_AddBypassTask_x1bc8:
    /*00001bc8*/ STR         R3, [SP, #8] 
    /*00001bcc*/ ADD         R3, R8, #532                @ 0x214 
    /*00001bd0*/ MOVW        R1, #1545                   @ 0x609 
    /*00001bd4*/ STR         R0, [SP, #4] 
    GDC_AddBypassTask_x1bd8:
    /*00001bd8*/ MOVW        R2, #0                      @ .LC125 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xff8] 
    /*00001bdc*/ MOVT        R2, #0                      @ .LC125 [R_ARM_MOVT_ABS: .rodata.str1.4+0xff8] 
    /*00001be0*/ STR         R1, [SP] 
    GDC_AddBypassTask_x1be4:
    /*00001be4*/ MOV         R1, #37                     @ 0x25 
    /*00001be8*/ MOV         R0, #3 
    /*00001bec*/ MOVW        R8, #32771                  @ 0x8003 
    /*00001bf0*/ BL          0x0000000000001BF0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001bf4*/ MOVT        R8, #40997                  @ 0xa025 
    /*00001bf8*/ B           GDC_AddBypassTask_x19f0
    GDC_AddBypassTask_x1bfc:
    /*00001bfc*/ MOVW        R2, #1569                   @ 0x621 
    /*00001c00*/ STR         R3, [SP, #8] 
    /*00001c04*/ MOV         R3, #0 
    /*00001c08*/ STM         SP, {R2, R3} 
    /*00001c0c*/ LDR         R3, [PC, #308]              @ 0x0000000000001d48 
    /*00001c10*/ MOVW        R2, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1100] 
    /*00001c14*/ MOVT        R2, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1100] 
    GDC_AddBypassTask_x1c18:
    /*00001c18*/ MOV         R1, #37                     @ 0x25 
    /*00001c1c*/ MOV         R0, #3 
    /*00001c20*/ BL          0x0000000000001C20          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_AddBypassTask_x1c24:
    /*00001c24*/ ADD         R1, SP, #20 
    /*00001c28*/ LDR         R0, [PC, #276]              @ 0x0000000000001d44 
    /*00001c2c*/ MOVW        R8, #32777                  @ 0x8009 
    /*00001c30*/ BL          0x0000000000001C30          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001c34*/ MOVT        R8, #40997                  @ 0xa025 
    /*00001c38*/ B           GDC_AddBypassTask_x19f0
    GDC_AddBypassTask_x1c3c:
    /*00001c3c*/ MOVW        R3, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf0c] 
    /*00001c40*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00001c44*/ MOVT        R3, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf0c] 
    /*00001c48*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00001c4c*/ MOV         R2, #1536                   @ 0x600 
    /*00001c50*/ LDR         R1, [PC, #240]              @ 0x0000000000001d48 
    /*00001c54*/ BL          0x0000000000001C54          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00001c58*/ B           GDC_AddBypassTask_x1a10
    GDC_AddBypassTask_x1c5c:
    /*00001c5c*/ STR         R3, [SP, #8] 
    /*00001c60*/ MOVW        R2, #0                      @ .LC123 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf58] 
    /*00001c64*/ STR         R1, [SP, #4] 
    /*00001c68*/ ADD         R3, R8, #532                @ 0x214 
    /*00001c6c*/ MOVW        R1, #1544                   @ 0x608 
    /*00001c70*/ MOVT        R2, #0                      @ .LC123 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf58] 
    /*00001c74*/ STR         R1, [SP] 
    /*00001c78*/ B           GDC_AddBypassTask_x1be4
    GDC_AddBypassTask_x1c7c:
    /*00001c7c*/ MOVW        R1, #1545                   @ 0x609 
    /*00001c80*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfb4] 
    /*00001c84*/ STR         R0, [SP, #4] 
    /*00001c88*/ ADD         R3, R8, #532                @ 0x214 
    /*00001c8c*/ STR         R1, [SP] 
    /*00001c90*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfb4] 
    /*00001c94*/ B           GDC_AddBypassTask_x1b98
    GDC_AddBypassTask_x1c98:
    /*00001c98*/ STR         R1, [SP, #4] 
    /*00001c9c*/ MOVW        R2, #0                      @ .LC126 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1050] 
    /*00001ca0*/ MOVW        R1, #1546                   @ 0x60a 
    /*00001ca4*/ ADD         R3, R8, #532                @ 0x214 
    /*00001ca8*/ STR         R1, [SP] 
    /*00001cac*/ MOVT        R2, #0                      @ .LC126 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1050] 
    /*00001cb0*/ B           GDC_AddBypassTask_x1b98
    GDC_AddBypassTask_x1cb4:
    /*00001cb4*/ STR         R3, [SP, #4] 
    /*00001cb8*/ MOVW        R1, #1562                   @ 0x61a 
    /*00001cbc*/ ADD         R3, R8, #532                @ 0x214 
    /*00001cc0*/ STR         R1, [SP] 
    /*00001cc4*/ MOVW        R2, #0                      @ .LC128 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10d0] 
    /*00001cc8*/ MOV         R1, #37                     @ 0x25 
    /*00001ccc*/ MOVT        R2, #0                      @ .LC128 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10d0] 
    /*00001cd0*/ MOV         R0, #3 
    /*00001cd4*/ BL          0x0000000000001CD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001cd8*/ B           GDC_AddBypassTask_x1c24
    GDC_AddBypassTask_x1cdc:
    /*00001cdc*/ LDR         R3, [R6, #28] 
    /*00001ce0*/ MOVW        R1, #1579                   @ 0x62b 
    /*00001ce4*/ STR         R7, [SP, #4] 
    /*00001ce8*/ MOVW        R2, #0                      @ .LC130 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x113c] 
    /*00001cec*/ STR         R1, [SP] 
    /*00001cf0*/ MOVT        R2, #0                      @ .LC130 [R_ARM_MOVT_ABS: .rodata.str1.4+0x113c] 
    /*00001cf4*/ STR         R3, [SP, #8] 
    /*00001cf8*/ MOV         R1, #37                     @ 0x25 
    /*00001cfc*/ LDR         R3, [PC, #68]               @ 0x0000000000001d48 
    /*00001d00*/ MOV         R0, #3 
    /*00001d04*/ BL          0x0000000000001D04          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001d08*/ ADD         R1, SP, #20 
    /*00001d0c*/ LDR         R0, [PC, #48]               @ 0x0000000000001d44 
    /*00001d10*/ MOVW        R8, #32782                  @ 0x800e 
    /*00001d14*/ BL          0x0000000000001D14          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001d18*/ MOVT        R8, #40997                  @ 0xa025 
    /*00001d1c*/ B           GDC_AddBypassTask_x19f0
    GDC_AddBypassTask_x1d20:
    /*00001d20*/ LDR         R1, [R6, #64]               @ 0x40 
    /*00001d24*/ MOVW        R0, #1554                   @ 0x612 
    /*00001d28*/ STR         R2, [SP, #4] 
    /*00001d2c*/ ADD         R3, R8, #532                @ 0x214 
    /*00001d30*/ MOVW        R2, #0                      @ .LC127 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1094] 
    /*00001d34*/ STR         R0, [SP] 
    /*00001d38*/ STR         R1, [SP, #8] 
    /*00001d3c*/ MOVT        R2, #0                      @ .LC127 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1094] 
    /*00001d40*/ B           GDC_AddBypassTask_x1c18
    /*00001d44*/ ANDEQ       R0, R0, R0, ASR #32 
    /*00001d48*/ ANDEQ       R0, R0, R4, LSL R2 
FUNC_END GDC_AddBypassTask


FUNC_BEGIN GDC_VbSub
    /*00001d4c*/ PUSH        {R4, R6, R7, R8, R9, LR} 
    /*00001d50*/ SUBS        R4, R0, #0 
    /*00001d54*/ SUB         SP, SP, #16 
    /*00001d58*/ BEQ         GDC_VbSub_x1f44
    GDC_VbSub_x1d5c:
    /*00001d5c*/ LDR         R2, [R4, #752]              @ 0x2f0 
    /*00001d60*/ ADD         R3, R4, #464                @ 0x1d0 
    /*00001d64*/ LDRD        R6, [R4, #120]              @ 0x78 
    /*00001d68*/ CMP         R2, #30 
    /*00001d6c*/ LDRD        R8, [R3, #-8] 
    /*00001d70*/ BEQ         GDC_VbSub_x1eec
    /*00001d74*/ MOV         R0, #1 
    /*00001d78*/ BL          0x0000000000001D78          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00001d7c*/ MOV         R1, R7 
    /*00001d80*/ LDR         R3, [R0, #36]               @ 0x24 
    /*00001d84*/ MOV         R0, R6 
    /*00001d88*/ BLX         R3 
    /*00001d8c*/ CMN         R0, #1 
    /*00001d90*/ BEQ         GDC_VbSub_x1eb0
    GDC_VbSub_x1d94:
    /*00001d94*/ MOV         R0, #1 
    /*00001d98*/ BL          0x0000000000001D98          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00001d9c*/ LDR         IP, [R4, #328]              @ 0x148 
    /*00001da0*/ MOV         R3, #18 
    /*00001da4*/ MOV         R2, R6 
    /*00001da8*/ STR         R3, [SP] 
    /*00001dac*/ MOV         R3, R7 
    /*00001db0*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00001db4*/ MOV         R0, IP 
    /*00001db8*/ BLX         R1 
    /*00001dbc*/ CMP         R0, #0 
    /*00001dc0*/ BNE         GDC_VbSub_x1f10
    GDC_VbSub_x1dc4:
    /*00001dc4*/ LDR         R3, [R4, #752]              @ 0x2f0 
    /*00001dc8*/ CMP         R3, #30 
    /*00001dcc*/ BNE         GDC_VbSub_x1ebc
    GDC_VbSub_x1dd0:
    /*00001dd0*/ MOV         R0, #1 
    /*00001dd4*/ BL          0x0000000000001DD4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00001dd8*/ MOV         R1, R9 
    /*00001ddc*/ LDR         R3, [R0, #36]               @ 0x24 
    /*00001de0*/ MOV         R0, R8 
    /*00001de4*/ BLX         R3 
    /*00001de8*/ CMN         R0, #1 
    /*00001dec*/ BEQ         GDC_VbSub_x1e50
    GDC_VbSub_x1df0:
    /*00001df0*/ MOV         R0, #1 
    /*00001df4*/ BL          0x0000000000001DF4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00001df8*/ LDR         IP, [R4, #664]              @ 0x298 
    /*00001dfc*/ MOV         R3, #18 
    /*00001e00*/ MOV         R2, R8 
    /*00001e04*/ STR         R3, [SP] 
    /*00001e08*/ MOV         R3, R9 
    /*00001e0c*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00001e10*/ MOV         R0, IP 
    /*00001e14*/ BLX         R1 
    /*00001e18*/ CMP         R0, #0 
    /*00001e1c*/ BEQ         GDC_VbSub_x1e50
    /*00001e20*/ LDR         IP, [R4, #760]              @ 0x2f8 
    /*00001e24*/ MOVW        R0, #670                    @ 0x29e 
    /*00001e28*/ MOVW        R2, #0                      @ .LC133 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11ec] 
    /*00001e2c*/ LDR         R3, [PC, #304]              @ 0x0000000000001f64 
    /*00001e30*/ MOVT        R2, #0                      @ .LC133 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11ec] 
    /*00001e34*/ MOV         R1, #37                     @ 0x25 
    /*00001e38*/ STR         IP, [SP, #8] 
    /*00001e3c*/ LDR         IP, [R4, #752]              @ 0x2f0 
    /*00001e40*/ STR         R0, [SP] 
    /*00001e44*/ MOV         R0, #3 
    /*00001e48*/ STR         IP, [SP, #4] 
    /*00001e4c*/ BL          0x0000000000001E4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_VbSub_x1e50:
    /*00001e50*/ STRD        R6, [SP, #8] 
    /*00001e54*/ MOVW        R3, #675                    @ 0x2a3 
    /*00001e58*/ LDR         R0, [R4, #328]              @ 0x148 
    /*00001e5c*/ MOV         R1, #37                     @ 0x25 
    /*00001e60*/ STR         R3, [SP] 
    /*00001e64*/ MOVW        R2, #0                      @ .LC134 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1228] 
    /*00001e68*/ LDR         R3, [PC, #244]              @ 0x0000000000001f64 
    /*00001e6c*/ MOVT        R2, #0                      @ .LC134 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1228] 
    /*00001e70*/ STR         R0, [SP, #4] 
    /*00001e74*/ MOV         R0, #7 
    /*00001e78*/ BL          0x0000000000001E78          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001e7c*/ STRD        R8, [SP, #8] 
    /*00001e80*/ LDR         R1, [R4, #664]              @ 0x298 
    /*00001e84*/ MOV         R3, #676                    @ 0x2a4 
    /*00001e88*/ MOVW        R2, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1268] 
    /*00001e8c*/ STR         R3, [SP] 
    /*00001e90*/ MOVT        R2, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1268] 
    /*00001e94*/ LDR         R3, [PC, #200]              @ 0x0000000000001f64 
    /*00001e98*/ STR         R1, [SP, #4] 
    /*00001e9c*/ MOV         R0, #7 
    /*00001ea0*/ MOV         R1, #37                     @ 0x25 
    /*00001ea4*/ BL          0x0000000000001EA4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001ea8*/ ADD         SP, SP, #16 
    /*00001eac*/ POP         {R4, R6, R7, R8, R9, PC} 
    GDC_VbSub_x1eb0:
    /*00001eb0*/ LDR         R3, [R4, #752]              @ 0x2f0 
    /*00001eb4*/ CMP         R3, #30 
    /*00001eb8*/ BEQ         GDC_VbSub_x1eec
    GDC_VbSub_x1ebc:
    /*00001ebc*/ MOV         R0, #1 
    /*00001ec0*/ BL          0x0000000000001EC0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00001ec4*/ MOV         R1, R9 
    /*00001ec8*/ LDR         R3, [R0, #36]               @ 0x24 
    /*00001ecc*/ MOV         R0, R8 
    /*00001ed0*/ BLX         R3 
    /*00001ed4*/ CMN         R0, #1 
    /*00001ed8*/ BNE         GDC_VbSub_x1df0
    /*00001edc*/ LDR         R3, [R4, #752]              @ 0x2f0 
    /*00001ee0*/ CMP         R3, #30 
    /*00001ee4*/ BNE         GDC_VbSub_x1e50
    /*00001ee8*/ B           GDC_VbSub_x1dd0
    GDC_VbSub_x1eec:
    /*00001eec*/ MOV         R0, #1 
    /*00001ef0*/ BL          0x0000000000001EF0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00001ef4*/ MOV         R1, R7 
    /*00001ef8*/ LDR         R3, [R0, #36]               @ 0x24 
    /*00001efc*/ MOV         R0, R6 
    /*00001f00*/ BLX         R3 
    /*00001f04*/ CMN         R0, #1 
    /*00001f08*/ BNE         GDC_VbSub_x1d94
    /*00001f0c*/ B           GDC_VbSub_x1dc4
    GDC_VbSub_x1f10:
    /*00001f10*/ LDR         IP, [R4, #760]              @ 0x2f8 
    /*00001f14*/ MOVW        R0, #658                    @ 0x292 
    /*00001f18*/ MOVW        R2, #0                      @ .LC132 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11b0] 
    /*00001f1c*/ LDR         R3, [PC, #64]               @ 0x0000000000001f64 
    /*00001f20*/ MOVT        R2, #0                      @ .LC132 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11b0] 
    /*00001f24*/ MOV         R1, #37                     @ 0x25 
    /*00001f28*/ STR         IP, [SP, #8] 
    /*00001f2c*/ LDR         IP, [R4, #752]              @ 0x2f0 
    /*00001f30*/ STR         R0, [SP] 
    /*00001f34*/ MOV         R0, #3 
    /*00001f38*/ STR         IP, [SP, #4] 
    /*00001f3c*/ BL          0x0000000000001F3C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001f40*/ B           GDC_VbSub_x1dc4
    GDC_VbSub_x1f44:
    /*00001f44*/ MOVW        R3, #0                      @ .LC115 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdbc] 
    /*00001f48*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00001f4c*/ MOVT        R3, #0                      @ .LC115 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdbc] 
    /*00001f50*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00001f54*/ MOVW        R2, #645                    @ 0x285 
    /*00001f58*/ LDR         R1, [PC, #4]                @ 0x0000000000001f64 
    /*00001f5c*/ BL          0x0000000000001F5C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00001f60*/ B           GDC_VbSub_x1d5c
    /*00001f64*/ ANDEQ       R0, R0, R8, LSR #4 
FUNC_END GDC_VbSub


FUNC_BEGIN GDC_ProcTaskInJob
    /*00001f68*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00001f6c*/ MOV         R5, R0 
    /*00001f70*/ LDR         R6, [PC, #216]              @ 0x0000000000002050 
    /*00001f74*/ SUB         SP, SP, #12 
    /*00001f78*/ MOV         R9, R1 
    /*00001f7c*/ SUB         R8, R6, #64                 @ 0x40 
    /*00001f80*/ MOV         R7, R6 
    /*00001f84*/ B           GDC_ProcTaskInJob_x2010
    GDC_ProcTaskInJob_x1f88:
    /*00001f88*/ BL          0x0000000000001F88          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00001f8c*/ MOV         R0, R5 
    /*00001f90*/ BL          0x0000000000001F90          @ GDC_GetTaskFromJob [R_ARM_CALL: .text+0x10164] 
    /*00001f94*/ ADD         R1, SP, #4 
    /*00001f98*/ MOV         R4, R0 
    /*00001f9c*/ MOV         R0, R6 
    /*00001fa0*/ BL          0x0000000000001FA0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001fa4*/ CMP         R4, #0 
    /*00001fa8*/ BEQ         GDC_ProcTaskInJob_x2030
    GDC_ProcTaskInJob_x1fac:
    /*00001fac*/ ADD         R0, R5, #28 
    /*00001fb0*/ MOV         R3, R4 
    /*00001fb4*/ STR         R9, [R4, #772]              @ 0x304 
    /*00001fb8*/ LDM         R0, {R0, R1, R2} 
    /*00001fbc*/ BL          0x000000000000003C 
    /*00001fc0*/ ADD         R0, R4, #8 
    /*00001fc4*/ BL          0x0000000000001FC4          @ GDC_VbSub [R_ARM_CALL: .text+0x1d4c] 
    /*00001fc8*/ LDR         R3, [R4, #784]              @ 0x310 
    /*00001fcc*/ MOV         R0, R4 
    /*00001fd0*/ CMN         R3, #1 
    /*00001fd4*/ BEQ         GDC_ProcTaskInJob_x1fdc
    /*00001fd8*/ BL          0x0000000000000D28 
    GDC_ProcTaskInJob_x1fdc:
    /*00001fdc*/ ADD         R1, SP, #4 
    /*00001fe0*/ MOV         R0, R7 
    /*00001fe4*/ BL          0x0000000000001FE4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00001fe8*/ LDR         R3, [R8, #4] 
    /*00001fec*/ MOV         R1, R4 
    /*00001ff0*/ ADD         R0, R3, #604                @ 0x25c 
    /*00001ff4*/ LDR         R2, [R3, #1304]             @ 0x518 
    /*00001ff8*/ ADD         R2, R2, #1 
    /*00001ffc*/ STR         R2, [R3, #1304]             @ 0x518 
    /*00002000*/ BL          0x0000000000002000          @ GDC_PutTaskToFreeList [R_ARM_CALL: .text+0x10138] 
    /*00002004*/ ADD         R1, SP, #4 
    /*00002008*/ MOV         R0, R7 
    /*0000200c*/ BL          0x000000000000200C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    GDC_ProcTaskInJob_x2010:
    /*00002010*/ MOV         R0, R5 
    /*00002014*/ BL          0x0000000000002014          @ GDC_QueryTaskNumInJob [R_ARM_CALL: .text+0x1015c] 
    /*00002018*/ ADD         R1, SP, #4 
    /*0000201c*/ CMP         R0, #0 
    /*00002020*/ MOV         R0, R6 
    /*00002024*/ BGT         GDC_ProcTaskInJob_x1f88
    /*00002028*/ ADD         SP, SP, #12 
    /*0000202c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    GDC_ProcTaskInJob_x2030:
    /*00002030*/ MOVW        R3, #0                      @ .LC136 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12a8] 
    /*00002034*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00002038*/ MOVT        R3, #0                      @ .LC136 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12a8] 
    /*0000203c*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00002040*/ MOVW        R2, #911                    @ 0x38f 
    /*00002044*/ LDR         R1, [PC, #8]                @ 0x0000000000002054 
    /*00002048*/ BL          0x0000000000002048          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000204c*/ B           GDC_ProcTaskInJob_x1fac
    /*00002050*/ ANDEQ       R0, R0, R0, ASR #32 
    /*00002054*/ ANDEQ       R0, R0, R4, LSR R2 
FUNC_END GDC_ProcTaskInJob


FUNC_BEGIN GDC_EndJob
    /*00002058*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000205c*/ MOVW        R5, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00002060*/ SUBS        R6, R0, #0 
    /*00002064*/ MOVT        R5, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00002068*/ SUB         SP, SP, #24 
    /*0000206c*/ LDR         R7, [R5, #4] 
    /*00002070*/ BLT         GDC_EndJob_x2280
    /*00002074*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00002078*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000207c*/ LDR         R3, [R3] 
    /*00002080*/ CMP         R3, R6 
    /*00002084*/ BLS         GDC_EndJob_x2280
    /*00002088*/ LDR         R3, [R5] 
    /*0000208c*/ CMP         R3, #1 
    /*00002090*/ BEQ         GDC_EndJob_x20b0
    /*00002094*/ BL          0x0000000000000CEC 
    /*00002098*/ SUBS        R8, R0, #0 
    /*0000209c*/ LDREQ       R3, [R5, #4] 
    /*000020a0*/ BEQ         GDC_EndJob_x20b4
    GDC_EndJob_x20a4:
    /*000020a4*/ MOV         R0, R8 
    /*000020a8*/ ADD         SP, SP, #24 
    /*000020ac*/ POP         {R4, R5, R6, R7, R8, PC} 
    GDC_EndJob_x20b0:
    /*000020b0*/ MOV         R3, R7 
    GDC_EndJob_x20b4:
    /*000020b4*/ LDR         R0, [R3, #4] 
    /*000020b8*/ MOVW        IP, #1755                   @ 0x6db 
    /*000020bc*/ MOVW        R2, #0                      @ .LC137 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12bc] 
    /*000020c0*/ LDR         R3, [PC, #856]              @ 0x0000000000002420 
    /*000020c4*/ MOVT        R2, #0                      @ .LC137 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12bc] 
    /*000020c8*/ MOV         R1, #37                     @ 0x25 
    /*000020cc*/ LDR         R4, [R0, R6, LSL #2] 
    /*000020d0*/ MOV         R0, #6 
    /*000020d4*/ STR         R6, [SP, #4] 
    /*000020d8*/ STR         IP, [SP] 
    /*000020dc*/ STR         R4, [SP, #8] 
    /*000020e0*/ BL          0x00000000000020E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000020e4*/ CMP         R4, #0 
    /*000020e8*/ BEQ         GDC_EndJob_x22b0
    GDC_EndJob_x20ec:
    /*000020ec*/ ADD         R0, R4, #144                @ 0x90 
    /*000020f0*/ BL          0x00000000000020F0          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*000020f4*/ LDR         R0, [PC, #808]              @ 0x0000000000002424 
    /*000020f8*/ ADD         R1, SP, #20 
    /*000020fc*/ BL          0x00000000000020FC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00002100*/ LDR         R3, [R4, #16] 
    /*00002104*/ CMP         R3, #1 
    /*00002108*/ BNE         GDC_EndJob_x2344
    /*0000210c*/ LDR         R6, [R4, #20] 
    /*00002110*/ CMP         R6, #0 
    /*00002114*/ BEQ         GDC_EndJob_x2388
    /*00002118*/ MOV         R1, R4 
    /*0000211c*/ MOV         R0, R7 
    /*00002120*/ BL          0x0000000000002120          @ GDC_GetJobFromCreatedList [R_ARM_CALL: .text+0x10798] 
    /*00002124*/ LDR         R3, [R4, #108]              @ 0x6c 
    /*00002128*/ MOV         R1, #3 
    /*0000212c*/ MOV         R2, #0 
    /*00002130*/ CMP         R3, #1 
    /*00002134*/ STR         R1, [R4, #16] 
    /*00002138*/ STREQ       R3, [R4, #112]              @ 0x70 
    /*0000213c*/ ADD         R1, SP, #20 
    /*00002140*/ STR         R2, [R4, #104]              @ 0x68 
    /*00002144*/ LDR         R0, [PC, #728]              @ 0x0000000000002424 
    /*00002148*/ BL          0x0000000000002148          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000214c*/ LDR         R3, [R4, #28] 
    /*00002150*/ CMP         R3, #59                     @ 0x3b 
    /*00002154*/ BHI         GDC_EndJob_x2238
    GDC_EndJob_x2158:
    /*00002158*/ LDR         R3, [R4, #64]               @ 0x40 
    /*0000215c*/ ADD         R1, SP, #20 
    /*00002160*/ LDR         R0, [PC, #700]              @ 0x0000000000002424 
    /*00002164*/ CMP         R3, #0 
    /*00002168*/ BNE         GDC_EndJob_x21e8
    /*0000216c*/ BL          0x000000000000216C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00002170*/ ADD         R0, R4, #28 
    /*00002174*/ MOV         R3, R7 
    /*00002178*/ LDM         R0, {R0, R1, R2} 
    /*0000217c*/ BL          0x000000000000217C          @ GDC_QueryBusyJobNum [R_ARM_CALL: .text+0x10b54] 
    /*00002180*/ CMP         R0, #0 
    /*00002184*/ BNE         GDC_EndJob_x21a0
    /*00002188*/ ADD         R0, R4, #28 
    /*0000218c*/ MOV         R3, R7 
    /*00002190*/ LDM         R0, {R0, R1, R2} 
    /*00002194*/ BL          0x0000000000002194          @ GDC_QueryProcJobNum [R_ARM_CALL: .text+0x10cf8] 
    /*00002198*/ CMP         R0, #0 
    /*0000219c*/ BEQ         GDC_EndJob_x22d0
    GDC_EndJob_x21a0:
    /*000021a0*/ ADD         R0, R4, #28 
    /*000021a4*/ MOV         R3, R7 
    /*000021a8*/ LDM         R0, {R0, R1, R2} 
    /*000021ac*/ BL          0x00000000000021AC          @ GDC_QueryBusyJobNum [R_ARM_CALL: .text+0x10b54] 
    /*000021b0*/ MOV         R3, R7 
    /*000021b4*/ LDR         R2, [R4, #36]               @ 0x24 
    /*000021b8*/ LDR         R1, [R4, #32] 
    /*000021bc*/ SUBS        R8, R0, #0 
    /*000021c0*/ BNE         GDC_EndJob_x2258
    /*000021c4*/ LDR         R0, [R4, #28] 
    /*000021c8*/ STR         R4, [SP] 
    /*000021cc*/ BL          0x00000000000021CC          @ GDC_PutJobToProcList [R_ARM_CALL: .text+0x10c6c] 
    /*000021d0*/ MOV         R3, #6 
    /*000021d4*/ ADD         R1, SP, #20 
    /*000021d8*/ LDR         R0, [PC, #580]              @ 0x0000000000002424 
    /*000021dc*/ STR         R3, [R4, #16] 
    /*000021e0*/ BL          0x00000000000021E0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000021e4*/ B           GDC_EndJob_x20a4
    GDC_EndJob_x21e8:
    /*000021e8*/ BL          0x00000000000021E8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000021ec*/ LDR         R2, [R4, #36]               @ 0x24 
    /*000021f0*/ LDR         R1, [R4, #32] 
    /*000021f4*/ MOV         R3, R7 
    /*000021f8*/ LDR         R0, [R4, #28] 
    /*000021fc*/ STR         R4, [SP] 
    /*00002200*/ BL          0x0000000000002200          @ GDC_PutJobToBusyList [R_ARM_CALL: .text+0x10ac8] 
    /*00002204*/ MOV         R3, #2 
    /*00002208*/ MOV         R0, R4 
    /*0000220c*/ STR         R3, [R4, #16] 
    /*00002210*/ BL          0x0000000000002210          @ GDC_DrvCommSubmitJob [R_ARM_CALL: .text+0x1545c] 
    /*00002214*/ CMP         R0, #0 
    /*00002218*/ BNE         GDC_EndJob_x23dc
    GDC_EndJob_x221c:
    /*0000221c*/ ADD         R1, SP, #20 
    /*00002220*/ LDR         R0, [PC, #508]              @ 0x0000000000002424 
    /*00002224*/ BL          0x0000000000002224          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002228*/ MOV         R8, #0 
    /*0000222c*/ MOV         R0, R8 
    /*00002230*/ ADD         SP, SP, #24 
    /*00002234*/ POP         {R4, R5, R6, R7, R8, PC} 
    GDC_EndJob_x2238:
    /*00002238*/ MOVW        R3, #0                      @ .LC140 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x136c] 
    /*0000223c*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00002240*/ MOVT        R3, #0                      @ .LC140 [R_ARM_MOVT_ABS: .rodata.str1.4+0x136c] 
    /*00002244*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00002248*/ MOVW        R2, #1796                   @ 0x704 
    /*0000224c*/ LDR         R1, [PC, #460]              @ 0x0000000000002420 
    /*00002250*/ BL          0x0000000000002250          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00002254*/ B           GDC_EndJob_x2158
    GDC_EndJob_x2258:
    /*00002258*/ LDR         R0, [R4, #28] 
    /*0000225c*/ MOV         R8, #0 
    /*00002260*/ STR         R4, [SP] 
    /*00002264*/ BL          0x0000000000002264          @ GDC_PutJobToBusyList [R_ARM_CALL: .text+0x10ac8] 
    /*00002268*/ MOV         R3, #2 
    /*0000226c*/ ADD         R1, SP, #20 
    /*00002270*/ LDR         R0, [PC, #428]              @ 0x0000000000002424 
    /*00002274*/ STR         R3, [R4, #16] 
    /*00002278*/ BL          0x0000000000002278          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000227c*/ B           GDC_EndJob_x20a4
    GDC_EndJob_x2280:
    /*00002280*/ MOVW        R3, #1750                   @ 0x6d6 
    /*00002284*/ STR         R6, [SP, #4] 
    /*00002288*/ STR         R3, [SP] 
    /*0000228c*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xecc] 
    /*00002290*/ LDR         R3, [PC, #392]              @ 0x0000000000002420 
    /*00002294*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0xecc] 
    /*00002298*/ MOV         R1, #37                     @ 0x25 
    /*0000229c*/ MOV         R0, #3 
    /*000022a0*/ MOVW        R8, #32771                  @ 0x8003 
    /*000022a4*/ BL          0x00000000000022A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000022a8*/ MOVT        R8, #40997                  @ 0xa025 
    /*000022ac*/ B           GDC_EndJob_x20a4
    GDC_EndJob_x22b0:
    /*000022b0*/ MOVW        R3, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf0c] 
    /*000022b4*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*000022b8*/ MOVT        R3, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf0c] 
    /*000022bc*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*000022c0*/ MOVW        R2, #1756                   @ 0x6dc 
    /*000022c4*/ LDR         R1, [PC, #340]              @ 0x0000000000002420 
    /*000022c8*/ BL          0x00000000000022C8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000022cc*/ B           GDC_EndJob_x20ec
    GDC_EndJob_x22d0:
    /*000022d0*/ ADD         R1, SP, #20 
    /*000022d4*/ LDR         R0, [PC, #328]              @ 0x0000000000002424 
    /*000022d8*/ BL          0x00000000000022D8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000022dc*/ MOV         R1, #1 
    /*000022e0*/ MOV         R0, R4 
    /*000022e4*/ BL          0x0000000000001F68 
    /*000022e8*/ LDR         R6, [R4, #76]               @ 0x4c 
    /*000022ec*/ CMP         R6, #0 
    /*000022f0*/ BEQ         GDC_EndJob_x230c
    /*000022f4*/ ADD         R0, R4, #28 
    /*000022f8*/ MOV         R2, #1 
    /*000022fc*/ ADD         R3, R4, #44                 @ 0x2c 
    /*00002300*/ STR         R2, [R4, #60]               @ 0x3c 
    /*00002304*/ LDM         R0, {R0, R1, R2} 
    /*00002308*/ BLX         R6 
    GDC_EndJob_x230c:
    /*0000230c*/ ADD         R1, SP, #20 
    /*00002310*/ LDR         R0, [PC, #268]              @ 0x0000000000002424 
    /*00002314*/ BL          0x0000000000002314          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00002318*/ LDR         R1, [R4, #108]              @ 0x6c 
    /*0000231c*/ MOV         R2, #0 
    /*00002320*/ MOV         R3, #6 
    /*00002324*/ CMP         R1, R2 
    /*00002328*/ STR         R2, [R4, #112]              @ 0x70 
    /*0000232c*/ STR         R3, [R4, #16] 
    /*00002330*/ BNE         GDC_EndJob_x221c
    /*00002334*/ MOV         R1, R4 
    /*00002338*/ LDR         R0, [R5, #4] 
    /*0000233c*/ BL          0x000000000000233C          @ GDC_PutJobToFreeList [R_ARM_CALL: .text+0x102e4] 
    /*00002340*/ B           GDC_EndJob_x221c
    GDC_EndJob_x2344:
    /*00002344*/ STR         R3, [SP, #4] 
    /*00002348*/ MOV         R1, #37                     @ 0x25 
    /*0000234c*/ MOVW        R3, #1766                   @ 0x6e6 
    /*00002350*/ MOVW        R2, #0                      @ .LC138 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12e8] 
    /*00002354*/ STR         R3, [SP] 
    /*00002358*/ MOVT        R2, #0                      @ .LC138 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12e8] 
    /*0000235c*/ LDR         R3, [PC, #188]              @ 0x0000000000002420 
    /*00002360*/ MOV         R0, #3 
    /*00002364*/ BL          0x0000000000002364          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002368*/ MOV         R3, #0 
    /*0000236c*/ ADD         R1, SP, #20 
    /*00002370*/ LDR         R0, [PC, #172]              @ 0x0000000000002424 
    /*00002374*/ STR         R3, [R4, #112]              @ 0x70 
    /*00002378*/ MOVW        R8, #32776                  @ 0x8008 
    /*0000237c*/ BL          0x000000000000237C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002380*/ MOVT        R8, #40997                  @ 0xa025 
    /*00002384*/ B           GDC_EndJob_x20a4
    GDC_EndJob_x2388:
    /*00002388*/ LDR         R0, [R4, #88]               @ 0x58 
    /*0000238c*/ MOVW        LR, #1775                   @ 0x6ef 
    /*00002390*/ LDR         R3, [PC, #136]              @ 0x0000000000002420 
    /*00002394*/ MOV         R1, #37                     @ 0x25 
    /*00002398*/ MOVW        R2, #0                      @ .LC139 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x131c] 
    /*0000239c*/ MOVT        R2, #0                      @ .LC139 [R_ARM_MOVT_ABS: .rodata.str1.4+0x131c] 
    /*000023a0*/ STR         R0, [SP, #12] 
    /*000023a4*/ MOV         R0, #3 
    /*000023a8*/ LDR         IP, [R4, #36]               @ 0x24 
    /*000023ac*/ MOVW        R8, #32776                  @ 0x8008 
    /*000023b0*/ MOVT        R8, #40997                  @ 0xa025 
    /*000023b4*/ STR         IP, [SP, #8] 
    /*000023b8*/ LDR         IP, [R4, #28] 
    /*000023bc*/ STR         LR, [SP] 
    /*000023c0*/ STR         IP, [SP, #4] 
    /*000023c4*/ BL          0x00000000000023C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000023c8*/ STR         R6, [R4, #112]              @ 0x70 
    /*000023cc*/ ADD         R1, SP, #20 
    /*000023d0*/ LDR         R0, [PC, #76]               @ 0x0000000000002424 
    /*000023d4*/ BL          0x00000000000023D4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000023d8*/ B           GDC_EndJob_x20a4
    GDC_EndJob_x23dc:
    /*000023dc*/ MOVW        R3, #1855                   @ 0x73f 
    /*000023e0*/ MOV         R1, #37                     @ 0x25 
    /*000023e4*/ STR         R3, [SP] 
    /*000023e8*/ MOVW        R2, #0                      @ .LC141 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x138c] 
    /*000023ec*/ LDR         R3, [PC, #44]               @ 0x0000000000002420 
    /*000023f0*/ MOVT        R2, #0                      @ .LC141 [R_ARM_MOVT_ABS: .rodata.str1.4+0x138c] 
    /*000023f4*/ MOV         R0, #3 
    /*000023f8*/ MOVW        R8, #32777                  @ 0x8009 
    /*000023fc*/ BL          0x00000000000023FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002400*/ MOV         R3, #0 
    /*00002404*/ ADD         R1, SP, #20 
    /*00002408*/ LDR         R0, [PC, #20]               @ 0x0000000000002424 
    /*0000240c*/ STR         R3, [R4, #112]              @ 0x70 
    /*00002410*/ MOVT        R8, #40997                  @ 0xa025 
    /*00002414*/ STR         R3, [R4, #108]              @ 0x6c 
    /*00002418*/ BL          0x0000000000002418          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000241c*/ B           GDC_EndJob_x20a4
    /*00002420*/ ANDEQ       R0, R0, R8, ASR #4 
    /*00002424*/ ANDEQ       R0, R0, R0, ASR #32 
FUNC_END GDC_EndJob


FUNC_BEGIN GDC_CancelJob
    /*00002428*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000242c*/ SUBS        R7, R0, #0 
    /*00002430*/ SUB         SP, SP, #32 
    /*00002434*/ BLT         GDC_CancelJob_x2718
    /*00002438*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*0000243c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00002440*/ LDR         R3, [R3] 
    /*00002444*/ CMP         R3, R7 
    /*00002448*/ BLS         GDC_CancelJob_x2718
    /*0000244c*/ MOVW        R5, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00002450*/ MOVT        R5, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00002454*/ LDR         R3, [R5] 
    /*00002458*/ CMP         R3, #1 
    /*0000245c*/ BEQ         GDC_CancelJob_x2474
    /*00002460*/ BL          0x0000000000000CEC 
    /*00002464*/ CMP         R0, #0 
    /*00002468*/ BEQ         GDC_CancelJob_x2474
    GDC_CancelJob_x246c:
    /*0000246c*/ ADD         SP, SP, #32 
    /*00002470*/ POP         {R4, R5, R6, R7, R8, PC} 
    GDC_CancelJob_x2474:
    /*00002474*/ LDR         R3, [R5, #4] 
    /*00002478*/ LDR         R3, [R3, #4] 
    /*0000247c*/ LDR         R4, [R3, R7, LSL #2] 
    /*00002480*/ CMP         R4, #0 
    /*00002484*/ BEQ         GDC_CancelJob_x2748
    GDC_CancelJob_x2488:
    /*00002488*/ LDR         R0, [PC, #920]              @ 0x0000000000002828 
    /*0000248c*/ ADD         R1, SP, #28 
    /*00002490*/ BL          0x0000000000002490          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00002494*/ LDR         R3, [R4, #16] 
    /*00002498*/ CMP         R3, #0 
    /*0000249c*/ BEQ         GDC_CancelJob_x27a8
    /*000024a0*/ CMP         R3, #3 
    /*000024a4*/ BEQ         GDC_CancelJob_x27d0
    /*000024a8*/ LDR         R2, [R4, #64]               @ 0x40 
    /*000024ac*/ CMP         R2, #0 
    /*000024b0*/ BNE         GDC_CancelJob_x2518
    /*000024b4*/ LDR         R1, [R4, #92]               @ 0x5c 
    /*000024b8*/ CMP         R1, #1 
    /*000024bc*/ BEQ         GDC_CancelJob_x27f8
    /*000024c0*/ CMP         R3, #2 
    /*000024c4*/ STR         R2, [R4, #104]              @ 0x68 
    /*000024c8*/ MOV         R2, #1 
    /*000024cc*/ STR         R2, [R4, #92]               @ 0x5c 
    /*000024d0*/ BEQ         GDC_CancelJob_x2558
    /*000024d4*/ CMP         R3, #6 
    /*000024d8*/ BEQ         GDC_CancelJob_x2768
    /*000024dc*/ CMP         R3, #1 
    /*000024e0*/ BEQ         GDC_CancelJob_x26c8
    /*000024e4*/ MOV         R2, #1968                   @ 0x7b0 
    /*000024e8*/ LDR         R1, [PC, #828]              @ 0x000000000000282c 
    /*000024ec*/ MOVW        R0, #0                      @ .LC146 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1510] 
    /*000024f0*/ MOVT        R0, #0                      @ .LC146 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1510] 
    /*000024f4*/ BL          0x00000000000024F4          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000024f8*/ MOVW        R3, #0                      @ .LC147 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x152c] 
    /*000024fc*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00002500*/ MOVT        R3, #0                      @ .LC147 [R_ARM_MOVT_ABS: .rodata.str1.4+0x152c] 
    /*00002504*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00002508*/ MOVW        R2, #1969                   @ 0x7b1 
    /*0000250c*/ LDR         R1, [PC, #792]              @ 0x000000000000282c 
    /*00002510*/ BL          0x0000000000002510          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00002514*/ B           GDC_CancelJob_x256c
    GDC_CancelJob_x2518:
    /*00002518*/ SUB         R2, R3, #1 
    /*0000251c*/ CMP         R2, #1 
    /*00002520*/ BHI         GDC_CancelJob_x2780
    /*00002524*/ LDR         R2, [R4, #92]               @ 0x5c 
    /*00002528*/ CMP         R2, #1 
    /*0000252c*/ BEQ         GDC_CancelJob_x27f8
    /*00002530*/ CMP         R3, #1 
    /*00002534*/ MOV         R6, #0 
    /*00002538*/ MOV         R3, #1 
    /*0000253c*/ STR         R6, [R4, #104]              @ 0x68 
    /*00002540*/ STR         R3, [R4, #92]               @ 0x5c 
    /*00002544*/ BEQ         GDC_CancelJob_x26c8
    /*00002548*/ MOV         R0, R7 
    /*0000254c*/ BL          0x000000000000254C          @ GDC_DrvCommCancelJob [R_ARM_CALL: .text+0x148b8] 
    /*00002550*/ CMP         R0, #0 
    /*00002554*/ BNE         GDC_CancelJob_x26d8
    GDC_CancelJob_x2558:
    /*00002558*/ ADD         R0, R4, #28 
    /*0000255c*/ LDR         R3, [R5, #4] 
    /*00002560*/ LDM         R0, {R0, R1, R2} 
    /*00002564*/ STR         R4, [SP] 
    /*00002568*/ BL          0x0000000000002568          @ GDC_GetJobFromBusyList [R_ARM_CALL: .text+0x109f8] 
    GDC_CancelJob_x256c:
    /*0000256c*/ MOV         R3, #6 
    /*00002570*/ ADD         R0, R4, #84                 @ 0x54 
    /*00002574*/ STR         R3, [R4, #16] 
    /*00002578*/ BL          0x0000000000002578          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0000257c*/ LDR         R2, [R5, #4] 
    /*00002580*/ MOV         R0, R4 
    /*00002584*/ LDR         R3, [R2, #1324]             @ 0x52c 
    /*00002588*/ ADD         R3, R3, #1 
    /*0000258c*/ STR         R3, [R2, #1324]             @ 0x52c 
    /*00002590*/ BL          0x0000000000002590          @ GDC_QueryTaskNumInJob [R_ARM_CALL: .text+0x1015c] 
    /*00002594*/ LDR         R2, [R5, #4] 
    /*00002598*/ ADD         R1, SP, #28 
    /*0000259c*/ LDR         R3, [R2, #1336]             @ 0x538 
    /*000025a0*/ ADD         R0, R3, R0 
    /*000025a4*/ STR         R0, [R2, #1336]             @ 0x538 
    /*000025a8*/ LDR         R0, [PC, #632]              @ 0x0000000000002828 
    /*000025ac*/ BL          0x00000000000025AC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000025b0*/ MOV         R1, #3 
    /*000025b4*/ MOV         R0, R4 
    /*000025b8*/ BL          0x0000000000001F68 
    /*000025bc*/ LDR         R6, [R4, #76]               @ 0x4c 
    /*000025c0*/ CMP         R6, #0 
    /*000025c4*/ BEQ         GDC_CancelJob_x25e0
    /*000025c8*/ ADD         R0, R4, #28 
    /*000025cc*/ MOV         R2, #3 
    /*000025d0*/ ADD         R3, R4, #44                 @ 0x2c 
    /*000025d4*/ STR         R2, [R4, #60]               @ 0x3c 
    /*000025d8*/ LDM         R0, {R0, R1, R2} 
    /*000025dc*/ BLX         R6 
    GDC_CancelJob_x25e0:
    /*000025e0*/ ADD         R1, SP, #28 
    /*000025e4*/ LDR         R0, [PC, #572]              @ 0x0000000000002828 
    /*000025e8*/ BL          0x00000000000025E8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000025ec*/ LDR         R3, [R4, #112]              @ 0x70 
    /*000025f0*/ CMP         R3, #0 
    /*000025f4*/ BNE         GDC_CancelJob_x2610
    /*000025f8*/ LDR         R3, [R4, #16] 
    /*000025fc*/ CMP         R3, #0 
    /*00002600*/ BEQ         GDC_CancelJob_x2610
    /*00002604*/ LDR         R2, [R4, #20] 
    /*00002608*/ CMP         R2, #0 
    /*0000260c*/ BNE         GDC_CancelJob_x2684
    GDC_CancelJob_x2610:
    /*00002610*/ MOV         R1, R4 
    /*00002614*/ LDR         R0, [R5, #4] 
    /*00002618*/ BL          0x0000000000002618          @ GDC_PutJobToFreeList [R_ARM_CALL: .text+0x102e4] 
    /*0000261c*/ MOV         R6, #0 
    /*00002620*/ ADD         R1, SP, #28 
    /*00002624*/ STR         R6, [R4, #92]               @ 0x5c 
    /*00002628*/ LDR         R0, [PC, #504]              @ 0x0000000000002828 
    /*0000262c*/ BL          0x000000000000262C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002630*/ LDR         R0, [R5, #4] 
    /*00002634*/ BL          0x0000000000002634          @ GDC_QueryFreeJobNum [R_ARM_CALL: .text+0x10258] 
    /*00002638*/ MOV         R8, R0 
    /*0000263c*/ LDR         R0, [R5, #4] 
    /*00002640*/ ADD         R0, R0, #604                @ 0x25c 
    /*00002644*/ BL          0x0000000000002644          @ GDC_QueryFreeTaskNum [R_ARM_CALL: .text+0x10084] 
    /*00002648*/ STR         R8, [SP, #12] 
    /*0000264c*/ STR         R4, [SP, #8] 
    /*00002650*/ MOVW        R3, #2005                   @ 0x7d5 
    /*00002654*/ STR         R7, [SP, #4] 
    /*00002658*/ MOV         R1, #37                     @ 0x25 
    /*0000265c*/ STR         R3, [SP] 
    /*00002660*/ MOVW        R2, #0                      @ .LC149 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x155c] 
    /*00002664*/ LDR         R3, [PC, #448]              @ 0x000000000000282c 
    /*00002668*/ MOVT        R2, #0                      @ .LC149 [R_ARM_MOVT_ABS: .rodata.str1.4+0x155c] 
    /*0000266c*/ STR         R0, [SP, #16] 
    /*00002670*/ MOV         R0, #7 
    /*00002674*/ BL          0x0000000000002674          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002678*/ MOV         R0, R6 
    /*0000267c*/ ADD         SP, SP, #32 
    /*00002680*/ POP         {R4, R5, R6, R7, R8, PC} 
    GDC_CancelJob_x2684:
    /*00002684*/ LDR         R0, [R4, #108]              @ 0x6c 
    /*00002688*/ MOVW        IP, #1994                   @ 0x7ca 
    /*0000268c*/ LDR         R1, [PC, #412]              @ 0x0000000000002830 
    /*00002690*/ MOVW        R2, #0                      @ .LC148 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1530] 
    /*00002694*/ MOVT        R2, #0                      @ .LC148 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1530] 
    /*00002698*/ STR         R0, [SP, #20] 
    /*0000269c*/ LDR         R0, [R4, #92]               @ 0x5c 
    /*000026a0*/ STR         R3, [SP, #12] 
    /*000026a4*/ SUB         R3, R1, #16 
    /*000026a8*/ STR         R1, [SP, #4] 
    /*000026ac*/ MOV         R1, #37                     @ 0x25 
    /*000026b0*/ STR         R0, [SP, #16] 
    /*000026b4*/ MOV         R0, #3 
    /*000026b8*/ STR         IP, [SP, #8] 
    /*000026bc*/ STR         IP, [SP] 
    /*000026c0*/ BL          0x00000000000026C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000026c4*/ B           GDC_CancelJob_x2610
    GDC_CancelJob_x26c8:
    /*000026c8*/ MOV         R1, R4 
    /*000026cc*/ LDR         R0, [R5, #4] 
    /*000026d0*/ BL          0x00000000000026D0          @ GDC_GetJobFromCreatedList [R_ARM_CALL: .text+0x10798] 
    /*000026d4*/ B           GDC_CancelJob_x256c
    GDC_CancelJob_x26d8:
    /*000026d8*/ LDR         R3, [PC, #332]              @ 0x000000000000282c 
    /*000026dc*/ MOVW        R1, #1945                   @ 0x799 
    /*000026e0*/ STR         R6, [R4, #92]               @ 0x5c 
    /*000026e4*/ MOVW        R2, #0                      @ .LC145 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14d8] 
    /*000026e8*/ STR         R1, [SP, #8] 
    /*000026ec*/ MOVT        R2, #0                      @ .LC145 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14d8] 
    /*000026f0*/ STM         SP, {R1, R3} 
    /*000026f4*/ MOV         R0, #3 
    /*000026f8*/ MOV         R1, #37                     @ 0x25 
    /*000026fc*/ BL          0x00000000000026FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_CancelJob_x2700:
    /*00002700*/ LDR         R0, [PC, #288]              @ 0x0000000000002828 
    /*00002704*/ ADD         R1, SP, #28 
    /*00002708*/ BL          0x0000000000002708          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000270c*/ MOVW        R0, #32777                  @ 0x8009 
    /*00002710*/ MOVT        R0, #40997                  @ 0xa025 
    /*00002714*/ B           GDC_CancelJob_x246c
    GDC_CancelJob_x2718:
    /*00002718*/ MOVW        R3, #1891                   @ 0x763 
    /*0000271c*/ STR         R7, [SP, #4] 
    /*00002720*/ STR         R3, [SP] 
    /*00002724*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xecc] 
    /*00002728*/ LDR         R3, [PC, #252]              @ 0x000000000000282c 
    /*0000272c*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0xecc] 
    /*00002730*/ MOV         R1, #37                     @ 0x25 
    /*00002734*/ MOV         R0, #3 
    /*00002738*/ BL          0x0000000000002738          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000273c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00002740*/ MOVT        R0, #40997                  @ 0xa025 
    /*00002744*/ B           GDC_CancelJob_x246c
    GDC_CancelJob_x2748:
    /*00002748*/ MOVW        R3, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf0c] 
    /*0000274c*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00002750*/ MOVT        R3, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf0c] 
    /*00002754*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00002758*/ MOVW        R2, #1897                   @ 0x769 
    /*0000275c*/ LDR         R1, [PC, #200]              @ 0x000000000000282c 
    /*00002760*/ BL          0x0000000000002760          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00002764*/ B           GDC_CancelJob_x2488
    GDC_CancelJob_x2768:
    /*00002768*/ ADD         R0, R4, #28 
    /*0000276c*/ LDR         R3, [R5, #4] 
    /*00002770*/ LDM         R0, {R0, R1, R2} 
    /*00002774*/ STR         R4, [SP] 
    /*00002778*/ BL          0x0000000000002778          @ GDC_GetJobFromProcList [R_ARM_CALL: .text+0x10b9c] 
    /*0000277c*/ B           GDC_CancelJob_x256c
    GDC_CancelJob_x2780:
    /*00002780*/ STR         R3, [SP, #4] 
    /*00002784*/ MOVW        R2, #0                      @ .LC143 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1420] 
    /*00002788*/ MOVW        R3, #1915                   @ 0x77b 
    /*0000278c*/ MOVT        R2, #0                      @ .LC143 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1420] 
    /*00002790*/ STR         R3, [SP] 
    /*00002794*/ MOV         R1, #37                     @ 0x25 
    /*00002798*/ LDR         R3, [PC, #140]              @ 0x000000000000282c 
    /*0000279c*/ MOV         R0, #3 
    /*000027a0*/ BL          0x00000000000027A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000027a4*/ B           GDC_CancelJob_x2700
    GDC_CancelJob_x27a8:
    /*000027a8*/ STR         R3, [SP, #4] 
    /*000027ac*/ MOVW        R2, #0                      @ .LC142 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13b8] 
    /*000027b0*/ MOVW        R3, #1903                   @ 0x76f 
    /*000027b4*/ MOVT        R2, #0                      @ .LC142 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13b8] 
    /*000027b8*/ STR         R3, [SP] 
    /*000027bc*/ MOV         R1, #37                     @ 0x25 
    /*000027c0*/ LDR         R3, [PC, #100]              @ 0x000000000000282c 
    /*000027c4*/ MOV         R0, #3 
    /*000027c8*/ BL          0x00000000000027C8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000027cc*/ B           GDC_CancelJob_x2700
    GDC_CancelJob_x27d0:
    /*000027d0*/ STR         R3, [SP, #4] 
    /*000027d4*/ MOV         R0, R3 
    /*000027d8*/ MOVW        R2, #0                      @ .LC143 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1420] 
    /*000027dc*/ MOVW        R3, #1908                   @ 0x774 
    /*000027e0*/ MOVT        R2, #0                      @ .LC143 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1420] 
    /*000027e4*/ STR         R3, [SP] 
    /*000027e8*/ MOV         R1, #37                     @ 0x25 
    /*000027ec*/ LDR         R3, [PC, #56]               @ 0x000000000000282c 
    /*000027f0*/ BL          0x00000000000027F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000027f4*/ B           GDC_CancelJob_x2700
    GDC_CancelJob_x27f8:
    /*000027f8*/ STR         R3, [SP, #8] 
    /*000027fc*/ MOVW        R2, #0                      @ .LC144 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1488] 
    /*00002800*/ LDR         R0, [R4, #88]               @ 0x58 
    /*00002804*/ MOVW        R3, #1922                   @ 0x782 
    /*00002808*/ MOVT        R2, #0                      @ .LC144 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1488] 
    /*0000280c*/ STR         R3, [SP] 
    /*00002810*/ MOV         R1, #37                     @ 0x25 
    /*00002814*/ LDR         R3, [PC, #16]               @ 0x000000000000282c 
    /*00002818*/ STR         R0, [SP, #4] 
    /*0000281c*/ MOV         R0, #3 
    /*00002820*/ BL          0x0000000000002820          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002824*/ B           GDC_CancelJob_x2700
    /*00002828*/ ANDEQ       R0, R0, R0, ASR #32 
    /*0000282c*/ ANDEQ       R0, R0, R4, ASR R2 
    /*00002830*/ ANDEQ       R0, R0, R4, ROR #4 
FUNC_END GDC_CancelJob


FUNC_BEGIN GDC_CancelJobByModDev
    /*00002834*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00002838*/ MOV         R9, R0 
    /*0000283c*/ SUB         R0, R0, #7 
    /*00002840*/ MOVW        R5, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00002844*/ CMP         R0, #23 
    /*00002848*/ MOVT        R5, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000284c*/ SUB         SP, SP, #60                 @ 0x3c 
    /*00002850*/ LDR         SL, [R5, #4] 
    /*00002854*/ BHI         GDC_CancelJobByModDev_x2b00
    /*00002858*/ MOV         R7, R1 
    /*0000285c*/ LDR         R1, [R5] 
    /*00002860*/ MOV         R8, R2 
    /*00002864*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00002868*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*0000286c*/ CMP         R1, #1 
    /*00002870*/ ADD         R2, R2, R0, LSL #2 
    /*00002874*/ LDR         R4, [R2, #248]              @ 0xf8 
    /*00002878*/ BNE         GDC_CancelJobByModDev_x2bf8
    GDC_CancelJobByModDev_x287c:
    /*0000287c*/ CMP         R4, #3 
    /*00002880*/ BHI         GDC_CancelJobByModDev_x2c10
    /*00002884*/ ADD         R2, R5, R4, LSL #2 
    /*00002888*/ LDR         R2, [R2, #12] 
    /*0000288c*/ CMP         R2, R7 
    /*00002890*/ BLS         GDC_CancelJobByModDev_x2c50
    /*00002894*/ ADD         R6, R4, #4 
    /*00002898*/ ADD         R2, R5, R6, LSL #2 
    /*0000289c*/ LDR         R2, [R2, #12] 
    /*000028a0*/ CMP         R2, R8 
    /*000028a4*/ BLS         GDC_CancelJobByModDev_x2c68
    /*000028a8*/ CMP         R3, #0 
    /*000028ac*/ BEQ         GDC_CancelJobByModDev_x2c40
    GDC_CancelJobByModDev_x28b0:
    /*000028b0*/ ADD         R6, R5, R6, LSL #2 
    /*000028b4*/ LDR         R0, [PC, #1032]             @ 0x0000000000002cc4 
    /*000028b8*/ ADD         R1, SP, #52                 @ 0x34 
    /*000028bc*/ ADD         R4, SL, R4, LSL #2 
    /*000028c0*/ BL          0x00000000000028C0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000028c4*/ LDR         R3, [R6, #12] 
    /*000028c8*/ LDR         R2, [R4, #100]              @ 0x64 
    /*000028cc*/ MLA         R3, R3, R7, R8 
    /*000028d0*/ STR         R2, [SP, #44]               @ 0x2c 
    /*000028d4*/ STR         R3, [SP, #40]               @ 0x28 
    /*000028d8*/ LDR         R3, [R2, R3, LSL #2] 
    /*000028dc*/ CMP         R3, #1 
    /*000028e0*/ BEQ         GDC_CancelJobByModDev_x2c80
    /*000028e4*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*000028e8*/ MOV         R3, #1 
    /*000028ec*/ LDR         R0, [SP, #40]               @ 0x28 
    /*000028f0*/ MOV         R2, R8 
    /*000028f4*/ LDR         R6, [PC, #968]              @ 0x0000000000002cc4 
    /*000028f8*/ STR         R3, [R1, R0, LSL #2] 
    /*000028fc*/ MOV         R1, R7 
    /*00002900*/ MOV         R0, R9 
    /*00002904*/ BL          0x0000000000002904          @ GDC_DrvCommSetCancelFlags [R_ARM_CALL: .text+0x14868] 
    /*00002908*/ ADD         R1, SP, #52                 @ 0x34 
    /*0000290c*/ LDR         R0, [PC, #944]              @ 0x0000000000002cc4 
    /*00002910*/ BL          0x0000000000002910          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002914*/ B           GDC_CancelJobByModDev_x293c
    GDC_CancelJobByModDev_x2918:
    /*00002918*/ LDR         R2, [R4, #20] 
    /*0000291c*/ CMP         R2, #0 
    /*00002920*/ BNE         GDC_CancelJobByModDev_x2b20
    GDC_CancelJobByModDev_x2924:
    /*00002924*/ MOV         R1, R4 
    /*00002928*/ LDR         R0, [R5, #4] 
    /*0000292c*/ BL          0x000000000000292C          @ GDC_PutJobToFreeList [R_ARM_CALL: .text+0x102e4] 
    GDC_CancelJobByModDev_x2930:
    /*00002930*/ ADD         R1, SP, #52                 @ 0x34 
    /*00002934*/ MOV         R0, R6 
    /*00002938*/ BL          0x0000000000002938          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    GDC_CancelJobByModDev_x293c:
    /*0000293c*/ MOV         R3, SL 
    /*00002940*/ MOV         R2, R8 
    /*00002944*/ MOV         R1, R7 
    /*00002948*/ MOV         R0, R9 
    /*0000294c*/ BL          0x000000000000294C          @ GDC_QueryBusyJobNum [R_ARM_CALL: .text+0x10b54] 
    /*00002950*/ CMP         R0, #0 
    /*00002954*/ BLE         GDC_CancelJobByModDev_x2bb0
    /*00002958*/ ADD         R1, SP, #52                 @ 0x34 
    /*0000295c*/ MOV         R0, R6 
    /*00002960*/ BL          0x0000000000002960          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00002964*/ MOV         R3, SL 
    /*00002968*/ MOV         R2, R8 
    /*0000296c*/ MOV         R1, R7 
    /*00002970*/ MOV         R0, R9 
    /*00002974*/ BL          0x0000000000002974          @ GDC_QueryFirstJobFromBusyList [R_ARM_CALL: .text+0x10940] 
    /*00002978*/ SUBS        R4, R0, #0 
    /*0000297c*/ BEQ         GDC_CancelJobByModDev_x2a88
    /*00002980*/ LDR         R3, [R4, #64]               @ 0x40 
    /*00002984*/ CMP         R3, #0 
    /*00002988*/ BNE         GDC_CancelJobByModDev_x2ab0
    GDC_CancelJobByModDev_x298c:
    /*0000298c*/ LDR         R2, [R5, #4] 
    /*00002990*/ MOV         R3, #6 
    /*00002994*/ STR         R3, [R4, #16] 
    /*00002998*/ MOV         R0, R4 
    /*0000299c*/ LDR         R3, [R2, #1324]             @ 0x52c 
    /*000029a0*/ ADD         R3, R3, #1 
    /*000029a4*/ STR         R3, [R2, #1324]             @ 0x52c 
    /*000029a8*/ BL          0x00000000000029A8          @ GDC_QueryTaskNumInJob [R_ARM_CALL: .text+0x1015c] 
    /*000029ac*/ LDR         R2, [R5, #4] 
    /*000029b0*/ ADD         R1, SP, #52                 @ 0x34 
    /*000029b4*/ LDR         R3, [R2, #1336]             @ 0x538 
    /*000029b8*/ ADD         R0, R3, R0 
    /*000029bc*/ STR         R0, [R2, #1336]             @ 0x538 
    /*000029c0*/ MOV         R0, R6 
    /*000029c4*/ BL          0x00000000000029C4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000029c8*/ MOV         R1, #3 
    /*000029cc*/ MOV         R0, R4 
    /*000029d0*/ BL          0x0000000000001F68 
    /*000029d4*/ LDR         FP, [R4, #76]               @ 0x4c 
    /*000029d8*/ CMP         FP, #0 
    /*000029dc*/ BEQ         GDC_CancelJobByModDev_x29f8
    /*000029e0*/ ADD         R0, R4, #28 
    /*000029e4*/ MOV         R2, #3 
    /*000029e8*/ ADD         R3, R4, #44                 @ 0x2c 
    /*000029ec*/ STR         R2, [R4, #60]               @ 0x3c 
    /*000029f0*/ LDM         R0, {R0, R1, R2} 
    /*000029f4*/ BLX         FP 
    GDC_CancelJobByModDev_x29f8:
    /*000029f8*/ LDR         R0, [R5, #4] 
    /*000029fc*/ LDR         FP, [R4, #88]               @ 0x58 
    /*00002a00*/ BL          0x0000000000002A00          @ GDC_QueryFreeJobNum [R_ARM_CALL: .text+0x10258] 
    /*00002a04*/ STR         R0, [SP, #36]               @ 0x24 
    /*00002a08*/ LDR         R0, [R5, #4] 
    /*00002a0c*/ ADD         R0, R0, #604                @ 0x25c 
    /*00002a10*/ BL          0x0000000000002A10          @ GDC_QueryFreeTaskNum [R_ARM_CALL: .text+0x10084] 
    /*00002a14*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00002a18*/ MOV         R1, #37                     @ 0x25 
    /*00002a1c*/ STR         FP, [SP, #4] 
    /*00002a20*/ STR         R4, [SP, #8] 
    /*00002a24*/ MOVW        R2, #0                      @ .LC149 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x155c] 
    /*00002a28*/ STR         R3, [SP, #12] 
    /*00002a2c*/ MOVT        R2, #0                      @ .LC149 [R_ARM_MOVT_ABS: .rodata.str1.4+0x155c] 
    /*00002a30*/ MOVW        R3, #2111                   @ 0x83f 
    /*00002a34*/ STR         R3, [SP] 
    /*00002a38*/ LDR         R3, [PC, #648]              @ 0x0000000000002cc8 
    /*00002a3c*/ STR         R0, [SP, #16] 
    /*00002a40*/ MOV         R0, #7 
    /*00002a44*/ BL          0x0000000000002A44          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002a48*/ ADD         R1, SP, #52                 @ 0x34 
    /*00002a4c*/ MOV         R0, R6 
    /*00002a50*/ BL          0x0000000000002A50          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00002a54*/ LDR         R3, [R4, #112]              @ 0x70 
    /*00002a58*/ MOV         R2, #0 
    /*00002a5c*/ STR         R2, [R4, #92]               @ 0x5c 
    /*00002a60*/ CMP         R3, R2 
    /*00002a64*/ BNE         GDC_CancelJobByModDev_x2a74
    /*00002a68*/ LDR         R1, [R4, #16] 
    /*00002a6c*/ CMP         R1, R2 
    /*00002a70*/ BNE         GDC_CancelJobByModDev_x2918
    GDC_CancelJobByModDev_x2a74:
    /*00002a74*/ MOV         R3, #0 
    /*00002a78*/ ADD         R0, R4, #84                 @ 0x54 
    /*00002a7c*/ STR         R3, [R4, #112]              @ 0x70 
    /*00002a80*/ BL          0x0000000000002A80          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00002a84*/ B           GDC_CancelJobByModDev_x2930
    GDC_CancelJobByModDev_x2a88:
    /*00002a88*/ MOVW        R3, #0                      @ .LC151 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1618] 
    /*00002a8c*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00002a90*/ MOVT        R3, #0                      @ .LC151 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1618] 
    /*00002a94*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00002a98*/ MOVW        R2, #2074                   @ 0x81a 
    /*00002a9c*/ LDR         R1, [PC, #548]              @ 0x0000000000002cc8 
    /*00002aa0*/ BL          0x0000000000002AA0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00002aa4*/ LDR         R3, [R4, #64]               @ 0x40 
    /*00002aa8*/ CMP         R3, #0 
    /*00002aac*/ BEQ         GDC_CancelJobByModDev_x2adc
    GDC_CancelJobByModDev_x2ab0:
    /*00002ab0*/ LDR         R0, [R4, #88]               @ 0x58 
    /*00002ab4*/ BL          0x0000000000002AB4          @ GDC_DrvCommCancelJob [R_ARM_CALL: .text+0x148b8] 
    /*00002ab8*/ CMP         R0, #0 
    /*00002abc*/ BNE         GDC_CancelJobByModDev_x2b64
    /*00002ac0*/ MOV         R3, SL 
    /*00002ac4*/ MOV         R2, R8 
    /*00002ac8*/ MOV         R1, R7 
    /*00002acc*/ MOV         R0, R9 
    /*00002ad0*/ BL          0x0000000000002AD0          @ GDC_GetFirstJobFromBusyList [R_ARM_CALL: .text+0x10834] 
    /*00002ad4*/ SUBS        R4, R0, #0 
    /*00002ad8*/ BNE         GDC_CancelJobByModDev_x298c
    GDC_CancelJobByModDev_x2adc:
    /*00002adc*/ MOVW        R3, #0                      @ .LC151 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1618] 
    /*00002ae0*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00002ae4*/ MOVT        R3, #0                      @ .LC151 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1618] 
    /*00002ae8*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00002aec*/ MOVW        R2, #2094                   @ 0x82e 
    /*00002af0*/ LDR         R1, [PC, #464]              @ 0x0000000000002cc8 
    /*00002af4*/ BL          0x0000000000002AF4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00002af8*/ MOV         R4, #0 
    /*00002afc*/ B           GDC_CancelJobByModDev_x298c
    GDC_CancelJobByModDev_x2b00:
    /*00002b00*/ LDR         R3, [R5] 
    /*00002b04*/ CMP         R3, #1 
    /*00002b08*/ BEQ         GDC_CancelJobByModDev_x2c10
    /*00002b0c*/ BL          0x0000000000000CEC 
    /*00002b10*/ CMP         R0, #0 
    /*00002b14*/ BEQ         GDC_CancelJobByModDev_x2c10
    GDC_CancelJobByModDev_x2b18:
    /*00002b18*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00002b1c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_CancelJobByModDev_x2b20:
    /*00002b20*/ STR         R3, [SP, #24] 
    /*00002b24*/ MOVW        IP, #2118                   @ 0x846 
    /*00002b28*/ LDR         R0, [R4, #108]              @ 0x6c 
    /*00002b2c*/ MOVW        R2, #0                      @ .LC153 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1670] 
    /*00002b30*/ STR         R3, [SP, #16] 
    /*00002b34*/ MOVT        R2, #0                      @ .LC153 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1670] 
    /*00002b38*/ LDR         R3, [PC, #392]              @ 0x0000000000002cc8 
    /*00002b3c*/ STR         R1, [SP, #12] 
    /*00002b40*/ MOV         R1, #37                     @ 0x25 
    /*00002b44*/ STR         R0, [SP, #20] 
    /*00002b48*/ ADD         R0, R3, #24 
    /*00002b4c*/ STR         IP, [SP, #8] 
    /*00002b50*/ STR         R0, [SP, #4] 
    /*00002b54*/ MOV         R0, #3 
    /*00002b58*/ STR         IP, [SP] 
    /*00002b5c*/ BL          0x0000000000002B5C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002b60*/ B           GDC_CancelJobByModDev_x2924
    GDC_CancelJobByModDev_x2b64:
    /*00002b64*/ LDR         R1, [R4, #88]               @ 0x58 
    /*00002b68*/ MOVW        LR, #2083                   @ 0x823 
    /*00002b6c*/ MOVW        R2, #0                      @ .LC152 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1628] 
    /*00002b70*/ LDR         R3, [PC, #336]              @ 0x0000000000002cc8 
    /*00002b74*/ MOVT        R2, #0                      @ .LC152 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1628] 
    /*00002b78*/ STR         R1, [SP, #16] 
    /*00002b7c*/ MOV         R1, #37                     @ 0x25 
    /*00002b80*/ LDR         R0, [R4, #36]               @ 0x24 
    /*00002b84*/ STR         R0, [SP, #12] 
    /*00002b88*/ MOV         R0, #7 
    /*00002b8c*/ LDR         IP, [R4, #32] 
    /*00002b90*/ STR         IP, [SP, #8] 
    /*00002b94*/ LDR         IP, [R4, #28] 
    /*00002b98*/ STR         LR, [SP] 
    /*00002b9c*/ STR         IP, [SP, #4] 
    /*00002ba0*/ BL          0x0000000000002BA0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002ba4*/ ADD         R1, SP, #52                 @ 0x34 
    /*00002ba8*/ LDR         R0, [PC, #276]              @ 0x0000000000002cc4 
    /*00002bac*/ BL          0x0000000000002BAC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    GDC_CancelJobByModDev_x2bb0:
    /*00002bb0*/ ADD         R1, SP, #52                 @ 0x34 
    /*00002bb4*/ LDR         R0, [PC, #264]              @ 0x0000000000002cc4 
    /*00002bb8*/ BL          0x0000000000002BB8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00002bbc*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00002bc0*/ LDR         IP, [SP, #40]               @ 0x28 
    /*00002bc4*/ MOV         R4, #0 
    /*00002bc8*/ MOV         R2, R8 
    /*00002bcc*/ MOV         R1, R7 
    /*00002bd0*/ MOV         R0, R9 
    /*00002bd4*/ STR         R4, [R3, IP, LSL #2] 
    /*00002bd8*/ MOV         R3, R4 
    /*00002bdc*/ BL          0x0000000000002BDC          @ GDC_DrvCommSetCancelFlags [R_ARM_CALL: .text+0x14868] 
    /*00002be0*/ ADD         R1, SP, #52                 @ 0x34 
    /*00002be4*/ LDR         R0, [PC, #216]              @ 0x0000000000002cc4 
    /*00002be8*/ BL          0x0000000000002BE8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002bec*/ MOV         R0, R4 
    /*00002bf0*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00002bf4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_CancelJobByModDev_x2bf8:
    /*00002bf8*/ STR         R3, [SP, #36]               @ 0x24 
    /*00002bfc*/ BL          0x0000000000000CEC 
    /*00002c00*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00002c04*/ CMP         R0, #0 
    /*00002c08*/ BEQ         GDC_CancelJobByModDev_x287c
    /*00002c0c*/ B           GDC_CancelJobByModDev_x2b18
    GDC_CancelJobByModDev_x2c10:
    /*00002c10*/ MOVW        R2, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf1c] 
    /*00002c14*/ MOVT        R2, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf1c] 
    /*00002c18*/ MOVW        R3, #2043                   @ 0x7fb 
    /*00002c1c*/ STR         R9, [SP, #4] 
    /*00002c20*/ STR         R3, [SP] 
    GDC_CancelJobByModDev_x2c24:
    /*00002c24*/ LDR         R3, [PC, #156]              @ 0x0000000000002cc8 
    /*00002c28*/ MOV         R1, #37                     @ 0x25 
    /*00002c2c*/ MOV         R0, #3 
    /*00002c30*/ BL          0x0000000000002C30          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002c34*/ MOVW        R0, #32771                  @ 0x8003 
    /*00002c38*/ MOVT        R0, #40997                  @ 0xa025 
    /*00002c3c*/ B           GDC_CancelJobByModDev_x2b18
    GDC_CancelJobByModDev_x2c40:
    /*00002c40*/ BL          0x0000000000000CB0 
    /*00002c44*/ CMP         R0, #0 
    /*00002c48*/ BNE         GDC_CancelJobByModDev_x2b18
    /*00002c4c*/ B           GDC_CancelJobByModDev_x28b0
    GDC_CancelJobByModDev_x2c50:
    /*00002c50*/ MOVW        R3, #2044                   @ 0x7fc 
    /*00002c54*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfb4] 
    /*00002c58*/ STR         R7, [SP, #4] 
    /*00002c5c*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfb4] 
    /*00002c60*/ STR         R3, [SP] 
    /*00002c64*/ B           GDC_CancelJobByModDev_x2c24
    GDC_CancelJobByModDev_x2c68:
    /*00002c68*/ MOVW        R3, #2045                   @ 0x7fd 
    /*00002c6c*/ MOVW        R2, #0                      @ .LC126 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1050] 
    /*00002c70*/ STR         R8, [SP, #4] 
    /*00002c74*/ MOVT        R2, #0                      @ .LC126 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1050] 
    /*00002c78*/ STR         R3, [SP] 
    /*00002c7c*/ B           GDC_CancelJobByModDev_x2c24
    GDC_CancelJobByModDev_x2c80:
    /*00002c80*/ MOVW        R3, #2057                   @ 0x809 
    /*00002c84*/ MOV         R1, #37                     @ 0x25 
    /*00002c88*/ STR         R3, [SP] 
    /*00002c8c*/ MOVW        R2, #0                      @ .LC150 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x15b4] 
    /*00002c90*/ LDR         R3, [PC, #48]               @ 0x0000000000002cc8 
    /*00002c94*/ MOVT        R2, #0                      @ .LC150 [R_ARM_MOVT_ABS: .rodata.str1.4+0x15b4] 
    /*00002c98*/ STR         R8, [SP, #12] 
    /*00002c9c*/ MOV         R0, #3 
    /*00002ca0*/ STR         R7, [SP, #8] 
    /*00002ca4*/ STR         R7, [SP, #4] 
    /*00002ca8*/ BL          0x0000000000002CA8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002cac*/ LDR         R0, [PC, #16]               @ 0x0000000000002cc4 
    /*00002cb0*/ ADD         R1, SP, #52                 @ 0x34 
    /*00002cb4*/ BL          0x0000000000002CB4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002cb8*/ MOVW        R0, #32777                  @ 0x8009 
    /*00002cbc*/ MOVT        R0, #40997                  @ 0xa025 
    /*00002cc0*/ B           GDC_CancelJobByModDev_x2b18
    /*00002cc4*/ ANDEQ       R0, R0, R0, ASR #32 
    /*00002cc8*/ ANDEQ       R0, R0, R4, ROR R2 
FUNC_END GDC_CancelJobByModDev


FUNC_BEGIN GDC_InitJobProcInfo
    /*00002ccc*/ PUSH        {R4, LR} 
    /*00002cd0*/ SUBS        R4, R0, #0 
    /*00002cd4*/ BEQ         GDC_InitJobProcInfo_x2cf4
    GDC_InitJobProcInfo_x2cd8:
    /*00002cd8*/ MOV         R2, #68                     @ 0x44 
    /*00002cdc*/ MOV         R1, #0 
    /*00002ce0*/ MOV         R0, R4 
    /*00002ce4*/ BL          0x0000000000002CE4          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00002ce8*/ MOV         R3, #0 
    /*00002cec*/ STR         R3, [R4] 
    /*00002cf0*/ POP         {R4, PC} 
    GDC_InitJobProcInfo_x2cf4:
    /*00002cf4*/ MOVW        R3, #0                      @ .LC154 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x16a0] 
    /*00002cf8*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00002cfc*/ MOVT        R3, #0                      @ .LC154 [R_ARM_MOVT_ABS: .rodata.str1.4+0x16a0] 
    /*00002d00*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00002d04*/ MOVW        R2, #683                    @ 0x2ab 
    /*00002d08*/ LDR         R1, [PC, #4]                @ 0x0000000000002d14 
    /*00002d0c*/ BL          0x0000000000002D0C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00002d10*/ B           GDC_InitJobProcInfo_x2cd8
    /*00002d14*/ ANDEQ       R0, R0, R4, LSR #5 
FUNC_END GDC_InitJobProcInfo


FUNC_BEGIN GDC_BeginJob
    /*00002d18*/ SUB         IP, R1, #7 
    /*00002d1c*/ CMP         IP, #23 
    /*00002d20*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00002d24*/ MOV         R7, R1 
    /*00002d28*/ MOVWLS      R1, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00002d2c*/ MOVTLS      R1, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00002d30*/ ADDLS       R1, R1, IP, LSL #2 
    /*00002d34*/ SUB         SP, SP, #28 
    /*00002d38*/ MOVW        R4, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00002d3c*/ MOVHI       R5, #4 
    /*00002d40*/ MOVT        R4, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00002d44*/ LDRLS       R5, [R1, #248]              @ 0xf8 
    /*00002d48*/ CMP         R0, #0 
    /*00002d4c*/ MOV         R8, R0 
    /*00002d50*/ MOV         SL, R2 
    /*00002d54*/ MOV         FP, R3 
    /*00002d58*/ LDR         R9, [R4, #4] 
    /*00002d5c*/ LDR         R6, [SP, #64]               @ 0x40 
    /*00002d60*/ BEQ         GDC_BeginJob_x2e90
    GDC_BeginJob_x2d64:
    /*00002d64*/ CMP         R6, #0 
    /*00002d68*/ BEQ         GDC_BeginJob_x2ed0
    GDC_BeginJob_x2d6c:
    /*00002d6c*/ CMP         R5, #3 
    /*00002d70*/ BHI         GDC_BeginJob_x2f18
    /*00002d74*/ ADD         R3, R4, R5, LSL #2 
    /*00002d78*/ LDR         R3, [R3, #12] 
    /*00002d7c*/ CMP         R3, SL 
    /*00002d80*/ BLS         GDC_BeginJob_x2ea0
    /*00002d84*/ ADD         R5, R4, R5, LSL #2 
    /*00002d88*/ LDR         R3, [R5, #28] 
    /*00002d8c*/ CMP         R3, FP 
    /*00002d90*/ BLS         GDC_BeginJob_x2f30
    /*00002d94*/ LDR         R3, [R6, #20] 
    /*00002d98*/ CMP         R3, #1 
    /*00002d9c*/ BHI         GDC_BeginJob_x2f00
    /*00002da0*/ LDR         R3, [R4] 
    /*00002da4*/ CMP         R3, #1 
    /*00002da8*/ BEQ         GDC_BeginJob_x2dc0
    /*00002dac*/ BL          0x0000000000000CEC 
    /*00002db0*/ CMP         R0, #0 
    /*00002db4*/ BEQ         GDC_BeginJob_x2dc0
    GDC_BeginJob_x2db8:
    /*00002db8*/ ADD         SP, SP, #28 
    /*00002dbc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_BeginJob_x2dc0:
    /*00002dc0*/ LDR         R0, [PC, #440]              @ 0x0000000000002f80 
    /*00002dc4*/ ADD         R1, SP, #20 
    /*00002dc8*/ BL          0x0000000000002DC8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00002dcc*/ MOV         R0, R9 
    /*00002dd0*/ BL          0x0000000000002DD0          @ GDC_GetJobFromFreeList [R_ARM_CALL: .text+0x10260] 
    /*00002dd4*/ SUBS        R4, R0, #0 
    /*00002dd8*/ BEQ         GDC_BeginJob_x2f48
    /*00002ddc*/ LDR         R3, [R4, #80]               @ 0x50 
    /*00002de0*/ ADD         R1, SP, #20 
    /*00002de4*/ LDR         R0, [PC, #404]              @ 0x0000000000002f80 
    /*00002de8*/ ADD         R3, R3, #1 
    /*00002dec*/ STR         R3, [R4, #80]               @ 0x50 
    /*00002df0*/ BL          0x0000000000002DF0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002df4*/ LDR         R3, [R4, #16] 
    /*00002df8*/ STR         R7, [R4, #28] 
    /*00002dfc*/ CMP         R3, #0 
    /*00002e00*/ STR         SL, [R4, #32] 
    /*00002e04*/ STR         FP, [R4, #36]               @ 0x24 
    /*00002e08*/ BNE         GDC_BeginJob_x2ee0
    GDC_BeginJob_x2e0c:
    /*00002e0c*/ ADD         R0, R4, #116                @ 0x74 
    /*00002e10*/ BL          0x0000000000002E10          @ GDC_InitJobProcInfo [R_ARM_CALL: .text+0x2ccc] 
    /*00002e14*/ MOV         R2, #36                     @ 0x24 
    /*00002e18*/ MOV         R1, R6 
    /*00002e1c*/ ADD         R0, R4, #44                 @ 0x2c 
    /*00002e20*/ BL          0x0000000000002E20          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00002e24*/ ADD         R1, SP, #20 
    /*00002e28*/ LDR         R0, [PC, #336]              @ 0x0000000000002f80 
    /*00002e2c*/ BL          0x0000000000002E2C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00002e30*/ MOV         R3, #1 
    /*00002e34*/ MOV         R0, R9 
    /*00002e38*/ STR         R3, [R4, #16] 
    /*00002e3c*/ MOV         R1, R4 
    /*00002e40*/ BL          0x0000000000002E40          @ GDC_PutJobToCreatedList [R_ARM_CALL: .text+0x10810] 
    /*00002e44*/ ADD         R1, SP, #20 
    /*00002e48*/ LDR         R0, [PC, #304]              @ 0x0000000000002f80 
    /*00002e4c*/ BL          0x0000000000002E4C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002e50*/ LDR         R1, [R4, #88]               @ 0x58 
    /*00002e54*/ STR         R4, [SP, #8] 
    /*00002e58*/ MOVW        R0, #1014                   @ 0x3f6 
    /*00002e5c*/ LDR         R3, [PC, #288]              @ 0x0000000000002f84 
    /*00002e60*/ MOVW        R2, #0                      @ .LC158 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1748] 
    /*00002e64*/ STR         R1, [R8] 
    /*00002e68*/ MOVT        R2, #0                      @ .LC158 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1748] 
    /*00002e6c*/ LDR         IP, [R4, #88]               @ 0x58 
    /*00002e70*/ MOV         R1, #37                     @ 0x25 
    /*00002e74*/ STR         R0, [SP] 
    /*00002e78*/ MOV         R0, #7 
    /*00002e7c*/ STR         IP, [SP, #4] 
    /*00002e80*/ BL          0x0000000000002E80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002e84*/ MOV         R0, #0 
    /*00002e88*/ ADD         SP, SP, #28 
    /*00002e8c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_BeginJob_x2e90:
    /*00002e90*/ BL          0x0000000000000CB0 
    /*00002e94*/ CMP         R0, #0 
    /*00002e98*/ BNE         GDC_BeginJob_x2db8
    /*00002e9c*/ B           GDC_BeginJob_x2d64
    GDC_BeginJob_x2ea0:
    /*00002ea0*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfb4] 
    /*00002ea4*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfb4] 
    /*00002ea8*/ MOV         R3, #964                    @ 0x3c4 
    /*00002eac*/ STR         SL, [SP, #4] 
    /*00002eb0*/ STR         R3, [SP] 
    GDC_BeginJob_x2eb4:
    /*00002eb4*/ LDR         R3, [PC, #200]              @ 0x0000000000002f84 
    /*00002eb8*/ MOV         R1, #37                     @ 0x25 
    /*00002ebc*/ MOV         R0, #3 
    /*00002ec0*/ BL          0x0000000000002EC0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002ec4*/ MOVW        R0, #32771                  @ 0x8003 
    /*00002ec8*/ MOVT        R0, #40997                  @ 0xa025 
    /*00002ecc*/ B           GDC_BeginJob_x2db8
    GDC_BeginJob_x2ed0:
    /*00002ed0*/ BL          0x0000000000000CB0 
    /*00002ed4*/ CMP         R0, #0 
    /*00002ed8*/ BNE         GDC_BeginJob_x2db8
    /*00002edc*/ B           GDC_BeginJob_x2d6c
    GDC_BeginJob_x2ee0:
    /*00002ee0*/ MOVW        R3, #0                      @ .LC157 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1720] 
    /*00002ee4*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00002ee8*/ MOVT        R3, #0                      @ .LC157 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1720] 
    /*00002eec*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00002ef0*/ MOV         R2, #992                    @ 0x3e0 
    /*00002ef4*/ LDR         R1, [PC, #136]              @ 0x0000000000002f84 
    /*00002ef8*/ BL          0x0000000000002EF8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00002efc*/ B           GDC_BeginJob_x2e0c
    GDC_BeginJob_x2f00:
    /*00002f00*/ STR         R3, [SP, #4] 
    /*00002f04*/ MOVW        R2, #0                      @ .LC155 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x16b4] 
    /*00002f08*/ MOVW        R3, #966                    @ 0x3c6 
    /*00002f0c*/ MOVT        R2, #0                      @ .LC155 [R_ARM_MOVT_ABS: .rodata.str1.4+0x16b4] 
    /*00002f10*/ STR         R3, [SP] 
    /*00002f14*/ B           GDC_BeginJob_x2eb4
    GDC_BeginJob_x2f18:
    /*00002f18*/ MOVW        R3, #963                    @ 0x3c3 
    /*00002f1c*/ MOVW        R2, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf1c] 
    /*00002f20*/ STR         R7, [SP, #4] 
    /*00002f24*/ MOVT        R2, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf1c] 
    /*00002f28*/ STR         R3, [SP] 
    /*00002f2c*/ B           GDC_BeginJob_x2eb4
    GDC_BeginJob_x2f30:
    /*00002f30*/ MOVW        R3, #965                    @ 0x3c5 
    /*00002f34*/ MOVW        R2, #0                      @ .LC126 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1050] 
    /*00002f38*/ STR         FP, [SP, #4] 
    /*00002f3c*/ MOVT        R2, #0                      @ .LC126 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1050] 
    /*00002f40*/ STR         R3, [SP] 
    /*00002f44*/ B           GDC_BeginJob_x2eb4
    GDC_BeginJob_x2f48:
    /*00002f48*/ MOV         R3, #976                    @ 0x3d0 
    /*00002f4c*/ MOV         R1, #37                     @ 0x25 
    /*00002f50*/ STR         R3, [SP] 
    /*00002f54*/ MOVW        R2, #0                      @ .LC156 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x16f4] 
    /*00002f58*/ LDR         R3, [PC, #36]               @ 0x0000000000002f84 
    /*00002f5c*/ MOVT        R2, #0                      @ .LC156 [R_ARM_MOVT_ABS: .rodata.str1.4+0x16f4] 
    /*00002f60*/ MOV         R0, #2 
    /*00002f64*/ BL          0x0000000000002F64          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002f68*/ LDR         R0, [PC, #16]               @ 0x0000000000002f80 
    /*00002f6c*/ ADD         R1, SP, #20 
    /*00002f70*/ BL          0x0000000000002F70          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002f74*/ MOVW        R0, #32782                  @ 0x800e 
    /*00002f78*/ MOVT        R0, #40997                  @ 0xa025 
    /*00002f7c*/ B           GDC_BeginJob_x2db8
    /*00002f80*/ ANDEQ       R0, R0, R0, ASR #32 
    /*00002f84*/ @           <UNDEFINED> instruction: 0x000002b8 
FUNC_END GDC_BeginJob


FUNC_BEGIN GDC_AddJobProcArea
    /*00002f88*/ PUSH        {R4, R5, R6, LR} 
    /*00002f8c*/ SUBS        R4, R0, #0 
    /*00002f90*/ MOV         R6, R1 
    /*00002f94*/ MOV         R5, R2 
    /*00002f98*/ BEQ         GDC_AddJobProcArea_x2fc4
    GDC_AddJobProcArea_x2f9c:
    /*00002f9c*/ LDR         R3, [R4, #12] 
    /*00002fa0*/ LDR         R1, [R4, #20] 
    /*00002fa4*/ LDR         R2, [R4, #24] 
    /*00002fa8*/ ADD         R3, R3, #1 
    /*00002fac*/ ADD         R1, R1, R6 
    /*00002fb0*/ STR         R3, [R4, #12] 
    /*00002fb4*/ ADD         R2, R2, R5 
    /*00002fb8*/ STR         R1, [R4, #20] 
    /*00002fbc*/ STR         R2, [R4, #24] 
    /*00002fc0*/ POP         {R4, R5, R6, PC} 
    GDC_AddJobProcArea_x2fc4:
    /*00002fc4*/ MOVW        R3, #0                      @ .LC154 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x16a0] 
    /*00002fc8*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00002fcc*/ MOVT        R3, #0                      @ .LC154 [R_ARM_MOVT_ABS: .rodata.str1.4+0x16a0] 
    /*00002fd0*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00002fd4*/ MOVW        R2, #694                    @ 0x2b6 
    /*00002fd8*/ LDR         R1, [PC, #4]                @ 0x0000000000002fe4 
    /*00002fdc*/ BL          0x0000000000002FDC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00002fe0*/ B           GDC_AddJobProcArea_x2f9c
    /*00002fe4*/ ANDEQ       R0, R0, R8, ASR #5 
FUNC_END GDC_AddJobProcArea


FUNC_BEGIN GDC_AddCorrectionTask
    /*00002fe8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00002fec*/ SUBS        R6, R0, #0 
    /*00002ff0*/ SUB         SP, SP, #24 
    /*00002ff4*/ BLT         GDC_AddCorrectionTask_x324c
    /*00002ff8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00002ffc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00003000*/ LDR         R3, [R3] 
    /*00003004*/ CMP         R3, R6 
    /*00003008*/ BLS         GDC_AddCorrectionTask_x324c
    /*0000300c*/ CMP         R2, #0 
    /*00003010*/ MOV         R4, R1 
    /*00003014*/ MOV         R7, R2 
    /*00003018*/ BEQ         GDC_AddCorrectionTask_x31c8
    GDC_AddCorrectionTask_x301c:
    /*0000301c*/ CMP         R4, #0 
    /*00003020*/ BEQ         GDC_AddCorrectionTask_x3284
    GDC_AddCorrectionTask_x3024:
    /*00003024*/ MOVW        R5, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00003028*/ MOVT        R5, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000302c*/ LDR         R3, [R5] 
    /*00003030*/ CMP         R3, #1 
    /*00003034*/ BEQ         GDC_AddCorrectionTask_x3050
    /*00003038*/ BL          0x0000000000000CEC 
    /*0000303c*/ SUBS        R9, R0, #0 
    /*00003040*/ BEQ         GDC_AddCorrectionTask_x3050
    GDC_AddCorrectionTask_x3044:
    /*00003044*/ MOV         R0, R9 
    /*00003048*/ ADD         SP, SP, #24 
    /*0000304c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    GDC_AddCorrectionTask_x3050:
    /*00003050*/ LDR         R3, [R5, #4] 
    /*00003054*/ LDR         R3, [R3, #4] 
    /*00003058*/ LDR         R8, [R3, R6, LSL #2] 
    /*0000305c*/ CMP         R8, #0 
    /*00003060*/ BEQ         GDC_AddCorrectionTask_x3304
    GDC_AddCorrectionTask_x3064:
    /*00003064*/ LDR         R1, [R4, #752]              @ 0x2f0 
    /*00003068*/ SUB         R3, R1, #7 
    /*0000306c*/ CMP         R3, #23 
    /*00003070*/ BHI         GDC_AddCorrectionTask_x321c
    /*00003074*/ MOVW        R9, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00003078*/ MOVT        R9, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*0000307c*/ ADD         R3, R9, R3, LSL #2 
    /*00003080*/ LDR         R2, [R3, #248]              @ 0xf8 
    /*00003084*/ CMP         R2, #3 
    /*00003088*/ BHI         GDC_AddCorrectionTask_x321c
    /*0000308c*/ LDR         R3, [R8, #28] 
    /*00003090*/ CMP         R1, R3 
    /*00003094*/ BNE         GDC_AddCorrectionTask_x3324
    /*00003098*/ ADD         R1, R5, R2, LSL #2 
    /*0000309c*/ LDR         R0, [R4, #756]              @ 0x2f4 
    /*000030a0*/ LDR         R3, [R1, #12] 
    /*000030a4*/ CMP         R3, R0 
    /*000030a8*/ BLS         GDC_AddCorrectionTask_x3344
    /*000030ac*/ LDR         R3, [R8, #32] 
    /*000030b0*/ CMP         R0, R3 
    /*000030b4*/ BNE         GDC_AddCorrectionTask_x3294
    /*000030b8*/ ADD         R2, R5, R2, LSL #2 
    /*000030bc*/ LDR         R1, [R4, #760]              @ 0x2f8 
    /*000030c0*/ LDR         R3, [R2, #28] 
    /*000030c4*/ CMP         R3, R1 
    /*000030c8*/ BLS         GDC_AddCorrectionTask_x3360
    /*000030cc*/ LDR         R3, [R8, #36]               @ 0x24 
    /*000030d0*/ CMP         R1, R3 
    /*000030d4*/ STRNE       R1, [SP, #4] 
    /*000030d8*/ STRNE       R3, [SP, #8] 
    /*000030dc*/ ADDNE       R3, R9, #732                @ 0x2dc 
    /*000030e0*/ MOVWNE      R1, #1144                   @ 0x478 
    /*000030e4*/ BNE         GDC_AddCorrectionTask_x32a4
    /*000030e8*/ LDR         R0, [PC, #840]              @ 0x0000000000003438 
    /*000030ec*/ ADD         R1, SP, #20 
    /*000030f0*/ BL          0x00000000000030F0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000030f4*/ LDR         R2, [R8, #92]               @ 0x5c 
    /*000030f8*/ CMP         R2, #1 
    /*000030fc*/ BEQ         GDC_AddCorrectionTask_x3408
    /*00003100*/ LDR         R3, [R8, #64]               @ 0x40 
    /*00003104*/ CMP         R3, #0 
    /*00003108*/ BEQ         GDC_AddCorrectionTask_x337c
    /*0000310c*/ LDR         R3, [R8, #16] 
    /*00003110*/ CMP         R3, #1 
    /*00003114*/ BNE         GDC_AddCorrectionTask_x32c8
    /*00003118*/ LDR         R0, [R5, #4] 
    /*0000311c*/ ADD         R0, R0, #604                @ 0x25c 
    /*00003120*/ BL          0x0000000000003120          @ GDC_GetTaskFromFreeList [R_ARM_CALL: .text+0x1008c] 
    /*00003124*/ SUBS        SL, R0, #0 
    /*00003128*/ BEQ         GDC_AddCorrectionTask_x33c4
    /*0000312c*/ ADD         R6, SL, #8 
    /*00003130*/ MOV         R2, #776                    @ 0x308 
    /*00003134*/ MOV         R1, R4 
    /*00003138*/ MOV         R0, R6 
    /*0000313c*/ BL          0x000000000000313C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00003140*/ MOV         R2, #952                    @ 0x3b8 
    /*00003144*/ MOV         R1, R7 
    /*00003148*/ ADD         R0, SL, #800                @ 0x320 
    /*0000314c*/ BL          0x000000000000314C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00003150*/ LDR         R3, [R8, #28] 
    /*00003154*/ CMP         R3, #30 
    /*00003158*/ BEQ         GDC_AddCorrectionTask_x3264
    GDC_AddCorrectionTask_x315c:
    /*0000315c*/ MOV         R3, #0 
    /*00003160*/ STR         R3, [SL, #1072]             @ 0x430 
    GDC_AddCorrectionTask_x3164:
    /*00003164*/ MOV         R3, #0 
    /*00003168*/ STR         R3, [SL, #788]              @ 0x314 
    /*0000316c*/ LDR         R2, [R4, #348]              @ 0x15c 
    /*00003170*/ MOV         R0, R6 
    /*00003174*/ CMP         R2, #39                     @ 0x27 
    /*00003178*/ MOVNE       R3, #2 
    /*0000317c*/ STR         R3, [SL, #792]              @ 0x318 
    /*00003180*/ BL          0x0000000000003180          @ GDC_VbAdd [R_ARM_CALL: .text+0x174c] 
    /*00003184*/ SUBS        R9, R0, #0 
    /*00003188*/ BNE         GDC_AddCorrectionTask_x31d8
    /*0000318c*/ MOV         R0, SL 
    /*00003190*/ MOV         R1, R8 
    /*00003194*/ BL          0x0000000000003194          @ GDC_PutTaskToJob [R_ARM_CALL: .text+0x10220] 
    /*00003198*/ ADD         R1, SP, #20 
    /*0000319c*/ LDR         R0, [PC, #660]              @ 0x0000000000003438 
    /*000031a0*/ BL          0x00000000000031A0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000031a4*/ LDR         R2, [R4, #336]              @ 0x150 
    /*000031a8*/ LDR         IP, [R4, #340]              @ 0x154 
    /*000031ac*/ ADD         R0, R8, #116                @ 0x74 
    /*000031b0*/ LDR         R3, [R4] 
    /*000031b4*/ LDR         R1, [R4, #4] 
    /*000031b8*/ MUL         R2, IP, R2 
    /*000031bc*/ MUL         R1, R1, R3 
    /*000031c0*/ BL          0x00000000000031C0          @ GDC_AddJobProcArea [R_ARM_CALL: .text+0x2f88] 
    /*000031c4*/ B           GDC_AddCorrectionTask_x3044
    GDC_AddCorrectionTask_x31c8:
    /*000031c8*/ BL          0x0000000000000CB0 
    /*000031cc*/ SUBS        R9, R0, #0 
    /*000031d0*/ BNE         GDC_AddCorrectionTask_x3044
    /*000031d4*/ B           GDC_AddCorrectionTask_x301c
    GDC_AddCorrectionTask_x31d8:
    /*000031d8*/ LDR         R0, [R5, #4] 
    /*000031dc*/ MOV         R1, SL 
    /*000031e0*/ ADD         R0, R0, #604                @ 0x25c 
    /*000031e4*/ BL          0x00000000000031E4          @ GDC_PutTaskToFreeList [R_ARM_CALL: .text+0x10138] 
    /*000031e8*/ ADD         R1, SP, #20 
    /*000031ec*/ LDR         R0, [PC, #580]              @ 0x0000000000003438 
    /*000031f0*/ BL          0x00000000000031F0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000031f4*/ MOVW        R3, #1229                   @ 0x4cd 
    /*000031f8*/ STR         R9, [SP, #4] 
    /*000031fc*/ MOVW        R2, #0                      @ .LC162 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1868] 
    /*00003200*/ STR         R3, [SP] 
    /*00003204*/ MOVT        R2, #0                      @ .LC162 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1868] 
    /*00003208*/ LDR         R3, [PC, #556]              @ 0x000000000000343c 
    /*0000320c*/ MOV         R1, #37                     @ 0x25 
    /*00003210*/ MOV         R0, #3 
    /*00003214*/ BL          0x0000000000003214          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003218*/ B           GDC_AddCorrectionTask_x3044
    GDC_AddCorrectionTask_x321c:
    /*0000321c*/ MOVW        R2, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf1c] 
    /*00003220*/ MOVT        R2, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf1c] 
    /*00003224*/ MOVW        R3, #1142                   @ 0x476 
    /*00003228*/ STR         R1, [SP, #4] 
    /*0000322c*/ STR         R3, [SP] 
    GDC_AddCorrectionTask_x3230:
    /*00003230*/ LDR         R3, [PC, #516]              @ 0x000000000000343c 
    GDC_AddCorrectionTask_x3234:
    /*00003234*/ MOV         R1, #37                     @ 0x25 
    /*00003238*/ MOV         R0, #3 
    /*0000323c*/ MOVW        R9, #32771                  @ 0x8003 
    /*00003240*/ BL          0x0000000000003240          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003244*/ MOVT        R9, #40997                  @ 0xa025 
    /*00003248*/ B           GDC_AddCorrectionTask_x3044
    GDC_AddCorrectionTask_x324c:
    /*0000324c*/ MOVW        R3, #1127                   @ 0x467 
    /*00003250*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xecc] 
    /*00003254*/ STR         R6, [SP, #4] 
    /*00003258*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0xecc] 
    /*0000325c*/ STR         R3, [SP] 
    /*00003260*/ B           GDC_AddCorrectionTask_x3230
    GDC_AddCorrectionTask_x3264:
    /*00003264*/ LDR         R1, [R7, #8] 
    /*00003268*/ CMP         R1, #1 
    /*0000326c*/ BNE         GDC_AddCorrectionTask_x315c
    /*00003270*/ LDRD        R2, [R8, #96]               @ 0x60 
    /*00003274*/ ADD         R0, SL, #1120               @ 0x460 
    /*00003278*/ STRD        R2, [R0] 
    /*0000327c*/ STR         R1, [SL, #1072]             @ 0x430 
    /*00003280*/ B           GDC_AddCorrectionTask_x3164
    GDC_AddCorrectionTask_x3284:
    /*00003284*/ BL          0x0000000000000CB0 
    /*00003288*/ SUBS        R9, R0, #0 
    /*0000328c*/ BNE         GDC_AddCorrectionTask_x3044
    /*00003290*/ B           GDC_AddCorrectionTask_x3024
    GDC_AddCorrectionTask_x3294:
    /*00003294*/ STR         R3, [SP, #8] 
    /*00003298*/ ADD         R3, R9, #732                @ 0x2dc 
    /*0000329c*/ MOVW        R1, #1143                   @ 0x477 
    /*000032a0*/ STR         R0, [SP, #4] 
    GDC_AddCorrectionTask_x32a4:
    /*000032a4*/ MOVW        R2, #0                      @ .LC125 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xff8] 
    /*000032a8*/ MOVT        R2, #0                      @ .LC125 [R_ARM_MOVT_ABS: .rodata.str1.4+0xff8] 
    /*000032ac*/ STR         R1, [SP] 
    GDC_AddCorrectionTask_x32b0:
    /*000032b0*/ MOV         R1, #37                     @ 0x25 
    /*000032b4*/ MOV         R0, #3 
    /*000032b8*/ MOVW        R9, #32771                  @ 0x8003 
    /*000032bc*/ BL          0x00000000000032BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000032c0*/ MOVT        R9, #40997                  @ 0xa025 
    /*000032c4*/ B           GDC_AddCorrectionTask_x3044
    GDC_AddCorrectionTask_x32c8:
    /*000032c8*/ STR         R3, [SP, #4] 
    /*000032cc*/ MOVW        R2, #0                      @ .LC160 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x17d4] 
    /*000032d0*/ MOVW        R3, #1178                   @ 0x49a 
    /*000032d4*/ MOVT        R2, #0                      @ .LC160 [R_ARM_MOVT_ABS: .rodata.str1.4+0x17d4] 
    /*000032d8*/ STR         R3, [SP] 
    /*000032dc*/ MOV         R1, #37                     @ 0x25 
    /*000032e0*/ LDR         R3, [PC, #340]              @ 0x000000000000343c 
    /*000032e4*/ MOV         R0, #3 
    /*000032e8*/ BL          0x00000000000032E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_AddCorrectionTask_x32ec:
    /*000032ec*/ ADD         R1, SP, #20 
    /*000032f0*/ LDR         R0, [PC, #320]              @ 0x0000000000003438 
    /*000032f4*/ MOVW        R9, #32777                  @ 0x8009 
    /*000032f8*/ BL          0x00000000000032F8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000032fc*/ MOVT        R9, #40997                  @ 0xa025 
    /*00003300*/ B           GDC_AddCorrectionTask_x3044
    GDC_AddCorrectionTask_x3304:
    /*00003304*/ MOVW        R3, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf0c] 
    /*00003308*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*0000330c*/ MOVT        R3, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf0c] 
    /*00003310*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00003314*/ MOVW        R2, #1134                   @ 0x46e 
    /*00003318*/ LDR         R1, [PC, #284]              @ 0x000000000000343c 
    /*0000331c*/ BL          0x000000000000331C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00003320*/ B           GDC_AddCorrectionTask_x3064
    GDC_AddCorrectionTask_x3324:
    /*00003324*/ STR         R3, [SP, #8] 
    /*00003328*/ MOVW        R2, #0                      @ .LC123 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf58] 
    /*0000332c*/ STR         R1, [SP, #4] 
    /*00003330*/ ADD         R3, R9, #732                @ 0x2dc 
    /*00003334*/ MOVW        R1, #1142                   @ 0x476 
    /*00003338*/ MOVT        R2, #0                      @ .LC123 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf58] 
    /*0000333c*/ STR         R1, [SP] 
    /*00003340*/ B           GDC_AddCorrectionTask_x32b0
    GDC_AddCorrectionTask_x3344:
    /*00003344*/ MOVW        R1, #1143                   @ 0x477 
    /*00003348*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfb4] 
    /*0000334c*/ STR         R0, [SP, #4] 
    /*00003350*/ ADD         R3, R9, #732                @ 0x2dc 
    /*00003354*/ STR         R1, [SP] 
    /*00003358*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfb4] 
    /*0000335c*/ B           GDC_AddCorrectionTask_x3234
    GDC_AddCorrectionTask_x3360:
    /*00003360*/ STR         R1, [SP, #4] 
    /*00003364*/ MOVW        R2, #0                      @ .LC126 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1050] 
    /*00003368*/ MOVW        R1, #1144                   @ 0x478 
    /*0000336c*/ ADD         R3, R9, #732                @ 0x2dc 
    /*00003370*/ STR         R1, [SP] 
    /*00003374*/ MOVT        R2, #0                      @ .LC126 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1050] 
    /*00003378*/ B           GDC_AddCorrectionTask_x3234
    GDC_AddCorrectionTask_x337c:
    /*0000337c*/ ADD         R1, SP, #20 
    /*00003380*/ LDR         R0, [PC, #176]              @ 0x0000000000003438 
    /*00003384*/ BL          0x0000000000003384          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003388*/ LDR         R0, [R8, #16] 
    /*0000338c*/ ADD         R3, R9, #732                @ 0x2dc 
    /*00003390*/ MOVW        LR, #1172                   @ 0x494 
    /*00003394*/ MOVW        R2, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1100] 
    /*00003398*/ MOV         R1, #37                     @ 0x25 
    /*0000339c*/ STR         R0, [SP, #8] 
    /*000033a0*/ MOVT        R2, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1100] 
    /*000033a4*/ LDR         IP, [R8, #64]               @ 0x40 
    /*000033a8*/ MOV         R0, #3 
    /*000033ac*/ STR         LR, [SP] 
    /*000033b0*/ MOVW        R9, #32777                  @ 0x8009 
    /*000033b4*/ MOVT        R9, #40997                  @ 0xa025 
    /*000033b8*/ STR         IP, [SP, #4] 
    /*000033bc*/ BL          0x00000000000033BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000033c0*/ B           GDC_AddCorrectionTask_x3044
    GDC_AddCorrectionTask_x33c4:
    /*000033c4*/ LDR         R3, [R8, #28] 
    /*000033c8*/ MOVW        R1, #1188                   @ 0x4a4 
    /*000033cc*/ STR         R6, [SP, #4] 
    /*000033d0*/ MOVW        R2, #0                      @ .LC161 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x181c] 
    /*000033d4*/ STR         R1, [SP] 
    /*000033d8*/ MOVT        R2, #0                      @ .LC161 [R_ARM_MOVT_ABS: .rodata.str1.4+0x181c] 
    /*000033dc*/ STR         R3, [SP, #8] 
    /*000033e0*/ MOV         R1, #37                     @ 0x25 
    /*000033e4*/ LDR         R3, [PC, #80]               @ 0x000000000000343c 
    /*000033e8*/ MOV         R0, #3 
    /*000033ec*/ BL          0x00000000000033EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000033f0*/ ADD         R1, SP, #20 
    /*000033f4*/ LDR         R0, [PC, #60]               @ 0x0000000000003438 
    /*000033f8*/ MOVW        R9, #32782                  @ 0x800e 
    /*000033fc*/ BL          0x00000000000033FC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003400*/ MOVT        R9, #40997                  @ 0xa025 
    /*00003404*/ B           GDC_AddCorrectionTask_x3044
    GDC_AddCorrectionTask_x3408:
    /*00003408*/ LDR         R1, [R8, #64]               @ 0x40 
    /*0000340c*/ MOVW        R0, #1163                   @ 0x48b 
    /*00003410*/ STR         R2, [SP, #4] 
    /*00003414*/ ADD         R3, R9, #732                @ 0x2dc 
    /*00003418*/ STR         R0, [SP] 
    /*0000341c*/ MOVW        R2, #0                      @ .LC159 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x178c] 
    /*00003420*/ STR         R1, [SP, #8] 
    /*00003424*/ MOVT        R2, #0                      @ .LC159 [R_ARM_MOVT_ABS: .rodata.str1.4+0x178c] 
    /*00003428*/ MOV         R1, #37                     @ 0x25 
    /*0000342c*/ MOV         R0, #3 
    /*00003430*/ BL          0x0000000000003430          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003434*/ B           GDC_AddCorrectionTask_x32ec
    /*00003438*/ ANDEQ       R0, R0, R0, ASR #32 
    /*0000343c*/ LDRDEQ      R0, [R0], -IP 
FUNC_END GDC_AddCorrectionTask


FUNC_BEGIN GDC_AddLDCOrPMFTask
    /*00003440*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00003444*/ SUBS        R6, R0, #0 
    /*00003448*/ SUB         SP, SP, #24 
    /*0000344c*/ BLT         GDC_AddLDCOrPMFTask_x370c
    /*00003450*/ MOV         R9, R3 
    /*00003454*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00003458*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000345c*/ LDR         R3, [R3] 
    /*00003460*/ CMP         R3, R6 
    /*00003464*/ BLS         GDC_AddLDCOrPMFTask_x370c
    /*00003468*/ CMP         R1, #0 
    /*0000346c*/ MOV         R4, R1 
    /*00003470*/ MOV         R7, R2 
    /*00003474*/ BEQ         GDC_AddLDCOrPMFTask_x36b0
    GDC_AddLDCOrPMFTask_x3478:
    /*00003478*/ CMP         R7, #0 
    /*0000347c*/ BEQ         GDC_AddLDCOrPMFTask_x3514
    /*00003480*/ CMP         R9, #0 
    /*00003484*/ BEQ         GDC_AddLDCOrPMFTask_x3778
    GDC_AddLDCOrPMFTask_x3488:
    /*00003488*/ MOVW        R5, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000348c*/ MOVT        R5, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00003490*/ LDR         R3, [R5] 
    /*00003494*/ CMP         R3, #1 
    /*00003498*/ BNE         GDC_AddLDCOrPMFTask_x36c0
    GDC_AddLDCOrPMFTask_x349c:
    /*0000349c*/ ADD         R1, R4, #336                @ 0x150 
    /*000034a0*/ LDR         R3, [R9, #4] 
    /*000034a4*/ LDR         R2, [R9, #8] 
    /*000034a8*/ MOV         R0, R4 
    /*000034ac*/ BL          0x00000000000034AC          @ GDC_CheckLDCImage [R_ARM_CALL: .text+0x1254] 
    /*000034b0*/ SUBS        R8, R0, #0 
    /*000034b4*/ BNE         GDC_AddLDCOrPMFTask_x3508
    GDC_AddLDCOrPMFTask_x34b8:
    /*000034b8*/ LDR         R3, [R5, #4] 
    /*000034bc*/ LDR         R3, [R3, #4] 
    /*000034c0*/ LDR         R6, [R3, R6, LSL #2] 
    /*000034c4*/ CMP         R6, #0 
    /*000034c8*/ BEQ         GDC_AddLDCOrPMFTask_x37fc
    GDC_AddLDCOrPMFTask_x34cc:
    /*000034cc*/ LDR         R1, [R4, #752]              @ 0x2f0 
    /*000034d0*/ SUB         R3, R1, #7 
    /*000034d4*/ CMP         R3, #23 
    /*000034d8*/ BLS         GDC_AddLDCOrPMFTask_x355c
    GDC_AddLDCOrPMFTask_x34dc:
    /*000034dc*/ MOVW        R2, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf1c] 
    /*000034e0*/ MOVT        R2, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf1c] 
    /*000034e4*/ MOVW        R3, #1304                   @ 0x518 
    /*000034e8*/ STR         R1, [SP, #4] 
    /*000034ec*/ STR         R3, [SP] 
    GDC_AddLDCOrPMFTask_x34f0:
    /*000034f0*/ LDR         R3, [PC, #1052]             @ 0x0000000000003914 
    GDC_AddLDCOrPMFTask_x34f4:
    /*000034f4*/ MOV         R1, #37                     @ 0x25 
    /*000034f8*/ MOV         R0, #3 
    /*000034fc*/ BL          0x00000000000034FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003500*/ MOVW        R8, #32771                  @ 0x8003 
    /*00003504*/ MOVT        R8, #40997                  @ 0xa025 
    GDC_AddLDCOrPMFTask_x3508:
    /*00003508*/ MOV         R0, R8 
    /*0000350c*/ ADD         SP, SP, #24 
    /*00003510*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    GDC_AddLDCOrPMFTask_x3514:
    /*00003514*/ LDR         R3, [SP, #56]               @ 0x38 
    /*00003518*/ CMP         R3, #0 
    /*0000351c*/ BEQ         GDC_AddLDCOrPMFTask_x3768
    GDC_AddLDCOrPMFTask_x3520:
    /*00003520*/ MOVW        R5, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00003524*/ MOVT        R5, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00003528*/ LDR         R3, [R5] 
    /*0000352c*/ CMP         R3, #1 
    /*00003530*/ BEQ         GDC_AddLDCOrPMFTask_x3540
    /*00003534*/ BL          0x0000000000000CEC 
    /*00003538*/ SUBS        R8, R0, #0 
    /*0000353c*/ BNE         GDC_AddLDCOrPMFTask_x3508
    GDC_AddLDCOrPMFTask_x3540:
    /*00003540*/ ADD         R1, R4, #336                @ 0x150 
    /*00003544*/ LDR         R2, [SP, #56]               @ 0x38 
    /*00003548*/ MOV         R0, R4 
    /*0000354c*/ BL          0x000000000000354C          @ GDC_CheckPMFInfo [R_ARM_CALL: .text+0x1370] 
    /*00003550*/ SUBS        R8, R0, #0 
    /*00003554*/ BEQ         GDC_AddLDCOrPMFTask_x34b8
    /*00003558*/ B           GDC_AddLDCOrPMFTask_x3508
    GDC_AddLDCOrPMFTask_x355c:
    /*0000355c*/ MOVW        R8, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00003560*/ MOVT        R8, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00003564*/ ADD         R3, R8, R3, LSL #2 
    /*00003568*/ LDR         R2, [R3, #248]              @ 0xf8 
    /*0000356c*/ CMP         R2, #3 
    /*00003570*/ BHI         GDC_AddLDCOrPMFTask_x34dc
    /*00003574*/ LDR         R3, [R6, #28] 
    /*00003578*/ CMP         R1, R3 
    /*0000357c*/ BNE         GDC_AddLDCOrPMFTask_x381c
    /*00003580*/ ADD         R1, R5, R2, LSL #2 
    /*00003584*/ LDR         R0, [R4, #756]              @ 0x2f4 
    /*00003588*/ LDR         R3, [R1, #12] 
    /*0000358c*/ CMP         R3, R0 
    /*00003590*/ BLS         GDC_AddLDCOrPMFTask_x383c
    /*00003594*/ LDR         R3, [R6, #32] 
    /*00003598*/ CMP         R0, R3 
    /*0000359c*/ BNE         GDC_AddLDCOrPMFTask_x3788
    /*000035a0*/ ADD         R2, R5, R2, LSL #2 
    /*000035a4*/ LDR         R1, [R4, #760]              @ 0x2f8 
    /*000035a8*/ LDR         R3, [R2, #28] 
    /*000035ac*/ CMP         R3, R1 
    /*000035b0*/ BLS         GDC_AddLDCOrPMFTask_x3858
    /*000035b4*/ LDR         R3, [R6, #36]               @ 0x24 
    /*000035b8*/ CMP         R1, R3 
    /*000035bc*/ STRNE       R1, [SP, #4] 
    /*000035c0*/ STRNE       R3, [SP, #8] 
    /*000035c4*/ ADDNE       R3, R8, #756                @ 0x2f4 
    /*000035c8*/ MOVWNE      R1, #1306                   @ 0x51a 
    /*000035cc*/ BNE         GDC_AddLDCOrPMFTask_x3798
    /*000035d0*/ LDR         R0, [PC, #832]              @ 0x0000000000003918 
    /*000035d4*/ ADD         R1, SP, #20 
    /*000035d8*/ BL          0x00000000000035D8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000035dc*/ LDR         R2, [R6, #92]               @ 0x5c 
    /*000035e0*/ CMP         R2, #1 
    /*000035e4*/ BEQ         GDC_AddLDCOrPMFTask_x38cc
    /*000035e8*/ LDR         R3, [R6, #64]               @ 0x40 
    /*000035ec*/ CMP         R3, #0 
    /*000035f0*/ BEQ         GDC_AddLDCOrPMFTask_x3874
    /*000035f4*/ LDR         R2, [R6, #16] 
    /*000035f8*/ CMP         R2, #1 
    /*000035fc*/ BNE         GDC_AddLDCOrPMFTask_x37bc
    /*00003600*/ LDR         R0, [R5, #4] 
    /*00003604*/ ADD         R0, R0, #604                @ 0x25c 
    /*00003608*/ BL          0x0000000000003608          @ GDC_GetTaskFromFreeList [R_ARM_CALL: .text+0x1008c] 
    /*0000360c*/ SUBS        SL, R0, #0 
    /*00003610*/ BEQ         GDC_AddLDCOrPMFTask_x3894
    /*00003614*/ ADD         R8, SL, #8 
    /*00003618*/ MOV         R2, #776                    @ 0x308 
    /*0000361c*/ MOV         R1, R4 
    /*00003620*/ MOV         R0, R8 
    /*00003624*/ BL          0x0000000000003624          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00003628*/ CMP         R7, #0 
    /*0000362c*/ BNE         GDC_AddLDCOrPMFTask_x36d0
    /*00003630*/ MOV         R2, #208                    @ 0xd0 
    /*00003634*/ LDR         R1, [SP, #56]               @ 0x38 
    /*00003638*/ ADD         R0, SL, #800                @ 0x320 
    /*0000363c*/ BL          0x000000000000363C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00003640*/ MOV         R3, #2 
    /*00003644*/ STR         R3, [SL, #788]              @ 0x314 
    /*00003648*/ LDR         R3, [R4, #348]              @ 0x15c 
    /*0000364c*/ CMP         R3, #39                     @ 0x27 
    /*00003650*/ BEQ         GDC_AddLDCOrPMFTask_x36f4
    /*00003654*/ CMP         R3, #40                     @ 0x28 
    /*00003658*/ BNE         GDC_AddLDCOrPMFTask_x3700
    /*0000365c*/ MOV         R3, #1 
    /*00003660*/ STR         R3, [SL, #792]              @ 0x318 
    GDC_AddLDCOrPMFTask_x3664:
    /*00003664*/ MOV         R0, R8 
    /*00003668*/ BL          0x0000000000003668          @ GDC_VbAdd [R_ARM_CALL: .text+0x174c] 
    /*0000366c*/ SUBS        R8, R0, #0 
    /*00003670*/ BNE         GDC_AddLDCOrPMFTask_x3724
    /*00003674*/ MOV         R0, SL 
    /*00003678*/ MOV         R1, R6 
    /*0000367c*/ BL          0x000000000000367C          @ GDC_PutTaskToJob [R_ARM_CALL: .text+0x10220] 
    /*00003680*/ ADD         R1, SP, #20 
    /*00003684*/ LDR         R0, [PC, #652]              @ 0x0000000000003918 
    /*00003688*/ BL          0x0000000000003688          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000368c*/ LDR         R2, [R4, #336]              @ 0x150 
    /*00003690*/ LDR         IP, [R4, #340]              @ 0x154 
    /*00003694*/ ADD         R0, R6, #116                @ 0x74 
    /*00003698*/ LDR         R3, [R4] 
    /*0000369c*/ LDR         R1, [R4, #4] 
    /*000036a0*/ MUL         R2, IP, R2 
    /*000036a4*/ MUL         R1, R1, R3 
    /*000036a8*/ BL          0x00000000000036A8          @ GDC_AddJobProcArea [R_ARM_CALL: .text+0x2f88] 
    /*000036ac*/ B           GDC_AddLDCOrPMFTask_x3508
    GDC_AddLDCOrPMFTask_x36b0:
    /*000036b0*/ BL          0x0000000000000CB0 
    /*000036b4*/ SUBS        R8, R0, #0 
    /*000036b8*/ BNE         GDC_AddLDCOrPMFTask_x3508
    /*000036bc*/ B           GDC_AddLDCOrPMFTask_x3478
    GDC_AddLDCOrPMFTask_x36c0:
    /*000036c0*/ BL          0x0000000000000CEC 
    /*000036c4*/ SUBS        R8, R0, #0 
    /*000036c8*/ BNE         GDC_AddLDCOrPMFTask_x3508
    /*000036cc*/ B           GDC_AddLDCOrPMFTask_x349c
    GDC_AddLDCOrPMFTask_x36d0:
    /*000036d0*/ MOV         R1, R9 
    /*000036d4*/ MOV         R2, #720                    @ 0x2d0 
    /*000036d8*/ ADD         R0, SL, #800                @ 0x320 
    /*000036dc*/ BL          0x00000000000036DC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000036e0*/ MOV         R3, #1 
    /*000036e4*/ STR         R3, [SL, #788]              @ 0x314 
    /*000036e8*/ LDR         R3, [R4, #348]              @ 0x15c 
    /*000036ec*/ CMP         R3, #39                     @ 0x27 
    /*000036f0*/ BNE         GDC_AddLDCOrPMFTask_x3700
    GDC_AddLDCOrPMFTask_x36f4:
    /*000036f4*/ MOV         R3, #0 
    /*000036f8*/ STR         R3, [SL, #792]              @ 0x318 
    /*000036fc*/ B           GDC_AddLDCOrPMFTask_x3664
    GDC_AddLDCOrPMFTask_x3700:
    /*00003700*/ MOV         R3, #2 
    /*00003704*/ STR         R3, [SL, #792]              @ 0x318 
    /*00003708*/ B           GDC_AddLDCOrPMFTask_x3664
    GDC_AddLDCOrPMFTask_x370c:
    /*0000370c*/ MOVW        R3, #1255                   @ 0x4e7 
    /*00003710*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xecc] 
    /*00003714*/ STR         R6, [SP, #4] 
    /*00003718*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0xecc] 
    /*0000371c*/ STR         R3, [SP] 
    /*00003720*/ B           GDC_AddLDCOrPMFTask_x34f0
    GDC_AddLDCOrPMFTask_x3724:
    /*00003724*/ LDR         R0, [R5, #4] 
    /*00003728*/ MOV         R1, SL 
    /*0000372c*/ ADD         R0, R0, #604                @ 0x25c 
    /*00003730*/ BL          0x0000000000003730          @ GDC_PutTaskToFreeList [R_ARM_CALL: .text+0x10138] 
    /*00003734*/ ADD         R1, SP, #20 
    /*00003738*/ LDR         R0, [PC, #472]              @ 0x0000000000003918 
    /*0000373c*/ BL          0x000000000000373C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003740*/ MOV         R3, #1376                   @ 0x560 
    /*00003744*/ STR         R8, [SP, #4] 
    /*00003748*/ MOVW        R2, #0                      @ .LC131 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1180] 
    /*0000374c*/ STR         R3, [SP] 
    /*00003750*/ MOVT        R2, #0                      @ .LC131 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1180] 
    /*00003754*/ LDR         R3, [PC, #440]              @ 0x0000000000003914 
    /*00003758*/ MOV         R1, #37                     @ 0x25 
    /*0000375c*/ MOV         R0, #3 
    /*00003760*/ BL          0x0000000000003760          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003764*/ B           GDC_AddLDCOrPMFTask_x3508
    GDC_AddLDCOrPMFTask_x3768:
    /*00003768*/ BL          0x0000000000000CB0 
    /*0000376c*/ SUBS        R8, R0, #0 
    /*00003770*/ BNE         GDC_AddLDCOrPMFTask_x3508
    /*00003774*/ B           GDC_AddLDCOrPMFTask_x3520
    GDC_AddLDCOrPMFTask_x3778:
    /*00003778*/ BL          0x0000000000000CB0 
    /*0000377c*/ SUBS        R8, R0, #0 
    /*00003780*/ BNE         GDC_AddLDCOrPMFTask_x3508
    /*00003784*/ B           GDC_AddLDCOrPMFTask_x3488
    GDC_AddLDCOrPMFTask_x3788:
    /*00003788*/ STR         R3, [SP, #8] 
    /*0000378c*/ ADD         R3, R8, #756                @ 0x2f4 
    /*00003790*/ MOVW        R1, #1305                   @ 0x519 
    /*00003794*/ STR         R0, [SP, #4] 
    GDC_AddLDCOrPMFTask_x3798:
    /*00003798*/ MOVW        R2, #0                      @ .LC125 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xff8] 
    /*0000379c*/ MOVT        R2, #0                      @ .LC125 [R_ARM_MOVT_ABS: .rodata.str1.4+0xff8] 
    /*000037a0*/ STR         R1, [SP] 
    GDC_AddLDCOrPMFTask_x37a4:
    /*000037a4*/ MOV         R1, #37                     @ 0x25 
    /*000037a8*/ MOV         R0, #3 
    /*000037ac*/ MOVW        R8, #32771                  @ 0x8003 
    /*000037b0*/ BL          0x00000000000037B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000037b4*/ MOVT        R8, #40997                  @ 0xa025 
    /*000037b8*/ B           GDC_AddLDCOrPMFTask_x3508
    GDC_AddLDCOrPMFTask_x37bc:
    /*000037bc*/ STR         R3, [SP, #4] 
    /*000037c0*/ MOVW        R1, #1327                   @ 0x52f 
    /*000037c4*/ LDR         R3, [PC, #328]              @ 0x0000000000003914 
    /*000037c8*/ STR         R2, [SP, #8] 
    /*000037cc*/ MOVW        R2, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1100] 
    /*000037d0*/ MOVT        R2, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1100] 
    /*000037d4*/ STR         R1, [SP] 
    GDC_AddLDCOrPMFTask_x37d8:
    /*000037d8*/ MOV         R1, #37                     @ 0x25 
    /*000037dc*/ MOV         R0, #3 
    /*000037e0*/ BL          0x00000000000037E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000037e4*/ ADD         R1, SP, #20 
    /*000037e8*/ LDR         R0, [PC, #296]              @ 0x0000000000003918 
    /*000037ec*/ MOVW        R8, #32777                  @ 0x8009 
    /*000037f0*/ MOVT        R8, #40997                  @ 0xa025 
    /*000037f4*/ BL          0x00000000000037F4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000037f8*/ B           GDC_AddLDCOrPMFTask_x3508
    GDC_AddLDCOrPMFTask_x37fc:
    /*000037fc*/ MOVW        R3, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf0c] 
    /*00003800*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00003804*/ MOVT        R3, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf0c] 
    /*00003808*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*0000380c*/ MOV         R2, #1296                   @ 0x510 
    /*00003810*/ LDR         R1, [PC, #252]              @ 0x0000000000003914 
    /*00003814*/ BL          0x0000000000003814          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00003818*/ B           GDC_AddLDCOrPMFTask_x34cc
    GDC_AddLDCOrPMFTask_x381c:
    /*0000381c*/ STR         R3, [SP, #8] 
    /*00003820*/ MOVW        R2, #0                      @ .LC123 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf58] 
    /*00003824*/ STR         R1, [SP, #4] 
    /*00003828*/ ADD         R3, R8, #756                @ 0x2f4 
    /*0000382c*/ MOVW        R1, #1304                   @ 0x518 
    /*00003830*/ MOVT        R2, #0                      @ .LC123 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf58] 
    /*00003834*/ STR         R1, [SP] 
    /*00003838*/ B           GDC_AddLDCOrPMFTask_x37a4
    GDC_AddLDCOrPMFTask_x383c:
    /*0000383c*/ MOVW        R1, #1305                   @ 0x519 
    /*00003840*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfb4] 
    /*00003844*/ STR         R0, [SP, #4] 
    /*00003848*/ ADD         R3, R8, #756                @ 0x2f4 
    /*0000384c*/ STR         R1, [SP] 
    /*00003850*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfb4] 
    /*00003854*/ B           GDC_AddLDCOrPMFTask_x34f4
    GDC_AddLDCOrPMFTask_x3858:
    /*00003858*/ STR         R1, [SP, #4] 
    /*0000385c*/ MOVW        R2, #0                      @ .LC126 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1050] 
    /*00003860*/ MOVW        R1, #1306                   @ 0x51a 
    /*00003864*/ ADD         R3, R8, #756                @ 0x2f4 
    /*00003868*/ STR         R1, [SP] 
    /*0000386c*/ MOVT        R2, #0                      @ .LC126 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1050] 
    /*00003870*/ B           GDC_AddLDCOrPMFTask_x34f4
    GDC_AddLDCOrPMFTask_x3874:
    /*00003874*/ STR         R3, [SP, #8] 
    /*00003878*/ MOVW        R1, #1320                   @ 0x528 
    /*0000387c*/ MOVW        R2, #0                      @ .LC164 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x18e0] 
    /*00003880*/ ADD         R3, R8, #756                @ 0x2f4 
    /*00003884*/ STR         R7, [SP, #4] 
    /*00003888*/ MOVT        R2, #0                      @ .LC164 [R_ARM_MOVT_ABS: .rodata.str1.4+0x18e0] 
    /*0000388c*/ STR         R1, [SP] 
    /*00003890*/ B           GDC_AddLDCOrPMFTask_x37d8
    GDC_AddLDCOrPMFTask_x3894:
    /*00003894*/ MOVW        R3, #1336                   @ 0x538 
    /*00003898*/ MOV         R1, #37                     @ 0x25 
    /*0000389c*/ STR         R3, [SP] 
    /*000038a0*/ MOVW        R2, #0                      @ .LC165 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x191c] 
    /*000038a4*/ LDR         R3, [PC, #104]              @ 0x0000000000003914 
    /*000038a8*/ MOVT        R2, #0                      @ .LC165 [R_ARM_MOVT_ABS: .rodata.str1.4+0x191c] 
    /*000038ac*/ MOV         R0, #3 
    /*000038b0*/ MOVW        R8, #32782                  @ 0x800e 
    /*000038b4*/ BL          0x00000000000038B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000038b8*/ ADD         R1, SP, #20 
    /*000038bc*/ LDR         R0, [PC, #84]               @ 0x0000000000003918 
    /*000038c0*/ MOVT        R8, #40997                  @ 0xa025 
    /*000038c4*/ BL          0x00000000000038C4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000038c8*/ B           GDC_AddLDCOrPMFTask_x3508
    GDC_AddLDCOrPMFTask_x38cc:
    /*000038cc*/ LDR         R0, [R6, #64]               @ 0x40 
    /*000038d0*/ ADD         R3, R8, #756                @ 0x2f4 
    /*000038d4*/ STR         R2, [SP, #8] 
    /*000038d8*/ MOV         R1, #1312                   @ 0x520 
    /*000038dc*/ STR         R7, [SP, #4] 
    /*000038e0*/ MOVW        R2, #0                      @ .LC163 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1898] 
    /*000038e4*/ STR         R0, [SP, #12] 
    /*000038e8*/ MOVT        R2, #0                      @ .LC163 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1898] 
    /*000038ec*/ STR         R1, [SP] 
    /*000038f0*/ MOV         R0, #3 
    /*000038f4*/ MOV         R1, #37                     @ 0x25 
    /*000038f8*/ MOVW        R8, #32777                  @ 0x8009 
    /*000038fc*/ BL          0x00000000000038FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003900*/ ADD         R1, SP, #20 
    /*00003904*/ LDR         R0, [PC, #12]               @ 0x0000000000003918 
    /*00003908*/ MOVT        R8, #40997                  @ 0xa025 
    /*0000390c*/ BL          0x000000000000390C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003910*/ B           GDC_AddLDCOrPMFTask_x3508
    /*00003914*/ STRDEQ      R0, [R0], -R4 
    /*00003918*/ ANDEQ       R0, R0, R0, ASR #32 
FUNC_END GDC_AddLDCOrPMFTask


FUNC_BEGIN GDC_RlsTmpBuff
    /*0000391c*/ LDR         R3, [R0, #784]              @ 0x310 
    /*00003920*/ CMN         R3, #1 
    /*00003924*/ BXEQ        LR 
    /*00003928*/ B           0x0000000000000D28 
FUNC_END GDC_RlsTmpBuff


FUNC_BEGIN GDC_SetJobConfig
    /*0000392c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00003930*/ SUBS        R5, R0, #0 
    /*00003934*/ SUB         SP, SP, #28 
    /*00003938*/ BLT         GDC_SetJobConfig_x3aa0
    /*0000393c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00003940*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00003944*/ LDR         R3, [R3] 
    /*00003948*/ CMP         R3, R5 
    /*0000394c*/ BLS         GDC_SetJobConfig_x3aa0
    /*00003950*/ CMP         R1, #0 
    /*00003954*/ MOV         R4, R1 
    /*00003958*/ BEQ         GDC_SetJobConfig_x3a58
    GDC_SetJobConfig_x395c:
    /*0000395c*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00003960*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00003964*/ LDR         R3, [R3, #4] 
    /*00003968*/ LDR         R3, [R3, #4] 
    /*0000396c*/ LDR         R5, [R3, R5, LSL #2] 
    /*00003970*/ CMP         R5, #0 
    /*00003974*/ BEQ         GDC_SetJobConfig_x3ab8
    GDC_SetJobConfig_x3978:
    /*00003978*/ LDR         R3, [R5, #16] 
    /*0000397c*/ CMP         R3, #1 
    /*00003980*/ BNE         GDC_SetJobConfig_x3a68
    /*00003984*/ LDR         R6, [R4] 
    /*00003988*/ MOV         R1, #256                    @ 0x100 
    /*0000398c*/ MOV         R0, R6 
    /*00003990*/ BL          0x0000000000003990          @ hil_is_phys_in_mmz [R_ARM_CALL: +0x0] 
    /*00003994*/ CMP         R0, #0 
    /*00003998*/ BNE         GDC_SetJobConfig_x3a00
    GDC_SetJobConfig_x399c:
    /*0000399c*/ MOV         R2, #256                    @ 0x100 
    /*000039a0*/ LDRD        R0, [R4] 
    /*000039a4*/ BL          0x00000000000039A4          @ CMPI_Remap_Nocache [R_ARM_CALL: +0x0] 
    /*000039a8*/ SUBS        R7, R0, #0 
    /*000039ac*/ BEQ         GDC_SetJobConfig_x3ad8
    /*000039b0*/ BL          0x00000000000039B0          @ GDC_CheckLMFCoef [R_ARM_CALL: .text+0x9f4] 
    /*000039b4*/ SUBS        R6, R0, #0 
    /*000039b8*/ MOV         R0, R7 
    /*000039bc*/ BNE         GDC_SetJobConfig_x3a48
    /*000039c0*/ BL          0x00000000000039C0          @ CMPI_Unmap [R_ARM_CALL: +0x0] 
    /*000039c4*/ MOV         R1, R4 
    /*000039c8*/ MOV         R2, #8 
    /*000039cc*/ ADD         R0, R5, #96                 @ 0x60 
    /*000039d0*/ BL          0x00000000000039D0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000039d4*/ ADD         R1, SP, #20 
    /*000039d8*/ LDR         R0, [PC, #292]              @ 0x0000000000003b04 
    /*000039dc*/ BL          0x00000000000039DC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000039e0*/ MOV         R3, #1 
    /*000039e4*/ ADD         R1, SP, #20 
    /*000039e8*/ LDR         R0, [PC, #276]              @ 0x0000000000003b04 
    /*000039ec*/ STR         R3, [R5, #104]              @ 0x68 
    /*000039f0*/ BL          0x00000000000039F0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    GDC_SetJobConfig_x39f4:
    /*000039f4*/ MOV         R0, R6 
    /*000039f8*/ ADD         SP, SP, #28 
    /*000039fc*/ POP         {R4, R5, R6, R7, PC} 
    GDC_SetJobConfig_x3a00:
    /*00003a00*/ MOV         R0, R6 
    /*00003a04*/ MOV         R1, #256                    @ 0x100 
    /*00003a08*/ BL          0x0000000000003A08          @ hil_map_mmz_check_phys [R_ARM_CALL: +0x0] 
    /*00003a0c*/ CMP         R0, #0 
    /*00003a10*/ BEQ         GDC_SetJobConfig_x399c
    /*00003a14*/ LDRD        R0, [R4] 
    /*00003a18*/ MOVW        R3, #1037                   @ 0x40d 
    /*00003a1c*/ MOVW        R2, #0                      @ .LC167 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1974] 
    /*00003a20*/ STR         R3, [SP] 
    /*00003a24*/ MOVT        R2, #0                      @ .LC167 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1974] 
    /*00003a28*/ LDR         R3, [PC, #216]              @ 0x0000000000003b08 
    /*00003a2c*/ STRD        R0, [SP, #8] 
    /*00003a30*/ MOV         R1, #37                     @ 0x25 
    /*00003a34*/ MOV         R0, #3 
    /*00003a38*/ MOVW        R6, #32771                  @ 0x8003 
    /*00003a3c*/ BL          0x0000000000003A3C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003a40*/ MOVT        R6, #40997                  @ 0xa025 
    /*00003a44*/ B           GDC_SetJobConfig_x39f4
    GDC_SetJobConfig_x3a48:
    /*00003a48*/ BL          0x0000000000003A48          @ CMPI_Unmap [R_ARM_CALL: +0x0] 
    /*00003a4c*/ MOV         R0, R6 
    /*00003a50*/ ADD         SP, SP, #28 
    /*00003a54*/ POP         {R4, R5, R6, R7, PC} 
    GDC_SetJobConfig_x3a58:
    /*00003a58*/ BL          0x0000000000000CB0 
    /*00003a5c*/ SUBS        R6, R0, #0 
    /*00003a60*/ BNE         GDC_SetJobConfig_x39f4
    /*00003a64*/ B           GDC_SetJobConfig_x395c
    GDC_SetJobConfig_x3a68:
    /*00003a68*/ MOVW        R2, #0                      @ .LC160 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x17d4] 
    /*00003a6c*/ MOVT        R2, #0                      @ .LC160 [R_ARM_MOVT_ABS: .rodata.str1.4+0x17d4] 
    /*00003a70*/ STR         R3, [SP, #4] 
    /*00003a74*/ MOVW        R3, #1031                   @ 0x407 
    /*00003a78*/ STR         R3, [SP] 
    GDC_SetJobConfig_x3a7c:
    /*00003a7c*/ LDR         R3, [PC, #132]              @ 0x0000000000003b08 
    /*00003a80*/ MOV         R1, #37                     @ 0x25 
    /*00003a84*/ MOV         R0, #3 
    /*00003a88*/ MOVW        R6, #32771                  @ 0x8003 
    /*00003a8c*/ BL          0x0000000000003A8C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003a90*/ MOVT        R6, #40997                  @ 0xa025 
    /*00003a94*/ MOV         R0, R6 
    /*00003a98*/ ADD         SP, SP, #28 
    /*00003a9c*/ POP         {R4, R5, R6, R7, PC} 
    GDC_SetJobConfig_x3aa0:
    /*00003aa0*/ MOVW        R3, #1025                   @ 0x401 
    /*00003aa4*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xecc] 
    /*00003aa8*/ STR         R5, [SP, #4] 
    /*00003aac*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0xecc] 
    /*00003ab0*/ STR         R3, [SP] 
    /*00003ab4*/ B           GDC_SetJobConfig_x3a7c
    GDC_SetJobConfig_x3ab8:
    /*00003ab8*/ MOVW        R3, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf0c] 
    /*00003abc*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00003ac0*/ MOVT        R3, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf0c] 
    /*00003ac4*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00003ac8*/ MOVW        R2, #1029                   @ 0x405 
    /*00003acc*/ LDR         R1, [PC, #52]               @ 0x0000000000003b08 
    /*00003ad0*/ BL          0x0000000000003AD0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00003ad4*/ B           GDC_SetJobConfig_x3978
    GDC_SetJobConfig_x3ad8:
    /*00003ad8*/ MOVW        R3, #1044                   @ 0x414 
    /*00003adc*/ MOVW        R2, #0                      @ .LC166 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1948] 
    /*00003ae0*/ STR         R3, [SP] 
    /*00003ae4*/ MOVT        R2, #0                      @ .LC166 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1948] 
    /*00003ae8*/ LDR         R3, [PC, #24]               @ 0x0000000000003b08 
    /*00003aec*/ MOV         R1, #37                     @ 0x25 
    /*00003af0*/ MOV         R0, #3 
    /*00003af4*/ MOVW        R6, #32777                  @ 0x8009 
    /*00003af8*/ BL          0x0000000000003AF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003afc*/ MOVT        R6, #40997                  @ 0xa025 
    /*00003b00*/ B           GDC_SetJobConfig_x39f4
    /*00003b04*/ ANDEQ       R0, R0, R0, ASR #32 
    /*00003b08*/ ANDEQ       R0, R0, R8, LSL #6 
FUNC_END GDC_SetJobConfig


FUNC_BEGIN GDC_GetJobConfig
    /*00003b0c*/ PUSH        {R4, R5, LR} 
    /*00003b10*/ SUBS        R4, R0, #0 
    /*00003b14*/ SUB         SP, SP, #12 
    /*00003b18*/ BLT         GDC_GetJobConfig_x3b9c
    /*00003b1c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00003b20*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00003b24*/ LDR         R3, [R3] 
    /*00003b28*/ CMP         R3, R4 
    /*00003b2c*/ BLS         GDC_GetJobConfig_x3b9c
    /*00003b30*/ CMP         R1, #0 
    /*00003b34*/ MOV         R5, R1 
    /*00003b38*/ BEQ         GDC_GetJobConfig_x3b8c
    GDC_GetJobConfig_x3b3c:
    /*00003b3c*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00003b40*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00003b44*/ LDR         R3, [R3, #4] 
    /*00003b48*/ LDR         R3, [R3, #4] 
    /*00003b4c*/ LDR         R4, [R3, R4, LSL #2] 
    /*00003b50*/ CMP         R4, #0 
    /*00003b54*/ BEQ         GDC_GetJobConfig_x3bcc
    GDC_GetJobConfig_x3b58:
    /*00003b58*/ LDR         R3, [R4, #16] 
    /*00003b5c*/ CMP         R3, #1 
    /*00003b60*/ BNE         GDC_GetJobConfig_x3bec
    /*00003b64*/ LDR         R3, [R4, #104]              @ 0x68 
    /*00003b68*/ CMP         R3, #0 
    /*00003b6c*/ BEQ         GDC_GetJobConfig_x3c04
    /*00003b70*/ ADD         R1, R4, #96                 @ 0x60 
    /*00003b74*/ MOV         R0, R5 
    /*00003b78*/ MOV         R2, #8 
    /*00003b7c*/ BL          0x0000000000003B7C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00003b80*/ MOV         R0, #0 
    GDC_GetJobConfig_x3b84:
    /*00003b84*/ ADD         SP, SP, #12 
    /*00003b88*/ POP         {R4, R5, PC} 
    GDC_GetJobConfig_x3b8c:
    /*00003b8c*/ BL          0x0000000000000CB0 
    /*00003b90*/ CMP         R0, #0 
    /*00003b94*/ BNE         GDC_GetJobConfig_x3b84
    /*00003b98*/ B           GDC_GetJobConfig_x3b3c
    GDC_GetJobConfig_x3b9c:
    /*00003b9c*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xecc] 
    /*00003ba0*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0xecc] 
    /*00003ba4*/ MOVW        R3, #1076                   @ 0x434 
    /*00003ba8*/ STR         R4, [SP, #4] 
    /*00003bac*/ STR         R3, [SP] 
    GDC_GetJobConfig_x3bb0:
    /*00003bb0*/ LDR         R3, [PC, #124]              @ 0x0000000000003c34 
    /*00003bb4*/ MOV         R1, #37                     @ 0x25 
    /*00003bb8*/ MOV         R0, #3 
    /*00003bbc*/ BL          0x0000000000003BBC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003bc0*/ MOVW        R0, #32771                  @ 0x8003 
    /*00003bc4*/ MOVT        R0, #40997                  @ 0xa025 
    /*00003bc8*/ B           GDC_GetJobConfig_x3b84
    GDC_GetJobConfig_x3bcc:
    /*00003bcc*/ MOVW        R3, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf0c] 
    /*00003bd0*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00003bd4*/ MOVT        R3, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf0c] 
    /*00003bd8*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00003bdc*/ MOVW        R2, #1080                   @ 0x438 
    /*00003be0*/ LDR         R1, [PC, #76]               @ 0x0000000000003c34 
    /*00003be4*/ BL          0x0000000000003BE4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00003be8*/ B           GDC_GetJobConfig_x3b58
    GDC_GetJobConfig_x3bec:
    /*00003bec*/ STR         R3, [SP, #4] 
    /*00003bf0*/ MOVW        R2, #0                      @ .LC160 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x17d4] 
    /*00003bf4*/ MOVW        R3, #1082                   @ 0x43a 
    /*00003bf8*/ MOVT        R2, #0                      @ .LC160 [R_ARM_MOVT_ABS: .rodata.str1.4+0x17d4] 
    /*00003bfc*/ STR         R3, [SP] 
    /*00003c00*/ B           GDC_GetJobConfig_x3bb0
    GDC_GetJobConfig_x3c04:
    /*00003c04*/ STR         R3, [SP, #4] 
    /*00003c08*/ MOVW        R2, #0                      @ .LC168 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x19b0] 
    /*00003c0c*/ MOVW        R3, #1086                   @ 0x43e 
    /*00003c10*/ MOVT        R2, #0                      @ .LC168 [R_ARM_MOVT_ABS: .rodata.str1.4+0x19b0] 
    /*00003c14*/ STR         R3, [SP] 
    /*00003c18*/ MOV         R1, #37                     @ 0x25 
    /*00003c1c*/ LDR         R3, [PC, #16]               @ 0x0000000000003c34 
    /*00003c20*/ MOV         R0, #3 
    /*00003c24*/ BL          0x0000000000003C24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003c28*/ MOVW        R0, #32777                  @ 0x8009 
    /*00003c2c*/ MOVT        R0, #40997                  @ 0xa025 
    /*00003c30*/ B           GDC_GetJobConfig_x3b84
    /*00003c34*/ ANDEQ       R0, R0, IP, LSL R3 
FUNC_END GDC_GetJobConfig


FUNC_BEGIN GDC_AddGyroTask
    /*00003c38*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00003c3c*/ SUBS        R6, R0, #0 
    /*00003c40*/ SUB         SP, SP, #28 
    /*00003c44*/ BLT         GDC_AddGyroTask_x3e64
    /*00003c48*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00003c4c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00003c50*/ LDR         R3, [R3] 
    /*00003c54*/ CMP         R3, R6 
    /*00003c58*/ BLS         GDC_AddGyroTask_x3e64
    /*00003c5c*/ CMP         R1, #0 
    /*00003c60*/ MOV         R4, R1 
    /*00003c64*/ MOV         R7, R2 
    /*00003c68*/ BEQ         GDC_AddGyroTask_x3e24
    GDC_AddGyroTask_x3c6c:
    /*00003c6c*/ CMP         R7, #0 
    /*00003c70*/ BEQ         GDC_AddGyroTask_x3e7c
    GDC_AddGyroTask_x3c74:
    /*00003c74*/ MOVW        R5, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00003c78*/ MOVT        R5, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00003c7c*/ LDR         R3, [R5] 
    /*00003c80*/ CMP         R3, #1 
    /*00003c84*/ BEQ         GDC_AddGyroTask_x3ca0
    /*00003c88*/ BL          0x0000000000000CEC 
    /*00003c8c*/ SUBS        R8, R0, #0 
    /*00003c90*/ BEQ         GDC_AddGyroTask_x3ca0
    GDC_AddGyroTask_x3c94:
    /*00003c94*/ MOV         R0, R8 
    /*00003c98*/ ADD         SP, SP, #28 
    /*00003c9c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    GDC_AddGyroTask_x3ca0:
    /*00003ca0*/ MOV         R2, R7 
    /*00003ca4*/ ADD         R1, R4, #336                @ 0x150 
    /*00003ca8*/ MOV         R0, R4 
    /*00003cac*/ BL          0x0000000000003CAC          @ GDC_CheckGyroInfo [R_ARM_CALL: .text+0x1430] 
    /*00003cb0*/ SUBS        R8, R0, #0 
    /*00003cb4*/ BNE         GDC_AddGyroTask_x3c94
    /*00003cb8*/ LDR         R3, [R5, #4] 
    /*00003cbc*/ LDR         R3, [R3, #4] 
    /*00003cc0*/ LDR         R6, [R3, R6, LSL #2] 
    /*00003cc4*/ CMP         R6, #0 
    /*00003cc8*/ BEQ         GDC_AddGyroTask_x3f40
    GDC_AddGyroTask_x3ccc:
    /*00003ccc*/ LDR         R1, [R4, #752]              @ 0x2f0 
    /*00003cd0*/ SUB         R2, R1, #7 
    /*00003cd4*/ CMP         R2, #23 
    /*00003cd8*/ BHI         GDC_AddGyroTask_x3e34
    /*00003cdc*/ MOVW        R8, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00003ce0*/ MOVT        R8, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00003ce4*/ ADD         R2, R8, R2, LSL #2 
    /*00003ce8*/ LDR         R2, [R2, #248]              @ 0xf8 
    /*00003cec*/ CMP         R2, #3 
    /*00003cf0*/ BHI         GDC_AddGyroTask_x3e34
    /*00003cf4*/ LDR         R3, [R6, #28] 
    /*00003cf8*/ CMP         R1, R3 
    /*00003cfc*/ BNE         GDC_AddGyroTask_x3f60
    /*00003d00*/ ADD         R1, R5, R2, LSL #2 
    /*00003d04*/ LDR         R0, [R4, #756]              @ 0x2f4 
    /*00003d08*/ LDR         R3, [R1, #12] 
    /*00003d0c*/ CMP         R3, R0 
    /*00003d10*/ BLS         GDC_AddGyroTask_x3f9c
    /*00003d14*/ LDR         R3, [R6, #32] 
    /*00003d18*/ CMP         R0, R3 
    /*00003d1c*/ BNE         GDC_AddGyroTask_x3ed0
    /*00003d20*/ ADD         R2, R5, R2, LSL #2 
    /*00003d24*/ LDR         R1, [R4, #760]              @ 0x2f8 
    /*00003d28*/ LDR         R3, [R2, #28] 
    /*00003d2c*/ CMP         R3, R1 
    /*00003d30*/ BLS         GDC_AddGyroTask_x3f80
    /*00003d34*/ LDR         R3, [R6, #36]               @ 0x24 
    /*00003d38*/ CMP         R1, R3 
    /*00003d3c*/ STRNE       R1, [SP, #4] 
    /*00003d40*/ STRNE       R3, [SP, #8] 
    /*00003d44*/ ADDNE       R3, R8, #816                @ 0x330 
    /*00003d48*/ MOVWNE      R1, #1432                   @ 0x598 
    /*00003d4c*/ BNE         GDC_AddGyroTask_x3ee0
    /*00003d50*/ LDR         R0, [PC, #756]              @ 0x000000000000404c 
    /*00003d54*/ ADD         R1, SP, #20 
    /*00003d58*/ BL          0x0000000000003D58          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00003d5c*/ LDR         R3, [R6, #92]               @ 0x5c 
    /*00003d60*/ CMP         R3, #1 
    /*00003d64*/ BEQ         GDC_AddGyroTask_x400c
    /*00003d68*/ LDR         R3, [R6, #64]               @ 0x40 
    /*00003d6c*/ CMP         R3, #0 
    /*00003d70*/ BEQ         GDC_AddGyroTask_x3fb8
    /*00003d74*/ LDR         R3, [R6, #16] 
    /*00003d78*/ CMP         R3, #1 
    /*00003d7c*/ BNE         GDC_AddGyroTask_x3f04
    /*00003d80*/ LDR         R0, [R5, #4] 
    /*00003d84*/ ADD         R0, R0, #604                @ 0x25c 
    /*00003d88*/ BL          0x0000000000003D88          @ GDC_GetTaskFromFreeList [R_ARM_CALL: .text+0x1008c] 
    /*00003d8c*/ SUBS        R9, R0, #0 
    /*00003d90*/ BEQ         GDC_AddGyroTask_x3fd4
    /*00003d94*/ ADD         R8, R9, #8 
    /*00003d98*/ MOV         R2, #776                    @ 0x308 
    /*00003d9c*/ MOV         R1, R4 
    /*00003da0*/ MOV         R0, R8 
    /*00003da4*/ BL          0x0000000000003DA4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00003da8*/ ADD         R0, R9, #1744               @ 0x6d0 
    /*00003dac*/ MOV         R1, R7 
    /*00003db0*/ MOV         R2, #424                    @ 0x1a8 
    /*00003db4*/ ADD         R0, R0, #8 
    /*00003db8*/ BL          0x0000000000003DB8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00003dbc*/ MOV         R3, #3 
    /*00003dc0*/ STR         R3, [R9, #788]              @ 0x314 
    /*00003dc4*/ MOV         R0, R8 
    /*00003dc8*/ LDR         R3, [R4, #348]              @ 0x15c 
    /*00003dcc*/ CMP         R3, #39                     @ 0x27 
    /*00003dd0*/ MOVEQ       R3, #0 
    /*00003dd4*/ MOVNE       R3, #2 
    /*00003dd8*/ STR         R3, [R9, #792]              @ 0x318 
    /*00003ddc*/ BL          0x0000000000003DDC          @ GDC_VbAdd [R_ARM_CALL: .text+0x174c] 
    /*00003de0*/ SUBS        R8, R0, #0 
    /*00003de4*/ BNE         GDC_AddGyroTask_x3e8c
    /*00003de8*/ MOV         R0, R9 
    /*00003dec*/ MOV         R1, R6 
    /*00003df0*/ BL          0x0000000000003DF0          @ GDC_PutTaskToJob [R_ARM_CALL: .text+0x10220] 
    /*00003df4*/ ADD         R1, SP, #20 
    /*00003df8*/ LDR         R0, [PC, #588]              @ 0x000000000000404c 
    /*00003dfc*/ BL          0x0000000000003DFC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003e00*/ LDR         R2, [R4, #336]              @ 0x150 
    /*00003e04*/ LDR         IP, [R4, #340]              @ 0x154 
    /*00003e08*/ ADD         R0, R6, #116                @ 0x74 
    /*00003e0c*/ LDR         R3, [R4] 
    /*00003e10*/ LDR         R1, [R4, #4] 
    /*00003e14*/ MUL         R2, IP, R2 
    /*00003e18*/ MUL         R1, R1, R3 
    /*00003e1c*/ BL          0x0000000000003E1C          @ GDC_AddJobProcArea [R_ARM_CALL: .text+0x2f88] 
    /*00003e20*/ B           GDC_AddGyroTask_x3c94
    GDC_AddGyroTask_x3e24:
    /*00003e24*/ BL          0x0000000000000CB0 
    /*00003e28*/ SUBS        R8, R0, #0 
    /*00003e2c*/ BNE         GDC_AddGyroTask_x3c94
    /*00003e30*/ B           GDC_AddGyroTask_x3c6c
    GDC_AddGyroTask_x3e34:
    /*00003e34*/ MOVW        R2, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf1c] 
    /*00003e38*/ MOVT        R2, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf1c] 
    /*00003e3c*/ MOVW        R3, #1430                   @ 0x596 
    /*00003e40*/ STR         R1, [SP, #4] 
    /*00003e44*/ STR         R3, [SP] 
    GDC_AddGyroTask_x3e48:
    /*00003e48*/ LDR         R3, [PC, #512]              @ 0x0000000000004050 
    GDC_AddGyroTask_x3e4c:
    /*00003e4c*/ MOV         R1, #37                     @ 0x25 
    /*00003e50*/ MOV         R0, #3 
    /*00003e54*/ MOVW        R8, #32771                  @ 0x8003 
    /*00003e58*/ BL          0x0000000000003E58          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003e5c*/ MOVT        R8, #40997                  @ 0xa025 
    /*00003e60*/ B           GDC_AddGyroTask_x3c94
    GDC_AddGyroTask_x3e64:
    /*00003e64*/ MOVW        R3, #1403                   @ 0x57b 
    /*00003e68*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xecc] 
    /*00003e6c*/ STR         R6, [SP, #4] 
    /*00003e70*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0xecc] 
    /*00003e74*/ STR         R3, [SP] 
    /*00003e78*/ B           GDC_AddGyroTask_x3e48
    GDC_AddGyroTask_x3e7c:
    /*00003e7c*/ BL          0x0000000000000CB0 
    /*00003e80*/ SUBS        R8, R0, #0 
    /*00003e84*/ BNE         GDC_AddGyroTask_x3c94
    /*00003e88*/ B           GDC_AddGyroTask_x3c74
    GDC_AddGyroTask_x3e8c:
    /*00003e8c*/ LDR         R0, [R5, #4] 
    /*00003e90*/ MOV         R1, R9 
    /*00003e94*/ ADD         R0, R0, #604                @ 0x25c 
    /*00003e98*/ BL          0x0000000000003E98          @ GDC_PutTaskToFreeList [R_ARM_CALL: .text+0x10138] 
    /*00003e9c*/ ADD         R1, SP, #20 
    /*00003ea0*/ LDR         R0, [PC, #420]              @ 0x000000000000404c 
    /*00003ea4*/ BL          0x0000000000003EA4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003ea8*/ MOVW        R3, #1489                   @ 0x5d1 
    /*00003eac*/ STR         R8, [SP, #4] 
    /*00003eb0*/ MOVW        R2, #0                      @ .LC172 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ac4] 
    /*00003eb4*/ STR         R3, [SP] 
    /*00003eb8*/ MOVT        R2, #0                      @ .LC172 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ac4] 
    /*00003ebc*/ LDR         R3, [PC, #396]              @ 0x0000000000004050 
    /*00003ec0*/ MOV         R1, #37                     @ 0x25 
    /*00003ec4*/ MOV         R0, #3 
    /*00003ec8*/ BL          0x0000000000003EC8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003ecc*/ B           GDC_AddGyroTask_x3c94
    GDC_AddGyroTask_x3ed0:
    /*00003ed0*/ STR         R3, [SP, #8] 
    /*00003ed4*/ ADD         R3, R8, #816                @ 0x330 
    /*00003ed8*/ MOVW        R1, #1431                   @ 0x597 
    /*00003edc*/ STR         R0, [SP, #4] 
    GDC_AddGyroTask_x3ee0:
    /*00003ee0*/ MOVW        R2, #0                      @ .LC125 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xff8] 
    /*00003ee4*/ MOVT        R2, #0                      @ .LC125 [R_ARM_MOVT_ABS: .rodata.str1.4+0xff8] 
    /*00003ee8*/ STR         R1, [SP] 
    GDC_AddGyroTask_x3eec:
    /*00003eec*/ MOV         R1, #37                     @ 0x25 
    /*00003ef0*/ MOV         R0, #3 
    /*00003ef4*/ MOVW        R8, #32771                  @ 0x8003 
    /*00003ef8*/ BL          0x0000000000003EF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003efc*/ MOVT        R8, #40997                  @ 0xa025 
    /*00003f00*/ B           GDC_AddGyroTask_x3c94
    GDC_AddGyroTask_x3f04:
    /*00003f04*/ STR         R3, [SP, #4] 
    /*00003f08*/ MOVW        R3, #1453                   @ 0x5ad 
    /*00003f0c*/ STR         R3, [SP] 
    /*00003f10*/ MOVW        R2, #0                      @ .LC160 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x17d4] 
    /*00003f14*/ LDR         R3, [PC, #308]              @ 0x0000000000004050 
    /*00003f18*/ MOVT        R2, #0                      @ .LC160 [R_ARM_MOVT_ABS: .rodata.str1.4+0x17d4] 
    GDC_AddGyroTask_x3f1c:
    /*00003f1c*/ MOV         R1, #37                     @ 0x25 
    /*00003f20*/ MOV         R0, #3 
    /*00003f24*/ BL          0x0000000000003F24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003f28*/ ADD         R1, SP, #20 
    /*00003f2c*/ LDR         R0, [PC, #280]              @ 0x000000000000404c 
    /*00003f30*/ MOVW        R8, #32777                  @ 0x8009 
    /*00003f34*/ BL          0x0000000000003F34          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003f38*/ MOVT        R8, #40997                  @ 0xa025 
    /*00003f3c*/ B           GDC_AddGyroTask_x3c94
    GDC_AddGyroTask_x3f40:
    /*00003f40*/ MOVW        R3, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf0c] 
    /*00003f44*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00003f48*/ MOVT        R3, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf0c] 
    /*00003f4c*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00003f50*/ MOVW        R2, #1422                   @ 0x58e 
    /*00003f54*/ LDR         R1, [PC, #244]              @ 0x0000000000004050 
    /*00003f58*/ BL          0x0000000000003F58          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00003f5c*/ B           GDC_AddGyroTask_x3ccc
    GDC_AddGyroTask_x3f60:
    /*00003f60*/ STR         R3, [SP, #8] 
    /*00003f64*/ MOVW        R2, #0                      @ .LC123 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf58] 
    /*00003f68*/ STR         R1, [SP, #4] 
    /*00003f6c*/ ADD         R3, R8, #816                @ 0x330 
    /*00003f70*/ MOVW        R1, #1430                   @ 0x596 
    /*00003f74*/ MOVT        R2, #0                      @ .LC123 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf58] 
    /*00003f78*/ STR         R1, [SP] 
    /*00003f7c*/ B           GDC_AddGyroTask_x3eec
    GDC_AddGyroTask_x3f80:
    /*00003f80*/ STR         R1, [SP, #4] 
    /*00003f84*/ MOVW        R2, #0                      @ .LC126 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1050] 
    /*00003f88*/ MOVW        R1, #1432                   @ 0x598 
    /*00003f8c*/ ADD         R3, R8, #816                @ 0x330 
    /*00003f90*/ STR         R1, [SP] 
    /*00003f94*/ MOVT        R2, #0                      @ .LC126 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1050] 
    /*00003f98*/ B           GDC_AddGyroTask_x3e4c
    GDC_AddGyroTask_x3f9c:
    /*00003f9c*/ MOVW        R1, #1431                   @ 0x597 
    /*00003fa0*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfb4] 
    /*00003fa4*/ STR         R0, [SP, #4] 
    /*00003fa8*/ ADD         R3, R8, #816                @ 0x330 
    /*00003fac*/ STR         R1, [SP] 
    /*00003fb0*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfb4] 
    /*00003fb4*/ B           GDC_AddGyroTask_x3e4c
    GDC_AddGyroTask_x3fb8:
    /*00003fb8*/ STR         R3, [SP, #4] 
    /*00003fbc*/ MOVW        R1, #1446                   @ 0x5a6 
    /*00003fc0*/ MOVW        R2, #0                      @ .LC170 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a38] 
    /*00003fc4*/ ADD         R3, R8, #816                @ 0x330 
    /*00003fc8*/ STR         R1, [SP] 
    /*00003fcc*/ MOVT        R2, #0                      @ .LC170 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a38] 
    /*00003fd0*/ B           GDC_AddGyroTask_x3f1c
    GDC_AddGyroTask_x3fd4:
    /*00003fd4*/ MOVW        R3, #1462                   @ 0x5b6 
    /*00003fd8*/ MOV         R1, #37                     @ 0x25 
    /*00003fdc*/ STR         R3, [SP] 
    /*00003fe0*/ MOVW        R2, #0                      @ .LC171 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a84] 
    /*00003fe4*/ LDR         R3, [PC, #100]              @ 0x0000000000004050 
    /*00003fe8*/ MOVT        R2, #0                      @ .LC171 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a84] 
    /*00003fec*/ MOV         R0, #3 
    /*00003ff0*/ MOVW        R8, #32782                  @ 0x800e 
    /*00003ff4*/ BL          0x0000000000003FF4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003ff8*/ ADD         R1, SP, #20 
    /*00003ffc*/ LDR         R0, [PC, #72]               @ 0x000000000000404c 
    /*00004000*/ MOVT        R8, #40997                  @ 0xa025 
    /*00004004*/ BL          0x0000000000004004          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004008*/ B           GDC_AddGyroTask_x3c94
    GDC_AddGyroTask_x400c:
    /*0000400c*/ LDR         R1, [R6, #64]               @ 0x40 
    /*00004010*/ ADD         R3, R8, #816                @ 0x330 
    /*00004014*/ MOVW        R0, #1438                   @ 0x59e 
    /*00004018*/ MOVW        R2, #0                      @ .LC169 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x19e4] 
    /*0000401c*/ STR         R0, [SP] 
    /*00004020*/ MOVT        R2, #0                      @ .LC169 [R_ARM_MOVT_ABS: .rodata.str1.4+0x19e4] 
    /*00004024*/ STR         R1, [SP, #4] 
    /*00004028*/ MOV         R0, #3 
    /*0000402c*/ MOV         R1, #37                     @ 0x25 
    /*00004030*/ MOVW        R8, #32777                  @ 0x8009 
    /*00004034*/ BL          0x0000000000004034          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004038*/ ADD         R1, SP, #20 
    /*0000403c*/ LDR         R0, [PC, #8]                @ 0x000000000000404c 
    /*00004040*/ MOVT        R8, #40997                  @ 0xa025 
    /*00004044*/ BL          0x0000000000004044          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004048*/ B           GDC_AddGyroTask_x3c94
    /*0000404c*/ ANDEQ       R0, R0, R0, ASR #32 
    /*00004050*/ ANDEQ       R0, R0, R0, LSR R3 
FUNC_END GDC_AddGyroTask


FUNC_BEGIN GDC_DrvCallBack
    /*00004054*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00004058*/ MOVW        R4, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000405c*/ SUBS        FP, R0, #0 
    /*00004060*/ MOVT        R4, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00004064*/ SUB         SP, SP, #20 
    /*00004068*/ LDR         R6, [R4, #4] 
    /*0000406c*/ BLT         GDC_DrvCallBack_x4244
    /*00004070*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00004074*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00004078*/ LDR         R3, [R3] 
    /*0000407c*/ CMP         R3, FP 
    /*00004080*/ BLS         GDC_DrvCallBack_x4244
    /*00004084*/ LDR         R3, [R6, #4] 
    /*00004088*/ LDR         R3, [R3, FP, LSL #2] 
    /*0000408c*/ CMP         R3, #0 
    /*00004090*/ STR         R3, [SP, #12] 
    /*00004094*/ BEQ         GDC_DrvCallBack_x4224
    GDC_DrvCallBack_x4098:
    /*00004098*/ LDR         R5, [SP, #12] 
    /*0000409c*/ LDR         R1, [R5, #16] 
    /*000040a0*/ CMP         R1, #2 
    /*000040a4*/ BEQ         GDC_DrvCallBack_x40dc
    /*000040a8*/ MOVW        R0, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b00] 
    /*000040ac*/ MOVT        R0, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b00] 
    /*000040b0*/ BL          0x00000000000040B0          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000040b4*/ LDR         R3, [R5, #16] 
    /*000040b8*/ CMP         R3, #2 
    /*000040bc*/ BEQ         GDC_DrvCallBack_x40dc
    /*000040c0*/ MOVW        R3, #0                      @ .LC174 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b18] 
    /*000040c4*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*000040c8*/ MOVT        R3, #0                      @ .LC174 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b18] 
    /*000040cc*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*000040d0*/ MOVW        R2, #1643                   @ 0x66b 
    /*000040d4*/ LDR         R1, [PC, #408]              @ 0x0000000000004274 
    /*000040d8*/ BL          0x00000000000040D8          @ osal_panic [R_ARM_CALL: +0x0] 
    GDC_DrvCallBack_x40dc:
    /*000040dc*/ LDR         R3, [SP, #12] 
    /*000040e0*/ LDR         R7, [R3, #28] 
    /*000040e4*/ LDR         R8, [R3, #32] 
    /*000040e8*/ CMP         R7, #59                     @ 0x3b 
    /*000040ec*/ LDR         R9, [R3, #36]               @ 0x24 
    /*000040f0*/ BHI         GDC_DrvCallBack_x4204
    GDC_DrvCallBack_x40f4:
    /*000040f4*/ LDR         R3, [SP, #12] 
    /*000040f8*/ ADD         R0, R3, #152                @ 0x98 
    /*000040fc*/ BL          0x00000000000040FC          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*00004100*/ SUB         R2, R7, #7 
    /*00004104*/ CMP         R2, #23 
    /*00004108*/ MOVWLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*0000410c*/ MOVHI       R3, #4 
    /*00004110*/ MOVTLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00004114*/ ADDLS       R3, R3, R2, LSL #2 
    /*00004118*/ LDRLS       R3, [R3, #248]              @ 0xf8 
    /*0000411c*/ ADD         R4, R4, R3, LSL #2 
    /*00004120*/ ADD         R2, R6, R3, LSL #2 
    /*00004124*/ LDR         R3, [R4, #28] 
    /*00004128*/ LDR         SL, [R2, #28] 
    /*0000412c*/ MLA         R3, R3, R8, R9 
    /*00004130*/ LDR         R4, [SL, R3, LSL #3] 
    /*00004134*/ ADD         SL, SL, R3, LSL #3 
    /*00004138*/ CMP         SL, R4 
    /*0000413c*/ LDR         R5, [R4] 
    /*00004140*/ BEQ         GDC_DrvCallBack_x41b0
    GDC_DrvCallBack_x4144:
    /*00004144*/ LDR         IP, [R4, #64]               @ 0x40 
    /*00004148*/ MOV         R3, R6 
    /*0000414c*/ MOV         R2, R9 
    /*00004150*/ MOV         R1, R8 
    /*00004154*/ CMP         IP, #0 
    /*00004158*/ MOV         R0, R7 
    /*0000415c*/ BEQ         GDC_DrvCallBack_x416c
    /*00004160*/ LDR         IP, [R4, #88]               @ 0x58 
    /*00004164*/ CMP         FP, IP 
    /*00004168*/ BNE         GDC_DrvCallBack_x41b0
    GDC_DrvCallBack_x416c:
    /*0000416c*/ STR         R4, [SP] 
    /*00004170*/ BL          0x0000000000004170          @ GDC_GetJobFromBusyList [R_ARM_CALL: .text+0x109f8] 
    /*00004174*/ STR         R4, [SP] 
    /*00004178*/ MOV         R3, R6 
    /*0000417c*/ MOV         R2, R9 
    /*00004180*/ MOV         R1, R8 
    /*00004184*/ MOV         R0, R7 
    /*00004188*/ BL          0x0000000000004188          @ GDC_PutJobToProcList [R_ARM_CALL: .text+0x10c6c] 
    /*0000418c*/ LDR         R3, [R4, #64]               @ 0x40 
    /*00004190*/ CMP         R3, #0 
    /*00004194*/ MOVEQ       R3, #6 
    /*00004198*/ MOVNE       R3, #5 
    /*0000419c*/ CMP         R5, SL 
    /*000041a0*/ STR         R3, [R4, #16] 
    /*000041a4*/ MOV         R4, R5 
    /*000041a8*/ LDR         R5, [R5] 
    /*000041ac*/ BNE         GDC_DrvCallBack_x4144
    GDC_DrvCallBack_x41b0:
    /*000041b0*/ LDR         R3, [SP, #12] 
    /*000041b4*/ LDR         R1, [R3, #16] 
    /*000041b8*/ CMP         R1, #5 
    /*000041bc*/ BEQ         GDC_DrvCallBack_x41f8
    /*000041c0*/ MOVW        R0, #0                      @ .LC176 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b58] 
    /*000041c4*/ MOVT        R0, #0                      @ .LC176 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b58] 
    /*000041c8*/ BL          0x00000000000041C8          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000041cc*/ LDR         R3, [SP, #12] 
    /*000041d0*/ LDR         R3, [R3, #16] 
    /*000041d4*/ CMP         R3, #5 
    /*000041d8*/ BEQ         GDC_DrvCallBack_x41f8
    /*000041dc*/ MOVW        R3, #0                      @ .LC177 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b74] 
    /*000041e0*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*000041e4*/ MOVT        R3, #0                      @ .LC177 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b74] 
    /*000041e8*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*000041ec*/ MOVW        R2, #1678                   @ 0x68e 
    /*000041f0*/ LDR         R1, [PC, #124]              @ 0x0000000000004274 
    /*000041f4*/ BL          0x00000000000041F4          @ osal_panic [R_ARM_CALL: +0x0] 
    GDC_DrvCallBack_x41f8:
    /*000041f8*/ MOV         R0, #0 
    GDC_DrvCallBack_x41fc:
    /*000041fc*/ ADD         SP, SP, #20 
    /*00004200*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_DrvCallBack_x4204:
    /*00004204*/ MOVW        R3, #0                      @ .LC175 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b40] 
    /*00004208*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*0000420c*/ MOVT        R3, #0                      @ .LC175 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b40] 
    /*00004210*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00004214*/ MOVW        R2, #1650                   @ 0x672 
    /*00004218*/ LDR         R1, [PC, #84]               @ 0x0000000000004274 
    /*0000421c*/ BL          0x000000000000421C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00004220*/ B           GDC_DrvCallBack_x40f4
    GDC_DrvCallBack_x4224:
    /*00004224*/ MOVW        R3, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf0c] 
    /*00004228*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*0000422c*/ MOVT        R3, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf0c] 
    /*00004230*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00004234*/ MOVW        R2, #1638                   @ 0x666 
    /*00004238*/ LDR         R1, [PC, #52]               @ 0x0000000000004274 
    /*0000423c*/ BL          0x000000000000423C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00004240*/ B           GDC_DrvCallBack_x4098
    GDC_DrvCallBack_x4244:
    /*00004244*/ MOVW        R3, #1635                   @ 0x663 
    /*00004248*/ STR         FP, [SP, #4] 
    /*0000424c*/ STR         R3, [SP] 
    /*00004250*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xecc] 
    /*00004254*/ LDR         R3, [PC, #24]               @ 0x0000000000004274 
    /*00004258*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0xecc] 
    /*0000425c*/ MOV         R1, #37                     @ 0x25 
    /*00004260*/ MOV         R0, #3 
    /*00004264*/ BL          0x0000000000004264          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004268*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000426c*/ MOVT        R0, #40997                  @ 0xa025 
    /*00004270*/ B           GDC_DrvCallBack_x41fc
    /*00004274*/ ANDEQ       R0, R0, R0, ASR #6 
FUNC_END GDC_DrvCallBack


FUNC_BEGIN GDC_GetHwStartTime
    /*00004278*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000427c*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00004280*/ LDR         R3, [R3, #4] 
    /*00004284*/ LDR         R3, [R3, #4] 
    /*00004288*/ LDR         R0, [R3, R0, LSL #2] 
    /*0000428c*/ ADD         R0, R0, #152                @ 0x98 
    GDC_GetHwStartTime_x4290:
    /*00004290*/ B           GDC_GetHwStartTime_x4290    @ osal_gettimeofday [R_ARM_JUMP24: +0x0] 
FUNC_END GDC_GetHwStartTime


FUNC_BEGIN GDC_GetHWEndTime
    /*00004294*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00004298*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000429c*/ PUSH        {R4, LR} 
    /*000042a0*/ LDR         R3, [R3, #4] 
    /*000042a4*/ LDR         R3, [R3, #4] 
    /*000042a8*/ LDR         R4, [R3, R0, LSL #2] 
    /*000042ac*/ CMP         R4, #0 
    /*000042b0*/ BEQ         GDC_GetHWEndTime_x42c0
    /*000042b4*/ ADD         R0, R4, #168                @ 0xa8 
    /*000042b8*/ POP         {R4, LR} 
    GDC_GetHWEndTime_x42bc:
    /*000042bc*/ B           GDC_GetHWEndTime_x42bc      @ osal_gettimeofday [R_ARM_JUMP24: +0x0] 
    GDC_GetHWEndTime_x42c0:
    /*000042c0*/ MOVW        R3, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf0c] 
    /*000042c4*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*000042c8*/ MOVT        R3, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf0c] 
    /*000042cc*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*000042d0*/ MOVW        R2, #1718                   @ 0x6b6 
    /*000042d4*/ LDR         R1, [PC, #12]               @ 0x00000000000042e8 
    /*000042d8*/ BL          0x00000000000042D8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000042dc*/ ADD         R0, R4, #168                @ 0xa8 
    /*000042e0*/ POP         {R4, LR} 
    GDC_GetHWEndTime_x42e4:
    /*000042e4*/ B           GDC_GetHWEndTime_x42e4      @ osal_gettimeofday [R_ARM_JUMP24: +0x0] 
    /*000042e8*/ ANDEQ       R0, R0, R0, ASR R3 
FUNC_END GDC_GetHWEndTime


FUNC_BEGIN GDC_CancelAllBusyJob
    /*000042ec*/ LDR         R3, [PC, #984]              @ 0x00000000000046cc 
    /*000042f0*/ MOV         R2, #0 
    /*000042f4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000042f8*/ ADD         FP, R3, #36                 @ 0x24 
    /*000042fc*/ SUB         SP, SP, #68                 @ 0x44 
    /*00004300*/ STR         R3, [SP, #48]               @ 0x30 
    /*00004304*/ STR         R2, [SP, #40]               @ 0x28 
    /*00004308*/ STR         R3, [SP, #44]               @ 0x2c 
    GDC_CancelAllBusyJob_x430c:
    /*0000430c*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00004310*/ LDR         R2, [R3], #4 
    /*00004314*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00004318*/ LDR         R3, [R3, #-20]              @ 0xffffffec 
    /*0000431c*/ STR         R2, [SP, #28] 
    /*00004320*/ CMP         R3, #0 
    /*00004324*/ BEQ         GDC_CancelAllBusyJob_x44d0
    /*00004328*/ MOVW        R1, #0                      @ .LC178 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ba4] 
    /*0000432c*/ MOVT        R1, #0                      @ .LC178 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ba4] 
    /*00004330*/ STR         R1, [SP, #24] 
    /*00004334*/ MOVW        SL, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00004338*/ LDR         R1, [SP, #28] 
    /*0000433c*/ MOVT        SL, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00004340*/ MOV         R2, #0 
    /*00004344*/ STR         R2, [SP, #36]               @ 0x24 
    /*00004348*/ STR         R2, [SP, #20] 
    /*0000434c*/ LSL         R1, R1, #3 
    /*00004350*/ STR         R1, [SP, #52]               @ 0x34 
    /*00004354*/ LDR         R1, [SP, #40]               @ 0x28 
    /*00004358*/ LSL         R1, R1, #2 
    /*0000435c*/ STR         R1, [SP, #32] 
    GDC_CancelAllBusyJob_x4360:
    /*00004360*/ LDR         R2, [SP, #28] 
    /*00004364*/ CMP         R2, #0 
    /*00004368*/ BEQ         GDC_CancelAllBusyJob_x44ac
    /*0000436c*/ LDR         R9, [SP, #36]               @ 0x24 
    /*00004370*/ MOV         R8, #0 
    /*00004374*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00004378*/ ADD         R3, R3, #10 
    /*0000437c*/ STR         R3, [SP, #12] 
    GDC_CancelAllBusyJob_x4380:
    /*00004380*/ LDR         R2, [SP, #12] 
    /*00004384*/ LDR         R3, [SL, #4] 
    /*00004388*/ ADD         R3, R3, R2, LSL #2 
    /*0000438c*/ LDR         R3, [R3, #4] 
    /*00004390*/ ADD         R2, R3, R9 
    /*00004394*/ LDR         R4, [R3, R9] 
    /*00004398*/ CMP         R2, R4 
    /*0000439c*/ LDR         R5, [R4] 
    /*000043a0*/ BEQ         GDC_CancelAllBusyJob_x4490
    /*000043a4*/ LDR         R3, [PC, #804]              @ 0x00000000000046d0 
    /*000043a8*/ ADD         R6, SP, #60                 @ 0x3c 
    /*000043ac*/ LDR         R2, [SP, #32] 
    /*000043b0*/ LDR         R3, [R2, R3] 
    /*000043b4*/ STR         R3, [SP, #16] 
    GDC_CancelAllBusyJob_x43b8:
    /*000043b8*/ MOV         R1, R6 
    /*000043bc*/ MOV         R0, FP 
    /*000043c0*/ BL          0x00000000000043C0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000043c4*/ LDR         R3, [SL, #4] 
    /*000043c8*/ MOV         R2, R8 
    /*000043cc*/ LDR         R1, [SP, #20] 
    /*000043d0*/ LDR         R0, [SP, #16] 
    /*000043d4*/ STR         R4, [SP] 
    /*000043d8*/ BL          0x00000000000043D8          @ GDC_GetJobFromProcList [R_ARM_CALL: .text+0x10b9c] 
    /*000043dc*/ MOV         R1, R6 
    /*000043e0*/ MOV         R0, FP 
    /*000043e4*/ BL          0x00000000000043E4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000043e8*/ CMP         R4, #0 
    /*000043ec*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*000043f0*/ LDR         R3, [SP, #24] 
    /*000043f4*/ MOVW        R2, #2183                   @ 0x887 
    /*000043f8*/ LDR         R1, [PC, #724]              @ 0x00000000000046d4 
    /*000043fc*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00004400*/ BEQ         GDC_CancelAllBusyJob_x4414
    /*00004404*/ LDR         IP, [R4, #16] 
    /*00004408*/ SUB         IP, IP, #5 
    /*0000440c*/ CMP         IP, #1 
    /*00004410*/ BLS         GDC_CancelAllBusyJob_x4418
    GDC_CancelAllBusyJob_x4414:
    /*00004414*/ BL          0x0000000000004414          @ osal_panic [R_ARM_CALL: +0x0] 
    GDC_CancelAllBusyJob_x4418:
    /*00004418*/ MOV         R1, #3 
    /*0000441c*/ MOV         R0, R4 
    /*00004420*/ BL          0x0000000000001F68 
    /*00004424*/ LDR         R7, [R4, #76]               @ 0x4c 
    /*00004428*/ ADD         R3, R4, #44                 @ 0x2c 
    /*0000442c*/ MOV         R2, #3 
    /*00004430*/ CMP         R7, #0 
    /*00004434*/ BEQ         GDC_CancelAllBusyJob_x4448
    /*00004438*/ ADD         R0, R4, #28 
    /*0000443c*/ STR         R2, [R4, #60]               @ 0x3c 
    /*00004440*/ LDM         R0, {R0, R1, R2} 
    /*00004444*/ BLX         R7 
    GDC_CancelAllBusyJob_x4448:
    /*00004448*/ MOV         R1, R6 
    /*0000444c*/ MOV         R0, FP 
    /*00004450*/ BL          0x0000000000004450          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00004454*/ MOV         R1, R4 
    /*00004458*/ LDR         R0, [SL, #4] 
    /*0000445c*/ MOV         R4, R5 
    /*00004460*/ BL          0x0000000000004460          @ GDC_PutJobToFreeList [R_ARM_CALL: .text+0x102e4] 
    /*00004464*/ MOV         R1, R6 
    /*00004468*/ MOV         R0, FP 
    /*0000446c*/ BL          0x000000000000446C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004470*/ LDR         R1, [SP, #12] 
    /*00004474*/ LDR         R3, [SL, #4] 
    /*00004478*/ LDR         R5, [R5] 
    /*0000447c*/ ADD         R3, R3, R1, LSL #2 
    /*00004480*/ LDR         R3, [R3, #4] 
    /*00004484*/ ADD         R3, R3, R9 
    /*00004488*/ CMP         R4, R3 
    /*0000448c*/ BNE         GDC_CancelAllBusyJob_x43b8
    GDC_CancelAllBusyJob_x4490:
    /*00004490*/ LDR         R3, [SP, #28] 
    /*00004494*/ ADD         R8, R8, #1 
    /*00004498*/ ADD         R9, R9, #8 
    /*0000449c*/ CMP         R3, R8 
    /*000044a0*/ BNE         GDC_CancelAllBusyJob_x4380
    /*000044a4*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*000044a8*/ LDR         R3, [R3, #-20]              @ 0xffffffec 
    GDC_CancelAllBusyJob_x44ac:
    /*000044ac*/ LDR         R2, [SP, #20] 
    /*000044b0*/ LDR         R1, [SP, #36]               @ 0x24 
    /*000044b4*/ ADD         R2, R2, #1 
    /*000044b8*/ LDR         R0, [SP, #52]               @ 0x34 
    /*000044bc*/ CMP         R3, R2 
    /*000044c0*/ STR         R2, [SP, #20] 
    /*000044c4*/ ADD         R1, R1, R0 
    /*000044c8*/ STR         R1, [SP, #36]               @ 0x24 
    /*000044cc*/ BHI         GDC_CancelAllBusyJob_x4360
    GDC_CancelAllBusyJob_x44d0:
    /*000044d0*/ LDR         R3, [SP, #40]               @ 0x28 
    /*000044d4*/ ADD         R3, R3, #1 
    /*000044d8*/ STR         R3, [SP, #40]               @ 0x28 
    /*000044dc*/ CMP         R3, #4 
    /*000044e0*/ BNE         GDC_CancelAllBusyJob_x430c
    /*000044e4*/ LDR         FP, [PC, #492]              @ 0x00000000000046d8 
    /*000044e8*/ MOV         R3, #0 
    /*000044ec*/ STR         R3, [SP, #40]               @ 0x28 
    GDC_CancelAllBusyJob_x44f0:
    /*000044f0*/ LDR         R3, [SP, #48]               @ 0x30 
    /*000044f4*/ LDR         R2, [R3], #4 
    /*000044f8*/ STR         R3, [SP, #48]               @ 0x30 
    /*000044fc*/ LDR         R3, [R3, #-20]              @ 0xffffffec 
    /*00004500*/ STR         R2, [SP, #28] 
    /*00004504*/ CMP         R3, #0 
    /*00004508*/ BEQ         GDC_CancelAllBusyJob_x46b0
    /*0000450c*/ MOVW        R1, #0                      @ .LC179 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c18] 
    /*00004510*/ MOVT        R1, #0                      @ .LC179 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c18] 
    /*00004514*/ STR         R1, [SP, #24] 
    /*00004518*/ MOVW        SL, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000451c*/ LDR         R1, [SP, #28] 
    /*00004520*/ MOVT        SL, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00004524*/ MOV         R2, #0 
    /*00004528*/ STR         R2, [SP, #36]               @ 0x24 
    /*0000452c*/ STR         R2, [SP, #20] 
    /*00004530*/ LSL         R1, R1, #3 
    /*00004534*/ STR         R1, [SP, #44]               @ 0x2c 
    /*00004538*/ LDR         R1, [SP, #40]               @ 0x28 
    /*0000453c*/ LSL         R1, R1, #2 
    /*00004540*/ STR         R1, [SP, #32] 
    GDC_CancelAllBusyJob_x4544:
    /*00004544*/ LDR         R2, [SP, #28] 
    /*00004548*/ CMP         R2, #0 
    /*0000454c*/ BEQ         GDC_CancelAllBusyJob_x468c
    /*00004550*/ LDR         R9, [SP, #36]               @ 0x24 
    /*00004554*/ MOV         R8, #0 
    /*00004558*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000455c*/ ADD         R3, R3, #6 
    /*00004560*/ STR         R3, [SP, #12] 
    GDC_CancelAllBusyJob_x4564:
    /*00004564*/ LDR         R2, [SP, #12] 
    /*00004568*/ LDR         R3, [SL, #4] 
    /*0000456c*/ ADD         R3, R3, R2, LSL #2 
    /*00004570*/ LDR         R3, [R3, #4] 
    /*00004574*/ ADD         R2, R3, R9 
    /*00004578*/ LDR         R4, [R3, R9] 
    /*0000457c*/ CMP         R2, R4 
    /*00004580*/ LDR         R5, [R4] 
    /*00004584*/ BEQ         GDC_CancelAllBusyJob_x4670
    /*00004588*/ LDR         R3, [PC, #320]              @ 0x00000000000046d0 
    /*0000458c*/ ADD         R6, SP, #60                 @ 0x3c 
    /*00004590*/ LDR         R2, [SP, #32] 
    /*00004594*/ LDR         R3, [R2, R3] 
    /*00004598*/ STR         R3, [SP, #16] 
    GDC_CancelAllBusyJob_x459c:
    /*0000459c*/ MOV         R1, R6 
    /*000045a0*/ MOV         R0, FP 
    /*000045a4*/ BL          0x00000000000045A4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000045a8*/ LDR         R3, [SL, #4] 
    /*000045ac*/ MOV         R2, R8 
    /*000045b0*/ LDR         R1, [SP, #20] 
    /*000045b4*/ LDR         R0, [SP, #16] 
    /*000045b8*/ STR         R4, [SP] 
    /*000045bc*/ BL          0x00000000000045BC          @ GDC_GetJobFromBusyList [R_ARM_CALL: .text+0x109f8] 
    /*000045c0*/ MOV         R1, R6 
    /*000045c4*/ MOV         R0, FP 
    /*000045c8*/ BL          0x00000000000045C8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000045cc*/ CMP         R4, #0 
    /*000045d0*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*000045d4*/ LDR         R3, [SP, #24] 
    /*000045d8*/ MOVW        R2, #2217                   @ 0x8a9 
    /*000045dc*/ LDR         R1, [PC, #240]              @ 0x00000000000046d4 
    /*000045e0*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*000045e4*/ BEQ         GDC_CancelAllBusyJob_x45f4
    /*000045e8*/ LDR         IP, [R4, #16] 
    /*000045ec*/ CMP         IP, #2 
    /*000045f0*/ BEQ         GDC_CancelAllBusyJob_x45f8
    GDC_CancelAllBusyJob_x45f4:
    /*000045f4*/ BL          0x00000000000045F4          @ osal_panic [R_ARM_CALL: +0x0] 
    GDC_CancelAllBusyJob_x45f8:
    /*000045f8*/ MOV         R1, #3 
    /*000045fc*/ MOV         R0, R4 
    /*00004600*/ BL          0x0000000000001F68 
    /*00004604*/ LDR         R7, [R4, #76]               @ 0x4c 
    /*00004608*/ ADD         R3, R4, #44                 @ 0x2c 
    /*0000460c*/ MOV         R2, #3 
    /*00004610*/ CMP         R7, #0 
    /*00004614*/ BEQ         GDC_CancelAllBusyJob_x4628
    /*00004618*/ ADD         R0, R4, #28 
    /*0000461c*/ STR         R2, [R4, #60]               @ 0x3c 
    /*00004620*/ LDM         R0, {R0, R1, R2} 
    /*00004624*/ BLX         R7 
    GDC_CancelAllBusyJob_x4628:
    /*00004628*/ MOV         R1, R6 
    /*0000462c*/ MOV         R0, FP 
    /*00004630*/ BL          0x0000000000004630          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00004634*/ MOV         R1, R4 
    /*00004638*/ LDR         R0, [SL, #4] 
    /*0000463c*/ MOV         R4, R5 
    /*00004640*/ BL          0x0000000000004640          @ GDC_PutJobToFreeList [R_ARM_CALL: .text+0x102e4] 
    /*00004644*/ MOV         R1, R6 
    /*00004648*/ MOV         R0, FP 
    /*0000464c*/ BL          0x000000000000464C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004650*/ LDR         R1, [SP, #12] 
    /*00004654*/ LDR         R3, [SL, #4] 
    /*00004658*/ LDR         R5, [R5] 
    /*0000465c*/ ADD         R3, R3, R1, LSL #2 
    /*00004660*/ LDR         R3, [R3, #4] 
    /*00004664*/ ADD         R3, R3, R9 
    /*00004668*/ CMP         R4, R3 
    /*0000466c*/ BNE         GDC_CancelAllBusyJob_x459c
    GDC_CancelAllBusyJob_x4670:
    /*00004670*/ LDR         R3, [SP, #28] 
    /*00004674*/ ADD         R8, R8, #1 
    /*00004678*/ ADD         R9, R9, #8 
    /*0000467c*/ CMP         R3, R8 
    /*00004680*/ BNE         GDC_CancelAllBusyJob_x4564
    /*00004684*/ LDR         R3, [SP, #48]               @ 0x30 
    /*00004688*/ LDR         R3, [R3, #-20]              @ 0xffffffec 
    GDC_CancelAllBusyJob_x468c:
    /*0000468c*/ LDR         R2, [SP, #20] 
    /*00004690*/ LDR         R1, [SP, #36]               @ 0x24 
    /*00004694*/ ADD         R2, R2, #1 
    /*00004698*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*0000469c*/ CMP         R3, R2 
    /*000046a0*/ STR         R2, [SP, #20] 
    /*000046a4*/ ADD         R1, R1, R0 
    /*000046a8*/ STR         R1, [SP, #36]               @ 0x24 
    /*000046ac*/ BHI         GDC_CancelAllBusyJob_x4544
    GDC_CancelAllBusyJob_x46b0:
    /*000046b0*/ LDR         R3, [SP, #40]               @ 0x28 
    /*000046b4*/ ADD         R3, R3, #1 
    /*000046b8*/ STR         R3, [SP, #40]               @ 0x28 
    /*000046bc*/ CMP         R3, #4 
    /*000046c0*/ BNE         GDC_CancelAllBusyJob_x44f0
    /*000046c4*/ ADD         SP, SP, #68                 @ 0x44 
    /*000046c8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*000046cc*/ ANDEQ       R0, R0, IP, LSL R0 
    /*000046d0*/ ANDEQ       R0, R0, R8, ASR R1 
    /*000046d4*/ ANDEQ       R0, R0, R4, ROR #6 
    /*000046d8*/ ANDEQ       R0, R0, R0, ASR #32 
FUNC_END GDC_CancelAllBusyJob


FUNC_BEGIN GDC_CancelAllCreatedJob
    /*000046dc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000046e0*/ MOVW        R5, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000046e4*/ MOVT        R5, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000046e8*/ SUB         SP, SP, #8 
    /*000046ec*/ LDR         R3, [R5, #4] 
    /*000046f0*/ LDR         R4, [R3, #20]! 
    /*000046f4*/ CMP         R4, R3 
    /*000046f8*/ LDR         R6, [R4] 
    /*000046fc*/ BEQ         GDC_CancelAllCreatedJob_x47f4
    /*00004700*/ LDR         R9, [PC, #244]              @ 0x00000000000047fc 
    /*00004704*/ MOVW        R8, #0                      @ .LC180 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c58] 
    /*00004708*/ ADD         R7, R5, #64                 @ 0x40 
    /*0000470c*/ MOVT        R8, #0                      @ .LC180 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c58] 
    GDC_CancelAllCreatedJob_x4710:
    /*00004710*/ ADD         R1, SP, #4 
    /*00004714*/ MOV         R0, R7 
    /*00004718*/ BL          0x0000000000004718          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000471c*/ MOV         R1, R4 
    /*00004720*/ LDR         R0, [R5, #4] 
    /*00004724*/ BL          0x0000000000004724          @ GDC_GetJobFromCreatedList [R_ARM_CALL: .text+0x10798] 
    /*00004728*/ CMP         R4, #0 
    /*0000472c*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00004730*/ MOV         R3, R8 
    /*00004734*/ MOVW        R2, #2266                   @ 0x8da 
    /*00004738*/ MOV         R1, R9 
    /*0000473c*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00004740*/ BEQ         GDC_CancelAllCreatedJob_x4750
    /*00004744*/ LDR         IP, [R4, #16] 
    /*00004748*/ CMP         IP, #1 
    /*0000474c*/ BEQ         GDC_CancelAllCreatedJob_x4754
    GDC_CancelAllCreatedJob_x4750:
    /*00004750*/ BL          0x0000000000004750          @ osal_panic [R_ARM_CALL: +0x0] 
    GDC_CancelAllCreatedJob_x4754:
    /*00004754*/ LDR         R2, [R5, #4] 
    /*00004758*/ MOV         R0, R4 
    /*0000475c*/ LDR         R3, [R2, #1324]             @ 0x52c 
    /*00004760*/ ADD         R3, R3, #1 
    /*00004764*/ STR         R3, [R2, #1324]             @ 0x52c 
    /*00004768*/ BL          0x0000000000004768          @ GDC_QueryTaskNumInJob [R_ARM_CALL: .text+0x1015c] 
    /*0000476c*/ LDR         R2, [R5, #4] 
    /*00004770*/ ADD         R1, SP, #4 
    /*00004774*/ LDR         R3, [R2, #1336]             @ 0x538 
    /*00004778*/ ADD         R3, R3, R0 
    /*0000477c*/ MOV         R0, R7 
    /*00004780*/ STR         R3, [R2, #1336]             @ 0x538 
    /*00004784*/ BL          0x0000000000004784          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004788*/ MOV         R1, #3 
    /*0000478c*/ MOV         R0, R4 
    /*00004790*/ BL          0x0000000000001F68 
    /*00004794*/ LDR         SL, [R4, #76]               @ 0x4c 
    /*00004798*/ ADD         R3, R4, #44                 @ 0x2c 
    /*0000479c*/ MOV         R2, #3 
    /*000047a0*/ CMP         SL, #0 
    /*000047a4*/ BEQ         GDC_CancelAllCreatedJob_x47b8
    /*000047a8*/ ADD         R0, R4, #28 
    /*000047ac*/ STR         R2, [R4, #60]               @ 0x3c 
    /*000047b0*/ LDM         R0, {R0, R1, R2} 
    /*000047b4*/ BLX         SL 
    GDC_CancelAllCreatedJob_x47b8:
    /*000047b8*/ ADD         R1, SP, #4 
    /*000047bc*/ MOV         R0, R7 
    /*000047c0*/ BL          0x00000000000047C0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000047c4*/ MOV         R1, R4 
    /*000047c8*/ LDR         R0, [R5, #4] 
    /*000047cc*/ MOV         R4, R6 
    /*000047d0*/ BL          0x00000000000047D0          @ GDC_PutJobToFreeList [R_ARM_CALL: .text+0x102e4] 
    /*000047d4*/ ADD         R1, SP, #4 
    /*000047d8*/ MOV         R0, R7 
    /*000047dc*/ BL          0x00000000000047DC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000047e0*/ LDR         R3, [R5, #4] 
    /*000047e4*/ LDR         R6, [R6] 
    /*000047e8*/ ADD         R3, R3, #20 
    /*000047ec*/ CMP         R4, R3 
    /*000047f0*/ BNE         GDC_CancelAllCreatedJob_x4710
    GDC_CancelAllCreatedJob_x47f4:
    /*000047f4*/ ADD         SP, SP, #8 
    /*000047f8*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*000047fc*/ ANDEQ       R0, R0, IP, ROR R3 
FUNC_END GDC_CancelAllCreatedJob


FUNC_BEGIN GDC_Notify
    /*00004800*/ CMP         R0, #17 
    /*00004804*/ BXNE        LR 
    /*00004808*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000480c*/ SUB         SP, SP, #12 
    /*00004810*/ MOVW        R3, #3293                   @ 0xcdd 
    /*00004814*/ MOVW        R2, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c98] 
    /*00004818*/ STR         R3, [SP] 
    /*0000481c*/ MOVT        R2, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c98] 
    /*00004820*/ LDR         R3, [PC, #72]               @ 0x0000000000004870 
    /*00004824*/ MOV         R1, #37                     @ 0x25 
    /*00004828*/ MOV         R0, #6 
    /*0000482c*/ BL          0x000000000000482C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004830*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00004834*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00004838*/ LDR         R2, [R3] 
    /*0000483c*/ CMP         R2, #0 
    /*00004840*/ BNE         GDC_Notify_x484c
    /*00004844*/ ADD         SP, SP, #12 
    /*00004848*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    GDC_Notify_x484c:
    /*0000484c*/ MOV         R0, #1 
    /*00004850*/ MOV         R2, #2 
    /*00004854*/ STR         R2, [R3] 
    /*00004858*/ BL          0x0000000000004858          @ GDC_DrvCommNotify [R_ARM_CALL: .text+0x163a8] 
    /*0000485c*/ BL          0x000000000000485C          @ GDC_DrvCommExit [R_ARM_CALL: .text+0x1633c] 
    /*00004860*/ BL          0x0000000000004860          @ GDC_CancelAllBusyJob [R_ARM_CALL: .text+0x42ec] 
    /*00004864*/ ADD         SP, SP, #12 
    /*00004868*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_Notify_x486c:
    /*0000486c*/ B           GDC_Notify_x486c            @ GDC_CancelAllCreatedJob [R_ARM_JUMP24: .text+0x46dc] 
    /*00004870*/ MULEQ       R0, R4, R3 
FUNC_END GDC_Notify


FUNC_BEGIN GDC_UsrEndJob
    /*00004874*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00004878*/ SUBS        R4, R0, #0 
    /*0000487c*/ SUB         SP, SP, #40                 @ 0x28 
    /*00004880*/ BLT         GDC_UsrEndJob_x49cc
    /*00004884*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00004888*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000488c*/ LDR         R3, [R3] 
    /*00004890*/ CMP         R3, R4 
    /*00004894*/ BLS         GDC_UsrEndJob_x49cc
    /*00004898*/ MOVW        R5, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000489c*/ MOVT        R5, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000048a0*/ LDR         R3, [R5] 
    /*000048a4*/ CMP         R3, #1 
    /*000048a8*/ BEQ         GDC_UsrEndJob_x48c4
    /*000048ac*/ BL          0x0000000000000CEC 
    /*000048b0*/ SUBS        R9, R0, #0 
    /*000048b4*/ BEQ         GDC_UsrEndJob_x48c4
    GDC_UsrEndJob_x48b8:
    /*000048b8*/ MOV         R0, R9 
    /*000048bc*/ ADD         SP, SP, #40                 @ 0x28 
    /*000048c0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    GDC_UsrEndJob_x48c4:
    /*000048c4*/ LDR         R0, [PC, #364]              @ 0x0000000000004a38 
    /*000048c8*/ ADD         R1, SP, #28 
    /*000048cc*/ BL          0x00000000000048CC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000048d0*/ LDR         R3, [R5, #4] 
    /*000048d4*/ LDR         R3, [R3, #4] 
    /*000048d8*/ LDR         R8, [R3, R4, LSL #2] 
    /*000048dc*/ LDR         R3, [R8, #28] 
    /*000048e0*/ CMP         R3, #30 
    /*000048e4*/ BNE         GDC_UsrEndJob_x49fc
    /*000048e8*/ MOV         R3, #1 
    /*000048ec*/ ADD         R1, SP, #28 
    /*000048f0*/ LDR         R0, [PC, #320]              @ 0x0000000000004a38 
    /*000048f4*/ STR         R3, [R8, #108]              @ 0x6c 
    /*000048f8*/ BL          0x00000000000048F8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000048fc*/ MOV         R0, R4 
    /*00004900*/ BL          0x0000000000004900          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*00004904*/ SUBS        R9, R0, #0 
    /*00004908*/ BNE         GDC_UsrEndJob_x49a4
    /*0000490c*/ LDR         SL, [R8, #80]               @ 0x50 
    /*00004910*/ MOVW        R6, #0                      @ GDC_WaitConditionCallBack [R_ARM_MOVW_ABS_NC: .text+0xb0c] 
    /*00004914*/ ADD         R4, SP, #40                 @ 0x28 
    /*00004918*/ ADD         R7, R8, #84                 @ 0x54 
    /*0000491c*/ MOVT        R6, #0                      @ GDC_WaitConditionCallBack [R_ARM_MOVT_ABS: .text+0xb0c] 
    /*00004920*/ STR         R8, [SP, #36]               @ 0x24 
    /*00004924*/ STR         SL, [R4, #-8]! 
    GDC_UsrEndJob_x4928:
    /*00004928*/ MOV         R0, R4 
    /*0000492c*/ BL          0x000000000000492C          @ GDC_WaitConditionCallBack [R_ARM_CALL: .text+0xb0c] 
    /*00004930*/ MOV         R3, #100                    @ 0x64 
    /*00004934*/ MOV         R2, R4 
    /*00004938*/ MOV         R1, R6 
    /*0000493c*/ CMP         R0, #0 
    /*00004940*/ MOV         R0, R7 
    /*00004944*/ BNE         GDC_UsrEndJob_x48b8
    /*00004948*/ BL          0x0000000000004948          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*0000494c*/ CMP         R0, #0 
    /*00004950*/ BGE         GDC_UsrEndJob_x4928
    /*00004954*/ STR         SL, [SP, #16] 
    /*00004958*/ MOVW        LR, #2370                   @ 0x942 
    /*0000495c*/ LDR         IP, [R8, #80]               @ 0x50 
    /*00004960*/ MOV         R1, #37                     @ 0x25 
    /*00004964*/ LDR         R0, [R5] 
    /*00004968*/ MOVW        R2, #0                      @ .LC184 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d6c] 
    /*0000496c*/ LDR         R3, [PC, #200]              @ 0x0000000000004a3c 
    /*00004970*/ MOVT        R2, #0                      @ .LC184 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d6c] 
    /*00004974*/ STR         IP, [SP, #12] 
    /*00004978*/ MOV         R9, #65024                  @ 0xfe00 
    /*0000497c*/ STR         R0, [SP, #8] 
    /*00004980*/ MOV         R0, #1 
    /*00004984*/ LDR         IP, [R8, #16] 
    /*00004988*/ MOVT        R9, #65535                  @ 0xffff 
    /*0000498c*/ STR         LR, [SP] 
    /*00004990*/ STR         IP, [SP, #4] 
    /*00004994*/ BL          0x0000000000004994          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004998*/ MOV         R0, R9 
    /*0000499c*/ ADD         SP, SP, #40                 @ 0x28 
    /*000049a0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    GDC_UsrEndJob_x49a4:
    /*000049a4*/ MOVW        R3, #2356                   @ 0x934 
    /*000049a8*/ STR         R4, [SP, #4] 
    /*000049ac*/ STR         R3, [SP] 
    /*000049b0*/ MOVW        R2, #0                      @ .LC183 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d3c] 
    /*000049b4*/ LDR         R3, [PC, #128]              @ 0x0000000000004a3c 
    /*000049b8*/ MOVT        R2, #0                      @ .LC183 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d3c] 
    /*000049bc*/ MOV         R1, #37                     @ 0x25 
    /*000049c0*/ MOV         R0, #3 
    /*000049c4*/ BL          0x00000000000049C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000049c8*/ B           GDC_UsrEndJob_x48b8
    GDC_UsrEndJob_x49cc:
    /*000049cc*/ MOVW        R3, #2331                   @ 0x91b 
    /*000049d0*/ STR         R4, [SP, #4] 
    /*000049d4*/ STR         R3, [SP] 
    /*000049d8*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xecc] 
    /*000049dc*/ LDR         R3, [PC, #88]               @ 0x0000000000004a3c 
    /*000049e0*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0xecc] 
    /*000049e4*/ MOV         R1, #37                     @ 0x25 
    /*000049e8*/ MOV         R0, #3 
    /*000049ec*/ MOVW        R9, #32771                  @ 0x8003 
    /*000049f0*/ BL          0x00000000000049F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000049f4*/ MOVT        R9, #40997                  @ 0xa025 
    /*000049f8*/ B           GDC_UsrEndJob_x48b8
    GDC_UsrEndJob_x49fc:
    /*000049fc*/ MOVW        R3, #2339                   @ 0x923 
    /*00004a00*/ MOV         R1, #37                     @ 0x25 
    /*00004a04*/ STR         R3, [SP] 
    /*00004a08*/ MOVW        R2, #0                      @ .LC182 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cd4] 
    /*00004a0c*/ LDR         R3, [PC, #40]               @ 0x0000000000004a3c 
    /*00004a10*/ MOVT        R2, #0                      @ .LC182 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cd4] 
    /*00004a14*/ STR         R4, [SP, #4] 
    /*00004a18*/ MOV         R0, #3 
    /*00004a1c*/ BL          0x0000000000004A1C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004a20*/ ADD         R1, SP, #28 
    /*00004a24*/ LDR         R0, [PC, #12]               @ 0x0000000000004a38 
    /*00004a28*/ MOVW        R9, #32777                  @ 0x8009 
    /*00004a2c*/ BL          0x0000000000004A2C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004a30*/ MOVT        R9, #40997                  @ 0xa025 
    /*00004a34*/ B           GDC_UsrEndJob_x48b8
    /*00004a38*/ ANDEQ       R0, R0, R0, ASR #32 
    /*00004a3c*/ ANDEQ       R0, R0, R0, LSR #7 
FUNC_END GDC_UsrEndJob


FUNC_BEGIN GDC_LowDelayIntCallBack
    /*00004a40*/ CMP         R0, #400                    @ 0x190 
    /*00004a44*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00004a48*/ MOV         R4, R0 
    /*00004a4c*/ BCS         GDC_LowDelayIntCallBack_x4b14
    GDC_LowDelayIntCallBack_x4a50:
    /*00004a50*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00004a54*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00004a58*/ LDR         R3, [R3, #4] 
    /*00004a5c*/ LDR         R3, [R3, #4] 
    /*00004a60*/ LDR         R5, [R3, R4, LSL #2] 
    /*00004a64*/ CMP         R5, #0 
    /*00004a68*/ BEQ         GDC_LowDelayIntCallBack_x4b34
    /*00004a6c*/ LDR         R3, [R5, #16] 
    /*00004a70*/ CMP         R3, #5 
    /*00004a74*/ BEQ         GDC_LowDelayIntCallBack_x4ab4
    /*00004a78*/ MOVW        R0, #0                      @ .LC186 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1de4] 
    /*00004a7c*/ MOVW        R2, #2401                   @ 0x961 
    /*00004a80*/ MOVT        R0, #0                      @ .LC186 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1de4] 
    /*00004a84*/ LDR         R1, [PC, #192]              @ 0x0000000000004b4c 
    /*00004a88*/ BL          0x0000000000004A88          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00004a8c*/ LDR         R3, [R5, #16] 
    /*00004a90*/ CMP         R3, #5 
    /*00004a94*/ BEQ         GDC_LowDelayIntCallBack_x4ab4
    GDC_LowDelayIntCallBack_x4a98:
    /*00004a98*/ MOVW        R3, #0                      @ .LC188 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e1c] 
    /*00004a9c*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00004aa0*/ MOVT        R3, #0                      @ .LC188 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e1c] 
    /*00004aa4*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00004aa8*/ MOVW        R2, #2408                   @ 0x968 
    /*00004aac*/ LDR         R1, [PC, #152]              @ 0x0000000000004b4c 
    /*00004ab0*/ BL          0x0000000000004AB0          @ osal_panic [R_ARM_CALL: +0x0] 
    GDC_LowDelayIntCallBack_x4ab4:
    /*00004ab4*/ LDR         R3, [R5, #28] 
    /*00004ab8*/ CMP         R3, #59                     @ 0x3b 
    /*00004abc*/ BLS         GDC_LowDelayIntCallBack_x4adc
    /*00004ac0*/ MOVW        R3, #0                      @ .LC175 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b40] 
    /*00004ac4*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00004ac8*/ MOVT        R3, #0                      @ .LC175 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b40] 
    /*00004acc*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00004ad0*/ MOVW        R2, #2413                   @ 0x96d 
    /*00004ad4*/ LDR         R1, [PC, #112]              @ 0x0000000000004b4c 
    /*00004ad8*/ BL          0x0000000000004AD8          @ osal_panic [R_ARM_CALL: +0x0] 
    GDC_LowDelayIntCallBack_x4adc:
    /*00004adc*/ MOV         R6, R5 
    /*00004ae0*/ LDR         R4, [R6, #8]! 
    /*00004ae4*/ CMP         R4, R6 
    /*00004ae8*/ POPEQ       {R4, R5, R6, R7, R8, PC} 
    /*00004aec*/ MOV         R7, #4 
    GDC_LowDelayIntCallBack_x4af0:
    /*00004af0*/ ADD         R0, R5, #28 
    /*00004af4*/ STR         R7, [R4, #772]              @ 0x304 
    /*00004af8*/ MOV         R3, R4 
    /*00004afc*/ LDM         R0, {R0, R1, R2} 
    /*00004b00*/ BL          0x000000000000003C 
    /*00004b04*/ LDR         R4, [R4] 
    /*00004b08*/ CMP         R4, R6 
    /*00004b0c*/ BNE         GDC_LowDelayIntCallBack_x4af0
    /*00004b10*/ POP         {R4, R5, R6, R7, R8, PC} 
    GDC_LowDelayIntCallBack_x4b14:
    /*00004b14*/ MOVW        R3, #0                      @ .LC185 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1db4] 
    /*00004b18*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00004b1c*/ MOVT        R3, #0                      @ .LC185 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1db4] 
    /*00004b20*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00004b24*/ MOVW        R2, #2392                   @ 0x958 
    /*00004b28*/ LDR         R1, [PC, #28]               @ 0x0000000000004b4c 
    /*00004b2c*/ BL          0x0000000000004B2C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00004b30*/ B           GDC_LowDelayIntCallBack_x4a50
    GDC_LowDelayIntCallBack_x4b34:
    /*00004b34*/ MOVW        R0, #0                      @ .LC187 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e04] 
    /*00004b38*/ MOVW        R2, #2405                   @ 0x965 
    /*00004b3c*/ LDR         R1, [PC, #8]                @ 0x0000000000004b4c 
    /*00004b40*/ MOVT        R0, #0                      @ .LC187 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e04] 
    /*00004b44*/ BL          0x0000000000004B44          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00004b48*/ B           GDC_LowDelayIntCallBack_x4a98
    /*00004b4c*/ @           <UNDEFINED> instruction: 0x000003b0 
FUNC_END GDC_LowDelayIntCallBack


FUNC_BEGIN GDC_IntCallBack
    /*00004b50*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00004b54*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00004b58*/ SUB         SP, SP, #60                 @ 0x3c 
    /*00004b5c*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00004b60*/ CMP         R0, #400                    @ 0x190 
    /*00004b64*/ MOV         R4, R0 
    /*00004b68*/ STR         R3, [SP, #20] 
    /*00004b6c*/ LDR         R3, [R3, #4] 
    /*00004b70*/ STR         R1, [SP, #32] 
    /*00004b74*/ MOV         R8, R3 
    /*00004b78*/ BCS         GDC_IntCallBack_x5000
    GDC_IntCallBack_x4b7c:
    /*00004b7c*/ LDR         R2, [R3, #4] 
    /*00004b80*/ LDR         R1, [SP, #32] 
    /*00004b84*/ BIC         R3, R1, #4 
    /*00004b88*/ LDR         R4, [R2, R4, LSL #2] 
    /*00004b8c*/ CMP         R3, #2 
    /*00004b90*/ SUB         R1, R1, #6 
    /*00004b94*/ CLZ         R1, R1 
    /*00004b98*/ MOVEQ       R5, #6 
    /*00004b9c*/ MOVNE       R5, #7 
    /*00004ba0*/ CMP         R4, #0 
    /*00004ba4*/ LSR         R1, R1, #5 
    /*00004ba8*/ STR         R1, [SP, #44]               @ 0x2c 
    /*00004bac*/ BEQ         GDC_IntCallBack_x5028
    /*00004bb0*/ LDR         R3, [R4, #16] 
    /*00004bb4*/ CMP         R3, #5 
    /*00004bb8*/ BEQ         GDC_IntCallBack_x4bf8
    /*00004bbc*/ MOVW        R0, #0                      @ .LC186 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1de4] 
    /*00004bc0*/ MOVW        R2, #2481                   @ 0x9b1 
    /*00004bc4*/ MOVT        R0, #0                      @ .LC186 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1de4] 
    /*00004bc8*/ LDR         R1, [PC, #1168]             @ 0x0000000000005060 
    /*00004bcc*/ BL          0x0000000000004BCC          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00004bd0*/ LDR         R3, [R4, #16] 
    /*00004bd4*/ CMP         R3, #5 
    /*00004bd8*/ BEQ         GDC_IntCallBack_x4bf8
    GDC_IntCallBack_x4bdc:
    /*00004bdc*/ MOVW        R3, #0                      @ .LC188 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e1c] 
    /*00004be0*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00004be4*/ MOVT        R3, #0                      @ .LC188 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e1c] 
    /*00004be8*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00004bec*/ MOVW        R2, #2488                   @ 0x9b8 
    /*00004bf0*/ LDR         R1, [PC, #1128]             @ 0x0000000000005060 
    /*00004bf4*/ BL          0x0000000000004BF4          @ osal_panic [R_ARM_CALL: +0x0] 
    GDC_IntCallBack_x4bf8:
    /*00004bf8*/ LDR         R7, [R4, #28] 
    /*00004bfc*/ LDR         R9, [R4, #32] 
    /*00004c00*/ CMP         R7, #59                     @ 0x3b 
    /*00004c04*/ LDR         SL, [R4, #36]               @ 0x24 
    /*00004c08*/ BHI         GDC_IntCallBack_x4fe0
    GDC_IntCallBack_x4c0c:
    /*00004c0c*/ STR         R5, [R4, #16] 
    /*00004c10*/ ADD         R0, R4, #84                 @ 0x54 
    /*00004c14*/ BL          0x0000000000004C14          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00004c18*/ ADD         R1, SP, #48                 @ 0x30 
    /*00004c1c*/ LDR         R0, [PC, #1088]             @ 0x0000000000005064 
    /*00004c20*/ BL          0x0000000000004C20          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00004c24*/ LDR         R5, [SP, #20] 
    /*00004c28*/ MOV         R0, R4 
    /*00004c2c*/ LDR         R3, [R5, #4] 
    /*00004c30*/ LDR         R1, [R3, #1300]             @ 0x514 
    /*00004c34*/ LDR         R2, [R3, #1316]             @ 0x524 
    /*00004c38*/ ADD         R1, R1, #1 
    /*00004c3c*/ STR         R1, [R3, #1300]             @ 0x514 
    /*00004c40*/ ADD         R2, R2, #1 
    /*00004c44*/ STR         R2, [R3, #1316]             @ 0x524 
    /*00004c48*/ BL          0x0000000000004C48          @ GDC_QueryTaskNumInJob [R_ARM_CALL: .text+0x1015c] 
    /*00004c4c*/ LDR         R2, [R5, #4] 
    /*00004c50*/ ADD         R1, SP, #48                 @ 0x30 
    /*00004c54*/ LDR         R3, [R2, #1328]             @ 0x530 
    /*00004c58*/ ADD         R0, R3, R0 
    /*00004c5c*/ STR         R0, [R2, #1328]             @ 0x530 
    /*00004c60*/ LDR         R0, [PC, #1020]             @ 0x0000000000005064 
    /*00004c64*/ BL          0x0000000000004C64          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004c68*/ SUB         R2, R7, #7 
    /*00004c6c*/ CMP         R2, #23 
    /*00004c70*/ MOVWLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00004c74*/ MOVHI       R1, #4 
    /*00004c78*/ MOVTLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00004c7c*/ ADDLS       R3, R3, R2, LSL #2 
    /*00004c80*/ LDR         R2, [SP, #20] 
    /*00004c84*/ LDRLS       R1, [R3, #248]              @ 0xf8 
    /*00004c88*/ ADD         R3, R2, R1, LSL #2 
    /*00004c8c*/ LDR         R2, [R2, #4] 
    /*00004c90*/ LDR         R3, [R3, #28] 
    /*00004c94*/ ADD         R2, R2, R1, LSL #2 
    /*00004c98*/ LDR         R2, [R2, #44]               @ 0x2c 
    /*00004c9c*/ MLA         R3, R3, R9, SL 
    /*00004ca0*/ LDR         R4, [R2, R3, LSL #3] 
    /*00004ca4*/ ADD         R3, R2, R3, LSL #3 
    /*00004ca8*/ STR         R3, [SP, #16] 
    /*00004cac*/ CMP         R3, R4 
    /*00004cb0*/ LDR         R5, [R4] 
    /*00004cb4*/ BEQ         GDC_IntCallBack_x4d7c
    /*00004cb8*/ LDR         R6, [PC, #928]              @ 0x0000000000005060 
    /*00004cbc*/ MOVW        FP, #0                      @ .LC189 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e5c] 
    /*00004cc0*/ MOVT        FP, #0                      @ .LC189 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e5c] 
    /*00004cc4*/ MOVW        R3, #19923                  @ 0x4dd3 
    /*00004cc8*/ MOVT        R3, #4194                   @ 0x1062 
    /*00004ccc*/ STR         R3, [SP, #36]               @ 0x24 
    /*00004cd0*/ MOV         R3, #4 
    /*00004cd4*/ STR         R3, [SP, #28] 
    /*00004cd8*/ MOV         R3, #7 
    /*00004cdc*/ STR         R3, [SP, #24] 
    GDC_IntCallBack_x4ce0:
    /*00004ce0*/ MOV         R3, R8 
    /*00004ce4*/ MOV         R2, SL 
    /*00004ce8*/ MOV         R1, R9 
    /*00004cec*/ MOV         R0, R7 
    /*00004cf0*/ BL          0x0000000000004CF0          @ GDC_QueryProcJobNum [R_ARM_CALL: .text+0x10cf8] 
    /*00004cf4*/ STR         R4, [SP, #12] 
    /*00004cf8*/ LDR         IP, [R4, #88]               @ 0x58 
    /*00004cfc*/ MOVW        R2, #2516                   @ 0x9d4 
    /*00004d00*/ MOV         R3, R6 
    /*00004d04*/ STR         R2, [SP] 
    /*00004d08*/ MOV         R1, #37                     @ 0x25 
    /*00004d0c*/ MOV         R2, FP 
    /*00004d10*/ STMIB       SP, {R0, IP} 
    /*00004d14*/ MOV         R0, #7 
    /*00004d18*/ BL          0x0000000000004D18          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004d1c*/ LDR         R3, [R4, #16] 
    /*00004d20*/ SUB         R2, R3, #6 
    /*00004d24*/ CMP         R2, #1 
    /*00004d28*/ BLS         GDC_IntCallBack_x4d84
    /*00004d2c*/ CMP         R3, #5 
    /*00004d30*/ BEQ         GDC_IntCallBack_x4d7c
    /*00004d34*/ MOVW        R3, #0                      @ .LC147 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x152c] 
    /*00004d38*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00004d3c*/ MOVT        R3, #0                      @ .LC147 [R_ARM_MOVT_ABS: .rodata.str1.4+0x152c] 
    /*00004d40*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00004d44*/ MOVW        R2, #2602                   @ 0xa2a 
    /*00004d48*/ MOV         R1, R6 
    /*00004d4c*/ BL          0x0000000000004D4C          @ osal_panic [R_ARM_CALL: +0x0] 
    GDC_IntCallBack_x4d50:
    /*00004d50*/ LDR         R3, [SP, #16] 
    /*00004d54*/ CMP         R5, R3 
    /*00004d58*/ MOVNE       R4, R5 
    /*00004d5c*/ LDRNE       R5, [R5] 
    /*00004d60*/ BNE         GDC_IntCallBack_x4ce0
    /*00004d64*/ LDR         R4, [R5] 
    /*00004d68*/ CMP         R4, R5 
    /*00004d6c*/ BEQ         GDC_IntCallBack_x4d7c
    /*00004d70*/ CMP         R5, R4 
    /*00004d74*/ LDR         R5, [R4] 
    /*00004d78*/ BNE         GDC_IntCallBack_x4ce0
    GDC_IntCallBack_x4d7c:
    /*00004d7c*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00004d80*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_IntCallBack_x4d84:
    /*00004d84*/ ADD         R1, SP, #48                 @ 0x30 
    /*00004d88*/ LDR         R0, [PC, #724]              @ 0x0000000000005064 
    /*00004d8c*/ BL          0x0000000000004D8C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00004d90*/ MOV         R3, R8 
    /*00004d94*/ MOV         R2, SL 
    /*00004d98*/ MOV         R1, R9 
    /*00004d9c*/ MOV         R0, R7 
    /*00004da0*/ STR         R4, [SP] 
    /*00004da4*/ BL          0x0000000000004DA4          @ GDC_GetJobFromProcList [R_ARM_CALL: .text+0x10b9c] 
    /*00004da8*/ ADD         R1, SP, #48                 @ 0x30 
    /*00004dac*/ LDR         R0, [PC, #688]              @ 0x0000000000005064 
    /*00004db0*/ BL          0x0000000000004DB0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004db4*/ LDR         R3, [R4, #16] 
    /*00004db8*/ CMP         R3, #6 
    /*00004dbc*/ BEQ         GDC_IntCallBack_x4f98
    /*00004dc0*/ CMP         R3, #7 
    /*00004dc4*/ BNE         GDC_IntCallBack_x4f78
    /*00004dc8*/ LDR         R3, [R4, #68]               @ 0x44 
    /*00004dcc*/ LDR         R2, [SP, #32] 
    /*00004dd0*/ CMP         R3, #1 
    /*00004dd4*/ CMPEQ       R2, #8 
    /*00004dd8*/ MOV         R3, #2 
    /*00004ddc*/ STR         R3, [SP, #28] 
    /*00004de0*/ MOVEQ       R3, #6 
    /*00004de4*/ STREQ       R3, [SP, #24] 
    /*00004de8*/ BEQ         GDC_IntCallBack_x4df0
    GDC_IntCallBack_x4dec:
    /*00004dec*/ STR         R3, [SP, #24] 
    GDC_IntCallBack_x4df0:
    /*00004df0*/ LDR         R1, [SP, #24] 
    /*00004df4*/ MOV         R0, R4 
    /*00004df8*/ BL          0x0000000000001F68 
    /*00004dfc*/ LDR         R3, [R4, #76]               @ 0x4c 
    /*00004e00*/ SUBS        IP, R3, #0 
    /*00004e04*/ BEQ         GDC_IntCallBack_x4e20
    /*00004e08*/ LDR         R3, [SP, #28] 
    /*00004e0c*/ ADD         R0, R4, #28 
    /*00004e10*/ STR         R3, [R4, #60]               @ 0x3c 
    /*00004e14*/ ADD         R3, R4, #44                 @ 0x2c 
    /*00004e18*/ LDM         R0, {R0, R1, R2} 
    /*00004e1c*/ BLX         IP 
    GDC_IntCallBack_x4e20:
    /*00004e20*/ CMP         R4, #0 
    /*00004e24*/ BEQ         GDC_IntCallBack_x5040
    GDC_IntCallBack_x4e28:
    /*00004e28*/ LDR         R1, [R4, #28] 
    /*00004e2c*/ ADD         R0, R4, #160                @ 0xa0 
    /*00004e30*/ LDR         R2, [R4, #16] 
    /*00004e34*/ LDR         R3, [R4, #88]               @ 0x58 
    /*00004e38*/ STR         R1, [R4, #124]              @ 0x7c 
    /*00004e3c*/ STR         R2, [R4, #132]              @ 0x84 
    /*00004e40*/ STR         R3, [R4, #120]              @ 0x78 
    /*00004e44*/ BL          0x0000000000004E44          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*00004e48*/ LDR         R3, [R4, #144]              @ 0x90 
    /*00004e4c*/ LDR         LR, [R4, #160]              @ 0xa0 
    /*00004e50*/ MOVW        R0, #16960                  @ 0x4240 
    /*00004e54*/ LDR         R2, [R4, #164]              @ 0xa4 
    /*00004e58*/ MOVT        R0, #15 
    /*00004e5c*/ SUB         LR, LR, R3 
    /*00004e60*/ LDR         R3, [R4, #148]              @ 0x94 
    /*00004e64*/ LDR         IP, [R4, #168]              @ 0xa8 
    /*00004e68*/ SUB         R2, R2, R3 
    /*00004e6c*/ LDR         R3, [R4, #152]              @ 0x98 
    /*00004e70*/ LDR         R1, [R4, #172]              @ 0xac 
    /*00004e74*/ SUB         R3, IP, R3 
    /*00004e78*/ LDR         IP, [R4, #156]              @ 0x9c 
    /*00004e7c*/ MLA         R2, R0, LR, R2 
    /*00004e80*/ SUB         R1, R1, IP 
    /*00004e84*/ MLA         R3, R0, R3, R1 
    /*00004e88*/ ADD         R1, SP, #52                 @ 0x34 
    /*00004e8c*/ MOV         R0, #1 
    /*00004e90*/ STR         R0, [R4, #116]              @ 0x74 
    /*00004e94*/ STR         R2, [R4, #176]              @ 0xb0 
    /*00004e98*/ ADD         R2, R4, #116                @ 0x74 
    /*00004e9c*/ LDR         R0, [PC, #448]              @ 0x0000000000005064 
    /*00004ea0*/ STR         R2, [SP, #40]               @ 0x28 
    /*00004ea4*/ STR         R3, [R4, #180]              @ 0xb4 
    /*00004ea8*/ BL          0x0000000000004EA8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00004eac*/ LDR         R3, [SP, #20] 
    /*00004eb0*/ ADD         R1, R4, #116                @ 0x74 
    /*00004eb4*/ LDR         R0, [R3, #4] 
    /*00004eb8*/ LDR         R2, [R0, #1220]             @ 0x4c4 
    /*00004ebc*/ CMP         R2, #7 
    /*00004ec0*/ MOVLS       R3, #68                     @ 0x44 
    /*00004ec4*/ MOVHI       R3, #676                    @ 0x2a4 
    /*00004ec8*/ MULLS       R3, R3, R2 
    /*00004ecc*/ MOVHI       R2, #0 
    /*00004ed0*/ STRHI       R2, [R0, #1220]             @ 0x4c4 
    /*00004ed4*/ MOV         R2, #68                     @ 0x44 
    /*00004ed8*/ ADDLS       R3, R3, #676                @ 0x2a4 
    /*00004edc*/ ADD         R0, R0, R3 
    /*00004ee0*/ BL          0x0000000000004EE0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00004ee4*/ LDR         R3, [SP, #20] 
    /*00004ee8*/ MOV         IP, #500                    @ 0x1f4 
    /*00004eec*/ LDR         R0, [R3, #4] 
    /*00004ef0*/ LDR         R3, [R0, #1220]             @ 0x4c4 
    /*00004ef4*/ LDR         R1, [R0, #1292]             @ 0x50c 
    /*00004ef8*/ ADD         R3, R3, #1 
    /*00004efc*/ STR         R3, [R0, #1220]             @ 0x4c4 
    /*00004f00*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00004f04*/ ADD         R1, R1, #1 
    /*00004f08*/ STR         R1, [R0, #1292]             @ 0x50c 
    /*00004f0c*/ UMULL       R2, R3, R1, R3 
    /*00004f10*/ LSR         R3, R3, #5 
    /*00004f14*/ MLS         R1, IP, R3, R1 
    /*00004f18*/ CMP         R1, #0 
    /*00004f1c*/ BEQ         GDC_IntCallBack_x4f30
    /*00004f20*/ LDR         R2, [R0, #1284]             @ 0x504 
    /*00004f24*/ LDR         R3, [R4, #176]              @ 0xb0 
    /*00004f28*/ CMP         R2, R3 
    /*00004f2c*/ BCS         GDC_IntCallBack_x4f44
    GDC_IntCallBack_x4f30:
    /*00004f30*/ ADD         R0, R0, #1216               @ 0x4c0 
    /*00004f34*/ ADD         R1, R4, #116                @ 0x74 
    /*00004f38*/ ADD         R0, R0, #8 
    /*00004f3c*/ MOV         R2, #68                     @ 0x44 
    /*00004f40*/ BL          0x0000000000004F40          @ osal_memcpy [R_ARM_CALL: +0x0] 
    GDC_IntCallBack_x4f44:
    /*00004f44*/ ADD         R1, SP, #52                 @ 0x34 
    /*00004f48*/ LDR         R0, [PC, #276]              @ 0x0000000000005064 
    /*00004f4c*/ BL          0x0000000000004F4C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004f50*/ ADD         R1, SP, #48                 @ 0x30 
    /*00004f54*/ LDR         R0, [PC, #264]              @ 0x0000000000005064 
    /*00004f58*/ BL          0x0000000000004F58          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00004f5c*/ MOV         R1, R4 
    /*00004f60*/ MOV         R0, R8 
    /*00004f64*/ BL          0x0000000000004F64          @ GDC_PutJobToFreeList [R_ARM_CALL: .text+0x102e4] 
    /*00004f68*/ ADD         R1, SP, #48                 @ 0x30 
    /*00004f6c*/ LDR         R0, [PC, #240]              @ 0x0000000000005064 
    /*00004f70*/ BL          0x0000000000004F70          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00004f74*/ B           GDC_IntCallBack_x4d50
    GDC_IntCallBack_x4f78:
    /*00004f78*/ MOVW        R3, #0                      @ .LC147 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x152c] 
    /*00004f7c*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00004f80*/ MOVT        R3, #0                      @ .LC147 [R_ARM_MOVT_ABS: .rodata.str1.4+0x152c] 
    /*00004f84*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00004f88*/ MOVW        R2, #2575                   @ 0xa0f 
    /*00004f8c*/ MOV         R1, R6 
    /*00004f90*/ BL          0x0000000000004F90          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00004f94*/ B           GDC_IntCallBack_x4df0
    GDC_IntCallBack_x4f98:
    /*00004f98*/ LDR         R3, [R4, #68]               @ 0x44 
    /*00004f9c*/ CMP         R3, #1 
    /*00004fa0*/ MOVNE       R3, #1 
    /*00004fa4*/ STRNE       R3, [SP, #28] 
    /*00004fa8*/ STRNE       R3, [SP, #24] 
    /*00004fac*/ BNE         GDC_IntCallBack_x4df0
    /*00004fb0*/ LDR         R2, [R4, #12] 
    /*00004fb4*/ LDR         R1, [R4, #72]               @ 0x48 
    /*00004fb8*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*00004fbc*/ LDR         R2, [R2, #348]              @ 0x15c 
    /*00004fc0*/ STR         R3, [SP, #28] 
    /*00004fc4*/ CMP         R2, R1 
    /*00004fc8*/ ORRCC       R0, R0, #1 
    /*00004fcc*/ CMP         R0, #0 
    /*00004fd0*/ MOVEQ       R3, #5 
    /*00004fd4*/ STREQ       R3, [SP, #24] 
    /*00004fd8*/ BEQ         GDC_IntCallBack_x4df0
    /*00004fdc*/ B           GDC_IntCallBack_x4dec
    GDC_IntCallBack_x4fe0:
    /*00004fe0*/ MOVW        R3, #0                      @ .LC175 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b40] 
    /*00004fe4*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00004fe8*/ MOVT        R3, #0                      @ .LC175 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b40] 
    /*00004fec*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00004ff0*/ MOVW        R2, #2495                   @ 0x9bf 
    /*00004ff4*/ LDR         R1, [PC, #100]              @ 0x0000000000005060 
    /*00004ff8*/ BL          0x0000000000004FF8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00004ffc*/ B           GDC_IntCallBack_x4c0c
    GDC_IntCallBack_x5000:
    /*00005000*/ MOVW        R3, #0                      @ .LC185 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1db4] 
    /*00005004*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00005008*/ MOVT        R3, #0                      @ .LC185 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1db4] 
    /*0000500c*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00005010*/ MOVW        R2, #2459                   @ 0x99b 
    /*00005014*/ LDR         R1, [PC, #68]               @ 0x0000000000005060 
    /*00005018*/ BL          0x0000000000005018          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000501c*/ LDR         R3, [SP, #20] 
    /*00005020*/ LDR         R3, [R3, #4] 
    /*00005024*/ B           GDC_IntCallBack_x4b7c
    GDC_IntCallBack_x5028:
    /*00005028*/ MOVW        R0, #0                      @ .LC187 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e04] 
    /*0000502c*/ MOVW        R2, #2485                   @ 0x9b5 
    /*00005030*/ LDR         R1, [PC, #40]               @ 0x0000000000005060 
    /*00005034*/ MOVT        R0, #0                      @ .LC187 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e04] 
    /*00005038*/ BL          0x0000000000005038          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0000503c*/ B           GDC_IntCallBack_x4bdc
    GDC_IntCallBack_x5040:
    /*00005040*/ MOVW        R3, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf0c] 
    /*00005044*/ MOVW        R0, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a4] 
    /*00005048*/ MOVT        R3, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf0c] 
    /*0000504c*/ MOVT        R0, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a4] 
    /*00005050*/ MOVW        R2, #714                    @ 0x2ca 
    /*00005054*/ LDR         R1, [PC, #12]               @ 0x0000000000005068 
    /*00005058*/ BL          0x0000000000005058          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000505c*/ B           GDC_IntCallBack_x4e28
    /*00005060*/ ANDEQ       R0, R0, R8, ASR #7 
    /*00005064*/ ANDEQ       R0, R0, R0, ASR #32 
    /*00005068*/ LDRDEQ      R0, [R0], -R8 
FUNC_END GDC_IntCallBack


FUNC_BEGIN GDC_CheckModuleParam
    /*0000506c*/ PUSH        {R4, R5, LR} 
    /*00005070*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00005074*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00005078*/ SUB         SP, SP, #12 
    /*0000507c*/ LDR         R1, [R4] 
    /*00005080*/ CMP         R1, #400                    @ 0x190 
    /*00005084*/ BHI         GDC_CheckModuleParam_x5110
    /*00005088*/ CMP         R1, #19 
    /*0000508c*/ BLS         GDC_CheckModuleParam_x5110
    /*00005090*/ LDR         R1, [R4, #4] 
    /*00005094*/ CMP         R1, #800                    @ 0x320 
    /*00005098*/ BHI         GDC_CheckModuleParam_x513c
    GDC_CheckModuleParam_x509c:
    /*0000509c*/ CMP         R1, #19 
    /*000050a0*/ BLS         GDC_CheckModuleParam_x51b0
    GDC_CheckModuleParam_x50a4:
    /*000050a4*/ LDR         R1, [R4, #8] 
    /*000050a8*/ CMP         R1, #800                    @ 0x320 
    /*000050ac*/ BHI         GDC_CheckModuleParam_x5168
    GDC_CheckModuleParam_x50b0:
    /*000050b0*/ CMP         R1, #19 
    /*000050b4*/ BLS         GDC_CheckModuleParam_x518c
    GDC_CheckModuleParam_x50b8:
    /*000050b8*/ LDR         R1, [R4, #12] 
    /*000050bc*/ CMP         R1, #100                    @ 0x64 
    /*000050c0*/ BHI         GDC_CheckModuleParam_x50ec
    /*000050c4*/ CMP         R1, #0 
    /*000050c8*/ BEQ         GDC_CheckModuleParam_x50ec
    GDC_CheckModuleParam_x50cc:
    /*000050cc*/ MOVW        R3, #0                      @ gdc_en [R_ARM_MOVW_ABS_NC: .data+0x154] 
    /*000050d0*/ MOVT        R3, #0                      @ gdc_en [R_ARM_MOVT_ABS: .data+0x154] 
    /*000050d4*/ LDR         R1, [R3] 
    /*000050d8*/ CMP         R1, #1 
    /*000050dc*/ MOVEQ       R0, #0 
    /*000050e0*/ BNE         GDC_CheckModuleParam_x51d4
    GDC_CheckModuleParam_x50e4:
    /*000050e4*/ ADD         SP, SP, #12 
    /*000050e8*/ POP         {R4, R5, PC} 
    GDC_CheckModuleParam_x50ec:
    /*000050ec*/ MOV         R5, #6 
    /*000050f0*/ MOVW        R0, #0                      @ .LC195 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fb8] 
    /*000050f4*/ STR         R5, [SP] 
    /*000050f8*/ MOVT        R0, #0                      @ .LC195 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fb8] 
    /*000050fc*/ MOV         R3, #100                    @ 0x64 
    /*00005100*/ MOV         R2, #1 
    /*00005104*/ BL          0x0000000000005104          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00005108*/ STR         R5, [R4, #12] 
    /*0000510c*/ B           GDC_CheckModuleParam_x50cc
    GDC_CheckModuleParam_x5110:
    /*00005110*/ MOV         R5, #32 
    /*00005114*/ MOVW        R0, #0                      @ .LC190 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ea0] 
    /*00005118*/ STR         R5, [SP] 
    /*0000511c*/ MOVT        R0, #0                      @ .LC190 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ea0] 
    /*00005120*/ MOV         R3, #400                    @ 0x190 
    /*00005124*/ MOV         R2, #20 
    /*00005128*/ BL          0x0000000000005128          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0000512c*/ LDR         R1, [R4, #4] 
    /*00005130*/ STR         R5, [R4] 
    /*00005134*/ CMP         R1, #800                    @ 0x320 
    /*00005138*/ BLS         GDC_CheckModuleParam_x509c
    GDC_CheckModuleParam_x513c:
    /*0000513c*/ MOV         R5, #64                     @ 0x40 
    /*00005140*/ MOVW        R0, #0                      @ .LC191 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ed8] 
    /*00005144*/ STR         R5, [SP] 
    /*00005148*/ MOVT        R0, #0                      @ .LC191 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ed8] 
    /*0000514c*/ MOV         R3, #800                    @ 0x320 
    /*00005150*/ MOV         R2, #20 
    /*00005154*/ BL          0x0000000000005154          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00005158*/ LDR         R1, [R4, #8] 
    /*0000515c*/ STR         R5, [R4, #4] 
    /*00005160*/ CMP         R1, #800                    @ 0x320 
    /*00005164*/ BLS         GDC_CheckModuleParam_x50b0
    GDC_CheckModuleParam_x5168:
    /*00005168*/ MOV         R5, #64                     @ 0x40 
    /*0000516c*/ MOVW        R0, #0                      @ .LC193 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f48] 
    /*00005170*/ STR         R5, [SP] 
    /*00005174*/ MOVT        R0, #0                      @ .LC193 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f48] 
    /*00005178*/ MOV         R3, #800                    @ 0x320 
    /*0000517c*/ MOV         R2, #20 
    /*00005180*/ BL          0x0000000000005180          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00005184*/ STR         R5, [R4, #8] 
    /*00005188*/ B           GDC_CheckModuleParam_x50b8
    GDC_CheckModuleParam_x518c:
    /*0000518c*/ MOV         R5, #64                     @ 0x40 
    /*00005190*/ MOVW        R0, #0                      @ .LC194 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f80] 
    /*00005194*/ STR         R5, [SP] 
    /*00005198*/ MOVT        R0, #0                      @ .LC194 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f80] 
    /*0000519c*/ MOV         R3, #800                    @ 0x320 
    /*000051a0*/ MOV         R2, #20 
    /*000051a4*/ BL          0x00000000000051A4          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000051a8*/ STR         R5, [R4, #8] 
    /*000051ac*/ B           GDC_CheckModuleParam_x50b8
    GDC_CheckModuleParam_x51b0:
    /*000051b0*/ MOV         R5, #64                     @ 0x40 
    /*000051b4*/ MOVW        R0, #0                      @ .LC192 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f10] 
    /*000051b8*/ STR         R5, [SP] 
    /*000051bc*/ MOVT        R0, #0                      @ .LC192 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f10] 
    /*000051c0*/ MOV         R3, #800                    @ 0x320 
    /*000051c4*/ MOV         R2, #20 
    /*000051c8*/ BL          0x00000000000051C8          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000051cc*/ STR         R5, [R4, #4] 
    /*000051d0*/ B           GDC_CheckModuleParam_x50a4
    GDC_CheckModuleParam_x51d4:
    /*000051d4*/ MOVW        R0, #0                      @ .LC196 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ff8] 
    /*000051d8*/ MOVT        R0, #0                      @ .LC196 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ff8] 
    /*000051dc*/ BL          0x00000000000051DC          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000051e0*/ MVN         R0, #0 
    /*000051e4*/ B           GDC_CheckModuleParam_x50e4
FUNC_END GDC_CheckModuleParam


FUNC_BEGIN GDC_Init
    /*000051e8*/ PUSH        {R4, R5, R6, LR} 
    /*000051ec*/ MOVW        R4, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000051f0*/ MOVT        R4, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000051f4*/ SUB         SP, SP, #16 
    /*000051f8*/ LDR         R3, [R4] 
    /*000051fc*/ CMP         R3, #1 
    /*00005200*/ MOVEQ       R6, #0 
    /*00005204*/ BEQ         GDC_Init_x531c
    /*00005208*/ BL          0x0000000000005208          @ GDC_CheckModuleParam [R_ARM_CALL: .text+0x506c] 
    /*0000520c*/ CMN         R0, #1 
    /*00005210*/ MOV         R6, R0 
    /*00005214*/ BEQ         GDC_Init_x539c
    /*00005218*/ MOVW        R0, #1444                   @ 0x5a4 
    /*0000521c*/ BL          0x000000000000521C          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00005220*/ MOVW        R2, #1444                   @ 0x5a4 
    /*00005224*/ CMP         R0, #0 
    /*00005228*/ STR         R0, [R4, #4] 
    /*0000522c*/ BEQ         GDC_Init_x53ac
    /*00005230*/ MOV         R1, #0 
    /*00005234*/ MOV         R5, #9 
    /*00005238*/ BL          0x0000000000005238          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000523c*/ MOV         R2, #52                     @ 0x34 
    /*00005240*/ MOV         R1, #0 
    /*00005244*/ ADD         R0, R4, #12 
    /*00005248*/ BL          0x0000000000005248          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000524c*/ LDR         IP, [R4, #60]               @ 0x3c 
    /*00005250*/ ADD         R2, R4, #16 
    /*00005254*/ ADD         R0, R4, #28 
    /*00005258*/ MOV         LR, #4 
    /*0000525c*/ MOV         R1, R5 
    /*00005260*/ MOV         R3, LR 
    /*00005264*/ STR         LR, [R4, #12] 
    /*00005268*/ STR         LR, [R4, #40]               @ 0x28 
    /*0000526c*/ MOV         LR, #16 
    /*00005270*/ STR         R5, [R4, #28] 
    /*00005274*/ MOV         R5, #11 
    /*00005278*/ STR         LR, [R4, #16] 
    /*0000527c*/ MOV         LR, #1 
    /*00005280*/ STR         R5, [R4, #32] 
    /*00005284*/ STR         LR, [R4, #20] 
    /*00005288*/ STR         LR, [R4, #36]               @ 0x24 
    /*0000528c*/ STR         LR, [R4, #24] 
    GDC_Init_x5290:
    /*00005290*/ MUL         R3, R3, R1 
    /*00005294*/ CMP         R2, R0 
    /*00005298*/ ADD         IP, IP, R3 
    /*0000529c*/ STR         R3, [R2, #28] 
    /*000052a0*/ LDRNE       R3, [R2], #4 
    /*000052a4*/ LDRNE       R1, [R2, #12] 
    /*000052a8*/ BNE         GDC_Init_x5290
    /*000052ac*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*000052b0*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*000052b4*/ LDR         R0, [R4, #4] 
    /*000052b8*/ LDMIB       R5, {R1, R2} 
    /*000052bc*/ LDR         LR, [R5] 
    /*000052c0*/ ADD         R3, R0, #648                @ 0x288 
    /*000052c4*/ STR         IP, [R4, #60]               @ 0x3c 
    /*000052c8*/ STR         R2, [SP, #8] 
    /*000052cc*/ ADD         R2, R0, #620                @ 0x26c 
    /*000052d0*/ STR         R1, [SP, #4] 
    /*000052d4*/ ADD         R1, R0, #604                @ 0x25c 
    /*000052d8*/ STR         LR, [SP] 
    /*000052dc*/ BL          0x00000000000052DC          @ GDC_InitBuf [R_ARM_CALL: .text+0x1035c] 
    /*000052e0*/ SUBS        R6, R0, #0 
    /*000052e4*/ BEQ         GDC_Init_x5328
    /*000052e8*/ MOVW        R3, #3226                   @ 0xc9a 
    /*000052ec*/ MOVW        R2, #0                      @ .LC199 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2088] 
    /*000052f0*/ STR         R3, [SP] 
    /*000052f4*/ MOVT        R2, #0                      @ .LC199 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2088] 
    /*000052f8*/ STR         R6, [SP, #4] 
    /*000052fc*/ MOV         R1, #37                     @ 0x25 
    /*00005300*/ LDR         R3, [PC, #208]              @ 0x00000000000053d8 
    /*00005304*/ MOV         R0, #3 
    /*00005308*/ BL          0x0000000000005308          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_Init_x530c:
    /*0000530c*/ LDR         R0, [R4, #4] 
    /*00005310*/ BL          0x0000000000005310          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00005314*/ MOV         R3, #0 
    /*00005318*/ STR         R3, [R4, #4] 
    GDC_Init_x531c:
    /*0000531c*/ MOV         R0, R6 
    /*00005320*/ ADD         SP, SP, #16 
    /*00005324*/ POP         {R4, R5, R6, PC} 
    GDC_Init_x5328:
    /*00005328*/ LDM         R5, {R0, R1, R2, R3} 
    /*0000532c*/ BL          0x000000000000532C          @ GDC_DrvCommOpen [R_ARM_CALL: .text+0x15e08] 
    /*00005330*/ SUBS        R6, R0, #0 
    /*00005334*/ BEQ         GDC_Init_x5374
    /*00005338*/ STR         R6, [SP, #4] 
    /*0000533c*/ MOVW        R3, #3235                   @ 0xca3 
    /*00005340*/ MOV         R1, #37                     @ 0x25 
    /*00005344*/ STR         R3, [SP] 
    /*00005348*/ MOVW        R2, #0                      @ .LC200 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20b8] 
    /*0000534c*/ LDR         R3, [PC, #132]              @ 0x00000000000053d8 
    /*00005350*/ MOVT        R2, #0                      @ .LC200 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20b8] 
    /*00005354*/ MOV         R0, #3 
    /*00005358*/ BL          0x0000000000005358          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000535c*/ LDR         R0, [R4, #4] 
    /*00005360*/ ADD         R3, R0, #648                @ 0x288 
    /*00005364*/ ADD         R2, R0, #620                @ 0x26c 
    /*00005368*/ ADD         R1, R0, #604                @ 0x25c 
    /*0000536c*/ BL          0x000000000000536C          @ GDC_DeInitBuf [R_ARM_CALL: .text+0xfffc] 
    /*00005370*/ B           GDC_Init_x530c
    GDC_Init_x5374:
    /*00005374*/ LDR         R0, [R4, #4] 
    /*00005378*/ MOV         R2, #768                    @ 0x300 
    /*0000537c*/ MOV         R1, R6 
    /*00005380*/ ADD         R0, R0, #676                @ 0x2a4 
    /*00005384*/ BL          0x0000000000005384          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00005388*/ MOV         R3, #1 
    /*0000538c*/ MOV         R0, R6 
    /*00005390*/ STR         R3, [R4] 
    /*00005394*/ ADD         SP, SP, #16 
    /*00005398*/ POP         {R4, R5, R6, PC} 
    GDC_Init_x539c:
    /*0000539c*/ MOVW        R0, #0                      @ .LC197 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x201c] 
    /*000053a0*/ MOVT        R0, #0                      @ .LC197 [R_ARM_MOVT_ABS: .rodata.str1.4+0x201c] 
    /*000053a4*/ BL          0x00000000000053A4          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000053a8*/ B           GDC_Init_x531c
    GDC_Init_x53ac:
    /*000053ac*/ MOVW        R3, #3211                   @ 0xc8b 
    /*000053b0*/ STR         R2, [SP, #4] 
    /*000053b4*/ STR         R3, [SP] 
    /*000053b8*/ MOVW        R2, #0                      @ .LC198 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x203c] 
    /*000053bc*/ LDR         R3, [PC, #20]               @ 0x00000000000053d8 
    /*000053c0*/ MOVT        R2, #0                      @ .LC198 [R_ARM_MOVT_ABS: .rodata.str1.4+0x203c] 
    /*000053c4*/ MOV         R1, #37                     @ 0x25 
    /*000053c8*/ MOV         R0, #3 
    /*000053cc*/ MVN         R6, #0 
    /*000053d0*/ BL          0x00000000000053D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000053d4*/ B           GDC_Init_x531c
    /*000053d8*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END GDC_Init


FUNC_BEGIN GDC_InitSyncCtx
    /*000053dc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000053e0*/ MOV         R0, #1792                   @ 0x700 
    /*000053e4*/ BL          0x00000000000053E4          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*000053e8*/ SUBS        R8, R0, #0 
    /*000053ec*/ BEQ         GDC_InitSyncCtx_x5498
    /*000053f0*/ MOVW        R7, #0                      @ g_pstGdcSyncCtx [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*000053f4*/ MOVT        R7, #0                      @ g_pstGdcSyncCtx [R_ARM_MOVT_ABS: .bss+0x428] 
    /*000053f8*/ MOV         R2, #1792                   @ 0x700 
    /*000053fc*/ MOV         R1, #0 
    /*00005400*/ MOV         R4, R7 
    /*00005404*/ BL          0x0000000000005404          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00005408*/ MOV         R5, #0 
    /*0000540c*/ STR         R8, [R4], #-4 
    /*00005410*/ MOV         R6, R4 
    /*00005414*/ B           GDC_InitSyncCtx_x5424
    GDC_InitSyncCtx_x5418:
    /*00005418*/ ADD         R5, R5, #1 
    /*0000541c*/ CMP         R5, #64                     @ 0x40 
    /*00005420*/ BEQ         GDC_InitSyncCtx_x5494
    GDC_InitSyncCtx_x5424:
    /*00005424*/ CMP         R5, #0 
    /*00005428*/ STREQ       R8, [R7] 
    /*0000542c*/ ADD         R6, R6, #4 
    /*00005430*/ LDRNE       R0, [R6, #-4] 
    /*00005434*/ LDREQ       R0, [R6] 
    /*00005438*/ ADDNE       R0, R0, #28 
    /*0000543c*/ STRNE       R0, [R6] 
    /*00005440*/ ADD         R0, R0, #24 
    /*00005444*/ BL          0x0000000000005444          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*00005448*/ CMP         R0, #0 
    /*0000544c*/ BEQ         GDC_InitSyncCtx_x5418
    /*00005450*/ CMP         R5, #0 
    /*00005454*/ SUBNE       R6, R5, #-1073741823        @ 0xc0000001 
    /*00005458*/ MOVNE       R9, #0 
    /*0000545c*/ ADDNE       R6, R7, R6, LSL #2 
    /*00005460*/ BEQ         GDC_InitSyncCtx_x547c
    GDC_InitSyncCtx_x5464:
    /*00005464*/ LDR         R0, [R4, #4] 
    /*00005468*/ ADD         R0, R0, #24 
    /*0000546c*/ BL          0x000000000000546C          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*00005470*/ STR         R9, [R4, #4]! 
    /*00005474*/ CMP         R4, R6 
    /*00005478*/ BNE         GDC_InitSyncCtx_x5464
    GDC_InitSyncCtx_x547c:
    /*0000547c*/ MOV         R0, R8 
    /*00005480*/ MOV         R3, #0 
    /*00005484*/ STR         R3, [R7, R5, LSL #2] 
    /*00005488*/ BL          0x0000000000005488          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0000548c*/ MVN         R0, #0 
    /*00005490*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    GDC_InitSyncCtx_x5494:
    /*00005494*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    GDC_InitSyncCtx_x5498:
    /*00005498*/ MVN         R0, #0 
    /*0000549c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END GDC_InitSyncCtx


FUNC_BEGIN GDC_DeInitSyncCtx
    /*000054a0*/ PUSH        {R4, R5, R6, LR} 
    /*000054a4*/ LDR         R5, [PC, #80]               @ 0x00000000000054fc 
    /*000054a8*/ ADD         R6, R5, #256                @ 0x100 
    /*000054ac*/ MOV         R4, R5 
    GDC_DeInitSyncCtx_x54b0:
    /*000054b0*/ LDR         R3, [R4, #4]! 
    /*000054b4*/ CMP         R3, #0 
    /*000054b8*/ ADD         R0, R3, #24 
    /*000054bc*/ BEQ         GDC_DeInitSyncCtx_x54c4
    /*000054c0*/ BL          0x00000000000054C0          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    GDC_DeInitSyncCtx_x54c4:
    /*000054c4*/ CMP         R4, R6 
    /*000054c8*/ BNE         GDC_DeInitSyncCtx_x54b0
    /*000054cc*/ MOVW        R3, #0                      @ g_pstGdcSyncCtx [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*000054d0*/ MOVT        R3, #0                      @ g_pstGdcSyncCtx [R_ARM_MOVT_ABS: .bss+0x428] 
    /*000054d4*/ LDR         R0, [R3] 
    /*000054d8*/ CMP         R0, #0 
    /*000054dc*/ BEQ         GDC_DeInitSyncCtx_x54e4
    /*000054e0*/ BL          0x00000000000054E0          @ osal_vfree [R_ARM_CALL: +0x0] 
    GDC_DeInitSyncCtx_x54e4:
    /*000054e4*/ MOV         R3, #0 
    GDC_DeInitSyncCtx_x54e8:
    /*000054e8*/ STR         R3, [R5, #4]! 
    /*000054ec*/ CMP         R4, R5 
    /*000054f0*/ BNE         GDC_DeInitSyncCtx_x54e8
    /*000054f4*/ MOV         R0, #0 
    /*000054f8*/ POP         {R4, R5, R6, PC} 
    /*000054fc*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_pstGdcSyncCtx [R_ARM_ABS32: .bss+0x428] 
FUNC_END GDC_DeInitSyncCtx


FUNC_BEGIN GDC_CheckFramePhyAddr
    /*00005500*/ PUSH        {R4, LR} 
    /*00005504*/ SUB         SP, SP, #8 
    /*00005508*/ MOV         R4, R1 
    /*0000550c*/ BL          0x000000000000550C          @ GDC_CheckMmzPhyAddr [R_ARM_CALL: .text+0x1484] 
    /*00005510*/ CMP         R0, #0 
    /*00005514*/ MOVWNE      R3, #3769                   @ 0xeb9 
    /*00005518*/ MOVWNE      R2, #0                      @ .LC201 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20e8] 
    /*0000551c*/ STRNE       R3, [SP] 
    /*00005520*/ MOVTNE      R2, #0                      @ .LC201 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20e8] 
    /*00005524*/ BNE         GDC_CheckFramePhyAddr_x5550
    /*00005528*/ MOV         R0, R4 
    /*0000552c*/ BL          0x000000000000552C          @ GDC_CheckMmzPhyAddr [R_ARM_CALL: .text+0x1484] 
    /*00005530*/ CMP         R0, #0 
    /*00005534*/ BNE         GDC_CheckFramePhyAddr_x5540
    GDC_CheckFramePhyAddr_x5538:
    /*00005538*/ ADD         SP, SP, #8 
    /*0000553c*/ POP         {R4, PC} 
    GDC_CheckFramePhyAddr_x5540:
    /*00005540*/ MOVW        R2, #0                      @ .LC202 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2118] 
    /*00005544*/ MOVT        R2, #0                      @ .LC202 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2118] 
    /*00005548*/ MOVW        R3, #3777                   @ 0xec1 
    /*0000554c*/ STR         R3, [SP] 
    GDC_CheckFramePhyAddr_x5550:
    /*00005550*/ LDR         R3, [PC, #20]               @ 0x000000000000556c 
    /*00005554*/ MOV         R1, #37                     @ 0x25 
    /*00005558*/ MOV         R0, #3 
    /*0000555c*/ BL          0x000000000000555C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005560*/ MOVW        R0, #32771                  @ 0x8003 
    /*00005564*/ MOVT        R0, #40997                  @ 0xa025 
    /*00005568*/ B           GDC_CheckFramePhyAddr_x5538
    /*0000556c*/ STRDEQ      R0, [R0], -IP 
FUNC_END GDC_CheckFramePhyAddr


FUNC_BEGIN GDC_AddUserCorrectionTask
    /*00005570*/ MOV         R0, #0 
    /*00005574*/ BX          LR 
FUNC_END GDC_AddUserCorrectionTask


FUNC_BEGIN GDC_AddUserLimitPMFTask
    /*00005578*/ PUSH        {R4, R5, R6, LR} 
    /*0000557c*/ SUB         SP, SP, #104                @ 0x68 
    /*00005580*/ MOV         R5, R0 
    /*00005584*/ MOV         R2, #88                     @ 0x58 
    /*00005588*/ MOV         R1, #0 
    /*0000558c*/ ADD         R0, SP, #16 
    /*00005590*/ BL          0x0000000000005590          @ memset [R_ARM_CALL: +0x0] 
    /*00005594*/ CMP         R5, #0 
    /*00005598*/ BEQ         GDC_AddUserLimitPMFTask_x578c
    GDC_AddUserLimitPMFTask_x559c:
    /*0000559c*/ LDR         R3, [R5] 
    /*000055a0*/ CMP         R3, #0 
    /*000055a4*/ BLT         GDC_AddUserLimitPMFTask_x579c
    /*000055a8*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*000055ac*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*000055b0*/ LDR         R2, [R2] 
    /*000055b4*/ CMP         R3, R2 
    /*000055b8*/ BCS         GDC_AddUserLimitPMFTask_x579c
    /*000055bc*/ MOVW        R4, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000055c0*/ MOVT        R4, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000055c4*/ ADD         R0, R4, #68                 @ 0x44 
    /*000055c8*/ BL          0x00000000000055C8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000055cc*/ SUBS        R3, R0, #0 
    /*000055d0*/ BNE         GDC_AddUserLimitPMFTask_x5730
    /*000055d4*/ MOV         R2, #336                    @ 0x150 
    /*000055d8*/ ADD         R1, R5, #8 
    /*000055dc*/ ADD         R0, R4, #72                 @ 0x48 
    /*000055e0*/ MOV         IP, #30 
    /*000055e4*/ STR         R3, [R4, #820]              @ 0x334 
    /*000055e8*/ MOV         R6, #1 
    /*000055ec*/ STR         R3, [R4, #828]              @ 0x33c 
    /*000055f0*/ STR         R3, [R4, #832]              @ 0x340 
    /*000055f4*/ STR         IP, [R4, #824]              @ 0x338 
    /*000055f8*/ STR         R6, [R4, #848]              @ 0x350 
    /*000055fc*/ BL          0x00000000000055FC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00005600*/ MOV         R2, #336                    @ 0x150 
    /*00005604*/ ADD         R1, R5, #344                @ 0x158 
    /*00005608*/ ADD         R0, R4, #408                @ 0x198 
    /*0000560c*/ BL          0x000000000000560C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00005610*/ MOV         R2, #72                     @ 0x48 
    /*00005614*/ ADD         R1, R5, #728                @ 0x2d8 
    /*00005618*/ ADD         R0, R4, #872                @ 0x368 
    /*0000561c*/ BL          0x000000000000561C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00005620*/ LDR         IP, [R4, #408]              @ 0x198 
    /*00005624*/ LDR         R3, [R4, #412]              @ 0x19c 
    /*00005628*/ MOV         R2, #72                     @ 0x48 
    /*0000562c*/ ADD         R1, R4, #872                @ 0x368 
    /*00005630*/ ADD         R0, SP, #24 
    /*00005634*/ STR         R6, [SP, #16] 
    /*00005638*/ STR         IP, [SP, #96]               @ 0x60 
    /*0000563c*/ STR         R3, [SP, #100]              @ 0x64 
    /*00005640*/ BL          0x0000000000005640          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00005644*/ LDR         R2, [R4, #72]               @ 0x48 
    /*00005648*/ ADD         R1, R4, #408                @ 0x198 
    /*0000564c*/ LDR         R3, [R4, #76]               @ 0x4c 
    /*00005650*/ ADD         R0, R4, #72                 @ 0x48 
    /*00005654*/ STR         R2, [R5, #800]              @ 0x320 
    /*00005658*/ STR         R3, [R5, #804]              @ 0x324 
    /*0000565c*/ BL          0x000000000000565C          @ GDC_CheckFramePhyAddr [R_ARM_CALL: .text+0x5500] 
    /*00005660*/ SUBS        R6, R0, #0 
    /*00005664*/ BNE         GDC_AddUserLimitPMFTask_x573c
    /*00005668*/ LDR         R3, [R4, #96]               @ 0x60 
    /*0000566c*/ CMP         R3, #0 
    /*00005670*/ MOVEQ       R3, #8 
    /*00005674*/ STREQ       R3, [R5, #808]              @ 0x328 
    /*00005678*/ BNE         GDC_AddUserLimitPMFTask_x5718
    GDC_AddUserLimitPMFTask_x567c:
    /*0000567c*/ LDR         R3, [R4, #72]               @ 0x48 
    /*00005680*/ LDR         R2, [R4, #76]               @ 0x4c 
    /*00005684*/ CMP         R3, #480                    @ 0x1e0 
    /*00005688*/ BCC         GDC_AddUserLimitPMFTask_x5750
    /*0000568c*/ CMP         R2, #360                    @ 0x168 
    /*00005690*/ BCC         GDC_AddUserLimitPMFTask_x5750
    /*00005694*/ LDR         R1, [R4, #408]              @ 0x198 
    /*00005698*/ CMP         R1, #480                    @ 0x1e0 
    /*0000569c*/ BCC         GDC_AddUserLimitPMFTask_x5750
    /*000056a0*/ LDR         R1, [R4, #412]              @ 0x19c 
    /*000056a4*/ CMP         R1, #360                    @ 0x168 
    /*000056a8*/ BCC         GDC_AddUserLimitPMFTask_x5750
    /*000056ac*/ LDR         R4, [PC, #356]              @ 0x0000000000005818 
    /*000056b0*/ ADD         R6, R5, #800                @ 0x320 
    /*000056b4*/ ADD         R1, SP, #16 
    /*000056b8*/ MOV         R0, R6 
    /*000056bc*/ ADD         R3, R4, #16 
    /*000056c0*/ ADD         R2, R4, #104                @ 0x68 
    /*000056c4*/ BL          0x00000000000056C4          @ GDC_PMF_ConfigExt [R_ARM_CALL: .text+0x1aad0] 
    /*000056c8*/ CMP         R0, #0 
    /*000056cc*/ BNE         GDC_AddUserLimitPMFTask_x57cc
    /*000056d0*/ ADD         R3, R4, #176                @ 0xb0 
    /*000056d4*/ MOV         R0, R6 
    /*000056d8*/ ADD         R2, R4, #104                @ 0x68 
    /*000056dc*/ ADD         R1, R4, #16 
    /*000056e0*/ BL          0x00000000000056E0          @ GDC_PMF_FIFO_CFG [R_ARM_CALL: .text+0x1ba8c] 
    /*000056e4*/ SUBS        R3, R0, #0 
    /*000056e8*/ BNE         GDC_AddUserLimitPMFTask_x57cc
    /*000056ec*/ LDR         R0, [R5] 
    /*000056f0*/ MOV         R2, R3 
    /*000056f4*/ STR         R4, [SP] 
    /*000056f8*/ SUB         R1, R4, #776                @ 0x308 
    /*000056fc*/ BL          0x00000000000056FC          @ GDC_AddLDCOrPMFTask [R_ARM_CALL: .text+0x3440] 
    /*00005700*/ SUBS        R6, R0, #0 
    /*00005704*/ SUB         R0, R4, #780                @ 0x30c 
    /*00005708*/ BL          0x0000000000005708          @ osal_up [R_ARM_CALL: +0x0] 
    GDC_AddUserLimitPMFTask_x570c:
    /*0000570c*/ MOV         R0, R6 
    /*00005710*/ ADD         SP, SP, #104                @ 0x68 
    /*00005714*/ POP         {R4, R5, R6, PC} 
    GDC_AddUserLimitPMFTask_x5718:
    /*00005718*/ SUB         R2, R3, #1 
    /*0000571c*/ CMP         R2, #4 
    /*00005720*/ BHI         GDC_AddUserLimitPMFTask_x57e0
    /*00005724*/ MOV         R3, #10 
    /*00005728*/ STR         R3, [R5, #808]              @ 0x328 
    /*0000572c*/ B           GDC_AddUserLimitPMFTask_x567c
    GDC_AddUserLimitPMFTask_x5730:
    /*00005730*/ MOV         R6, #65024                  @ 0xfe00 
    /*00005734*/ MOVT        R6, #65535                  @ 0xffff 
    /*00005738*/ B           GDC_AddUserLimitPMFTask_x570c
    GDC_AddUserLimitPMFTask_x573c:
    /*0000573c*/ ADD         R0, R4, #68                 @ 0x44 
    /*00005740*/ BL          0x0000000000005740          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005744*/ MOV         R0, R6 
    /*00005748*/ ADD         SP, SP, #104                @ 0x68 
    /*0000574c*/ POP         {R4, R5, R6, PC} 
    GDC_AddUserLimitPMFTask_x5750:
    /*00005750*/ STR         R2, [SP, #8] 
    /*00005754*/ MOVW        R1, #3987                   @ 0xf93 
    /*00005758*/ STR         R3, [SP, #4] 
    /*0000575c*/ MOVW        R2, #0                      @ .LC204 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2180] 
    /*00005760*/ STR         R1, [SP] 
    /*00005764*/ MOVT        R2, #0                      @ .LC204 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2180] 
    /*00005768*/ LDR         R3, [PC, #172]              @ 0x000000000000581c 
    /*0000576c*/ MOV         R1, #37                     @ 0x25 
    /*00005770*/ MOV         R0, #3 
    /*00005774*/ MOVW        R6, #32771                  @ 0x8003 
    /*00005778*/ BL          0x0000000000005778          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000577c*/ LDR         R0, [PC, #156]              @ 0x0000000000005820 
    /*00005780*/ BL          0x0000000000005780          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005784*/ MOVT        R6, #40997                  @ 0xa025 
    /*00005788*/ B           GDC_AddUserLimitPMFTask_x570c
    GDC_AddUserLimitPMFTask_x578c:
    /*0000578c*/ BL          0x0000000000000CB0 
    /*00005790*/ SUBS        R6, R0, #0 
    /*00005794*/ BNE         GDC_AddUserLimitPMFTask_x570c
    /*00005798*/ B           GDC_AddUserLimitPMFTask_x559c
    GDC_AddUserLimitPMFTask_x579c:
    /*0000579c*/ STR         R3, [SP, #4] 
    /*000057a0*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xecc] 
    /*000057a4*/ MOVW        R3, #3937                   @ 0xf61 
    /*000057a8*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0xecc] 
    /*000057ac*/ STR         R3, [SP] 
    /*000057b0*/ MOV         R1, #37                     @ 0x25 
    /*000057b4*/ LDR         R3, [PC, #96]               @ 0x000000000000581c 
    /*000057b8*/ MOV         R0, #3 
    /*000057bc*/ MOVW        R6, #32771                  @ 0x8003 
    /*000057c0*/ BL          0x00000000000057C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000057c4*/ MOVT        R6, #40997                  @ 0xa025 
    /*000057c8*/ B           GDC_AddUserLimitPMFTask_x570c
    GDC_AddUserLimitPMFTask_x57cc:
    /*000057cc*/ LDR         R0, [PC, #76]               @ 0x0000000000005820 
    /*000057d0*/ MOVW        R6, #32771                  @ 0x8003 
    /*000057d4*/ BL          0x00000000000057D4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000057d8*/ MOVT        R6, #40997                  @ 0xa025 
    /*000057dc*/ B           GDC_AddUserLimitPMFTask_x570c
    GDC_AddUserLimitPMFTask_x57e0:
    /*000057e0*/ STR         R3, [SP, #4] 
    /*000057e4*/ MOV         R1, #37                     @ 0x25 
    /*000057e8*/ MOVW        R3, #3979                   @ 0xf8b 
    /*000057ec*/ MOVW        R2, #0                      @ .LC203 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2148] 
    /*000057f0*/ STR         R3, [SP] 
    /*000057f4*/ MOVT        R2, #0                      @ .LC203 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2148] 
    /*000057f8*/ LDR         R3, [PC, #28]               @ 0x000000000000581c 
    /*000057fc*/ MOV         R0, #3 
    /*00005800*/ BL          0x0000000000005800          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005804*/ ADD         R0, R4, #68                 @ 0x44 
    /*00005808*/ MOVW        R6, #32771                  @ 0x8003 
    /*0000580c*/ BL          0x000000000000580C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005810*/ MOVT        R6, #40997                  @ 0xa025 
    /*00005814*/ B           GDC_AddUserLimitPMFTask_x570c
    /*00005818*/ ANDEQ       R0, R0, R0, ASR R3 
    /*0000581c*/ ANDEQ       R0, R0, R4, LSL R4 
    /*00005820*/ ANDEQ       R0, R0, R4, ASR #32 
FUNC_END GDC_AddUserLimitPMFTask


FUNC_BEGIN GdcIoctl
    /*00005824*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00005828*/ MOVW        R5, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000582c*/ MOVT        R5, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00005830*/ SUB         SP, SP, #52                 @ 0x34 
    /*00005834*/ LDR         R7, [R5] 
    /*00005838*/ CMP         R7, #1 
    /*0000583c*/ BNE         GdcIoctl_x5948
    /*00005840*/ MOV         R4, R0 
    /*00005844*/ ADD         R0, R5, #8 
    /*00005848*/ MOV         R6, R1 
    /*0000584c*/ BL          0x000000000000584C          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*00005850*/ MOVW        R3, #19974                  @ 0x4e06 
    /*00005854*/ MOVT        R3, #17728                  @ 0x4540 
    /*00005858*/ CMP         R4, R3 
    /*0000585c*/ BEQ         GdcIoctl_x59f8
    /*00005860*/ BLS         GdcIoctl_x58b0
    /*00005864*/ MOV         R3, #19968                  @ 0x4e00 
    /*00005868*/ MOVT        R3, #32772                  @ 0x8004 
    /*0000586c*/ CMP         R4, R3 
    /*00005870*/ BEQ         GdcIoctl_x59b0
    /*00005874*/ MOVW        R3, #19972                  @ 0x4e04 
    /*00005878*/ MOVT        R3, #49168                  @ 0xc010 
    /*0000587c*/ CMP         R4, R3 
    /*00005880*/ BEQ         GdcIoctl_x596c
    /*00005884*/ MOVW        R3, #19973                  @ 0x4e05 
    /*00005888*/ MOVT        R3, #20760                  @ 0x5118 
    /*0000588c*/ CMP         R4, R3 
    /*00005890*/ MOVEQ       R4, #0 
    /*00005894*/ BEQ         GdcIoctl_x589c
    GdcIoctl_x5898:
    /*00005898*/ MVN         R4, #0 
    GdcIoctl_x589c:
    /*0000589c*/ LDR         R0, [PC, #368]              @ 0x0000000000005a14 
    /*000058a0*/ BL          0x00000000000058A0          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*000058a4*/ MOV         R0, R4 
    /*000058a8*/ ADD         SP, SP, #52                 @ 0x34 
    /*000058ac*/ POP         {R4, R5, R6, R7, PC} 
    GdcIoctl_x58b0:
    /*000058b0*/ MOVW        R3, #19970                  @ 0x4e02 
    /*000058b4*/ MOVT        R3, #16388                  @ 0x4004 
    /*000058b8*/ CMP         R4, R3 
    /*000058bc*/ BEQ         GdcIoctl_x59e8
    /*000058c0*/ MOVW        R3, #19971                  @ 0x4e03 
    /*000058c4*/ MOVT        R3, #16400                  @ 0x4010 
    /*000058c8*/ CMP         R4, R3 
    /*000058cc*/ BEQ         GdcIoctl_x5958
    /*000058d0*/ MOVW        R3, #19969                  @ 0x4e01 
    /*000058d4*/ MOVT        R3, #16388                  @ 0x4004 
    /*000058d8*/ CMP         R4, R3 
    /*000058dc*/ BNE         GdcIoctl_x5898
    /*000058e0*/ LDR         R0, [R6] 
    /*000058e4*/ CMP         R0, #0 
    /*000058e8*/ BLT         GdcIoctl_x5980
    /*000058ec*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*000058f0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0x0] 
    /*000058f4*/ LDR         R3, [R3] 
    /*000058f8*/ CMP         R3, R0 
    /*000058fc*/ BLS         GdcIoctl_x5980
    /*00005900*/ LDR         R3, [R5, #4] 
    /*00005904*/ LDR         R3, [R3, #4] 
    /*00005908*/ LDR         R3, [R3, R0, LSL #2] 
    /*0000590c*/ LDR         R3, [R3, #28] 
    /*00005910*/ CMP         R3, #30 
    /*00005914*/ BEQ         GdcIoctl_x5a08
    /*00005918*/ STR         R0, [SP, #4] 
    /*0000591c*/ MOVW        R3, #4274                   @ 0x10b2 
    /*00005920*/ MOVW        R2, #0                      @ .LC205 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x21b8] 
    /*00005924*/ STR         R3, [SP] 
    /*00005928*/ MOVT        R2, #0                      @ .LC205 [R_ARM_MOVT_ABS: .rodata.str1.4+0x21b8] 
    /*0000592c*/ LDR         R3, [PC, #228]              @ 0x0000000000005a18 
    /*00005930*/ MOV         R1, #37                     @ 0x25 
    /*00005934*/ MOV         R0, #3 
    /*00005938*/ MOVW        R4, #32777                  @ 0x8009 
    /*0000593c*/ BL          0x000000000000593C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005940*/ MOVT        R4, #40997                  @ 0xa025 
    /*00005944*/ B           GdcIoctl_x589c
    GdcIoctl_x5948:
    /*00005948*/ MOVW        R0, #32784                  @ 0x8010 
    /*0000594c*/ MOVT        R0, #40997                  @ 0xa025 
    /*00005950*/ ADD         SP, SP, #52                 @ 0x34 
    /*00005954*/ POP         {R4, R5, R6, R7, PC} 
    GdcIoctl_x5958:
    /*00005958*/ ADD         R1, R6, #8 
    /*0000595c*/ LDR         R0, [R6] 
    /*00005960*/ BL          0x0000000000005960          @ GDC_SetJobConfig [R_ARM_CALL: .text+0x392c] 
    /*00005964*/ MOV         R4, R0 
    /*00005968*/ B           GdcIoctl_x589c
    GdcIoctl_x596c:
    /*0000596c*/ ADD         R1, R6, #8 
    /*00005970*/ LDR         R0, [R6] 
    /*00005974*/ BL          0x0000000000005974          @ GDC_GetJobConfig [R_ARM_CALL: .text+0x3b0c] 
    /*00005978*/ MOV         R4, R0 
    /*0000597c*/ B           GdcIoctl_x589c
    GdcIoctl_x5980:
    /*00005980*/ STR         R0, [SP, #4] 
    /*00005984*/ MOVW        R3, #4266                   @ 0x10aa 
    /*00005988*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xecc] 
    /*0000598c*/ STR         R3, [SP] 
    /*00005990*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0xecc] 
    /*00005994*/ LDR         R3, [PC, #124]              @ 0x0000000000005a18 
    /*00005998*/ MOV         R1, #37                     @ 0x25 
    /*0000599c*/ MOV         R0, #3 
    /*000059a0*/ MOVW        R4, #32771                  @ 0x8003 
    /*000059a4*/ BL          0x00000000000059A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000059a8*/ MOVT        R4, #40997                  @ 0xa025 
    /*000059ac*/ B           GdcIoctl_x589c
    GdcIoctl_x59b0:
    /*000059b0*/ MOV         IP, #0 
    /*000059b4*/ ADD         LR, SP, #12 
    /*000059b8*/ MOV         R0, R6 
    /*000059bc*/ MOV         R3, IP 
    /*000059c0*/ MOV         R2, IP 
    /*000059c4*/ MOV         R1, #30 
    /*000059c8*/ STR         LR, [SP] 
    /*000059cc*/ STR         R7, [SP, #32] 
    /*000059d0*/ STR         IP, [SP, #44]               @ 0x2c 
    /*000059d4*/ STR         IP, [SP, #36]               @ 0x24 
    /*000059d8*/ STR         IP, [SP, #40]               @ 0x28 
    /*000059dc*/ BL          0x00000000000059DC          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*000059e0*/ MOV         R4, R0 
    /*000059e4*/ B           GdcIoctl_x589c
    GdcIoctl_x59e8:
    /*000059e8*/ LDR         R0, [R6] 
    /*000059ec*/ BL          0x00000000000059EC          @ GDC_UsrEndJob [R_ARM_CALL: .text+0x4874] 
    /*000059f0*/ MOV         R4, R0 
    /*000059f4*/ B           GdcIoctl_x589c
    GdcIoctl_x59f8:
    /*000059f8*/ MOV         R0, R6 
    /*000059fc*/ BL          0x00000000000059FC          @ GDC_AddUserLimitPMFTask [R_ARM_CALL: .text+0x5578] 
    /*00005a00*/ MOV         R4, R0 
    /*00005a04*/ B           GdcIoctl_x589c
    GdcIoctl_x5a08:
    /*00005a08*/ BL          0x0000000000005A08          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*00005a0c*/ MOV         R4, R0 
    /*00005a10*/ B           GdcIoctl_x589c
    /*00005a14*/ ANDEQ       R0, R0, R8 
    /*00005a18*/ ANDEQ       R0, R0, IP, LSR #8 
FUNC_END GdcIoctl


FUNC_BEGIN GDC_ModInit
    /*00005a1c*/ PUSH        {R4, R5, LR} 
    /*00005a20*/ SUB         SP, SP, #36                 @ 0x24 
    /*00005a24*/ MOV         R1, #20 
    /*00005a28*/ MOVW        R3, #0                      @ .LC206 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2208] 
    /*00005a2c*/ MOVW        R2, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ac] 
    /*00005a30*/ MOVT        R3, #0                      @ .LC206 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2208] 
    /*00005a34*/ MOVT        R2, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ac] 
    /*00005a38*/ ADD         R0, SP, #12 
    /*00005a3c*/ BL          0x0000000000005A3C          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*00005a40*/ ADD         R0, SP, #12 
    /*00005a44*/ BL          0x0000000000005A44          @ osal_createdev [R_ARM_CALL: +0x0] 
    /*00005a48*/ LDR         R5, [PC, #592]              @ 0x0000000000005ca0 
    /*00005a4c*/ MOVW        R4, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00005a50*/ MOVT        R4, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00005a54*/ ADD         R2, R5, #32 
    /*00005a58*/ STR         R5, [R0, #56]               @ 0x38 
    /*00005a5c*/ STR         R2, [R0, #60]               @ 0x3c 
    /*00005a60*/ MOV         R2, #27 
    /*00005a64*/ STR         R2, [R0, #52]               @ 0x34 
    /*00005a68*/ STR         R0, [R4, #1056]             @ 0x420 
    /*00005a6c*/ BL          0x0000000000005A6C          @ osal_registerdevice [R_ARM_CALL: +0x0] 
    /*00005a70*/ CMP         R0, #0 
    /*00005a74*/ BLT         GDC_ModInit_x5c54
    /*00005a78*/ ADD         R0, R5, #112                @ 0x70 
    /*00005a7c*/ BL          0x0000000000005A7C          @ CMPI_RegisterModule [R_ARM_CALL: +0x0] 
    /*00005a80*/ SUBS        R1, R0, #0 
    /*00005a84*/ BNE         GDC_ModInit_x5b38
    /*00005a88*/ MOVW        R0, #0                      @ .LC206 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2208] 
    /*00005a8c*/ MOVT        R0, #0                      @ .LC206 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2208] 
    /*00005a90*/ BL          0x0000000000005A90          @ osal_create_proc_entry [R_ARM_CALL: +0x0] 
    /*00005a94*/ SUBS        R2, R0, #0 
    /*00005a98*/ BEQ         GDC_ModInit_x5c7c
    /*00005a9c*/ MOVW        R3, #0                      @ GDC_ProcShow [R_ARM_MOVW_ABS_NC: .text+0x1b0] 
    /*00005aa0*/ ADD         R0, R4, #8 
    /*00005aa4*/ MOVT        R3, #0                      @ GDC_ProcShow [R_ARM_MOVT_ABS: .text+0x1b0] 
    /*00005aa8*/ STR         R3, [R2, #60]               @ 0x3c 
    /*00005aac*/ BL          0x0000000000005AAC          @ osal_atomic_init [R_ARM_CALL: +0x0] 
    /*00005ab0*/ SUBS        R1, R0, #0 
    /*00005ab4*/ BNE         GDC_ModInit_x5b74
    /*00005ab8*/ ADD         R0, R4, #8 
    /*00005abc*/ BL          0x0000000000005ABC          @ osal_atomic_set [R_ARM_CALL: +0x0] 
    /*00005ac0*/ BL          0x0000000000005AC0          @ GDC_InitSyncCtx [R_ARM_CALL: .text+0x53dc] 
    /*00005ac4*/ SUBS        R5, R0, #0 
    /*00005ac8*/ BNE         GDC_ModInit_x5ba8
    /*00005acc*/ BL          0x0000000000005ACC          @ GDC_DRV_PowerOn [R_ARM_CALL: .text+0x19280] 
    /*00005ad0*/ BL          0x0000000000005AD0          @ GDC_DRV_RamStatusInit [R_ARM_CALL: .text+0x19194] 
    /*00005ad4*/ MOV         R0, R5 
    /*00005ad8*/ BL          0x0000000000005AD8          @ GDC_DRV_SetRamUserSafety [R_ARM_CALL: .text+0x19214] 
    /*00005adc*/ MOV         R0, #1 
    /*00005ae0*/ BL          0x0000000000005AE0          @ GDC_DRV_SetRamSelectRegFlag [R_ARM_CALL: .text+0x19190] 
    /*00005ae4*/ ADD         R0, R4, #64                 @ 0x40 
    /*00005ae8*/ BL          0x0000000000005AE8          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*00005aec*/ CMP         R0, #0 
    /*00005af0*/ BNE         GDC_ModInit_x5bd4
    /*00005af4*/ LDR         R0, [PC, #424]              @ 0x0000000000005ca4 
    /*00005af8*/ BL          0x0000000000005AF8          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*00005afc*/ CMP         R0, #0 
    /*00005b00*/ BNE         GDC_ModInit_x5bfc
    /*00005b04*/ MOV         R1, #1 
    /*00005b08*/ ADD         R0, R4, #68                 @ 0x44 
    /*00005b0c*/ BL          0x0000000000005B0C          @ osal_sema_init [R_ARM_CALL: +0x0] 
    /*00005b10*/ SUBS        R5, R0, #0 
    /*00005b14*/ BNE         GDC_ModInit_x5c28
    /*00005b18*/ MOVW        R1, #0                      @ .LC208 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x223c] 
    /*00005b1c*/ MOVW        R0, #0                      @ .LC216 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23ac] 
    /*00005b20*/ MOVT        R1, #0                      @ .LC208 [R_ARM_MOVT_ABS: .rodata.str1.4+0x223c] 
    /*00005b24*/ MOVT        R0, #0                      @ .LC216 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23ac] 
    /*00005b28*/ BL          0x0000000000005B28          @ osal_printk [R_ARM_CALL: +0x0] 
    GDC_ModInit_x5b2c:
    /*00005b2c*/ MOV         R0, R5 
    /*00005b30*/ ADD         SP, SP, #36                 @ 0x24 
    /*00005b34*/ POP         {R4, R5, PC} 
    GDC_ModInit_x5b38:
    /*00005b38*/ MOVW        R1, #0                      @ .LC208 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x223c] 
    /*00005b3c*/ MOVW        R0, #0                      @ .LC209 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2248] 
    /*00005b40*/ MOVT        R1, #0                      @ .LC208 [R_ARM_MOVT_ABS: .rodata.str1.4+0x223c] 
    /*00005b44*/ MOVT        R0, #0                      @ .LC209 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2248] 
    /*00005b48*/ BL          0x0000000000005B48          @ osal_printk [R_ARM_CALL: +0x0] 
    GDC_ModInit_x5b4c:
    /*00005b4c*/ LDR         R0, [R4, #1056]             @ 0x420 
    /*00005b50*/ MVN         R5, #0 
    /*00005b54*/ BL          0x0000000000005B54          @ osal_deregisterdevice [R_ARM_CALL: +0x0] 
    /*00005b58*/ LDR         R0, [R4, #1056]             @ 0x420 
    /*00005b5c*/ BL          0x0000000000005B5C          @ osal_destroydev [R_ARM_CALL: +0x0] 
    /*00005b60*/ MOV         R3, #0 
    /*00005b64*/ MOV         R0, R5 
    /*00005b68*/ STR         R3, [R4, #1056]             @ 0x420 
    /*00005b6c*/ ADD         SP, SP, #36                 @ 0x24 
    /*00005b70*/ POP         {R4, R5, PC} 
    GDC_ModInit_x5b74:
    /*00005b74*/ MOVW        R3, #4482                   @ 0x1182 
    /*00005b78*/ MOVW        R2, #0                      @ .LC211 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22a0] 
    /*00005b7c*/ STR         R3, [SP] 
    /*00005b80*/ MOVT        R2, #0                      @ .LC211 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22a0] 
    /*00005b84*/ LDR         R3, [PC, #284]              @ 0x0000000000005ca8 
    /*00005b88*/ MOV         R1, #37                     @ 0x25 
    /*00005b8c*/ MOV         R0, #3 
    /*00005b90*/ BL          0x0000000000005B90          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ModInit_x5b94:
    /*00005b94*/ MOVW        R0, #0                      @ .LC206 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2208] 
    /*00005b98*/ MOV         R1, #0 
    /*00005b9c*/ MOVT        R0, #0                      @ .LC206 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2208] 
    /*00005ba0*/ BL          0x0000000000005BA0          @ osal_remove_proc_entry [R_ARM_CALL: +0x0] 
    /*00005ba4*/ B           GDC_ModInit_x5b4c
    GDC_ModInit_x5ba8:
    /*00005ba8*/ MOVW        R3, #4489                   @ 0x1189 
    /*00005bac*/ MOVW        R2, #0                      @ .LC212 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22d8] 
    /*00005bb0*/ STR         R3, [SP] 
    /*00005bb4*/ MOVT        R2, #0                      @ .LC212 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22d8] 
    /*00005bb8*/ LDR         R3, [PC, #232]              @ 0x0000000000005ca8 
    /*00005bbc*/ MOV         R1, #37                     @ 0x25 
    /*00005bc0*/ MOV         R0, #3 
    /*00005bc4*/ BL          0x0000000000005BC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ModInit_x5bc8:
    /*00005bc8*/ LDR         R0, [PC, #220]              @ 0x0000000000005cac 
    /*00005bcc*/ BL          0x0000000000005BCC          @ osal_atomic_destory [R_ARM_CALL: +0x0] 
    /*00005bd0*/ B           GDC_ModInit_x5b94
    GDC_ModInit_x5bd4:
    /*00005bd4*/ MOVW        R3, #4504                   @ 0x1198 
    /*00005bd8*/ MOVW        R2, #0                      @ .LC213 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x230c] 
    /*00005bdc*/ STR         R3, [SP] 
    /*00005be0*/ MOVT        R2, #0                      @ .LC213 [R_ARM_MOVT_ABS: .rodata.str1.4+0x230c] 
    /*00005be4*/ LDR         R3, [PC, #188]              @ 0x0000000000005ca8 
    /*00005be8*/ MOV         R1, #37                     @ 0x25 
    /*00005bec*/ MOV         R0, #3 
    /*00005bf0*/ BL          0x0000000000005BF0          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ModInit_x5bf4:
    /*00005bf4*/ BL          0x0000000000005BF4          @ GDC_DeInitSyncCtx [R_ARM_CALL: .text+0x54a0] 
    /*00005bf8*/ B           GDC_ModInit_x5bc8
    GDC_ModInit_x5bfc:
    /*00005bfc*/ MOVW        R3, #4511                   @ 0x119f 
    /*00005c00*/ MOVW        R2, #0                      @ .LC214 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2340] 
    /*00005c04*/ STR         R3, [SP] 
    /*00005c08*/ MOVT        R2, #0                      @ .LC214 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2340] 
    /*00005c0c*/ LDR         R3, [PC, #148]              @ 0x0000000000005ca8 
    /*00005c10*/ MOV         R1, #37                     @ 0x25 
    /*00005c14*/ MOV         R0, #3 
    /*00005c18*/ BL          0x0000000000005C18          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ModInit_x5c1c:
    /*00005c1c*/ LDR         R0, [PC, #140]              @ 0x0000000000005cb0 
    /*00005c20*/ BL          0x0000000000005C20          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*00005c24*/ B           GDC_ModInit_x5bf4
    GDC_ModInit_x5c28:
    /*00005c28*/ MOVW        R3, #4518                   @ 0x11a6 
    /*00005c2c*/ MOV         R1, #37                     @ 0x25 
    /*00005c30*/ STR         R3, [SP] 
    /*00005c34*/ MOVW        R2, #0                      @ .LC215 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2378] 
    /*00005c38*/ LDR         R3, [PC, #104]              @ 0x0000000000005ca8 
    /*00005c3c*/ MOVT        R2, #0                      @ .LC215 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2378] 
    /*00005c40*/ MOV         R0, #3 
    /*00005c44*/ BL          0x0000000000005C44          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005c48*/ LDR         R0, [PC, #84]               @ 0x0000000000005ca4 
    /*00005c4c*/ BL          0x0000000000005C4C          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*00005c50*/ B           GDC_ModInit_x5c1c
    GDC_ModInit_x5c54:
    /*00005c54*/ MOVW        R3, #4460                   @ 0x116c 
    /*00005c58*/ MOVW        R2, #0                      @ .LC207 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x220c] 
    /*00005c5c*/ STR         R3, [SP] 
    /*00005c60*/ MOVT        R2, #0                      @ .LC207 [R_ARM_MOVT_ABS: .rodata.str1.4+0x220c] 
    /*00005c64*/ LDR         R3, [PC, #60]               @ 0x0000000000005ca8 
    /*00005c68*/ MOV         R1, #37                     @ 0x25 
    /*00005c6c*/ MOV         R0, #3 
    /*00005c70*/ MVN         R5, #0 
    /*00005c74*/ BL          0x0000000000005C74          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005c78*/ B           GDC_ModInit_x5b2c
    GDC_ModInit_x5c7c:
    /*00005c7c*/ MOVW        R3, #4474                   @ 0x117a 
    /*00005c80*/ MOVW        R2, #0                      @ .LC210 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2268] 
    /*00005c84*/ STR         R3, [SP] 
    /*00005c88*/ MOVT        R2, #0                      @ .LC210 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2268] 
    /*00005c8c*/ LDR         R3, [PC, #20]               @ 0x0000000000005ca8 
    /*00005c90*/ MOV         R1, #37                     @ 0x25 
    /*00005c94*/ MOV         R0, #3 
    /*00005c98*/ BL          0x0000000000005C98          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005c9c*/ B           GDC_ModInit_x5b4c
    /*00005ca0*/ ANDEQ       R0, R0, R0, LSL R0 
    /*00005ca4*/ ANDEQ       R0, R0, R4, LSR #8 
    /*00005ca8*/ ANDEQ       R0, R0, R8, LSR R4 
    /*00005cac*/ ANDEQ       R0, R0, R8 
    /*00005cb0*/ ANDEQ       R0, R0, R0, ASR #32 
FUNC_END GDC_ModInit


FUNC_BEGIN GDC_ModExit
    /*00005cb4*/ PUSH        {R4, LR} 
    /*00005cb8*/ MOVW        R4, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00005cbc*/ MOVT        R4, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00005cc0*/ LDR         R3, [R4, #1056]             @ 0x420 
    /*00005cc4*/ CMP         R3, #0 
    /*00005cc8*/ BEQ         GDC_ModExit_x5d2c
    /*00005ccc*/ ADD         R0, R4, #68                 @ 0x44 
    /*00005cd0*/ BL          0x0000000000005CD0          @ osal_sema_destory [R_ARM_CALL: +0x0] 
    /*00005cd4*/ ADD         R0, R4, #64                 @ 0x40 
    /*00005cd8*/ BL          0x0000000000005CD8          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*00005cdc*/ LDR         R0, [PC, #96]               @ 0x0000000000005d44 
    /*00005ce0*/ BL          0x0000000000005CE0          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*00005ce4*/ BL          0x0000000000005CE4          @ GDC_DRV_RamStatusExit [R_ARM_CALL: .text+0x191a8] 
    /*00005ce8*/ MOV         R0, #0 
    /*00005cec*/ BL          0x0000000000005CEC          @ GDC_DRV_SetRamUserSafety [R_ARM_CALL: .text+0x19214] 
    /*00005cf0*/ MOV         R0, #0 
    /*00005cf4*/ BL          0x0000000000005CF4          @ GDC_DRV_SetRamSelectRegFlag [R_ARM_CALL: .text+0x19190] 
    /*00005cf8*/ MOV         R0, #37                     @ 0x25 
    /*00005cfc*/ BL          0x0000000000005CFC          @ CMPI_UnRegisterModule [R_ARM_CALL: +0x0] 
    /*00005d00*/ MOV         R1, #0 
    /*00005d04*/ MOVW        R0, #0                      @ .LC206 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2208] 
    /*00005d08*/ MOVT        R0, #0                      @ .LC206 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2208] 
    /*00005d0c*/ BL          0x0000000000005D0C          @ osal_remove_proc_entry [R_ARM_CALL: +0x0] 
    /*00005d10*/ LDR         R0, [R4, #1056]             @ 0x420 
    /*00005d14*/ BL          0x0000000000005D14          @ osal_deregisterdevice [R_ARM_CALL: +0x0] 
    /*00005d18*/ LDR         R0, [R4, #1056]             @ 0x420 
    /*00005d1c*/ BL          0x0000000000005D1C          @ osal_destroydev [R_ARM_CALL: +0x0] 
    /*00005d20*/ ADD         R0, R4, #8 
    /*00005d24*/ BL          0x0000000000005D24          @ osal_atomic_destory [R_ARM_CALL: +0x0] 
    /*00005d28*/ BL          0x0000000000005D28          @ GDC_DeInitSyncCtx [R_ARM_CALL: .text+0x54a0] 
    GDC_ModExit_x5d2c:
    /*00005d2c*/ MOVW        R1, #0                      @ .LC208 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x223c] 
    /*00005d30*/ MOVW        R0, #0                      @ .LC217 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23c8] 
    /*00005d34*/ MOVT        R1, #0                      @ .LC208 [R_ARM_MOVT_ABS: .rodata.str1.4+0x223c] 
    /*00005d38*/ MOVT        R0, #0                      @ .LC217 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23c8] 
    /*00005d3c*/ POP         {R4, LR} 
    GDC_ModExit_x5d40:
    /*00005d40*/ B           GDC_ModExit_x5d40           @ osal_printk [R_ARM_JUMP24: +0x0] 
    /*00005d44*/ ANDEQ       R0, R0, R4, LSR #8 
FUNC_END GDC_ModExit


FUNC_BEGIN GDC_MidwareGetFreeNode
    /*00005d48*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00005d4c*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00005d50*/ PUSH        {R4, R5, LR} 
    /*00005d54*/ SUB         SP, SP, #20 
    /*00005d58*/ LDR         R4, [R3] 
    /*00005d5c*/ ADD         R1, SP, #12 
    /*00005d60*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00005d64*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00005d68*/ ADD         R4, R4, #648                @ 0x288 
    /*00005d6c*/ BL          0x0000000000005D6C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00005d70*/ MOV         R0, R4 
    /*00005d74*/ BL          0x0000000000005D74          @ GDC_GetNodeFromFreeList [R_ARM_CALL: .text+0xfde4] 
    /*00005d78*/ SUBS        R5, R0, #0 
    /*00005d7c*/ BEQ         GDC_MidwareGetFreeNode_x5db4
    /*00005d80*/ ADD         R3, R5, #4096               @ 0x1000 
    /*00005d84*/ MOV         R0, R4 
    /*00005d88*/ MOV         R2, #0 
    /*00005d8c*/ MOV         R1, R5 
    /*00005d90*/ STR         R2, [R3, #760]              @ 0x2f8 
    /*00005d94*/ BL          0x0000000000005D94          @ GDC_PutNodeToBusyList [R_ARM_CALL: .text+0xff60] 
    /*00005d98*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00005d9c*/ ADD         R1, SP, #12 
    /*00005da0*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00005da4*/ BL          0x0000000000005DA4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    GDC_MidwareGetFreeNode_x5da8:
    /*00005da8*/ MOV         R0, R5 
    /*00005dac*/ ADD         SP, SP, #20 
    /*00005db0*/ POP         {R4, R5, PC} 
    GDC_MidwareGetFreeNode_x5db4:
    /*00005db4*/ MOVW        R2, #323                    @ 0x143 
    /*00005db8*/ MOV         R1, #37                     @ 0x25 
    /*00005dbc*/ STR         R2, [SP] 
    /*00005dc0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x444] 
    /*00005dc4*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x24ec] 
    /*00005dc8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x444] 
    /*00005dcc*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x24ec] 
    /*00005dd0*/ MOV         R0, #3 
    /*00005dd4*/ BL          0x0000000000005DD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005dd8*/ ADD         R1, SP, #12 
    /*00005ddc*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00005de0*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00005de4*/ BL          0x0000000000005DE4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00005de8*/ B           GDC_MidwareGetFreeNode_x5da8
FUNC_END GDC_MidwareGetFreeNode


FUNC_BEGIN GDC_WaitStopWorkingCallBack
    /*00005dec*/ PUSH        {R4, R5, LR} 
    /*00005df0*/ SUB         SP, SP, #12 
    /*00005df4*/ ADD         R4, SP, #8 
    /*00005df8*/ MOV         R3, #0 
    /*00005dfc*/ MOV         R5, R0 
    /*00005e00*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00005e04*/ STR         R3, [R4, #-4]! 
    /*00005e08*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00005e0c*/ MOV         R1, R4 
    /*00005e10*/ BL          0x0000000000005E10          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00005e14*/ LDR         R2, [R5] 
    /*00005e18*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*00005e1c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*00005e20*/ LDR         R3, [R3, R2, LSL #2] 
    /*00005e24*/ LDR         R2, [R3, #8] 
    /*00005e28*/ CMP         R2, #0 
    /*00005e2c*/ BNE         GDC_WaitStopWorkingCallBack_x5e3c
    /*00005e30*/ LDR         R2, [R3, #12] 
    /*00005e34*/ CMP         R2, #0 
    /*00005e38*/ BEQ         GDC_WaitStopWorkingCallBack_x5e58
    GDC_WaitStopWorkingCallBack_x5e3c:
    /*00005e3c*/ MOV         R1, R4 
    /*00005e40*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00005e44*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00005e48*/ BL          0x0000000000005E48          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00005e4c*/ MOV         R0, #0 
    GDC_WaitStopWorkingCallBack_x5e50:
    /*00005e50*/ ADD         SP, SP, #12 
    /*00005e54*/ POP         {R4, R5, PC} 
    GDC_WaitStopWorkingCallBack_x5e58:
    /*00005e58*/ LDR         R3, [R3, #20] 
    /*00005e5c*/ CMP         R3, #0 
    /*00005e60*/ BNE         GDC_WaitStopWorkingCallBack_x5e3c
    /*00005e64*/ MOV         R1, R4 
    /*00005e68*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00005e6c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00005e70*/ BL          0x0000000000005E70          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00005e74*/ MOV         R0, #1 
    /*00005e78*/ B           GDC_WaitStopWorkingCallBack_x5e50
FUNC_END GDC_WaitStopWorkingCallBack


FUNC_BEGIN GDC_MidwareReleaseNode
    /*00005e7c*/ PUSH        {R4, R5, LR} 
    /*00005e80*/ SUB         SP, SP, #20 
    /*00005e84*/ MOV         R4, R0 
    /*00005e88*/ MOV         R5, R1 
    /*00005e8c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00005e90*/ ADD         R1, SP, #12 
    /*00005e94*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00005e98*/ BL          0x0000000000005E98          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00005e9c*/ LDR         R2, [R4, #12] 
    /*00005ea0*/ ADD         R3, R4, #12 
    /*00005ea4*/ CMP         R2, R3 
    /*00005ea8*/ BEQ         GDC_MidwareReleaseNode_x5edc
    /*00005eac*/ MOV         R1, R5 
    /*00005eb0*/ MOV         R0, R4 
    /*00005eb4*/ BL          0x0000000000005EB4          @ GDC_GetCurrentNodeFromBusyList [R_ARM_CALL: .text+0xff84] 
    /*00005eb8*/ MOV         R1, R5 
    /*00005ebc*/ MOV         R0, R4 
    /*00005ec0*/ BL          0x0000000000005EC0          @ GDC_PutNodeToFreeList [R_ARM_CALL: .text+0xfe90] 
    /*00005ec4*/ ADD         R1, SP, #12 
    /*00005ec8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00005ecc*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00005ed0*/ BL          0x0000000000005ED0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00005ed4*/ ADD         SP, SP, #20 
    /*00005ed8*/ POP         {R4, R5, PC} 
    GDC_MidwareReleaseNode_x5edc:
    /*00005edc*/ MOVW        R3, #430                    @ 0x1ae 
    /*00005ee0*/ MOV         R1, #37                     @ 0x25 
    /*00005ee4*/ STR         R3, [SP] 
    /*00005ee8*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2518] 
    /*00005eec*/ LDR         R3, [PC, #32]               @ 0x0000000000005f14 
    /*00005ef0*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2518] 
    /*00005ef4*/ MOV         R0, #4 
    /*00005ef8*/ BL          0x0000000000005EF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005efc*/ ADD         R1, SP, #12 
    /*00005f00*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00005f04*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00005f08*/ BL          0x0000000000005F08          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00005f0c*/ ADD         SP, SP, #20 
    /*00005f10*/ POP         {R4, R5, PC} 
    /*00005f14*/ ANDEQ       R0, R0, IP, ASR R4 
FUNC_END GDC_MidwareReleaseNode


FUNC_BEGIN GDC_CheckChnId.part.0
    /*00005f18*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00005f1c*/ SUB         SP, SP, #20 
    /*00005f20*/ MOV         R2, #63                     @ 0x3f 
    /*00005f24*/ MOV         R3, #0 
    /*00005f28*/ STR         R0, [SP, #4] 
    /*00005f2c*/ MOV         R1, #37                     @ 0x25 
    /*00005f30*/ STR         R2, [SP, #12] 
    /*00005f34*/ MOV         R0, #3 
    /*00005f38*/ STR         R3, [SP, #8] 
    /*00005f3c*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2548] 
    /*00005f40*/ MOVW        R3, #305                    @ 0x131 
    /*00005f44*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2548] 
    /*00005f48*/ STR         R3, [SP] 
    /*00005f4c*/ LDR         R3, [PC, #16]               @ 0x0000000000005f64 
    /*00005f50*/ BL          0x0000000000005F50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005f54*/ MOVW        R0, #32770                  @ 0x8002 
    /*00005f58*/ MOVT        R0, #40997                  @ 0xa025 
    /*00005f5c*/ ADD         SP, SP, #20 
    /*00005f60*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00005f64*/ ANDEQ       R0, R0, R4, ROR R4 
FUNC_END GDC_CheckChnId.part.0


FUNC_BEGIN GetGDCCommCfg.part.4
    /*00005f68*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00005f6c*/ SUB         SP, SP, #12 
    /*00005f70*/ MOV         R3, #824                    @ 0x338 
    /*00005f74*/ MOV         R1, #37                     @ 0x25 
    /*00005f78*/ STR         R0, [SP, #4] 
    /*00005f7c*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x25a0] 
    /*00005f80*/ STR         R3, [SP] 
    /*00005f84*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x25a0] 
    /*00005f88*/ LDR         R3, [PC, #20]               @ 0x0000000000005fa4 
    /*00005f8c*/ MOV         R0, #3 
    /*00005f90*/ BL          0x0000000000005F90          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005f94*/ MOVW        R0, #32771                  @ 0x8003 
    /*00005f98*/ MOVT        R0, #40997                  @ 0xa025 
    /*00005f9c*/ ADD         SP, SP, #12 
    /*00005fa0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00005fa4*/ ANDEQ       R0, R0, R4, LSL #9 
FUNC_END GetGDCCommCfg.part.4


FUNC_BEGIN GDC_AddGyroDisTask
    /*00005fa8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00005fac*/ SUB         SP, SP, #448                @ 0x1c0 
    /*00005fb0*/ MOV         R5, R2 
    /*00005fb4*/ MOV         R8, R0 
    /*00005fb8*/ MOV         R4, R1 
    /*00005fbc*/ ADD         R0, SP, #24 
    /*00005fc0*/ MOV         R2, #424                    @ 0x1a8 
    /*00005fc4*/ MOV         R1, #0 
    /*00005fc8*/ MOV         R6, R3 
    /*00005fcc*/ BL          0x0000000000005FCC          @ memset [R_ARM_CALL: +0x0] 
    /*00005fd0*/ LDR         R0, [R5, #12] 
    /*00005fd4*/ CMP         R0, #63                     @ 0x3f 
    /*00005fd8*/ BHI         GDC_AddGyroDisTask_x60a8
    GDC_AddGyroDisTask_x5fdc:
    /*00005fdc*/ MOV         R3, #37                     @ 0x25 
    /*00005fe0*/ STR         R3, [R4, #668]              @ 0x29c 
    /*00005fe4*/ LDR         R3, [R5] 
    /*00005fe8*/ LDR         R2, [R4, #4] 
    /*00005fec*/ LDR         R0, [R4, #24] 
    /*00005ff0*/ STR         R3, [R4, #752]              @ 0x2f0 
    /*00005ff4*/ LDR         R3, [R5, #4] 
    /*00005ff8*/ CMP         R0, #0 
    /*00005ffc*/ STR         R2, [SP, #16] 
    /*00006000*/ LDR         R2, [R4] 
    /*00006004*/ STR         R3, [R4, #756]              @ 0x2f4 
    /*00006008*/ LDR         R3, [R5, #8] 
    /*0000600c*/ STR         R2, [SP, #12] 
    /*00006010*/ STR         R3, [R4, #760]              @ 0x2f8 
    /*00006014*/ MOVEQ       R3, #8 
    /*00006018*/ STREQ       R3, [SP, #20] 
    /*0000601c*/ BEQ         GDC_AddGyroDisTask_x6034
    /*00006020*/ SUB         R3, R0, #1 
    /*00006024*/ CMP         R3, #4 
    /*00006028*/ BHI         GDC_AddGyroDisTask_x60c0
    /*0000602c*/ MOV         R3, #10 
    /*00006030*/ STR         R3, [SP, #20] 
    GDC_AddGyroDisTask_x6034:
    /*00006034*/ ADD         R1, R6, #8 
    /*00006038*/ ADD         R0, SP, #12 
    /*0000603c*/ BL          0x000000000000603C          @ GDC_DrvGyro_FIFO_CFG [R_ARM_CALL: .text+0x1928c] 
    /*00006040*/ MOV         R1, R6 
    /*00006044*/ MOV         R2, #416                    @ 0x1a0 
    /*00006048*/ ADD         R0, SP, #32 
    /*0000604c*/ BL          0x000000000000604C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006050*/ ADD         R2, SP, #24 
    /*00006054*/ MOV         R1, R4 
    /*00006058*/ MOV         R0, R8 
    /*0000605c*/ MOV         R3, #1 
    /*00006060*/ STR         R3, [SP, #24] 
    /*00006064*/ BL          0x0000000000006064          @ GDC_AddGyroTask [R_ARM_CALL: .text+0x3c38] 
    /*00006068*/ SUBS        R7, R0, #0 
    /*0000606c*/ BNE         GDC_AddGyroDisTask_x607c
    /*00006070*/ MOV         R0, R7 
    /*00006074*/ ADD         SP, SP, #448                @ 0x1c0 
    /*00006078*/ POP         {R4, R5, R6, R7, R8, PC} 
    GDC_AddGyroDisTask_x607c:
    /*0000607c*/ MOVW        R3, #1810                   @ 0x712 
    /*00006080*/ MOV         R1, #37                     @ 0x25 
    /*00006084*/ STR         R3, [SP] 
    /*00006088*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x25d8] 
    /*0000608c*/ LDR         R3, [PC, #52]               @ 0x00000000000060c8 
    /*00006090*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x25d8] 
    /*00006094*/ MOV         R0, #3 
    /*00006098*/ BL          0x0000000000006098          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000609c*/ MOV         R0, R7 
    /*000060a0*/ ADD         SP, SP, #448                @ 0x1c0 
    /*000060a4*/ POP         {R4, R5, R6, R7, R8, PC} 
    GDC_AddGyroDisTask_x60a8:
    /*000060a8*/ BL          0x0000000000005F18 
    /*000060ac*/ SUBS        R7, R0, #0 
    /*000060b0*/ BEQ         GDC_AddGyroDisTask_x5fdc
    /*000060b4*/ MOV         R0, R7 
    /*000060b8*/ ADD         SP, SP, #448                @ 0x1c0 
    /*000060bc*/ POP         {R4, R5, R6, R7, R8, PC} 
    GDC_AddGyroDisTask_x60c0:
    /*000060c0*/ BL          0x0000000000005F68 
    /*000060c4*/ B           GDC_AddGyroDisTask_x6034
    /*000060c8*/ MULEQ       R0, R4, R4 
FUNC_END GDC_AddGyroDisTask


FUNC_BEGIN GDC_AddRotationExTask
    /*000060cc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000060d0*/ SUB         SP, SP, #124                @ 0x7c 
    /*000060d4*/ LDR         R5, [R2, #12] 
    /*000060d8*/ MOV         R6, R2 
    /*000060dc*/ STR         R0, [SP, #16] 
    /*000060e0*/ MOV         R4, R1 
    /*000060e4*/ CMP         R5, #63                     @ 0x3f 
    /*000060e8*/ BHI         GDC_AddRotationExTask_x6228
    GDC_AddRotationExTask_x60ec:
    /*000060ec*/ MOV         R2, #37                     @ 0x25 
    /*000060f0*/ STR         R2, [R4, #668]              @ 0x29c 
    /*000060f4*/ LDR         R2, [R6] 
    /*000060f8*/ LSL         R5, R5, #2 
    /*000060fc*/ MOVW        R7, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*00006100*/ MOVT        R7, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*00006104*/ LDR         R1, [R4] 
    /*00006108*/ ADD         FP, R7, R5 
    /*0000610c*/ STR         R2, [R4, #752]              @ 0x2f0 
    /*00006110*/ LDR         R2, [R6, #4] 
    /*00006114*/ LDR         R8, [FP, #256]              @ 0x100 
    /*00006118*/ STR         R1, [SP, #20] 
    /*0000611c*/ STR         R2, [R4, #756]              @ 0x2f4 
    /*00006120*/ ADD         SL, R8, #1248               @ 0x4e0 
    /*00006124*/ LDR         R1, [R4, #4] 
    /*00006128*/ ADD         R9, R8, #1136               @ 0x470 
    /*0000612c*/ LDR         R2, [R6, #8] 
    /*00006130*/ ADD         R9, R9, #8 
    /*00006134*/ STR         R1, [SP, #24] 
    /*00006138*/ MOV         R1, SL 
    /*0000613c*/ STR         R2, [R4, #760]              @ 0x2f8 
    /*00006140*/ LDR         R0, [R3] 
    /*00006144*/ BL          0x0000000000006144          @ GDC_DRV_CheckConfig [R_ARM_CALL: .text+0x18f2c] 
    /*00006148*/ CMP         R0, #0 
    /*0000614c*/ BEQ         GDC_AddRotationExTask_x61e8
    /*00006150*/ LDR         R1, [FP, #256]              @ 0x100 
    /*00006154*/ MOV         R2, #72                     @ 0x48 
    /*00006158*/ MOV         R0, SL 
    /*0000615c*/ ADD         R3, R9, #4 
    /*00006160*/ ADD         R1, R1, #1248               @ 0x4e0 
    /*00006164*/ STR         R3, [SP, #28] 
    /*00006168*/ BL          0x0000000000006168          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000616c*/ LDR         R1, [FP, #256]              @ 0x100 
    /*00006170*/ MOV         R2, #88                     @ 0x58 
    /*00006174*/ ADD         R0, R9, #16 
    /*00006178*/ ADD         R1, R1, #1152               @ 0x480 
    /*0000617c*/ ADD         R1, R1, #8 
    /*00006180*/ BL          0x0000000000006180          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006184*/ MOV         R2, #72                     @ 0x48 
    /*00006188*/ ADD         R1, R8, #1168               @ 0x490 
    /*0000618c*/ ADD         R0, SP, #40                 @ 0x28 
    /*00006190*/ BL          0x0000000000006190          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006194*/ LDR         R3, [SP, #20] 
    /*00006198*/ LDR         R0, [R4, #24] 
    /*0000619c*/ STR         R3, [R8, #1148]             @ 0x47c 
    /*000061a0*/ CMP         R0, #0 
    /*000061a4*/ LDR         R3, [SP, #24] 
    /*000061a8*/ STR         R3, [R8, #1152]             @ 0x480 
    /*000061ac*/ MOVEQ       R3, #8 
    /*000061b0*/ STREQ       R3, [R8, #1156]             @ 0x484 
    /*000061b4*/ BEQ         GDC_AddRotationExTask_x61cc
    /*000061b8*/ SUB         R3, R0, #1 
    /*000061bc*/ CMP         R3, #4 
    /*000061c0*/ BHI         GDC_AddRotationExTask_x62a4
    /*000061c4*/ MOV         R3, #10 
    /*000061c8*/ STR         R3, [R8, #1156]             @ 0x484 
    GDC_AddRotationExTask_x61cc:
    /*000061cc*/ MOV         R2, SL 
    /*000061d0*/ ADD         R0, R9, #4 
    /*000061d4*/ ADD         R3, R9, #176                @ 0xb0 
    /*000061d8*/ ADD         R1, SP, #32 
    /*000061dc*/ BL          0x00000000000061DC          @ GDC_PMF_FIFO_CFG [R_ARM_CALL: .text+0x1ba8c] 
    /*000061e0*/ SUBS        SL, R0, #0 
    /*000061e4*/ BNE         GDC_AddRotationExTask_x6288
    GDC_AddRotationExTask_x61e8:
    /*000061e8*/ MOV         R3, #0 
    /*000061ec*/ MOV         R2, #1 
    /*000061f0*/ MOV         R1, R4 
    /*000061f4*/ STR         R2, [R8, #1144]             @ 0x478 
    /*000061f8*/ LDR         R0, [SP, #16] 
    /*000061fc*/ MOV         R2, R3 
    /*00006200*/ STR         R9, [SP] 
    /*00006204*/ BL          0x0000000000006204          @ GDC_AddLDCOrPMFTask [R_ARM_CALL: .text+0x3440] 
    /*00006208*/ SUBS        SL, R0, #0 
    /*0000620c*/ BNE         GDC_AddRotationExTask_x624c
    /*00006210*/ ADD         R5, R7, R5 
    /*00006214*/ MOV         R0, SL 
    /*00006218*/ LDR         R3, [R5, #256]              @ 0x100 
    /*0000621c*/ STR         SL, [R3] 
    /*00006220*/ ADD         SP, SP, #124                @ 0x7c 
    /*00006224*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddRotationExTask_x6228:
    /*00006228*/ MOV         R0, R5 
    /*0000622c*/ STR         R3, [SP, #20] 
    /*00006230*/ BL          0x0000000000005F18 
    /*00006234*/ LDR         R3, [SP, #20] 
    /*00006238*/ SUBS        SL, R0, #0 
    /*0000623c*/ BEQ         GDC_AddRotationExTask_x60ec
    /*00006240*/ MOV         R0, SL 
    /*00006244*/ ADD         SP, SP, #124                @ 0x7c 
    /*00006248*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddRotationExTask_x624c:
    /*0000624c*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x264c] 
    /*00006250*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x264c] 
    /*00006254*/ LDR         R1, [R6, #8] 
    /*00006258*/ MOVW        R0, #2179                   @ 0x883 
    /*0000625c*/ LDR         R3, [R6, #4] 
    /*00006260*/ STR         R0, [SP] 
    GDC_AddRotationExTask_x6264:
    /*00006264*/ STR         R1, [SP, #8] 
    /*00006268*/ MOV         R0, #3 
    /*0000626c*/ STR         R3, [SP, #4] 
    /*00006270*/ MOV         R1, #37                     @ 0x25 
    /*00006274*/ LDR         R3, [PC, #48]               @ 0x00000000000062ac 
    /*00006278*/ BL          0x0000000000006278          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000627c*/ MOV         R0, SL 
    /*00006280*/ ADD         SP, SP, #124                @ 0x7c 
    /*00006284*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddRotationExTask_x6288:
    /*00006288*/ LDR         R1, [R6, #8] 
    /*0000628c*/ MOVW        R0, #2157                   @ 0x86d 
    /*00006290*/ LDR         R3, [R6, #4] 
    /*00006294*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x260c] 
    /*00006298*/ STR         R0, [SP] 
    /*0000629c*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x260c] 
    /*000062a0*/ B           GDC_AddRotationExTask_x6264
    GDC_AddRotationExTask_x62a4:
    /*000062a4*/ BL          0x0000000000005F68 
    /*000062a8*/ B           GDC_AddRotationExTask_x61cc
    /*000062ac*/ ANDEQ       R0, R0, R8, LSR #9 
FUNC_END GDC_AddRotationExTask


FUNC_BEGIN GDC_AddDISTask
    /*000062b0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000062b4*/ SUB         SP, SP, #220                @ 0xdc 
    /*000062b8*/ LDR         R7, [R2, #12] 
    /*000062bc*/ MOV         R8, R2 
    /*000062c0*/ STR         R0, [SP, #16] 
    /*000062c4*/ MOV         R4, R1 
    /*000062c8*/ CMP         R7, #63                     @ 0x3f 
    /*000062cc*/ STR         R3, [SP, #12] 
    /*000062d0*/ LDR         R6, [SP, #256]              @ 0x100 
    /*000062d4*/ BHI         GDC_AddDISTask_x6500
    GDC_AddDISTask_x62d8:
    /*000062d8*/ MOV         R3, #37                     @ 0x25 
    /*000062dc*/ STR         R3, [R4, #668]              @ 0x29c 
    /*000062e0*/ LDR         R3, [R8] 
    /*000062e4*/ LSL         R2, R7, #2 
    /*000062e8*/ MOVW        FP, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*000062ec*/ MOVT        FP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*000062f0*/ STR         R2, [SP, #20] 
    /*000062f4*/ ADD         R2, FP, R2 
    /*000062f8*/ STR         R3, [R4, #752]              @ 0x2f0 
    /*000062fc*/ LDR         R3, [R8, #4] 
    /*00006300*/ LDR         R7, [R4] 
    /*00006304*/ LDR         R5, [R2, #256]              @ 0x100 
    /*00006308*/ STR         R3, [R4, #756]              @ 0x2f4 
    /*0000630c*/ LDR         R3, [R8, #8] 
    /*00006310*/ LDR         SL, [R4, #4] 
    /*00006314*/ STR         R3, [R4, #760]              @ 0x2f8 
    /*00006318*/ LDR         R3, [SP, #260]              @ 0x104 
    /*0000631c*/ LDR         R3, [R3, #128]              @ 0x80 
    /*00006320*/ CMP         R3, #1 
    /*00006324*/ BLS         GDC_AddDISTask_x656c
    /*00006328*/ SUB         R3, R3, #2 
    /*0000632c*/ CMP         R3, #1 
    /*00006330*/ BLS         GDC_AddDISTask_x6494
    /*00006334*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2690] 
    /*00006338*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2694] 
    /*0000633c*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2690] 
    /*00006340*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2694] 
    /*00006344*/ MOV         R2, #1664                   @ 0x680 
    /*00006348*/ LDR         R1, [PC, #732]              @ 0x000000000000662c 
    /*0000634c*/ BL          0x000000000000634C          @ osal_panic [R_ARM_CALL: +0x0] 
    GDC_AddDISTask_x6350:
    /*00006350*/ ADD         R3, R5, #904                @ 0x388 
    /*00006354*/ ADD         R8, R5, #832                @ 0x340 
    /*00006358*/ MOV         R2, #72                     @ 0x48 
    /*0000635c*/ MOV         R1, #0 
    /*00006360*/ MOV         R9, R3 
    /*00006364*/ MOV         R0, R8 
    /*00006368*/ BL          0x0000000000006368          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000636c*/ MOV         R0, R9 
    /*00006370*/ MOV         R2, #32 
    /*00006374*/ MOV         R1, #0 
    /*00006378*/ BL          0x0000000000006378          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000637c*/ LDR         R0, [R4, #24] 
    /*00006380*/ STR         R7, [SP, #28] 
    /*00006384*/ CMP         R0, #0 
    /*00006388*/ STR         SL, [SP, #32] 
    /*0000638c*/ MOVEQ       R3, #8 
    /*00006390*/ STREQ       R3, [SP, #36]               @ 0x24 
    /*00006394*/ BEQ         GDC_AddDISTask_x63ac
    /*00006398*/ SUB         R3, R0, #1 
    /*0000639c*/ CMP         R3, #4 
    /*000063a0*/ BHI         GDC_AddDISTask_x6600
    /*000063a4*/ MOV         R3, #10 
    /*000063a8*/ STR         R3, [SP, #36]               @ 0x24 
    GDC_AddDISTask_x63ac:
    /*000063ac*/ ADD         SL, R5, #752                @ 0x2f0 
    /*000063b0*/ ADD         R7, SP, #216                @ 0xd8 
    /*000063b4*/ MOV         R2, #72                     @ 0x48 
    /*000063b8*/ ADD         R0, SP, #136                @ 0x88 
    /*000063bc*/ MOV         R1, SL 
    /*000063c0*/ MOV         R3, #1 
    /*000063c4*/ STR         R3, [R7, #-88]!             @ 0xffffffa8 
    /*000063c8*/ BL          0x00000000000063C8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000063cc*/ LDR         R3, [SP, #12] 
    /*000063d0*/ ADD         LR, R5, #744                @ 0x2e8 
    /*000063d4*/ LDR         IP, [R6, #756]              @ 0x2f4 
    /*000063d8*/ MOV         R1, R7 
    /*000063dc*/ ADD         R0, SP, #28 
    /*000063e0*/ LDR         R2, [R3, #16] 
    /*000063e4*/ LDR         R3, [R6, #752]              @ 0x2f0 
    /*000063e8*/ ADD         R6, R5, #728                @ 0x2d8 
    /*000063ec*/ STR         LR, [SP] 
    /*000063f0*/ STR         IP, [SP, #212]              @ 0xd4 
    /*000063f4*/ STR         R3, [SP, #208]              @ 0xd0 
    /*000063f8*/ MOV         R3, R8 
    /*000063fc*/ BL          0x00000000000063FC          @ GDC_PMF_And_Rotation_CFG [R_ARM_CALL: .text+0x1a5b0] 
    /*00006400*/ SUBS        R5, R0, #0 
    /*00006404*/ BNE         GDC_AddDISTask_x651c
    /*00006408*/ MOV         R1, SL 
    /*0000640c*/ MOV         R2, #72                     @ 0x48 
    /*00006410*/ ADD         R0, SP, #48                 @ 0x30 
    /*00006414*/ BL          0x0000000000006414          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006418*/ LDR         R3, [SP, #12] 
    /*0000641c*/ MOV         R2, R8 
    /*00006420*/ MOV         R1, R7 
    /*00006424*/ LDR         R0, [R3, #16] 
    /*00006428*/ BL          0x0000000000006428          @ GDC_DstSize_CFG [R_ARM_CALL: .text+0x1ae00] 
    /*0000642c*/ SUBS        R5, R0, #0 
    /*00006430*/ BNE         GDC_AddDISTask_x65d4
    /*00006434*/ MOV         R3, R9 
    /*00006438*/ MOV         R2, R8 
    /*0000643c*/ ADD         R1, SP, #40                 @ 0x28 
    /*00006440*/ ADD         R0, SP, #28 
    /*00006444*/ BL          0x0000000000006444          @ GDC_PMF_FIFO_CFG [R_ARM_CALL: .text+0x1ba8c] 
    /*00006448*/ SUBS        R5, R0, #0 
    /*0000644c*/ BNE         GDC_AddDISTask_x6548
    /*00006450*/ MOV         R3, R5 
    /*00006454*/ MOV         R2, R5 
    /*00006458*/ STR         R6, [SP] 
    /*0000645c*/ MOV         R1, R4 
    /*00006460*/ LDR         R0, [SP, #16] 
    /*00006464*/ BL          0x0000000000006464          @ GDC_AddLDCOrPMFTask [R_ARM_CALL: .text+0x3440] 
    /*00006468*/ SUBS        R5, R0, #0 
    /*0000646c*/ BNE         GDC_AddDISTask_x6608
    /*00006470*/ LDR         R3, [SP, #20] 
    /*00006474*/ MOV         R0, R5 
    /*00006478*/ ADD         R3, FP, R3 
    /*0000647c*/ LDR         R3, [R3, #256]              @ 0x100 
    /*00006480*/ LDR         R2, [R3] 
    /*00006484*/ CMP         R2, #0 
    /*00006488*/ STRNE       R5, [R3] 
    /*0000648c*/ ADD         SP, SP, #220                @ 0xdc 
    /*00006490*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddDISTask_x6494:
    /*00006494*/ ADD         LR, R6, #688                @ 0x2b0 
    /*00006498*/ MOV         R3, #1 
    /*0000649c*/ STR         R3, [R5, #728]              @ 0x2d8 
    /*000064a0*/ ADD         R1, R5, #736                @ 0x2e0 
    /*000064a4*/ LDRD        R2, [LR, #-8] 
    /*000064a8*/ ADD         IP, R6, #704                @ 0x2c0 
    /*000064ac*/ ADD         R0, R6, #720                @ 0x2d0 
    /*000064b0*/ STRD        R2, [R1, #16] 
    /*000064b4*/ LDRD        R2, [LR] 
    /*000064b8*/ ADD         LR, R6, #736                @ 0x2e0 
    /*000064bc*/ STRD        R2, [R1, #24] 
    /*000064c0*/ ADD         R3, R6, #752                @ 0x2f0 
    /*000064c4*/ LDRD        R8, [IP, #-8] 
    /*000064c8*/ STRD        R8, [R1, #32] 
    /*000064cc*/ LDRD        R8, [IP] 
    /*000064d0*/ STRD        R8, [R1, #40]               @ 0x28 
    /*000064d4*/ LDRD        R8, [R0, #-8] 
    /*000064d8*/ STRD        R8, [R1, #48]               @ 0x30 
    /*000064dc*/ LDRD        R8, [R0] 
    /*000064e0*/ STRD        R8, [R1, #56]               @ 0x38 
    /*000064e4*/ LDRD        R8, [LR, #-8] 
    /*000064e8*/ STRD        R8, [R1, #64]               @ 0x40 
    /*000064ec*/ LDRD        R8, [LR] 
    /*000064f0*/ STRD        R8, [R1, #72]               @ 0x48 
    /*000064f4*/ LDRD        R2, [R3, #-8] 
    /*000064f8*/ STRD        R2, [R1, #80]               @ 0x50 
    /*000064fc*/ B           GDC_AddDISTask_x6350
    GDC_AddDISTask_x6500:
    /*00006500*/ MOV         R0, R7 
    /*00006504*/ BL          0x0000000000005F18 
    /*00006508*/ SUBS        R5, R0, #0 
    /*0000650c*/ BEQ         GDC_AddDISTask_x62d8
    GDC_AddDISTask_x6510:
    /*00006510*/ MOV         R0, R5 
    /*00006514*/ ADD         SP, SP, #220                @ 0xdc 
    /*00006518*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddDISTask_x651c:
    /*0000651c*/ MOVW        R3, #1733                   @ 0x6c5 
    /*00006520*/ MOV         R1, #37                     @ 0x25 
    /*00006524*/ STR         R3, [SP] 
    /*00006528*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x26d4] 
    /*0000652c*/ LDR         R3, [PC, #248]              @ 0x000000000000662c 
    /*00006530*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x26d4] 
    /*00006534*/ MOV         R0, #3 
    /*00006538*/ BL          0x0000000000006538          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000653c*/ MOV         R0, R5 
    /*00006540*/ ADD         SP, SP, #220                @ 0xdc 
    /*00006544*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddDISTask_x6548:
    /*00006548*/ MOVW        R3, #1751                   @ 0x6d7 
    /*0000654c*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2748] 
    /*00006550*/ STR         R3, [SP] 
    /*00006554*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2748] 
    /*00006558*/ LDR         R3, [PC, #204]              @ 0x000000000000662c 
    /*0000655c*/ MOV         R1, #37                     @ 0x25 
    /*00006560*/ MOV         R0, #3 
    /*00006564*/ BL          0x0000000000006564          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006568*/ B           GDC_AddDISTask_x6510
    GDC_AddDISTask_x656c:
    /*0000656c*/ ADD         LR, R6, #688                @ 0x2b0 
    /*00006570*/ MOV         R3, #1 
    /*00006574*/ STR         R3, [R5, #728]              @ 0x2d8 
    /*00006578*/ ADD         R3, R5, #736                @ 0x2e0 
    /*0000657c*/ LDRD        R0, [LR, #-8] 
    /*00006580*/ ADD         IP, R6, #704                @ 0x2c0 
    /*00006584*/ ADD         R2, R6, #720                @ 0x2d0 
    /*00006588*/ STRD        R0, [R3, #16] 
    /*0000658c*/ LDRD        R0, [LR] 
    /*00006590*/ STRD        R0, [R3, #24] 
    /*00006594*/ MOV         R0, #32768                  @ 0x8000 
    /*00006598*/ LDRD        R8, [IP, #-8] 
    /*0000659c*/ MOV         R1, #0 
    /*000065a0*/ STRD        R8, [R3, #32] 
    /*000065a4*/ LDRD        R8, [IP] 
    /*000065a8*/ STRD        R8, [R3, #40]               @ 0x28 
    /*000065ac*/ LDRD        R8, [R2, #-8] 
    /*000065b0*/ STRD        R8, [R3, #48]               @ 0x30 
    /*000065b4*/ LDRD        R8, [R2] 
    /*000065b8*/ STRD        R0, [R3, #80]               @ 0x50 
    /*000065bc*/ MOV         R0, #0 
    /*000065c0*/ MOV         R1, #0 
    /*000065c4*/ STRD        R0, [R3, #64]               @ 0x40 
    /*000065c8*/ STRD        R8, [R3, #56]               @ 0x38 
    /*000065cc*/ STRD        R0, [R3, #72]               @ 0x48 
    /*000065d0*/ B           GDC_AddDISTask_x6350
    GDC_AddDISTask_x65d4:
    /*000065d4*/ MOVW        R3, #1743                   @ 0x6cf 
    /*000065d8*/ MOV         R1, #37                     @ 0x25 
    /*000065dc*/ STR         R3, [SP] 
    /*000065e0*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2710] 
    /*000065e4*/ LDR         R3, [PC, #64]               @ 0x000000000000662c 
    /*000065e8*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2710] 
    /*000065ec*/ MOV         R0, #3 
    /*000065f0*/ BL          0x00000000000065F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000065f4*/ MOV         R0, R5 
    /*000065f8*/ ADD         SP, SP, #220                @ 0xdc 
    /*000065fc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddDISTask_x6600:
    /*00006600*/ BL          0x0000000000005F68 
    /*00006604*/ B           GDC_AddDISTask_x63ac
    GDC_AddDISTask_x6608:
    /*00006608*/ MOV         R3, #1760                   @ 0x6e0 
    /*0000660c*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2780] 
    /*00006610*/ STR         R3, [SP] 
    /*00006614*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2780] 
    /*00006618*/ LDR         R3, [PC, #12]               @ 0x000000000000662c 
    /*0000661c*/ MOV         R1, #37                     @ 0x25 
    /*00006620*/ MOV         R0, #3 
    /*00006624*/ BL          0x0000000000006624          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006628*/ B           GDC_AddDISTask_x6510
    /*0000662c*/ ANDEQ       R0, R0, R0, ASR #9 
FUNC_END GDC_AddDISTask


FUNC_BEGIN GDC_AddDISLDCTask
    /*00006630*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00006634*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*00006638*/ LDR         R3, [R2, #12] 
    /*0000663c*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*00006640*/ MOV         R7, R2 
    /*00006644*/ MOV         R6, R1 
    /*00006648*/ SUB         SP, SP, #28 
    /*0000664c*/ MOV         FP, R0 
    /*00006650*/ LSL         R8, R3, #2 
    /*00006654*/ ADD         R2, R5, R8 
    /*00006658*/ LDR         R9, [SP, #64]               @ 0x40 
    /*0000665c*/ LDR         SL, [R2, #256]              @ 0x100 
    /*00006660*/ LDR         R1, [SL, #48]               @ 0x30 
    /*00006664*/ CMP         R1, #0 
    /*00006668*/ BEQ         GDC_AddDISLDCTask_x6810
    /*0000666c*/ CMP         R3, #63                     @ 0x3f 
    /*00006670*/ BHI         GDC_AddDISLDCTask_x6974
    GDC_AddDISLDCTask_x6674:
    /*00006674*/ ADD         R3, R5, R8 
    /*00006678*/ MOV         R2, #720                    @ 0x2d0 
    /*0000667c*/ LDR         R4, [R3, #256]              @ 0x100 
    /*00006680*/ ADD         SL, R4, #8 
    /*00006684*/ MOV         R1, SL 
    /*00006688*/ MOV         R0, SL 
    /*0000668c*/ BL          0x000000000000668C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006690*/ LDR         R3, [R7] 
    /*00006694*/ LDM         R6, {R0, R1} 
    /*00006698*/ ADD         R2, R9, #688                @ 0x2b0 
    /*0000669c*/ STR         R3, [R6, #752]              @ 0x2f0 
    /*000066a0*/ LDR         R3, [R7, #4] 
    /*000066a4*/ STR         R0, [R5, #612]              @ 0x264 
    /*000066a8*/ MOV         R0, #0 
    /*000066ac*/ STR         R1, [R5, #616]              @ 0x268 
    /*000066b0*/ MOV         R1, #1 
    /*000066b4*/ STR         R3, [R6, #756]              @ 0x2f4 
    /*000066b8*/ ADD         R3, R9, #704                @ 0x2c0 
    /*000066bc*/ LDR         IP, [R7, #8] 
    /*000066c0*/ ADD         R9, R9, #720                @ 0x2d0 
    /*000066c4*/ STR         IP, [R6, #760]              @ 0x2f8 
    /*000066c8*/ STR         R1, [R4, #8] 
    /*000066cc*/ STR         R0, [R4, #12] 
    /*000066d0*/ STR         R1, [R4, #20] 
    /*000066d4*/ STR         R1, [R4, #16] 
    /*000066d8*/ LDRD        R0, [R2, #-8] 
    /*000066dc*/ STRD        R0, [R4, #176]              @ 0xb0 
    /*000066e0*/ LDRD        R0, [R2] 
    /*000066e4*/ STRD        R0, [R4, #184]              @ 0xb8 
    /*000066e8*/ LDRD        R0, [R3, #-8] 
    /*000066ec*/ STRD        R0, [R4, #192]              @ 0xc0 
    /*000066f0*/ LDRD        R2, [R3] 
    /*000066f4*/ STRD        R2, [R4, #200]              @ 0xc8 
    /*000066f8*/ MOV         R3, #0 
    /*000066fc*/ LDRD        R0, [R9, #-8] 
    /*00006700*/ MOV         R2, #0 
    /*00006704*/ STRD        R0, [R4, #208]              @ 0xd0 
    /*00006708*/ LDRD        R0, [R9] 
    /*0000670c*/ STRD        R2, [R4, #224]              @ 0xe0 
    /*00006710*/ STRD        R2, [R4, #232]              @ 0xe8 
    /*00006714*/ STRD        R0, [R4, #216]              @ 0xd8 
    /*00006718*/ MOV         R0, #32768                  @ 0x8000 
    /*0000671c*/ MOV         R1, #0 
    /*00006720*/ STRD        R0, [R4, #240]              @ 0xf0 
    /*00006724*/ LDR         R0, [R6, #24] 
    /*00006728*/ CMP         R0, #0 
    /*0000672c*/ MOVEQ       R3, #8 
    /*00006730*/ STREQ       R3, [R5, #620]              @ 0x26c 
    /*00006734*/ BEQ         GDC_AddDISLDCTask_x674c
    /*00006738*/ SUB         R3, R0, #1 
    /*0000673c*/ CMP         R3, #4 
    /*00006740*/ BHI         GDC_AddDISLDCTask_x6a44
    /*00006744*/ MOV         R3, #10 
    /*00006748*/ STR         R3, [R5, #620]              @ 0x26c 
    GDC_AddDISLDCTask_x674c:
    /*0000674c*/ LDR         R9, [PC, #824]              @ 0x0000000000006a8c 
    /*00006750*/ ADD         R1, R4, #176                @ 0xb0 
    /*00006754*/ MOV         R2, #72                     @ 0x48 
    /*00006758*/ ADD         R3, R4, #256                @ 0x100 
    /*0000675c*/ SUB         R0, R9, #80                 @ 0x50 
    /*00006760*/ STR         R3, [SP, #16] 
    /*00006764*/ BL          0x0000000000006764          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006768*/ ADD         R1, R4, #256                @ 0x100 
    /*0000676c*/ MOV         R2, #72                     @ 0x48 
    /*00006770*/ MOV         R0, R9 
    /*00006774*/ BL          0x0000000000006774          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006778*/ ADD         R1, R4, #328                @ 0x148 
    /*0000677c*/ MOV         R2, #368                    @ 0x170 
    /*00006780*/ ADD         R0, R9, #72                 @ 0x48 
    /*00006784*/ BL          0x0000000000006784          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006788*/ MOV         IP, #0 
    /*0000678c*/ ADD         LR, R4, #696                @ 0x2b8 
    /*00006790*/ STR         R9, [SP, #4] 
    /*00006794*/ STR         IP, [SP] 
    /*00006798*/ ADD         R1, R4, #24 
    /*0000679c*/ STR         LR, [SP, #8] 
    /*000067a0*/ SUB         R3, R9, #88                 @ 0x58 
    /*000067a4*/ ADD         R2, R9, #560                @ 0x230 
    /*000067a8*/ SUB         R0, R9, #100                @ 0x64 
    /*000067ac*/ STR         IP, [R5, #1272]             @ 0x4f8 
    /*000067b0*/ BL          0x00000000000067B0          @ GDC_LDC_FIFO_CFG [R_ARM_CALL: .text+0x1b3a0] 
    /*000067b4*/ SUBS        R4, R0, #0 
    /*000067b8*/ BNE         GDC_AddDISLDCTask_x69b4
    /*000067bc*/ MOV         R1, R9 
    /*000067c0*/ MOV         R2, #72                     @ 0x48 
    /*000067c4*/ LDR         R0, [SP, #16] 
    /*000067c8*/ BL          0x00000000000067C8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000067cc*/ STR         R4, [SP] 
    /*000067d0*/ MOV         R3, SL 
    /*000067d4*/ MOV         R1, R6 
    /*000067d8*/ MOV         R0, FP 
    /*000067dc*/ MOV         R2, #1 
    /*000067e0*/ BL          0x00000000000067E0          @ GDC_AddLDCOrPMFTask [R_ARM_CALL: .text+0x3440] 
    /*000067e4*/ SUBS        R4, R0, #0 
    /*000067e8*/ BNE         GDC_AddDISLDCTask_x6a54
    /*000067ec*/ ADD         R5, R5, R8 
    /*000067f0*/ LDR         R3, [R5, #256]              @ 0x100 
    /*000067f4*/ LDR         R2, [R3] 
    /*000067f8*/ CMP         R2, #0 
    /*000067fc*/ BEQ         GDC_AddDISLDCTask_x696c
    GDC_AddDISLDCTask_x6800:
    /*00006800*/ MOV         R0, R4 
    /*00006804*/ STR         R4, [R3] 
    /*00006808*/ ADD         SP, SP, #28 
    /*0000680c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddDISLDCTask_x6810:
    /*00006810*/ CMP         R3, #63                     @ 0x3f 
    /*00006814*/ BHI         GDC_AddDISLDCTask_x69f0
    GDC_AddDISLDCTask_x6818:
    /*00006818*/ LDR         R1, [R7] 
    /*0000681c*/ ADD         IP, R9, #688                @ 0x2b0 
    /*00006820*/ LDR         R0, [R6] 
    /*00006824*/ ADD         R2, R9, #704                @ 0x2c0 
    /*00006828*/ LDR         R3, [PC, #608]              @ 0x0000000000006a90 
    /*0000682c*/ ADD         R9, R9, #720                @ 0x2d0 
    /*00006830*/ STR         R1, [R6, #752]              @ 0x2f0 
    /*00006834*/ LDR         R1, [R7, #4] 
    /*00006838*/ STR         R0, [R5, #600]              @ 0x258 
    /*0000683c*/ LDR         R0, [R6, #4] 
    /*00006840*/ STR         R1, [R6, #756]              @ 0x2f4 
    /*00006844*/ LDR         R1, [R7, #8] 
    /*00006848*/ STR         R0, [R5, #604]              @ 0x25c 
    /*0000684c*/ MOV         R0, #1 
    /*00006850*/ STR         R0, [R5, #512]              @ 0x200 
    /*00006854*/ MOV         R0, #32768                  @ 0x8000 
    /*00006858*/ STR         R1, [R6, #760]              @ 0x2f8 
    /*0000685c*/ MOV         R1, #0 
    /*00006860*/ STRD        R0, [R3, #72]               @ 0x48 
    /*00006864*/ MOV         R0, #0 
    /*00006868*/ MOV         R1, #0 
    /*0000686c*/ STRD        R0, [R3, #56]               @ 0x38 
    /*00006870*/ LDRD        R0, [IP, #-8] 
    /*00006874*/ STRD        R0, [R3, #8] 
    /*00006878*/ LDRD        R0, [IP] 
    /*0000687c*/ STRD        R0, [R3, #16] 
    /*00006880*/ MOV         R0, #0 
    /*00006884*/ MOV         R1, #0 
    /*00006888*/ STRD        R0, [R3, #64]               @ 0x40 
    /*0000688c*/ LDRD        R0, [R2, #-8] 
    /*00006890*/ STRD        R0, [SP, #16] 
    /*00006894*/ LDRD        R0, [R2] 
    /*00006898*/ STRD        R0, [R3, #32] 
    /*0000689c*/ LDRD        R0, [R9, #-8] 
    /*000068a0*/ STRD        R0, [R3, #40]               @ 0x28 
    /*000068a4*/ LDRD        R0, [SP, #16] 
    /*000068a8*/ STRD        R0, [R3, #24] 
    /*000068ac*/ LDRD        R0, [R9] 
    /*000068b0*/ STRD        R0, [R3, #48]               @ 0x30 
    /*000068b4*/ LDR         R0, [R6, #24] 
    /*000068b8*/ CMP         R0, #0 
    /*000068bc*/ MOVEQ       R3, #8 
    /*000068c0*/ STREQ       R3, [R5, #608]              @ 0x260 
    /*000068c4*/ BEQ         GDC_AddDISLDCTask_x68dc
    /*000068c8*/ SUB         R3, R0, #1 
    /*000068cc*/ CMP         R3, #4 
    /*000068d0*/ BHI         GDC_AddDISLDCTask_x6a4c
    /*000068d4*/ MOV         R3, #10 
    /*000068d8*/ STR         R3, [R5, #608]              @ 0x260 
    GDC_AddDISLDCTask_x68dc:
    /*000068dc*/ ADD         R8, R5, R8 
    /*000068e0*/ LDR         R2, [PC, #424]              @ 0x0000000000006a90 
    /*000068e4*/ ADD         R5, SL, #832                @ 0x340 
    /*000068e8*/ ADD         R9, SL, #744                @ 0x2e8 
    /*000068ec*/ LDR         R1, [R8, #256]              @ 0x100 
    /*000068f0*/ ADD         R0, R2, #88                 @ 0x58 
    /*000068f4*/ MOV         R3, R5 
    /*000068f8*/ STR         R9, [SP] 
    /*000068fc*/ ADD         R1, R1, #24 
    /*00006900*/ ADD         IP, SL, #728                @ 0x2d8 
    /*00006904*/ STR         IP, [SP, #16] 
    /*00006908*/ BL          0x0000000000006908          @ GDC_LDCRatio0_CFG [R_ARM_CALL: .text+0x1a0c0] 
    /*0000690c*/ SUBS        R4, R0, #0 
    /*00006910*/ BNE         GDC_AddDISLDCTask_x6990
    /*00006914*/ MOV         R2, R5 
    /*00006918*/ MOV         R1, R9 
    /*0000691c*/ ADD         R3, SL, #904                @ 0x388 
    /*00006920*/ LDR         R0, [PC, #364]              @ 0x0000000000006a94 
    /*00006924*/ BL          0x0000000000006924          @ GDC_PMF_FIFO_CFG [R_ARM_CALL: .text+0x1ba8c] 
    /*00006928*/ SUBS        R4, R0, #0 
    /*0000692c*/ BNE         GDC_AddDISLDCTask_x6a10
    /*00006930*/ LDR         R2, [SP, #16] 
    /*00006934*/ MOV         R3, #1 
    /*00006938*/ MOV         R1, R6 
    /*0000693c*/ STR         R3, [SL, #728]              @ 0x2d8 
    /*00006940*/ MOV         R0, FP 
    /*00006944*/ MOV         R3, R4 
    /*00006948*/ STR         R2, [SP] 
    /*0000694c*/ MOV         R2, R4 
    /*00006950*/ BL          0x0000000000006950          @ GDC_AddLDCOrPMFTask [R_ARM_CALL: .text+0x3440] 
    /*00006954*/ SUBS        R4, R0, #0 
    /*00006958*/ BNE         GDC_AddDISLDCTask_x6a70
    /*0000695c*/ LDR         R3, [R8, #256]              @ 0x100 
    /*00006960*/ LDR         R2, [R3] 
    /*00006964*/ CMP         R2, #0 
    /*00006968*/ BNE         GDC_AddDISLDCTask_x6800
    GDC_AddDISLDCTask_x696c:
    /*0000696c*/ MOV         R4, #0 
    /*00006970*/ B           GDC_AddDISLDCTask_x6984
    GDC_AddDISLDCTask_x6974:
    /*00006974*/ MOV         R0, R3 
    /*00006978*/ BL          0x0000000000005F18 
    /*0000697c*/ SUBS        R4, R0, #0 
    /*00006980*/ BEQ         GDC_AddDISLDCTask_x6674
    GDC_AddDISLDCTask_x6984:
    /*00006984*/ MOV         R0, R4 
    /*00006988*/ ADD         SP, SP, #28 
    /*0000698c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddDISLDCTask_x6990:
    /*00006990*/ MOVW        R3, #2071                   @ 0x817 
    /*00006994*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x27b8] 
    /*00006998*/ STR         R3, [SP] 
    /*0000699c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x27b8] 
    /*000069a0*/ LDR         R3, [PC, #240]              @ 0x0000000000006a98 
    /*000069a4*/ MOV         R1, #37                     @ 0x25 
    /*000069a8*/ MOV         R0, #3 
    /*000069ac*/ BL          0x00000000000069AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000069b0*/ B           GDC_AddDISLDCTask_x6984
    GDC_AddDISLDCTask_x69b4:
    /*000069b4*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x282c] 
    /*000069b8*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x282c] 
    /*000069bc*/ LDR         R1, [R7, #8] 
    /*000069c0*/ MOVW        R0, #2003                   @ 0x7d3 
    /*000069c4*/ LDR         R3, [R7, #4] 
    /*000069c8*/ STR         R0, [SP] 
    GDC_AddDISLDCTask_x69cc:
    /*000069cc*/ STR         R1, [SP, #8] 
    /*000069d0*/ MOV         R0, #3 
    /*000069d4*/ STR         R3, [SP, #4] 
    /*000069d8*/ MOV         R1, #37                     @ 0x25 
    /*000069dc*/ LDR         R3, [PC, #184]              @ 0x0000000000006a9c 
    /*000069e0*/ BL          0x00000000000069E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000069e4*/ MOV         R0, R4 
    /*000069e8*/ ADD         SP, SP, #28 
    /*000069ec*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddDISLDCTask_x69f0:
    /*000069f0*/ MOV         R0, R3 
    /*000069f4*/ STR         R2, [SP, #16] 
    /*000069f8*/ BL          0x0000000000005F18 
    /*000069fc*/ LDR         R2, [SP, #16] 
    /*00006a00*/ SUBS        R4, R0, #0 
    /*00006a04*/ BNE         GDC_AddDISLDCTask_x6984
    /*00006a08*/ LDR         SL, [R2, #256]              @ 0x100 
    /*00006a0c*/ B           GDC_AddDISLDCTask_x6818
    GDC_AddDISLDCTask_x6a10:
    /*00006a10*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x27f0] 
    /*00006a14*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x27f0] 
    /*00006a18*/ LDR         R1, [R7, #8] 
    /*00006a1c*/ MOVW        R0, #2079                   @ 0x81f 
    /*00006a20*/ LDR         R3, [R7, #4] 
    /*00006a24*/ STR         R0, [SP] 
    GDC_AddDISLDCTask_x6a28:
    /*00006a28*/ STR         R1, [SP, #8] 
    /*00006a2c*/ MOV         R0, #3 
    /*00006a30*/ STR         R3, [SP, #4] 
    /*00006a34*/ MOV         R1, #37                     @ 0x25 
    /*00006a38*/ LDR         R3, [PC, #88]               @ 0x0000000000006a98 
    /*00006a3c*/ BL          0x0000000000006A3C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006a40*/ B           GDC_AddDISLDCTask_x6984
    GDC_AddDISLDCTask_x6a44:
    /*00006a44*/ BL          0x0000000000005F68 
    /*00006a48*/ B           GDC_AddDISLDCTask_x674c
    GDC_AddDISLDCTask_x6a4c:
    /*00006a4c*/ BL          0x0000000000005F68 
    /*00006a50*/ B           GDC_AddDISLDCTask_x68dc
    GDC_AddDISLDCTask_x6a54:
    /*00006a54*/ LDR         R1, [R7, #8] 
    /*00006a58*/ MOVW        R0, #2014                   @ 0x7de 
    /*00006a5c*/ LDR         R3, [R7, #4] 
    /*00006a60*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2868] 
    /*00006a64*/ STR         R0, [SP] 
    /*00006a68*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2868] 
    /*00006a6c*/ B           GDC_AddDISLDCTask_x69cc
    GDC_AddDISLDCTask_x6a70:
    /*00006a70*/ LDR         R1, [R7, #8] 
    /*00006a74*/ MOVW        R0, #2090                   @ 0x82a 
    /*00006a78*/ LDR         R3, [R7, #4] 
    /*00006a7c*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x260c] 
    /*00006a80*/ STR         R0, [SP] 
    /*00006a84*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x260c] 
    /*00006a88*/ B           GDC_AddDISLDCTask_x6a28
    /*00006a8c*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
    /*00006a90*/ ANDEQ       R0, R0, R8, LSR #12 
    /*00006a94*/ ANDEQ       R0, R0, R0, LSL #13 
    /*00006a98*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
    /*00006a9c*/ ANDEQ       R0, R0, R8, ROR #9 
FUNC_END GDC_AddDISLDCTask


FUNC_BEGIN GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9
    /*00006aa0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00006aa4*/ SUB         SP, SP, #148                @ 0x94 
    /*00006aa8*/ LDR         R5, [R2, #12] 
    /*00006aac*/ MOV         SL, R2 
    /*00006ab0*/ STR         R0, [SP, #16] 
    /*00006ab4*/ MOV         R2, #0 
    /*00006ab8*/ CMP         R5, #63                     @ 0x3f 
    /*00006abc*/ MOV         R4, R1 
    /*00006ac0*/ MOV         FP, R3 
    /*00006ac4*/ STR         R2, [SP, #44]               @ 0x2c 
    /*00006ac8*/ STR         R2, [SP, #40]               @ 0x28 
    /*00006acc*/ STR         R2, [SP, #48]               @ 0x30 
    /*00006ad0*/ STR         R2, [SP, #52]               @ 0x34 
    /*00006ad4*/ BHI         GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6c90
    GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6ad8:
    /*00006ad8*/ MOV         R2, #37                     @ 0x25 
    /*00006adc*/ STR         R2, [R4, #668]              @ 0x29c 
    /*00006ae0*/ LDR         R2, [SL] 
    /*00006ae4*/ LSL         R5, R5, #2 
    /*00006ae8*/ MOVW        R7, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*00006aec*/ MOVT        R7, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*00006af0*/ ADD         R8, R7, R5 
    /*00006af4*/ STR         R2, [R4, #752]              @ 0x2f0 
    /*00006af8*/ LDR         R2, [SL, #4] 
    /*00006afc*/ LDR         R6, [R8, #256]              @ 0x100 
    /*00006b00*/ STR         R2, [R4, #756]              @ 0x2f4 
    /*00006b04*/ ADD         R9, R6, #256                @ 0x100 
    /*00006b08*/ LDR         R2, [SL, #8] 
    /*00006b0c*/ ADD         R3, R6, #8 
    /*00006b10*/ MOV         R1, R9 
    /*00006b14*/ STR         R3, [SP, #20] 
    /*00006b18*/ STR         R2, [R4, #760]              @ 0x2f8 
    /*00006b1c*/ LDR         R0, [FP] 
    /*00006b20*/ BL          0x0000000000006B20          @ GDC_DRV_CheckConfig [R_ARM_CALL: .text+0x18f2c] 
    /*00006b24*/ CMP         R0, #0 
    /*00006b28*/ BEQ         GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6c38
    /*00006b2c*/ LDR         R3, [FP, #12] 
    /*00006b30*/ LDR         SL, [R4] 
    /*00006b34*/ CMP         R3, #0 
    /*00006b38*/ LDR         R3, [R4, #4] 
    /*00006b3c*/ BNE         GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6cd8
    GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6b40:
    /*00006b40*/ LDR         R0, [R4, #24] 
    /*00006b44*/ STR         R3, [SP, #32] 
    /*00006b48*/ CMP         R0, #0 
    /*00006b4c*/ STR         SL, [SP, #28] 
    /*00006b50*/ MOVEQ       R3, #8 
    /*00006b54*/ STREQ       R3, [SP, #36]               @ 0x24 
    /*00006b58*/ BEQ         GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6b70
    /*00006b5c*/ SUB         R3, R0, #1 
    /*00006b60*/ CMP         R3, #4 
    /*00006b64*/ BHI         GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6d38
    /*00006b68*/ MOV         R3, #10 
    /*00006b6c*/ STR         R3, [SP, #36]               @ 0x24 
    GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6b70:
    /*00006b70*/ ADD         R8, R7, R5 
    /*00006b74*/ MOV         R2, #16 
    /*00006b78*/ LDR         R1, [SP, #184]              @ 0xb8 
    /*00006b7c*/ ADD         R0, SP, #40                 @ 0x28 
    /*00006b80*/ BL          0x0000000000006B80          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006b84*/ LDR         R1, [R8, #256]              @ 0x100 
    /*00006b88*/ LDR         SL, [PC, #432]              @ 0x0000000000006d40 
    /*00006b8c*/ MOV         R2, #720                    @ 0x2d0 
    /*00006b90*/ ADD         R1, R1, #8 
    /*00006b94*/ ADD         R0, R6, #8 
    /*00006b98*/ BL          0x0000000000006B98          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006b9c*/ LDR         R1, [R8, #256]              @ 0x100 
    /*00006ba0*/ MOV         R2, #72                     @ 0x48 
    /*00006ba4*/ MOV         R0, SL 
    /*00006ba8*/ ADD         R1, R1, #256                @ 0x100 
    /*00006bac*/ BL          0x0000000000006BAC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006bb0*/ LDR         R1, [R8, #256]              @ 0x100 
    /*00006bb4*/ MOV         R2, #368                    @ 0x170 
    /*00006bb8*/ ADD         R0, SL, #72                 @ 0x48 
    /*00006bbc*/ ADD         R1, R1, #328                @ 0x148 
    /*00006bc0*/ BL          0x0000000000006BC0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006bc4*/ LDR         R1, [R8, #256]              @ 0x100 
    /*00006bc8*/ MOV         R2, #88                     @ 0x58 
    /*00006bcc*/ ADD         R0, SL, #440                @ 0x1b8 
    /*00006bd0*/ ADD         R1, R1, #952                @ 0x3b8 
    /*00006bd4*/ BL          0x0000000000006BD4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006bd8*/ ADD         R1, R6, #696                @ 0x2b8 
    /*00006bdc*/ MOV         R3, #0 
    /*00006be0*/ STR         R1, [SP, #8] 
    /*00006be4*/ STR         R3, [SP] 
    /*00006be8*/ ADD         R2, SP, #40                 @ 0x28 
    /*00006bec*/ STR         SL, [SP, #4] 
    /*00006bf0*/ ADD         R3, SP, #56                 @ 0x38 
    /*00006bf4*/ ADD         R1, R6, #24 
    /*00006bf8*/ ADD         R0, SP, #28 
    /*00006bfc*/ BL          0x0000000000006BFC          @ GDC_LDC_FIFO_CFG [R_ARM_CALL: .text+0x1b3a0] 
    /*00006c00*/ SUBS        R8, R0, #0 
    /*00006c04*/ BNE         GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6cac
    /*00006c08*/ MOV         R1, SL 
    /*00006c0c*/ MOV         R2, #72                     @ 0x48 
    /*00006c10*/ MOV         R0, R9 
    /*00006c14*/ BL          0x0000000000006C14          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006c18*/ LDR         R1, [PC, #292]              @ 0x0000000000006d44 
    /*00006c1c*/ MOV         R2, #368                    @ 0x170 
    /*00006c20*/ ADD         R0, R6, #328                @ 0x148 
    /*00006c24*/ BL          0x0000000000006C24          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006c28*/ LDR         R1, [PC, #280]              @ 0x0000000000006d48 
    /*00006c2c*/ MOV         R2, #88                     @ 0x58 
    /*00006c30*/ ADD         R0, R6, #168                @ 0xa8 
    /*00006c34*/ BL          0x0000000000006C34          @ osal_memcpy [R_ARM_CALL: +0x0] 
    GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6c38:
    /*00006c38*/ MOV         IP, #1 
    /*00006c3c*/ ADD         R3, R6, #8 
    /*00006c40*/ STR         IP, [R6, #8] 
    /*00006c44*/ MOV         R2, IP 
    /*00006c48*/ STR         IP, [R6, #20] 
    /*00006c4c*/ MOV         R1, R4 
    /*00006c50*/ MOV         IP, #0 
    /*00006c54*/ LDR         R0, [SP, #16] 
    /*00006c58*/ STR         IP, [R6, #16] 
    /*00006c5c*/ STR         IP, [R6, #12] 
    /*00006c60*/ STR         IP, [SP] 
    /*00006c64*/ BL          0x0000000000006C64          @ GDC_AddLDCOrPMFTask [R_ARM_CALL: .text+0x3440] 
    /*00006c68*/ SUBS        R8, R0, #0 
    /*00006c6c*/ BNE         GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6d14
    /*00006c70*/ ADD         R5, R7, R5 
    /*00006c74*/ MOV         R0, R8 
    /*00006c78*/ LDR         R3, [R5, #256]              @ 0x100 
    /*00006c7c*/ LDR         R2, [R3] 
    /*00006c80*/ CMP         R2, #0 
    /*00006c84*/ STRNE       R8, [R3] 
    /*00006c88*/ ADD         SP, SP, #148                @ 0x94 
    /*00006c8c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6c90:
    /*00006c90*/ MOV         R0, R5 
    /*00006c94*/ BL          0x0000000000005F18 
    /*00006c98*/ SUBS        R8, R0, #0 
    /*00006c9c*/ BEQ         GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6ad8
    GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6ca0:
    /*00006ca0*/ MOV         R0, R8 
    /*00006ca4*/ ADD         SP, SP, #148                @ 0x94 
    /*00006ca8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6cac:
    /*00006cac*/ MOVW        R3, #1551                   @ 0x60f 
    /*00006cb0*/ MOV         R1, #37                     @ 0x25 
    /*00006cb4*/ STR         R3, [SP] 
    /*00006cb8*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28a8] 
    /*00006cbc*/ LDR         R3, [PC, #136]              @ 0x0000000000006d4c 
    /*00006cc0*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28a8] 
    /*00006cc4*/ MOV         R0, #3 
    /*00006cc8*/ BL          0x0000000000006CC8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006ccc*/ MOV         R0, R8 
    /*00006cd0*/ ADD         SP, SP, #148                @ 0x94 
    /*00006cd4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6cd8:
    /*00006cd8*/ LDR         R1, [R8, #256]              @ 0x100 
    /*00006cdc*/ MOV         R2, #72                     @ 0x48 
    /*00006ce0*/ STR         R3, [SP, #20] 
    /*00006ce4*/ ADD         R0, SP, #64                 @ 0x40 
    /*00006ce8*/ LDR         R3, [R4, #340]              @ 0x154 
    /*00006cec*/ ADD         R1, R1, #960                @ 0x3c0 
    /*00006cf0*/ LDR         R8, [R4, #336]              @ 0x150 
    /*00006cf4*/ MOV         IP, #1 
    /*00006cf8*/ STR         IP, [SP, #56]               @ 0x38 
    /*00006cfc*/ MOV         FP, R3 
    /*00006d00*/ BL          0x0000000000006D00          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006d04*/ STR         R8, [SP, #136]              @ 0x88 
    /*00006d08*/ STR         FP, [SP, #140]              @ 0x8c 
    /*00006d0c*/ LDR         R3, [SP, #20] 
    /*00006d10*/ B           GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6b40
    GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6d14:
    /*00006d14*/ MOVW        R3, #1572                   @ 0x624 
    /*00006d18*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28e0] 
    /*00006d1c*/ STR         R3, [SP] 
    /*00006d20*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28e0] 
    /*00006d24*/ LDR         R3, [PC, #32]               @ 0x0000000000006d4c 
    /*00006d28*/ MOV         R1, #37                     @ 0x25 
    /*00006d2c*/ MOV         R0, #3 
    /*00006d30*/ BL          0x0000000000006D30          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006d34*/ B           GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6ca0
    GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6d38:
    /*00006d38*/ BL          0x0000000000005F68 
    /*00006d3c*/ B           GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9_x6b70
    /*00006d40*/ ANDEQ       R0, R0, R0, LSR R9 
    /*00006d44*/ ANDEQ       R0, R0, R8, ROR R9 
    /*00006d48*/ ANDEQ       R0, R0, R8, ROR #21 
    /*00006d4c*/ ANDEQ       R0, R0, R8, LSL #10 
FUNC_END GDC_AddSpreadAndLDCTask2Gdc_ExpectZero.constprop.9


FUNC_BEGIN GDC_AddSpreadAndLDCTask2Gdc
    /*00006d50*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00006d54*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*00006d58*/ LDR         IP, [R2, #12] 
    /*00006d5c*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*00006d60*/ SUB         SP, SP, #36                 @ 0x24 
    /*00006d64*/ LSL         R7, IP, #2 
    /*00006d68*/ STR         R0, [SP, #12] 
    /*00006d6c*/ ADD         SL, R4, R7 
    /*00006d70*/ LDR         R5, [SL, #256]              @ 0x100 
    /*00006d74*/ LDR         LR, [R5, #48]               @ 0x30 
    /*00006d78*/ CMP         LR, #0 
    /*00006d7c*/ BEQ         GDC_AddSpreadAndLDCTask2Gdc_x6d9c
    /*00006d80*/ LDR         IP, [SP, #76]               @ 0x4c 
    /*00006d84*/ STR         IP, [SP] 
    /*00006d88*/ BL          0x0000000000006AA0 
    /*00006d8c*/ MOV         R8, R0 
    GDC_AddSpreadAndLDCTask2Gdc_x6d90:
    /*00006d90*/ MOV         R0, R8 
    /*00006d94*/ ADD         SP, SP, #36                 @ 0x24 
    /*00006d98*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddSpreadAndLDCTask2Gdc_x6d9c:
    /*00006d9c*/ CMP         IP, #63                     @ 0x3f 
    /*00006da0*/ MOV         R6, R2 
    /*00006da4*/ MOV         R9, R1 
    /*00006da8*/ MOV         FP, R3 
    /*00006dac*/ BHI         GDC_AddSpreadAndLDCTask2Gdc_x6ea8
    GDC_AddSpreadAndLDCTask2Gdc_x6db0:
    /*00006db0*/ MOV         R3, #37                     @ 0x25 
    /*00006db4*/ STR         R3, [R9, #668]              @ 0x29c 
    /*00006db8*/ LDR         R3, [R6] 
    /*00006dbc*/ ADD         SL, R5, #832                @ 0x340 
    /*00006dc0*/ MOV         R1, SL 
    /*00006dc4*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*00006dc8*/ LDR         R3, [R6, #4] 
    /*00006dcc*/ STR         R3, [R9, #756]              @ 0x2f4 
    /*00006dd0*/ LDR         R3, [R6, #8] 
    /*00006dd4*/ STR         R3, [R9, #760]              @ 0x2f8 
    /*00006dd8*/ LDR         R0, [FP] 
    /*00006ddc*/ BL          0x0000000000006DDC          @ GDC_DRV_CheckConfig [R_ARM_CALL: .text+0x18f2c] 
    /*00006de0*/ CMP         R0, #0 
    /*00006de4*/ BEQ         GDC_AddSpreadAndLDCTask2Gdc_x6e68
    /*00006de8*/ LDR         R0, [R9, #24] 
    /*00006dec*/ LDR         R3, [R9] 
    /*00006df0*/ LDR         R2, [R9, #4] 
    /*00006df4*/ CMP         R0, #0 
    /*00006df8*/ STR         R3, [SP, #20] 
    /*00006dfc*/ MOVEQ       R3, #8 
    /*00006e00*/ STR         R2, [SP, #24] 
    /*00006e04*/ STREQ       R3, [SP, #28] 
    /*00006e08*/ BEQ         GDC_AddSpreadAndLDCTask2Gdc_x6e20
    /*00006e0c*/ SUB         R3, R0, #1 
    /*00006e10*/ CMP         R3, #4 
    /*00006e14*/ BHI         GDC_AddSpreadAndLDCTask2Gdc_x6ec0
    /*00006e18*/ MOV         R3, #10 
    /*00006e1c*/ STR         R3, [SP, #28] 
    GDC_AddSpreadAndLDCTask2Gdc_x6e20:
    /*00006e20*/ ADD         R2, R4, R7 
    /*00006e24*/ ADD         R6, R5, #744                @ 0x2e8 
    /*00006e28*/ MOV         R3, SL 
    /*00006e2c*/ ADD         R0, SP, #20 
    /*00006e30*/ LDR         R1, [R2, #256]              @ 0x100 
    /*00006e34*/ STR         R6, [SP] 
    /*00006e38*/ ADD         R2, R1, #952                @ 0x3b8 
    /*00006e3c*/ ADD         R1, R1, #24 
    /*00006e40*/ BL          0x0000000000006E40          @ GDC_LDCRatio0_CFG [R_ARM_CALL: .text+0x1a0c0] 
    /*00006e44*/ SUBS        R8, R0, #0 
    /*00006e48*/ BNE         GDC_AddSpreadAndLDCTask2Gdc_x6eec
    /*00006e4c*/ MOV         R2, SL 
    /*00006e50*/ MOV         R1, R6 
    /*00006e54*/ ADD         R0, SP, #20 
    /*00006e58*/ ADD         R3, R5, #904                @ 0x388 
    /*00006e5c*/ BL          0x0000000000006E5C          @ GDC_PMF_FIFO_CFG [R_ARM_CALL: .text+0x1ba8c] 
    /*00006e60*/ SUBS        R8, R0, #0 
    /*00006e64*/ BNE         GDC_AddSpreadAndLDCTask2Gdc_x6ec8
    GDC_AddSpreadAndLDCTask2Gdc_x6e68:
    /*00006e68*/ MOV         R3, #0 
    /*00006e6c*/ MOV         R2, #1 
    /*00006e70*/ MOV         R1, R9 
    /*00006e74*/ STR         R2, [R5, #728]!             @ 0x2d8 
    /*00006e78*/ LDR         R0, [SP, #12] 
    /*00006e7c*/ MOV         R2, R3 
    /*00006e80*/ STR         R5, [SP] 
    /*00006e84*/ BL          0x0000000000006E84          @ GDC_AddLDCOrPMFTask [R_ARM_CALL: .text+0x3440] 
    /*00006e88*/ SUBS        R8, R0, #0 
    /*00006e8c*/ BNE         GDC_AddSpreadAndLDCTask2Gdc_x6f10
    /*00006e90*/ ADD         R4, R4, R7 
    /*00006e94*/ LDR         R3, [R4, #256]              @ 0x100 
    /*00006e98*/ LDR         R2, [R3] 
    /*00006e9c*/ CMP         R2, #0 
    /*00006ea0*/ STRNE       R8, [R3] 
    /*00006ea4*/ B           GDC_AddSpreadAndLDCTask2Gdc_x6d90
    GDC_AddSpreadAndLDCTask2Gdc_x6ea8:
    /*00006ea8*/ MOV         R0, IP 
    /*00006eac*/ BL          0x0000000000005F18 
    /*00006eb0*/ SUBS        R8, R0, #0 
    /*00006eb4*/ BNE         GDC_AddSpreadAndLDCTask2Gdc_x6d90
    /*00006eb8*/ LDR         R5, [SL, #256]              @ 0x100 
    /*00006ebc*/ B           GDC_AddSpreadAndLDCTask2Gdc_x6db0
    GDC_AddSpreadAndLDCTask2Gdc_x6ec0:
    /*00006ec0*/ BL          0x0000000000005F68 
    /*00006ec4*/ B           GDC_AddSpreadAndLDCTask2Gdc_x6e20
    GDC_AddSpreadAndLDCTask2Gdc_x6ec8:
    /*00006ec8*/ MOVW        R3, #1470                   @ 0x5be 
    /*00006ecc*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2950] 
    /*00006ed0*/ STR         R3, [SP] 
    /*00006ed4*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2950] 
    /*00006ed8*/ LDR         R3, [PC, #84]               @ 0x0000000000006f34 
    /*00006edc*/ MOV         R1, #37                     @ 0x25 
    /*00006ee0*/ MOV         R0, #3 
    /*00006ee4*/ BL          0x0000000000006EE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006ee8*/ B           GDC_AddSpreadAndLDCTask2Gdc_x6d90
    GDC_AddSpreadAndLDCTask2Gdc_x6eec:
    /*00006eec*/ MOVW        R3, #1462                   @ 0x5b6 
    /*00006ef0*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2918] 
    /*00006ef4*/ STR         R3, [SP] 
    /*00006ef8*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2918] 
    /*00006efc*/ LDR         R3, [PC, #48]               @ 0x0000000000006f34 
    /*00006f00*/ MOV         R1, #37                     @ 0x25 
    /*00006f04*/ MOV         R0, #3 
    /*00006f08*/ BL          0x0000000000006F08          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006f0c*/ B           GDC_AddSpreadAndLDCTask2Gdc_x6d90
    GDC_AddSpreadAndLDCTask2Gdc_x6f10:
    /*00006f10*/ MOVW        R3, #1481                   @ 0x5c9 
    /*00006f14*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2988] 
    /*00006f18*/ STR         R3, [SP] 
    /*00006f1c*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2988] 
    /*00006f20*/ LDR         R3, [PC, #12]               @ 0x0000000000006f34 
    /*00006f24*/ MOV         R1, #37                     @ 0x25 
    /*00006f28*/ MOV         R0, #3 
    /*00006f2c*/ BL          0x0000000000006F2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006f30*/ B           GDC_AddSpreadAndLDCTask2Gdc_x6d90
    /*00006f34*/ ANDEQ       R0, R0, R0, LSR R5 
FUNC_END GDC_AddSpreadAndLDCTask2Gdc


FUNC_BEGIN GDC_AddSpreadTask.constprop.11
    /*00006f38*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00006f3c*/ MOV         R6, R2 
    /*00006f40*/ LDR         R5, [R2, #12] 
    /*00006f44*/ SUB         SP, SP, #28 
    /*00006f48*/ MOV         R9, R0 
    /*00006f4c*/ MOV         R4, R1 
    /*00006f50*/ CMP         R5, #63                     @ 0x3f 
    /*00006f54*/ MOV         R2, R3 
    /*00006f58*/ BHI         GDC_AddSpreadTask.constprop.11_x7084
    GDC_AddSpreadTask.constprop.11_x6f5c:
    /*00006f5c*/ MOV         R3, #37                     @ 0x25 
    /*00006f60*/ STR         R3, [R4, #668]              @ 0x29c 
    /*00006f64*/ LDR         R3, [R6] 
    /*00006f68*/ LSL         R5, R5, #2 
    /*00006f6c*/ MOVW        R7, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*00006f70*/ MOVT        R7, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*00006f74*/ ADD         FP, R7, R5 
    /*00006f78*/ MOV         R0, #1 
    /*00006f7c*/ STR         R3, [R4, #752]              @ 0x2f0 
    /*00006f80*/ LDR         R1, [R6, #4] 
    /*00006f84*/ LDR         SL, [FP, #256]              @ 0x100 
    /*00006f88*/ STR         R1, [R4, #756]              @ 0x2f4 
    /*00006f8c*/ ADD         R8, SL, #1040               @ 0x410 
    /*00006f90*/ LDR         IP, [R6, #8] 
    /*00006f94*/ ADD         R3, SL, #936                @ 0x3a8 
    /*00006f98*/ MOV         R1, R8 
    /*00006f9c*/ STR         R3, [SP, #16] 
    /*00006fa0*/ STR         IP, [R4, #760]              @ 0x2f8 
    /*00006fa4*/ STR         R0, [SL, #936]              @ 0x3a8 
    /*00006fa8*/ LDR         R0, [R2] 
    /*00006fac*/ BL          0x0000000000006FAC          @ GDC_DRV_CheckConfig [R_ARM_CALL: .text+0x18f2c] 
    /*00006fb0*/ CMP         R0, #0 
    /*00006fb4*/ BEQ         GDC_AddSpreadTask.constprop.11_x7040
    /*00006fb8*/ LDR         R1, [FP, #256]              @ 0x100 
    /*00006fbc*/ MOV         R2, #72                     @ 0x48 
    /*00006fc0*/ MOV         R0, R8 
    /*00006fc4*/ ADD         R3, SL, #952                @ 0x3b8 
    /*00006fc8*/ ADD         R1, R1, #1040               @ 0x410 
    /*00006fcc*/ STR         R3, [SP, #20] 
    /*00006fd0*/ BL          0x0000000000006FD0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006fd4*/ LDR         R1, [FP, #256]              @ 0x100 
    /*00006fd8*/ MOV         R2, #88                     @ 0x58 
    /*00006fdc*/ ADD         R0, SL, #952                @ 0x3b8 
    /*00006fe0*/ ADD         R1, R1, #952                @ 0x3b8 
    /*00006fe4*/ ADD         FP, SL, #940                @ 0x3ac 
    /*00006fe8*/ BL          0x0000000000006FE8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006fec*/ LDR         R0, [R4, #24] 
    /*00006ff0*/ LDM         R4, {R1, R2} 
    /*00006ff4*/ CMP         R0, #0 
    /*00006ff8*/ STR         R2, [SL, #944]              @ 0x3b0 
    /*00006ffc*/ MOVEQ       R2, #8 
    /*00007000*/ STR         R1, [SL, #940]              @ 0x3ac 
    /*00007004*/ STREQ       R2, [SL, #948]              @ 0x3b4 
    /*00007008*/ BEQ         GDC_AddSpreadTask.constprop.11_x7020
    /*0000700c*/ SUB         R2, R0, #1 
    /*00007010*/ CMP         R2, #4 
    /*00007014*/ BHI         GDC_AddSpreadTask.constprop.11_x7100
    /*00007018*/ MOV         R2, #10 
    /*0000701c*/ STR         R2, [SL, #948]              @ 0x3b4 
    GDC_AddSpreadTask.constprop.11_x7020:
    /*00007020*/ LDR         R3, [SP, #16] 
    /*00007024*/ MOV         R2, R8 
    /*00007028*/ LDR         R1, [SP, #20] 
    /*0000702c*/ MOV         R0, FP 
    /*00007030*/ ADD         R3, R3, #176                @ 0xb0 
    /*00007034*/ BL          0x0000000000007034          @ GDC_PMF_FIFO_CFG [R_ARM_CALL: .text+0x1ba8c] 
    /*00007038*/ SUBS        R8, R0, #0 
    /*0000703c*/ BNE         GDC_AddSpreadTask.constprop.11_x70dc
    GDC_AddSpreadTask.constprop.11_x7040:
    /*00007040*/ LDR         R2, [SP, #16] 
    /*00007044*/ MOV         R3, #0 
    /*00007048*/ MOV         R1, R4 
    /*0000704c*/ MOV         R0, R9 
    /*00007050*/ STR         R2, [SP] 
    /*00007054*/ MOV         R2, R3 
    /*00007058*/ BL          0x0000000000007058          @ GDC_AddLDCOrPMFTask [R_ARM_CALL: .text+0x3440] 
    /*0000705c*/ SUBS        R8, R0, #0 
    /*00007060*/ BNE         GDC_AddSpreadTask.constprop.11_x70a8
    /*00007064*/ ADD         R5, R7, R5 
    /*00007068*/ LDR         R3, [R5, #256]              @ 0x100 
    /*0000706c*/ LDR         R2, [R3] 
    /*00007070*/ CMP         R2, #0 
    /*00007074*/ STRNE       R8, [R3] 
    GDC_AddSpreadTask.constprop.11_x7078:
    /*00007078*/ MOV         R0, R8 
    /*0000707c*/ ADD         SP, SP, #28 
    /*00007080*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddSpreadTask.constprop.11_x7084:
    /*00007084*/ MOV         R0, R5 
    /*00007088*/ STR         R3, [SP, #16] 
    /*0000708c*/ BL          0x0000000000005F18 
    /*00007090*/ LDR         R2, [SP, #16] 
    /*00007094*/ SUBS        R8, R0, #0 
    /*00007098*/ BEQ         GDC_AddSpreadTask.constprop.11_x6f5c
    /*0000709c*/ MOV         R0, R8 
    /*000070a0*/ ADD         SP, SP, #28 
    /*000070a4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddSpreadTask.constprop.11_x70a8:
    /*000070a8*/ LDR         R1, [R6, #8] 
    /*000070ac*/ MOVW        R0, #1415                   @ 0x587 
    /*000070b0*/ LDR         R3, [R6, #4] 
    /*000070b4*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x29c0] 
    /*000070b8*/ STR         R0, [SP] 
    /*000070bc*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x29c0] 
    /*000070c0*/ STR         R1, [SP, #8] 
    /*000070c4*/ MOV         R0, #3 
    /*000070c8*/ STR         R3, [SP, #4] 
    /*000070cc*/ MOV         R1, #37                     @ 0x25 
    /*000070d0*/ LDR         R3, [PC, #48]               @ 0x0000000000007108 
    /*000070d4*/ BL          0x00000000000070D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000070d8*/ B           GDC_AddSpreadTask.constprop.11_x7078
    GDC_AddSpreadTask.constprop.11_x70dc:
    /*000070dc*/ MOVW        R3, #1405                   @ 0x57d 
    /*000070e0*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2950] 
    /*000070e4*/ STR         R3, [SP] 
    /*000070e8*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2950] 
    /*000070ec*/ LDR         R3, [PC, #20]               @ 0x0000000000007108 
    /*000070f0*/ MOV         R1, #37                     @ 0x25 
    /*000070f4*/ MOV         R0, #3 
    /*000070f8*/ BL          0x00000000000070F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000070fc*/ B           GDC_AddSpreadTask.constprop.11_x7078
    GDC_AddSpreadTask.constprop.11_x7100:
    /*00007100*/ BL          0x0000000000005F68 
    /*00007104*/ B           GDC_AddSpreadTask.constprop.11_x7020
    /*00007108*/ ANDEQ       R0, R0, R4, ASR R5 
FUNC_END GDC_AddSpreadTask.constprop.11


FUNC_BEGIN GDC_AddLdcTask2Gdc_ExpectZero.constprop.12
    /*0000710c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00007110*/ SUB         SP, SP, #156                @ 0x9c 
    /*00007114*/ LDR         R5, [R2, #12] 
    /*00007118*/ MOV         R8, R3 
    /*0000711c*/ MOV         FP, R2 
    /*00007120*/ MOV         R3, #0 
    /*00007124*/ CMP         R5, #63                     @ 0x3f 
    /*00007128*/ MOV         R9, R0 
    /*0000712c*/ MOV         R4, R1 
    /*00007130*/ STR         R3, [SP, #52]               @ 0x34 
    /*00007134*/ STR         R3, [SP, #48]               @ 0x30 
    /*00007138*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000713c*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00007140*/ BHI         GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x7234
    GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x7144:
    /*00007144*/ MOV         R3, #37                     @ 0x25 
    /*00007148*/ STR         R3, [R4, #668]              @ 0x29c 
    /*0000714c*/ LDR         R3, [FP] 
    /*00007150*/ LSL         R5, R5, #2 
    /*00007154*/ MOVW        R7, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*00007158*/ MOVT        R7, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000715c*/ ADD         R2, R7, R5 
    /*00007160*/ STR         R3, [R4, #752]              @ 0x2f0 
    /*00007164*/ LDR         R3, [FP, #4] 
    /*00007168*/ LDR         R6, [R2, #256]              @ 0x100 
    /*0000716c*/ STR         R3, [R4, #756]              @ 0x2f4 
    /*00007170*/ ADD         R3, R6, #8 
    /*00007174*/ STR         R3, [SP, #20] 
    /*00007178*/ LDR         R3, [FP, #8] 
    /*0000717c*/ STR         R3, [R4, #760]              @ 0x2f8 
    /*00007180*/ LDR         R3, [R8, #16] 
    /*00007184*/ CMP         R3, #0 
    /*00007188*/ MOVNE       R3, #1 
    /*0000718c*/ STRNE       R3, [SP, #64]               @ 0x40 
    /*00007190*/ BEQ         GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x722c
    GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x7194:
    /*00007194*/ ADD         R3, R6, #256                @ 0x100 
    /*00007198*/ LDR         R2, [R4, #336]              @ 0x150 
    /*0000719c*/ STR         R3, [SP, #20] 
    /*000071a0*/ MOV         R1, R3 
    /*000071a4*/ LDR         R3, [R4, #340]              @ 0x154 
    /*000071a8*/ LDR         R0, [R8] 
    /*000071ac*/ STR         R2, [SP, #28] 
    /*000071b0*/ STR         R3, [SP, #32] 
    /*000071b4*/ LDR         FP, [R4] 
    /*000071b8*/ LDR         SL, [R4, #4] 
    /*000071bc*/ BL          0x00000000000071BC          @ GDC_DRV_CheckConfig [R_ARM_CALL: .text+0x18f2c] 
    /*000071c0*/ CMP         R0, #0 
    /*000071c4*/ BNE         GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x7250
    GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x71c8:
    /*000071c8*/ LDR         R3, [R8, #16] 
    /*000071cc*/ MOV         IP, #0 
    /*000071d0*/ STR         IP, [R6, #16] 
    /*000071d4*/ MOV         R2, #1 
    /*000071d8*/ CMP         R3, #0 
    /*000071dc*/ MOV         R1, R4 
    /*000071e0*/ MOV         R0, R9 
    /*000071e4*/ MOVNE       R3, #1 
    /*000071e8*/ STR         R3, [R6, #20] 
    /*000071ec*/ LDR         LR, [R8, #16] 
    /*000071f0*/ ADD         R3, R6, #8 
    /*000071f4*/ STR         R2, [R6, #8] 
    /*000071f8*/ STR         LR, [R6, #12] 
    /*000071fc*/ STR         IP, [SP] 
    /*00007200*/ BL          0x0000000000007200          @ GDC_AddLDCOrPMFTask [R_ARM_CALL: .text+0x3440] 
    /*00007204*/ SUBS        SL, R0, #0 
    /*00007208*/ BNE         GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x7354
    /*0000720c*/ ADD         R5, R7, R5 
    /*00007210*/ LDR         R3, [R5, #256]              @ 0x100 
    /*00007214*/ LDR         R2, [R3] 
    /*00007218*/ CMP         R2, #0 
    /*0000721c*/ STRNE       SL, [R3] 
    GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x7220:
    /*00007220*/ MOV         R0, SL 
    /*00007224*/ ADD         SP, SP, #156                @ 0x9c 
    /*00007228*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x722c:
    /*0000722c*/ STR         R3, [SP, #64]               @ 0x40 
    /*00007230*/ B           GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x7194
    GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x7234:
    /*00007234*/ MOV         R0, R5 
    /*00007238*/ BL          0x0000000000005F18 
    /*0000723c*/ SUBS        SL, R0, #0 
    /*00007240*/ BEQ         GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x7144
    /*00007244*/ MOV         R0, SL 
    /*00007248*/ ADD         SP, SP, #156                @ 0x9c 
    /*0000724c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x7250:
    /*00007250*/ MOV         R2, #72                     @ 0x48 
    /*00007254*/ ADD         R1, R6, #752                @ 0x2f0 
    /*00007258*/ ADD         R0, SP, R2 
    /*0000725c*/ BL          0x000000000000725C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00007260*/ MOV         R2, #8 
    /*00007264*/ ADD         R1, SP, #28 
    /*00007268*/ ADD         R0, SP, #144                @ 0x90 
    /*0000726c*/ BL          0x000000000000726C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00007270*/ LDR         R0, [R4, #24] 
    /*00007274*/ STR         FP, [SP, #36]               @ 0x24 
    /*00007278*/ CMP         R0, #0 
    /*0000727c*/ STR         SL, [SP, #40]               @ 0x28 
    /*00007280*/ MOVEQ       R3, #8 
    /*00007284*/ STREQ       R3, [SP, #44]               @ 0x2c 
    /*00007288*/ BEQ         GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x72a0
    /*0000728c*/ SUB         R3, R0, #1 
    /*00007290*/ CMP         R3, #4 
    /*00007294*/ BHI         GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x73a4
    /*00007298*/ MOV         R3, #10 
    /*0000729c*/ STR         R3, [SP, #44]               @ 0x2c 
    GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x72a0:
    /*000072a0*/ ADD         SL, R7, R5 
    /*000072a4*/ LDR         FP, [PC, #256]              @ 0x00000000000073ac 
    /*000072a8*/ MOV         R2, #72                     @ 0x48 
    /*000072ac*/ LDR         R1, [SL, #256]              @ 0x100 
    /*000072b0*/ MOV         R0, FP 
    /*000072b4*/ ADD         R1, R1, #256                @ 0x100 
    /*000072b8*/ BL          0x00000000000072B8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000072bc*/ LDR         R1, [SL, #256]              @ 0x100 
    /*000072c0*/ MOV         R2, #368                    @ 0x170 
    /*000072c4*/ ADD         R0, FP, #72                 @ 0x48 
    /*000072c8*/ ADD         R1, R1, #328                @ 0x148 
    /*000072cc*/ BL          0x00000000000072CC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000072d0*/ LDR         R1, [SL, #256]              @ 0x100 
    /*000072d4*/ MOV         R2, #88                     @ 0x58 
    /*000072d8*/ ADD         R0, FP, #440                @ 0x1b8 
    /*000072dc*/ ADD         R1, R1, #1152               @ 0x480 
    /*000072e0*/ ADD         R1, R1, #8 
    /*000072e4*/ BL          0x00000000000072E4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000072e8*/ LDR         R1, [R8, #16] 
    /*000072ec*/ ADD         R0, R6, #696                @ 0x2b8 
    /*000072f0*/ STR         FP, [SP, #4] 
    /*000072f4*/ STR         R0, [SP, #8] 
    /*000072f8*/ ADD         R2, SP, #48                 @ 0x30 
    /*000072fc*/ STR         R1, [SP] 
    /*00007300*/ ADD         R3, SP, #64                 @ 0x40 
    /*00007304*/ ADD         R1, R6, #24 
    /*00007308*/ ADD         R0, SP, #36                 @ 0x24 
    /*0000730c*/ MOV         IP, #0 
    /*00007310*/ STR         IP, [SP, #48]               @ 0x30 
    /*00007314*/ BL          0x0000000000007314          @ GDC_LDC_FIFO_CFG [R_ARM_CALL: .text+0x1b3a0] 
    /*00007318*/ SUBS        SL, R0, #0 
    /*0000731c*/ BNE         GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x7380
    /*00007320*/ MOV         R1, FP 
    /*00007324*/ LDR         R0, [SP, #20] 
    /*00007328*/ MOV         R2, #72                     @ 0x48 
    /*0000732c*/ BL          0x000000000000732C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00007330*/ LDR         R1, [PC, #120]              @ 0x00000000000073b0 
    /*00007334*/ MOV         R2, #368                    @ 0x170 
    /*00007338*/ ADD         R0, R6, #328                @ 0x148 
    /*0000733c*/ BL          0x000000000000733C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00007340*/ LDR         R1, [PC, #108]              @ 0x00000000000073b4 
    /*00007344*/ MOV         R2, #88                     @ 0x58 
    /*00007348*/ ADD         R0, R6, #168                @ 0xa8 
    /*0000734c*/ BL          0x000000000000734C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00007350*/ B           GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x71c8
    GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x7354:
    /*00007354*/ MOVW        R3, #1245                   @ 0x4dd 
    /*00007358*/ MOV         R1, #37                     @ 0x25 
    /*0000735c*/ STR         R3, [SP] 
    /*00007360*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a08] 
    /*00007364*/ LDR         R3, [PC, #76]               @ 0x00000000000073b8 
    /*00007368*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a08] 
    /*0000736c*/ MOV         R0, #3 
    /*00007370*/ BL          0x0000000000007370          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007374*/ MOV         R0, SL 
    /*00007378*/ ADD         SP, SP, #156                @ 0x9c 
    /*0000737c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x7380:
    /*00007380*/ MOVW        R3, #1211                   @ 0x4bb 
    /*00007384*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28a8] 
    /*00007388*/ STR         R3, [SP] 
    /*0000738c*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28a8] 
    /*00007390*/ LDR         R3, [PC, #32]               @ 0x00000000000073b8 
    /*00007394*/ MOV         R1, #37                     @ 0x25 
    /*00007398*/ MOV         R0, #3 
    /*0000739c*/ BL          0x000000000000739C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000073a0*/ B           GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x7220
    GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x73a4:
    /*000073a4*/ BL          0x0000000000005F68 
    /*000073a8*/ B           GDC_AddLdcTask2Gdc_ExpectZero.constprop.12_x72a0
    /*000073ac*/ ANDEQ       R0, R0, R0, ROR #22 
    /*000073b0*/ ANDEQ       R0, R0, R8, LSR #23 
    /*000073b4*/ ANDEQ       R0, R0, R8, LSL SP 
    /*000073b8*/ ANDEQ       R0, R0, R8, ROR #10 
FUNC_END GDC_AddLdcTask2Gdc_ExpectZero.constprop.12


FUNC_BEGIN GDC_AddLdcTask2Gdc_Zero.constprop.13
    /*000073bc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000073c0*/ SUB         SP, SP, #308                @ 0x134 
    /*000073c4*/ MOV         R5, R2 
    /*000073c8*/ MOV         R4, R1 
    /*000073cc*/ STR         R0, [SP, #12] 
    /*000073d0*/ MOV         R2, #88                     @ 0x58 
    /*000073d4*/ MOV         R1, #0 
    /*000073d8*/ ADD         R0, SP, #40                 @ 0x28 
    /*000073dc*/ MOV         R8, R3 
    /*000073e0*/ BL          0x00000000000073E0          @ memset [R_ARM_CALL: +0x0] 
    /*000073e4*/ LDR         FP, [R5, #12] 
    /*000073e8*/ ADD         R0, SP, #216                @ 0xd8 
    /*000073ec*/ MOV         R2, #88                     @ 0x58 
    /*000073f0*/ MOV         R1, #0 
    /*000073f4*/ BL          0x00000000000073F4          @ memset [R_ARM_CALL: +0x0] 
    /*000073f8*/ CMP         FP, #63                     @ 0x3f 
    /*000073fc*/ BHI         GDC_AddLdcTask2Gdc_Zero.constprop.13_x755c
    GDC_AddLdcTask2Gdc_Zero.constprop.13_x7400:
    /*00007400*/ MOV         R3, #37                     @ 0x25 
    /*00007404*/ STR         R3, [R4, #668]              @ 0x29c 
    /*00007408*/ LDR         R3, [R5] 
    /*0000740c*/ LSL         FP, FP, #2 
    /*00007410*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*00007414*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*00007418*/ ADD         R2, R6, FP 
    /*0000741c*/ LDR         R0, [R4, #336]              @ 0x150 
    /*00007420*/ STR         R3, [R4, #752]              @ 0x2f0 
    /*00007424*/ LDR         R3, [R5, #4] 
    /*00007428*/ LDR         R7, [R2, #256]              @ 0x100 
    /*0000742c*/ LDR         R2, [R4, #340]              @ 0x154 
    /*00007430*/ STR         R3, [R4, #756]              @ 0x2f4 
    /*00007434*/ ADD         SL, R7, #832                @ 0x340 
    /*00007438*/ LDR         R3, [R5, #8] 
    /*0000743c*/ STR         R0, [SP, #20] 
    /*00007440*/ MOV         R1, SL 
    /*00007444*/ STR         R2, [SP, #24] 
    /*00007448*/ STR         R3, [R4, #760]              @ 0x2f8 
    /*0000744c*/ LDR         R0, [R8] 
    /*00007450*/ LDM         R4, {R5, R9} 
    /*00007454*/ BL          0x0000000000007454          @ GDC_DRV_CheckConfig [R_ARM_CALL: .text+0x18f2c] 
    /*00007458*/ CMP         R0, #0 
    /*0000745c*/ BEQ         GDC_AddLdcTask2Gdc_Zero.constprop.13_x7514
    /*00007460*/ LDR         R0, [R4, #24] 
    /*00007464*/ STR         R5, [SP, #28] 
    /*00007468*/ CMP         R0, #0 
    /*0000746c*/ STR         R9, [SP, #32] 
    /*00007470*/ MOVEQ       R3, #8 
    /*00007474*/ STREQ       R3, [SP, #36]               @ 0x24 
    /*00007478*/ BEQ         GDC_AddLdcTask2Gdc_Zero.constprop.13_x7490
    /*0000747c*/ SUB         R3, R0, #1 
    /*00007480*/ CMP         R3, #4 
    /*00007484*/ BHI         GDC_AddLdcTask2Gdc_Zero.constprop.13_x760c
    /*00007488*/ MOV         R3, #10 
    /*0000748c*/ STR         R3, [SP, #36]               @ 0x24 
    GDC_AddLdcTask2Gdc_Zero.constprop.13_x7490:
    /*00007490*/ ADD         R5, R7, #744                @ 0x2e8 
    /*00007494*/ MOV         R2, #88                     @ 0x58 
    /*00007498*/ ADD         R0, SP, #128                @ 0x80 
    /*0000749c*/ MOV         R1, R5 
    /*000074a0*/ BL          0x00000000000074A0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000074a4*/ MOV         R2, #8 
    /*000074a8*/ ADD         R1, SP, #20 
    /*000074ac*/ ADD         R0, SP, #120                @ 0x78 
    /*000074b0*/ BL          0x00000000000074B0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000074b4*/ LDR         R3, [R8, #16] 
    /*000074b8*/ CMP         R3, #0 
    /*000074bc*/ BNE         GDC_AddLdcTask2Gdc_Zero.constprop.13_x75a4
    GDC_AddLdcTask2Gdc_Zero.constprop.13_x74c0:
    /*000074c0*/ STR         R5, [SP] 
    /*000074c4*/ ADD         R2, SP, #216                @ 0xd8 
    /*000074c8*/ MOV         R3, SL 
    /*000074cc*/ ADD         R0, SP, #28 
    /*000074d0*/ ADD         R1, R7, #24 
    /*000074d4*/ BL          0x00000000000074D4          @ GDC_LDCRatio0_CFG [R_ARM_CALL: .text+0x1a0c0] 
    /*000074d8*/ SUBS        R9, R0, #0 
    /*000074dc*/ BNE         GDC_AddLdcTask2Gdc_Zero.constprop.13_x7578
    /*000074e0*/ ADD         R1, SP, #40                 @ 0x28 
    /*000074e4*/ LDR         R0, [R8, #16] 
    /*000074e8*/ MOV         R2, SL 
    /*000074ec*/ BL          0x00000000000074EC          @ GDC_DstSize_CFG [R_ARM_CALL: .text+0x1ae00] 
    /*000074f0*/ SUBS        R9, R0, #0 
    /*000074f4*/ BNE         GDC_AddLdcTask2Gdc_Zero.constprop.13_x75c4
    /*000074f8*/ MOV         R2, SL 
    /*000074fc*/ MOV         R1, R5 
    /*00007500*/ ADD         R0, SP, #28 
    /*00007504*/ ADD         R3, R7, #904                @ 0x388 
    /*00007508*/ BL          0x0000000000007508          @ GDC_PMF_FIFO_CFG [R_ARM_CALL: .text+0x1ba8c] 
    /*0000750c*/ SUBS        R9, R0, #0 
    /*00007510*/ BNE         GDC_AddLdcTask2Gdc_Zero.constprop.13_x7614
    GDC_AddLdcTask2Gdc_Zero.constprop.13_x7514:
    /*00007514*/ MOV         R3, #0 
    /*00007518*/ MOV         R2, #1 
    /*0000751c*/ MOV         R1, R4 
    /*00007520*/ STR         R2, [R7, #728]!             @ 0x2d8 
    /*00007524*/ LDR         R0, [SP, #12] 
    /*00007528*/ MOV         R2, R3 
    /*0000752c*/ STR         R7, [SP] 
    /*00007530*/ BL          0x0000000000007530          @ GDC_AddLDCOrPMFTask [R_ARM_CALL: .text+0x3440] 
    /*00007534*/ SUBS        R9, R0, #0 
    /*00007538*/ BNE         GDC_AddLdcTask2Gdc_Zero.constprop.13_x75e8
    /*0000753c*/ ADD         R6, R6, FP 
    /*00007540*/ MOV         R0, R9 
    /*00007544*/ LDR         R3, [R6, #256]              @ 0x100 
    /*00007548*/ LDR         R2, [R3] 
    /*0000754c*/ CMP         R2, #0 
    /*00007550*/ STRNE       R9, [R3] 
    /*00007554*/ ADD         SP, SP, #308                @ 0x134 
    /*00007558*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddLdcTask2Gdc_Zero.constprop.13_x755c:
    /*0000755c*/ MOV         R0, FP 
    /*00007560*/ BL          0x0000000000005F18 
    /*00007564*/ SUBS        R9, R0, #0 
    /*00007568*/ BEQ         GDC_AddLdcTask2Gdc_Zero.constprop.13_x7400
    GDC_AddLdcTask2Gdc_Zero.constprop.13_x756c:
    /*0000756c*/ MOV         R0, R9 
    /*00007570*/ ADD         SP, SP, #308                @ 0x134 
    /*00007574*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddLdcTask2Gdc_Zero.constprop.13_x7578:
    /*00007578*/ MOV         R3, #1104                   @ 0x450 
    /*0000757c*/ MOV         R1, #37                     @ 0x25 
    /*00007580*/ STR         R3, [SP] 
    /*00007584*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2918] 
    /*00007588*/ LDR         R3, [PC, #168]              @ 0x0000000000007638 
    /*0000758c*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2918] 
    /*00007590*/ MOV         R0, #3 
    /*00007594*/ BL          0x0000000000007594          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007598*/ MOV         R0, R9 
    /*0000759c*/ ADD         SP, SP, #308                @ 0x134 
    /*000075a0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_AddLdcTask2Gdc_Zero.constprop.13_x75a4:
    /*000075a4*/ ADD         R3, R6, FP 
    /*000075a8*/ MOV         R2, #88                     @ 0x58 
    /*000075ac*/ ADD         R0, SP, #216                @ 0xd8 
    /*000075b0*/ LDR         R1, [R3, #256]              @ 0x100 
    /*000075b4*/ ADD         R1, R1, #1152               @ 0x480 
    /*000075b8*/ ADD         R1, R1, #8 
    /*000075bc*/ BL          0x00000000000075BC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000075c0*/ B           GDC_AddLdcTask2Gdc_Zero.constprop.13_x74c0
    GDC_AddLdcTask2Gdc_Zero.constprop.13_x75c4:
    /*000075c4*/ MOVW        R3, #1112                   @ 0x458 
    /*000075c8*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2710] 
    /*000075cc*/ STR         R3, [SP] 
    /*000075d0*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2710] 
    /*000075d4*/ LDR         R3, [PC, #92]               @ 0x0000000000007638 
    /*000075d8*/ MOV         R1, #37                     @ 0x25 
    /*000075dc*/ MOV         R0, #3 
    /*000075e0*/ BL          0x00000000000075E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000075e4*/ B           GDC_AddLdcTask2Gdc_Zero.constprop.13_x756c
    GDC_AddLdcTask2Gdc_Zero.constprop.13_x75e8:
    /*000075e8*/ MOV         R3, #1136                   @ 0x470 
    /*000075ec*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a40] 
    /*000075f0*/ STR         R3, [SP] 
    /*000075f4*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a40] 
    /*000075f8*/ LDR         R3, [PC, #56]               @ 0x0000000000007638 
    /*000075fc*/ MOV         R1, #37                     @ 0x25 
    /*00007600*/ MOV         R0, #3 
    /*00007604*/ BL          0x0000000000007604          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007608*/ B           GDC_AddLdcTask2Gdc_Zero.constprop.13_x756c
    GDC_AddLdcTask2Gdc_Zero.constprop.13_x760c:
    /*0000760c*/ BL          0x0000000000005F68 
    /*00007610*/ B           GDC_AddLdcTask2Gdc_Zero.constprop.13_x7490
    GDC_AddLdcTask2Gdc_Zero.constprop.13_x7614:
    /*00007614*/ MOVW        R3, #1121                   @ 0x461 
    /*00007618*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2950] 
    /*0000761c*/ STR         R3, [SP] 
    /*00007620*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2950] 
    /*00007624*/ LDR         R3, [PC, #12]               @ 0x0000000000007638 
    /*00007628*/ MOV         R1, #37                     @ 0x25 
    /*0000762c*/ MOV         R0, #3 
    /*00007630*/ BL          0x0000000000007630          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007634*/ B           GDC_AddLdcTask2Gdc_Zero.constprop.13_x756c
    /*00007638*/ ANDEQ       R0, R0, R8, LSL #11 
FUNC_END GDC_AddLdcTask2Gdc_Zero.constprop.13


FUNC_BEGIN GDC_AddLdcTask2Gdc
    /*0000763c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00007640*/ MOVW        IP, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*00007644*/ LDR         LR, [R2, #12] 
    /*00007648*/ MOVT        IP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000764c*/ ADD         IP, IP, LR, LSL #2 
    /*00007650*/ LDR         IP, [IP, #256]              @ 0x100 
    /*00007654*/ LDR         IP, [IP, #48]               @ 0x30 
    /*00007658*/ CMP         IP, #0 
    /*0000765c*/ BEQ         GDC_AddLdcTask2Gdc_x7668
    /*00007660*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    /*00007664*/ B           0x000000000000710C 
    GDC_AddLdcTask2Gdc_x7668:
    /*00007668*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    /*0000766c*/ B           0x00000000000073BC 
FUNC_END GDC_AddLdcTask2Gdc


FUNC_BEGIN GDC_CheckGdcChnAttr
    /*00007670*/ PUSH        {R4, LR} 
    /*00007674*/ MOV         R3, #0 
    /*00007678*/ LDR         R1, [R0, #4] 
    /*0000767c*/ SUB         SP, SP, #8 
    /*00007680*/ MOV         R4, R0 
    /*00007684*/ MOV         R2, #1 
    /*00007688*/ LDR         R0, [R0] 
    /*0000768c*/ BL          0x000000000000768C          @ GDC_DRV_CheckCommWH [R_ARM_CALL: .text+0x1793c] 
    /*00007690*/ CMP         R0, #0 
    /*00007694*/ BEQ         GDC_CheckGdcChnAttr_x76a0
    GDC_CheckGdcChnAttr_x7698:
    /*00007698*/ ADD         SP, SP, #8 
    /*0000769c*/ POP         {R4, PC} 
    GDC_CheckGdcChnAttr_x76a0:
    /*000076a0*/ LDR         R0, [R4, #8] 
    /*000076a4*/ BL          0x00000000000076A4          @ GDC_DRV_CheckPixelFormat [R_ARM_CALL: .text+0x18f00] 
    /*000076a8*/ CMP         R0, #0 
    /*000076ac*/ BNE         GDC_CheckGdcChnAttr_x76ec
    /*000076b0*/ LDR         R3, [R4, #12] 
    /*000076b4*/ CMP         R3, #1 
    /*000076b8*/ BLS         GDC_CheckGdcChnAttr_x7698
    /*000076bc*/ STR         R3, [SP, #4] 
    /*000076c0*/ MOV         R3, #85                     @ 0x55 
    /*000076c4*/ STR         R3, [SP] 
    /*000076c8*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ab4] 
    /*000076cc*/ LDR         R3, [PC, #56]               @ 0x000000000000770c 
    /*000076d0*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ab4] 
    GDC_CheckGdcChnAttr_x76d4:
    /*000076d4*/ MOV         R1, #37                     @ 0x25 
    /*000076d8*/ MOV         R0, #3 
    /*000076dc*/ BL          0x00000000000076DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000076e0*/ MOVW        R0, #32771                  @ 0x8003 
    /*000076e4*/ MOVT        R0, #40997                  @ 0xa025 
    /*000076e8*/ B           GDC_CheckGdcChnAttr_x7698
    GDC_CheckGdcChnAttr_x76ec:
    /*000076ec*/ LDR         R1, [R4, #8] 
    /*000076f0*/ MOV         R3, #79                     @ 0x4f 
    /*000076f4*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a78] 
    /*000076f8*/ STR         R3, [SP] 
    /*000076fc*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a78] 
    /*00007700*/ LDR         R3, [PC, #4]                @ 0x000000000000770c 
    /*00007704*/ STR         R1, [SP, #4] 
    /*00007708*/ B           GDC_CheckGdcChnAttr_x76d4
    /*0000770c*/ ANDEQ       R0, R0, R0, LSR #11 
FUNC_END GDC_CheckGdcChnAttr


FUNC_BEGIN GDC_CheckLDCInfo
    /*00007710*/ PUSH        {R4, R5, LR} 
    /*00007714*/ SUB         SP, SP, #36                 @ 0x24 
    /*00007718*/ MOV         R4, R1 
    /*0000771c*/ MOV         R5, R0 
    /*00007720*/ BL          0x0000000000007720          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*00007724*/ CMP         R0, #0 
    /*00007728*/ BEQ         GDC_CheckLDCInfo_x7734
    GDC_CheckLDCInfo_x772c:
    /*0000772c*/ ADD         SP, SP, #36                 @ 0x24 
    /*00007730*/ POP         {R4, R5, PC} 
    GDC_CheckLDCInfo_x7734:
    /*00007734*/ MOV         R0, R4 
    /*00007738*/ BL          0x0000000000007738          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*0000773c*/ CMP         R0, #0 
    /*00007740*/ BNE         GDC_CheckLDCInfo_x772c
    /*00007744*/ LDR         R3, [R5] 
    /*00007748*/ LDR         R2, [R5, #4] 
    /*0000774c*/ CMP         R3, #640                    @ 0x280 
    /*00007750*/ BCC         GDC_CheckLDCInfo_x7844
    /*00007754*/ CMP         R2, #480                    @ 0x1e0 
    /*00007758*/ BCC         GDC_CheckLDCInfo_x7844
    /*0000775c*/ MOV         R0, R5 
    /*00007760*/ BL          0x0000000000007760          @ GDC_CheckGdcChnAttr [R_ARM_CALL: .text+0x7670] 
    /*00007764*/ CMP         R0, #0 
    /*00007768*/ BNE         GDC_CheckLDCInfo_x772c
    /*0000776c*/ LDR         R3, [R4] 
    /*00007770*/ CMP         R3, #0 
    /*00007774*/ BNE         GDC_CheckLDCInfo_x780c
    /*00007778*/ LDR         R3, [R4, #4] 
    /*0000777c*/ LDR         R2, [R4, #8] 
    /*00007780*/ CMP         R3, #100                    @ 0x64 
    /*00007784*/ BHI         GDC_CheckLDCInfo_x78c8
    /*00007788*/ CMP         R2, #100                    @ 0x64 
    /*0000778c*/ BHI         GDC_CheckLDCInfo_x78c8
    GDC_CheckLDCInfo_x7790:
    /*00007790*/ LDR         R3, [R4, #16] 
    /*00007794*/ EOR         R2, R3, R3, ASR #31 
    /*00007798*/ SUB         R2, R2, R3, ASR #31 
    /*0000779c*/ CMP         R2, #512                    @ 0x200 
    /*000077a0*/ LDR         R2, [R4, #20] 
    /*000077a4*/ BGE         GDC_CheckLDCInfo_x7878
    /*000077a8*/ EOR         R1, R2, R2, ASR #31 
    /*000077ac*/ SUB         R1, R1, R2, ASR #31 
    /*000077b0*/ CMP         R1, #512                    @ 0x200 
    /*000077b4*/ BGE         GDC_CheckLDCInfo_x7878
    /*000077b8*/ LDR         R3, [R4, #24] 
    /*000077bc*/ ADD         R2, R3, #300                @ 0x12c 
    /*000077c0*/ CMP         R2, #800                    @ 0x320 
    /*000077c4*/ BLS         GDC_CheckLDCInfo_x772c
    /*000077c8*/ MOV         R2, #500                    @ 0x1f4 
    /*000077cc*/ STR         R2, [SP, #12] 
    /*000077d0*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c48] 
    /*000077d4*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c48] 
    /*000077d8*/ STR         R3, [SP, #4] 
    /*000077dc*/ MOV         R1, #154                    @ 0x9a 
    /*000077e0*/ MOVW        R3, #65236                  @ 0xfed4 
    /*000077e4*/ STR         R1, [SP] 
    /*000077e8*/ MOVT        R3, #65535                  @ 0xffff 
    /*000077ec*/ STR         R3, [SP, #8] 
    GDC_CheckLDCInfo_x77f0:
    /*000077f0*/ LDR         R3, [PC, #332]              @ 0x0000000000007944 
    /*000077f4*/ MOV         R1, #37                     @ 0x25 
    /*000077f8*/ MOV         R0, #3 
    /*000077fc*/ BL          0x00000000000077FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007800*/ MOVW        R0, #32771                  @ 0x8003 
    /*00007804*/ MOVT        R0, #40997                  @ 0xa025 
    /*00007808*/ B           GDC_CheckLDCInfo_x772c
    GDC_CheckLDCInfo_x780c:
    /*0000780c*/ CMP         R3, #1 
    /*00007810*/ BNE         GDC_CheckLDCInfo_x7914
    /*00007814*/ LDR         R3, [R4, #12] 
    /*00007818*/ CMP         R3, #100                    @ 0x64 
    /*0000781c*/ BLS         GDC_CheckLDCInfo_x7790
    /*00007820*/ MOV         R2, #100                    @ 0x64 
    /*00007824*/ STR         R3, [SP, #4] 
    /*00007828*/ STR         R2, [SP, #12] 
    /*0000782c*/ MOV         R3, #132                    @ 0x84 
    /*00007830*/ MOVW        R2, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b78] 
    /*00007834*/ STR         R0, [SP, #8] 
    /*00007838*/ STR         R3, [SP] 
    /*0000783c*/ MOVT        R2, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b78] 
    /*00007840*/ B           GDC_CheckLDCInfo_x77f0
    GDC_CheckLDCInfo_x7844:
    /*00007844*/ STR         R2, [SP, #8] 
    /*00007848*/ MOV         R1, #104                    @ 0x68 
    /*0000784c*/ STR         R3, [SP, #4] 
    /*00007850*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2af0] 
    /*00007854*/ STR         R1, [SP] 
    /*00007858*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2af0] 
    /*0000785c*/ LDR         R3, [PC, #224]              @ 0x0000000000007944 
    /*00007860*/ MOV         R1, #37                     @ 0x25 
    /*00007864*/ MOV         R0, #3 
    /*00007868*/ BL          0x0000000000007868          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000786c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00007870*/ MOVT        R0, #40997                  @ 0xa025 
    /*00007874*/ B           GDC_CheckLDCInfo_x772c
    GDC_CheckLDCInfo_x7878:
    /*00007878*/ STR         R2, [SP, #16] 
    /*0000787c*/ MOV         R1, #147                    @ 0x93 
    /*00007880*/ STR         R3, [SP, #4] 
    /*00007884*/ MOVW        R2, #65025                  @ 0xfe01 
    /*00007888*/ MOVW        R3, #511                    @ 0x1ff 
    /*0000788c*/ MOVT        R2, #65535                  @ 0xffff 
    /*00007890*/ STR         R3, [SP, #24] 
    /*00007894*/ MOV         R0, #3 
    /*00007898*/ STR         R2, [SP, #20] 
    /*0000789c*/ STR         R2, [SP, #8] 
    /*000078a0*/ MOVW        R2, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2be4] 
    /*000078a4*/ STR         R3, [SP, #12] 
    /*000078a8*/ MOVT        R2, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2be4] 
    /*000078ac*/ STR         R1, [SP] 
    /*000078b0*/ MOV         R1, #37                     @ 0x25 
    /*000078b4*/ LDR         R3, [PC, #136]              @ 0x0000000000007944 
    /*000078b8*/ BL          0x00000000000078B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000078bc*/ MOVW        R0, #32771                  @ 0x8003 
    /*000078c0*/ MOVT        R0, #40997                  @ 0xa025 
    /*000078c4*/ B           GDC_CheckLDCInfo_x772c
    GDC_CheckLDCInfo_x78c8:
    /*000078c8*/ STR         R2, [SP, #16] 
    /*000078cc*/ MOV         R0, #123                    @ 0x7b 
    /*000078d0*/ MOV         R2, #100                    @ 0x64 
    /*000078d4*/ STR         R3, [SP, #4] 
    /*000078d8*/ STR         R2, [SP, #24] 
    /*000078dc*/ MOV         R3, #0 
    /*000078e0*/ STR         R2, [SP, #12] 
    /*000078e4*/ MOV         R1, #37                     @ 0x25 
    /*000078e8*/ STR         R3, [SP, #20] 
    /*000078ec*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b28] 
    /*000078f0*/ STR         R3, [SP, #8] 
    /*000078f4*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b28] 
    /*000078f8*/ STR         R0, [SP] 
    /*000078fc*/ MOV         R0, #3 
    /*00007900*/ LDR         R3, [PC, #60]               @ 0x0000000000007944 
    /*00007904*/ BL          0x0000000000007904          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007908*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000790c*/ MOVT        R0, #40997                  @ 0xa025 
    /*00007910*/ B           GDC_CheckLDCInfo_x772c
    GDC_CheckLDCInfo_x7914:
    /*00007914*/ STR         R3, [SP, #4] 
    /*00007918*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bb4] 
    /*0000791c*/ MOV         R3, #138                    @ 0x8a 
    /*00007920*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bb4] 
    /*00007924*/ STR         R3, [SP] 
    /*00007928*/ MOV         R1, #37                     @ 0x25 
    /*0000792c*/ LDR         R3, [PC, #16]               @ 0x0000000000007944 
    /*00007930*/ MOV         R0, #3 
    /*00007934*/ BL          0x0000000000007934          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007938*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000793c*/ MOVT        R0, #40997                  @ 0xa025 
    /*00007940*/ B           GDC_CheckLDCInfo_x772c
    /*00007944*/ @           <UNDEFINED> instruction: 0x000005b4 
FUNC_END GDC_CheckLDCInfo


FUNC_BEGIN GDC_CheckSpreadInfo
    /*00007948*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000794c*/ SUB         SP, SP, #20 
    /*00007950*/ LDR         R3, [R0] 
    /*00007954*/ CMP         R3, #1 
    /*00007958*/ BHI         GDC_CheckSpreadInfo_x79e0
    /*0000795c*/ LDR         R3, [R0, #4] 
    /*00007960*/ CMP         R3, #18 
    /*00007964*/ BHI         GDC_CheckSpreadInfo_x7a10
    /*00007968*/ LDR         R2, [R0, #8] 
    /*0000796c*/ TST         R2, #1 
    /*00007970*/ BNE         GDC_CheckSpreadInfo_x7a34
    /*00007974*/ LDR         R1, [R0, #12] 
    /*00007978*/ TST         R1, #1 
    /*0000797c*/ BNE         GDC_CheckSpreadInfo_x7a4c
    /*00007980*/ CMP         R1, #480                    @ 0x1e0 
    /*00007984*/ CMPCS       R2, #640                    @ 0x280 
    /*00007988*/ MOVCC       R3, #1 
    /*0000798c*/ MOVCS       R3, #0 
    /*00007990*/ BCC         GDC_CheckSpreadInfo_x79a8
    /*00007994*/ MOV         R0, R2 
    /*00007998*/ MOV         R2, R3 
    /*0000799c*/ ADD         SP, SP, #20 
    /*000079a0*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_CheckSpreadInfo_x79a4:
    /*000079a4*/ B           GDC_CheckSpreadInfo_x79a4   @ GDC_DRV_CheckCommWH [R_ARM_JUMP24: .text+0x1793c] 
    GDC_CheckSpreadInfo_x79a8:
    /*000079a8*/ MOV         R3, #194                    @ 0xc2 
    /*000079ac*/ STR         R3, [SP] 
    /*000079b0*/ LDR         R3, [PC, #172]              @ 0x0000000000007a64 
    /*000079b4*/ STR         R2, [SP, #4] 
    /*000079b8*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2af0] 
    /*000079bc*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2af0] 
    /*000079c0*/ STR         R1, [SP, #8] 
    GDC_CheckSpreadInfo_x79c4:
    /*000079c4*/ MOV         R1, #37                     @ 0x25 
    /*000079c8*/ MOV         R0, #3 
    /*000079cc*/ BL          0x00000000000079CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000079d0*/ MOVW        R0, #32771                  @ 0x8003 
    /*000079d4*/ MOVT        R0, #40997                  @ 0xa025 
    GDC_CheckSpreadInfo_x79d8:
    /*000079d8*/ ADD         SP, SP, #20 
    /*000079dc*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    GDC_CheckSpreadInfo_x79e0:
    /*000079e0*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c8c] 
    /*000079e4*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c8c] 
    /*000079e8*/ STR         R3, [SP, #4] 
    /*000079ec*/ MOV         R3, #168                    @ 0xa8 
    /*000079f0*/ STR         R3, [SP] 
    GDC_CheckSpreadInfo_x79f4:
    /*000079f4*/ LDR         R3, [PC, #104]              @ 0x0000000000007a64 
    /*000079f8*/ MOV         R1, #37                     @ 0x25 
    /*000079fc*/ MOV         R0, #3 
    /*00007a00*/ BL          0x0000000000007A00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007a04*/ MOVW        R0, #32771                  @ 0x8003 
    /*00007a08*/ MOVT        R0, #40997                  @ 0xa025 
    /*00007a0c*/ B           GDC_CheckSpreadInfo_x79d8
    GDC_CheckSpreadInfo_x7a10:
    /*00007a10*/ MOV         R2, #18 
    /*00007a14*/ STR         R3, [SP, #4] 
    /*00007a18*/ STR         R2, [SP, #8] 
    /*00007a1c*/ MOV         R3, #175                    @ 0xaf 
    /*00007a20*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2cc8] 
    /*00007a24*/ STR         R3, [SP] 
    /*00007a28*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2cc8] 
    /*00007a2c*/ LDR         R3, [PC, #48]               @ 0x0000000000007a64 
    /*00007a30*/ B           GDC_CheckSpreadInfo_x79c4
    GDC_CheckSpreadInfo_x7a34:
    /*00007a34*/ STR         R2, [SP, #4] 
    /*00007a38*/ MOV         R3, #181                    @ 0xb5 
    /*00007a3c*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d00] 
    /*00007a40*/ STR         R3, [SP] 
    /*00007a44*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d00] 
    /*00007a48*/ B           GDC_CheckSpreadInfo_x79f4
    GDC_CheckSpreadInfo_x7a4c:
    /*00007a4c*/ MOV         R3, #187                    @ 0xbb 
    /*00007a50*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d4c] 
    /*00007a54*/ STR         R1, [SP, #4] 
    /*00007a58*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d4c] 
    /*00007a5c*/ STR         R3, [SP] 
    /*00007a60*/ B           GDC_CheckSpreadInfo_x79f4
    /*00007a64*/ ANDEQ       R0, R0, R8, ASR #11 
FUNC_END GDC_CheckSpreadInfo


FUNC_BEGIN GDC_CheckLDCV2Info
    /*00007a68*/ PUSH        {R4, R5, LR} 
    /*00007a6c*/ SUB         SP, SP, #36                 @ 0x24 
    /*00007a70*/ MOV         R4, R1 
    /*00007a74*/ MOV         R5, R0 
    /*00007a78*/ BL          0x0000000000007A78          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*00007a7c*/ CMP         R0, #0 
    /*00007a80*/ BEQ         GDC_CheckLDCV2Info_x7a8c
    GDC_CheckLDCV2Info_x7a84:
    /*00007a84*/ ADD         SP, SP, #36                 @ 0x24 
    /*00007a88*/ POP         {R4, R5, PC} 
    GDC_CheckLDCV2Info_x7a8c:
    /*00007a8c*/ MOV         R0, R4 
    /*00007a90*/ BL          0x0000000000007A90          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*00007a94*/ CMP         R0, #0 
    /*00007a98*/ BNE         GDC_CheckLDCV2Info_x7a84
    /*00007a9c*/ MOV         R0, R5 
    /*00007aa0*/ BL          0x0000000000007AA0          @ GDC_CheckGdcChnAttr [R_ARM_CALL: .text+0x7670] 
    /*00007aa4*/ CMP         R0, #0 
    /*00007aa8*/ BNE         GDC_CheckLDCV2Info_x7a84
    /*00007aac*/ LDR         R2, [R4] 
    /*00007ab0*/ MOVW        R3, #25860                  @ 0x6504 
    /*00007ab4*/ MOVT        R3, #1790                   @ 0x6fe 
    /*00007ab8*/ SUB         R1, R2, #6400               @ 0x1900 
    /*00007abc*/ CMP         R1, R3 
    /*00007ac0*/ LDR         R1, [R4, #4] 
    /*00007ac4*/ BHI         GDC_CheckLDCV2Info_x7b80
    /*00007ac8*/ SUB         R0, R1, #6400               @ 0x1900 
    /*00007acc*/ CMP         R0, R3 
    /*00007ad0*/ BHI         GDC_CheckLDCV2Info_x7b80
    /*00007ad4*/ LDR         R3, [R5] 
    /*00007ad8*/ MOV         R1, #35                     @ 0x23 
    /*00007adc*/ LDR         IP, [R4, #8] 
    /*00007ae0*/ MUL         R0, R1, R3 
    /*00007ae4*/ CMP         IP, R0 
    /*00007ae8*/ BCC         GDC_CheckLDCV2Info_x7b2c
    /*00007aec*/ LDR         R2, [R5, #4] 
    /*00007af0*/ ADD         R3, R3, R3, LSL #6 
    /*00007af4*/ CMP         IP, R3 
    /*00007af8*/ LDR         LR, [R4, #12] 
    /*00007afc*/ MUL         R1, R1, R2 
    /*00007b00*/ ADD         R2, R2, R2, LSL #6 
    /*00007b04*/ BHI         GDC_CheckLDCV2Info_x7b40
    /*00007b08*/ CMP         LR, R1 
    /*00007b0c*/ BCC         GDC_CheckLDCV2Info_x7b40
    /*00007b10*/ CMP         LR, R2 
    /*00007b14*/ BHI         GDC_CheckLDCV2Info_x7b40
    /*00007b18*/ MOV         R1, R4 
    /*00007b1c*/ MOV         R0, R5 
    /*00007b20*/ ADD         SP, SP, #36                 @ 0x24 
    /*00007b24*/ POP         {R4, R5, LR} 
    GDC_CheckLDCV2Info_x7b28:
    /*00007b28*/ B           GDC_CheckLDCV2Info_x7b28    @ GDC_DRV_CheckLDCV2Info [R_ARM_JUMP24: .text+0x18f40] 
    GDC_CheckLDCV2Info_x7b2c:
    /*00007b2c*/ LDR         R2, [R5, #4] 
    /*00007b30*/ ADD         R3, R3, R3, LSL #6 
    /*00007b34*/ LDR         LR, [R4, #12] 
    /*00007b38*/ MUL         R1, R1, R2 
    /*00007b3c*/ ADD         R2, R2, R2, LSL #6 
    GDC_CheckLDCV2Info_x7b40:
    /*00007b40*/ STR         R2, [SP, #24] 
    /*00007b44*/ MOV         R4, #237                    @ 0xed 
    /*00007b48*/ STR         R1, [SP, #20] 
    /*00007b4c*/ MOVW        R2, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2df4] 
    /*00007b50*/ STR         R3, [SP, #12] 
    /*00007b54*/ MOVT        R2, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2df4] 
    /*00007b58*/ STR         R0, [SP, #8] 
    /*00007b5c*/ MOV         R1, #37                     @ 0x25 
    /*00007b60*/ STR         LR, [SP, #16] 
    /*00007b64*/ MOV         R0, #3 
    /*00007b68*/ STM         SP, {R4, IP} 
    /*00007b6c*/ LDR         R3, [PC, #92]               @ 0x0000000000007bd0 
    /*00007b70*/ BL          0x0000000000007B70          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007b74*/ MOVW        R0, #32771                  @ 0x8003 
    /*00007b78*/ MOVT        R0, #40997                  @ 0xa025 
    /*00007b7c*/ B           GDC_CheckLDCV2Info_x7a84
    GDC_CheckLDCV2Info_x7b80:
    /*00007b80*/ STR         R1, [SP, #16] 
    /*00007b84*/ MOVW        R3, #32260                  @ 0x7e04 
    /*00007b88*/ MOV         R1, #6400                   @ 0x1900 
    /*00007b8c*/ MOVT        R3, #1790                   @ 0x6fe 
    /*00007b90*/ STR         R2, [SP, #4] 
    /*00007b94*/ MOV         R0, #3 
    /*00007b98*/ STR         R3, [SP, #24] 
    /*00007b9c*/ MOVW        R2, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d98] 
    /*00007ba0*/ STR         R3, [SP, #12] 
    /*00007ba4*/ MOVT        R2, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d98] 
    /*00007ba8*/ MOV         R3, #227                    @ 0xe3 
    /*00007bac*/ STR         R1, [SP, #20] 
    /*00007bb0*/ STR         R1, [SP, #8] 
    /*00007bb4*/ MOV         R1, #37                     @ 0x25 
    /*00007bb8*/ STR         R3, [SP] 
    /*00007bbc*/ LDR         R3, [PC, #12]               @ 0x0000000000007bd0 
    /*00007bc0*/ BL          0x0000000000007BC0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007bc4*/ MOVW        R0, #32771                  @ 0x8003 
    /*00007bc8*/ MOVT        R0, #40997                  @ 0xa025 
    /*00007bcc*/ B           GDC_CheckLDCV2Info_x7a84
    /*00007bd0*/ LDRDEQ      R0, [R0], -IP 
FUNC_END GDC_CheckLDCV2Info


FUNC_BEGIN GDC_CheckRotationExInfo
    /*00007bd4*/ PUSH        {R4, R5, LR} 
    /*00007bd8*/ SUB         SP, SP, #36                 @ 0x24 
    /*00007bdc*/ MOV         R4, R1 
    /*00007be0*/ MOV         R5, R0 
    /*00007be4*/ BL          0x0000000000007BE4          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*00007be8*/ CMP         R0, #0 
    /*00007bec*/ BEQ         GDC_CheckRotationExInfo_x7bf8
    GDC_CheckRotationExInfo_x7bf0:
    /*00007bf0*/ ADD         SP, SP, #36                 @ 0x24 
    /*00007bf4*/ POP         {R4, R5, PC} 
    GDC_CheckRotationExInfo_x7bf8:
    /*00007bf8*/ MOV         R0, R4 
    /*00007bfc*/ BL          0x0000000000007BFC          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*00007c00*/ CMP         R0, #0 
    /*00007c04*/ BNE         GDC_CheckRotationExInfo_x7bf0
    /*00007c08*/ LDR         R3, [R5] 
    /*00007c0c*/ LDR         R2, [R5, #4] 
    /*00007c10*/ CMP         R3, #480                    @ 0x1e0 
    /*00007c14*/ BCC         GDC_CheckRotationExInfo_x7cdc
    /*00007c18*/ CMP         R2, #360                    @ 0x168 
    /*00007c1c*/ BCC         GDC_CheckRotationExInfo_x7cdc
    /*00007c20*/ MOV         R0, R5 
    /*00007c24*/ BL          0x0000000000007C24          @ GDC_CheckGdcChnAttr [R_ARM_CALL: .text+0x7670] 
    /*00007c28*/ CMP         R0, #0 
    /*00007c2c*/ BNE         GDC_CheckRotationExInfo_x7bf0
    /*00007c30*/ LDR         R3, [R4] 
    /*00007c34*/ LDR         R2, [R4, #4] 
    /*00007c38*/ CMP         R3, #2 
    /*00007c3c*/ BHI         GDC_CheckRotationExInfo_x7cf8
    /*00007c40*/ CMP         R2, #360                    @ 0x168 
    /*00007c44*/ BHI         GDC_CheckRotationExInfo_x7cf8
    /*00007c48*/ LDR         R3, [R4, #8] 
    /*00007c4c*/ EOR         R2, R3, R3, ASR #31 
    /*00007c50*/ SUB         R2, R2, R3, ASR #31 
    /*00007c54*/ CMP         R2, #512                    @ 0x200 
    /*00007c58*/ LDR         R2, [R4, #12] 
    /*00007c5c*/ BGE         GDC_CheckRotationExInfo_x7d3c
    /*00007c60*/ EOR         R1, R2, R2, ASR #31 
    /*00007c64*/ SUB         R1, R1, R2, ASR #31 
    /*00007c68*/ CMP         R1, #512                    @ 0x200 
    /*00007c6c*/ BGE         GDC_CheckRotationExInfo_x7d3c
    /*00007c70*/ LDR         R3, [R4, #16] 
    /*00007c74*/ LDR         R2, [R4, #20] 
    /*00007c78*/ TST         R3, #1 
    /*00007c7c*/ BNE         GDC_CheckRotationExInfo_x7ca8
    /*00007c80*/ TST         R2, #1 
    /*00007c84*/ BNE         GDC_CheckRotationExInfo_x7ca8
    /*00007c88*/ SUB         IP, R3, #480                @ 0x1e0 
    /*00007c8c*/ MOVW        R1, #4128                   @ 0x1020 
    /*00007c90*/ CMP         IP, R1 
    /*00007c94*/ BHI         GDC_CheckRotationExInfo_x7ca8
    /*00007c98*/ SUB         IP, R2, #360                @ 0x168 
    /*00007c9c*/ MOVW        R1, #4248                   @ 0x1098 
    /*00007ca0*/ CMP         IP, R1 
    /*00007ca4*/ BLS         GDC_CheckRotationExInfo_x7bf0
    GDC_CheckRotationExInfo_x7ca8:
    /*00007ca8*/ STR         R2, [SP, #8] 
    /*00007cac*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f58] 
    /*00007cb0*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f58] 
    /*00007cb4*/ MOV         R1, #292                    @ 0x124 
    /*00007cb8*/ STR         R3, [SP, #4] 
    /*00007cbc*/ STR         R1, [SP] 
    GDC_CheckRotationExInfo_x7cc0:
    /*00007cc0*/ LDR         R3, [PC, #196]              @ 0x0000000000007d8c 
    /*00007cc4*/ MOV         R1, #37                     @ 0x25 
    /*00007cc8*/ MOV         R0, #3 
    /*00007ccc*/ BL          0x0000000000007CCC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007cd0*/ MOVW        R0, #32771                  @ 0x8003 
    /*00007cd4*/ MOVT        R0, #40997                  @ 0xa025 
    /*00007cd8*/ B           GDC_CheckRotationExInfo_x7bf0
    GDC_CheckRotationExInfo_x7cdc:
    /*00007cdc*/ STR         R2, [SP, #8] 
    /*00007ce0*/ MOV         R1, #260                    @ 0x104 
    /*00007ce4*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e54] 
    /*00007ce8*/ STR         R3, [SP, #4] 
    /*00007cec*/ STR         R1, [SP] 
    /*00007cf0*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e54] 
    /*00007cf4*/ B           GDC_CheckRotationExInfo_x7cc0
    GDC_CheckRotationExInfo_x7cf8:
    /*00007cf8*/ STR         R2, [SP, #12] 
    /*00007cfc*/ MOV         R1, #360                    @ 0x168 
    /*00007d00*/ STR         R3, [SP, #4] 
    /*00007d04*/ MOV         R2, #2 
    /*00007d08*/ STR         R1, [SP, #16] 
    /*00007d0c*/ MOV         R3, #276                    @ 0x114 
    /*00007d10*/ STR         R2, [SP, #8] 
    /*00007d14*/ MOV         R1, #37                     @ 0x25 
    /*00007d18*/ STR         R3, [SP] 
    /*00007d1c*/ MOVW        R2, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e94] 
    /*00007d20*/ LDR         R3, [PC, #100]              @ 0x0000000000007d8c 
    /*00007d24*/ MOVT        R2, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e94] 
    /*00007d28*/ MOV         R0, #3 
    /*00007d2c*/ BL          0x0000000000007D2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007d30*/ MOVW        R0, #32771                  @ 0x8003 
    /*00007d34*/ MOVT        R0, #40997                  @ 0xa025 
    /*00007d38*/ B           GDC_CheckRotationExInfo_x7bf0
    GDC_CheckRotationExInfo_x7d3c:
    /*00007d3c*/ STR         R2, [SP, #16] 
    /*00007d40*/ MOV         R1, #284                    @ 0x11c 
    /*00007d44*/ STR         R3, [SP, #4] 
    /*00007d48*/ MOVW        R2, #65025                  @ 0xfe01 
    /*00007d4c*/ MOVW        R3, #511                    @ 0x1ff 
    /*00007d50*/ MOVT        R2, #65535                  @ 0xffff 
    /*00007d54*/ STR         R3, [SP, #24] 
    /*00007d58*/ MOV         R0, #3 
    /*00007d5c*/ STR         R2, [SP, #20] 
    /*00007d60*/ STR         R2, [SP, #8] 
    /*00007d64*/ MOVW        R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ef0] 
    /*00007d68*/ STR         R3, [SP, #12] 
    /*00007d6c*/ MOVT        R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ef0] 
    /*00007d70*/ STR         R1, [SP] 
    /*00007d74*/ MOV         R1, #37                     @ 0x25 
    /*00007d78*/ LDR         R3, [PC, #12]               @ 0x0000000000007d8c 
    /*00007d7c*/ BL          0x0000000000007D7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007d80*/ MOVW        R0, #32771                  @ 0x8003 
    /*00007d84*/ MOVT        R0, #40997                  @ 0xa025 
    /*00007d88*/ B           GDC_CheckRotationExInfo_x7bf0
    /*00007d8c*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END GDC_CheckRotationExInfo


FUNC_BEGIN GDC_GetFreeTask
    /*00007d90*/ CMP         R0, #0 
    /*00007d94*/ PUSH        {R4, LR} 
    /*00007d98*/ BNE         GDC_GetFreeTask_x7dac
    /*00007d9c*/ BL          0x0000000000005D48 
    GDC_GetFreeTask_x7da0:
    /*00007da0*/ CMP         R0, #0 
    /*00007da4*/ ADDNE       R0, R0, #8 
    /*00007da8*/ POP         {R4, PC} 
    GDC_GetFreeTask_x7dac:
    /*00007dac*/ BL          0x0000000000007DAC          @ GDC_ExeGetFreeNode [R_ARM_CALL: .text+0x124ec] 
    /*00007db0*/ B           GDC_GetFreeTask_x7da0
FUNC_END GDC_GetFreeTask


FUNC_BEGIN GDC_PutFreeTask
    /*00007db4*/ CMP         R0, #1 
    /*00007db8*/ MOVLS       R3, #0 
    /*00007dbc*/ MOVHI       R3, #1 
    /*00007dc0*/ CMP         R1, #0 
    /*00007dc4*/ ORREQ       R3, R3, #1 
    /*00007dc8*/ CMP         R3, #0 
    /*00007dcc*/ BXNE        LR 
    /*00007dd0*/ CMP         R0, #0 
    /*00007dd4*/ PUSH        {R4, R5, LR} 
    /*00007dd8*/ SUB         R4, R1, #8 
    /*00007ddc*/ SUB         SP, SP, #12 
    /*00007de0*/ BEQ         GDC_PutFreeTask_x7df4
    /*00007de4*/ MOV         R0, R4 
    /*00007de8*/ BL          0x0000000000007DE8          @ GDC_ExePutFreeNode [R_ARM_CALL: .text+0x12590] 
    /*00007dec*/ ADD         SP, SP, #12 
    /*00007df0*/ POP         {R4, R5, PC} 
    GDC_PutFreeTask_x7df4:
    /*00007df4*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00007df8*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00007dfc*/ ADD         R1, SP, #4 
    /*00007e00*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00007e04*/ LDR         R5, [R3] 
    /*00007e08*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00007e0c*/ BL          0x0000000000007E0C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007e10*/ MOV         R1, R4 
    /*00007e14*/ ADD         R5, R5, #648                @ 0x288 
    /*00007e18*/ MOV         R0, R5 
    /*00007e1c*/ BL          0x0000000000007E1C          @ GDC_GetCurrentNodeFromBusyList [R_ARM_CALL: .text+0xff84] 
    /*00007e20*/ MOV         R1, R4 
    /*00007e24*/ MOV         R0, R5 
    /*00007e28*/ BL          0x0000000000007E28          @ GDC_PutNodeToFreeList [R_ARM_CALL: .text+0xfe90] 
    /*00007e2c*/ ADD         R1, SP, #4 
    /*00007e30*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00007e34*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00007e38*/ BL          0x0000000000007E38          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00007e3c*/ ADD         SP, SP, #12 
    /*00007e40*/ POP         {R4, R5, PC} 
FUNC_END GDC_PutFreeTask


FUNC_BEGIN GDC_IsNeedRotationFun
    /*00007e44*/ LDR         R3, [R0, #16] 
    /*00007e48*/ CMP         R3, #0 
    /*00007e4c*/ LDREQ       R0, [R0, #20] 
    /*00007e50*/ SUBEQ       R0, R0, #1 
    /*00007e54*/ CLZEQ       R0, R0 
    /*00007e58*/ LSREQ       R0, R0, #5 
    /*00007e5c*/ MOVNE       R0, #1 
    /*00007e60*/ BX          LR 
FUNC_END GDC_IsNeedRotationFun


FUNC_BEGIN GDC_PutVb
    /*00007e64*/ SUBS        R3, R0, #0 
    /*00007e68*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00007e6c*/ SUB         SP, SP, #12 
    /*00007e70*/ BEQ         GDC_PutVb_x7f34
    /*00007e74*/ MOV         R0, #1 
    /*00007e78*/ LDR         R4, [R3, #328]              @ 0x148 
    /*00007e7c*/ LDRD        R6, [R3, #120]              @ 0x78 
    /*00007e80*/ MOV         R5, R1 
    /*00007e84*/ BL          0x0000000000007E84          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007e88*/ MOV         R2, R6 
    /*00007e8c*/ MOV         R3, R7 
    /*00007e90*/ LDR         R1, [R0, #84]               @ 0x54 
    /*00007e94*/ MOV         R0, R4 
    /*00007e98*/ BLX         R1 
    /*00007e9c*/ CMP         R0, #0 
    /*00007ea0*/ BEQ         GDC_PutVb_x7f08
    /*00007ea4*/ MOV         R0, #1 
    /*00007ea8*/ BL          0x0000000000007EA8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007eac*/ STR         R5, [SP] 
    /*00007eb0*/ MOV         R2, R6 
    /*00007eb4*/ MOV         R3, R7 
    /*00007eb8*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00007ebc*/ MOV         R0, R4 
    /*00007ec0*/ BLX         R1 
    /*00007ec4*/ SUBS        R4, R0, #0 
    /*00007ec8*/ BNE         GDC_PutVb_x7ed8
    GDC_PutVb_x7ecc:
    /*00007ecc*/ MOV         R0, R4 
    /*00007ed0*/ ADD         SP, SP, #12 
    /*00007ed4*/ POP         {R4, R5, R6, R7, PC} 
    GDC_PutVb_x7ed8:
    /*00007ed8*/ STR         R4, [SP, #4] 
    /*00007edc*/ MOV         R3, #468                    @ 0x1d4 
    /*00007ee0*/ MOV         R1, #37                     @ 0x25 
    /*00007ee4*/ STR         R3, [SP] 
    /*00007ee8*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2fc0] 
    /*00007eec*/ LDR         R3, [PC, #108]              @ 0x0000000000007f60 
    /*00007ef0*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2fc0] 
    /*00007ef4*/ MOV         R0, #3 
    /*00007ef8*/ BL          0x0000000000007EF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007efc*/ MOV         R0, R4 
    /*00007f00*/ ADD         SP, SP, #12 
    /*00007f04*/ POP         {R4, R5, R6, R7, PC} 
    GDC_PutVb_x7f08:
    /*00007f08*/ MOVW        R3, #474                    @ 0x1da 
    /*00007f0c*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ff4] 
    /*00007f10*/ STR         R3, [SP] 
    /*00007f14*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ff4] 
    /*00007f18*/ LDR         R3, [PC, #64]               @ 0x0000000000007f60 
    /*00007f1c*/ MOV         R1, #37                     @ 0x25 
    /*00007f20*/ MOV         R0, #3 
    /*00007f24*/ MOVW        R4, #32771                  @ 0x8003 
    /*00007f28*/ BL          0x0000000000007F28          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007f2c*/ MOVT        R4, #40997                  @ 0xa025 
    /*00007f30*/ B           GDC_PutVb_x7ecc
    GDC_PutVb_x7f34:
    /*00007f34*/ MOVW        R3, #455                    @ 0x1c7 
    /*00007f38*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f94] 
    /*00007f3c*/ STR         R3, [SP] 
    /*00007f40*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f94] 
    /*00007f44*/ LDR         R3, [PC, #20]               @ 0x0000000000007f60 
    /*00007f48*/ MOV         R1, #37                     @ 0x25 
    /*00007f4c*/ MOV         R0, #3 
    /*00007f50*/ MOVW        R4, #32774                  @ 0x8006 
    /*00007f54*/ BL          0x0000000000007F54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007f58*/ MOVT        R4, #40997                  @ 0xa025 
    /*00007f5c*/ B           GDC_PutVb_x7ecc
    /*00007f60*/ ANDEQ       R0, R0, R8, LSL #12 
FUNC_END GDC_PutVb


FUNC_BEGIN Gdc_VgsCallBack
    /*00007f64*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00007f68*/ MOV         R6, R3 
    /*00007f6c*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00007f70*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00007f74*/ SUB         SP, SP, #20 
    /*00007f78*/ MOV         R0, R6 
    /*00007f7c*/ MOV         R1, #18 
    /*00007f80*/ LDR         R4, [R3] 
    /*00007f84*/ BL          0x0000000000007F84          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00007f88*/ CMP         R0, #0 
    /*00007f8c*/ BNE         Gdc_VgsCallBack_x8100
    Gdc_VgsCallBack_x7f90:
    /*00007f90*/ LDR         R7, [R6, #680]              @ 0x2a8 
    /*00007f94*/ CMP         R7, #63                     @ 0x3f 
    /*00007f98*/ BHI         Gdc_VgsCallBack_x80e8
    Gdc_VgsCallBack_x7f9c:
    /*00007f9c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00007fa0*/ ADD         R1, SP, #12 
    /*00007fa4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00007fa8*/ LDR         R9, [R6, #672]              @ 0x2a0 
    /*00007fac*/ BL          0x0000000000007FAC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007fb0*/ MOV         R3, R4 
    /*00007fb4*/ LDR         R2, [R3, #660]!             @ 0x294 
    /*00007fb8*/ ADD         R8, R4, #648                @ 0x288 
    /*00007fbc*/ CMP         R2, R3 
    /*00007fc0*/ LDR         R4, [R2] 
    /*00007fc4*/ MOVEQ       R4, R2 
    /*00007fc8*/ ADDEQ       R5, R4, #4096               @ 0x1000 
    /*00007fcc*/ BEQ         Gdc_VgsCallBack_x7ff0
    /*00007fd0*/ ADD         R5, R2, #4096               @ 0x1000 
    /*00007fd4*/ LDR         R1, [R5, #756]              @ 0x2f4 
    /*00007fd8*/ CMP         R9, R1 
    /*00007fdc*/ BNE         Gdc_VgsCallBack_x80d4
    /*00007fe0*/ MOV         R4, R2 
    Gdc_VgsCallBack_x7fe4:
    /*00007fe4*/ MOV         R1, R4 
    /*00007fe8*/ MOV         R0, R8 
    /*00007fec*/ BL          0x0000000000007FEC          @ GDC_GetCurrentNodeFromBusyList [R_ARM_CALL: .text+0xff84] 
    Gdc_VgsCallBack_x7ff0:
    /*00007ff0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00007ff4*/ ADD         R1, SP, #12 
    /*00007ff8*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00007ffc*/ BL          0x0000000000007FFC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008000*/ CMP         R4, #0 
    /*00008004*/ BEQ         Gdc_VgsCallBack_x8128
    Gdc_VgsCallBack_x8008:
    /*00008008*/ ADDS        R9, R4, #8 
    /*0000800c*/ BEQ         Gdc_VgsCallBack_x8148
    Gdc_VgsCallBack_x8010:
    /*00008010*/ LDR         R3, [R6, #736]              @ 0x2e0 
    /*00008014*/ CMP         R3, #1 
    /*00008018*/ BEQ         Gdc_VgsCallBack_x8040
    /*0000801c*/ STR         R3, [SP, #4] 
    /*00008020*/ MOVW        R2, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3088] 
    /*00008024*/ MOVW        R3, #557                    @ 0x22d 
    /*00008028*/ MOVT        R2, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3088] 
    /*0000802c*/ STR         R3, [SP] 
    /*00008030*/ MOV         R1, #37                     @ 0x25 
    /*00008034*/ LDR         R3, [PC, #300]              @ 0x0000000000008168 
    /*00008038*/ MOV         R0, #3 
    /*0000803c*/ BL          0x000000000000803C          @ HI_LOG [R_ARM_CALL: +0x0] 
    Gdc_VgsCallBack_x8040:
    /*00008040*/ LDR         R3, [R5, #760]              @ 0x2f8 
    /*00008044*/ CMP         R3, #0 
    /*00008048*/ BEQ         Gdc_VgsCallBack_x806c
    /*0000804c*/ LDR         R1, [R6, #736]              @ 0x2e0 
    /*00008050*/ ADD         R0, R4, #772                @ 0x304 
    /*00008054*/ BL          0x0000000000008054          @ GDC_GetReturnGdcState [R_ARM_CALL: .text+0xe7c] 
    /*00008058*/ ADD         R0, R4, #760                @ 0x2f8 
    /*0000805c*/ LDR         R5, [R5, #760]              @ 0x2f8 
    /*00008060*/ MOV         R3, R9 
    /*00008064*/ LDM         R0, {R0, R1, R2} 
    /*00008068*/ BLX         R5 
    Gdc_VgsCallBack_x806c:
    /*0000806c*/ ADD         R1, SP, #12 
    /*00008070*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00008074*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*00008078*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000807c*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*00008080*/ BL          0x0000000000008080          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00008084*/ MOV         R1, R4 
    /*00008088*/ MOV         R0, R8 
    /*0000808c*/ BL          0x000000000000808C          @ GDC_PutNodeToFreeList [R_ARM_CALL: .text+0xfe90] 
    /*00008090*/ LDR         R2, [R5, R7, LSL #2] 
    /*00008094*/ ADD         R1, SP, #12 
    /*00008098*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000809c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000080a0*/ LDR         R3, [R2, #12] 
    /*000080a4*/ SUB         R3, R3, #1 
    /*000080a8*/ STR         R3, [R2, #12] 
    /*000080ac*/ BL          0x00000000000080AC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000080b0*/ LDR         R0, [R5, R7, LSL #2] 
    /*000080b4*/ ADD         R0, R0, #24 
    /*000080b8*/ BL          0x00000000000080B8          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*000080bc*/ ADD         SP, SP, #20 
    /*000080c0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    Gdc_VgsCallBack_x80c4:
    /*000080c4*/ LDR         R1, [R5, #756]              @ 0x2f4 
    /*000080c8*/ CMP         R9, R1 
    /*000080cc*/ BEQ         Gdc_VgsCallBack_x7fe4
    /*000080d0*/ MOV         R4, R2 
    Gdc_VgsCallBack_x80d4:
    /*000080d4*/ CMP         R4, R3 
    /*000080d8*/ ADD         R5, R4, #4096               @ 0x1000 
    /*000080dc*/ LDR         R2, [R4] 
    /*000080e0*/ BNE         Gdc_VgsCallBack_x80c4
    /*000080e4*/ B           Gdc_VgsCallBack_x7ff0
    Gdc_VgsCallBack_x80e8:
    /*000080e8*/ MOV         R0, R7 
    /*000080ec*/ BL          0x0000000000005F18 
    /*000080f0*/ CMP         R0, #0 
    /*000080f4*/ BEQ         Gdc_VgsCallBack_x7f9c
    /*000080f8*/ ADD         SP, SP, #20 
    /*000080fc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    Gdc_VgsCallBack_x8100:
    /*00008100*/ STR         R0, [SP, #4] 
    /*00008104*/ MOVW        R3, #526                    @ 0x20e 
    /*00008108*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000810c*/ STR         R3, [SP] 
    /*00008110*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*00008114*/ LDR         R3, [PC, #76]               @ 0x0000000000008168 
    /*00008118*/ MOV         R1, #37                     @ 0x25 
    /*0000811c*/ MOV         R0, #3 
    /*00008120*/ BL          0x0000000000008120          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008124*/ B           Gdc_VgsCallBack_x7f90
    Gdc_VgsCallBack_x8128:
    /*00008128*/ MOVW        R3, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3058] 
    /*0000812c*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2694] 
    /*00008130*/ MOVT        R3, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3058] 
    /*00008134*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2694] 
    /*00008138*/ MOVW        R2, #549                    @ 0x225 
    /*0000813c*/ LDR         R1, [PC, #36]               @ 0x0000000000008168 
    /*00008140*/ BL          0x0000000000008140          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00008144*/ B           Gdc_VgsCallBack_x8008
    Gdc_VgsCallBack_x8148:
    /*00008148*/ MOVW        R3, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x306c] 
    /*0000814c*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2694] 
    /*00008150*/ MOVT        R3, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x306c] 
    /*00008154*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2694] 
    /*00008158*/ MOVW        R2, #553                    @ 0x229 
    /*0000815c*/ LDR         R1, [PC, #4]                @ 0x0000000000008168 
    /*00008160*/ BL          0x0000000000008160          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00008164*/ B           Gdc_VgsCallBack_x8010
    /*00008168*/ ANDEQ       R0, R0, R4, LSL R6 
FUNC_END Gdc_VgsCallBack


FUNC_BEGIN Gdc_B4ViCallBack
    /*0000816c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00008170*/ MOV         R6, R3 
    /*00008174*/ LDR         R9, [R6, #740]              @ 0x2e4 
    /*00008178*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000817c*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00008180*/ SUB         SP, SP, #20 
    /*00008184*/ CMP         R9, #63                     @ 0x3f 
    /*00008188*/ LDR         R5, [R3] 
    /*0000818c*/ BHI         Gdc_B4ViCallBack_x82e0
    Gdc_B4ViCallBack_x8190:
    /*00008190*/ LDR         R3, [R6, #764]              @ 0x2fc 
    /*00008194*/ LDR         R8, [R6, #648]              @ 0x288 
    /*00008198*/ CMP         R3, #4 
    /*0000819c*/ BEQ         Gdc_B4ViCallBack_x834c
    /*000081a0*/ MOV         R1, #18 
    /*000081a4*/ MOV         R0, R6 
    /*000081a8*/ BL          0x00000000000081A8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*000081ac*/ CMP         R0, #0 
    /*000081b0*/ BNE         Gdc_B4ViCallBack_x830c
    Gdc_B4ViCallBack_x81b4:
    /*000081b4*/ ADD         R7, SP, #12 
    /*000081b8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000081bc*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000081c0*/ LDR         FP, [R6, #736]              @ 0x2e0 
    /*000081c4*/ MOV         R1, R7 
    /*000081c8*/ ADD         SL, R5, #648                @ 0x288 
    /*000081cc*/ BL          0x00000000000081CC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000081d0*/ MOV         R3, R5 
    /*000081d4*/ LDR         R2, [R3, #660]!             @ 0x294 
    /*000081d8*/ CMP         R2, R3 
    /*000081dc*/ LDR         R4, [R2] 
    /*000081e0*/ BEQ         Gdc_B4ViCallBack_x8478
    /*000081e4*/ ADD         R5, R2, #4096               @ 0x1000 
    /*000081e8*/ LDR         R1, [R5, #756]              @ 0x2f4 
    /*000081ec*/ CMP         FP, R1 
    /*000081f0*/ BNE         Gdc_B4ViCallBack_x8208
    /*000081f4*/ B           Gdc_B4ViCallBack_x82f8
    Gdc_B4ViCallBack_x81f8:
    /*000081f8*/ LDR         R1, [R5, #756]              @ 0x2f4 
    /*000081fc*/ CMP         FP, R1 
    /*00008200*/ BEQ         Gdc_B4ViCallBack_x82fc
    /*00008204*/ MOV         R4, R2 
    Gdc_B4ViCallBack_x8208:
    /*00008208*/ CMP         R4, R3 
    /*0000820c*/ ADD         R5, R4, #4096               @ 0x1000 
    /*00008210*/ LDR         R2, [R4] 
    /*00008214*/ BNE         Gdc_B4ViCallBack_x81f8
    Gdc_B4ViCallBack_x8218:
    /*00008218*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000821c*/ MOV         R1, R7 
    /*00008220*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00008224*/ BL          0x0000000000008224          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008228*/ CMP         R4, #0 
    /*0000822c*/ BEQ         Gdc_B4ViCallBack_x8458
    Gdc_B4ViCallBack_x8230:
    /*00008230*/ LDR         R3, [R6, #764]              @ 0x2fc 
    /*00008234*/ BIC         R2, R3, #4 
    /*00008238*/ CMP         R2, #1 
    /*0000823c*/ BNE         Gdc_B4ViCallBack_x83fc
    Gdc_B4ViCallBack_x8240:
    /*00008240*/ LDR         FP, [R5, #760]              @ 0x2f8 
    /*00008244*/ CMP         FP, #0 
    /*00008248*/ BEQ         Gdc_B4ViCallBack_x8270
    /*0000824c*/ LDR         R3, [R6, #764]              @ 0x2fc 
    /*00008250*/ CMP         R3, #6 
    /*00008254*/ BEQ         Gdc_B4ViCallBack_x8424
    /*00008258*/ CMP         R3, #5 
    /*0000825c*/ BEQ         Gdc_B4ViCallBack_x8334
    Gdc_B4ViCallBack_x8260:
    /*00008260*/ ADD         R0, R6, #752                @ 0x2f0 
    /*00008264*/ MOV         R3, R6 
    /*00008268*/ LDM         R0, {R0, R1, R2} 
    /*0000826c*/ BLX         FP 
    Gdc_B4ViCallBack_x8270:
    /*00008270*/ MOV         R1, R7 
    /*00008274*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00008278*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000827c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00008280*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*00008284*/ BL          0x0000000000008284          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00008288*/ MOV         R1, R4 
    /*0000828c*/ MOV         R0, SL 
    /*00008290*/ BL          0x0000000000008290          @ GDC_PutNodeToFreeList [R_ARM_CALL: .text+0xfe90] 
    /*00008294*/ LDR         R2, [R5, R9, LSL #2] 
    /*00008298*/ MOV         R1, R7 
    /*0000829c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000082a0*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000082a4*/ LDR         R3, [R2, #8] 
    /*000082a8*/ SUB         R3, R3, #1 
    /*000082ac*/ STR         R3, [R2, #8] 
    /*000082b0*/ LDR         R3, [R6, #744]              @ 0x2e8 
    /*000082b4*/ CMP         R3, #1 
    /*000082b8*/ LDREQ       R2, [R5, R9, LSL #2] 
    /*000082bc*/ LDREQ       R3, [R2, #16] 
    /*000082c0*/ SUBEQ       R3, R3, #1 
    /*000082c4*/ STREQ       R3, [R2, #16] 
    /*000082c8*/ BL          0x00000000000082C8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000082cc*/ LDR         R0, [R5, R9, LSL #2] 
    /*000082d0*/ ADD         R0, R0, #24 
    /*000082d4*/ BL          0x00000000000082D4          @ osal_wakeup [R_ARM_CALL: +0x0] 
    Gdc_B4ViCallBack_x82d8:
    /*000082d8*/ ADD         SP, SP, #20 
    /*000082dc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    Gdc_B4ViCallBack_x82e0:
    /*000082e0*/ MOV         R0, R9 
    /*000082e4*/ BL          0x0000000000005F18 
    /*000082e8*/ CMP         R0, #0 
    /*000082ec*/ BEQ         Gdc_B4ViCallBack_x8190
    /*000082f0*/ ADD         SP, SP, #20 
    /*000082f4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    Gdc_B4ViCallBack_x82f8:
    /*000082f8*/ MOV         R4, R2 
    Gdc_B4ViCallBack_x82fc:
    /*000082fc*/ MOV         R1, R4 
    /*00008300*/ MOV         R0, SL 
    /*00008304*/ BL          0x0000000000008304          @ GDC_GetCurrentNodeFromBusyList [R_ARM_CALL: .text+0xff84] 
    /*00008308*/ B           Gdc_B4ViCallBack_x8218
    Gdc_B4ViCallBack_x830c:
    /*0000830c*/ STR         R0, [SP, #4] 
    /*00008310*/ MOVW        R3, #722                    @ 0x2d2 
    /*00008314*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30fc] 
    /*00008318*/ STR         R3, [SP] 
    /*0000831c*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30fc] 
    /*00008320*/ LDR         R3, [PC, #444]              @ 0x00000000000084e4 
    /*00008324*/ MOV         R1, #37                     @ 0x25 
    /*00008328*/ MOV         R0, #3 
    /*0000832c*/ BL          0x000000000000832C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008330*/ B           Gdc_B4ViCallBack_x81b4
    Gdc_B4ViCallBack_x8334:
    /*00008334*/ CMP         R8, #0 
    /*00008338*/ BEQ         Gdc_B4ViCallBack_x84c4
    Gdc_B4ViCallBack_x833c:
    /*0000833c*/ MOV         R3, #1 
    /*00008340*/ STRB        R3, [R8, #66]               @ 0x42 
    /*00008344*/ LDR         FP, [R5, #760]              @ 0x2f8 
    /*00008348*/ B           Gdc_B4ViCallBack_x8260
    Gdc_B4ViCallBack_x834c:
    /*0000834c*/ ADD         R7, SP, #12 
    /*00008350*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00008354*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00008358*/ LDR         R4, [R6, #736]              @ 0x2e0 
    /*0000835c*/ MOV         R1, R7 
    /*00008360*/ BL          0x0000000000008360          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00008364*/ MOV         R1, R5 
    /*00008368*/ LDR         R3, [R1, #660]!             @ 0x294 
    /*0000836c*/ CMP         R3, R1 
    /*00008370*/ BEQ         Gdc_B4ViCallBack_x83a8
    /*00008374*/ ADD         R2, R3, #4096               @ 0x1000 
    /*00008378*/ LDR         R2, [R2, #756]              @ 0x2f4 
    /*0000837c*/ CMP         R4, R2 
    /*00008380*/ BNE         Gdc_B4ViCallBack_x8394
    /*00008384*/ B           Gdc_B4ViCallBack_x83a8
    Gdc_B4ViCallBack_x8388:
    /*00008388*/ LDR         R2, [R2, #756]              @ 0x2f4 
    /*0000838c*/ CMP         R4, R2 
    /*00008390*/ BEQ         Gdc_B4ViCallBack_x83a8
    Gdc_B4ViCallBack_x8394:
    /*00008394*/ LDR         R3, [R3] 
    /*00008398*/ CMP         R3, R1 
    /*0000839c*/ ADD         R2, R3, #4096               @ 0x1000 
    /*000083a0*/ BNE         Gdc_B4ViCallBack_x8388
    /*000083a4*/ MOV         R3, R1 
    Gdc_B4ViCallBack_x83a8:
    /*000083a8*/ ADD         R4, R3, #4096               @ 0x1000 
    /*000083ac*/ MOV         R1, R7 
    /*000083b0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000083b4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000083b8*/ BL          0x00000000000083B8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000083bc*/ LDR         R3, [R4, #760]              @ 0x2f8 
    /*000083c0*/ CMP         R3, #0 
    /*000083c4*/ BEQ         Gdc_B4ViCallBack_x82d8
    /*000083c8*/ CMP         R8, #0 
    /*000083cc*/ BEQ         Gdc_B4ViCallBack_x8484
    Gdc_B4ViCallBack_x83d0:
    /*000083d0*/ ADD         R0, R6, #752                @ 0x2f0 
    /*000083d4*/ MOV         R3, #1 
    /*000083d8*/ MOV         R2, #0 
    /*000083dc*/ STRB        R3, [R8, #64]               @ 0x40 
    /*000083e0*/ STRB        R2, [R8, #66]               @ 0x42 
    /*000083e4*/ MOV         R3, R6 
    /*000083e8*/ LDR         R4, [R4, #760]              @ 0x2f8 
    /*000083ec*/ LDM         R0, {R0, R1, R2} 
    /*000083f0*/ BLX         R4 
    /*000083f4*/ ADD         SP, SP, #20 
    /*000083f8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    Gdc_B4ViCallBack_x83fc:
    /*000083fc*/ STR         R3, [SP, #4] 
    /*00008400*/ MOVW        R2, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3128] 
    /*00008404*/ MOV         R3, #744                    @ 0x2e8 
    /*00008408*/ MOVT        R2, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3128] 
    /*0000840c*/ STR         R3, [SP] 
    /*00008410*/ MOV         R1, #37                     @ 0x25 
    /*00008414*/ LDR         R3, [PC, #200]              @ 0x00000000000084e4 
    /*00008418*/ MOV         R0, #3 
    /*0000841c*/ BL          0x000000000000841C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008420*/ B           Gdc_B4ViCallBack_x8240
    Gdc_B4ViCallBack_x8424:
    /*00008424*/ CMP         R8, #0 
    /*00008428*/ BEQ         Gdc_B4ViCallBack_x84a4
    Gdc_B4ViCallBack_x842c:
    /*0000842c*/ LDR         R3, [R6, #340]              @ 0x154 
    /*00008430*/ MOV         R2, #1 
    /*00008434*/ MOV         R1, #0 
    /*00008438*/ STRH        R3, [R8] 
    /*0000843c*/ LDR         R3, [R6, #340]              @ 0x154 
    /*00008440*/ STRB        R1, [R8, #64]               @ 0x40 
    /*00008444*/ STRB        R2, [R8, #66]               @ 0x42 
    /*00008448*/ LSR         R3, R3, R2 
    /*0000844c*/ STRH        R3, [R8, #32] 
    /*00008450*/ LDR         FP, [R5, #760]              @ 0x2f8 
    /*00008454*/ B           Gdc_B4ViCallBack_x8260
    Gdc_B4ViCallBack_x8458:
    /*00008458*/ MOVW        R3, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3058] 
    /*0000845c*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2694] 
    /*00008460*/ MOVT        R3, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3058] 
    /*00008464*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2694] 
    /*00008468*/ MOV         R2, #740                    @ 0x2e4 
    /*0000846c*/ LDR         R1, [PC, #112]              @ 0x00000000000084e4 
    /*00008470*/ BL          0x0000000000008470          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00008474*/ B           Gdc_B4ViCallBack_x8230
    Gdc_B4ViCallBack_x8478:
    /*00008478*/ MOV         R4, R2 
    /*0000847c*/ ADD         R5, R2, #4096               @ 0x1000 
    /*00008480*/ B           Gdc_B4ViCallBack_x8218
    Gdc_B4ViCallBack_x8484:
    /*00008484*/ MOVW        R3, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30e0] 
    /*00008488*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2694] 
    /*0000848c*/ MOVT        R3, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30e0] 
    /*00008490*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2694] 
    /*00008494*/ MOVW        R2, #707                    @ 0x2c3 
    /*00008498*/ LDR         R1, [PC, #68]               @ 0x00000000000084e4 
    /*0000849c*/ BL          0x000000000000849C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000084a0*/ B           Gdc_B4ViCallBack_x83d0
    Gdc_B4ViCallBack_x84a4:
    /*000084a4*/ MOVW        R3, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30e0] 
    /*000084a8*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2694] 
    /*000084ac*/ MOVT        R3, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30e0] 
    /*000084b0*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2694] 
    /*000084b4*/ MOVW        R2, #754                    @ 0x2f2 
    /*000084b8*/ LDR         R1, [PC, #36]               @ 0x00000000000084e4 
    /*000084bc*/ BL          0x00000000000084BC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000084c0*/ B           Gdc_B4ViCallBack_x842c
    Gdc_B4ViCallBack_x84c4:
    /*000084c4*/ MOVW        R3, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30e0] 
    /*000084c8*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2694] 
    /*000084cc*/ MOVT        R3, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30e0] 
    /*000084d0*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2694] 
    /*000084d4*/ MOVW        R2, #763                    @ 0x2fb 
    /*000084d8*/ LDR         R1, [PC, #4]                @ 0x00000000000084e4 
    /*000084dc*/ BL          0x00000000000084DC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000084e0*/ B           Gdc_B4ViCallBack_x833c
    /*000084e4*/ ANDEQ       R0, R0, R4, LSR #12 
FUNC_END Gdc_B4ViCallBack


FUNC_BEGIN GDC_MiddleTaskCallBack
    /*000084e8*/ LDR         R2, [R3, #764]              @ 0x2fc 
    /*000084ec*/ CMP         R2, #4 
    /*000084f0*/ BXEQ        LR 
    /*000084f4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000084f8*/ MOV         R0, R3 
    /*000084fc*/ SUB         SP, SP, #12 
    /*00008500*/ MOV         R1, #18 
    /*00008504*/ BL          0x0000000000008504          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00008508*/ CMP         R0, #0 
    /*0000850c*/ BNE         GDC_MiddleTaskCallBack_x8518
    /*00008510*/ ADD         SP, SP, #12 
    /*00008514*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    GDC_MiddleTaskCallBack_x8518:
    /*00008518*/ MOVW        R3, #986                    @ 0x3da 
    /*0000851c*/ MOV         R1, #37                     @ 0x25 
    /*00008520*/ STR         R3, [SP] 
    /*00008524*/ MOVW        R2, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3160] 
    /*00008528*/ LDR         R3, [PC, #16]               @ 0x0000000000008540 
    /*0000852c*/ MOVT        R2, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3160] 
    /*00008530*/ MOV         R0, #3 
    /*00008534*/ BL          0x0000000000008534          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008538*/ ADD         SP, SP, #12 
    /*0000853c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00008540*/ ANDEQ       R0, R0, R8, LSR R6 
FUNC_END GDC_MiddleTaskCallBack


FUNC_BEGIN GDC_AddVb
    /*00008544*/ SUBS        R3, R0, #0 
    /*00008548*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000854c*/ SUB         SP, SP, #12 
    /*00008550*/ BEQ         GDC_AddVb_x85d8
    /*00008554*/ MOV         R0, #1 
    /*00008558*/ LDR         R4, [R3, #328]              @ 0x148 
    /*0000855c*/ LDRD        R6, [R3, #120]              @ 0x78 
    /*00008560*/ MOV         R5, R1 
    /*00008564*/ BL          0x0000000000008564          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00008568*/ MOV         R2, R6 
    /*0000856c*/ MOV         R3, R7 
    /*00008570*/ LDR         R1, [R0, #84]               @ 0x54 
    /*00008574*/ MOV         R0, R4 
    /*00008578*/ BLX         R1 
    /*0000857c*/ CMP         R0, #0 
    /*00008580*/ BEQ         GDC_AddVb_x85ac
    /*00008584*/ MOV         R0, #1 
    /*00008588*/ BL          0x0000000000008588          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000858c*/ STR         R5, [SP] 
    /*00008590*/ MOV         R2, R6 
    /*00008594*/ MOV         R3, R7 
    /*00008598*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*0000859c*/ MOV         R0, R4 
    /*000085a0*/ BLX         R1 
    GDC_AddVb_x85a4:
    /*000085a4*/ ADD         SP, SP, #12 
    /*000085a8*/ POP         {R4, R5, R6, R7, PC} 
    GDC_AddVb_x85ac:
    /*000085ac*/ MOVW        R3, #502                    @ 0x1f6 
    /*000085b0*/ MOVW        R2, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3188] 
    /*000085b4*/ STR         R3, [SP] 
    /*000085b8*/ MOVT        R2, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3188] 
    /*000085bc*/ LDR         R3, [PC, #64]               @ 0x0000000000008604 
    /*000085c0*/ MOV         R1, #37                     @ 0x25 
    /*000085c4*/ MOV         R0, #3 
    /*000085c8*/ BL          0x00000000000085C8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000085cc*/ MOVW        R0, #32771                  @ 0x8003 
    /*000085d0*/ MOVT        R0, #40997                  @ 0xa025 
    /*000085d4*/ B           GDC_AddVb_x85a4
    GDC_AddVb_x85d8:
    /*000085d8*/ MOV         R3, #488                    @ 0x1e8 
    /*000085dc*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f94] 
    /*000085e0*/ STR         R3, [SP] 
    /*000085e4*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f94] 
    /*000085e8*/ LDR         R3, [PC, #20]               @ 0x0000000000008604 
    /*000085ec*/ MOV         R1, #37                     @ 0x25 
    /*000085f0*/ MOV         R0, #3 
    /*000085f4*/ BL          0x00000000000085F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000085f8*/ MOVW        R0, #32774                  @ 0x8006 
    /*000085fc*/ MOVT        R0, #40997                  @ 0xa025 
    /*00008600*/ B           GDC_AddVb_x85a4
    /*00008604*/ ANDEQ       R0, R0, R0, ASR R6 
FUNC_END GDC_AddVb


FUNC_BEGIN GDC_ConVertGdcTaskInfoToVgsTaskInfo
    /*00008608*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000860c*/ MOV         R4, R1 
    /*00008610*/ MOV         R5, R0 
    /*00008614*/ MOV         R1, R0 
    /*00008618*/ MOV         R6, R2 
    /*0000861c*/ MOV         R0, R4 
    /*00008620*/ MOV         R2, #336                    @ 0x150 
    /*00008624*/ MOV         R8, R3 
    /*00008628*/ BL          0x0000000000008628          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000862c*/ MOV         R2, #336                    @ 0x150 
    /*00008630*/ ADD         R1, R5, #336                @ 0x150 
    /*00008634*/ ADD         R0, R4, #336                @ 0x150 
    /*00008638*/ BL          0x0000000000008638          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000863c*/ MOV         R3, #37                     @ 0x25 
    /*00008640*/ STR         R3, [R4, #724]              @ 0x2d4 
    /*00008644*/ ADD         R6, R6, #4096               @ 0x1000 
    /*00008648*/ LDR         R3, [R5, #756]              @ 0x2f4 
    /*0000864c*/ MOVW        R2, #0                      @ Gdc_VgsCallBack [R_ARM_MOVW_ABS_NC: .text+0x7f64] 
    /*00008650*/ MOVT        R2, #0                      @ Gdc_VgsCallBack [R_ARM_MOVT_ABS: .text+0x7f64] 
    /*00008654*/ ADD         IP, R4, #688                @ 0x2b0 
    /*00008658*/ MOV         R7, #0 
    /*0000865c*/ ASR         R9, R8, #31 
    /*00008660*/ STR         R3, [R4, #728]              @ 0x2d8 
    /*00008664*/ ADD         LR, R4, #672                @ 0x2a0 
    /*00008668*/ LDR         R3, [R5, #760]              @ 0x2f8 
    /*0000866c*/ STR         R2, [R4, #720]              @ 0x2d0 
    /*00008670*/ STR         R3, [R4, #732]              @ 0x2dc 
    /*00008674*/ LDR         R3, [R6, #756]              @ 0x2f4 
    /*00008678*/ STR         R7, [R4, #676]              @ 0x2a4 
    /*0000867c*/ STR         R3, [R4, #672]              @ 0x2a0 
    /*00008680*/ STRD        R8, [IP, #-8] 
    /*00008684*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END GDC_ConVertGdcTaskInfoToVgsTaskInfo


FUNC_BEGIN GetGDCCommCfg
    /*00008688*/ LDR         R3, [R0] 
    /*0000868c*/ CMP         R1, #0 
    /*00008690*/ STR         R3, [R2] 
    /*00008694*/ LDR         R3, [R0, #4] 
    /*00008698*/ STR         R3, [R2, #4] 
    /*0000869c*/ MOVEQ       R3, #8 
    /*000086a0*/ STREQ       R3, [R2, #8] 
    /*000086a4*/ BEQ         GetGDCCommCfg_x86bc
    /*000086a8*/ SUB         R3, R1, #1 
    /*000086ac*/ CMP         R3, #4 
    /*000086b0*/ BHI         GetGDCCommCfg_x86c4
    /*000086b4*/ MOV         R3, #10 
    /*000086b8*/ STR         R3, [R2, #8] 
    GetGDCCommCfg_x86bc:
    /*000086bc*/ MOV         R0, #0 
    /*000086c0*/ BX          LR 
    GetGDCCommCfg_x86c4:
    /*000086c4*/ MOV         R0, R1 
    /*000086c8*/ B           0x0000000000005F68 
FUNC_END GetGDCCommCfg


FUNC_BEGIN GDC_GetYUVFrmVbBlk
    /*000086cc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000086d0*/ MOV         R6, R0 
    /*000086d4*/ LDR         R3, [R6, #12] 
    /*000086d8*/ SUB         SP, SP, #100                @ 0x64 
    /*000086dc*/ LDR         LR, [R6, #20] 
    /*000086e0*/ MOV         R4, R1 
    /*000086e4*/ LDR         IP, [R6, #8] 
    /*000086e8*/ MOV         R0, #2 
    /*000086ec*/ LDR         R1, [R6, #16] 
    /*000086f0*/ MOV         R5, #0 
    /*000086f4*/ LDR         R2, [R6] 
    /*000086f8*/ STR         R3, [SP, #48]               @ 0x30 
    /*000086fc*/ LDR         R3, [R6, #4] 
    /*00008700*/ STR         LR, [SP, #44]               @ 0x2c 
    /*00008704*/ STR         IP, [SP, #24] 
    /*00008708*/ STR         R3, [SP, #32] 
    /*0000870c*/ STR         R1, [SP, #52]               @ 0x34 
    /*00008710*/ STR         R2, [SP, #28] 
    /*00008714*/ STR         R5, [SP, #8] 
    /*00008718*/ STR         R5, [SP, #56]               @ 0x38 
    /*0000871c*/ STR         R5, [SP, #40]               @ 0x28 
    /*00008720*/ STR         R5, [SP, #36]               @ 0x24 
    /*00008724*/ BL          0x0000000000008724          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00008728*/ LDR         R3, [R0, #120]              @ 0x78 
    /*0000872c*/ CMP         R3, R5 
    /*00008730*/ BEQ         GDC_GetYUVFrmVbBlk_x89b4
    /*00008734*/ MOV         R0, #2 
    /*00008738*/ BL          0x0000000000008738          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000873c*/ ADD         R1, SP, #60                 @ 0x3c 
    /*00008740*/ LDR         R3, [R0, #120]              @ 0x78 
    /*00008744*/ ADD         R0, SP, #24 
    /*00008748*/ BLX         R3 
    /*0000874c*/ MOV         R0, #2 
    /*00008750*/ BL          0x0000000000008750          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00008754*/ LDR         R0, [R0, #60]               @ 0x3c 
    /*00008758*/ CMP         R0, #0 
    /*0000875c*/ BEQ         GDC_GetYUVFrmVbBlk_x89dc
    /*00008760*/ MOV         R0, #2 
    /*00008764*/ STR         R5, [SP, #16] 
    /*00008768*/ STR         R5, [SP, #20] 
    /*0000876c*/ MOV         R8, #37                     @ 0x25 
    /*00008770*/ STR         R8, [SP, #12] 
    /*00008774*/ BL          0x0000000000008774          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00008778*/ ADD         R1, SP, #8 
    /*0000877c*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*00008780*/ ADD         R0, SP, #12 
    /*00008784*/ BLX         R3 
    /*00008788*/ SUBS        R5, R0, #0 
    /*0000878c*/ BNE         GDC_GetYUVFrmVbBlk_x895c
    /*00008790*/ MOV         R0, #1 
    /*00008794*/ BL          0x0000000000008794          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00008798*/ LDR         R3, [SP, #8] 
    /*0000879c*/ MOV         R2, #18 
    /*000087a0*/ MOV         R1, R5 
    /*000087a4*/ LDR         R7, [R0, #12] 
    /*000087a8*/ LDR         R0, [SP, #60]               @ 0x3c 
    /*000087ac*/ BLX         R7 
    /*000087b0*/ CMN         R0, #1 
    /*000087b4*/ MOV         R7, R0 
    /*000087b8*/ BEQ         GDC_GetYUVFrmVbBlk_x8984
    /*000087bc*/ MOV         R0, #1 
    /*000087c0*/ MOV         R9, #4 
    /*000087c4*/ BL          0x00000000000087C4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000087c8*/ LDR         R3, [R0, #40]               @ 0x28 
    /*000087cc*/ MOV         R0, R7 
    /*000087d0*/ BLX         R3 
    /*000087d4*/ LDR         R2, [SP, #28] 
    /*000087d8*/ LDR         R3, [SP, #32] 
    /*000087dc*/ STR         R8, [R4, #332]              @ 0x14c 
    /*000087e0*/ STM         R4, {R2, R3, R9} 
    /*000087e4*/ STR         R0, [R4, #328]              @ 0x148 
    /*000087e8*/ MOV         R0, #1 
    /*000087ec*/ BL          0x00000000000087EC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000087f0*/ LDR         R3, [R0, #100]              @ 0x64 
    /*000087f4*/ MOV         R0, R7 
    /*000087f8*/ BLX         R3 
    /*000087fc*/ MOV         R2, #64                     @ 0x40 
    /*00008800*/ MOV         R1, R0 
    /*00008804*/ ADD         R0, R4, #264                @ 0x108 
    /*00008808*/ BL          0x0000000000008808          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000880c*/ LDR         R3, [R6, #20] 
    /*00008810*/ MOV         R0, #1 
    /*00008814*/ STR         R3, [R4, #24] 
    /*00008818*/ LDR         R3, [R6, #12] 
    /*0000881c*/ STR         R3, [R4, #20] 
    /*00008820*/ LDR         R3, [R6, #16] 
    /*00008824*/ STR         R9, [R4, #8] 
    /*00008828*/ STR         R3, [R4, #16] 
    /*0000882c*/ LDR         R3, [R6, #8] 
    /*00008830*/ STR         R5, [R4, #28] 
    /*00008834*/ STR         R3, [R4, #12] 
    /*00008838*/ BL          0x0000000000008838          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000883c*/ LDR         R3, [R0, #52]               @ 0x34 
    /*00008840*/ MOV         R0, R7 
    /*00008844*/ BLX         R3 
    /*00008848*/ MOV         R3, R1 
    /*0000884c*/ LDR         R1, [SP, #72]               @ 0x48 
    /*00008850*/ MOV         R2, R0 
    /*00008854*/ STRD        R2, [R4, #72]               @ 0x48 
    /*00008858*/ ADDS        R2, R2, R1 
    /*0000885c*/ MOV         R0, #1 
    /*00008860*/ ADC         R3, R3, #0 
    /*00008864*/ STRD        R2, [R4, #80]               @ 0x50 
    /*00008868*/ BL          0x0000000000008868          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000886c*/ LDR         R3, [R0, #48]               @ 0x30 
    /*00008870*/ MOV         R0, R7 
    /*00008874*/ BLX         R3 
    /*00008878*/ LDR         R6, [SP, #68]               @ 0x44 
    /*0000887c*/ LDRD        SL, [R4, #72]               @ 0x48 
    /*00008880*/ MOV         R7, #0 
    /*00008884*/ LDR         IP, [SP, #72]               @ 0x48 
    /*00008888*/ MOV         R3, #0 
    /*0000888c*/ ADDS        SL, SL, R6 
    /*00008890*/ LDR         R2, [SP, #80]               @ 0x50 
    /*00008894*/ ADC         FP, FP, R7 
    /*00008898*/ LDR         LR, [SP, #64]               @ 0x40 
    /*0000889c*/ STRD        SL, [R4, #120]              @ 0x78 
    /*000088a0*/ STR         LR, [R4, #32] 
    /*000088a4*/ STR         LR, [R4, #36]               @ 0x24 
    /*000088a8*/ STR         LR, [R4, #40]               @ 0x28 
    /*000088ac*/ ADDS        R8, R0, R6 
    /*000088b0*/ STRD        R0, [R4, #96]               @ 0x60 
    /*000088b4*/ ADC         R9, R1, R7 
    /*000088b8*/ ADDS        R0, R0, IP 
    /*000088bc*/ ADC         R1, R1, #0 
    /*000088c0*/ LDR         R6, [SP, #92]               @ 0x5c 
    /*000088c4*/ STRD        R0, [R4, #104]              @ 0x68 
    /*000088c8*/ ADDS        R0, SL, R2 
    /*000088cc*/ ADC         R1, FP, R3 
    /*000088d0*/ ADDS        R2, R2, R8 
    /*000088d4*/ ADC         R3, R3, R9 
    /*000088d8*/ STRD        R0, [R4, #168]              @ 0xa8 
    /*000088dc*/ ADDS        R0, R0, R6 
    /*000088e0*/ MOV         R7, #0 
    /*000088e4*/ STRD        R2, [R4, #192]              @ 0xc0 
    /*000088e8*/ ADC         R1, R1, R7 
    /*000088ec*/ ADDS        R2, R2, R6 
    /*000088f0*/ LDR         R6, [SP, #84]               @ 0x54 
    /*000088f4*/ ADC         R3, R3, R7 
    /*000088f8*/ LDR         IP, [SP, #88]               @ 0x58 
    /*000088fc*/ STRD        R2, [R4, #200]              @ 0xc8 
    /*00008900*/ ADDS        SL, SL, R6 
    /*00008904*/ STRD        R2, [R4, #208]              @ 0xd0 
    /*00008908*/ MOV         R7, #0 
    /*0000890c*/ LDR         R3, [SP, #76]               @ 0x4c 
    /*00008910*/ ADC         FP, FP, R7 
    /*00008914*/ ADDS        R6, R6, R8 
    /*00008918*/ STRD        R8, [R4, #144]              @ 0x90 
    /*0000891c*/ ADC         R7, R7, R9 
    /*00008920*/ STRD        R0, [R4, #176]              @ 0xb0 
    /*00008924*/ STRD        R0, [R4, #184]              @ 0xb8 
    /*00008928*/ STRD        SL, [R4, #128]              @ 0x80 
    /*0000892c*/ STRD        SL, [R4, #136]              @ 0x88 
    /*00008930*/ STRD        R6, [R4, #152]              @ 0x98 
    /*00008934*/ STRD        R6, [R4, #160]              @ 0xa0 
    /*00008938*/ STR         R3, [R4, #44]               @ 0x2c 
    /*0000893c*/ STR         R3, [R4, #48]               @ 0x30 
    /*00008940*/ STR         R3, [R4, #52]               @ 0x34 
    /*00008944*/ STR         IP, [R4, #56]               @ 0x38 
    /*00008948*/ STR         IP, [R4, #60]               @ 0x3c 
    /*0000894c*/ STR         IP, [R4, #64]               @ 0x40 
    GDC_GetYUVFrmVbBlk_x8950:
    /*00008950*/ MOV         R0, R5 
    /*00008954*/ ADD         SP, SP, #100                @ 0x64 
    /*00008958*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_GetYUVFrmVbBlk_x895c:
    /*0000895c*/ MOVW        R3, #875                    @ 0x36b 
    /*00008960*/ MOV         R1, R8 
    /*00008964*/ STR         R3, [SP] 
    /*00008968*/ MOVW        R2, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3220] 
    /*0000896c*/ LDR         R3, [PC, #144]              @ 0x0000000000008a04 
    /*00008970*/ MOVT        R2, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3220] 
    /*00008974*/ MOV         R0, #3 
    /*00008978*/ MVN         R5, #0 
    /*0000897c*/ BL          0x000000000000897C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008980*/ B           GDC_GetYUVFrmVbBlk_x8950
    GDC_GetYUVFrmVbBlk_x8984:
    /*00008984*/ LDR         R3, [SP, #60]               @ 0x3c 
    /*00008988*/ MOVW        R0, #883                    @ 0x373 
    /*0000898c*/ MOV         R1, R8 
    /*00008990*/ STR         R0, [SP] 
    /*00008994*/ MOVW        R2, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3254] 
    /*00008998*/ MOV         R0, #3 
    /*0000899c*/ STR         R3, [SP, #4] 
    /*000089a0*/ MOVT        R2, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3254] 
    /*000089a4*/ LDR         R3, [PC, #88]               @ 0x0000000000008a04 
    /*000089a8*/ MOV         R5, R7 
    /*000089ac*/ BL          0x00000000000089AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000089b0*/ B           GDC_GetYUVFrmVbBlk_x8950
    GDC_GetYUVFrmVbBlk_x89b4:
    /*000089b4*/ MOVW        R3, #855                    @ 0x357 
    /*000089b8*/ MOVW        R2, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31b8] 
    /*000089bc*/ STR         R3, [SP] 
    /*000089c0*/ MOVT        R2, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31b8] 
    /*000089c4*/ LDR         R3, [PC, #56]               @ 0x0000000000008a04 
    /*000089c8*/ MOV         R1, #37                     @ 0x25 
    /*000089cc*/ MOV         R0, #3 
    /*000089d0*/ MVN         R5, #0 
    /*000089d4*/ BL          0x00000000000089D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000089d8*/ B           GDC_GetYUVFrmVbBlk_x8950
    GDC_GetYUVFrmVbBlk_x89dc:
    /*000089dc*/ MOVW        R3, #865                    @ 0x361 
    /*000089e0*/ MOVW        R2, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31ec] 
    /*000089e4*/ STR         R3, [SP] 
    /*000089e8*/ MOVT        R2, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31ec] 
    /*000089ec*/ LDR         R3, [PC, #16]               @ 0x0000000000008a04 
    /*000089f0*/ MOV         R1, #37                     @ 0x25 
    /*000089f4*/ MOVW        R5, #32777                  @ 0x8009 
    /*000089f8*/ BL          0x00000000000089F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000089fc*/ MOVT        R5, #40997                  @ 0xa025 
    /*00008a00*/ B           GDC_GetYUVFrmVbBlk_x8950
    /*00008a04*/ ANDEQ       R0, R0, IP, ASR R6 
FUNC_END GDC_GetYUVFrmVbBlk


FUNC_BEGIN GDC_GetFrmVbBlk
    /*00008a08*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00008a0c*/ SUB         SP, SP, #12 
    /*00008a10*/ LDR         R2, [R0, #8] 
    /*00008a14*/ SUB         R3, R2, #25 
    /*00008a18*/ CMP         R3, #15 
    /*00008a1c*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*00008a20*/ B           GDC_GetFrmVbBlk_x8a7c
    /*00008a24*/ ANDEQ       R8, R0, R0, ROR SL 
    /*00008a28*/ ANDEQ       R8, R0, R4, ROR #20 
    /*00008a2c*/ ANDEQ       R8, R0, IP, ROR SL 
    /*00008a30*/ ANDEQ       R8, R0, IP, ROR SL 
    /*00008a34*/ ANDEQ       R8, R0, IP, ROR SL 
    /*00008a38*/ ANDEQ       R8, R0, IP, ROR SL 
    /*00008a3c*/ ANDEQ       R8, R0, IP, ROR SL 
    /*00008a40*/ ANDEQ       R8, R0, IP, ROR SL 
    /*00008a44*/ ANDEQ       R8, R0, IP, ROR SL 
    /*00008a48*/ ANDEQ       R8, R0, IP, ROR SL 
    /*00008a4c*/ ANDEQ       R8, R0, IP, ROR SL 
    /*00008a50*/ ANDEQ       R8, R0, IP, ROR SL 
    /*00008a54*/ ANDEQ       R8, R0, IP, ROR SL 
    /*00008a58*/ ANDEQ       R8, R0, IP, ROR SL 
    /*00008a5c*/ ANDEQ       R8, R0, R0, ROR SL 
    /*00008a60*/ ANDEQ       R8, R0, R4, ROR #20 
    /*00008a64*/ LDR         R3, [R0, #16] 
    /*00008a68*/ CMP         R3, #0 
    /*00008a6c*/ BNE         GDC_GetFrmVbBlk_x8aac
    /*00008a70*/ ADD         SP, SP, #12 
    /*00008a74*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_GetFrmVbBlk_x8a78:
    /*00008a78*/ B           GDC_GetFrmVbBlk_x8a78       @ GDC_GetYUVFrmVbBlk [R_ARM_JUMP24: .text+0x86cc] 
    GDC_GetFrmVbBlk_x8a7c:
    /*00008a7c*/ MOVW        R3, #963                    @ 0x3c3 
    /*00008a80*/ STR         R2, [SP, #4] 
    /*00008a84*/ STR         R3, [SP] 
    /*00008a88*/ MOVW        R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32b4] 
    /*00008a8c*/ LDR         R3, [PC, #64]               @ 0x0000000000008ad4 
    /*00008a90*/ MOVT        R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32b4] 
    /*00008a94*/ MOV         R1, #37                     @ 0x25 
    /*00008a98*/ MOV         R0, #3 
    /*00008a9c*/ BL          0x0000000000008A9C          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_GetFrmVbBlk_x8aa0:
    /*00008aa0*/ MVN         R0, #0 
    /*00008aa4*/ ADD         SP, SP, #12 
    /*00008aa8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    GDC_GetFrmVbBlk_x8aac:
    /*00008aac*/ STR         R3, [SP, #4] 
    /*00008ab0*/ MOVW        R2, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3284] 
    /*00008ab4*/ MOV         R3, #956                    @ 0x3bc 
    /*00008ab8*/ MOVT        R2, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3284] 
    /*00008abc*/ STR         R3, [SP] 
    /*00008ac0*/ MOV         R1, #37                     @ 0x25 
    /*00008ac4*/ LDR         R3, [PC, #8]                @ 0x0000000000008ad4 
    /*00008ac8*/ MOV         R0, #3 
    /*00008acc*/ BL          0x0000000000008ACC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008ad0*/ B           GDC_GetFrmVbBlk_x8aa0
    /*00008ad4*/ ANDEQ       R0, R0, R0, ROR R6 
FUNC_END GDC_GetFrmVbBlk


FUNC_BEGIN GDC_MidProc
    /*00008ad8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00008adc*/ MOV         R4, R0 
    /*00008ae0*/ MOVW        R0, #0                      @ GDC_MiddleTaskCallBack [R_ARM_MOVW_ABS_NC: .text+0x84e8] 
    /*00008ae4*/ MOVT        R0, #0                      @ GDC_MiddleTaskCallBack [R_ARM_MOVT_ABS: .text+0x84e8] 
    /*00008ae8*/ STR         R0, [R4, #748]              @ 0x2ec 
    /*00008aec*/ SUB         SP, SP, #20 
    /*00008af0*/ LDR         R0, [R2, #4] 
    /*00008af4*/ CMP         R0, #1 
    /*00008af8*/ BEQ         GDC_MidProc_x8bc4
    GDC_MidProc_x8afc:
    /*00008afc*/ LDM         R4, {R0, R2} 
    /*00008b00*/ STR         R0, [R4, #336]              @ 0x150 
    /*00008b04*/ STR         R2, [R4, #340]              @ 0x154 
    GDC_MidProc_x8b08:
    /*00008b08*/ LDR         R3, [R4, #20] 
    /*00008b0c*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*00008b10*/ LDR         LR, [R4, #352]              @ 0x160 
    /*00008b14*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*00008b18*/ LDR         IP, [R4, #360]              @ 0x168 
    /*00008b1c*/ MOV         R6, #0 
    /*00008b20*/ STR         R3, [R4, #356]              @ 0x164 
    /*00008b24*/ STR         R6, [R5, #2432]             @ 0x980 
    /*00008b28*/ ADD         R6, R4, #336                @ 0x150 
    /*00008b2c*/ STR         IP, [R5, #2428]             @ 0x97c 
    /*00008b30*/ STR         LR, [R5, #2424]             @ 0x978 
    /*00008b34*/ LDR         IP, [R4, #348]              @ 0x15c 
    /*00008b38*/ LDR         LR, [R1, #16] 
    /*00008b3c*/ MOV         R1, R6 
    /*00008b40*/ STR         R0, [R5, #2408]             @ 0x968 
    /*00008b44*/ LDR         R0, [PC, #152]              @ 0x0000000000008be4 
    /*00008b48*/ STR         R2, [R5, #2412]             @ 0x96c 
    /*00008b4c*/ STR         R3, [R5, #2420]             @ 0x974 
    /*00008b50*/ STR         LR, [R5, #2436]             @ 0x984 
    /*00008b54*/ STR         IP, [R5, #2416]             @ 0x970 
    /*00008b58*/ BL          0x0000000000008B58          @ GDC_GetFrmVbBlk [R_ARM_CALL: .text+0x8a08] 
    /*00008b5c*/ SUBS        R7, R0, #0 
    /*00008b60*/ BNE         GDC_MidProc_x8b88
    /*00008b64*/ MOV         R0, #1 
    /*00008b68*/ BL          0x0000000000008B68          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00008b6c*/ MOV         R1, R4 
    /*00008b70*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*00008b74*/ MOV         R0, R6 
    /*00008b78*/ BLX         R3 
    /*00008b7c*/ MOV         R0, R7 
    /*00008b80*/ ADD         SP, SP, #20 
    /*00008b84*/ POP         {R4, R5, R6, R7, PC} 
    GDC_MidProc_x8b88:
    /*00008b88*/ LDR         R1, [R5, #2412]             @ 0x96c 
    /*00008b8c*/ MOVW        R0, #1035                   @ 0x40b 
    /*00008b90*/ LDR         R3, [R5, #2408]             @ 0x968 
    /*00008b94*/ MOVW        R2, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32e4] 
    /*00008b98*/ STR         R0, [SP] 
    /*00008b9c*/ MOVT        R2, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32e4] 
    /*00008ba0*/ STR         R1, [SP, #8] 
    /*00008ba4*/ MOV         R0, #3 
    /*00008ba8*/ STR         R3, [SP, #4] 
    /*00008bac*/ MOV         R1, #37                     @ 0x25 
    /*00008bb0*/ LDR         R3, [PC, #48]               @ 0x0000000000008be8 
    /*00008bb4*/ BL          0x0000000000008BB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008bb8*/ MOV         R0, R7 
    /*00008bbc*/ ADD         SP, SP, #20 
    /*00008bc0*/ POP         {R4, R5, R6, R7, PC} 
    GDC_MidProc_x8bc4:
    /*00008bc4*/ LDR         R2, [R2, #8] 
    /*00008bc8*/ CMP         R2, #0 
    /*00008bcc*/ BNE         GDC_MidProc_x8afc
    /*00008bd0*/ LDR         R0, [R3, #752]              @ 0x2f0 
    /*00008bd4*/ STR         R0, [R4, #336]              @ 0x150 
    /*00008bd8*/ LDR         R2, [R3, #756]              @ 0x2f4 
    /*00008bdc*/ STR         R2, [R4, #340]              @ 0x154 
    /*00008be0*/ B           GDC_MidProc_x8b08
    /*00008be4*/ MULEQ       R0, R0, SP 
    /*00008be8*/ ANDEQ       R0, R0, R0, LSL #13 
FUNC_END GDC_MidProc


FUNC_BEGIN GDC_ProcAllRotationEx
    /*00008bec*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00008bf0*/ MOV         R6, R1 
    /*00008bf4*/ LDR         R8, [R6, #12] 
    /*00008bf8*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00008bfc*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00008c00*/ MOV         R4, R0 
    /*00008c04*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*00008c08*/ SUB         SP, SP, #76                 @ 0x4c 
    /*00008c0c*/ ADD         R9, R4, #4096               @ 0x1000 
    /*00008c10*/ LDR         R5, [R1] 
    /*00008c14*/ CMP         R8, #63                     @ 0x3f 
    /*00008c18*/ STR         R3, [SP, #8] 
    /*00008c1c*/ MOV         FP, R2 
    /*00008c20*/ ADD         R5, R5, #648                @ 0x288 
    /*00008c24*/ STR         R0, [R9, #752]              @ 0x2f0 
    /*00008c28*/ SUB         SL, R4, #8 
    /*00008c2c*/ LDR         R3, [SP, #112]              @ 0x70 
    /*00008c30*/ BHI         GDC_ProcAllRotationEx_x8da4
    GDC_ProcAllRotationEx_x8c34:
    /*00008c34*/ LDR         R2, [R3, #212]              @ 0xd4 
    /*00008c38*/ MOV         R1, #18 
    /*00008c3c*/ LDR         R3, [R3, #216]              @ 0xd8 
    /*00008c40*/ MOV         R0, R4 
    /*00008c44*/ STR         R2, [SP, #60]               @ 0x3c 
    /*00008c48*/ STR         R3, [SP, #64]               @ 0x40 
    /*00008c4c*/ MOV         R3, #1 
    /*00008c50*/ STR         R3, [SP, #56]               @ 0x38 
    /*00008c54*/ MOV         R3, #0 
    /*00008c58*/ STR         R3, [SP, #68]               @ 0x44 
    /*00008c5c*/ BL          0x0000000000008C5C          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*00008c60*/ SUBS        R7, R0, #0 
    /*00008c64*/ BEQ         GDC_ProcAllRotationEx_x8ca4
    /*00008c68*/ MOVW        R3, #2236                   @ 0x8bc 
    /*00008c6c*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*00008c70*/ STR         R3, [SP] 
    /*00008c74*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*00008c78*/ STR         R7, [SP, #4] 
    /*00008c7c*/ MOV         R1, #37                     @ 0x25 
    /*00008c80*/ LDR         R3, [PC, #952]              @ 0x0000000000009040 
    /*00008c84*/ MOV         R0, #3 
    /*00008c88*/ BL          0x0000000000008C88          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProcAllRotationEx_x8c8c:
    /*00008c8c*/ MOV         R1, SL 
    /*00008c90*/ MOV         R0, R5 
    /*00008c94*/ BL          0x0000000000005E7C 
    GDC_ProcAllRotationEx_x8c98:
    /*00008c98*/ MOV         R0, R7 
    /*00008c9c*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00008ca0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcAllRotationEx_x8ca4:
    /*00008ca4*/ LDR         R3, [R6, #8] 
    /*00008ca8*/ ADD         IP, SP, #36                 @ 0x24 
    /*00008cac*/ LDR         R2, [R6, #4] 
    /*00008cb0*/ ADD         R0, SP, #32 
    /*00008cb4*/ LDR         R1, [R6] 
    /*00008cb8*/ STR         IP, [SP] 
    /*00008cbc*/ BL          0x0000000000008CBC          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*00008cc0*/ SUBS        R7, R0, #0 
    /*00008cc4*/ BNE         GDC_ProcAllRotationEx_x8dc0
    /*00008cc8*/ BL          0x0000000000005D48 
    /*00008ccc*/ SUBS        R3, R0, #0 
    /*00008cd0*/ STR         R3, [SP, #12] 
    /*00008cd4*/ BEQ         GDC_ProcAllRotationEx_x8ef8
    /*00008cd8*/ LDR         R3, [SP, #12] 
    /*00008cdc*/ MOV         R2, #776                    @ 0x308 
    /*00008ce0*/ MOV         R1, R4 
    /*00008ce4*/ ADD         R3, R3, #8 
    /*00008ce8*/ STR         R3, [SP, #16] 
    /*00008cec*/ MOV         R7, R3 
    /*00008cf0*/ MOV         R0, R3 
    /*00008cf4*/ BL          0x0000000000008CF4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00008cf8*/ MOV         R0, R7 
    /*00008cfc*/ LDR         R3, [SP, #8] 
    /*00008d00*/ MOV         R2, FP 
    /*00008d04*/ MOV         R1, R6 
    /*00008d08*/ BL          0x0000000000008D08          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*00008d0c*/ SUBS        R7, R0, #0 
    /*00008d10*/ BNE         GDC_ProcAllRotationEx_x8e68
    /*00008d14*/ LDR         R3, [FP, #24] 
    /*00008d18*/ CMP         R3, #0 
    /*00008d1c*/ BNE         GDC_ProcAllRotationEx_x8dd0
    /*00008d20*/ LDR         R3, [SP, #116]              @ 0x74 
    /*00008d24*/ MOV         R2, R6 
    /*00008d28*/ LDR         R1, [SP, #16] 
    /*00008d2c*/ LDR         R0, [SP, #32] 
    /*00008d30*/ BL          0x0000000000005FA8 
    /*00008d34*/ MOV         R7, R0 
    GDC_ProcAllRotationEx_x8d38:
    /*00008d38*/ CMP         R7, #0 
    /*00008d3c*/ BEQ         GDC_ProcAllRotationEx_x8df4
    /*00008d40*/ MOV         R1, #18 
    /*00008d44*/ LDR         R0, [SP, #16] 
    /*00008d48*/ BL          0x0000000000008D48          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00008d4c*/ LDR         R3, [SP, #12] 
    /*00008d50*/ MOV         R1, #18 
    /*00008d54*/ ADD         R0, R3, #344                @ 0x158 
    /*00008d58*/ BL          0x0000000000008D58          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00008d5c*/ MOVW        R3, #2284                   @ 0x8ec 
    /*00008d60*/ MOVW        R2, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x337c] 
    /*00008d64*/ STR         R3, [SP] 
    /*00008d68*/ STR         R7, [SP, #4] 
    /*00008d6c*/ MOVT        R2, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x337c] 
    /*00008d70*/ LDR         R3, [PC, #712]              @ 0x0000000000009040 
    /*00008d74*/ MOV         R1, #37                     @ 0x25 
    /*00008d78*/ MOV         R0, #3 
    /*00008d7c*/ BL          0x0000000000008D7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProcAllRotationEx_x8d80:
    /*00008d80*/ LDR         R1, [SP, #12] 
    /*00008d84*/ MOV         R0, R5 
    /*00008d88*/ BL          0x0000000000005E7C 
    GDC_ProcAllRotationEx_x8d8c:
    /*00008d8c*/ MOV         R3, #0 
    /*00008d90*/ LDR         R0, [SP, #32] 
    /*00008d94*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*00008d98*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*00008d9c*/ BL          0x0000000000008D9C          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*00008da0*/ B           GDC_ProcAllRotationEx_x8c8c
    GDC_ProcAllRotationEx_x8da4:
    /*00008da4*/ MOV         R0, R8 
    /*00008da8*/ STR         R3, [SP, #12] 
    /*00008dac*/ BL          0x0000000000005F18 
    /*00008db0*/ LDR         R3, [SP, #12] 
    /*00008db4*/ SUBS        R7, R0, #0 
    /*00008db8*/ BNE         GDC_ProcAllRotationEx_x8c8c
    /*00008dbc*/ B           GDC_ProcAllRotationEx_x8c34
    GDC_ProcAllRotationEx_x8dc0:
    /*00008dc0*/ MOV         R0, R4 
    /*00008dc4*/ MOV         R1, #18 
    /*00008dc8*/ BL          0x0000000000008DC8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00008dcc*/ B           GDC_ProcAllRotationEx_x8c8c
    GDC_ProcAllRotationEx_x8dd0:
    /*00008dd0*/ LDR         R2, [SP, #8] 
    /*00008dd4*/ MOV         R3, FP 
    /*00008dd8*/ LDR         R0, [SP, #32] 
    /*00008ddc*/ LDR         R1, [SP, #16] 
    /*00008de0*/ STR         R2, [SP] 
    /*00008de4*/ MOV         R2, R6 
    /*00008de8*/ BL          0x0000000000006630 
    /*00008dec*/ MOV         R7, R0 
    /*00008df0*/ B           GDC_ProcAllRotationEx_x8d38
    GDC_ProcAllRotationEx_x8df4:
    /*00008df4*/ LDR         R3, [SP, #12] 
    /*00008df8*/ MOV         R2, #336                    @ 0x150 
    /*00008dfc*/ LDR         R7, [SP, #16] 
    /*00008e00*/ ADD         R3, R3, #344                @ 0x158 
    /*00008e04*/ STR         R3, [SP, #20] 
    /*00008e08*/ MOV         R1, R3 
    /*00008e0c*/ MOV         R0, R7 
    /*00008e10*/ BL          0x0000000000008E10          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00008e14*/ MOV         R0, R7 
    /*00008e18*/ LDR         R3, [SP, #8] 
    /*00008e1c*/ MOV         R2, FP 
    /*00008e20*/ MOV         R1, R6 
    /*00008e24*/ STR         R7, [SP, #16] 
    /*00008e28*/ BL          0x0000000000008E28          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*00008e2c*/ SUBS        R7, R0, #0 
    /*00008e30*/ BEQ         GDC_ProcAllRotationEx_x8e9c
    /*00008e34*/ LDR         R0, [SP, #16] 
    /*00008e38*/ MOV         R1, #18 
    /*00008e3c*/ BL          0x0000000000008E3C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00008e40*/ MOVW        R3, #2297                   @ 0x8f9 
    /*00008e44*/ STR         R7, [SP, #4] 
    /*00008e48*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33c0] 
    /*00008e4c*/ STR         R3, [SP] 
    /*00008e50*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33c0] 
    /*00008e54*/ LDR         R3, [PC, #484]              @ 0x0000000000009040 
    /*00008e58*/ MOV         R1, #37                     @ 0x25 
    /*00008e5c*/ MOV         R0, #3 
    /*00008e60*/ BL          0x0000000000008E60          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008e64*/ B           GDC_ProcAllRotationEx_x8d80
    GDC_ProcAllRotationEx_x8e68:
    /*00008e68*/ MOV         R1, #18 
    /*00008e6c*/ MOV         R0, R4 
    /*00008e70*/ BL          0x0000000000008E70          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00008e74*/ MOVW        R3, #2267                   @ 0x8db 
    /*00008e78*/ STR         R7, [SP, #4] 
    /*00008e7c*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*00008e80*/ STR         R3, [SP] 
    /*00008e84*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*00008e88*/ LDR         R3, [PC, #432]              @ 0x0000000000009040 
    /*00008e8c*/ MOV         R1, #37                     @ 0x25 
    /*00008e90*/ MOV         R0, #3 
    /*00008e94*/ BL          0x0000000000008E94          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008e98*/ B           GDC_ProcAllRotationEx_x8d80
    GDC_ProcAllRotationEx_x8e9c:
    /*00008e9c*/ MOV         R3, FP 
    /*00008ea0*/ MOV         R2, R6 
    /*00008ea4*/ LDR         R1, [SP, #16] 
    /*00008ea8*/ LDR         R0, [SP, #32] 
    /*00008eac*/ BL          0x0000000000006F38 
    /*00008eb0*/ SUBS        R7, R0, #0 
    /*00008eb4*/ BEQ         GDC_ProcAllRotationEx_x8f30
    /*00008eb8*/ LDR         R0, [SP, #16] 
    /*00008ebc*/ MOV         R1, #18 
    /*00008ec0*/ BL          0x0000000000008EC0          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00008ec4*/ LDR         R0, [SP, #20] 
    /*00008ec8*/ MOV         R1, #18 
    /*00008ecc*/ BL          0x0000000000008ECC          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00008ed0*/ MOVW        R3, #2307                   @ 0x903 
    /*00008ed4*/ STR         R7, [SP, #4] 
    /*00008ed8*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33f0] 
    /*00008edc*/ STR         R3, [SP] 
    /*00008ee0*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33f0] 
    /*00008ee4*/ LDR         R3, [PC, #340]              @ 0x0000000000009040 
    /*00008ee8*/ MOV         R1, #37                     @ 0x25 
    /*00008eec*/ MOV         R0, #3 
    /*00008ef0*/ BL          0x0000000000008EF0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008ef4*/ B           GDC_ProcAllRotationEx_x8d80
    GDC_ProcAllRotationEx_x8ef8:
    /*00008ef8*/ MOV         R1, #18 
    /*00008efc*/ MOV         R0, R4 
    /*00008f00*/ BL          0x0000000000008F00          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00008f04*/ MOVW        R3, #2252                   @ 0x8cc 
    /*00008f08*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*00008f0c*/ STR         R3, [SP] 
    /*00008f10*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*00008f14*/ LDR         R3, [PC, #292]              @ 0x0000000000009040 
    /*00008f18*/ MOV         R1, #37                     @ 0x25 
    /*00008f1c*/ MOV         R0, #3 
    /*00008f20*/ MOVW        R7, #32781                  @ 0x800d 
    /*00008f24*/ BL          0x0000000000008F24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008f28*/ MOVT        R7, #40997                  @ 0xa025 
    /*00008f2c*/ B           GDC_ProcAllRotationEx_x8d8c
    GDC_ProcAllRotationEx_x8f30:
    /*00008f30*/ MOV         R2, #336                    @ 0x150 
    /*00008f34*/ LDR         R1, [SP, #20] 
    /*00008f38*/ MOV         R0, R4 
    /*00008f3c*/ STR         R7, [SP, #8] 
    /*00008f40*/ BL          0x0000000000008F40          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00008f44*/ LDR         R1, [SP, #12] 
    /*00008f48*/ MOV         R0, R5 
    /*00008f4c*/ BL          0x0000000000005E7C 
    /*00008f50*/ LDR         R0, [R9, #748]              @ 0x2ec 
    /*00008f54*/ MOV         R3, FP 
    /*00008f58*/ STR         R7, [R4, #744]              @ 0x2e8 
    /*00008f5c*/ MOV         R2, R6 
    /*00008f60*/ MOVW        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*00008f64*/ STR         R0, [R4, #736]              @ 0x2e0 
    /*00008f68*/ MOVT        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*00008f6c*/ STR         R8, [R4, #740]              @ 0x2e4 
    /*00008f70*/ STR         R1, [R4, #748]              @ 0x2ec 
    /*00008f74*/ MOV         R1, R4 
    /*00008f78*/ LDR         R0, [SP, #32] 
    /*00008f7c*/ BL          0x00000000000060CC 
    /*00008f80*/ SUBS        R7, R0, #0 
    /*00008f84*/ BEQ         GDC_ProcAllRotationEx_x8fbc
    /*00008f88*/ MOV         R1, #18 
    /*00008f8c*/ MOV         R0, R4 
    /*00008f90*/ BL          0x0000000000008F90          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00008f94*/ MOVW        R3, #2323                   @ 0x913 
    /*00008f98*/ STR         R7, [SP, #4] 
    /*00008f9c*/ MOVW        R2, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3428] 
    /*00008fa0*/ STR         R3, [SP] 
    /*00008fa4*/ MOVT        R2, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3428] 
    /*00008fa8*/ LDR         R3, [PC, #144]              @ 0x0000000000009040 
    /*00008fac*/ MOV         R1, #37                     @ 0x25 
    /*00008fb0*/ MOV         R0, #3 
    /*00008fb4*/ BL          0x0000000000008FB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008fb8*/ B           GDC_ProcAllRotationEx_x8d8c
    GDC_ProcAllRotationEx_x8fbc:
    /*00008fbc*/ ADD         R1, SP, #28 
    /*00008fc0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00008fc4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00008fc8*/ BL          0x0000000000008FC8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00008fcc*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*00008fd0*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*00008fd4*/ ADD         R1, SP, #28 
    /*00008fd8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00008fdc*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00008fe0*/ LDR         R2, [R3, R8, LSL #2] 
    /*00008fe4*/ LDR         R3, [R2, #8] 
    /*00008fe8*/ ADD         R3, R3, #1 
    /*00008fec*/ STR         R3, [R2, #8] 
    /*00008ff0*/ BL          0x0000000000008FF0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00008ff4*/ LDR         R0, [SP, #32] 
    /*00008ff8*/ BL          0x0000000000008FF8          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*00008ffc*/ SUBS        R7, R0, #0 
    /*00009000*/ BEQ         GDC_ProcAllRotationEx_x8c98
    /*00009004*/ STR         R7, [SP, #4] 
    /*00009008*/ MOVW        R3, #2335                   @ 0x91f 
    /*0000900c*/ MOV         R1, #37                     @ 0x25 
    /*00009010*/ STR         R3, [SP] 
    /*00009014*/ MOVW        R2, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3464] 
    /*00009018*/ LDR         R3, [PC, #32]               @ 0x0000000000009040 
    /*0000901c*/ MOVT        R2, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3464] 
    /*00009020*/ MOV         R0, #3 
    /*00009024*/ BL          0x0000000000009024          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009028*/ LDR         R3, [SP, #8] 
    /*0000902c*/ LDR         R0, [SP, #32] 
    /*00009030*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*00009034*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*00009038*/ BL          0x0000000000009038          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000903c*/ B           GDC_ProcAllRotationEx_x8c98
    /*00009040*/ ANDEQ       R0, R0, IP, LSL #13 
FUNC_END GDC_ProcAllRotationEx


FUNC_BEGIN GDC_ProcAllVgsEx
    /*00009044*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00009048*/ MOV         R7, R1 
    /*0000904c*/ LDR         R8, [R7, #12] 
    /*00009050*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00009054*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00009058*/ MOV         R4, R0 
    /*0000905c*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*00009060*/ SUB         SP, SP, #76                 @ 0x4c 
    /*00009064*/ ADD         FP, R4, #4096               @ 0x1000 
    /*00009068*/ LDR         R5, [R1] 
    /*0000906c*/ CMP         R8, #63                     @ 0x3f 
    /*00009070*/ MOV         SL, R2 
    /*00009074*/ STR         R3, [SP, #8] 
    /*00009078*/ ADD         R5, R5, #648                @ 0x288 
    /*0000907c*/ STR         R0, [FP, #752]              @ 0x2f0 
    /*00009080*/ SUB         R9, R4, #8 
    /*00009084*/ BHI         GDC_ProcAllVgsEx_x91f0
    GDC_ProcAllVgsEx_x9088:
    /*00009088*/ MOV         R1, #18 
    /*0000908c*/ MOV         R0, R4 
    /*00009090*/ MOV         R3, #1 
    /*00009094*/ STR         R3, [SP, #56]               @ 0x38 
    /*00009098*/ MOV         R3, #0 
    /*0000909c*/ STR         R3, [SP, #68]               @ 0x44 
    /*000090a0*/ STR         R3, [SP, #60]               @ 0x3c 
    /*000090a4*/ STR         R3, [SP, #64]               @ 0x40 
    /*000090a8*/ BL          0x00000000000090A8          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*000090ac*/ SUBS        R6, R0, #0 
    /*000090b0*/ BEQ         GDC_ProcAllVgsEx_x90f0
    /*000090b4*/ MOVW        R3, #2389                   @ 0x955 
    /*000090b8*/ MOVW        R2, #0                      @ .LC69 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3494] 
    /*000090bc*/ STR         R3, [SP] 
    /*000090c0*/ MOVT        R2, #0                      @ .LC69 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3494] 
    /*000090c4*/ STR         R6, [SP, #4] 
    /*000090c8*/ MOV         R1, #37                     @ 0x25 
    /*000090cc*/ LDR         R3, [PC, #928]              @ 0x0000000000009474 
    /*000090d0*/ MOV         R0, #3 
    /*000090d4*/ BL          0x00000000000090D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProcAllVgsEx_x90d8:
    /*000090d8*/ MOV         R1, R9 
    /*000090dc*/ MOV         R0, R5 
    /*000090e0*/ BL          0x0000000000005E7C 
    GDC_ProcAllVgsEx_x90e4:
    /*000090e4*/ MOV         R0, R6 
    /*000090e8*/ ADD         SP, SP, #76                 @ 0x4c 
    /*000090ec*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcAllVgsEx_x90f0:
    /*000090f0*/ LDR         R3, [R7, #8] 
    /*000090f4*/ ADD         IP, SP, #36                 @ 0x24 
    /*000090f8*/ LDR         R2, [R7, #4] 
    /*000090fc*/ ADD         R0, SP, #28 
    /*00009100*/ LDR         R1, [R7] 
    /*00009104*/ STR         IP, [SP] 
    /*00009108*/ BL          0x0000000000009108          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000910c*/ SUBS        R6, R0, #0 
    /*00009110*/ BNE         GDC_ProcAllVgsEx_x9204
    /*00009114*/ BL          0x0000000000005D48 
    /*00009118*/ SUBS        R3, R0, #0 
    /*0000911c*/ STR         R3, [SP, #12] 
    /*00009120*/ BEQ         GDC_ProcAllVgsEx_x9394
    /*00009124*/ LDR         R3, [SP, #12] 
    /*00009128*/ MOV         R2, #776                    @ 0x308 
    /*0000912c*/ MOV         R1, R4 
    /*00009130*/ ADD         R3, R3, #8 
    /*00009134*/ STR         R3, [SP, #16] 
    /*00009138*/ MOV         R6, R3 
    /*0000913c*/ MOV         R0, R3 
    /*00009140*/ BL          0x0000000000009140          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009144*/ MOV         R0, R6 
    /*00009148*/ LDR         R3, [SP, #8] 
    /*0000914c*/ MOV         R2, SL 
    /*00009150*/ MOV         R1, R7 
    /*00009154*/ BL          0x0000000000009154          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*00009158*/ SUBS        R6, R0, #0 
    /*0000915c*/ BNE         GDC_ProcAllVgsEx_x92ac
    /*00009160*/ LDR         R3, [SL, #24] 
    /*00009164*/ CMP         R3, #0 
    /*00009168*/ BNE         GDC_ProcAllVgsEx_x9214
    /*0000916c*/ LDR         R3, [SP, #112]              @ 0x70 
    /*00009170*/ MOV         R2, R7 
    /*00009174*/ LDR         R1, [SP, #16] 
    /*00009178*/ LDR         R0, [SP, #28] 
    /*0000917c*/ BL          0x0000000000005FA8 
    /*00009180*/ MOV         R6, R0 
    GDC_ProcAllVgsEx_x9184:
    /*00009184*/ CMP         R6, #0 
    /*00009188*/ BEQ         GDC_ProcAllVgsEx_x9238
    /*0000918c*/ MOV         R1, #18 
    /*00009190*/ LDR         R0, [SP, #16] 
    /*00009194*/ BL          0x0000000000009194          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00009198*/ LDR         R3, [SP, #12] 
    /*0000919c*/ MOV         R1, #18 
    /*000091a0*/ ADD         R0, R3, #344                @ 0x158 
    /*000091a4*/ BL          0x00000000000091A4          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*000091a8*/ MOVW        R3, #2437                   @ 0x985 
    /*000091ac*/ MOVW        R2, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3528] 
    /*000091b0*/ STR         R3, [SP] 
    /*000091b4*/ STR         R6, [SP, #4] 
    /*000091b8*/ MOVT        R2, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3528] 
    /*000091bc*/ LDR         R3, [PC, #688]              @ 0x0000000000009474 
    /*000091c0*/ MOV         R1, #37                     @ 0x25 
    /*000091c4*/ MOV         R0, #3 
    /*000091c8*/ BL          0x00000000000091C8          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProcAllVgsEx_x91cc:
    /*000091cc*/ LDR         R1, [SP, #12] 
    /*000091d0*/ MOV         R0, R5 
    /*000091d4*/ BL          0x0000000000005E7C 
    GDC_ProcAllVgsEx_x91d8:
    /*000091d8*/ MOV         R3, #0 
    /*000091dc*/ LDR         R0, [SP, #28] 
    /*000091e0*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*000091e4*/ STR         R3, [FP, #752]              @ 0x2f0 
    /*000091e8*/ BL          0x00000000000091E8          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*000091ec*/ B           GDC_ProcAllVgsEx_x90d8
    GDC_ProcAllVgsEx_x91f0:
    /*000091f0*/ MOV         R0, R8 
    /*000091f4*/ BL          0x0000000000005F18 
    /*000091f8*/ SUBS        R6, R0, #0 
    /*000091fc*/ BNE         GDC_ProcAllVgsEx_x90d8
    /*00009200*/ B           GDC_ProcAllVgsEx_x9088
    GDC_ProcAllVgsEx_x9204:
    /*00009204*/ MOV         R0, R4 
    /*00009208*/ MOV         R1, #18 
    /*0000920c*/ BL          0x000000000000920C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00009210*/ B           GDC_ProcAllVgsEx_x90d8
    GDC_ProcAllVgsEx_x9214:
    /*00009214*/ LDR         R2, [SP, #8] 
    /*00009218*/ MOV         R3, SL 
    /*0000921c*/ LDR         R0, [SP, #28] 
    /*00009220*/ LDR         R1, [SP, #16] 
    /*00009224*/ STR         R2, [SP] 
    /*00009228*/ MOV         R2, R7 
    /*0000922c*/ BL          0x0000000000006630 
    /*00009230*/ MOV         R6, R0 
    /*00009234*/ B           GDC_ProcAllVgsEx_x9184
    GDC_ProcAllVgsEx_x9238:
    /*00009238*/ LDR         R3, [SP, #12] 
    /*0000923c*/ MOV         R2, #336                    @ 0x150 
    /*00009240*/ LDR         R6, [SP, #16] 
    /*00009244*/ ADD         R3, R3, #344                @ 0x158 
    /*00009248*/ STR         R3, [SP, #20] 
    /*0000924c*/ MOV         R1, R3 
    /*00009250*/ MOV         R0, R6 
    /*00009254*/ BL          0x0000000000009254          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009258*/ MOV         R0, R6 
    /*0000925c*/ LDR         R3, [SP, #8] 
    /*00009260*/ MOV         R2, SL 
    /*00009264*/ MOV         R1, R7 
    /*00009268*/ STR         R6, [SP, #16] 
    /*0000926c*/ BL          0x000000000000926C          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*00009270*/ SUBS        R6, R0, #0 
    /*00009274*/ BEQ         GDC_ProcAllVgsEx_x92e0
    /*00009278*/ LDR         R0, [SP, #16] 
    /*0000927c*/ MOV         R1, #18 
    /*00009280*/ BL          0x0000000000009280          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00009284*/ MOVW        R3, #2449                   @ 0x991 
    /*00009288*/ STR         R6, [SP, #4] 
    /*0000928c*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*00009290*/ STR         R3, [SP] 
    /*00009294*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*00009298*/ LDR         R3, [PC, #468]              @ 0x0000000000009474 
    /*0000929c*/ MOV         R1, #37                     @ 0x25 
    /*000092a0*/ MOV         R0, #3 
    /*000092a4*/ BL          0x00000000000092A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000092a8*/ B           GDC_ProcAllVgsEx_x91cc
    GDC_ProcAllVgsEx_x92ac:
    /*000092ac*/ MOV         R1, #18 
    /*000092b0*/ MOV         R0, R4 
    /*000092b4*/ BL          0x00000000000092B4          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*000092b8*/ MOVW        R3, #2420                   @ 0x974 
    /*000092bc*/ STR         R6, [SP, #4] 
    /*000092c0*/ MOVW        R2, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34f4] 
    /*000092c4*/ STR         R3, [SP] 
    /*000092c8*/ MOVT        R2, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34f4] 
    /*000092cc*/ LDR         R3, [PC, #416]              @ 0x0000000000009474 
    /*000092d0*/ MOV         R1, #37                     @ 0x25 
    /*000092d4*/ MOV         R0, #3 
    /*000092d8*/ BL          0x00000000000092D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000092dc*/ B           GDC_ProcAllVgsEx_x91cc
    GDC_ProcAllVgsEx_x92e0:
    /*000092e0*/ LDR         IP, [SP, #12] 
    /*000092e4*/ MOV         R3, SL 
    /*000092e8*/ LDR         R0, [SL, #16] 
    /*000092ec*/ MOV         R2, R7 
    /*000092f0*/ ADD         R1, IP, #688                @ 0x2b0 
    /*000092f4*/ ADD         LR, IP, #704                @ 0x2c0 
    /*000092f8*/ STR         R6, [R1, #-4] 
    /*000092fc*/ MOV         SL, IP 
    /*00009300*/ STR         R0, [R1, #-8] 
    /*00009304*/ LDR         IP, [IP, #344]              @ 0x158 
    /*00009308*/ LDR         R0, [SP, #28] 
    /*0000930c*/ STR         IP, [SL, #688]              @ 0x2b0 
    /*00009310*/ MOVW        IP, #0                      @ Gdc_B4VgsCallBack [R_ARM_MOVW_ABS_NC: .text+0xd670] 
    /*00009314*/ STR         R6, [R1, #4] 
    /*00009318*/ MOVT        IP, #0                      @ Gdc_B4VgsCallBack [R_ARM_MOVT_ABS: .text+0xd670] 
    /*0000931c*/ LDR         R1, [SL, #348]              @ 0x15c 
    /*00009320*/ STR         R6, [LR, #-4] 
    /*00009324*/ STR         R1, [LR, #-8] 
    /*00009328*/ LDR         R7, [FP, #748]              @ 0x2ec 
    /*0000932c*/ LDR         R1, [SP, #16] 
    /*00009330*/ STR         R7, [SL, #704]              @ 0x2c0 
    /*00009334*/ MOV         R7, R6 
    /*00009338*/ STR         R6, [LR, #4] 
    /*0000933c*/ STR         R6, [SL, #716]              @ 0x2cc 
    /*00009340*/ STR         R8, [SL, #712]              @ 0x2c8 
    /*00009344*/ STR         IP, [SL, #756]              @ 0x2f4 
    /*00009348*/ BL          0x0000000000006F38 
    /*0000934c*/ SUBS        R6, R0, #0 
    /*00009350*/ BEQ         GDC_ProcAllVgsEx_x93cc
    /*00009354*/ LDR         R0, [SP, #16] 
    /*00009358*/ MOV         R1, #18 
    /*0000935c*/ BL          0x000000000000935C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00009360*/ LDR         R0, [SP, #20] 
    /*00009364*/ MOV         R1, #18 
    /*00009368*/ BL          0x0000000000009368          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000936c*/ MOVW        R3, #2466                   @ 0x9a2 
    /*00009370*/ STR         R6, [SP, #4] 
    /*00009374*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3558] 
    /*00009378*/ STR         R3, [SP] 
    /*0000937c*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3558] 
    /*00009380*/ LDR         R3, [PC, #236]              @ 0x0000000000009474 
    /*00009384*/ MOV         R1, #37                     @ 0x25 
    /*00009388*/ MOV         R0, #3 
    /*0000938c*/ BL          0x000000000000938C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009390*/ B           GDC_ProcAllVgsEx_x91cc
    GDC_ProcAllVgsEx_x9394:
    /*00009394*/ MOV         R1, #18 
    /*00009398*/ MOV         R0, R4 
    /*0000939c*/ BL          0x000000000000939C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*000093a0*/ MOVW        R3, #2405                   @ 0x965 
    /*000093a4*/ MOVW        R2, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34c4] 
    /*000093a8*/ STR         R3, [SP] 
    /*000093ac*/ MOVT        R2, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34c4] 
    /*000093b0*/ LDR         R3, [PC, #188]              @ 0x0000000000009474 
    /*000093b4*/ MOV         R1, #37                     @ 0x25 
    /*000093b8*/ MOV         R0, #3 
    /*000093bc*/ MOVW        R6, #32781                  @ 0x800d 
    /*000093c0*/ BL          0x00000000000093C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000093c4*/ MOVT        R6, #40997                  @ 0xa025 
    /*000093c8*/ B           GDC_ProcAllVgsEx_x91d8
    GDC_ProcAllVgsEx_x93cc:
    /*000093cc*/ ADD         R1, SP, #32 
    /*000093d0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000093d4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000093d8*/ BL          0x00000000000093D8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000093dc*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*000093e0*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*000093e4*/ ADD         R1, SP, #32 
    /*000093e8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000093ec*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000093f0*/ LDR         R2, [R3, R8, LSL #2] 
    /*000093f4*/ LDR         R3, [R2, #8] 
    /*000093f8*/ ADD         R3, R3, #1 
    /*000093fc*/ STR         R3, [R2, #8] 
    /*00009400*/ BL          0x0000000000009400          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009404*/ LDR         R0, [SP, #28] 
    /*00009408*/ BL          0x0000000000009408          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000940c*/ SUBS        R6, R0, #0 
    /*00009410*/ BEQ         GDC_ProcAllVgsEx_x9464
    /*00009414*/ LDR         R0, [SP, #20] 
    /*00009418*/ MOV         R1, #18 
    /*0000941c*/ BL          0x000000000000941C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00009420*/ STR         R6, [SP, #4] 
    /*00009424*/ MOVW        R3, #2479                   @ 0x9af 
    /*00009428*/ MOV         R1, #37                     @ 0x25 
    /*0000942c*/ STR         R3, [SP] 
    /*00009430*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*00009434*/ LDR         R3, [PC, #56]               @ 0x0000000000009474 
    /*00009438*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000943c*/ MOV         R0, #3 
    /*00009440*/ BL          0x0000000000009440          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009444*/ MOV         R0, R5 
    /*00009448*/ LDR         R1, [SP, #12] 
    /*0000944c*/ BL          0x0000000000005E7C 
    /*00009450*/ STR         R7, [R4, #748]              @ 0x2ec 
    /*00009454*/ LDR         R0, [SP, #28] 
    /*00009458*/ STR         R7, [FP, #752]              @ 0x2f0 
    /*0000945c*/ BL          0x000000000000945C          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*00009460*/ B           GDC_ProcAllVgsEx_x90e4
    GDC_ProcAllVgsEx_x9464:
    /*00009464*/ LDR         R1, [SP, #12] 
    /*00009468*/ MOV         R0, R5 
    /*0000946c*/ BL          0x0000000000005E7C 
    /*00009470*/ B           GDC_ProcAllVgsEx_x90e4
    /*00009474*/ ANDEQ       R0, R0, R4, LSR #13 
FUNC_END GDC_ProcAllVgsEx


FUNC_BEGIN GDC_ProcAll
    /*00009478*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000947c*/ LDR         IP, [R2, #16] 
    /*00009480*/ LDR         LR, [SP, #4] 
    /*00009484*/ CMP         IP, #0 
    /*00009488*/ LDR         IP, [SP, #8] 
    /*0000948c*/ BNE         GDC_ProcAll_x94a0
    /*00009490*/ STR         IP, [SP, #8] 
    /*00009494*/ STR         LR, [SP, #4] 
    /*00009498*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_ProcAll_x949c:
    /*0000949c*/ B           GDC_ProcAll_x949c           @ GDC_ProcAllRotationEx [R_ARM_JUMP24: .text+0x8bec] 
    GDC_ProcAll_x94a0:
    /*000094a0*/ STR         IP, [SP, #4] 
    /*000094a4*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_ProcAll_x94a8:
    /*000094a8*/ B           GDC_ProcAll_x94a8           @ GDC_ProcAllVgsEx [R_ARM_JUMP24: .text+0x9044] 
FUNC_END GDC_ProcAll


FUNC_BEGIN GDC_ProcDISLDCSpread
    /*000094ac*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000094b0*/ MOV         R7, R1 
    /*000094b4*/ LDR         R8, [R7, #12] 
    /*000094b8*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*000094bc*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*000094c0*/ MOV         R4, R0 
    /*000094c4*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*000094c8*/ SUB         SP, SP, #76                 @ 0x4c 
    /*000094cc*/ ADD         R9, R4, #4096               @ 0x1000 
    /*000094d0*/ LDR         R5, [R1] 
    /*000094d4*/ CMP         R8, #63                     @ 0x3f 
    /*000094d8*/ STR         R3, [SP, #12] 
    /*000094dc*/ MOV         FP, R2 
    /*000094e0*/ ADD         R5, R5, #648                @ 0x288 
    /*000094e4*/ STR         R0, [R9, #752]              @ 0x2f0 
    /*000094e8*/ SUB         SL, R4, #8 
    /*000094ec*/ LDR         R3, [SP, #112]              @ 0x70 
    /*000094f0*/ BHI         GDC_ProcDISLDCSpread_x9664
    GDC_ProcDISLDCSpread_x94f4:
    /*000094f4*/ LDR         R2, [R3, #212]              @ 0xd4 
    /*000094f8*/ MOV         R1, #18 
    /*000094fc*/ LDR         R3, [R3, #216]              @ 0xd8 
    /*00009500*/ MOV         R0, R4 
    /*00009504*/ STR         R2, [SP, #60]               @ 0x3c 
    /*00009508*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000950c*/ MOV         R3, #1 
    /*00009510*/ STR         R3, [SP, #56]               @ 0x38 
    /*00009514*/ MOV         R3, #0 
    /*00009518*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000951c*/ BL          0x000000000000951C          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*00009520*/ SUBS        R6, R0, #0 
    /*00009524*/ BEQ         GDC_ProcDISLDCSpread_x9564
    /*00009528*/ MOVW        R3, #2552                   @ 0x9f8 
    /*0000952c*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*00009530*/ STR         R3, [SP] 
    /*00009534*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*00009538*/ STR         R6, [SP, #4] 
    /*0000953c*/ MOV         R1, #37                     @ 0x25 
    /*00009540*/ LDR         R3, [PC, #748]              @ 0x0000000000009834 
    /*00009544*/ MOV         R0, #3 
    /*00009548*/ BL          0x0000000000009548          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProcDISLDCSpread_x954c:
    /*0000954c*/ MOV         R1, SL 
    /*00009550*/ MOV         R0, R5 
    /*00009554*/ BL          0x0000000000005E7C 
    GDC_ProcDISLDCSpread_x9558:
    /*00009558*/ MOV         R0, R6 
    /*0000955c*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00009560*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcDISLDCSpread_x9564:
    /*00009564*/ LDR         R3, [R7, #8] 
    /*00009568*/ ADD         IP, SP, #36                 @ 0x24 
    /*0000956c*/ LDR         R2, [R7, #4] 
    /*00009570*/ ADD         R0, SP, #32 
    /*00009574*/ LDR         R1, [R7] 
    /*00009578*/ STR         IP, [SP] 
    /*0000957c*/ BL          0x000000000000957C          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*00009580*/ SUBS        R6, R0, #0 
    /*00009584*/ BNE         GDC_ProcDISLDCSpread_x9680
    /*00009588*/ BL          0x0000000000005D48 
    /*0000958c*/ SUBS        R3, R0, #0 
    /*00009590*/ STR         R3, [SP, #16] 
    /*00009594*/ BEQ         GDC_ProcDISLDCSpread_x97fc
    /*00009598*/ LDR         R3, [SP, #16] 
    /*0000959c*/ MOV         R2, #776                    @ 0x308 
    /*000095a0*/ MOV         R1, R4 
    /*000095a4*/ ADD         R3, R3, #8 
    /*000095a8*/ STR         R3, [SP, #20] 
    /*000095ac*/ MOV         R6, R3 
    /*000095b0*/ MOV         R0, R3 
    /*000095b4*/ BL          0x00000000000095B4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000095b8*/ MOV         R0, R6 
    /*000095bc*/ LDR         R3, [SP, #12] 
    /*000095c0*/ MOV         R2, FP 
    /*000095c4*/ MOV         R1, R7 
    /*000095c8*/ BL          0x00000000000095C8          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*000095cc*/ SUBS        R6, R0, #0 
    /*000095d0*/ BNE         GDC_ProcDISLDCSpread_x9744
    /*000095d4*/ LDR         R3, [FP, #24] 
    /*000095d8*/ CMP         R3, #0 
    /*000095dc*/ BNE         GDC_ProcDISLDCSpread_x9690
    /*000095e0*/ LDR         R3, [SP, #116]              @ 0x74 
    /*000095e4*/ MOV         R2, R7 
    /*000095e8*/ LDR         R1, [SP, #20] 
    /*000095ec*/ LDR         R0, [SP, #32] 
    /*000095f0*/ BL          0x0000000000005FA8 
    /*000095f4*/ MOV         R6, R0 
    GDC_ProcDISLDCSpread_x95f8:
    /*000095f8*/ CMP         R6, #0 
    /*000095fc*/ BEQ         GDC_ProcDISLDCSpread_x96b4
    /*00009600*/ MOV         R1, #18 
    /*00009604*/ LDR         R0, [SP, #20] 
    /*00009608*/ BL          0x0000000000009608          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000960c*/ LDR         R3, [SP, #16] 
    /*00009610*/ MOV         R1, #18 
    /*00009614*/ ADD         R0, R3, #344                @ 0x158 
    /*00009618*/ BL          0x0000000000009618          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000961c*/ MOVW        R3, #2600                   @ 0xa28 
    /*00009620*/ MOVW        R2, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x337c] 
    /*00009624*/ STR         R3, [SP] 
    /*00009628*/ STR         R6, [SP, #4] 
    /*0000962c*/ MOVT        R2, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x337c] 
    /*00009630*/ LDR         R3, [PC, #508]              @ 0x0000000000009834 
    /*00009634*/ MOV         R1, #37                     @ 0x25 
    /*00009638*/ MOV         R0, #3 
    /*0000963c*/ BL          0x000000000000963C          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProcDISLDCSpread_x9640:
    /*00009640*/ LDR         R1, [SP, #16] 
    /*00009644*/ MOV         R0, R5 
    /*00009648*/ BL          0x0000000000005E7C 
    GDC_ProcDISLDCSpread_x964c:
    /*0000964c*/ MOV         R3, #0 
    /*00009650*/ LDR         R0, [SP, #32] 
    /*00009654*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*00009658*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*0000965c*/ BL          0x000000000000965C          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*00009660*/ B           GDC_ProcDISLDCSpread_x954c
    GDC_ProcDISLDCSpread_x9664:
    /*00009664*/ MOV         R0, R8 
    /*00009668*/ STR         R3, [SP, #16] 
    /*0000966c*/ BL          0x0000000000005F18 
    /*00009670*/ LDR         R3, [SP, #16] 
    /*00009674*/ SUBS        R6, R0, #0 
    /*00009678*/ BNE         GDC_ProcDISLDCSpread_x954c
    /*0000967c*/ B           GDC_ProcDISLDCSpread_x94f4
    GDC_ProcDISLDCSpread_x9680:
    /*00009680*/ MOV         R0, R4 
    /*00009684*/ MOV         R1, #18 
    /*00009688*/ BL          0x0000000000009688          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000968c*/ B           GDC_ProcDISLDCSpread_x954c
    GDC_ProcDISLDCSpread_x9690:
    /*00009690*/ LDR         R2, [SP, #12] 
    /*00009694*/ MOV         R3, FP 
    /*00009698*/ LDR         R0, [SP, #32] 
    /*0000969c*/ LDR         R1, [SP, #20] 
    /*000096a0*/ STR         R2, [SP] 
    /*000096a4*/ MOV         R2, R7 
    /*000096a8*/ BL          0x0000000000006630 
    /*000096ac*/ MOV         R6, R0 
    /*000096b0*/ B           GDC_ProcDISLDCSpread_x95f8
    GDC_ProcDISLDCSpread_x96b4:
    /*000096b4*/ LDR         R3, [SP, #16] 
    /*000096b8*/ MOV         R2, #336                    @ 0x150 
    /*000096bc*/ MOV         R0, R4 
    /*000096c0*/ STR         R6, [SP, #12] 
    /*000096c4*/ ADD         R1, R3, #344                @ 0x158 
    /*000096c8*/ BL          0x00000000000096C8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000096cc*/ LDR         R1, [SP, #16] 
    /*000096d0*/ MOV         R0, R5 
    /*000096d4*/ BL          0x0000000000005E7C 
    /*000096d8*/ LDR         R0, [R9, #748]              @ 0x2ec 
    /*000096dc*/ MOV         R3, FP 
    /*000096e0*/ STR         R6, [R4, #744]              @ 0x2e8 
    /*000096e4*/ MOV         R2, R7 
    /*000096e8*/ MOVW        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*000096ec*/ STR         R0, [R4, #736]              @ 0x2e0 
    /*000096f0*/ MOVT        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*000096f4*/ STR         R8, [R4, #740]              @ 0x2e4 
    /*000096f8*/ STR         R1, [R4, #748]              @ 0x2ec 
    /*000096fc*/ MOV         R1, R4 
    /*00009700*/ LDR         R0, [SP, #32] 
    /*00009704*/ BL          0x0000000000006F38 
    /*00009708*/ SUBS        R6, R0, #0 
    /*0000970c*/ BEQ         GDC_ProcDISLDCSpread_x9778
    /*00009710*/ MOV         R1, #18 
    /*00009714*/ MOV         R0, R4 
    /*00009718*/ BL          0x0000000000009718          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000971c*/ MOVW        R3, #2615                   @ 0xa37 
    /*00009720*/ STR         R6, [SP, #4] 
    /*00009724*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35c4] 
    /*00009728*/ STR         R3, [SP] 
    /*0000972c*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35c4] 
    /*00009730*/ LDR         R3, [PC, #252]              @ 0x0000000000009834 
    /*00009734*/ MOV         R1, #37                     @ 0x25 
    /*00009738*/ MOV         R0, #3 
    /*0000973c*/ BL          0x000000000000973C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009740*/ B           GDC_ProcDISLDCSpread_x964c
    GDC_ProcDISLDCSpread_x9744:
    /*00009744*/ LDR         R0, [SP, #20] 
    /*00009748*/ MOV         R1, #18 
    /*0000974c*/ BL          0x000000000000974C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00009750*/ MOVW        R3, #2583                   @ 0xa17 
    /*00009754*/ STR         R6, [SP, #4] 
    /*00009758*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*0000975c*/ STR         R3, [SP] 
    /*00009760*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*00009764*/ LDR         R3, [PC, #200]              @ 0x0000000000009834 
    /*00009768*/ MOV         R1, #37                     @ 0x25 
    /*0000976c*/ MOV         R0, #3 
    /*00009770*/ BL          0x0000000000009770          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009774*/ B           GDC_ProcDISLDCSpread_x9640
    GDC_ProcDISLDCSpread_x9778:
    /*00009778*/ ADD         R1, SP, #28 
    /*0000977c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00009780*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00009784*/ BL          0x0000000000009784          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009788*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000978c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*00009790*/ ADD         R1, SP, #28 
    /*00009794*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00009798*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000979c*/ LDR         R2, [R3, R8, LSL #2] 
    /*000097a0*/ LDR         R3, [R2, #8] 
    /*000097a4*/ ADD         R3, R3, #1 
    /*000097a8*/ STR         R3, [R2, #8] 
    /*000097ac*/ BL          0x00000000000097AC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000097b0*/ LDR         R0, [SP, #32] 
    /*000097b4*/ BL          0x00000000000097B4          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*000097b8*/ SUBS        R6, R0, #0 
    /*000097bc*/ BEQ         GDC_ProcDISLDCSpread_x9558
    /*000097c0*/ STR         R6, [SP, #4] 
    /*000097c4*/ MOVW        R3, #2627                   @ 0xa43 
    /*000097c8*/ MOV         R1, #37                     @ 0x25 
    /*000097cc*/ STR         R3, [SP] 
    /*000097d0*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*000097d4*/ LDR         R3, [PC, #88]               @ 0x0000000000009834 
    /*000097d8*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*000097dc*/ MOV         R0, #3 
    /*000097e0*/ BL          0x00000000000097E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000097e4*/ LDR         R3, [SP, #12] 
    /*000097e8*/ LDR         R0, [SP, #32] 
    /*000097ec*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*000097f0*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*000097f4*/ BL          0x00000000000097F4          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*000097f8*/ B           GDC_ProcDISLDCSpread_x9558
    GDC_ProcDISLDCSpread_x97fc:
    /*000097fc*/ MOV         R1, #18 
    /*00009800*/ MOV         R0, R4 
    /*00009804*/ BL          0x0000000000009804          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00009808*/ MOVW        R3, #2568                   @ 0xa08 
    /*0000980c*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*00009810*/ STR         R3, [SP] 
    /*00009814*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*00009818*/ LDR         R3, [PC, #20]               @ 0x0000000000009834 
    /*0000981c*/ MOV         R1, #37                     @ 0x25 
    /*00009820*/ MOV         R0, #3 
    /*00009824*/ MOVW        R6, #32781                  @ 0x800d 
    /*00009828*/ BL          0x0000000000009828          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000982c*/ MOVT        R6, #40997                  @ 0xa025 
    /*00009830*/ B           GDC_ProcDISLDCSpread_x964c
    /*00009834*/ @           <UNDEFINED> instruction: 0x000006b8 
FUNC_END GDC_ProcDISLDCSpread


FUNC_BEGIN GDC_ProcDISLDCRotationEx
    /*00009838*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000983c*/ MOV         R7, R1 
    /*00009840*/ LDR         R8, [R7, #12] 
    /*00009844*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00009848*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000984c*/ MOV         R4, R0 
    /*00009850*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*00009854*/ SUB         SP, SP, #76                 @ 0x4c 
    /*00009858*/ ADD         R9, R4, #4096               @ 0x1000 
    /*0000985c*/ LDR         R5, [R1] 
    /*00009860*/ CMP         R8, #63                     @ 0x3f 
    /*00009864*/ STR         R3, [SP, #12] 
    /*00009868*/ MOV         FP, R2 
    /*0000986c*/ ADD         R5, R5, #648                @ 0x288 
    /*00009870*/ STR         R0, [R9, #752]              @ 0x2f0 
    /*00009874*/ SUB         SL, R4, #8 
    /*00009878*/ LDR         R3, [SP, #112]              @ 0x70 
    /*0000987c*/ BHI         GDC_ProcDISLDCRotationEx_x99f0
    GDC_ProcDISLDCRotationEx_x9880:
    /*00009880*/ LDR         R2, [R3, #212]              @ 0xd4 
    /*00009884*/ MOV         R1, #18 
    /*00009888*/ LDR         R3, [R3, #216]              @ 0xd8 
    /*0000988c*/ MOV         R0, R4 
    /*00009890*/ STR         R2, [SP, #60]               @ 0x3c 
    /*00009894*/ STR         R3, [SP, #64]               @ 0x40 
    /*00009898*/ MOV         R3, #1 
    /*0000989c*/ STR         R3, [SP, #56]               @ 0x38 
    /*000098a0*/ MOV         R3, #0 
    /*000098a4*/ STR         R3, [SP, #68]               @ 0x44 
    /*000098a8*/ BL          0x00000000000098A8          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*000098ac*/ SUBS        R6, R0, #0 
    /*000098b0*/ BEQ         GDC_ProcDISLDCRotationEx_x98f0
    /*000098b4*/ MOVW        R3, #2682                   @ 0xa7a 
    /*000098b8*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*000098bc*/ STR         R3, [SP] 
    /*000098c0*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*000098c4*/ STR         R6, [SP, #4] 
    /*000098c8*/ MOV         R1, #37                     @ 0x25 
    /*000098cc*/ LDR         R3, [PC, #784]              @ 0x0000000000009be4 
    /*000098d0*/ MOV         R0, #3 
    /*000098d4*/ BL          0x00000000000098D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProcDISLDCRotationEx_x98d8:
    /*000098d8*/ MOV         R1, SL 
    /*000098dc*/ MOV         R0, R5 
    /*000098e0*/ BL          0x0000000000005E7C 
    GDC_ProcDISLDCRotationEx_x98e4:
    /*000098e4*/ MOV         R0, R6 
    /*000098e8*/ ADD         SP, SP, #76                 @ 0x4c 
    /*000098ec*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcDISLDCRotationEx_x98f0:
    /*000098f0*/ LDR         R3, [R7, #8] 
    /*000098f4*/ ADD         IP, SP, #36                 @ 0x24 
    /*000098f8*/ LDR         R2, [R7, #4] 
    /*000098fc*/ ADD         R0, SP, #32 
    /*00009900*/ LDR         R1, [R7] 
    /*00009904*/ STR         IP, [SP] 
    /*00009908*/ BL          0x0000000000009908          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000990c*/ SUBS        R6, R0, #0 
    /*00009910*/ BNE         GDC_ProcDISLDCRotationEx_x9a0c
    /*00009914*/ BL          0x0000000000005D48 
    /*00009918*/ SUBS        R3, R0, #0 
    /*0000991c*/ STR         R3, [SP, #16] 
    /*00009920*/ BEQ         GDC_ProcDISLDCRotationEx_x9bac
    /*00009924*/ LDR         R3, [SP, #16] 
    /*00009928*/ MOV         R2, #776                    @ 0x308 
    /*0000992c*/ MOV         R1, R4 
    /*00009930*/ ADD         R3, R3, #8 
    /*00009934*/ STR         R3, [SP, #20] 
    /*00009938*/ MOV         R6, R3 
    /*0000993c*/ MOV         R0, R3 
    /*00009940*/ BL          0x0000000000009940          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009944*/ MOV         R0, R6 
    /*00009948*/ LDR         R3, [SP, #12] 
    /*0000994c*/ MOV         R2, FP 
    /*00009950*/ MOV         R1, R7 
    /*00009954*/ BL          0x0000000000009954          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*00009958*/ SUBS        R6, R0, #0 
    /*0000995c*/ BNE         GDC_ProcDISLDCRotationEx_x9af4
    /*00009960*/ LDR         R3, [FP, #24] 
    /*00009964*/ CMP         R3, #0 
    /*00009968*/ BNE         GDC_ProcDISLDCRotationEx_x9a40
    /*0000996c*/ LDR         R3, [SP, #116]              @ 0x74 
    /*00009970*/ MOV         R2, R7 
    /*00009974*/ LDR         R1, [SP, #20] 
    /*00009978*/ LDR         R0, [SP, #32] 
    /*0000997c*/ BL          0x0000000000005FA8 
    /*00009980*/ MOV         R6, R0 
    GDC_ProcDISLDCRotationEx_x9984:
    /*00009984*/ CMP         R6, #0 
    /*00009988*/ BEQ         GDC_ProcDISLDCRotationEx_x9a64
    /*0000998c*/ MOV         R1, #18 
    /*00009990*/ LDR         R0, [SP, #20] 
    /*00009994*/ BL          0x0000000000009994          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00009998*/ LDR         R3, [SP, #16] 
    /*0000999c*/ MOV         R1, #18 
    /*000099a0*/ ADD         R0, R3, #344                @ 0x158 
    /*000099a4*/ BL          0x00000000000099A4          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*000099a8*/ MOVW        R3, #2731                   @ 0xaab 
    /*000099ac*/ MOVW        R2, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x363c] 
    /*000099b0*/ STR         R3, [SP] 
    /*000099b4*/ STR         R6, [SP, #4] 
    /*000099b8*/ MOVT        R2, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x363c] 
    /*000099bc*/ LDR         R3, [PC, #544]              @ 0x0000000000009be4 
    /*000099c0*/ MOV         R1, #37                     @ 0x25 
    /*000099c4*/ MOV         R0, #3 
    /*000099c8*/ BL          0x00000000000099C8          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProcDISLDCRotationEx_x99cc:
    /*000099cc*/ LDR         R1, [SP, #16] 
    /*000099d0*/ MOV         R0, R5 
    /*000099d4*/ BL          0x0000000000005E7C 
    GDC_ProcDISLDCRotationEx_x99d8:
    /*000099d8*/ MOV         R3, #0 
    /*000099dc*/ LDR         R0, [SP, #32] 
    /*000099e0*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*000099e4*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*000099e8*/ BL          0x00000000000099E8          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*000099ec*/ B           GDC_ProcDISLDCRotationEx_x98d8
    GDC_ProcDISLDCRotationEx_x99f0:
    /*000099f0*/ MOV         R0, R8 
    /*000099f4*/ STR         R3, [SP, #16] 
    /*000099f8*/ BL          0x0000000000005F18 
    /*000099fc*/ LDR         R3, [SP, #16] 
    /*00009a00*/ SUBS        R6, R0, #0 
    /*00009a04*/ BNE         GDC_ProcDISLDCRotationEx_x98d8
    /*00009a08*/ B           GDC_ProcDISLDCRotationEx_x9880
    GDC_ProcDISLDCRotationEx_x9a0c:
    /*00009a0c*/ MOV         R0, R4 
    /*00009a10*/ MOV         R1, #18 
    /*00009a14*/ BL          0x0000000000009A14          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00009a18*/ MOVW        R3, #2692                   @ 0xa84 
    /*00009a1c*/ STR         R6, [SP, #4] 
    /*00009a20*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3600] 
    /*00009a24*/ STR         R3, [SP] 
    /*00009a28*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3600] 
    /*00009a2c*/ LDR         R3, [PC, #432]              @ 0x0000000000009be4 
    /*00009a30*/ MOV         R1, #37                     @ 0x25 
    /*00009a34*/ MOV         R0, #3 
    /*00009a38*/ BL          0x0000000000009A38          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009a3c*/ B           GDC_ProcDISLDCRotationEx_x98d8
    GDC_ProcDISLDCRotationEx_x9a40:
    /*00009a40*/ LDR         R2, [SP, #12] 
    /*00009a44*/ MOV         R3, FP 
    /*00009a48*/ LDR         R0, [SP, #32] 
    /*00009a4c*/ LDR         R1, [SP, #20] 
    /*00009a50*/ STR         R2, [SP] 
    /*00009a54*/ MOV         R2, R7 
    /*00009a58*/ BL          0x0000000000006630 
    /*00009a5c*/ MOV         R6, R0 
    /*00009a60*/ B           GDC_ProcDISLDCRotationEx_x9984
    GDC_ProcDISLDCRotationEx_x9a64:
    /*00009a64*/ LDR         R3, [SP, #16] 
    /*00009a68*/ MOV         R2, #336                    @ 0x150 
    /*00009a6c*/ MOV         R0, R4 
    /*00009a70*/ STR         R6, [SP, #12] 
    /*00009a74*/ ADD         R1, R3, #344                @ 0x158 
    /*00009a78*/ BL          0x0000000000009A78          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009a7c*/ LDR         R1, [SP, #16] 
    /*00009a80*/ MOV         R0, R5 
    /*00009a84*/ BL          0x0000000000005E7C 
    /*00009a88*/ LDR         R0, [R9, #748]              @ 0x2ec 
    /*00009a8c*/ MOV         R3, FP 
    /*00009a90*/ STR         R6, [R4, #744]              @ 0x2e8 
    /*00009a94*/ MOV         R2, R7 
    /*00009a98*/ MOVW        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*00009a9c*/ STR         R0, [R4, #736]              @ 0x2e0 
    /*00009aa0*/ MOVT        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*00009aa4*/ STR         R8, [R4, #740]              @ 0x2e4 
    /*00009aa8*/ STR         R1, [R4, #748]              @ 0x2ec 
    /*00009aac*/ MOV         R1, R4 
    /*00009ab0*/ LDR         R0, [SP, #32] 
    /*00009ab4*/ BL          0x00000000000060CC 
    /*00009ab8*/ SUBS        R6, R0, #0 
    /*00009abc*/ BEQ         GDC_ProcDISLDCRotationEx_x9b28
    /*00009ac0*/ MOV         R1, #18 
    /*00009ac4*/ MOV         R0, R4 
    /*00009ac8*/ BL          0x0000000000009AC8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00009acc*/ MOVW        R3, #2746                   @ 0xaba 
    /*00009ad0*/ STR         R6, [SP, #4] 
    /*00009ad4*/ MOVW        R2, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3680] 
    /*00009ad8*/ STR         R3, [SP] 
    /*00009adc*/ MOVT        R2, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3680] 
    /*00009ae0*/ LDR         R3, [PC, #252]              @ 0x0000000000009be4 
    /*00009ae4*/ MOV         R1, #37                     @ 0x25 
    /*00009ae8*/ MOV         R0, #3 
    /*00009aec*/ BL          0x0000000000009AEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009af0*/ B           GDC_ProcDISLDCRotationEx_x99d8
    GDC_ProcDISLDCRotationEx_x9af4:
    /*00009af4*/ LDR         R0, [SP, #20] 
    /*00009af8*/ MOV         R1, #18 
    /*00009afc*/ BL          0x0000000000009AFC          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00009b00*/ MOVW        R3, #2714                   @ 0xa9a 
    /*00009b04*/ STR         R6, [SP, #4] 
    /*00009b08*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*00009b0c*/ STR         R3, [SP] 
    /*00009b10*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*00009b14*/ LDR         R3, [PC, #200]              @ 0x0000000000009be4 
    /*00009b18*/ MOV         R1, #37                     @ 0x25 
    /*00009b1c*/ MOV         R0, #3 
    /*00009b20*/ BL          0x0000000000009B20          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009b24*/ B           GDC_ProcDISLDCRotationEx_x99cc
    GDC_ProcDISLDCRotationEx_x9b28:
    /*00009b28*/ ADD         R1, SP, #28 
    /*00009b2c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00009b30*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00009b34*/ BL          0x0000000000009B34          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009b38*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*00009b3c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*00009b40*/ ADD         R1, SP, #28 
    /*00009b44*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00009b48*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00009b4c*/ LDR         R2, [R3, R8, LSL #2] 
    /*00009b50*/ LDR         R3, [R2, #8] 
    /*00009b54*/ ADD         R3, R3, #1 
    /*00009b58*/ STR         R3, [R2, #8] 
    /*00009b5c*/ BL          0x0000000000009B5C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009b60*/ LDR         R0, [SP, #32] 
    /*00009b64*/ BL          0x0000000000009B64          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*00009b68*/ SUBS        R6, R0, #0 
    /*00009b6c*/ BEQ         GDC_ProcDISLDCRotationEx_x98e4
    /*00009b70*/ STR         R6, [SP, #4] 
    /*00009b74*/ MOVW        R3, #2758                   @ 0xac6 
    /*00009b78*/ MOV         R1, #37                     @ 0x25 
    /*00009b7c*/ STR         R3, [SP] 
    /*00009b80*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*00009b84*/ LDR         R3, [PC, #88]               @ 0x0000000000009be4 
    /*00009b88*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*00009b8c*/ MOV         R0, #3 
    /*00009b90*/ BL          0x0000000000009B90          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009b94*/ LDR         R3, [SP, #12] 
    /*00009b98*/ LDR         R0, [SP, #32] 
    /*00009b9c*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*00009ba0*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*00009ba4*/ BL          0x0000000000009BA4          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*00009ba8*/ B           GDC_ProcDISLDCRotationEx_x98e4
    GDC_ProcDISLDCRotationEx_x9bac:
    /*00009bac*/ MOV         R1, #18 
    /*00009bb0*/ MOV         R0, R4 
    /*00009bb4*/ BL          0x0000000000009BB4          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00009bb8*/ MOVW        R3, #2700                   @ 0xa8c 
    /*00009bbc*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*00009bc0*/ STR         R3, [SP] 
    /*00009bc4*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*00009bc8*/ LDR         R3, [PC, #20]               @ 0x0000000000009be4 
    /*00009bcc*/ MOV         R1, #37                     @ 0x25 
    /*00009bd0*/ MOV         R0, #3 
    /*00009bd4*/ MOVW        R6, #32781                  @ 0x800d 
    /*00009bd8*/ BL          0x0000000000009BD8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009bdc*/ MOVT        R6, #40997                  @ 0xa025 
    /*00009be0*/ B           GDC_ProcDISLDCRotationEx_x99d8
    /*00009be4*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END GDC_ProcDISLDCRotationEx


FUNC_BEGIN GDC_ProcDISLDCRotationVgs
    /*00009be8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00009bec*/ MOV         R7, R1 
    /*00009bf0*/ LDR         R8, [R7, #12] 
    /*00009bf4*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00009bf8*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00009bfc*/ MOV         R4, R0 
    /*00009c00*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*00009c04*/ SUB         SP, SP, #76                 @ 0x4c 
    /*00009c08*/ ADD         R9, R4, #4096               @ 0x1000 
    /*00009c0c*/ LDR         R5, [R1] 
    /*00009c10*/ CMP         R8, #63                     @ 0x3f 
    /*00009c14*/ MOV         FP, R2 
    /*00009c18*/ STR         R3, [SP, #12] 
    /*00009c1c*/ ADD         R5, R5, #648                @ 0x288 
    /*00009c20*/ STR         R0, [R9, #752]              @ 0x2f0 
    /*00009c24*/ SUB         SL, R4, #8 
    /*00009c28*/ BHI         GDC_ProcDISLDCRotationVgs_x9de4
    GDC_ProcDISLDCRotationVgs_x9c2c:
    /*00009c2c*/ MOV         R1, #18 
    /*00009c30*/ MOV         R0, R4 
    /*00009c34*/ MOV         R3, #1 
    /*00009c38*/ STR         R3, [SP, #56]               @ 0x38 
    /*00009c3c*/ MOV         R3, #0 
    /*00009c40*/ STR         R3, [SP, #68]               @ 0x44 
    /*00009c44*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00009c48*/ STR         R3, [SP, #64]               @ 0x40 
    /*00009c4c*/ BL          0x0000000000009C4C          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*00009c50*/ SUBS        R6, R0, #0 
    /*00009c54*/ BEQ         GDC_ProcDISLDCRotationVgs_x9c94
    /*00009c58*/ MOVW        R3, #2811                   @ 0xafb 
    /*00009c5c*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*00009c60*/ STR         R3, [SP] 
    /*00009c64*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*00009c68*/ STR         R6, [SP, #4] 
    /*00009c6c*/ MOV         R1, #37                     @ 0x25 
    /*00009c70*/ LDR         R3, [PC, #756]              @ 0x0000000000009f6c 
    /*00009c74*/ MOV         R0, #3 
    /*00009c78*/ BL          0x0000000000009C78          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProcDISLDCRotationVgs_x9c7c:
    /*00009c7c*/ MOV         R1, SL 
    /*00009c80*/ MOV         R0, R5 
    /*00009c84*/ BL          0x0000000000005E7C 
    GDC_ProcDISLDCRotationVgs_x9c88:
    /*00009c88*/ MOV         R0, R6 
    /*00009c8c*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00009c90*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcDISLDCRotationVgs_x9c94:
    /*00009c94*/ LDR         R3, [R7, #8] 
    /*00009c98*/ ADD         IP, SP, #36                 @ 0x24 
    /*00009c9c*/ LDR         R2, [R7, #4] 
    /*00009ca0*/ ADD         R0, SP, #32 
    /*00009ca4*/ LDR         R1, [R7] 
    /*00009ca8*/ STR         IP, [SP] 
    /*00009cac*/ BL          0x0000000000009CAC          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*00009cb0*/ SUBS        R6, R0, #0 
    /*00009cb4*/ BNE         GDC_ProcDISLDCRotationVgs_x9df8
    /*00009cb8*/ BL          0x0000000000005D48 
    /*00009cbc*/ SUBS        R3, R0, #0 
    /*00009cc0*/ STR         R3, [SP, #16] 
    /*00009cc4*/ BEQ         GDC_ProcDISLDCRotationVgs_x9f34
    /*00009cc8*/ LDR         R3, [SP, #16] 
    /*00009ccc*/ MOV         R2, #776                    @ 0x308 
    /*00009cd0*/ MOV         R1, R4 
    /*00009cd4*/ ADD         R3, R3, #8 
    /*00009cd8*/ STR         R3, [SP, #20] 
    /*00009cdc*/ MOV         R6, R3 
    /*00009ce0*/ MOV         R0, R3 
    /*00009ce4*/ BL          0x0000000000009CE4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009ce8*/ MOV         R0, R6 
    /*00009cec*/ LDR         R3, [SP, #12] 
    /*00009cf0*/ MOV         R2, FP 
    /*00009cf4*/ MOV         R1, R7 
    /*00009cf8*/ BL          0x0000000000009CF8          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*00009cfc*/ SUBS        R6, R0, #0 
    /*00009d00*/ BNE         GDC_ProcDISLDCRotationVgs_x9ef0
    /*00009d04*/ LDR         IP, [SP, #16] 
    /*00009d08*/ LDR         R2, [FP, #16] 
    /*00009d0c*/ ADD         R0, IP, #704                @ 0x2c0 
    /*00009d10*/ LDR         R1, [IP, #344]              @ 0x158 
    /*00009d14*/ LDR         R3, [IP, #348]              @ 0x15c 
    /*00009d18*/ STR         R2, [IP, #680]              @ 0x2a8 
    /*00009d1c*/ ADD         R2, IP, #720                @ 0x2d0 
    /*00009d20*/ STR         R1, [IP, #688]              @ 0x2b0 
    /*00009d24*/ MOVW        R1, #0                      @ Gdc_B4VgsCallBack [R_ARM_MOVW_ABS_NC: .text+0xd670] 
    /*00009d28*/ STR         R6, [IP, #684]              @ 0x2ac 
    /*00009d2c*/ MOVT        R1, #0                      @ Gdc_B4VgsCallBack [R_ARM_MOVT_ABS: .text+0xd670] 
    /*00009d30*/ STR         R6, [IP, #692]              @ 0x2b4 
    /*00009d34*/ STR         R6, [R0, #-4] 
    /*00009d38*/ STR         R3, [R0, #-8] 
    /*00009d3c*/ LDR         R3, [R9, #748]              @ 0x2ec 
    /*00009d40*/ STR         R3, [IP, #704]              @ 0x2c0 
    /*00009d44*/ STR         R6, [R0, #4] 
    /*00009d48*/ STR         R8, [R2, #-8] 
    /*00009d4c*/ STR         R6, [R2, #-4] 
    /*00009d50*/ STR         R1, [IP, #756]              @ 0x2f4 
    /*00009d54*/ LDR         R3, [FP, #24] 
    /*00009d58*/ CMP         R3, #0 
    /*00009d5c*/ BNE         GDC_ProcDISLDCRotationVgs_x9e2c
    /*00009d60*/ MOV         R2, R7 
    /*00009d64*/ LDR         R3, [SP, #112]              @ 0x70 
    /*00009d68*/ LDR         R1, [SP, #20] 
    /*00009d6c*/ LDR         R0, [SP, #32] 
    /*00009d70*/ BL          0x0000000000005FA8 
    /*00009d74*/ MOV         R6, R0 
    GDC_ProcDISLDCRotationVgs_x9d78:
    /*00009d78*/ CMP         R6, #0 
    /*00009d7c*/ BEQ         GDC_ProcDISLDCRotationVgs_x9e50
    /*00009d80*/ MOV         R1, #18 
    /*00009d84*/ LDR         R0, [SP, #20] 
    /*00009d88*/ BL          0x0000000000009D88          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00009d8c*/ LDR         R3, [SP, #16] 
    /*00009d90*/ MOV         R1, #18 
    /*00009d94*/ ADD         R0, R3, #344                @ 0x158 
    /*00009d98*/ BL          0x0000000000009D98          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00009d9c*/ MOVW        R3, #2868                   @ 0xb34 
    /*00009da0*/ MOVW        R2, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x363c] 
    /*00009da4*/ STR         R3, [SP] 
    /*00009da8*/ STR         R6, [SP, #4] 
    /*00009dac*/ MOVT        R2, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x363c] 
    /*00009db0*/ LDR         R3, [PC, #436]              @ 0x0000000000009f6c 
    /*00009db4*/ MOV         R1, #37                     @ 0x25 
    /*00009db8*/ MOV         R0, #3 
    /*00009dbc*/ BL          0x0000000000009DBC          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProcDISLDCRotationVgs_x9dc0:
    /*00009dc0*/ LDR         R1, [SP, #16] 
    /*00009dc4*/ MOV         R0, R5 
    /*00009dc8*/ BL          0x0000000000005E7C 
    GDC_ProcDISLDCRotationVgs_x9dcc:
    /*00009dcc*/ MOV         R3, #0 
    /*00009dd0*/ LDR         R0, [SP, #32] 
    /*00009dd4*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*00009dd8*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*00009ddc*/ BL          0x0000000000009DDC          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*00009de0*/ B           GDC_ProcDISLDCRotationVgs_x9c7c
    GDC_ProcDISLDCRotationVgs_x9de4:
    /*00009de4*/ MOV         R0, R8 
    /*00009de8*/ BL          0x0000000000005F18 
    /*00009dec*/ SUBS        R6, R0, #0 
    /*00009df0*/ BNE         GDC_ProcDISLDCRotationVgs_x9c7c
    /*00009df4*/ B           GDC_ProcDISLDCRotationVgs_x9c2c
    GDC_ProcDISLDCRotationVgs_x9df8:
    /*00009df8*/ MOV         R0, R4 
    /*00009dfc*/ MOV         R1, #18 
    /*00009e00*/ BL          0x0000000000009E00          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00009e04*/ MOVW        R3, #2821                   @ 0xb05 
    /*00009e08*/ STR         R6, [SP, #4] 
    /*00009e0c*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3600] 
    /*00009e10*/ STR         R3, [SP] 
    /*00009e14*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3600] 
    /*00009e18*/ LDR         R3, [PC, #332]              @ 0x0000000000009f6c 
    /*00009e1c*/ MOV         R1, #37                     @ 0x25 
    /*00009e20*/ MOV         R0, #3 
    /*00009e24*/ BL          0x0000000000009E24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009e28*/ B           GDC_ProcDISLDCRotationVgs_x9c7c
    GDC_ProcDISLDCRotationVgs_x9e2c:
    /*00009e2c*/ LDR         R2, [SP, #12] 
    /*00009e30*/ MOV         R3, FP 
    /*00009e34*/ LDR         R0, [SP, #32] 
    /*00009e38*/ LDR         R1, [SP, #20] 
    /*00009e3c*/ STR         R2, [SP] 
    /*00009e40*/ MOV         R2, R7 
    /*00009e44*/ BL          0x0000000000006630 
    /*00009e48*/ MOV         R6, R0 
    /*00009e4c*/ B           GDC_ProcDISLDCRotationVgs_x9d78
    GDC_ProcDISLDCRotationVgs_x9e50:
    /*00009e50*/ ADD         R1, SP, #28 
    /*00009e54*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00009e58*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00009e5c*/ BL          0x0000000000009E5C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009e60*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*00009e64*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*00009e68*/ ADD         R1, SP, #28 
    /*00009e6c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00009e70*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00009e74*/ LDR         R2, [R3, R8, LSL #2] 
    /*00009e78*/ LDR         R3, [R2, #8] 
    /*00009e7c*/ ADD         R3, R3, #1 
    /*00009e80*/ STR         R3, [R2, #8] 
    /*00009e84*/ BL          0x0000000000009E84          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009e88*/ LDR         R0, [SP, #32] 
    /*00009e8c*/ BL          0x0000000000009E8C          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*00009e90*/ SUBS        R6, R0, #0 
    /*00009e94*/ BEQ         GDC_ProcDISLDCRotationVgs_x9f24
    /*00009e98*/ LDR         R7, [SP, #16] 
    /*00009e9c*/ MOV         R1, #18 
    /*00009ea0*/ ADD         R0, R7, #344                @ 0x158 
    /*00009ea4*/ BL          0x0000000000009EA4          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00009ea8*/ STR         R6, [SP, #4] 
    /*00009eac*/ MOVW        R3, #2881                   @ 0xb41 
    /*00009eb0*/ MOV         R1, #37                     @ 0x25 
    /*00009eb4*/ STR         R3, [SP] 
    /*00009eb8*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*00009ebc*/ LDR         R3, [PC, #168]              @ 0x0000000000009f6c 
    /*00009ec0*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*00009ec4*/ MOV         R0, #3 
    /*00009ec8*/ BL          0x0000000000009EC8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009ecc*/ MOV         R0, R5 
    /*00009ed0*/ MOV         R1, R7 
    /*00009ed4*/ BL          0x0000000000005E7C 
    /*00009ed8*/ MOV         R3, #0 
    /*00009edc*/ LDR         R0, [SP, #32] 
    /*00009ee0*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*00009ee4*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*00009ee8*/ BL          0x0000000000009EE8          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*00009eec*/ B           GDC_ProcDISLDCRotationVgs_x9c88
    GDC_ProcDISLDCRotationVgs_x9ef0:
    /*00009ef0*/ LDR         R0, [SP, #20] 
    /*00009ef4*/ MOV         R1, #18 
    /*00009ef8*/ BL          0x0000000000009EF8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00009efc*/ MOVW        R3, #2843                   @ 0xb1b 
    /*00009f00*/ STR         R6, [SP, #4] 
    /*00009f04*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*00009f08*/ STR         R3, [SP] 
    /*00009f0c*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*00009f10*/ LDR         R3, [PC, #84]               @ 0x0000000000009f6c 
    /*00009f14*/ MOV         R1, #37                     @ 0x25 
    /*00009f18*/ MOV         R0, #3 
    /*00009f1c*/ BL          0x0000000000009F1C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009f20*/ B           GDC_ProcDISLDCRotationVgs_x9dc0
    GDC_ProcDISLDCRotationVgs_x9f24:
    /*00009f24*/ LDR         R1, [SP, #16] 
    /*00009f28*/ MOV         R0, R5 
    /*00009f2c*/ BL          0x0000000000005E7C 
    /*00009f30*/ B           GDC_ProcDISLDCRotationVgs_x9c88
    GDC_ProcDISLDCRotationVgs_x9f34:
    /*00009f34*/ MOV         R1, #18 
    /*00009f38*/ MOV         R0, R4 
    /*00009f3c*/ BL          0x0000000000009F3C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*00009f40*/ MOVW        R3, #2829                   @ 0xb0d 
    /*00009f44*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*00009f48*/ STR         R3, [SP] 
    /*00009f4c*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*00009f50*/ LDR         R3, [PC, #20]               @ 0x0000000000009f6c 
    /*00009f54*/ MOV         R1, #37                     @ 0x25 
    /*00009f58*/ MOV         R0, #3 
    /*00009f5c*/ MOVW        R6, #32781                  @ 0x800d 
    /*00009f60*/ BL          0x0000000000009F60          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009f64*/ MOVT        R6, #40997                  @ 0xa025 
    /*00009f68*/ B           GDC_ProcDISLDCRotationVgs_x9dcc
    /*00009f6c*/ ANDEQ       R0, R0, IP, ROR #13 
FUNC_END GDC_ProcDISLDCRotationVgs


FUNC_BEGIN GDC_ProcDISLDCRotation
    /*00009f70*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00009f74*/ LDR         IP, [R2, #16] 
    /*00009f78*/ LDR         LR, [SP, #4] 
    /*00009f7c*/ CMP         IP, #0 
    /*00009f80*/ LDR         IP, [SP, #8] 
    /*00009f84*/ BNE         GDC_ProcDISLDCRotation_x9f98
    /*00009f88*/ STR         IP, [SP, #8] 
    /*00009f8c*/ STR         LR, [SP, #4] 
    /*00009f90*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_ProcDISLDCRotation_x9f94:
    /*00009f94*/ B           GDC_ProcDISLDCRotation_x9f94@ GDC_ProcDISLDCRotationEx [R_ARM_JUMP24: .text+0x9838] 
    GDC_ProcDISLDCRotation_x9f98:
    /*00009f98*/ STR         IP, [SP, #4] 
    /*00009f9c*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_ProcDISLDCRotation_x9fa0:
    /*00009fa0*/ B           GDC_ProcDISLDCRotation_x9fa0@ GDC_ProcDISLDCRotationVgs [R_ARM_JUMP24: .text+0x9be8] 
FUNC_END GDC_ProcDISLDCRotation


FUNC_BEGIN GDC_ProcDISLDC
    /*00009fa4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00009fa8*/ MOV         R7, R1 
    /*00009fac*/ LDR         R8, [R7, #12] 
    /*00009fb0*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00009fb4*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00009fb8*/ MOV         R4, R0 
    /*00009fbc*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*00009fc0*/ SUB         SP, SP, #68                 @ 0x44 
    /*00009fc4*/ ADD         R9, R4, #4096               @ 0x1000 
    /*00009fc8*/ LDR         R5, [R1] 
    /*00009fcc*/ CMP         R8, #63                     @ 0x3f 
    /*00009fd0*/ STR         R3, [SP, #8] 
    /*00009fd4*/ MOV         FP, R2 
    /*00009fd8*/ ADD         R5, R5, #648                @ 0x288 
    /*00009fdc*/ STR         R0, [R9, #752]              @ 0x2f0 
    /*00009fe0*/ SUB         SL, R4, #8 
    /*00009fe4*/ LDR         R3, [SP, #104]              @ 0x68 
    /*00009fe8*/ BHI         GDC_ProcDISLDC_xa118
    GDC_ProcDISLDC_x9fec:
    /*00009fec*/ LDR         R2, [R3, #212]              @ 0xd4 
    /*00009ff0*/ MOV         R1, #18 
    /*00009ff4*/ LDR         R3, [R3, #216]              @ 0xd8 
    /*00009ff8*/ MOV         R0, R4 
    /*00009ffc*/ STR         R2, [SP, #52]               @ 0x34 
    /*0000a000*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000a004*/ MOV         R3, #1 
    /*0000a008*/ STR         R3, [SP, #48]               @ 0x30 
    /*0000a00c*/ MOV         R3, #0 
    /*0000a010*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0000a014*/ BL          0x000000000000A014          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000a018*/ SUBS        R6, R0, #0 
    /*0000a01c*/ BEQ         GDC_ProcDISLDC_xa05c
    /*0000a020*/ MOVW        R3, #2950                   @ 0xb86 
    /*0000a024*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000a028*/ STR         R3, [SP] 
    /*0000a02c*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000a030*/ STR         R6, [SP, #4] 
    /*0000a034*/ MOV         R1, #37                     @ 0x25 
    /*0000a038*/ LDR         R3, [PC, #456]              @ 0x000000000000a208 
    /*0000a03c*/ MOV         R0, #3 
    /*0000a040*/ BL          0x000000000000A040          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProcDISLDC_xa044:
    /*0000a044*/ MOV         R1, SL 
    /*0000a048*/ MOV         R0, R5 
    /*0000a04c*/ BL          0x0000000000005E7C 
    GDC_ProcDISLDC_xa050:
    /*0000a050*/ MOV         R0, R6 
    /*0000a054*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000a058*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcDISLDC_xa05c:
    /*0000a05c*/ LDR         R3, [R7, #8] 
    /*0000a060*/ ADD         IP, SP, #28 
    /*0000a064*/ LDR         R2, [R7, #4] 
    /*0000a068*/ ADD         R0, SP, #24 
    /*0000a06c*/ LDR         R1, [R7] 
    /*0000a070*/ STR         IP, [SP] 
    /*0000a074*/ BL          0x000000000000A074          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000a078*/ SUBS        R6, R0, #0 
    /*0000a07c*/ BNE         GDC_ProcDISLDC_xa134
    /*0000a080*/ LDR         R2, [R9, #748]              @ 0x2ec 
    /*0000a084*/ MOVW        R3, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*0000a088*/ STR         R8, [R4, #740]              @ 0x2e4 
    /*0000a08c*/ MOVT        R3, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*0000a090*/ STR         R6, [R4, #744]              @ 0x2e8 
    /*0000a094*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000a098*/ STR         R2, [R4, #736]              @ 0x2e0 
    /*0000a09c*/ LDR         R3, [FP, #24] 
    /*0000a0a0*/ CMP         R3, #0 
    /*0000a0a4*/ BEQ         GDC_ProcDISLDC_xa1ec
    /*0000a0a8*/ LDR         R2, [SP, #8] 
    /*0000a0ac*/ MOV         R3, FP 
    /*0000a0b0*/ LDR         R0, [SP, #24] 
    /*0000a0b4*/ MOV         R1, R4 
    /*0000a0b8*/ STR         R2, [SP] 
    /*0000a0bc*/ MOV         R2, R7 
    /*0000a0c0*/ BL          0x0000000000006630 
    /*0000a0c4*/ MOV         R6, R0 
    GDC_ProcDISLDC_xa0c8:
    /*0000a0c8*/ CMP         R6, #0 
    /*0000a0cc*/ BEQ         GDC_ProcDISLDC_xa168
    /*0000a0d0*/ MOV         R1, #18 
    /*0000a0d4*/ MOV         R0, R4 
    /*0000a0d8*/ BL          0x000000000000A0D8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000a0dc*/ STR         R6, [SP, #4] 
    /*0000a0e0*/ MOVW        R3, #2977                   @ 0xba1 
    /*0000a0e4*/ MOV         R1, #37                     @ 0x25 
    /*0000a0e8*/ STR         R3, [SP] 
    /*0000a0ec*/ MOVW        R2, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3704] 
    /*0000a0f0*/ LDR         R3, [PC, #272]              @ 0x000000000000a208 
    /*0000a0f4*/ MOVT        R2, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3704] 
    /*0000a0f8*/ MOV         R0, #3 
    /*0000a0fc*/ BL          0x000000000000A0FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a100*/ MOV         R3, #0 
    /*0000a104*/ LDR         R0, [SP, #24] 
    /*0000a108*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000a10c*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*0000a110*/ BL          0x000000000000A110          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000a114*/ B           GDC_ProcDISLDC_xa044
    GDC_ProcDISLDC_xa118:
    /*0000a118*/ MOV         R0, R8 
    /*0000a11c*/ STR         R3, [SP, #12] 
    /*0000a120*/ BL          0x0000000000005F18 
    /*0000a124*/ LDR         R3, [SP, #12] 
    /*0000a128*/ SUBS        R6, R0, #0 
    /*0000a12c*/ BNE         GDC_ProcDISLDC_xa044
    /*0000a130*/ B           GDC_ProcDISLDC_x9fec
    GDC_ProcDISLDC_xa134:
    /*0000a134*/ MOV         R0, R4 
    /*0000a138*/ MOV         R1, #18 
    /*0000a13c*/ BL          0x000000000000A13C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000a140*/ MOVW        R3, #2959                   @ 0xb8f 
    /*0000a144*/ STR         R6, [SP, #4] 
    /*0000a148*/ MOVW        R2, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x36c8] 
    /*0000a14c*/ STR         R3, [SP] 
    /*0000a150*/ MOVT        R2, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x36c8] 
    /*0000a154*/ LDR         R3, [PC, #172]              @ 0x000000000000a208 
    /*0000a158*/ MOV         R1, #37                     @ 0x25 
    /*0000a15c*/ MOV         R0, #3 
    /*0000a160*/ BL          0x000000000000A160          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a164*/ B           GDC_ProcDISLDC_xa044
    GDC_ProcDISLDC_xa168:
    /*0000a168*/ ADD         R1, SP, #20 
    /*0000a16c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000a170*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000a174*/ BL          0x000000000000A174          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000a178*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000a17c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000a180*/ ADD         R1, SP, #20 
    /*0000a184*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000a188*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000a18c*/ LDR         R2, [R3, R8, LSL #2] 
    /*0000a190*/ LDR         R3, [R2, #8] 
    /*0000a194*/ ADD         R3, R3, #1 
    /*0000a198*/ STR         R3, [R2, #8] 
    /*0000a19c*/ BL          0x000000000000A19C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000a1a0*/ LDR         R0, [SP, #24] 
    /*0000a1a4*/ BL          0x000000000000A1A4          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000a1a8*/ SUBS        R6, R0, #0 
    /*0000a1ac*/ BEQ         GDC_ProcDISLDC_xa050
    /*0000a1b0*/ STR         R6, [SP, #4] 
    /*0000a1b4*/ MOVW        R3, #2989                   @ 0xbad 
    /*0000a1b8*/ MOV         R1, #37                     @ 0x25 
    /*0000a1bc*/ STR         R3, [SP] 
    /*0000a1c0*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000a1c4*/ LDR         R3, [PC, #60]               @ 0x000000000000a208 
    /*0000a1c8*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000a1cc*/ MOV         R0, #3 
    /*0000a1d0*/ BL          0x000000000000A1D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a1d4*/ MOV         R3, #0 
    /*0000a1d8*/ LDR         R0, [SP, #24] 
    /*0000a1dc*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000a1e0*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*0000a1e4*/ BL          0x000000000000A1E4          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000a1e8*/ B           GDC_ProcDISLDC_xa050
    GDC_ProcDISLDC_xa1ec:
    /*0000a1ec*/ MOV         R2, R7 
    /*0000a1f0*/ LDR         R3, [SP, #108]              @ 0x6c 
    /*0000a1f4*/ MOV         R1, R4 
    /*0000a1f8*/ LDR         R0, [SP, #24] 
    /*0000a1fc*/ BL          0x0000000000005FA8 
    /*0000a200*/ MOV         R6, R0 
    /*0000a204*/ B           GDC_ProcDISLDC_xa0c8
    /*0000a208*/ ANDEQ       R0, R0, R8, LSL #14 
FUNC_END GDC_ProcDISLDC


FUNC_BEGIN GDC_ProDISSpreadRotationEx
    /*0000a20c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000a210*/ MOV         R7, R1 
    /*0000a214*/ LDR         R9, [R7, #12] 
    /*0000a218*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000a21c*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000a220*/ MOV         R4, R0 
    /*0000a224*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000a228*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0000a22c*/ ADD         SL, R4, #4096               @ 0x1000 
    /*0000a230*/ LDR         R5, [R1] 
    /*0000a234*/ CMP         R9, #63                     @ 0x3f 
    /*0000a238*/ STR         R2, [SP, #8] 
    /*0000a23c*/ STR         R3, [SP, #12] 
    /*0000a240*/ ADD         R5, R5, #648                @ 0x288 
    /*0000a244*/ STR         R0, [SL, #752]              @ 0x2f0 
    /*0000a248*/ SUB         FP, R4, #8 
    /*0000a24c*/ LDR         R8, [SP, #112]              @ 0x70 
    /*0000a250*/ BHI         GDC_ProDISSpreadRotationEx_xa3fc
    GDC_ProDISSpreadRotationEx_xa254:
    /*0000a254*/ LDR         R3, [R8, #216]              @ 0xd8 
    /*0000a258*/ MOV         R1, #18 
    /*0000a25c*/ LDR         R2, [R8, #212]              @ 0xd4 
    /*0000a260*/ MOV         R0, R4 
    /*0000a264*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000a268*/ MOV         R3, #1 
    /*0000a26c*/ STR         R2, [SP, #60]               @ 0x3c 
    /*0000a270*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000a274*/ MOV         R3, #0 
    /*0000a278*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000a27c*/ BL          0x000000000000A27C          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000a280*/ SUBS        R6, R0, #0 
    /*0000a284*/ BEQ         GDC_ProDISSpreadRotationEx_xa2c4
    /*0000a288*/ MOVW        R3, #3038                   @ 0xbde 
    /*0000a28c*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000a290*/ STR         R3, [SP] 
    /*0000a294*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000a298*/ STR         R6, [SP, #4] 
    /*0000a29c*/ MOV         R1, #37                     @ 0x25 
    /*0000a2a0*/ LDR         R3, [PC, #948]              @ 0x000000000000a65c 
    /*0000a2a4*/ MOV         R0, #3 
    /*0000a2a8*/ BL          0x000000000000A2A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProDISSpreadRotationEx_xa2ac:
    /*0000a2ac*/ MOV         R1, FP 
    /*0000a2b0*/ MOV         R0, R5 
    /*0000a2b4*/ BL          0x0000000000005E7C 
    GDC_ProDISSpreadRotationEx_xa2b8:
    /*0000a2b8*/ MOV         R0, R6 
    /*0000a2bc*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000a2c0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProDISSpreadRotationEx_xa2c4:
    /*0000a2c4*/ LDR         R3, [R7, #8] 
    /*0000a2c8*/ ADD         IP, SP, #36                 @ 0x24 
    /*0000a2cc*/ LDR         R2, [R7, #4] 
    /*0000a2d0*/ ADD         R0, SP, #32 
    /*0000a2d4*/ LDR         R1, [R7] 
    /*0000a2d8*/ STR         IP, [SP] 
    /*0000a2dc*/ BL          0x000000000000A2DC          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000a2e0*/ SUBS        R6, R0, #0 
    /*0000a2e4*/ BNE         GDC_ProDISSpreadRotationEx_xa410
    /*0000a2e8*/ BL          0x0000000000005D48 
    /*0000a2ec*/ SUBS        R3, R0, #0 
    /*0000a2f0*/ STR         R3, [SP, #16] 
    /*0000a2f4*/ BEQ         GDC_ProDISSpreadRotationEx_xa518
    /*0000a2f8*/ LDR         R3, [SP, #16] 
    /*0000a2fc*/ MOV         R2, #776                    @ 0x308 
    /*0000a300*/ MOV         R1, R4 
    /*0000a304*/ ADD         R3, R3, #8 
    /*0000a308*/ STR         R3, [SP, #20] 
    /*0000a30c*/ MOV         R6, R3 
    /*0000a310*/ MOV         R0, R3 
    /*0000a314*/ BL          0x000000000000A314          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000a318*/ MOV         R0, R6 
    /*0000a31c*/ LDR         R3, [SP, #12] 
    /*0000a320*/ MOV         R1, R7 
    /*0000a324*/ LDR         R2, [SP, #8] 
    /*0000a328*/ BL          0x000000000000A328          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*0000a32c*/ SUBS        R6, R0, #0 
    /*0000a330*/ BNE         GDC_ProDISSpreadRotationEx_xa488
    /*0000a334*/ LDR         R3, [R8, #128]              @ 0x80 
    /*0000a338*/ CMP         R3, #2 
    /*0000a33c*/ BEQ         GDC_ProDISSpreadRotationEx_xa4a0
    /*0000a340*/ LDR         R1, [SP, #12] 
    /*0000a344*/ MOV         R2, R7 
    /*0000a348*/ LDR         R0, [SP, #32] 
    /*0000a34c*/ LDR         R3, [SP, #8] 
    /*0000a350*/ STR         R1, [SP] 
    /*0000a354*/ STR         R8, [SP, #4] 
    /*0000a358*/ LDR         R1, [SP, #20] 
    /*0000a35c*/ BL          0x00000000000062B0 
    /*0000a360*/ MOV         R6, R0 
    GDC_ProDISSpreadRotationEx_xa364:
    /*0000a364*/ CMP         R6, #0 
    /*0000a368*/ BNE         GDC_ProDISSpreadRotationEx_xa444
    /*0000a36c*/ LDR         R3, [SP, #16] 
    /*0000a370*/ MOV         R2, #336                    @ 0x150 
    /*0000a374*/ LDR         R6, [SP, #20] 
    /*0000a378*/ ADD         R8, R3, #344                @ 0x158 
    /*0000a37c*/ MOV         R0, R6 
    /*0000a380*/ MOV         R1, R8 
    /*0000a384*/ BL          0x000000000000A384          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000a388*/ MOV         R0, R6 
    /*0000a38c*/ LDR         R3, [SP, #12] 
    /*0000a390*/ MOV         R1, R7 
    /*0000a394*/ LDR         R2, [SP, #8] 
    /*0000a398*/ STR         R6, [SP, #20] 
    /*0000a39c*/ BL          0x000000000000A39C          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*0000a3a0*/ SUBS        R6, R0, #0 
    /*0000a3a4*/ BEQ         GDC_ProDISSpreadRotationEx_xa4bc
    /*0000a3a8*/ LDR         R0, [SP, #20] 
    /*0000a3ac*/ MOV         R1, #18 
    /*0000a3b0*/ BL          0x000000000000A3B0          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000a3b4*/ MOVW        R3, #3098                   @ 0xc1a 
    /*0000a3b8*/ STR         R6, [SP, #4] 
    GDC_ProDISSpreadRotationEx_xa3bc:
    /*0000a3bc*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*0000a3c0*/ STR         R3, [SP] 
    /*0000a3c4*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*0000a3c8*/ LDR         R3, [PC, #652]              @ 0x000000000000a65c 
    /*0000a3cc*/ MOV         R1, #37                     @ 0x25 
    /*0000a3d0*/ MOV         R0, #3 
    /*0000a3d4*/ BL          0x000000000000A3D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProDISSpreadRotationEx_xa3d8:
    /*0000a3d8*/ LDR         R1, [SP, #16] 
    /*0000a3dc*/ MOV         R0, R5 
    /*0000a3e0*/ BL          0x0000000000005E7C 
    GDC_ProDISSpreadRotationEx_xa3e4:
    /*0000a3e4*/ MOV         R3, #0 
    /*0000a3e8*/ LDR         R0, [SP, #32] 
    /*0000a3ec*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000a3f0*/ STR         R3, [SL, #752]              @ 0x2f0 
    /*0000a3f4*/ BL          0x000000000000A3F4          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000a3f8*/ B           GDC_ProDISSpreadRotationEx_xa2ac
    GDC_ProDISSpreadRotationEx_xa3fc:
    /*0000a3fc*/ MOV         R0, R9 
    /*0000a400*/ BL          0x0000000000005F18 
    /*0000a404*/ SUBS        R6, R0, #0 
    /*0000a408*/ BNE         GDC_ProDISSpreadRotationEx_xa2ac
    /*0000a40c*/ B           GDC_ProDISSpreadRotationEx_xa254
    GDC_ProDISSpreadRotationEx_xa410:
    /*0000a410*/ MOV         R0, R4 
    /*0000a414*/ MOV         R1, #18 
    /*0000a418*/ BL          0x000000000000A418          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000a41c*/ MOVW        R3, #3047                   @ 0xbe7 
    /*0000a420*/ STR         R6, [SP, #4] 
    /*0000a424*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3600] 
    /*0000a428*/ STR         R3, [SP] 
    /*0000a42c*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3600] 
    /*0000a430*/ LDR         R3, [PC, #548]              @ 0x000000000000a65c 
    /*0000a434*/ MOV         R1, #37                     @ 0x25 
    /*0000a438*/ MOV         R0, #3 
    /*0000a43c*/ BL          0x000000000000A43C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a440*/ B           GDC_ProDISSpreadRotationEx_xa2ac
    GDC_ProDISSpreadRotationEx_xa444:
    /*0000a444*/ LDR         R0, [SP, #20] 
    /*0000a448*/ MOV         R1, #18 
    /*0000a44c*/ BL          0x000000000000A44C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000a450*/ LDR         R3, [SP, #16] 
    /*0000a454*/ MOV         R1, #18 
    /*0000a458*/ ADD         R0, R3, #344                @ 0x158 
    /*0000a45c*/ BL          0x000000000000A45C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000a460*/ MOVW        R3, #3086                   @ 0xc0e 
    /*0000a464*/ STR         R6, [SP, #4] 
    /*0000a468*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x374c] 
    /*0000a46c*/ STR         R3, [SP] 
    /*0000a470*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x374c] 
    /*0000a474*/ LDR         R3, [PC, #480]              @ 0x000000000000a65c 
    /*0000a478*/ MOV         R1, #37                     @ 0x25 
    /*0000a47c*/ MOV         R0, #3 
    /*0000a480*/ BL          0x000000000000A480          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a484*/ B           GDC_ProDISSpreadRotationEx_xa3d8
    GDC_ProDISSpreadRotationEx_xa488:
    /*0000a488*/ LDR         R0, [SP, #20] 
    /*0000a48c*/ MOV         R1, #18 
    /*0000a490*/ BL          0x000000000000A490          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000a494*/ STR         R6, [SP, #4] 
    /*0000a498*/ MOVW        R3, #3069                   @ 0xbfd 
    /*0000a49c*/ B           GDC_ProDISSpreadRotationEx_xa3bc
    GDC_ProDISSpreadRotationEx_xa4a0:
    /*0000a4a0*/ LDR         R3, [SP, #116]              @ 0x74 
    /*0000a4a4*/ MOV         R2, R7 
    /*0000a4a8*/ LDR         R1, [SP, #20] 
    /*0000a4ac*/ LDR         R0, [SP, #32] 
    /*0000a4b0*/ BL          0x0000000000005FA8 
    /*0000a4b4*/ MOV         R6, R0 
    /*0000a4b8*/ B           GDC_ProDISSpreadRotationEx_xa364
    GDC_ProDISSpreadRotationEx_xa4bc:
    /*0000a4bc*/ LDR         R1, [SP, #20] 
    /*0000a4c0*/ MOV         R2, R7 
    /*0000a4c4*/ LDR         R3, [SP, #8] 
    /*0000a4c8*/ LDR         R0, [SP, #32] 
    /*0000a4cc*/ BL          0x0000000000006F38 
    /*0000a4d0*/ SUBS        R6, R0, #0 
    /*0000a4d4*/ BEQ         GDC_ProDISSpreadRotationEx_xa550
    /*0000a4d8*/ MOV         R1, #18 
    /*0000a4dc*/ MOV         R0, R4 
    /*0000a4e0*/ BL          0x000000000000A4E0          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000a4e4*/ MOV         R1, #18 
    /*0000a4e8*/ ADD         R0, R4, #336                @ 0x150 
    /*0000a4ec*/ BL          0x000000000000A4EC          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000a4f0*/ MOVW        R3, #3108                   @ 0xc24 
    /*0000a4f4*/ STR         R6, [SP, #4] 
    /*0000a4f8*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35c4] 
    /*0000a4fc*/ STR         R3, [SP] 
    /*0000a500*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35c4] 
    /*0000a504*/ LDR         R3, [PC, #336]              @ 0x000000000000a65c 
    /*0000a508*/ MOV         R1, #37                     @ 0x25 
    /*0000a50c*/ MOV         R0, #3 
    /*0000a510*/ BL          0x000000000000A510          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a514*/ B           GDC_ProDISSpreadRotationEx_xa3d8
    GDC_ProDISSpreadRotationEx_xa518:
    /*0000a518*/ MOV         R1, #18 
    /*0000a51c*/ MOV         R0, R4 
    /*0000a520*/ BL          0x000000000000A520          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000a524*/ MOVW        R3, #3055                   @ 0xbef 
    /*0000a528*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*0000a52c*/ STR         R3, [SP] 
    /*0000a530*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*0000a534*/ LDR         R3, [PC, #288]              @ 0x000000000000a65c 
    /*0000a538*/ MOV         R1, #37                     @ 0x25 
    /*0000a53c*/ MOV         R0, #3 
    /*0000a540*/ MOVW        R6, #32781                  @ 0x800d 
    /*0000a544*/ BL          0x000000000000A544          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a548*/ MOVT        R6, #40997                  @ 0xa025 
    /*0000a54c*/ B           GDC_ProDISSpreadRotationEx_xa3e4
    GDC_ProDISSpreadRotationEx_xa550:
    /*0000a550*/ MOV         R1, R8 
    /*0000a554*/ MOV         R2, #336                    @ 0x150 
    /*0000a558*/ MOV         R0, R4 
    /*0000a55c*/ MOV         R8, R6 
    /*0000a560*/ BL          0x000000000000A560          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000a564*/ LDR         R1, [SP, #16] 
    /*0000a568*/ MOV         R0, R5 
    /*0000a56c*/ BL          0x0000000000005E7C 
    /*0000a570*/ LDR         R0, [SL, #748]              @ 0x2ec 
    /*0000a574*/ LDR         R3, [SP, #8] 
    /*0000a578*/ MOV         R2, R7 
    /*0000a57c*/ STR         R6, [R4, #744]              @ 0x2e8 
    /*0000a580*/ MOVW        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*0000a584*/ STR         R0, [R4, #736]              @ 0x2e0 
    /*0000a588*/ MOVT        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*0000a58c*/ STR         R9, [R4, #740]              @ 0x2e4 
    /*0000a590*/ STR         R1, [R4, #748]              @ 0x2ec 
    /*0000a594*/ MOV         R1, R4 
    /*0000a598*/ LDR         R0, [SP, #32] 
    /*0000a59c*/ BL          0x00000000000060CC 
    /*0000a5a0*/ SUBS        R6, R0, #0 
    /*0000a5a4*/ BEQ         GDC_ProDISSpreadRotationEx_xa5dc
    /*0000a5a8*/ MOV         R1, #18 
    /*0000a5ac*/ MOV         R0, R4 
    /*0000a5b0*/ BL          0x000000000000A5B0          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000a5b4*/ MOVW        R3, #3124                   @ 0xc34 
    /*0000a5b8*/ STR         R6, [SP, #4] 
    /*0000a5bc*/ MOVW        R2, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3680] 
    /*0000a5c0*/ STR         R3, [SP] 
    /*0000a5c4*/ MOVT        R2, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3680] 
    /*0000a5c8*/ LDR         R3, [PC, #140]              @ 0x000000000000a65c 
    /*0000a5cc*/ MOV         R1, #37                     @ 0x25 
    /*0000a5d0*/ MOV         R0, #3 
    /*0000a5d4*/ BL          0x000000000000A5D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a5d8*/ B           GDC_ProDISSpreadRotationEx_xa3e4
    GDC_ProDISSpreadRotationEx_xa5dc:
    /*0000a5dc*/ ADD         R1, SP, #28 
    /*0000a5e0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000a5e4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000a5e8*/ BL          0x000000000000A5E8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000a5ec*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000a5f0*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000a5f4*/ ADD         R1, SP, #28 
    /*0000a5f8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000a5fc*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000a600*/ LDR         R2, [R3, R9, LSL #2] 
    /*0000a604*/ LDR         R3, [R2, #8] 
    /*0000a608*/ ADD         R3, R3, #1 
    /*0000a60c*/ STR         R3, [R2, #8] 
    /*0000a610*/ BL          0x000000000000A610          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000a614*/ LDR         R0, [SP, #32] 
    /*0000a618*/ BL          0x000000000000A618          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000a61c*/ SUBS        R6, R0, #0 
    /*0000a620*/ BEQ         GDC_ProDISSpreadRotationEx_xa2b8
    /*0000a624*/ STR         R6, [SP, #4] 
    /*0000a628*/ MOV         R3, #3136                   @ 0xc40 
    /*0000a62c*/ MOV         R1, #37                     @ 0x25 
    /*0000a630*/ STR         R3, [SP] 
    /*0000a634*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000a638*/ LDR         R3, [PC, #28]               @ 0x000000000000a65c 
    /*0000a63c*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000a640*/ MOV         R0, #3 
    /*0000a644*/ BL          0x000000000000A644          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a648*/ STR         R8, [R4, #748]              @ 0x2ec 
    /*0000a64c*/ LDR         R0, [SP, #32] 
    /*0000a650*/ STR         R8, [SL, #752]              @ 0x2f0 
    /*0000a654*/ BL          0x000000000000A654          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000a658*/ B           GDC_ProDISSpreadRotationEx_xa2b8
    /*0000a65c*/ ANDEQ       R0, R0, R8, LSL R7 
FUNC_END GDC_ProDISSpreadRotationEx


FUNC_BEGIN GDC_ProDISSpreadRotationVgs
    /*0000a660*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000a664*/ MOV         R7, R1 
    /*0000a668*/ LDR         R8, [R7, #12] 
    /*0000a66c*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000a670*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000a674*/ MOV         R4, R0 
    /*0000a678*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000a67c*/ SUB         SP, SP, #84                 @ 0x54 
    /*0000a680*/ ADD         FP, R4, #4096               @ 0x1000 
    /*0000a684*/ LDR         R5, [R1] 
    /*0000a688*/ CMP         R8, #63                     @ 0x3f 
    /*0000a68c*/ MOV         SL, R2 
    /*0000a690*/ STR         R3, [SP, #12] 
    /*0000a694*/ ADD         R5, R5, #648                @ 0x288 
    /*0000a698*/ STR         R0, [FP, #752]              @ 0x2f0 
    /*0000a69c*/ SUB         R9, R4, #8 
    /*0000a6a0*/ BHI         GDC_ProDISSpreadRotationVgs_xa864
    GDC_ProDISSpreadRotationVgs_xa6a4:
    /*0000a6a4*/ MOV         R1, #18 
    /*0000a6a8*/ MOV         R0, R4 
    /*0000a6ac*/ MOV         R3, #1 
    /*0000a6b0*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000a6b4*/ MOV         R3, #0 
    /*0000a6b8*/ STR         R3, [SP, #76]               @ 0x4c 
    /*0000a6bc*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000a6c0*/ STR         R3, [SP, #72]               @ 0x48 
    /*0000a6c4*/ BL          0x000000000000A6C4          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000a6c8*/ SUBS        R6, R0, #0 
    /*0000a6cc*/ BEQ         GDC_ProDISSpreadRotationVgs_xa70c
    /*0000a6d0*/ MOVW        R3, #3193                   @ 0xc79 
    /*0000a6d4*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000a6d8*/ STR         R3, [SP] 
    /*0000a6dc*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000a6e0*/ STR         R6, [SP, #4] 
    /*0000a6e4*/ MOV         R1, #37                     @ 0x25 
    /*0000a6e8*/ LDR         R3, [PC, #968]              @ 0x000000000000aab8 
    /*0000a6ec*/ MOV         R0, #3 
    /*0000a6f0*/ BL          0x000000000000A6F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProDISSpreadRotationVgs_xa6f4:
    /*0000a6f4*/ MOV         R1, R9 
    /*0000a6f8*/ MOV         R0, R5 
    /*0000a6fc*/ BL          0x0000000000005E7C 
    GDC_ProDISSpreadRotationVgs_xa700:
    /*0000a700*/ MOV         R0, R6 
    /*0000a704*/ ADD         SP, SP, #84                 @ 0x54 
    /*0000a708*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProDISSpreadRotationVgs_xa70c:
    /*0000a70c*/ LDR         R3, [R7, #8] 
    /*0000a710*/ ADD         IP, SP, #44                 @ 0x2c 
    /*0000a714*/ LDR         R2, [R7, #4] 
    /*0000a718*/ ADD         R0, SP, #36                 @ 0x24 
    /*0000a71c*/ LDR         R1, [R7] 
    /*0000a720*/ STR         IP, [SP] 
    /*0000a724*/ BL          0x000000000000A724          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000a728*/ SUBS        R6, R0, #0 
    /*0000a72c*/ BNE         GDC_ProDISSpreadRotationVgs_xa878
    /*0000a730*/ BL          0x0000000000005D48 
    /*0000a734*/ SUBS        R3, R0, #0 
    /*0000a738*/ STR         R3, [SP, #16] 
    /*0000a73c*/ BEQ         GDC_ProDISSpreadRotationVgs_xa9d8
    /*0000a740*/ LDR         R3, [SP, #16] 
    /*0000a744*/ MOV         R2, #776                    @ 0x308 
    /*0000a748*/ MOV         R1, R4 
    /*0000a74c*/ ADD         R3, R3, #8 
    /*0000a750*/ STR         R3, [SP, #20] 
    /*0000a754*/ MOV         R6, R3 
    /*0000a758*/ MOV         R0, R3 
    /*0000a75c*/ BL          0x000000000000A75C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000a760*/ MOV         R0, R6 
    /*0000a764*/ LDR         R3, [SP, #12] 
    /*0000a768*/ MOV         R2, SL 
    /*0000a76c*/ MOV         R1, R7 
    /*0000a770*/ BL          0x000000000000A770          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*0000a774*/ SUBS        R6, R0, #0 
    /*0000a778*/ BNE         GDC_ProDISSpreadRotationVgs_xa8f0
    /*0000a77c*/ LDR         R3, [SL, #16] 
    /*0000a780*/ STR         R6, [SL, #16] 
    /*0000a784*/ STR         R3, [SP, #24] 
    /*0000a788*/ LDR         R3, [SP, #120]              @ 0x78 
    /*0000a78c*/ LDR         R3, [R3, #128]              @ 0x80 
    /*0000a790*/ CMP         R3, #2 
    /*0000a794*/ BEQ         GDC_ProDISSpreadRotationVgs_xa908
    /*0000a798*/ LDR         R2, [SP, #120]              @ 0x78 
    /*0000a79c*/ MOV         R3, SL 
    /*0000a7a0*/ LDR         R1, [SP, #12] 
    /*0000a7a4*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000a7a8*/ STR         R2, [SP, #4] 
    /*0000a7ac*/ MOV         R2, R7 
    /*0000a7b0*/ STR         R1, [SP] 
    /*0000a7b4*/ LDR         R1, [SP, #20] 
    /*0000a7b8*/ BL          0x00000000000062B0 
    /*0000a7bc*/ MOV         R6, R0 
    GDC_ProDISSpreadRotationVgs_xa7c0:
    /*0000a7c0*/ CMP         R6, #0 
    /*0000a7c4*/ BNE         GDC_ProDISSpreadRotationVgs_xa8ac
    /*0000a7c8*/ LDR         R3, [SP, #16] 
    /*0000a7cc*/ LDR         R6, [SP, #20] 
    /*0000a7d0*/ LDR         R2, [SP, #24] 
    /*0000a7d4*/ ADD         R3, R3, #344                @ 0x158 
    /*0000a7d8*/ STR         R3, [SP, #28] 
    /*0000a7dc*/ MOV         R1, R3 
    /*0000a7e0*/ MOV         R0, R6 
    /*0000a7e4*/ STR         R2, [SL, #16] 
    /*0000a7e8*/ MOV         R2, #336                    @ 0x150 
    /*0000a7ec*/ BL          0x000000000000A7EC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000a7f0*/ MOV         R0, R6 
    /*0000a7f4*/ LDR         R3, [SP, #12] 
    /*0000a7f8*/ MOV         R2, SL 
    /*0000a7fc*/ MOV         R1, R7 
    /*0000a800*/ STR         R6, [SP, #20] 
    /*0000a804*/ BL          0x000000000000A804          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*0000a808*/ SUBS        R6, R0, #0 
    /*0000a80c*/ BEQ         GDC_ProDISSpreadRotationVgs_xa924
    /*0000a810*/ LDR         R0, [SP, #20] 
    /*0000a814*/ MOV         R1, #18 
    /*0000a818*/ BL          0x000000000000A818          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000a81c*/ MOVW        R3, #3257                   @ 0xcb9 
    /*0000a820*/ STR         R6, [SP, #4] 
    GDC_ProDISSpreadRotationVgs_xa824:
    /*0000a824*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*0000a828*/ STR         R3, [SP] 
    /*0000a82c*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*0000a830*/ LDR         R3, [PC, #640]              @ 0x000000000000aab8 
    /*0000a834*/ MOV         R1, #37                     @ 0x25 
    /*0000a838*/ MOV         R0, #3 
    /*0000a83c*/ BL          0x000000000000A83C          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProDISSpreadRotationVgs_xa840:
    /*0000a840*/ LDR         R1, [SP, #16] 
    /*0000a844*/ MOV         R0, R5 
    /*0000a848*/ BL          0x0000000000005E7C 
    GDC_ProDISSpreadRotationVgs_xa84c:
    /*0000a84c*/ MOV         R3, #0 
    /*0000a850*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000a854*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000a858*/ STR         R3, [FP, #752]              @ 0x2f0 
    /*0000a85c*/ BL          0x000000000000A85C          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000a860*/ B           GDC_ProDISSpreadRotationVgs_xa6f4
    GDC_ProDISSpreadRotationVgs_xa864:
    /*0000a864*/ MOV         R0, R8 
    /*0000a868*/ BL          0x0000000000005F18 
    /*0000a86c*/ SUBS        R6, R0, #0 
    /*0000a870*/ BNE         GDC_ProDISSpreadRotationVgs_xa6f4
    /*0000a874*/ B           GDC_ProDISSpreadRotationVgs_xa6a4
    GDC_ProDISSpreadRotationVgs_xa878:
    /*0000a878*/ MOV         R0, R4 
    /*0000a87c*/ MOV         R1, #18 
    /*0000a880*/ BL          0x000000000000A880          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000a884*/ MOVW        R3, #3202                   @ 0xc82 
    /*0000a888*/ STR         R6, [SP, #4] 
    /*0000a88c*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3600] 
    /*0000a890*/ STR         R3, [SP] 
    /*0000a894*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3600] 
    /*0000a898*/ LDR         R3, [PC, #536]              @ 0x000000000000aab8 
    /*0000a89c*/ MOV         R1, #37                     @ 0x25 
    /*0000a8a0*/ MOV         R0, #3 
    /*0000a8a4*/ BL          0x000000000000A8A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a8a8*/ B           GDC_ProDISSpreadRotationVgs_xa6f4
    GDC_ProDISSpreadRotationVgs_xa8ac:
    /*0000a8ac*/ LDR         R0, [SP, #20] 
    /*0000a8b0*/ MOV         R1, #18 
    /*0000a8b4*/ BL          0x000000000000A8B4          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000a8b8*/ LDR         R3, [SP, #16] 
    /*0000a8bc*/ MOV         R1, #18 
    /*0000a8c0*/ ADD         R0, R3, #344                @ 0x158 
    /*0000a8c4*/ BL          0x000000000000A8C4          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000a8c8*/ MOVW        R3, #3244                   @ 0xcac 
    /*0000a8cc*/ STR         R6, [SP, #4] 
    /*0000a8d0*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x374c] 
    /*0000a8d4*/ STR         R3, [SP] 
    /*0000a8d8*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x374c] 
    /*0000a8dc*/ LDR         R3, [PC, #468]              @ 0x000000000000aab8 
    /*0000a8e0*/ MOV         R1, #37                     @ 0x25 
    /*0000a8e4*/ MOV         R0, #3 
    /*0000a8e8*/ BL          0x000000000000A8E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a8ec*/ B           GDC_ProDISSpreadRotationVgs_xa840
    GDC_ProDISSpreadRotationVgs_xa8f0:
    /*0000a8f0*/ LDR         R0, [SP, #20] 
    /*0000a8f4*/ MOV         R1, #18 
    /*0000a8f8*/ BL          0x000000000000A8F8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000a8fc*/ STR         R6, [SP, #4] 
    /*0000a900*/ MOVW        R3, #3224                   @ 0xc98 
    /*0000a904*/ B           GDC_ProDISSpreadRotationVgs_xa824
    GDC_ProDISSpreadRotationVgs_xa908:
    /*0000a908*/ LDR         R3, [SP, #124]              @ 0x7c 
    /*0000a90c*/ MOV         R2, R7 
    /*0000a910*/ LDR         R1, [SP, #20] 
    /*0000a914*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000a918*/ BL          0x0000000000005FA8 
    /*0000a91c*/ MOV         R6, R0 
    /*0000a920*/ B           GDC_ProDISSpreadRotationVgs_xa7c0
    GDC_ProDISSpreadRotationVgs_xa924:
    /*0000a924*/ LDR         IP, [SP, #16] 
    /*0000a928*/ MOV         R3, SL 
    /*0000a92c*/ LDR         R0, [SL, #16] 
    /*0000a930*/ MOV         R2, R7 
    /*0000a934*/ ADD         R1, IP, #688                @ 0x2b0 
    /*0000a938*/ ADD         LR, IP, #704                @ 0x2c0 
    /*0000a93c*/ STR         R6, [R1, #-4] 
    /*0000a940*/ MOV         SL, IP 
    /*0000a944*/ STR         R0, [R1, #-8] 
    /*0000a948*/ LDR         IP, [IP, #344]              @ 0x158 
    /*0000a94c*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000a950*/ STR         IP, [SL, #688]              @ 0x2b0 
    /*0000a954*/ MOVW        IP, #0                      @ Gdc_B4VgsCallBack [R_ARM_MOVW_ABS_NC: .text+0xd670] 
    /*0000a958*/ STR         R6, [R1, #4] 
    /*0000a95c*/ MOVT        IP, #0                      @ Gdc_B4VgsCallBack [R_ARM_MOVT_ABS: .text+0xd670] 
    /*0000a960*/ LDR         R1, [SL, #348]              @ 0x15c 
    /*0000a964*/ STR         R6, [LR, #-4] 
    /*0000a968*/ STR         R1, [LR, #-8] 
    /*0000a96c*/ LDR         R7, [FP, #748]              @ 0x2ec 
    /*0000a970*/ LDR         R1, [SP, #20] 
    /*0000a974*/ STR         R7, [SL, #704]              @ 0x2c0 
    /*0000a978*/ MOV         R7, R6 
    /*0000a97c*/ STR         R6, [LR, #4] 
    /*0000a980*/ STR         R6, [SL, #716]              @ 0x2cc 
    /*0000a984*/ STR         R8, [SL, #712]              @ 0x2c8 
    /*0000a988*/ STR         IP, [SL, #756]              @ 0x2f4 
    /*0000a98c*/ BL          0x0000000000006F38 
    /*0000a990*/ SUBS        R6, R0, #0 
    /*0000a994*/ BEQ         GDC_ProDISSpreadRotationVgs_xaa10
    /*0000a998*/ LDR         R0, [SP, #20] 
    /*0000a99c*/ MOV         R1, #18 
    /*0000a9a0*/ BL          0x000000000000A9A0          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000a9a4*/ LDR         R0, [SP, #28] 
    /*0000a9a8*/ MOV         R1, #18 
    /*0000a9ac*/ BL          0x000000000000A9AC          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000a9b0*/ MOVW        R3, #3274                   @ 0xcca 
    /*0000a9b4*/ STR         R6, [SP, #4] 
    /*0000a9b8*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35c4] 
    /*0000a9bc*/ STR         R3, [SP] 
    /*0000a9c0*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35c4] 
    /*0000a9c4*/ LDR         R3, [PC, #236]              @ 0x000000000000aab8 
    /*0000a9c8*/ MOV         R1, #37                     @ 0x25 
    /*0000a9cc*/ MOV         R0, #3 
    /*0000a9d0*/ BL          0x000000000000A9D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a9d4*/ B           GDC_ProDISSpreadRotationVgs_xa840
    GDC_ProDISSpreadRotationVgs_xa9d8:
    /*0000a9d8*/ MOV         R1, #18 
    /*0000a9dc*/ MOV         R0, R4 
    /*0000a9e0*/ BL          0x000000000000A9E0          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000a9e4*/ MOVW        R3, #3210                   @ 0xc8a 
    /*0000a9e8*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*0000a9ec*/ STR         R3, [SP] 
    /*0000a9f0*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*0000a9f4*/ LDR         R3, [PC, #188]              @ 0x000000000000aab8 
    /*0000a9f8*/ MOV         R1, #37                     @ 0x25 
    /*0000a9fc*/ MOV         R0, #3 
    /*0000aa00*/ MOVW        R6, #32781                  @ 0x800d 
    /*0000aa04*/ BL          0x000000000000AA04          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000aa08*/ MOVT        R6, #40997                  @ 0xa025 
    /*0000aa0c*/ B           GDC_ProDISSpreadRotationVgs_xa84c
    GDC_ProDISSpreadRotationVgs_xaa10:
    /*0000aa10*/ ADD         R1, SP, #40                 @ 0x28 
    /*0000aa14*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000aa18*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000aa1c*/ BL          0x000000000000AA1C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000aa20*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000aa24*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000aa28*/ ADD         R1, SP, #40                 @ 0x28 
    /*0000aa2c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000aa30*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000aa34*/ LDR         R2, [R3, R8, LSL #2] 
    /*0000aa38*/ LDR         R3, [R2, #8] 
    /*0000aa3c*/ ADD         R3, R3, #1 
    /*0000aa40*/ STR         R3, [R2, #8] 
    /*0000aa44*/ BL          0x000000000000AA44          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000aa48*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000aa4c*/ BL          0x000000000000AA4C          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000aa50*/ SUBS        R6, R0, #0 
    /*0000aa54*/ BEQ         GDC_ProDISSpreadRotationVgs_xaaa8
    /*0000aa58*/ LDR         R0, [SP, #28] 
    /*0000aa5c*/ MOV         R1, #18 
    /*0000aa60*/ BL          0x000000000000AA60          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000aa64*/ STR         R6, [SP, #4] 
    /*0000aa68*/ MOVW        R3, #3287                   @ 0xcd7 
    /*0000aa6c*/ MOV         R1, #37                     @ 0x25 
    /*0000aa70*/ STR         R3, [SP] 
    /*0000aa74*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000aa78*/ LDR         R3, [PC, #56]               @ 0x000000000000aab8 
    /*0000aa7c*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000aa80*/ MOV         R0, #3 
    /*0000aa84*/ BL          0x000000000000AA84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000aa88*/ MOV         R0, R5 
    /*0000aa8c*/ LDR         R1, [SP, #16] 
    /*0000aa90*/ BL          0x0000000000005E7C 
    /*0000aa94*/ STR         R7, [R4, #748]              @ 0x2ec 
    /*0000aa98*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000aa9c*/ STR         R7, [FP, #752]              @ 0x2f0 
    /*0000aaa0*/ BL          0x000000000000AAA0          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000aaa4*/ B           GDC_ProDISSpreadRotationVgs_xa700
    GDC_ProDISSpreadRotationVgs_xaaa8:
    /*0000aaa8*/ LDR         R1, [SP, #16] 
    /*0000aaac*/ MOV         R0, R5 
    /*0000aab0*/ BL          0x0000000000005E7C 
    /*0000aab4*/ B           GDC_ProDISSpreadRotationVgs_xa700
    /*0000aab8*/ ANDEQ       R0, R0, R4, LSR R7 
FUNC_END GDC_ProDISSpreadRotationVgs


FUNC_BEGIN GDC_ProDISSpreadRotation
    /*0000aabc*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000aac0*/ LDR         LR, [R2, #16] 
    /*0000aac4*/ LDR         IP, [SP, #4] 
    /*0000aac8*/ CMP         LR, #0 
    /*0000aacc*/ LDR         LR, [SP, #8] 
    /*0000aad0*/ BNE         GDC_ProDISSpreadRotation_xaae0
    /*0000aad4*/ STMIB       SP, {IP, LR} 
    /*0000aad8*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_ProDISSpreadRotation_xaadc:
    /*0000aadc*/ B           GDC_ProDISSpreadRotation_xaadc@ GDC_ProDISSpreadRotationEx [R_ARM_JUMP24: .text+0xa20c] 
    GDC_ProDISSpreadRotation_xaae0:
    /*0000aae0*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_ProDISSpreadRotation_xaae4:
    /*0000aae4*/ B           GDC_ProDISSpreadRotation_xaae4@ GDC_ProDISSpreadRotationVgs [R_ARM_JUMP24: .text+0xa660] 
FUNC_END GDC_ProDISSpreadRotation


FUNC_BEGIN GDC_ProDISSpread
    /*0000aae8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000aaec*/ MOV         R7, R1 
    /*0000aaf0*/ LDR         R9, [R7, #12] 
    /*0000aaf4*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000aaf8*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000aafc*/ MOV         R4, R0 
    /*0000ab00*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000ab04*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0000ab08*/ ADD         FP, R4, #4096               @ 0x1000 
    /*0000ab0c*/ LDR         R5, [R1] 
    /*0000ab10*/ CMP         R9, #63                     @ 0x3f 
    /*0000ab14*/ STR         R2, [SP, #8] 
    /*0000ab18*/ STR         R3, [SP, #12] 
    /*0000ab1c*/ ADD         R5, R5, #648                @ 0x288 
    /*0000ab20*/ STR         R0, [FP, #752]              @ 0x2f0 
    /*0000ab24*/ SUB         SL, R4, #8 
    /*0000ab28*/ LDR         R8, [SP, #112]              @ 0x70 
    /*0000ab2c*/ BHI         GDC_ProDISSpread_xacec
    GDC_ProDISSpread_xab30:
    /*0000ab30*/ LDR         R3, [R8, #216]              @ 0xd8 
    /*0000ab34*/ MOV         R1, #18 
    /*0000ab38*/ LDR         R2, [R8, #212]              @ 0xd4 
    /*0000ab3c*/ MOV         R0, R4 
    /*0000ab40*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000ab44*/ MOV         R3, #1 
    /*0000ab48*/ STR         R2, [SP, #60]               @ 0x3c 
    /*0000ab4c*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000ab50*/ MOV         R3, #0 
    /*0000ab54*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000ab58*/ BL          0x000000000000AB58          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000ab5c*/ SUBS        R6, R0, #0 
    /*0000ab60*/ BEQ         GDC_ProDISSpread_xaba0
    /*0000ab64*/ MOVW        R3, #3361                   @ 0xd21 
    /*0000ab68*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000ab6c*/ STR         R3, [SP] 
    /*0000ab70*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000ab74*/ STR         R6, [SP, #4] 
    /*0000ab78*/ MOV         R1, #37                     @ 0x25 
    /*0000ab7c*/ LDR         R3, [PC, #776]              @ 0x000000000000ae8c 
    /*0000ab80*/ MOV         R0, #3 
    /*0000ab84*/ BL          0x000000000000AB84          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProDISSpread_xab88:
    /*0000ab88*/ MOV         R1, SL 
    /*0000ab8c*/ MOV         R0, R5 
    /*0000ab90*/ BL          0x0000000000005E7C 
    GDC_ProDISSpread_xab94:
    /*0000ab94*/ MOV         R0, R6 
    /*0000ab98*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000ab9c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProDISSpread_xaba0:
    /*0000aba0*/ LDR         R3, [R7, #8] 
    /*0000aba4*/ ADD         IP, SP, #36                 @ 0x24 
    /*0000aba8*/ LDR         R2, [R7, #4] 
    /*0000abac*/ ADD         R0, SP, #32 
    /*0000abb0*/ LDR         R1, [R7] 
    /*0000abb4*/ STR         IP, [SP] 
    /*0000abb8*/ BL          0x000000000000ABB8          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000abbc*/ SUBS        R6, R0, #0 
    /*0000abc0*/ BNE         GDC_ProDISSpread_xad00
    /*0000abc4*/ BL          0x0000000000005D48 
    /*0000abc8*/ SUBS        R3, R0, #0 
    /*0000abcc*/ STR         R3, [SP, #16] 
    /*0000abd0*/ BEQ         GDC_ProDISSpread_xae54
    /*0000abd4*/ LDR         R3, [SP, #16] 
    /*0000abd8*/ MOV         R2, #776                    @ 0x308 
    /*0000abdc*/ MOV         R1, R4 
    /*0000abe0*/ ADD         R3, R3, #8 
    /*0000abe4*/ STR         R3, [SP, #20] 
    /*0000abe8*/ MOV         R6, R3 
    /*0000abec*/ MOV         R0, R3 
    /*0000abf0*/ BL          0x000000000000ABF0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000abf4*/ MOV         R0, R6 
    /*0000abf8*/ LDR         R3, [SP, #12] 
    /*0000abfc*/ MOV         R1, R7 
    /*0000ac00*/ LDR         R2, [SP, #8] 
    /*0000ac04*/ BL          0x000000000000AC04          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*0000ac08*/ SUBS        R6, R0, #0 
    /*0000ac0c*/ BNE         GDC_ProDISSpread_xad84
    /*0000ac10*/ LDR         R3, [R8, #128]              @ 0x80 
    /*0000ac14*/ CMP         R3, #2 
    /*0000ac18*/ BEQ         GDC_ProDISSpread_xadb8
    /*0000ac1c*/ LDR         R1, [SP, #12] 
    /*0000ac20*/ MOV         R2, R7 
    /*0000ac24*/ LDR         R0, [SP, #32] 
    /*0000ac28*/ LDR         R3, [SP, #8] 
    /*0000ac2c*/ STR         R1, [SP] 
    /*0000ac30*/ STR         R8, [SP, #4] 
    /*0000ac34*/ LDR         R1, [SP, #20] 
    /*0000ac38*/ BL          0x00000000000062B0 
    /*0000ac3c*/ MOV         R6, R0 
    GDC_ProDISSpread_xac40:
    /*0000ac40*/ CMP         R6, #0 
    /*0000ac44*/ BNE         GDC_ProDISSpread_xad34
    /*0000ac48*/ LDR         R3, [SP, #16] 
    /*0000ac4c*/ MOV         R2, #336                    @ 0x150 
    /*0000ac50*/ MOV         R0, R4 
    /*0000ac54*/ MOV         R8, R6 
    /*0000ac58*/ ADD         R1, R3, #344                @ 0x158 
    /*0000ac5c*/ BL          0x000000000000AC5C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000ac60*/ LDR         R1, [SP, #16] 
    /*0000ac64*/ MOV         R0, R5 
    /*0000ac68*/ BL          0x0000000000005E7C 
    /*0000ac6c*/ LDR         R0, [FP, #748]              @ 0x2ec 
    /*0000ac70*/ LDR         R3, [SP, #8] 
    /*0000ac74*/ MOV         R2, R7 
    /*0000ac78*/ STR         R6, [R4, #744]              @ 0x2e8 
    /*0000ac7c*/ MOVW        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*0000ac80*/ STR         R0, [R4, #736]              @ 0x2e0 
    /*0000ac84*/ MOVT        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*0000ac88*/ STR         R9, [R4, #740]              @ 0x2e4 
    /*0000ac8c*/ STR         R1, [R4, #748]              @ 0x2ec 
    /*0000ac90*/ MOV         R1, R4 
    /*0000ac94*/ LDR         R0, [SP, #32] 
    /*0000ac98*/ BL          0x0000000000006F38 
    /*0000ac9c*/ SUBS        R6, R0, #0 
    /*0000aca0*/ BEQ         GDC_ProDISSpread_xadd4
    /*0000aca4*/ MOV         R1, #18 
    /*0000aca8*/ MOV         R0, R4 
    /*0000acac*/ BL          0x000000000000ACAC          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000acb0*/ MOVW        R3, #3425                   @ 0xd61 
    /*0000acb4*/ MOVW        R2, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3788] 
    /*0000acb8*/ STR         R3, [SP] 
    /*0000acbc*/ STR         R6, [SP, #4] 
    /*0000acc0*/ MOVT        R2, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3788] 
    /*0000acc4*/ LDR         R3, [PC, #448]              @ 0x000000000000ae8c 
    /*0000acc8*/ MOV         R1, #37                     @ 0x25 
    /*0000accc*/ MOV         R0, #3 
    /*0000acd0*/ BL          0x000000000000ACD0          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProDISSpread_xacd4:
    /*0000acd4*/ MOV         R3, #0 
    /*0000acd8*/ LDR         R0, [SP, #32] 
    /*0000acdc*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000ace0*/ STR         R3, [FP, #752]              @ 0x2f0 
    /*0000ace4*/ BL          0x000000000000ACE4          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000ace8*/ B           GDC_ProDISSpread_xab88
    GDC_ProDISSpread_xacec:
    /*0000acec*/ MOV         R0, R9 
    /*0000acf0*/ BL          0x0000000000005F18 
    /*0000acf4*/ SUBS        R6, R0, #0 
    /*0000acf8*/ BNE         GDC_ProDISSpread_xab88
    /*0000acfc*/ B           GDC_ProDISSpread_xab30
    GDC_ProDISSpread_xad00:
    /*0000ad00*/ MOV         R0, R4 
    /*0000ad04*/ MOV         R1, #18 
    /*0000ad08*/ BL          0x000000000000AD08          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000ad0c*/ MOVW        R3, #3370                   @ 0xd2a 
    /*0000ad10*/ STR         R6, [SP, #4] 
    /*0000ad14*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3600] 
    /*0000ad18*/ STR         R3, [SP] 
    /*0000ad1c*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3600] 
    /*0000ad20*/ LDR         R3, [PC, #356]              @ 0x000000000000ae8c 
    /*0000ad24*/ MOV         R1, #37                     @ 0x25 
    /*0000ad28*/ MOV         R0, #3 
    /*0000ad2c*/ BL          0x000000000000AD2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ad30*/ B           GDC_ProDISSpread_xab88
    GDC_ProDISSpread_xad34:
    /*0000ad34*/ MOV         R1, #18 
    /*0000ad38*/ LDR         R0, [SP, #20] 
    /*0000ad3c*/ BL          0x000000000000AD3C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000ad40*/ LDR         R3, [SP, #16] 
    /*0000ad44*/ MOV         R1, #18 
    /*0000ad48*/ ADD         R0, R3, #344                @ 0x158 
    /*0000ad4c*/ BL          0x000000000000AD4C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000ad50*/ MOVW        R3, #3409                   @ 0xd51 
    /*0000ad54*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x374c] 
    /*0000ad58*/ STR         R3, [SP] 
    /*0000ad5c*/ STR         R6, [SP, #4] 
    /*0000ad60*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x374c] 
    /*0000ad64*/ LDR         R3, [PC, #288]              @ 0x000000000000ae8c 
    /*0000ad68*/ MOV         R1, #37                     @ 0x25 
    /*0000ad6c*/ MOV         R0, #3 
    /*0000ad70*/ BL          0x000000000000AD70          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProDISSpread_xad74:
    /*0000ad74*/ LDR         R1, [SP, #16] 
    /*0000ad78*/ MOV         R0, R5 
    /*0000ad7c*/ BL          0x0000000000005E7C 
    /*0000ad80*/ B           GDC_ProDISSpread_xacd4
    GDC_ProDISSpread_xad84:
    /*0000ad84*/ MOV         R1, #18 
    /*0000ad88*/ MOV         R0, R4 
    /*0000ad8c*/ BL          0x000000000000AD8C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000ad90*/ MOV         R3, #3392                   @ 0xd40 
    /*0000ad94*/ STR         R6, [SP, #4] 
    /*0000ad98*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*0000ad9c*/ STR         R3, [SP] 
    /*0000ada0*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*0000ada4*/ LDR         R3, [PC, #224]              @ 0x000000000000ae8c 
    /*0000ada8*/ MOV         R1, #37                     @ 0x25 
    /*0000adac*/ MOV         R0, #3 
    /*0000adb0*/ BL          0x000000000000ADB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000adb4*/ B           GDC_ProDISSpread_xad74
    GDC_ProDISSpread_xadb8:
    /*0000adb8*/ LDR         R3, [SP, #116]              @ 0x74 
    /*0000adbc*/ MOV         R2, R7 
    /*0000adc0*/ LDR         R1, [SP, #20] 
    /*0000adc4*/ LDR         R0, [SP, #32] 
    /*0000adc8*/ BL          0x0000000000005FA8 
    /*0000adcc*/ MOV         R6, R0 
    /*0000add0*/ B           GDC_ProDISSpread_xac40
    GDC_ProDISSpread_xadd4:
    /*0000add4*/ ADD         R1, SP, #28 
    /*0000add8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000addc*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000ade0*/ BL          0x000000000000ADE0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000ade4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000ade8*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000adec*/ ADD         R1, SP, #28 
    /*0000adf0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000adf4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000adf8*/ LDR         R2, [R3, R9, LSL #2] 
    /*0000adfc*/ LDR         R3, [R2, #8] 
    /*0000ae00*/ ADD         R3, R3, #1 
    /*0000ae04*/ STR         R3, [R2, #8] 
    /*0000ae08*/ BL          0x000000000000AE08          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000ae0c*/ LDR         R0, [SP, #32] 
    /*0000ae10*/ BL          0x000000000000AE10          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000ae14*/ SUBS        R6, R0, #0 
    /*0000ae18*/ BEQ         GDC_ProDISSpread_xab94
    /*0000ae1c*/ STR         R6, [SP, #4] 
    /*0000ae20*/ MOVW        R3, #3437                   @ 0xd6d 
    /*0000ae24*/ MOV         R1, #37                     @ 0x25 
    /*0000ae28*/ STR         R3, [SP] 
    /*0000ae2c*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000ae30*/ LDR         R3, [PC, #84]               @ 0x000000000000ae8c 
    /*0000ae34*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000ae38*/ MOV         R0, #3 
    /*0000ae3c*/ BL          0x000000000000AE3C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ae40*/ STR         R8, [R4, #748]              @ 0x2ec 
    /*0000ae44*/ LDR         R0, [SP, #32] 
    /*0000ae48*/ STR         R8, [FP, #752]              @ 0x2f0 
    /*0000ae4c*/ BL          0x000000000000AE4C          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000ae50*/ B           GDC_ProDISSpread_xab94
    GDC_ProDISSpread_xae54:
    /*0000ae54*/ MOV         R1, #18 
    /*0000ae58*/ MOV         R0, R4 
    /*0000ae5c*/ BL          0x000000000000AE5C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000ae60*/ MOVW        R3, #3378                   @ 0xd32 
    /*0000ae64*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*0000ae68*/ STR         R3, [SP] 
    /*0000ae6c*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*0000ae70*/ LDR         R3, [PC, #20]               @ 0x000000000000ae8c 
    /*0000ae74*/ MOV         R1, #37                     @ 0x25 
    /*0000ae78*/ MOV         R0, #3 
    /*0000ae7c*/ MOVW        R6, #32781                  @ 0x800d 
    /*0000ae80*/ BL          0x000000000000AE80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ae84*/ MOVT        R6, #40997                  @ 0xa025 
    /*0000ae88*/ B           GDC_ProDISSpread_xacd4
    /*0000ae8c*/ ANDEQ       R0, R0, R0, ASR R7 
FUNC_END GDC_ProDISSpread


FUNC_BEGIN GDC_ProcDISRotationEx
    /*0000ae90*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000ae94*/ MOV         R7, R1 
    /*0000ae98*/ LDR         R9, [R7, #12] 
    /*0000ae9c*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000aea0*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000aea4*/ MOV         R4, R0 
    /*0000aea8*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000aeac*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0000aeb0*/ ADD         FP, R4, #4096               @ 0x1000 
    /*0000aeb4*/ LDR         R5, [R1] 
    /*0000aeb8*/ CMP         R9, #63                     @ 0x3f 
    /*0000aebc*/ STR         R2, [SP, #8] 
    /*0000aec0*/ STR         R3, [SP, #12] 
    /*0000aec4*/ ADD         R5, R5, #648                @ 0x288 
    /*0000aec8*/ STR         R0, [FP, #752]              @ 0x2f0 
    /*0000aecc*/ SUB         SL, R4, #8 
    /*0000aed0*/ LDR         R8, [SP, #112]              @ 0x70 
    /*0000aed4*/ BHI         GDC_ProcDISRotationEx_xb094
    GDC_ProcDISRotationEx_xaed8:
    /*0000aed8*/ LDR         R3, [R8, #216]              @ 0xd8 
    /*0000aedc*/ MOV         R1, #18 
    /*0000aee0*/ LDR         R2, [R8, #212]              @ 0xd4 
    /*0000aee4*/ MOV         R0, R4 
    /*0000aee8*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000aeec*/ MOV         R3, #1 
    /*0000aef0*/ STR         R2, [SP, #60]               @ 0x3c 
    /*0000aef4*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000aef8*/ MOV         R3, #0 
    /*0000aefc*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000af00*/ BL          0x000000000000AF00          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000af04*/ SUBS        R6, R0, #0 
    /*0000af08*/ BEQ         GDC_ProcDISRotationEx_xaf48
    /*0000af0c*/ MOVW        R3, #3487                   @ 0xd9f 
    /*0000af10*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000af14*/ STR         R3, [SP] 
    /*0000af18*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000af1c*/ STR         R6, [SP, #4] 
    /*0000af20*/ MOV         R1, #37                     @ 0x25 
    /*0000af24*/ LDR         R3, [PC, #776]              @ 0x000000000000b234 
    /*0000af28*/ MOV         R0, #3 
    /*0000af2c*/ BL          0x000000000000AF2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProcDISRotationEx_xaf30:
    /*0000af30*/ MOV         R1, SL 
    /*0000af34*/ MOV         R0, R5 
    /*0000af38*/ BL          0x0000000000005E7C 
    GDC_ProcDISRotationEx_xaf3c:
    /*0000af3c*/ MOV         R0, R6 
    /*0000af40*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000af44*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcDISRotationEx_xaf48:
    /*0000af48*/ LDR         R3, [R7, #8] 
    /*0000af4c*/ ADD         IP, SP, #36                 @ 0x24 
    /*0000af50*/ LDR         R2, [R7, #4] 
    /*0000af54*/ ADD         R0, SP, #32 
    /*0000af58*/ LDR         R1, [R7] 
    /*0000af5c*/ STR         IP, [SP] 
    /*0000af60*/ BL          0x000000000000AF60          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000af64*/ SUBS        R6, R0, #0 
    /*0000af68*/ BNE         GDC_ProcDISRotationEx_xb0a8
    /*0000af6c*/ BL          0x0000000000005D48 
    /*0000af70*/ SUBS        R3, R0, #0 
    /*0000af74*/ STR         R3, [SP, #16] 
    /*0000af78*/ BEQ         GDC_ProcDISRotationEx_xb1fc
    /*0000af7c*/ LDR         R3, [SP, #16] 
    /*0000af80*/ MOV         R2, #776                    @ 0x308 
    /*0000af84*/ MOV         R1, R4 
    /*0000af88*/ ADD         R3, R3, #8 
    /*0000af8c*/ STR         R3, [SP, #20] 
    /*0000af90*/ MOV         R6, R3 
    /*0000af94*/ MOV         R0, R3 
    /*0000af98*/ BL          0x000000000000AF98          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000af9c*/ MOV         R0, R6 
    /*0000afa0*/ LDR         R3, [SP, #12] 
    /*0000afa4*/ MOV         R1, R7 
    /*0000afa8*/ LDR         R2, [SP, #8] 
    /*0000afac*/ BL          0x000000000000AFAC          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*0000afb0*/ SUBS        R6, R0, #0 
    /*0000afb4*/ BNE         GDC_ProcDISRotationEx_xb12c
    /*0000afb8*/ LDR         R3, [R8, #128]              @ 0x80 
    /*0000afbc*/ CMP         R3, #2 
    /*0000afc0*/ BEQ         GDC_ProcDISRotationEx_xb160
    /*0000afc4*/ LDR         R1, [SP, #12] 
    /*0000afc8*/ MOV         R2, R7 
    /*0000afcc*/ LDR         R0, [SP, #32] 
    /*0000afd0*/ LDR         R3, [SP, #8] 
    /*0000afd4*/ STR         R1, [SP] 
    /*0000afd8*/ STR         R8, [SP, #4] 
    /*0000afdc*/ LDR         R1, [SP, #20] 
    /*0000afe0*/ BL          0x00000000000062B0 
    /*0000afe4*/ MOV         R6, R0 
    GDC_ProcDISRotationEx_xafe8:
    /*0000afe8*/ CMP         R6, #0 
    /*0000afec*/ BNE         GDC_ProcDISRotationEx_xb0dc
    /*0000aff0*/ LDR         R3, [SP, #16] 
    /*0000aff4*/ MOV         R2, #336                    @ 0x150 
    /*0000aff8*/ MOV         R0, R4 
    /*0000affc*/ MOV         R8, R6 
    /*0000b000*/ ADD         R1, R3, #344                @ 0x158 
    /*0000b004*/ BL          0x000000000000B004          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000b008*/ LDR         R1, [SP, #16] 
    /*0000b00c*/ MOV         R0, R5 
    /*0000b010*/ BL          0x0000000000005E7C 
    /*0000b014*/ LDR         R0, [FP, #748]              @ 0x2ec 
    /*0000b018*/ LDR         R3, [SP, #8] 
    /*0000b01c*/ MOV         R2, R7 
    /*0000b020*/ STR         R6, [R4, #744]              @ 0x2e8 
    /*0000b024*/ MOVW        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*0000b028*/ STR         R0, [R4, #736]              @ 0x2e0 
    /*0000b02c*/ MOVT        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*0000b030*/ STR         R9, [R4, #740]              @ 0x2e4 
    /*0000b034*/ STR         R1, [R4, #748]              @ 0x2ec 
    /*0000b038*/ MOV         R1, R4 
    /*0000b03c*/ LDR         R0, [SP, #32] 
    /*0000b040*/ BL          0x00000000000060CC 
    /*0000b044*/ SUBS        R6, R0, #0 
    /*0000b048*/ BEQ         GDC_ProcDISRotationEx_xb17c
    /*0000b04c*/ MOV         R1, #18 
    /*0000b050*/ MOV         R0, R4 
    /*0000b054*/ BL          0x000000000000B054          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000b058*/ MOV         R3, #3552                   @ 0xde0 
    /*0000b05c*/ MOVW        R2, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37c4] 
    /*0000b060*/ STR         R3, [SP] 
    /*0000b064*/ STR         R6, [SP, #4] 
    /*0000b068*/ MOVT        R2, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37c4] 
    /*0000b06c*/ LDR         R3, [PC, #448]              @ 0x000000000000b234 
    /*0000b070*/ MOV         R1, #37                     @ 0x25 
    /*0000b074*/ MOV         R0, #3 
    /*0000b078*/ BL          0x000000000000B078          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProcDISRotationEx_xb07c:
    /*0000b07c*/ MOV         R3, #0 
    /*0000b080*/ LDR         R0, [SP, #32] 
    /*0000b084*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000b088*/ STR         R3, [FP, #752]              @ 0x2f0 
    /*0000b08c*/ BL          0x000000000000B08C          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000b090*/ B           GDC_ProcDISRotationEx_xaf30
    GDC_ProcDISRotationEx_xb094:
    /*0000b094*/ MOV         R0, R9 
    /*0000b098*/ BL          0x0000000000005F18 
    /*0000b09c*/ SUBS        R6, R0, #0 
    /*0000b0a0*/ BNE         GDC_ProcDISRotationEx_xaf30
    /*0000b0a4*/ B           GDC_ProcDISRotationEx_xaed8
    GDC_ProcDISRotationEx_xb0a8:
    /*0000b0a8*/ MOV         R0, R4 
    /*0000b0ac*/ MOV         R1, #18 
    /*0000b0b0*/ BL          0x000000000000B0B0          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000b0b4*/ MOVW        R3, #3496                   @ 0xda8 
    /*0000b0b8*/ STR         R6, [SP, #4] 
    /*0000b0bc*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3600] 
    /*0000b0c0*/ STR         R3, [SP] 
    /*0000b0c4*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3600] 
    /*0000b0c8*/ LDR         R3, [PC, #356]              @ 0x000000000000b234 
    /*0000b0cc*/ MOV         R1, #37                     @ 0x25 
    /*0000b0d0*/ MOV         R0, #3 
    /*0000b0d4*/ BL          0x000000000000B0D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b0d8*/ B           GDC_ProcDISRotationEx_xaf30
    GDC_ProcDISRotationEx_xb0dc:
    /*0000b0dc*/ MOV         R1, #18 
    /*0000b0e0*/ LDR         R0, [SP, #20] 
    /*0000b0e4*/ BL          0x000000000000B0E4          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000b0e8*/ LDR         R3, [SP, #16] 
    /*0000b0ec*/ MOV         R1, #18 
    /*0000b0f0*/ ADD         R0, R3, #344                @ 0x158 
    /*0000b0f4*/ BL          0x000000000000B0F4          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000b0f8*/ MOV         R3, #3536                   @ 0xdd0 
    /*0000b0fc*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x374c] 
    /*0000b100*/ STR         R3, [SP] 
    /*0000b104*/ STR         R6, [SP, #4] 
    /*0000b108*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x374c] 
    /*0000b10c*/ LDR         R3, [PC, #288]              @ 0x000000000000b234 
    /*0000b110*/ MOV         R1, #37                     @ 0x25 
    /*0000b114*/ MOV         R0, #3 
    /*0000b118*/ BL          0x000000000000B118          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProcDISRotationEx_xb11c:
    /*0000b11c*/ LDR         R1, [SP, #16] 
    /*0000b120*/ MOV         R0, R5 
    /*0000b124*/ BL          0x0000000000005E7C 
    /*0000b128*/ B           GDC_ProcDISRotationEx_xb07c
    GDC_ProcDISRotationEx_xb12c:
    /*0000b12c*/ LDR         R0, [SP, #20] 
    /*0000b130*/ MOV         R1, #18 
    /*0000b134*/ BL          0x000000000000B134          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000b138*/ MOVW        R3, #3519                   @ 0xdbf 
    /*0000b13c*/ STR         R6, [SP, #4] 
    /*0000b140*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*0000b144*/ STR         R3, [SP] 
    /*0000b148*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*0000b14c*/ LDR         R3, [PC, #224]              @ 0x000000000000b234 
    /*0000b150*/ MOV         R1, #37                     @ 0x25 
    /*0000b154*/ MOV         R0, #3 
    /*0000b158*/ BL          0x000000000000B158          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b15c*/ B           GDC_ProcDISRotationEx_xb11c
    GDC_ProcDISRotationEx_xb160:
    /*0000b160*/ LDR         R3, [SP, #116]              @ 0x74 
    /*0000b164*/ MOV         R2, R7 
    /*0000b168*/ LDR         R1, [SP, #20] 
    /*0000b16c*/ LDR         R0, [SP, #32] 
    /*0000b170*/ BL          0x0000000000005FA8 
    /*0000b174*/ MOV         R6, R0 
    /*0000b178*/ B           GDC_ProcDISRotationEx_xafe8
    GDC_ProcDISRotationEx_xb17c:
    /*0000b17c*/ ADD         R1, SP, #28 
    /*0000b180*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000b184*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000b188*/ BL          0x000000000000B188          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000b18c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000b190*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000b194*/ ADD         R1, SP, #28 
    /*0000b198*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000b19c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000b1a0*/ LDR         R2, [R3, R9, LSL #2] 
    /*0000b1a4*/ LDR         R3, [R2, #8] 
    /*0000b1a8*/ ADD         R3, R3, #1 
    /*0000b1ac*/ STR         R3, [R2, #8] 
    /*0000b1b0*/ BL          0x000000000000B1B0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b1b4*/ LDR         R0, [SP, #32] 
    /*0000b1b8*/ BL          0x000000000000B1B8          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000b1bc*/ SUBS        R6, R0, #0 
    /*0000b1c0*/ BEQ         GDC_ProcDISRotationEx_xaf3c
    /*0000b1c4*/ STR         R6, [SP, #4] 
    /*0000b1c8*/ MOVW        R3, #3564                   @ 0xdec 
    /*0000b1cc*/ MOV         R1, #37                     @ 0x25 
    /*0000b1d0*/ STR         R3, [SP] 
    /*0000b1d4*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000b1d8*/ LDR         R3, [PC, #84]               @ 0x000000000000b234 
    /*0000b1dc*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000b1e0*/ MOV         R0, #3 
    /*0000b1e4*/ BL          0x000000000000B1E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b1e8*/ STR         R8, [R4, #748]              @ 0x2ec 
    /*0000b1ec*/ LDR         R0, [SP, #32] 
    /*0000b1f0*/ STR         R8, [FP, #752]              @ 0x2f0 
    /*0000b1f4*/ BL          0x000000000000B1F4          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000b1f8*/ B           GDC_ProcDISRotationEx_xaf3c
    GDC_ProcDISRotationEx_xb1fc:
    /*0000b1fc*/ MOV         R1, #18 
    /*0000b200*/ MOV         R0, R4 
    /*0000b204*/ BL          0x000000000000B204          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000b208*/ MOV         R3, #3504                   @ 0xdb0 
    /*0000b20c*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*0000b210*/ STR         R3, [SP] 
    /*0000b214*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*0000b218*/ LDR         R3, [PC, #20]               @ 0x000000000000b234 
    /*0000b21c*/ MOV         R1, #37                     @ 0x25 
    /*0000b220*/ MOV         R0, #3 
    /*0000b224*/ MOVW        R6, #32781                  @ 0x800d 
    /*0000b228*/ BL          0x000000000000B228          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b22c*/ MOVT        R6, #40997                  @ 0xa025 
    /*0000b230*/ B           GDC_ProcDISRotationEx_xb07c
    /*0000b234*/ ANDEQ       R0, R0, R4, ROR #14 
FUNC_END GDC_ProcDISRotationEx


FUNC_BEGIN GDC_ProcDISRotationGdc
    /*0000b238*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000b23c*/ MOV         R8, R1 
    /*0000b240*/ LDR         R9, [R8, #12] 
    /*0000b244*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000b248*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000b24c*/ MOV         R4, R0 
    /*0000b250*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000b254*/ SUB         SP, SP, #36                 @ 0x24 
    /*0000b258*/ ADD         SL, R4, #4096               @ 0x1000 
    /*0000b25c*/ LDR         R6, [R1] 
    /*0000b260*/ CMP         R9, #63                     @ 0x3f 
    /*0000b264*/ STR         R3, [SP, #20] 
    /*0000b268*/ STR         R2, [SP, #16] 
    /*0000b26c*/ SUB         R3, R4, #8 
    /*0000b270*/ STR         R0, [SL, #752]              @ 0x2f0 
    /*0000b274*/ ADD         R6, R6, #648                @ 0x288 
    /*0000b278*/ STR         R3, [SP, #12] 
    /*0000b27c*/ LDR         FP, [SP, #72]               @ 0x48 
    /*0000b280*/ BHI         GDC_ProcDISRotationGdc_xb3ac
    GDC_ProcDISRotationGdc_xb284:
    /*0000b284*/ LDR         R0, [FP, #212]              @ 0xd4 
    /*0000b288*/ MOVW        R5, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000b28c*/ LDR         R3, [FP, #216]              @ 0xd8 
    /*0000b290*/ MOVT        R5, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000b294*/ MOV         R1, #18 
    /*0000b298*/ MOV         R2, #1 
    /*0000b29c*/ STR         R0, [R5, #2464]             @ 0x9a0 
    /*0000b2a0*/ MOV         R0, R4 
    /*0000b2a4*/ STR         R3, [R5, #2468]             @ 0x9a4 
    /*0000b2a8*/ MOV         R3, #0 
    /*0000b2ac*/ STR         R2, [R5, #2460]             @ 0x99c 
    /*0000b2b0*/ STR         R3, [R5, #2472]             @ 0x9a8 
    /*0000b2b4*/ BL          0x000000000000B2B4          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000b2b8*/ SUBS        R7, R0, #0 
    /*0000b2bc*/ BEQ         GDC_ProcDISRotationGdc_xb2fc
    /*0000b2c0*/ MOV         R3, #3616                   @ 0xe20 
    /*0000b2c4*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000b2c8*/ STR         R3, [SP] 
    /*0000b2cc*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000b2d0*/ STR         R7, [SP, #4] 
    /*0000b2d4*/ MOV         R1, #37                     @ 0x25 
    /*0000b2d8*/ LDR         R3, [PC, #396]              @ 0x000000000000b46c 
    /*0000b2dc*/ MOV         R0, #3 
    /*0000b2e0*/ BL          0x000000000000B2E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProcDISRotationGdc_xb2e4:
    /*0000b2e4*/ LDR         R1, [SP, #12] 
    /*0000b2e8*/ MOV         R0, R6 
    /*0000b2ec*/ BL          0x0000000000005E7C 
    GDC_ProcDISRotationGdc_xb2f0:
    /*0000b2f0*/ MOV         R0, R7 
    /*0000b2f4*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000b2f8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcDISRotationGdc_xb2fc:
    /*0000b2fc*/ LDR         IP, [PC, #364]              @ 0x000000000000b470 
    /*0000b300*/ ADD         R0, SP, #28 
    /*0000b304*/ LDR         R3, [R8, #8] 
    /*0000b308*/ LDM         R8, {R1, R2} 
    /*0000b30c*/ STR         IP, [SP] 
    /*0000b310*/ BL          0x000000000000B310          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000b314*/ SUBS        R7, R0, #0 
    /*0000b318*/ BNE         GDC_ProcDISRotationGdc_xb3c0
    /*0000b31c*/ LDR         IP, [SL, #748]              @ 0x2ec 
    /*0000b320*/ MOV         R2, R8 
    /*0000b324*/ LDR         R1, [SP, #20] 
    /*0000b328*/ MOV         R8, R7 
    /*0000b32c*/ STR         FP, [SP, #4] 
    /*0000b330*/ LDR         R3, [SP, #16] 
    /*0000b334*/ STR         R1, [SP] 
    /*0000b338*/ MOVW        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*0000b33c*/ STR         R7, [R4, #744]              @ 0x2e8 
    /*0000b340*/ MOVT        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*0000b344*/ LDR         R0, [SP, #28] 
    /*0000b348*/ STR         R1, [R4, #748]              @ 0x2ec 
    /*0000b34c*/ MOV         R1, R4 
    /*0000b350*/ STR         IP, [R4, #736]              @ 0x2e0 
    /*0000b354*/ STR         R9, [R4, #740]              @ 0x2e4 
    /*0000b358*/ BL          0x00000000000062B0 
    /*0000b35c*/ SUBS        R7, R0, #0 
    /*0000b360*/ BEQ         GDC_ProcDISRotationGdc_xb3f4
    /*0000b364*/ MOV         R1, #18 
    /*0000b368*/ MOV         R0, R4 
    /*0000b36c*/ BL          0x000000000000B36C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000b370*/ STR         R7, [SP, #4] 
    /*0000b374*/ MOVW        R3, #3639                   @ 0xe37 
    /*0000b378*/ MOV         R1, #37                     @ 0x25 
    /*0000b37c*/ STR         R3, [SP] 
    /*0000b380*/ MOVW        R2, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x363c] 
    /*0000b384*/ LDR         R3, [PC, #224]              @ 0x000000000000b46c 
    /*0000b388*/ MOVT        R2, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x363c] 
    /*0000b38c*/ MOV         R0, #3 
    /*0000b390*/ BL          0x000000000000B390          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b394*/ MOV         R3, #0 
    /*0000b398*/ LDR         R0, [SP, #28] 
    /*0000b39c*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000b3a0*/ STR         R3, [SL, #752]              @ 0x2f0 
    /*0000b3a4*/ BL          0x000000000000B3A4          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000b3a8*/ B           GDC_ProcDISRotationGdc_xb2e4
    GDC_ProcDISRotationGdc_xb3ac:
    /*0000b3ac*/ MOV         R0, R9 
    /*0000b3b0*/ BL          0x0000000000005F18 
    /*0000b3b4*/ SUBS        R7, R0, #0 
    /*0000b3b8*/ BNE         GDC_ProcDISRotationGdc_xb2e4
    /*0000b3bc*/ B           GDC_ProcDISRotationGdc_xb284
    GDC_ProcDISRotationGdc_xb3c0:
    /*0000b3c0*/ MOV         R0, R4 
    /*0000b3c4*/ MOV         R1, #18 
    /*0000b3c8*/ BL          0x000000000000B3C8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000b3cc*/ MOVW        R3, #3626                   @ 0xe2a 
    /*0000b3d0*/ STR         R7, [SP, #4] 
    /*0000b3d4*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3600] 
    /*0000b3d8*/ STR         R3, [SP] 
    /*0000b3dc*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3600] 
    /*0000b3e0*/ LDR         R3, [PC, #132]              @ 0x000000000000b46c 
    /*0000b3e4*/ MOV         R1, #37                     @ 0x25 
    /*0000b3e8*/ MOV         R0, #3 
    /*0000b3ec*/ BL          0x000000000000B3EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b3f0*/ B           GDC_ProcDISRotationGdc_xb2e4
    GDC_ProcDISRotationGdc_xb3f4:
    /*0000b3f4*/ ADD         R1, SP, #24 
    /*0000b3f8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000b3fc*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000b400*/ BL          0x000000000000B400          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000b404*/ LDR         R2, [R5, R9, LSL #2] 
    /*0000b408*/ ADD         R1, SP, #24 
    /*0000b40c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000b410*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000b414*/ LDR         R3, [R2, #8] 
    /*0000b418*/ ADD         R3, R3, #1 
    /*0000b41c*/ STR         R3, [R2, #8] 
    /*0000b420*/ BL          0x000000000000B420          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b424*/ LDR         R0, [SP, #28] 
    /*0000b428*/ BL          0x000000000000B428          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000b42c*/ SUBS        R7, R0, #0 
    /*0000b430*/ BEQ         GDC_ProcDISRotationGdc_xb2f0
    /*0000b434*/ STR         R7, [SP, #4] 
    /*0000b438*/ MOVW        R3, #3651                   @ 0xe43 
    /*0000b43c*/ MOV         R1, #37                     @ 0x25 
    /*0000b440*/ STR         R3, [SP] 
    /*0000b444*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000b448*/ LDR         R3, [PC, #28]               @ 0x000000000000b46c 
    /*0000b44c*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000b450*/ MOV         R0, #3 
    /*0000b454*/ BL          0x000000000000B454          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b458*/ STR         R8, [R4, #748]              @ 0x2ec 
    /*0000b45c*/ LDR         R0, [SP, #28] 
    /*0000b460*/ STR         R8, [SL, #752]              @ 0x2f0 
    /*0000b464*/ BL          0x000000000000B464          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000b468*/ B           GDC_ProcDISRotationGdc_xb2f0
    /*0000b46c*/ ANDEQ       R0, R0, IP, ROR R7 
    /*0000b470*/ @           <UNDEFINED> instruction: 0x00000db0 
FUNC_END GDC_ProcDISRotationGdc


FUNC_BEGIN GDC_ProGyroRotation
    /*0000b474*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000b478*/ MOV         R7, R1 
    /*0000b47c*/ LDR         R8, [R7, #12] 
    /*0000b480*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000b484*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000b488*/ MOV         R4, R0 
    /*0000b48c*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000b490*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000b494*/ ADD         FP, R4, #4096               @ 0x1000 
    /*0000b498*/ LDR         R5, [R1] 
    /*0000b49c*/ CMP         R8, #63                     @ 0x3f 
    /*0000b4a0*/ MOV         SL, R2 
    /*0000b4a4*/ STR         R3, [SP, #8] 
    /*0000b4a8*/ ADD         R5, R5, #648                @ 0x288 
    /*0000b4ac*/ STR         R0, [FP, #752]              @ 0x2f0 
    /*0000b4b0*/ SUB         R9, R4, #8 
    /*0000b4b4*/ BHI         GDC_ProGyroRotation_xb5e0
    GDC_ProGyroRotation_xb4b8:
    /*0000b4b8*/ MOV         R1, #18 
    /*0000b4bc*/ MOV         R0, R4 
    /*0000b4c0*/ BL          0x000000000000B4C0          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000b4c4*/ SUBS        R6, R0, #0 
    /*0000b4c8*/ BEQ         GDC_ProGyroRotation_xb508
    /*0000b4cc*/ MOVW        R3, #3695                   @ 0xe6f 
    /*0000b4d0*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000b4d4*/ STR         R3, [SP] 
    /*0000b4d8*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000b4dc*/ STR         R6, [SP, #4] 
    /*0000b4e0*/ MOV         R1, #37                     @ 0x25 
    /*0000b4e4*/ LDR         R3, [PC, #716]              @ 0x000000000000b7b8 
    /*0000b4e8*/ MOV         R0, #3 
    /*0000b4ec*/ BL          0x000000000000B4EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProGyroRotation_xb4f0:
    /*0000b4f0*/ MOV         R1, R9 
    /*0000b4f4*/ MOV         R0, R5 
    /*0000b4f8*/ BL          0x0000000000005E7C 
    GDC_ProGyroRotation_xb4fc:
    /*0000b4fc*/ MOV         R0, R6 
    /*0000b500*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000b504*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProGyroRotation_xb508:
    /*0000b508*/ LDR         R3, [R7, #8] 
    /*0000b50c*/ ADD         IP, SP, #28 
    /*0000b510*/ LDR         R2, [R7, #4] 
    /*0000b514*/ ADD         R0, SP, #24 
    /*0000b518*/ LDR         R1, [R7] 
    /*0000b51c*/ STR         IP, [SP] 
    /*0000b520*/ MOV         IP, #1 
    /*0000b524*/ STR         R6, [SP, #60]               @ 0x3c 
    /*0000b528*/ STR         R6, [SP, #52]               @ 0x34 
    /*0000b52c*/ STR         R6, [SP, #56]               @ 0x38 
    /*0000b530*/ STR         IP, [SP, #48]               @ 0x30 
    /*0000b534*/ BL          0x000000000000B534          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000b538*/ SUBS        R6, R0, #0 
    /*0000b53c*/ BNE         GDC_ProGyroRotation_xb5f4
    /*0000b540*/ BL          0x0000000000005D48 
    /*0000b544*/ SUBS        R3, R0, #0 
    /*0000b548*/ STR         R3, [SP, #12] 
    /*0000b54c*/ BEQ         GDC_ProGyroRotation_xb770
    /*0000b550*/ LDR         R3, [SP, #12] 
    /*0000b554*/ MOV         R2, #776                    @ 0x308 
    /*0000b558*/ MOV         R1, R4 
    /*0000b55c*/ ADD         R3, R3, #8 
    /*0000b560*/ MOV         R6, R3 
    /*0000b564*/ MOV         R0, R3 
    /*0000b568*/ BL          0x000000000000B568          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000b56c*/ LDR         R3, [SP, #8] 
    /*0000b570*/ MOV         R0, R6 
    /*0000b574*/ MOV         R2, SL 
    /*0000b578*/ MOV         R1, R7 
    /*0000b57c*/ STR         R6, [SP, #8] 
    /*0000b580*/ BL          0x000000000000B580          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*0000b584*/ SUBS        R6, R0, #0 
    /*0000b588*/ BEQ         GDC_ProGyroRotation_xb628
    /*0000b58c*/ MOV         R1, #18 
    /*0000b590*/ LDR         R0, [SP, #8] 
    /*0000b594*/ BL          0x000000000000B594          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000b598*/ MOVW        R3, #3733                   @ 0xe95 
    /*0000b59c*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*0000b5a0*/ STR         R3, [SP] 
    /*0000b5a4*/ STR         R6, [SP, #4] 
    /*0000b5a8*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*0000b5ac*/ LDR         R3, [PC, #516]              @ 0x000000000000b7b8 
    /*0000b5b0*/ MOV         R1, #37                     @ 0x25 
    /*0000b5b4*/ MOV         R0, #3 
    /*0000b5b8*/ BL          0x000000000000B5B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProGyroRotation_xb5bc:
    /*0000b5bc*/ LDR         R1, [SP, #12] 
    /*0000b5c0*/ MOV         R0, R5 
    /*0000b5c4*/ BL          0x0000000000005E7C 
    GDC_ProGyroRotation_xb5c8:
    /*0000b5c8*/ MOV         R3, #0 
    /*0000b5cc*/ LDR         R0, [SP, #24] 
    /*0000b5d0*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000b5d4*/ STR         R3, [FP, #752]              @ 0x2f0 
    /*0000b5d8*/ BL          0x000000000000B5D8          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000b5dc*/ B           GDC_ProGyroRotation_xb4f0
    GDC_ProGyroRotation_xb5e0:
    /*0000b5e0*/ MOV         R0, R8 
    /*0000b5e4*/ BL          0x0000000000005F18 
    /*0000b5e8*/ SUBS        R6, R0, #0 
    /*0000b5ec*/ BNE         GDC_ProGyroRotation_xb4f0
    /*0000b5f0*/ B           GDC_ProGyroRotation_xb4b8
    GDC_ProGyroRotation_xb5f4:
    /*0000b5f4*/ MOV         R0, R4 
    /*0000b5f8*/ MOV         R1, #18 
    /*0000b5fc*/ BL          0x000000000000B5FC          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000b600*/ MOVW        R3, #3711                   @ 0xe7f 
    /*0000b604*/ STR         R6, [SP, #4] 
    /*0000b608*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3600] 
    /*0000b60c*/ STR         R3, [SP] 
    /*0000b610*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3600] 
    /*0000b614*/ LDR         R3, [PC, #412]              @ 0x000000000000b7b8 
    /*0000b618*/ MOV         R1, #37                     @ 0x25 
    /*0000b61c*/ MOV         R0, #3 
    /*0000b620*/ BL          0x000000000000B620          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b624*/ B           GDC_ProGyroRotation_xb4f0
    GDC_ProGyroRotation_xb628:
    /*0000b628*/ LDR         R1, [SL, #16] 
    /*0000b62c*/ MOV         R2, R7 
    /*0000b630*/ LDR         SL, [SP, #12] 
    /*0000b634*/ MOVW        IP, #0                      @ Gdc_B4VgsCallBack [R_ARM_MOVW_ABS_NC: .text+0xd670] 
    /*0000b638*/ LDR         R3, [SP, #108]              @ 0x6c 
    /*0000b63c*/ MOVT        IP, #0                      @ Gdc_B4VgsCallBack [R_ARM_MOVT_ABS: .text+0xd670] 
    /*0000b640*/ ADD         LR, SL, #704                @ 0x2c0 
    /*0000b644*/ LDR         R0, [SP, #24] 
    /*0000b648*/ STR         R1, [SL, #680]              @ 0x2a8 
    /*0000b64c*/ LDR         R1, [SL, #344]              @ 0x158 
    /*0000b650*/ STR         R6, [SL, #684]              @ 0x2ac 
    /*0000b654*/ STR         R6, [SL, #692]              @ 0x2b4 
    /*0000b658*/ STR         R1, [SL, #688]              @ 0x2b0 
    /*0000b65c*/ LDR         R1, [SL, #348]              @ 0x15c 
    /*0000b660*/ STR         R6, [LR, #-4] 
    /*0000b664*/ STR         R1, [LR, #-8] 
    /*0000b668*/ LDR         R7, [FP, #748]              @ 0x2ec 
    /*0000b66c*/ LDR         R1, [SP, #8] 
    /*0000b670*/ STR         R7, [SL, #704]              @ 0x2c0 
    /*0000b674*/ MOV         R7, R6 
    /*0000b678*/ STR         R6, [LR, #4] 
    /*0000b67c*/ STR         R6, [SL, #716]              @ 0x2cc 
    /*0000b680*/ STR         R8, [SL, #712]              @ 0x2c8 
    /*0000b684*/ STR         IP, [SL, #756]              @ 0x2f4 
    /*0000b688*/ BL          0x0000000000005FA8 
    /*0000b68c*/ SUBS        R6, R0, #0 
    /*0000b690*/ BNE         GDC_ProGyroRotation_xb730
    /*0000b694*/ ADD         R1, SP, #20 
    /*0000b698*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000b69c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000b6a0*/ BL          0x000000000000B6A0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000b6a4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000b6a8*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000b6ac*/ ADD         R1, SP, #20 
    /*0000b6b0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000b6b4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000b6b8*/ LDR         R2, [R3, R8, LSL #2] 
    /*0000b6bc*/ LDR         R3, [R2, #8] 
    /*0000b6c0*/ ADD         R3, R3, #1 
    /*0000b6c4*/ STR         R3, [R2, #8] 
    /*0000b6c8*/ BL          0x000000000000B6C8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b6cc*/ LDR         R0, [SP, #24] 
    /*0000b6d0*/ BL          0x000000000000B6D0          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000b6d4*/ SUBS        R6, R0, #0 
    /*0000b6d8*/ BEQ         GDC_ProGyroRotation_xb7a8
    /*0000b6dc*/ LDR         R8, [SP, #12] 
    /*0000b6e0*/ MOV         R1, #18 
    /*0000b6e4*/ ADD         R0, R8, #344                @ 0x158 
    /*0000b6e8*/ BL          0x000000000000B6E8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000b6ec*/ MOV         R1, #37                     @ 0x25 
    /*0000b6f0*/ STR         R6, [SP, #4] 
    /*0000b6f4*/ MOVW        R3, #3763                   @ 0xeb3 
    /*0000b6f8*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000b6fc*/ STR         R3, [SP] 
    /*0000b700*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000b704*/ LDR         R3, [PC, #172]              @ 0x000000000000b7b8 
    /*0000b708*/ MOV         R0, #3 
    /*0000b70c*/ BL          0x000000000000B70C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b710*/ STR         R7, [R4, #748]              @ 0x2ec 
    /*0000b714*/ LDR         R0, [SP, #24] 
    /*0000b718*/ STR         R7, [FP, #752]              @ 0x2f0 
    /*0000b71c*/ BL          0x000000000000B71C          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000b720*/ MOV         R1, R8 
    /*0000b724*/ MOV         R0, R5 
    /*0000b728*/ BL          0x0000000000005E7C 
    /*0000b72c*/ B           GDC_ProGyroRotation_xb4fc
    GDC_ProGyroRotation_xb730:
    /*0000b730*/ LDR         R0, [SP, #8] 
    /*0000b734*/ MOV         R1, #18 
    /*0000b738*/ BL          0x000000000000B738          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000b73c*/ MOV         R1, #18 
    /*0000b740*/ ADD         R0, SL, #344                @ 0x158 
    /*0000b744*/ BL          0x000000000000B744          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000b748*/ MOVW        R3, #3750                   @ 0xea6 
    /*0000b74c*/ STR         R6, [SP, #4] 
    /*0000b750*/ MOVW        R2, #0                      @ .LC84 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3808] 
    /*0000b754*/ STR         R3, [SP] 
    /*0000b758*/ MOVT        R2, #0                      @ .LC84 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3808] 
    /*0000b75c*/ LDR         R3, [PC, #84]               @ 0x000000000000b7b8 
    /*0000b760*/ MOV         R1, #37                     @ 0x25 
    /*0000b764*/ MOV         R0, #3 
    /*0000b768*/ BL          0x000000000000B768          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b76c*/ B           GDC_ProGyroRotation_xb5bc
    GDC_ProGyroRotation_xb770:
    /*0000b770*/ MOV         R1, #18 
    /*0000b774*/ MOV         R0, R4 
    /*0000b778*/ BL          0x000000000000B778          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000b77c*/ MOVW        R3, #3719                   @ 0xe87 
    /*0000b780*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*0000b784*/ STR         R3, [SP] 
    /*0000b788*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*0000b78c*/ LDR         R3, [PC, #36]               @ 0x000000000000b7b8 
    /*0000b790*/ MOV         R1, #37                     @ 0x25 
    /*0000b794*/ MOV         R0, #3 
    /*0000b798*/ MOVW        R6, #32781                  @ 0x800d 
    /*0000b79c*/ BL          0x000000000000B79C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b7a0*/ MOVT        R6, #40997                  @ 0xa025 
    /*0000b7a4*/ B           GDC_ProGyroRotation_xb5c8
    GDC_ProGyroRotation_xb7a8:
    /*0000b7a8*/ LDR         R1, [SP, #12] 
    /*0000b7ac*/ MOV         R0, R5 
    /*0000b7b0*/ BL          0x0000000000005E7C 
    /*0000b7b4*/ B           GDC_ProGyroRotation_xb4fc
    /*0000b7b8*/ MULEQ       R0, R4, R7 
FUNC_END GDC_ProGyroRotation


FUNC_BEGIN GDC_ProDISRotation
    /*0000b7bc*/ PUSH        {R4, LR} 
    /*0000b7c0*/ LDR         LR, [R2, #16] 
    /*0000b7c4*/ LDR         IP, [SP, #8] 
    /*0000b7c8*/ CMP         LR, #0 
    /*0000b7cc*/ LDR         LR, [SP, #12] 
    /*0000b7d0*/ BEQ         GDC_ProDISRotation_xb7ec
    /*0000b7d4*/ LDR         R4, [IP, #128]              @ 0x80 
    /*0000b7d8*/ CMP         R4, #2 
    /*0000b7dc*/ BEQ         GDC_ProDISRotation_xb7fc
    /*0000b7e0*/ STR         IP, [SP, #8] 
    /*0000b7e4*/ POP         {R4, LR} 
    GDC_ProDISRotation_xb7e8:
    /*0000b7e8*/ B           GDC_ProDISRotation_xb7e8    @ GDC_ProcDISRotationGdc [R_ARM_JUMP24: .text+0xb238] 
    GDC_ProDISRotation_xb7ec:
    /*0000b7ec*/ STR         LR, [SP, #12] 
    /*0000b7f0*/ STR         IP, [SP, #8] 
    /*0000b7f4*/ POP         {R4, LR} 
    GDC_ProDISRotation_xb7f8:
    /*0000b7f8*/ B           GDC_ProDISRotation_xb7f8    @ GDC_ProcDISRotationEx [R_ARM_JUMP24: .text+0xae90] 
    GDC_ProDISRotation_xb7fc:
    /*0000b7fc*/ POP         {R4, LR} 
    GDC_ProDISRotation_xb800:
    /*0000b800*/ B           GDC_ProDISRotation_xb800    @ GDC_ProGyroRotation [R_ARM_JUMP24: .text+0xb474] 
FUNC_END GDC_ProDISRotation


FUNC_BEGIN GDC_ProDIS
    /*0000b804*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000b808*/ MOV         R7, R1 
    /*0000b80c*/ LDR         R9, [R7, #12] 
    /*0000b810*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000b814*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000b818*/ MOV         R4, R0 
    /*0000b81c*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000b820*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000b824*/ ADD         SL, R4, #4096               @ 0x1000 
    /*0000b828*/ LDR         R5, [R1] 
    /*0000b82c*/ CMP         R9, #63                     @ 0x3f 
    /*0000b830*/ STR         R2, [SP, #8] 
    /*0000b834*/ STR         R3, [SP, #12] 
    /*0000b838*/ ADD         R5, R5, #648                @ 0x288 
    /*0000b83c*/ STR         R0, [SL, #752]              @ 0x2f0 
    /*0000b840*/ SUB         FP, R4, #8 
    /*0000b844*/ LDR         R8, [SP, #104]              @ 0x68 
    /*0000b848*/ BHI         GDC_ProDIS_xb97c
    GDC_ProDIS_xb84c:
    /*0000b84c*/ LDR         R3, [R8, #216]              @ 0xd8 
    /*0000b850*/ MOV         R1, #18 
    /*0000b854*/ LDR         R2, [R8, #212]              @ 0xd4 
    /*0000b858*/ MOV         R0, R4 
    /*0000b85c*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000b860*/ MOV         R3, #1 
    /*0000b864*/ STR         R2, [SP, #52]               @ 0x34 
    /*0000b868*/ STR         R3, [SP, #48]               @ 0x30 
    /*0000b86c*/ MOV         R3, #0 
    /*0000b870*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0000b874*/ BL          0x000000000000B874          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000b878*/ SUBS        R6, R0, #0 
    /*0000b87c*/ BEQ         GDC_ProDIS_xb8bc
    /*0000b880*/ MOVW        R3, #3841                   @ 0xf01 
    /*0000b884*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000b888*/ STR         R3, [SP] 
    /*0000b88c*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000b890*/ STR         R6, [SP, #4] 
    /*0000b894*/ MOV         R1, #37                     @ 0x25 
    /*0000b898*/ LDR         R3, [PC, #452]              @ 0x000000000000ba64 
    /*0000b89c*/ MOV         R0, #3 
    /*0000b8a0*/ BL          0x000000000000B8A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProDIS_xb8a4:
    /*0000b8a4*/ MOV         R1, FP 
    /*0000b8a8*/ MOV         R0, R5 
    /*0000b8ac*/ BL          0x0000000000005E7C 
    GDC_ProDIS_xb8b0:
    /*0000b8b0*/ MOV         R0, R6 
    /*0000b8b4*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000b8b8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProDIS_xb8bc:
    /*0000b8bc*/ LDR         R3, [R7, #8] 
    /*0000b8c0*/ ADD         IP, SP, #28 
    /*0000b8c4*/ LDR         R2, [R7, #4] 
    /*0000b8c8*/ ADD         R0, SP, #24 
    /*0000b8cc*/ LDR         R1, [R7] 
    /*0000b8d0*/ STR         IP, [SP] 
    /*0000b8d4*/ BL          0x000000000000B8D4          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000b8d8*/ SUBS        R6, R0, #0 
    /*0000b8dc*/ BNE         GDC_ProDIS_xb990
    /*0000b8e0*/ LDR         R2, [SL, #748]              @ 0x2ec 
    /*0000b8e4*/ MOVW        R3, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*0000b8e8*/ STR         R9, [R4, #740]              @ 0x2e4 
    /*0000b8ec*/ MOVT        R3, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*0000b8f0*/ STR         R6, [R4, #744]              @ 0x2e8 
    /*0000b8f4*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000b8f8*/ STR         R2, [R4, #736]              @ 0x2e0 
    /*0000b8fc*/ LDR         R3, [R8, #128]              @ 0x80 
    /*0000b900*/ CMP         R3, #2 
    /*0000b904*/ BEQ         GDC_ProDIS_xba48
    /*0000b908*/ LDR         R1, [SP, #12] 
    /*0000b90c*/ MOV         R2, R7 
    /*0000b910*/ LDR         R0, [SP, #24] 
    /*0000b914*/ LDR         R3, [SP, #8] 
    /*0000b918*/ STR         R1, [SP] 
    /*0000b91c*/ MOV         R1, R4 
    /*0000b920*/ STR         R8, [SP, #4] 
    /*0000b924*/ BL          0x00000000000062B0 
    /*0000b928*/ MOV         R6, R0 
    GDC_ProDIS_xb92c:
    /*0000b92c*/ CMP         R6, #0 
    /*0000b930*/ BEQ         GDC_ProDIS_xb9c4
    /*0000b934*/ MOV         R1, #18 
    /*0000b938*/ MOV         R0, R4 
    /*0000b93c*/ BL          0x000000000000B93C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000b940*/ STR         R6, [SP, #4] 
    /*0000b944*/ MOVW        R3, #3869                   @ 0xf1d 
    /*0000b948*/ MOV         R1, #37                     @ 0x25 
    /*0000b94c*/ STR         R3, [SP] 
    /*0000b950*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x374c] 
    /*0000b954*/ LDR         R3, [PC, #264]              @ 0x000000000000ba64 
    /*0000b958*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x374c] 
    /*0000b95c*/ MOV         R0, #3 
    /*0000b960*/ BL          0x000000000000B960          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b964*/ MOV         R3, #0 
    /*0000b968*/ LDR         R0, [SP, #24] 
    /*0000b96c*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000b970*/ STR         R3, [SL, #752]              @ 0x2f0 
    /*0000b974*/ BL          0x000000000000B974          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000b978*/ B           GDC_ProDIS_xb8a4
    GDC_ProDIS_xb97c:
    /*0000b97c*/ MOV         R0, R9 
    /*0000b980*/ BL          0x0000000000005F18 
    /*0000b984*/ SUBS        R6, R0, #0 
    /*0000b988*/ BNE         GDC_ProDIS_xb8a4
    /*0000b98c*/ B           GDC_ProDIS_xb84c
    GDC_ProDIS_xb990:
    /*0000b990*/ MOV         R0, R4 
    /*0000b994*/ MOV         R1, #18 
    /*0000b998*/ BL          0x000000000000B998          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000b99c*/ MOVW        R3, #3850                   @ 0xf0a 
    /*0000b9a0*/ STR         R6, [SP, #4] 
    /*0000b9a4*/ MOVW        R2, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3844] 
    /*0000b9a8*/ STR         R3, [SP] 
    /*0000b9ac*/ MOVT        R2, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3844] 
    /*0000b9b0*/ LDR         R3, [PC, #172]              @ 0x000000000000ba64 
    /*0000b9b4*/ MOV         R1, #37                     @ 0x25 
    /*0000b9b8*/ MOV         R0, #3 
    /*0000b9bc*/ BL          0x000000000000B9BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b9c0*/ B           GDC_ProDIS_xb8a4
    GDC_ProDIS_xb9c4:
    /*0000b9c4*/ ADD         R1, SP, #20 
    /*0000b9c8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000b9cc*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000b9d0*/ BL          0x000000000000B9D0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000b9d4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000b9d8*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000b9dc*/ ADD         R1, SP, #20 
    /*0000b9e0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000b9e4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000b9e8*/ LDR         R2, [R3, R9, LSL #2] 
    /*0000b9ec*/ LDR         R3, [R2, #8] 
    /*0000b9f0*/ ADD         R3, R3, #1 
    /*0000b9f4*/ STR         R3, [R2, #8] 
    /*0000b9f8*/ BL          0x000000000000B9F8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b9fc*/ LDR         R0, [SP, #24] 
    /*0000ba00*/ BL          0x000000000000BA00          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000ba04*/ SUBS        R6, R0, #0 
    /*0000ba08*/ BEQ         GDC_ProDIS_xb8b0
    /*0000ba0c*/ STR         R6, [SP, #4] 
    /*0000ba10*/ MOVW        R3, #3881                   @ 0xf29 
    /*0000ba14*/ MOV         R1, #37                     @ 0x25 
    /*0000ba18*/ STR         R3, [SP] 
    /*0000ba1c*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000ba20*/ LDR         R3, [PC, #60]               @ 0x000000000000ba64 
    /*0000ba24*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000ba28*/ MOV         R0, #3 
    /*0000ba2c*/ BL          0x000000000000BA2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ba30*/ MOV         R3, #0 
    /*0000ba34*/ LDR         R0, [SP, #24] 
    /*0000ba38*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000ba3c*/ STR         R3, [SL, #752]              @ 0x2f0 
    /*0000ba40*/ BL          0x000000000000BA40          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000ba44*/ B           GDC_ProDIS_xb8b0
    GDC_ProDIS_xba48:
    /*0000ba48*/ MOV         R2, R7 
    /*0000ba4c*/ LDR         R3, [SP, #108]              @ 0x6c 
    /*0000ba50*/ MOV         R1, R4 
    /*0000ba54*/ LDR         R0, [SP, #24] 
    /*0000ba58*/ BL          0x0000000000005FA8 
    /*0000ba5c*/ MOV         R6, R0 
    /*0000ba60*/ B           GDC_ProDIS_xb92c
    /*0000ba64*/ ANDEQ       R0, R0, R8, LSR #15 
FUNC_END GDC_ProDIS


FUNC_BEGIN GDC_ProLDCSpeadRotationEx
    /*0000ba68*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000ba6c*/ MOV         R7, R1 
    /*0000ba70*/ LDR         R9, [R7, #12] 
    /*0000ba74*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000ba78*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000ba7c*/ MOV         R4, R0 
    /*0000ba80*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000ba84*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0000ba88*/ ADD         SL, R4, #4096               @ 0x1000 
    /*0000ba8c*/ LDR         R5, [R1] 
    /*0000ba90*/ CMP         R9, #63                     @ 0x3f 
    /*0000ba94*/ STR         R2, [SP, #8] 
    /*0000ba98*/ STR         R3, [SP, #12] 
    /*0000ba9c*/ ADD         R5, R5, #648                @ 0x288 
    /*0000baa0*/ STR         R0, [SL, #752]              @ 0x2f0 
    /*0000baa4*/ SUB         FP, R4, #8 
    /*0000baa8*/ LDR         R8, [SP, #112]              @ 0x70 
    /*0000baac*/ BHI         GDC_ProLDCSpeadRotationEx_xbbe4
    GDC_ProLDCSpeadRotationEx_xbab0:
    /*0000bab0*/ LDR         R3, [R8, #216]              @ 0xd8 
    /*0000bab4*/ MOV         R1, #18 
    /*0000bab8*/ LDR         R2, [R8, #212]              @ 0xd4 
    /*0000babc*/ MOV         R0, R4 
    /*0000bac0*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000bac4*/ MOV         R3, #1 
    /*0000bac8*/ STR         R2, [SP, #60]               @ 0x3c 
    /*0000bacc*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000bad0*/ MOV         R3, #0 
    /*0000bad4*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000bad8*/ BL          0x000000000000BAD8          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000badc*/ SUBS        R6, R0, #0 
    /*0000bae0*/ BEQ         GDC_ProLDCSpeadRotationEx_xbb20
    /*0000bae4*/ MOVW        R3, #3932                   @ 0xf5c 
    /*0000bae8*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000baec*/ STR         R3, [SP] 
    /*0000baf0*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000baf4*/ STR         R6, [SP, #4] 
    /*0000baf8*/ MOV         R1, #37                     @ 0x25 
    /*0000bafc*/ LDR         R3, [PC, #736]              @ 0x000000000000bde4 
    /*0000bb00*/ MOV         R0, #3 
    /*0000bb04*/ BL          0x000000000000BB04          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProLDCSpeadRotationEx_xbb08:
    /*0000bb08*/ MOV         R1, FP 
    /*0000bb0c*/ MOV         R0, R5 
    /*0000bb10*/ BL          0x0000000000005E7C 
    GDC_ProLDCSpeadRotationEx_xbb14:
    /*0000bb14*/ MOV         R0, R6 
    /*0000bb18*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000bb1c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProLDCSpeadRotationEx_xbb20:
    /*0000bb20*/ LDR         R3, [R7, #8] 
    /*0000bb24*/ ADD         IP, SP, #36                 @ 0x24 
    /*0000bb28*/ LDR         R2, [R7, #4] 
    /*0000bb2c*/ ADD         R0, SP, #32 
    /*0000bb30*/ LDR         R1, [R7] 
    /*0000bb34*/ STR         IP, [SP] 
    /*0000bb38*/ BL          0x000000000000BB38          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000bb3c*/ SUBS        R6, R0, #0 
    /*0000bb40*/ BNE         GDC_ProLDCSpeadRotationEx_xbbf8
    /*0000bb44*/ BL          0x0000000000005D48 
    /*0000bb48*/ SUBS        R3, R0, #0 
    /*0000bb4c*/ STR         R3, [SP, #16] 
    /*0000bb50*/ BEQ         GDC_ProLDCSpeadRotationEx_xbd2c
    /*0000bb54*/ LDR         R3, [SP, #16] 
    /*0000bb58*/ MOV         R2, #776                    @ 0x308 
    /*0000bb5c*/ MOV         R1, R4 
    /*0000bb60*/ ADD         R3, R3, #8 
    /*0000bb64*/ MOV         R6, R3 
    /*0000bb68*/ MOV         R0, R3 
    /*0000bb6c*/ BL          0x000000000000BB6C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000bb70*/ MOV         R0, R6 
    /*0000bb74*/ LDR         R3, [SP, #12] 
    /*0000bb78*/ MOV         R1, R7 
    /*0000bb7c*/ LDR         R2, [SP, #8] 
    /*0000bb80*/ STR         R6, [SP, #20] 
    /*0000bb84*/ BL          0x000000000000BB84          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*0000bb88*/ SUBS        R6, R0, #0 
    /*0000bb8c*/ BEQ         GDC_ProLDCSpeadRotationEx_xbc2c
    /*0000bb90*/ MOV         R1, #18 
    /*0000bb94*/ LDR         R0, [SP, #20] 
    /*0000bb98*/ BL          0x000000000000BB98          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000bb9c*/ MOVW        R3, #3964                   @ 0xf7c 
    /*0000bba0*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*0000bba4*/ STR         R3, [SP] 
    /*0000bba8*/ STR         R6, [SP, #4] 
    /*0000bbac*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*0000bbb0*/ LDR         R3, [PC, #556]              @ 0x000000000000bde4 
    /*0000bbb4*/ MOV         R1, #37                     @ 0x25 
    /*0000bbb8*/ MOV         R0, #3 
    /*0000bbbc*/ BL          0x000000000000BBBC          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProLDCSpeadRotationEx_xbbc0:
    /*0000bbc0*/ LDR         R1, [SP, #16] 
    /*0000bbc4*/ MOV         R0, R5 
    /*0000bbc8*/ BL          0x0000000000005E7C 
    GDC_ProLDCSpeadRotationEx_xbbcc:
    /*0000bbcc*/ MOV         R3, #0 
    /*0000bbd0*/ LDR         R0, [SP, #32] 
    /*0000bbd4*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000bbd8*/ STR         R3, [SL, #752]              @ 0x2f0 
    /*0000bbdc*/ BL          0x000000000000BBDC          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000bbe0*/ B           GDC_ProLDCSpeadRotationEx_xbb08
    GDC_ProLDCSpeadRotationEx_xbbe4:
    /*0000bbe4*/ MOV         R0, R9 
    /*0000bbe8*/ BL          0x0000000000005F18 
    /*0000bbec*/ SUBS        R6, R0, #0 
    /*0000bbf0*/ BNE         GDC_ProLDCSpeadRotationEx_xbb08
    /*0000bbf4*/ B           GDC_ProLDCSpeadRotationEx_xbab0
    GDC_ProLDCSpeadRotationEx_xbbf8:
    /*0000bbf8*/ MOV         R0, R4 
    /*0000bbfc*/ MOV         R1, #18 
    /*0000bc00*/ BL          0x000000000000BC00          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000bc04*/ MOVW        R3, #3941                   @ 0xf65 
    /*0000bc08*/ STR         R6, [SP, #4] 
    /*0000bc0c*/ MOVW        R2, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3844] 
    /*0000bc10*/ STR         R3, [SP] 
    /*0000bc14*/ MOVT        R2, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3844] 
    /*0000bc18*/ LDR         R3, [PC, #452]              @ 0x000000000000bde4 
    /*0000bc1c*/ MOV         R1, #37                     @ 0x25 
    /*0000bc20*/ MOV         R0, #3 
    /*0000bc24*/ BL          0x000000000000BC24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bc28*/ B           GDC_ProLDCSpeadRotationEx_xbb08
    GDC_ProLDCSpeadRotationEx_xbc2c:
    /*0000bc2c*/ LDR         R1, [SP, #12] 
    /*0000bc30*/ MOV         R2, R7 
    /*0000bc34*/ STR         R8, [SP, #4] 
    /*0000bc38*/ LDR         R8, [SP, #20] 
    /*0000bc3c*/ STR         R1, [SP] 
    /*0000bc40*/ LDR         R0, [SP, #32] 
    /*0000bc44*/ LDR         R3, [SP, #8] 
    /*0000bc48*/ MOV         R1, R8 
    /*0000bc4c*/ BL          0x0000000000006D50 
    /*0000bc50*/ SUBS        R6, R0, #0 
    /*0000bc54*/ BNE         GDC_ProLDCSpeadRotationEx_xbce8
    /*0000bc58*/ LDR         R3, [SP, #16] 
    /*0000bc5c*/ MOV         R2, #336                    @ 0x150 
    /*0000bc60*/ MOV         R0, R4 
    /*0000bc64*/ MOV         R8, R6 
    /*0000bc68*/ ADD         R1, R3, #344                @ 0x158 
    /*0000bc6c*/ BL          0x000000000000BC6C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000bc70*/ LDR         R1, [SP, #16] 
    /*0000bc74*/ MOV         R0, R5 
    /*0000bc78*/ BL          0x0000000000005E7C 
    /*0000bc7c*/ LDR         R0, [SL, #748]              @ 0x2ec 
    /*0000bc80*/ LDR         R3, [SP, #8] 
    /*0000bc84*/ MOV         R2, R7 
    /*0000bc88*/ STR         R6, [R4, #744]              @ 0x2e8 
    /*0000bc8c*/ MOVW        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*0000bc90*/ STR         R0, [R4, #736]              @ 0x2e0 
    /*0000bc94*/ MOVT        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*0000bc98*/ STR         R9, [R4, #740]              @ 0x2e4 
    /*0000bc9c*/ STR         R1, [R4, #748]              @ 0x2ec 
    /*0000bca0*/ MOV         R1, R4 
    /*0000bca4*/ LDR         R0, [SP, #32] 
    /*0000bca8*/ BL          0x00000000000060CC 
    /*0000bcac*/ SUBS        R6, R0, #0 
    /*0000bcb0*/ BEQ         GDC_ProLDCSpeadRotationEx_xbd64
    /*0000bcb4*/ MOV         R1, #18 
    /*0000bcb8*/ MOV         R0, R4 
    /*0000bcbc*/ BL          0x000000000000BCBC          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000bcc0*/ MOVW        R3, #3990                   @ 0xf96 
    /*0000bcc4*/ STR         R6, [SP, #4] 
    /*0000bcc8*/ MOVW        R2, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3680] 
    /*0000bccc*/ STR         R3, [SP] 
    /*0000bcd0*/ MOVT        R2, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3680] 
    /*0000bcd4*/ LDR         R3, [PC, #264]              @ 0x000000000000bde4 
    /*0000bcd8*/ MOV         R1, #37                     @ 0x25 
    /*0000bcdc*/ MOV         R0, #3 
    /*0000bce0*/ BL          0x000000000000BCE0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bce4*/ B           GDC_ProLDCSpeadRotationEx_xbbcc
    GDC_ProLDCSpeadRotationEx_xbce8:
    /*0000bce8*/ MOV         R0, R8 
    /*0000bcec*/ MOV         R1, #18 
    /*0000bcf0*/ BL          0x000000000000BCF0          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000bcf4*/ LDR         R3, [SP, #16] 
    /*0000bcf8*/ MOV         R1, #18 
    /*0000bcfc*/ ADD         R0, R3, #344                @ 0x158 
    /*0000bd00*/ BL          0x000000000000BD00          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000bd04*/ MOVW        R3, #3974                   @ 0xf86 
    /*0000bd08*/ STR         R6, [SP, #4] 
    /*0000bd0c*/ MOVW        R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3880] 
    /*0000bd10*/ STR         R3, [SP] 
    /*0000bd14*/ MOVT        R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3880] 
    /*0000bd18*/ LDR         R3, [PC, #196]              @ 0x000000000000bde4 
    /*0000bd1c*/ MOV         R1, #37                     @ 0x25 
    /*0000bd20*/ MOV         R0, #3 
    /*0000bd24*/ BL          0x000000000000BD24          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bd28*/ B           GDC_ProLDCSpeadRotationEx_xbbc0
    GDC_ProLDCSpeadRotationEx_xbd2c:
    /*0000bd2c*/ MOV         R1, #18 
    /*0000bd30*/ MOV         R0, R4 
    /*0000bd34*/ BL          0x000000000000BD34          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000bd38*/ MOVW        R3, #3949                   @ 0xf6d 
    /*0000bd3c*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*0000bd40*/ STR         R3, [SP] 
    /*0000bd44*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*0000bd48*/ LDR         R3, [PC, #148]              @ 0x000000000000bde4 
    /*0000bd4c*/ MOV         R1, #37                     @ 0x25 
    /*0000bd50*/ MOV         R0, #3 
    /*0000bd54*/ MOVW        R6, #32781                  @ 0x800d 
    /*0000bd58*/ BL          0x000000000000BD58          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bd5c*/ MOVT        R6, #40997                  @ 0xa025 
    /*0000bd60*/ B           GDC_ProLDCSpeadRotationEx_xbbcc
    GDC_ProLDCSpeadRotationEx_xbd64:
    /*0000bd64*/ ADD         R1, SP, #28 
    /*0000bd68*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000bd6c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000bd70*/ BL          0x000000000000BD70          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000bd74*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000bd78*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000bd7c*/ ADD         R1, SP, #28 
    /*0000bd80*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000bd84*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000bd88*/ LDR         R2, [R3, R9, LSL #2] 
    /*0000bd8c*/ LDR         R3, [R2, #8] 
    /*0000bd90*/ ADD         R3, R3, #1 
    /*0000bd94*/ STR         R3, [R2, #8] 
    /*0000bd98*/ BL          0x000000000000BD98          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000bd9c*/ LDR         R0, [SP, #32] 
    /*0000bda0*/ BL          0x000000000000BDA0          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000bda4*/ SUBS        R6, R0, #0 
    /*0000bda8*/ BEQ         GDC_ProLDCSpeadRotationEx_xbb14
    /*0000bdac*/ STR         R6, [SP, #4] 
    /*0000bdb0*/ MOVW        R3, #4003                   @ 0xfa3 
    /*0000bdb4*/ MOV         R1, #37                     @ 0x25 
    /*0000bdb8*/ STR         R3, [SP] 
    /*0000bdbc*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000bdc0*/ LDR         R3, [PC, #28]               @ 0x000000000000bde4 
    /*0000bdc4*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000bdc8*/ MOV         R0, #3 
    /*0000bdcc*/ BL          0x000000000000BDCC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bdd0*/ STR         R8, [R4, #748]              @ 0x2ec 
    /*0000bdd4*/ LDR         R0, [SP, #32] 
    /*0000bdd8*/ STR         R8, [SL, #752]              @ 0x2f0 
    /*0000bddc*/ BL          0x000000000000BDDC          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000bde0*/ B           GDC_ProLDCSpeadRotationEx_xbb14
    /*0000bde4*/ @           <UNDEFINED> instruction: 0x000007b4 
FUNC_END GDC_ProLDCSpeadRotationEx


FUNC_BEGIN GDC_ProLDCSpeadRotationVgs
    /*0000bde8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000bdec*/ MOV         R7, R1 
    /*0000bdf0*/ LDR         R8, [R7, #12] 
    /*0000bdf4*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000bdf8*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000bdfc*/ MOV         R4, R0 
    /*0000be00*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000be04*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0000be08*/ ADD         R9, R4, #4096               @ 0x1000 
    /*0000be0c*/ LDR         R5, [R1] 
    /*0000be10*/ CMP         R8, #63                     @ 0x3f 
    /*0000be14*/ MOV         FP, R2 
    /*0000be18*/ STR         R3, [SP, #8] 
    /*0000be1c*/ ADD         R5, R5, #648                @ 0x288 
    /*0000be20*/ STR         R0, [R9, #752]              @ 0x2f0 
    /*0000be24*/ SUB         SL, R4, #8 
    /*0000be28*/ BHI         GDC_ProLDCSpeadRotationVgs_xbf54
    GDC_ProLDCSpeadRotationVgs_xbe2c:
    /*0000be2c*/ MOV         R1, #18 
    /*0000be30*/ MOV         R0, R4 
    /*0000be34*/ BL          0x000000000000BE34          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000be38*/ SUBS        R6, R0, #0 
    /*0000be3c*/ BEQ         GDC_ProLDCSpeadRotationVgs_xbe7c
    /*0000be40*/ MOVW        R3, #4050                   @ 0xfd2 
    /*0000be44*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000be48*/ STR         R3, [SP] 
    /*0000be4c*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000be50*/ STR         R6, [SP, #4] 
    /*0000be54*/ MOV         R1, #37                     @ 0x25 
    /*0000be58*/ LDR         R3, [PC, #740]              @ 0x000000000000c144 
    /*0000be5c*/ MOV         R0, #3 
    /*0000be60*/ BL          0x000000000000BE60          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProLDCSpeadRotationVgs_xbe64:
    /*0000be64*/ MOV         R1, SL 
    /*0000be68*/ MOV         R0, R5 
    /*0000be6c*/ BL          0x0000000000005E7C 
    GDC_ProLDCSpeadRotationVgs_xbe70:
    /*0000be70*/ MOV         R0, R6 
    /*0000be74*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000be78*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProLDCSpeadRotationVgs_xbe7c:
    /*0000be7c*/ LDR         R3, [R7, #8] 
    /*0000be80*/ ADD         IP, SP, #36                 @ 0x24 
    /*0000be84*/ LDR         R2, [R7, #4] 
    /*0000be88*/ ADD         R0, SP, #32 
    /*0000be8c*/ LDR         R1, [R7] 
    /*0000be90*/ STR         IP, [SP] 
    /*0000be94*/ MOV         IP, #1 
    /*0000be98*/ STR         R6, [SP, #68]               @ 0x44 
    /*0000be9c*/ STR         R6, [SP, #60]               @ 0x3c 
    /*0000bea0*/ STR         R6, [SP, #64]               @ 0x40 
    /*0000bea4*/ STR         IP, [SP, #56]               @ 0x38 
    /*0000bea8*/ BL          0x000000000000BEA8          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000beac*/ SUBS        R6, R0, #0 
    /*0000beb0*/ BNE         GDC_ProLDCSpeadRotationVgs_xbf68
    /*0000beb4*/ BL          0x0000000000005D48 
    /*0000beb8*/ SUBS        R3, R0, #0 
    /*0000bebc*/ STR         R3, [SP, #12] 
    /*0000bec0*/ BEQ         GDC_ProLDCSpeadRotationVgs_xc0fc
    /*0000bec4*/ LDR         R3, [SP, #12] 
    /*0000bec8*/ MOV         R2, #776                    @ 0x308 
    /*0000becc*/ MOV         R1, R4 
    /*0000bed0*/ ADD         R3, R3, #8 
    /*0000bed4*/ MOV         R6, R3 
    /*0000bed8*/ MOV         R0, R3 
    /*0000bedc*/ BL          0x000000000000BEDC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000bee0*/ MOV         R0, R6 
    /*0000bee4*/ LDR         R3, [SP, #8] 
    /*0000bee8*/ MOV         R2, FP 
    /*0000beec*/ MOV         R1, R7 
    /*0000bef0*/ STR         R6, [SP, #16] 
    /*0000bef4*/ BL          0x000000000000BEF4          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*0000bef8*/ SUBS        R6, R0, #0 
    /*0000befc*/ BEQ         GDC_ProLDCSpeadRotationVgs_xbf9c
    /*0000bf00*/ MOV         R1, #18 
    /*0000bf04*/ LDR         R0, [SP, #16] 
    /*0000bf08*/ BL          0x000000000000BF08          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000bf0c*/ MOVW        R3, #4088                   @ 0xff8 
    /*0000bf10*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*0000bf14*/ STR         R3, [SP] 
    /*0000bf18*/ STR         R6, [SP, #4] 
    /*0000bf1c*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*0000bf20*/ LDR         R3, [PC, #540]              @ 0x000000000000c144 
    /*0000bf24*/ MOV         R1, #37                     @ 0x25 
    /*0000bf28*/ MOV         R0, #3 
    /*0000bf2c*/ BL          0x000000000000BF2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProLDCSpeadRotationVgs_xbf30:
    /*0000bf30*/ LDR         R1, [SP, #12] 
    /*0000bf34*/ MOV         R0, R5 
    /*0000bf38*/ BL          0x0000000000005E7C 
    GDC_ProLDCSpeadRotationVgs_xbf3c:
    /*0000bf3c*/ MOV         R3, #0 
    /*0000bf40*/ LDR         R0, [SP, #32] 
    /*0000bf44*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000bf48*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*0000bf4c*/ BL          0x000000000000BF4C          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000bf50*/ B           GDC_ProLDCSpeadRotationVgs_xbe64
    GDC_ProLDCSpeadRotationVgs_xbf54:
    /*0000bf54*/ MOV         R0, R8 
    /*0000bf58*/ BL          0x0000000000005F18 
    /*0000bf5c*/ SUBS        R6, R0, #0 
    /*0000bf60*/ BNE         GDC_ProLDCSpeadRotationVgs_xbe64
    /*0000bf64*/ B           GDC_ProLDCSpeadRotationVgs_xbe2c
    GDC_ProLDCSpeadRotationVgs_xbf68:
    /*0000bf68*/ MOV         R0, R4 
    /*0000bf6c*/ MOV         R1, #18 
    /*0000bf70*/ BL          0x000000000000BF70          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000bf74*/ MOVW        R3, #4066                   @ 0xfe2 
    /*0000bf78*/ STR         R6, [SP, #4] 
    /*0000bf7c*/ MOVW        R2, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3844] 
    /*0000bf80*/ STR         R3, [SP] 
    /*0000bf84*/ MOVT        R2, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3844] 
    /*0000bf88*/ LDR         R3, [PC, #436]              @ 0x000000000000c144 
    /*0000bf8c*/ MOV         R1, #37                     @ 0x25 
    /*0000bf90*/ MOV         R0, #3 
    /*0000bf94*/ BL          0x000000000000BF94          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bf98*/ B           GDC_ProLDCSpeadRotationVgs_xbe64
    GDC_ProLDCSpeadRotationVgs_xbf9c:
    /*0000bf9c*/ LDR         IP, [SP, #12] 
    /*0000bfa0*/ MOV         R3, FP 
    /*0000bfa4*/ LDR         R0, [FP, #16] 
    /*0000bfa8*/ MOV         R2, R7 
    /*0000bfac*/ ADD         R1, IP, #688                @ 0x2b0 
    /*0000bfb0*/ MOV         R7, R6 
    /*0000bfb4*/ STMDB       R1, {R0, R6} 
    /*0000bfb8*/ LDR         R0, [IP, #344]              @ 0x158 
    /*0000bfbc*/ STR         R0, [IP, #688]              @ 0x2b0 
    /*0000bfc0*/ MOVW        R0, #0                      @ Gdc_B4VgsCallBack [R_ARM_MOVW_ABS_NC: .text+0xd670] 
    /*0000bfc4*/ STR         R6, [R1, #4] 
    /*0000bfc8*/ MOVT        R0, #0                      @ Gdc_B4VgsCallBack [R_ARM_MOVT_ABS: .text+0xd670] 
    /*0000bfcc*/ LDR         R1, [IP, #348]              @ 0x15c 
    /*0000bfd0*/ STR         R0, [SP, #20] 
    /*0000bfd4*/ STR         R6, [IP, #700]              @ 0x2bc 
    /*0000bfd8*/ STR         R1, [IP, #696]              @ 0x2b8 
    /*0000bfdc*/ LDR         LR, [SP, #20] 
    /*0000bfe0*/ LDR         FP, [R9, #748]              @ 0x2ec 
    /*0000bfe4*/ STR         R6, [IP, #708]              @ 0x2c4 
    /*0000bfe8*/ STR         R6, [IP, #716]              @ 0x2cc 
    /*0000bfec*/ STR         FP, [IP, #704]              @ 0x2c0 
    /*0000bff0*/ MOV         FP, IP 
    /*0000bff4*/ STR         R8, [IP, #712]              @ 0x2c8 
    /*0000bff8*/ STR         LR, [IP, #756]              @ 0x2f4 
    /*0000bffc*/ LDR         IP, [SP, #112]              @ 0x70 
    /*0000c000*/ LDR         R1, [SP, #16] 
    /*0000c004*/ LDR         R0, [SP, #32] 
    /*0000c008*/ STR         IP, [SP, #4] 
    /*0000c00c*/ LDR         IP, [SP, #8] 
    /*0000c010*/ STR         IP, [SP] 
    /*0000c014*/ BL          0x0000000000006D50 
    /*0000c018*/ SUBS        R6, R0, #0 
    /*0000c01c*/ BNE         GDC_ProLDCSpeadRotationVgs_xc0bc
    /*0000c020*/ ADD         R1, SP, #28 
    /*0000c024*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000c028*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000c02c*/ BL          0x000000000000C02C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000c030*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000c034*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000c038*/ ADD         R1, SP, #28 
    /*0000c03c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000c040*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000c044*/ LDR         R2, [R3, R8, LSL #2] 
    /*0000c048*/ LDR         R3, [R2, #8] 
    /*0000c04c*/ ADD         R3, R3, #1 
    /*0000c050*/ STR         R3, [R2, #8] 
    /*0000c054*/ BL          0x000000000000C054          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000c058*/ LDR         R0, [SP, #32] 
    /*0000c05c*/ BL          0x000000000000C05C          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000c060*/ SUBS        R6, R0, #0 
    /*0000c064*/ BEQ         GDC_ProLDCSpeadRotationVgs_xc134
    /*0000c068*/ LDR         R8, [SP, #12] 
    /*0000c06c*/ MOV         R1, #18 
    /*0000c070*/ ADD         R0, R8, #344                @ 0x158 
    /*0000c074*/ BL          0x000000000000C074          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000c078*/ STR         R6, [SP, #4] 
    /*0000c07c*/ MOVW        R3, #4118                   @ 0x1016 
    /*0000c080*/ MOV         R1, #37                     @ 0x25 
    /*0000c084*/ STR         R3, [SP] 
    /*0000c088*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000c08c*/ LDR         R3, [PC, #176]              @ 0x000000000000c144 
    /*0000c090*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000c094*/ MOV         R0, #3 
    /*0000c098*/ BL          0x000000000000C098          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c09c*/ MOV         R0, R5 
    /*0000c0a0*/ MOV         R1, R8 
    /*0000c0a4*/ BL          0x0000000000005E7C 
    /*0000c0a8*/ STR         R7, [R4, #748]              @ 0x2ec 
    /*0000c0ac*/ LDR         R0, [SP, #32] 
    /*0000c0b0*/ STR         R7, [R9, #752]              @ 0x2f0 
    /*0000c0b4*/ BL          0x000000000000C0B4          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000c0b8*/ B           GDC_ProLDCSpeadRotationVgs_xbe70
    GDC_ProLDCSpeadRotationVgs_xc0bc:
    /*0000c0bc*/ LDR         R0, [SP, #16] 
    /*0000c0c0*/ MOV         R1, #18 
    /*0000c0c4*/ BL          0x000000000000C0C4          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000c0c8*/ MOV         R1, #18 
    /*0000c0cc*/ ADD         R0, FP, #344                @ 0x158 
    /*0000c0d0*/ BL          0x000000000000C0D0          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000c0d4*/ MOVW        R3, #4105                   @ 0x1009 
    /*0000c0d8*/ STR         R6, [SP, #4] 
    /*0000c0dc*/ MOVW        R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3880] 
    /*0000c0e0*/ STR         R3, [SP] 
    /*0000c0e4*/ MOVT        R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3880] 
    /*0000c0e8*/ LDR         R3, [PC, #84]               @ 0x000000000000c144 
    /*0000c0ec*/ MOV         R1, #37                     @ 0x25 
    /*0000c0f0*/ MOV         R0, #3 
    /*0000c0f4*/ BL          0x000000000000C0F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c0f8*/ B           GDC_ProLDCSpeadRotationVgs_xbf30
    GDC_ProLDCSpeadRotationVgs_xc0fc:
    /*0000c0fc*/ MOV         R1, #18 
    /*0000c100*/ MOV         R0, R4 
    /*0000c104*/ BL          0x000000000000C104          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000c108*/ MOVW        R3, #4074                   @ 0xfea 
    /*0000c10c*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*0000c110*/ STR         R3, [SP] 
    /*0000c114*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*0000c118*/ LDR         R3, [PC, #36]               @ 0x000000000000c144 
    /*0000c11c*/ MOV         R1, #37                     @ 0x25 
    /*0000c120*/ MOV         R0, #3 
    /*0000c124*/ MOVW        R6, #32781                  @ 0x800d 
    /*0000c128*/ BL          0x000000000000C128          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c12c*/ MOVT        R6, #40997                  @ 0xa025 
    /*0000c130*/ B           GDC_ProLDCSpeadRotationVgs_xbf3c
    GDC_ProLDCSpeadRotationVgs_xc134:
    /*0000c134*/ LDR         R1, [SP, #12] 
    /*0000c138*/ MOV         R0, R5 
    /*0000c13c*/ BL          0x0000000000005E7C 
    /*0000c140*/ B           GDC_ProLDCSpeadRotationVgs_xbe70
    /*0000c144*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END GDC_ProLDCSpeadRotationVgs


FUNC_BEGIN GDC_ProLDCSpeadRotation
    /*0000c148*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000c14c*/ LDR         LR, [R2, #16] 
    /*0000c150*/ LDR         IP, [SP, #4] 
    /*0000c154*/ CMP         LR, #0 
    /*0000c158*/ BNE         GDC_ProLDCSpeadRotation_xc168
    /*0000c15c*/ STR         IP, [SP, #4] 
    /*0000c160*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_ProLDCSpeadRotation_xc164:
    /*0000c164*/ B           GDC_ProLDCSpeadRotation_xc164@ GDC_ProLDCSpeadRotationEx [R_ARM_JUMP24: .text+0xba68] 
    GDC_ProLDCSpeadRotation_xc168:
    /*0000c168*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_ProLDCSpeadRotation_xc16c:
    /*0000c16c*/ B           GDC_ProLDCSpeadRotation_xc16c@ GDC_ProLDCSpeadRotationVgs [R_ARM_JUMP24: .text+0xbde8] 
FUNC_END GDC_ProLDCSpeadRotation


FUNC_BEGIN GDC_ProLDCSpead
    /*0000c170*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000c174*/ MOV         R7, R1 
    /*0000c178*/ LDR         R8, [R7, #12] 
    /*0000c17c*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000c180*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000c184*/ MOV         R4, R0 
    /*0000c188*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000c18c*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000c190*/ ADD         R9, R4, #4096               @ 0x1000 
    /*0000c194*/ LDR         R5, [R1] 
    /*0000c198*/ CMP         R8, #63                     @ 0x3f 
    /*0000c19c*/ MOV         FP, R2 
    /*0000c1a0*/ STR         R3, [SP, #8] 
    /*0000c1a4*/ ADD         R5, R5, #648                @ 0x288 
    /*0000c1a8*/ STR         R0, [R9, #752]              @ 0x2f0 
    /*0000c1ac*/ SUB         SL, R4, #8 
    /*0000c1b0*/ BHI         GDC_ProLDCSpead_xc2ec
    GDC_ProLDCSpead_xc1b4:
    /*0000c1b4*/ MOV         R1, #18 
    /*0000c1b8*/ MOV         R0, R4 
    /*0000c1bc*/ BL          0x000000000000C1BC          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000c1c0*/ SUBS        R6, R0, #0 
    /*0000c1c4*/ BEQ         GDC_ProLDCSpead_xc204
    /*0000c1c8*/ MOVW        R3, #4186                   @ 0x105a 
    /*0000c1cc*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000c1d0*/ STR         R3, [SP] 
    /*0000c1d4*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000c1d8*/ STR         R6, [SP, #4] 
    /*0000c1dc*/ MOV         R1, #37                     @ 0x25 
    /*0000c1e0*/ LDR         R3, [PC, #436]              @ 0x000000000000c39c 
    /*0000c1e4*/ MOV         R0, #3 
    /*0000c1e8*/ BL          0x000000000000C1E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProLDCSpead_xc1ec:
    /*0000c1ec*/ MOV         R1, SL 
    /*0000c1f0*/ MOV         R0, R5 
    /*0000c1f4*/ BL          0x0000000000005E7C 
    GDC_ProLDCSpead_xc1f8:
    /*0000c1f8*/ MOV         R0, R6 
    /*0000c1fc*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000c200*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProLDCSpead_xc204:
    /*0000c204*/ LDR         R3, [R7, #8] 
    /*0000c208*/ ADD         R0, SP, #28 
    /*0000c20c*/ LDR         R2, [R7, #4] 
    /*0000c210*/ LDR         R1, [R7] 
    /*0000c214*/ STR         R0, [SP] 
    /*0000c218*/ LDR         R0, [SP, #104]              @ 0x68 
    /*0000c21c*/ STR         R6, [SP, #12] 
    /*0000c220*/ STR         R6, [SP, #60]               @ 0x3c 
    /*0000c224*/ LDR         IP, [R0, #216]              @ 0xd8 
    /*0000c228*/ LDR         LR, [R0, #212]              @ 0xd4 
    /*0000c22c*/ ADD         R0, SP, #24 
    /*0000c230*/ STR         IP, [SP, #56]               @ 0x38 
    /*0000c234*/ MOV         IP, #1 
    /*0000c238*/ STR         LR, [SP, #52]               @ 0x34 
    /*0000c23c*/ STR         IP, [SP, #48]               @ 0x30 
    /*0000c240*/ BL          0x000000000000C240          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000c244*/ SUBS        R6, R0, #0 
    /*0000c248*/ BNE         GDC_ProLDCSpead_xc300
    /*0000c24c*/ LDR         R1, [SP, #104]              @ 0x68 
    /*0000c250*/ MOV         R2, R7 
    /*0000c254*/ LDR         IP, [R9, #748]              @ 0x2ec 
    /*0000c258*/ MOV         R3, FP 
    /*0000c25c*/ LDR         R0, [SP, #24] 
    /*0000c260*/ MOV         R7, R6 
    /*0000c264*/ STR         R1, [SP, #4] 
    /*0000c268*/ LDR         R1, [SP, #8] 
    /*0000c26c*/ STR         R1, [SP] 
    /*0000c270*/ MOVW        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*0000c274*/ STR         R6, [R4, #744]              @ 0x2e8 
    /*0000c278*/ MOVT        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*0000c27c*/ STR         IP, [R4, #736]              @ 0x2e0 
    /*0000c280*/ STR         R1, [R4, #748]              @ 0x2ec 
    /*0000c284*/ MOV         R1, R4 
    /*0000c288*/ STR         R8, [R4, #740]              @ 0x2e4 
    /*0000c28c*/ BL          0x0000000000006D50 
    /*0000c290*/ SUBS        R6, R0, #0 
    /*0000c294*/ BEQ         GDC_ProLDCSpead_xc310
    /*0000c298*/ MOV         R1, #18 
    /*0000c29c*/ MOV         R0, R4 
    /*0000c2a0*/ BL          0x000000000000C2A0          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000c2a4*/ MOV         R1, #18 
    /*0000c2a8*/ ADD         R0, R4, #336                @ 0x150 
    /*0000c2ac*/ BL          0x000000000000C2AC          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000c2b0*/ STR         R6, [SP, #4] 
    /*0000c2b4*/ MOVW        R3, #4214                   @ 0x1076 
    /*0000c2b8*/ MOV         R1, #37                     @ 0x25 
    /*0000c2bc*/ STR         R3, [SP] 
    /*0000c2c0*/ MOVW        R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3880] 
    /*0000c2c4*/ LDR         R3, [PC, #208]              @ 0x000000000000c39c 
    /*0000c2c8*/ MOVT        R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3880] 
    /*0000c2cc*/ MOV         R0, #3 
    /*0000c2d0*/ BL          0x000000000000C2D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c2d4*/ LDR         R3, [SP, #12] 
    /*0000c2d8*/ LDR         R0, [SP, #24] 
    /*0000c2dc*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000c2e0*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*0000c2e4*/ BL          0x000000000000C2E4          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000c2e8*/ B           GDC_ProLDCSpead_xc1ec
    GDC_ProLDCSpead_xc2ec:
    /*0000c2ec*/ MOV         R0, R8 
    /*0000c2f0*/ BL          0x0000000000005F18 
    /*0000c2f4*/ SUBS        R6, R0, #0 
    /*0000c2f8*/ BNE         GDC_ProLDCSpead_xc1ec
    /*0000c2fc*/ B           GDC_ProLDCSpead_xc1b4
    GDC_ProLDCSpead_xc300:
    /*0000c300*/ MOV         R0, R4 
    /*0000c304*/ MOV         R1, #18 
    /*0000c308*/ BL          0x000000000000C308          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000c30c*/ B           GDC_ProLDCSpead_xc1ec
    GDC_ProLDCSpead_xc310:
    /*0000c310*/ ADD         R1, SP, #20 
    /*0000c314*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000c318*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000c31c*/ BL          0x000000000000C31C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000c320*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000c324*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000c328*/ ADD         R1, SP, #20 
    /*0000c32c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000c330*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000c334*/ LDR         R2, [R3, R8, LSL #2] 
    /*0000c338*/ LDR         R3, [R2, #8] 
    /*0000c33c*/ ADD         R3, R3, #1 
    /*0000c340*/ STR         R3, [R2, #8] 
    /*0000c344*/ BL          0x000000000000C344          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000c348*/ LDR         R0, [SP, #24] 
    /*0000c34c*/ BL          0x000000000000C34C          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000c350*/ SUBS        R6, R0, #0 
    /*0000c354*/ BEQ         GDC_ProLDCSpead_xc1f8
    /*0000c358*/ MOV         R1, #18 
    /*0000c35c*/ ADD         R0, R4, #336                @ 0x150 
    /*0000c360*/ BL          0x000000000000C360          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000c364*/ STR         R6, [SP, #4] 
    /*0000c368*/ MOVW        R3, #4227                   @ 0x1083 
    /*0000c36c*/ MOV         R1, #37                     @ 0x25 
    /*0000c370*/ STR         R3, [SP] 
    /*0000c374*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000c378*/ LDR         R3, [PC, #28]               @ 0x000000000000c39c 
    /*0000c37c*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000c380*/ MOV         R0, #3 
    /*0000c384*/ BL          0x000000000000C384          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c388*/ STR         R7, [R4, #748]              @ 0x2ec 
    /*0000c38c*/ LDR         R0, [SP, #24] 
    /*0000c390*/ STR         R7, [R9, #752]              @ 0x2f0 
    /*0000c394*/ BL          0x000000000000C394          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000c398*/ B           GDC_ProLDCSpead_xc1f8
    /*0000c39c*/ ANDEQ       R0, R0, IP, ROR #15 
FUNC_END GDC_ProLDCSpead


FUNC_BEGIN GDC_ProLDCRotation
    /*0000c3a0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000c3a4*/ MOV         R7, R1 
    /*0000c3a8*/ LDR         R8, [R7, #12] 
    /*0000c3ac*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000c3b0*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000c3b4*/ MOV         R4, R0 
    /*0000c3b8*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000c3bc*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000c3c0*/ ADD         R9, R4, #4096               @ 0x1000 
    /*0000c3c4*/ LDR         R5, [R1] 
    /*0000c3c8*/ CMP         R8, #63                     @ 0x3f 
    /*0000c3cc*/ MOV         FP, R2 
    /*0000c3d0*/ STR         R3, [SP, #8] 
    /*0000c3d4*/ ADD         R5, R5, #648                @ 0x288 
    /*0000c3d8*/ STR         R0, [R9, #752]              @ 0x2f0 
    /*0000c3dc*/ SUB         SL, R4, #8 
    /*0000c3e0*/ BHI         GDC_ProLDCRotation_xc508
    GDC_ProLDCRotation_xc3e4:
    /*0000c3e4*/ MOV         R1, #18 
    /*0000c3e8*/ MOV         R0, R4 
    /*0000c3ec*/ BL          0x000000000000C3EC          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000c3f0*/ SUBS        R6, R0, #0 
    /*0000c3f4*/ BEQ         GDC_ProLDCRotation_xc434
    /*0000c3f8*/ MOVW        R3, #4270                   @ 0x10ae 
    /*0000c3fc*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000c400*/ STR         R3, [SP] 
    /*0000c404*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000c408*/ STR         R6, [SP, #4] 
    /*0000c40c*/ MOV         R1, #37                     @ 0x25 
    /*0000c410*/ LDR         R3, [PC, #440]              @ 0x000000000000c5d0 
    /*0000c414*/ MOV         R0, #3 
    /*0000c418*/ BL          0x000000000000C418          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProLDCRotation_xc41c:
    /*0000c41c*/ MOV         R1, SL 
    /*0000c420*/ MOV         R0, R5 
    /*0000c424*/ BL          0x0000000000005E7C 
    GDC_ProLDCRotation_xc428:
    /*0000c428*/ MOV         R0, R6 
    /*0000c42c*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000c430*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProLDCRotation_xc434:
    /*0000c434*/ LDR         R3, [R7, #8] 
    /*0000c438*/ ADD         R0, SP, #28 
    /*0000c43c*/ LDR         R2, [R7, #4] 
    /*0000c440*/ LDR         R1, [R7] 
    /*0000c444*/ STR         R0, [SP] 
    /*0000c448*/ LDR         R0, [SP, #104]              @ 0x68 
    /*0000c44c*/ STR         R6, [SP, #12] 
    /*0000c450*/ STR         R6, [SP, #60]               @ 0x3c 
    /*0000c454*/ LDR         IP, [R0, #216]              @ 0xd8 
    /*0000c458*/ LDR         LR, [R0, #212]              @ 0xd4 
    /*0000c45c*/ ADD         R0, SP, #24 
    /*0000c460*/ STR         IP, [SP, #56]               @ 0x38 
    /*0000c464*/ MOV         IP, #1 
    /*0000c468*/ STR         LR, [SP, #52]               @ 0x34 
    /*0000c46c*/ STR         IP, [SP, #48]               @ 0x30 
    /*0000c470*/ BL          0x000000000000C470          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000c474*/ SUBS        R6, R0, #0 
    /*0000c478*/ BNE         GDC_ProLDCRotation_xc51c
    /*0000c47c*/ LDR         IP, [R9, #748]              @ 0x2ec 
    /*0000c480*/ MOV         R2, R7 
    /*0000c484*/ LDR         R1, [SP, #8] 
    /*0000c488*/ MOV         R3, FP 
    /*0000c48c*/ LDR         R0, [SP, #24] 
    /*0000c490*/ MOV         R7, R6 
    /*0000c494*/ STR         R1, [SP] 
    /*0000c498*/ MOVW        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*0000c49c*/ STR         R6, [R4, #744]              @ 0x2e8 
    /*0000c4a0*/ MOVT        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*0000c4a4*/ STR         IP, [R4, #736]              @ 0x2e0 
    /*0000c4a8*/ STR         R1, [R4, #748]              @ 0x2ec 
    /*0000c4ac*/ MOV         R1, R4 
    /*0000c4b0*/ STR         R8, [R4, #740]              @ 0x2e4 
    /*0000c4b4*/ BL          0x000000000000763C 
    /*0000c4b8*/ SUBS        R6, R0, #0 
    /*0000c4bc*/ BEQ         GDC_ProLDCRotation_xc550
    /*0000c4c0*/ MOV         R1, #18 
    /*0000c4c4*/ MOV         R0, R4 
    /*0000c4c8*/ BL          0x000000000000C4C8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000c4cc*/ STR         R6, [SP, #4] 
    /*0000c4d0*/ MOVW        R3, #4297                   @ 0x10c9 
    /*0000c4d4*/ MOV         R1, #37                     @ 0x25 
    /*0000c4d8*/ STR         R3, [SP] 
    /*0000c4dc*/ MOVW        R2, #0                      @ .LC87 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38c4] 
    /*0000c4e0*/ LDR         R3, [PC, #232]              @ 0x000000000000c5d0 
    /*0000c4e4*/ MOVT        R2, #0                      @ .LC87 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38c4] 
    /*0000c4e8*/ MOV         R0, #3 
    /*0000c4ec*/ BL          0x000000000000C4EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c4f0*/ LDR         R3, [SP, #12] 
    /*0000c4f4*/ LDR         R0, [SP, #24] 
    /*0000c4f8*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000c4fc*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*0000c500*/ BL          0x000000000000C500          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000c504*/ B           GDC_ProLDCRotation_xc41c
    GDC_ProLDCRotation_xc508:
    /*0000c508*/ MOV         R0, R8 
    /*0000c50c*/ BL          0x0000000000005F18 
    /*0000c510*/ SUBS        R6, R0, #0 
    /*0000c514*/ BNE         GDC_ProLDCRotation_xc41c
    /*0000c518*/ B           GDC_ProLDCRotation_xc3e4
    GDC_ProLDCRotation_xc51c:
    /*0000c51c*/ MOV         R0, R4 
    /*0000c520*/ MOV         R1, #18 
    /*0000c524*/ BL          0x000000000000C524          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000c528*/ MOVW        R3, #4285                   @ 0x10bd 
    /*0000c52c*/ STR         R6, [SP, #4] 
    /*0000c530*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3600] 
    /*0000c534*/ STR         R3, [SP] 
    /*0000c538*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3600] 
    /*0000c53c*/ LDR         R3, [PC, #140]              @ 0x000000000000c5d0 
    /*0000c540*/ MOV         R1, #37                     @ 0x25 
    /*0000c544*/ MOV         R0, #3 
    /*0000c548*/ BL          0x000000000000C548          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c54c*/ B           GDC_ProLDCRotation_xc41c
    GDC_ProLDCRotation_xc550:
    /*0000c550*/ ADD         R1, SP, #20 
    /*0000c554*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000c558*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000c55c*/ BL          0x000000000000C55C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000c560*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000c564*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000c568*/ ADD         R1, SP, #20 
    /*0000c56c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000c570*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000c574*/ LDR         R2, [R3, R8, LSL #2] 
    /*0000c578*/ LDR         R3, [R2, #8] 
    /*0000c57c*/ ADD         R3, R3, #1 
    /*0000c580*/ STR         R3, [R2, #8] 
    /*0000c584*/ BL          0x000000000000C584          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000c588*/ LDR         R0, [SP, #24] 
    /*0000c58c*/ BL          0x000000000000C58C          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000c590*/ SUBS        R6, R0, #0 
    /*0000c594*/ BEQ         GDC_ProLDCRotation_xc428
    /*0000c598*/ STR         R6, [SP, #4] 
    /*0000c59c*/ MOVW        R3, #4309                   @ 0x10d5 
    /*0000c5a0*/ MOV         R1, #37                     @ 0x25 
    /*0000c5a4*/ STR         R3, [SP] 
    /*0000c5a8*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000c5ac*/ LDR         R3, [PC, #28]               @ 0x000000000000c5d0 
    /*0000c5b0*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000c5b4*/ MOV         R0, #3 
    /*0000c5b8*/ BL          0x000000000000C5B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c5bc*/ STR         R7, [R4, #748]              @ 0x2ec 
    /*0000c5c0*/ LDR         R0, [SP, #24] 
    /*0000c5c4*/ STR         R7, [R9, #752]              @ 0x2f0 
    /*0000c5c8*/ BL          0x000000000000C5C8          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000c5cc*/ B           GDC_ProLDCRotation_xc428
    /*0000c5d0*/ STRDEQ      R0, [R0], -IP 
FUNC_END GDC_ProLDCRotation


FUNC_BEGIN GDC_ProLDCRotationEx
    /*0000c5d4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000c5d8*/ MOV         R7, R1 
    /*0000c5dc*/ LDR         R8, [R7, #12] 
    /*0000c5e0*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000c5e4*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000c5e8*/ MOV         R4, R0 
    /*0000c5ec*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000c5f0*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0000c5f4*/ ADD         R9, R4, #4096               @ 0x1000 
    /*0000c5f8*/ LDR         R5, [R1] 
    /*0000c5fc*/ CMP         R8, #63                     @ 0x3f 
    /*0000c600*/ STR         R2, [SP, #12] 
    /*0000c604*/ MOV         FP, R3 
    /*0000c608*/ ADD         R5, R5, #648                @ 0x288 
    /*0000c60c*/ STR         R0, [R9, #752]              @ 0x2f0 
    /*0000c610*/ SUB         SL, R4, #8 
    /*0000c614*/ BHI         GDC_ProLDCRotationEx_xc748
    GDC_ProLDCRotationEx_xc618:
    /*0000c618*/ MOV         R1, #18 
    /*0000c61c*/ MOV         R0, R4 
    /*0000c620*/ BL          0x000000000000C620          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000c624*/ SUBS        R6, R0, #0 
    /*0000c628*/ BEQ         GDC_ProLDCRotationEx_xc668
    /*0000c62c*/ MOVW        R3, #4354                   @ 0x1102 
    /*0000c630*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000c634*/ STR         R3, [SP] 
    /*0000c638*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000c63c*/ STR         R6, [SP, #4] 
    /*0000c640*/ MOV         R1, #37                     @ 0x25 
    /*0000c644*/ LDR         R3, [PC, #756]              @ 0x000000000000c940 
    /*0000c648*/ MOV         R0, #3 
    /*0000c64c*/ BL          0x000000000000C64C          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProLDCRotationEx_xc650:
    /*0000c650*/ MOV         R1, SL 
    /*0000c654*/ MOV         R0, R5 
    /*0000c658*/ BL          0x0000000000005E7C 
    GDC_ProLDCRotationEx_xc65c:
    /*0000c65c*/ MOV         R0, R6 
    /*0000c660*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000c664*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProLDCRotationEx_xc668:
    /*0000c668*/ LDR         R3, [R7, #8] 
    /*0000c66c*/ ADD         R0, SP, #36                 @ 0x24 
    /*0000c670*/ LDM         R7, {R1, R2} 
    /*0000c674*/ STR         R0, [SP] 
    /*0000c678*/ LDR         R0, [SP, #112]              @ 0x70 
    /*0000c67c*/ STR         R6, [SP, #68]               @ 0x44 
    /*0000c680*/ LDR         IP, [R0, #216]              @ 0xd8 
    /*0000c684*/ LDR         LR, [R0, #212]              @ 0xd4 
    /*0000c688*/ ADD         R0, SP, #32 
    /*0000c68c*/ STR         IP, [SP, #64]               @ 0x40 
    /*0000c690*/ MOV         IP, #1 
    /*0000c694*/ STR         LR, [SP, #60]               @ 0x3c 
    /*0000c698*/ STR         IP, [SP, #56]               @ 0x38 
    /*0000c69c*/ BL          0x000000000000C69C          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000c6a0*/ SUBS        R6, R0, #0 
    /*0000c6a4*/ BNE         GDC_ProLDCRotationEx_xc75c
    /*0000c6a8*/ BL          0x0000000000005D48 
    /*0000c6ac*/ SUBS        R3, R0, #0 
    /*0000c6b0*/ STR         R3, [SP, #16] 
    /*0000c6b4*/ BEQ         GDC_ProLDCRotationEx_xc888
    /*0000c6b8*/ LDR         R3, [SP, #16] 
    /*0000c6bc*/ MOV         R2, #776                    @ 0x308 
    /*0000c6c0*/ MOV         R1, R4 
    /*0000c6c4*/ ADD         R3, R3, #8 
    /*0000c6c8*/ MOV         R6, R3 
    /*0000c6cc*/ MOV         R0, R3 
    /*0000c6d0*/ BL          0x000000000000C6D0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000c6d4*/ MOV         R0, R6 
    /*0000c6d8*/ MOV         R3, FP 
    /*0000c6dc*/ LDR         R2, [SP, #12] 
    /*0000c6e0*/ MOV         R1, R7 
    /*0000c6e4*/ STR         R6, [SP, #20] 
    /*0000c6e8*/ BL          0x000000000000C6E8          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*0000c6ec*/ SUBS        R6, R0, #0 
    /*0000c6f0*/ BEQ         GDC_ProLDCRotationEx_xc790
    /*0000c6f4*/ MOV         R1, #18 
    /*0000c6f8*/ LDR         R0, [SP, #20] 
    /*0000c6fc*/ BL          0x000000000000C6FC          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000c700*/ MOVW        R3, #4392                   @ 0x1128 
    /*0000c704*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*0000c708*/ STR         R3, [SP] 
    /*0000c70c*/ STR         R6, [SP, #4] 
    /*0000c710*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*0000c714*/ LDR         R3, [PC, #548]              @ 0x000000000000c940 
    /*0000c718*/ MOV         R1, #37                     @ 0x25 
    /*0000c71c*/ MOV         R0, #3 
    /*0000c720*/ BL          0x000000000000C720          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProLDCRotationEx_xc724:
    /*0000c724*/ LDR         R1, [SP, #16] 
    /*0000c728*/ MOV         R0, R5 
    /*0000c72c*/ BL          0x0000000000005E7C 
    GDC_ProLDCRotationEx_xc730:
    /*0000c730*/ MOV         R3, #0 
    /*0000c734*/ LDR         R0, [SP, #32] 
    /*0000c738*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000c73c*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*0000c740*/ BL          0x000000000000C740          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000c744*/ B           GDC_ProLDCRotationEx_xc650
    GDC_ProLDCRotationEx_xc748:
    /*0000c748*/ MOV         R0, R8 
    /*0000c74c*/ BL          0x0000000000005F18 
    /*0000c750*/ SUBS        R6, R0, #0 
    /*0000c754*/ BNE         GDC_ProLDCRotationEx_xc650
    /*0000c758*/ B           GDC_ProLDCRotationEx_xc618
    GDC_ProLDCRotationEx_xc75c:
    /*0000c75c*/ MOV         R0, R4 
    /*0000c760*/ MOV         R1, #18 
    /*0000c764*/ BL          0x000000000000C764          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000c768*/ MOVW        R3, #4369                   @ 0x1111 
    /*0000c76c*/ STR         R6, [SP, #4] 
    /*0000c770*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3600] 
    /*0000c774*/ STR         R3, [SP] 
    /*0000c778*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3600] 
    /*0000c77c*/ LDR         R3, [PC, #444]              @ 0x000000000000c940 
    /*0000c780*/ MOV         R1, #37                     @ 0x25 
    /*0000c784*/ MOV         R0, #3 
    /*0000c788*/ BL          0x000000000000C788          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c78c*/ B           GDC_ProLDCRotationEx_xc650
    GDC_ProLDCRotationEx_xc790:
    /*0000c790*/ STR         FP, [SP] 
    /*0000c794*/ MOV         R2, R7 
    /*0000c798*/ LDR         FP, [SP, #20] 
    /*0000c79c*/ LDR         R0, [SP, #32] 
    /*0000c7a0*/ LDR         R3, [SP, #12] 
    /*0000c7a4*/ MOV         R1, FP 
    /*0000c7a8*/ BL          0x000000000000763C 
    /*0000c7ac*/ SUBS        R6, R0, #0 
    /*0000c7b0*/ BNE         GDC_ProLDCRotationEx_xc844
    /*0000c7b4*/ LDR         R3, [SP, #16] 
    /*0000c7b8*/ MOV         R2, #336                    @ 0x150 
    /*0000c7bc*/ MOV         R0, R4 
    /*0000c7c0*/ MOV         FP, R6 
    /*0000c7c4*/ ADD         R1, R3, #344                @ 0x158 
    /*0000c7c8*/ BL          0x000000000000C7C8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000c7cc*/ LDR         R1, [SP, #16] 
    /*0000c7d0*/ MOV         R0, R5 
    /*0000c7d4*/ BL          0x0000000000005E7C 
    /*0000c7d8*/ LDR         R0, [R9, #748]              @ 0x2ec 
    /*0000c7dc*/ LDR         R3, [SP, #12] 
    /*0000c7e0*/ MOV         R2, R7 
    /*0000c7e4*/ STR         R6, [R4, #744]              @ 0x2e8 
    /*0000c7e8*/ MOVW        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*0000c7ec*/ STR         R0, [R4, #736]              @ 0x2e0 
    /*0000c7f0*/ MOVT        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*0000c7f4*/ STR         R8, [R4, #740]              @ 0x2e4 
    /*0000c7f8*/ STR         R1, [R4, #748]              @ 0x2ec 
    /*0000c7fc*/ MOV         R1, R4 
    /*0000c800*/ LDR         R0, [SP, #32] 
    /*0000c804*/ BL          0x00000000000060CC 
    /*0000c808*/ SUBS        R6, R0, #0 
    /*0000c80c*/ BEQ         GDC_ProLDCRotationEx_xc8c0
    /*0000c810*/ MOV         R1, #18 
    /*0000c814*/ MOV         R0, R4 
    /*0000c818*/ BL          0x000000000000C818          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000c81c*/ MOVW        R3, #4419                   @ 0x1143 
    /*0000c820*/ STR         R6, [SP, #4] 
    /*0000c824*/ MOVW        R2, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3680] 
    /*0000c828*/ STR         R3, [SP] 
    /*0000c82c*/ MOVT        R2, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3680] 
    /*0000c830*/ LDR         R3, [PC, #264]              @ 0x000000000000c940 
    /*0000c834*/ MOV         R1, #37                     @ 0x25 
    /*0000c838*/ MOV         R0, #3 
    /*0000c83c*/ BL          0x000000000000C83C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c840*/ B           GDC_ProLDCRotationEx_xc730
    GDC_ProLDCRotationEx_xc844:
    /*0000c844*/ MOV         R0, FP 
    /*0000c848*/ MOV         R1, #18 
    /*0000c84c*/ BL          0x000000000000C84C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000c850*/ LDR         R3, [SP, #16] 
    /*0000c854*/ MOV         R1, #18 
    /*0000c858*/ ADD         R0, R3, #344                @ 0x158 
    /*0000c85c*/ BL          0x000000000000C85C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000c860*/ MOVW        R3, #4402                   @ 0x1132 
    /*0000c864*/ STR         R6, [SP, #4] 
    /*0000c868*/ MOVW        R2, #0                      @ .LC87 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38c4] 
    /*0000c86c*/ STR         R3, [SP] 
    /*0000c870*/ MOVT        R2, #0                      @ .LC87 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38c4] 
    /*0000c874*/ LDR         R3, [PC, #196]              @ 0x000000000000c940 
    /*0000c878*/ MOV         R1, #37                     @ 0x25 
    /*0000c87c*/ MOV         R0, #3 
    /*0000c880*/ BL          0x000000000000C880          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c884*/ B           GDC_ProLDCRotationEx_xc724
    GDC_ProLDCRotationEx_xc888:
    /*0000c888*/ MOV         R1, #18 
    /*0000c88c*/ MOV         R0, R4 
    /*0000c890*/ BL          0x000000000000C890          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000c894*/ MOVW        R3, #4377                   @ 0x1119 
    /*0000c898*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*0000c89c*/ STR         R3, [SP] 
    /*0000c8a0*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*0000c8a4*/ LDR         R3, [PC, #148]              @ 0x000000000000c940 
    /*0000c8a8*/ MOV         R1, #37                     @ 0x25 
    /*0000c8ac*/ MOV         R0, #3 
    /*0000c8b0*/ MOVW        R6, #32781                  @ 0x800d 
    /*0000c8b4*/ BL          0x000000000000C8B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c8b8*/ MOVT        R6, #40997                  @ 0xa025 
    /*0000c8bc*/ B           GDC_ProLDCRotationEx_xc730
    GDC_ProLDCRotationEx_xc8c0:
    /*0000c8c0*/ ADD         R1, SP, #28 
    /*0000c8c4*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000c8c8*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000c8cc*/ BL          0x000000000000C8CC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000c8d0*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000c8d4*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000c8d8*/ ADD         R1, SP, #28 
    /*0000c8dc*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000c8e0*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000c8e4*/ LDR         R2, [R3, R8, LSL #2] 
    /*0000c8e8*/ LDR         R3, [R2, #8] 
    /*0000c8ec*/ ADD         R3, R3, #1 
    /*0000c8f0*/ STR         R3, [R2, #8] 
    /*0000c8f4*/ BL          0x000000000000C8F4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000c8f8*/ LDR         R0, [SP, #32] 
    /*0000c8fc*/ BL          0x000000000000C8FC          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000c900*/ SUBS        R6, R0, #0 
    /*0000c904*/ BEQ         GDC_ProLDCRotationEx_xc65c
    /*0000c908*/ STR         R6, [SP, #4] 
    /*0000c90c*/ MOVW        R3, #4431                   @ 0x114f 
    /*0000c910*/ MOV         R1, #37                     @ 0x25 
    /*0000c914*/ STR         R3, [SP] 
    /*0000c918*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000c91c*/ LDR         R3, [PC, #28]               @ 0x000000000000c940 
    /*0000c920*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000c924*/ MOV         R0, #3 
    /*0000c928*/ BL          0x000000000000C928          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c92c*/ STR         FP, [R4, #748]              @ 0x2ec 
    /*0000c930*/ LDR         R0, [SP, #32] 
    /*0000c934*/ STR         FP, [R9, #752]              @ 0x2f0 
    /*0000c938*/ BL          0x000000000000C938          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000c93c*/ B           GDC_ProLDCRotationEx_xc65c
    /*0000c940*/ ANDEQ       R0, R0, R0, LSL R8 
FUNC_END GDC_ProLDCRotationEx


FUNC_BEGIN GDC_ProOneModeOfLDCRotation
    /*0000c944*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000c948*/ LDR         LR, [R2, #20] 
    /*0000c94c*/ LDR         IP, [SP, #4] 
    /*0000c950*/ CMP         LR, #0 
    /*0000c954*/ BNE         GDC_ProOneModeOfLDCRotation_xc964
    /*0000c958*/ STR         IP, [SP, #4] 
    /*0000c95c*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_ProOneModeOfLDCRotation_xc960:
    /*0000c960*/ B           GDC_ProOneModeOfLDCRotation_xc960@ GDC_ProLDCRotation [R_ARM_JUMP24: .text+0xc3a0] 
    GDC_ProOneModeOfLDCRotation_xc964:
    /*0000c964*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_ProOneModeOfLDCRotation_xc968:
    /*0000c968*/ B           GDC_ProOneModeOfLDCRotation_xc968@ GDC_ProLDCRotationEx [R_ARM_JUMP24: .text+0xc5d4] 
FUNC_END GDC_ProOneModeOfLDCRotation


FUNC_BEGIN GDC_ProSpreadRotationEx
    /*0000c96c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000c970*/ MOV         R7, R1 
    /*0000c974*/ LDR         R8, [R7, #12] 
    /*0000c978*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000c97c*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000c980*/ MOV         R4, R0 
    /*0000c984*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000c988*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000c98c*/ ADD         R9, R4, #4096               @ 0x1000 
    /*0000c990*/ LDR         R5, [R1] 
    /*0000c994*/ CMP         R8, #63                     @ 0x3f 
    /*0000c998*/ MOV         FP, R2 
    /*0000c99c*/ STR         R3, [SP, #8] 
    /*0000c9a0*/ ADD         R5, R5, #648                @ 0x288 
    /*0000c9a4*/ STR         R0, [R9, #752]              @ 0x2f0 
    /*0000c9a8*/ SUB         SL, R4, #8 
    /*0000c9ac*/ BHI         GDC_ProSpreadRotationEx_xcae0
    GDC_ProSpreadRotationEx_xc9b0:
    /*0000c9b0*/ MOV         R1, #18 
    /*0000c9b4*/ MOV         R0, R4 
    /*0000c9b8*/ BL          0x000000000000C9B8          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000c9bc*/ SUBS        R6, R0, #0 
    /*0000c9c0*/ BEQ         GDC_ProSpreadRotationEx_xca00
    /*0000c9c4*/ MOVW        R3, #4494                   @ 0x118e 
    /*0000c9c8*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000c9cc*/ STR         R3, [SP] 
    /*0000c9d0*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000c9d4*/ STR         R6, [SP, #4] 
    /*0000c9d8*/ MOV         R1, #37                     @ 0x25 
    /*0000c9dc*/ LDR         R3, [PC, #752]              @ 0x000000000000ccd4 
    /*0000c9e0*/ MOV         R0, #3 
    /*0000c9e4*/ BL          0x000000000000C9E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProSpreadRotationEx_xc9e8:
    /*0000c9e8*/ MOV         R1, SL 
    /*0000c9ec*/ MOV         R0, R5 
    /*0000c9f0*/ BL          0x0000000000005E7C 
    GDC_ProSpreadRotationEx_xc9f4:
    /*0000c9f4*/ MOV         R0, R6 
    /*0000c9f8*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000c9fc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProSpreadRotationEx_xca00:
    /*0000ca00*/ LDR         R3, [R7, #8] 
    /*0000ca04*/ ADD         R0, SP, #28 
    /*0000ca08*/ LDM         R7, {R1, R2} 
    /*0000ca0c*/ STR         R0, [SP] 
    /*0000ca10*/ LDR         R0, [SP, #104]              @ 0x68 
    /*0000ca14*/ STR         R6, [SP, #60]               @ 0x3c 
    /*0000ca18*/ LDR         IP, [R0, #216]              @ 0xd8 
    /*0000ca1c*/ LDR         LR, [R0, #212]              @ 0xd4 
    /*0000ca20*/ ADD         R0, SP, #24 
    /*0000ca24*/ STR         IP, [SP, #56]               @ 0x38 
    /*0000ca28*/ MOV         IP, #1 
    /*0000ca2c*/ STR         LR, [SP, #52]               @ 0x34 
    /*0000ca30*/ STR         IP, [SP, #48]               @ 0x30 
    /*0000ca34*/ BL          0x000000000000CA34          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000ca38*/ SUBS        R6, R0, #0 
    /*0000ca3c*/ BNE         GDC_ProSpreadRotationEx_xcaf4
    /*0000ca40*/ BL          0x0000000000005D48 
    /*0000ca44*/ SUBS        R3, R0, #0 
    /*0000ca48*/ STR         R3, [SP, #12] 
    /*0000ca4c*/ BEQ         GDC_ProSpreadRotationEx_xcc18
    /*0000ca50*/ LDR         R3, [SP, #12] 
    /*0000ca54*/ MOV         R2, #776                    @ 0x308 
    /*0000ca58*/ MOV         R1, R4 
    /*0000ca5c*/ ADD         R3, R3, #8 
    /*0000ca60*/ MOV         R6, R3 
    /*0000ca64*/ MOV         R0, R3 
    /*0000ca68*/ BL          0x000000000000CA68          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000ca6c*/ LDR         R3, [SP, #8] 
    /*0000ca70*/ MOV         R0, R6 
    /*0000ca74*/ MOV         R2, FP 
    /*0000ca78*/ MOV         R1, R7 
    /*0000ca7c*/ STR         R6, [SP, #8] 
    /*0000ca80*/ BL          0x000000000000CA80          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*0000ca84*/ SUBS        R6, R0, #0 
    /*0000ca88*/ BEQ         GDC_ProSpreadRotationEx_xcb28
    /*0000ca8c*/ MOV         R1, #18 
    /*0000ca90*/ LDR         R0, [SP, #8] 
    /*0000ca94*/ BL          0x000000000000CA94          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000ca98*/ MOVW        R3, #4531                   @ 0x11b3 
    /*0000ca9c*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*0000caa0*/ STR         R3, [SP] 
    /*0000caa4*/ STR         R6, [SP, #4] 
    /*0000caa8*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*0000caac*/ LDR         R3, [PC, #544]              @ 0x000000000000ccd4 
    /*0000cab0*/ MOV         R1, #37                     @ 0x25 
    /*0000cab4*/ MOV         R0, #3 
    /*0000cab8*/ BL          0x000000000000CAB8          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProSpreadRotationEx_xcabc:
    /*0000cabc*/ LDR         R1, [SP, #12] 
    /*0000cac0*/ MOV         R0, R5 
    /*0000cac4*/ BL          0x0000000000005E7C 
    GDC_ProSpreadRotationEx_xcac8:
    /*0000cac8*/ MOV         R3, #0 
    /*0000cacc*/ LDR         R0, [SP, #24] 
    /*0000cad0*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000cad4*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*0000cad8*/ BL          0x000000000000CAD8          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000cadc*/ B           GDC_ProSpreadRotationEx_xc9e8
    GDC_ProSpreadRotationEx_xcae0:
    /*0000cae0*/ MOV         R0, R8 
    /*0000cae4*/ BL          0x0000000000005F18 
    /*0000cae8*/ SUBS        R6, R0, #0 
    /*0000caec*/ BNE         GDC_ProSpreadRotationEx_xc9e8
    /*0000caf0*/ B           GDC_ProSpreadRotationEx_xc9b0
    GDC_ProSpreadRotationEx_xcaf4:
    /*0000caf4*/ MOV         R0, R4 
    /*0000caf8*/ MOV         R1, #18 
    /*0000cafc*/ BL          0x000000000000CAFC          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000cb00*/ MOVW        R3, #4509                   @ 0x119d 
    /*0000cb04*/ STR         R6, [SP, #4] 
    /*0000cb08*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3600] 
    /*0000cb0c*/ STR         R3, [SP] 
    /*0000cb10*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3600] 
    /*0000cb14*/ LDR         R3, [PC, #440]              @ 0x000000000000ccd4 
    /*0000cb18*/ MOV         R1, #37                     @ 0x25 
    /*0000cb1c*/ MOV         R0, #3 
    /*0000cb20*/ BL          0x000000000000CB20          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cb24*/ B           GDC_ProSpreadRotationEx_xc9e8
    GDC_ProSpreadRotationEx_xcb28:
    /*0000cb28*/ MOV         R3, FP 
    /*0000cb2c*/ MOV         R2, R7 
    /*0000cb30*/ LDR         R1, [SP, #8] 
    /*0000cb34*/ LDR         R0, [SP, #24] 
    /*0000cb38*/ BL          0x0000000000006F38 
    /*0000cb3c*/ SUBS        R6, R0, #0 
    /*0000cb40*/ BNE         GDC_ProSpreadRotationEx_xcbd4
    /*0000cb44*/ LDR         R3, [SP, #12] 
    /*0000cb48*/ MOV         R2, #336                    @ 0x150 
    /*0000cb4c*/ MOV         R0, R4 
    /*0000cb50*/ STR         R6, [SP, #8] 
    /*0000cb54*/ ADD         R1, R3, #344                @ 0x158 
    /*0000cb58*/ BL          0x000000000000CB58          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000cb5c*/ LDR         R1, [SP, #12] 
    /*0000cb60*/ MOV         R0, R5 
    /*0000cb64*/ BL          0x0000000000005E7C 
    /*0000cb68*/ LDR         R0, [R9, #748]              @ 0x2ec 
    /*0000cb6c*/ MOV         R3, FP 
    /*0000cb70*/ STR         R6, [R4, #744]              @ 0x2e8 
    /*0000cb74*/ MOV         R2, R7 
    /*0000cb78*/ MOVW        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*0000cb7c*/ STR         R0, [R4, #736]              @ 0x2e0 
    /*0000cb80*/ MOVT        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*0000cb84*/ STR         R8, [R4, #740]              @ 0x2e4 
    /*0000cb88*/ STR         R1, [R4, #748]              @ 0x2ec 
    /*0000cb8c*/ MOV         R1, R4 
    /*0000cb90*/ LDR         R0, [SP, #24] 
    /*0000cb94*/ BL          0x00000000000060CC 
    /*0000cb98*/ SUBS        R6, R0, #0 
    /*0000cb9c*/ BEQ         GDC_ProSpreadRotationEx_xcc50
    /*0000cba0*/ MOV         R1, #18 
    /*0000cba4*/ MOV         R0, R4 
    /*0000cba8*/ BL          0x000000000000CBA8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000cbac*/ MOVW        R3, #4557                   @ 0x11cd 
    /*0000cbb0*/ STR         R6, [SP, #4] 
    /*0000cbb4*/ MOVW        R2, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3680] 
    /*0000cbb8*/ STR         R3, [SP] 
    /*0000cbbc*/ MOVT        R2, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3680] 
    /*0000cbc0*/ LDR         R3, [PC, #268]              @ 0x000000000000ccd4 
    /*0000cbc4*/ MOV         R1, #37                     @ 0x25 
    /*0000cbc8*/ MOV         R0, #3 
    /*0000cbcc*/ BL          0x000000000000CBCC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cbd0*/ B           GDC_ProSpreadRotationEx_xcac8
    GDC_ProSpreadRotationEx_xcbd4:
    /*0000cbd4*/ LDR         R0, [SP, #8] 
    /*0000cbd8*/ MOV         R1, #18 
    /*0000cbdc*/ BL          0x000000000000CBDC          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000cbe0*/ LDR         R3, [SP, #12] 
    /*0000cbe4*/ MOV         R1, #18 
    /*0000cbe8*/ ADD         R0, R3, #344                @ 0x158 
    /*0000cbec*/ BL          0x000000000000CBEC          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000cbf0*/ MOVW        R3, #4541                   @ 0x11bd 
    /*0000cbf4*/ STR         R6, [SP, #4] 
    /*0000cbf8*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35c4] 
    /*0000cbfc*/ STR         R3, [SP] 
    /*0000cc00*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35c4] 
    /*0000cc04*/ LDR         R3, [PC, #200]              @ 0x000000000000ccd4 
    /*0000cc08*/ MOV         R1, #37                     @ 0x25 
    /*0000cc0c*/ MOV         R0, #3 
    /*0000cc10*/ BL          0x000000000000CC10          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cc14*/ B           GDC_ProSpreadRotationEx_xcabc
    GDC_ProSpreadRotationEx_xcc18:
    /*0000cc18*/ MOV         R1, #18 
    /*0000cc1c*/ MOV         R0, R4 
    /*0000cc20*/ BL          0x000000000000CC20          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000cc24*/ MOVW        R3, #4517                   @ 0x11a5 
    /*0000cc28*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*0000cc2c*/ STR         R3, [SP] 
    /*0000cc30*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*0000cc34*/ LDR         R3, [PC, #152]              @ 0x000000000000ccd4 
    /*0000cc38*/ MOV         R1, #37                     @ 0x25 
    /*0000cc3c*/ MOV         R0, #3 
    /*0000cc40*/ MOVW        R6, #32781                  @ 0x800d 
    /*0000cc44*/ BL          0x000000000000CC44          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cc48*/ MOVT        R6, #40997                  @ 0xa025 
    /*0000cc4c*/ B           GDC_ProSpreadRotationEx_xcac8
    GDC_ProSpreadRotationEx_xcc50:
    /*0000cc50*/ ADD         R1, SP, #20 
    /*0000cc54*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000cc58*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000cc5c*/ BL          0x000000000000CC5C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000cc60*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000cc64*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000cc68*/ ADD         R1, SP, #20 
    /*0000cc6c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000cc70*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000cc74*/ LDR         R2, [R3, R8, LSL #2] 
    /*0000cc78*/ LDR         R3, [R2, #8] 
    /*0000cc7c*/ ADD         R3, R3, #1 
    /*0000cc80*/ STR         R3, [R2, #8] 
    /*0000cc84*/ BL          0x000000000000CC84          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000cc88*/ LDR         R0, [SP, #24] 
    /*0000cc8c*/ BL          0x000000000000CC8C          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000cc90*/ SUBS        R6, R0, #0 
    /*0000cc94*/ BEQ         GDC_ProSpreadRotationEx_xc9f4
    /*0000cc98*/ STR         R6, [SP, #4] 
    /*0000cc9c*/ MOVW        R3, #4569                   @ 0x11d9 
    /*0000cca0*/ MOV         R1, #37                     @ 0x25 
    /*0000cca4*/ STR         R3, [SP] 
    /*0000cca8*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000ccac*/ LDR         R3, [PC, #32]               @ 0x000000000000ccd4 
    /*0000ccb0*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000ccb4*/ MOV         R0, #3 
    /*0000ccb8*/ BL          0x000000000000CCB8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ccbc*/ LDR         R3, [SP, #8] 
    /*0000ccc0*/ LDR         R0, [SP, #24] 
    /*0000ccc4*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000ccc8*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*0000cccc*/ BL          0x000000000000CCCC          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000ccd0*/ B           GDC_ProSpreadRotationEx_xc9f4
    /*0000ccd4*/ ANDEQ       R0, R0, R8, LSR #16 
FUNC_END GDC_ProSpreadRotationEx


FUNC_BEGIN GDC_ProSpreadRotationVgs
    /*0000ccd8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000ccdc*/ MOV         R7, R1 
    /*0000cce0*/ LDR         R8, [R7, #12] 
    /*0000cce4*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000cce8*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000ccec*/ MOV         R4, R0 
    /*0000ccf0*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000ccf4*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000ccf8*/ ADD         FP, R4, #4096               @ 0x1000 
    /*0000ccfc*/ LDR         R5, [R1] 
    /*0000cd00*/ CMP         R8, #63                     @ 0x3f 
    /*0000cd04*/ MOV         SL, R2 
    /*0000cd08*/ STR         R3, [SP, #8] 
    /*0000cd0c*/ ADD         R5, R5, #648                @ 0x288 
    /*0000cd10*/ STR         R0, [FP, #752]              @ 0x2f0 
    /*0000cd14*/ SUB         R9, R4, #8 
    /*0000cd18*/ BHI         GDC_ProSpreadRotationVgs_xce44
    GDC_ProSpreadRotationVgs_xcd1c:
    /*0000cd1c*/ MOV         R1, #18 
    /*0000cd20*/ MOV         R0, R4 
    /*0000cd24*/ BL          0x000000000000CD24          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000cd28*/ SUBS        R6, R0, #0 
    /*0000cd2c*/ BEQ         GDC_ProSpreadRotationVgs_xcd6c
    /*0000cd30*/ MOVW        R3, #4614                   @ 0x1206 
    /*0000cd34*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000cd38*/ STR         R3, [SP] 
    /*0000cd3c*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000cd40*/ STR         R6, [SP, #4] 
    /*0000cd44*/ MOV         R1, #37                     @ 0x25 
    /*0000cd48*/ LDR         R3, [PC, #724]              @ 0x000000000000d024 
    /*0000cd4c*/ MOV         R0, #3 
    /*0000cd50*/ BL          0x000000000000CD50          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProSpreadRotationVgs_xcd54:
    /*0000cd54*/ MOV         R1, R9 
    /*0000cd58*/ MOV         R0, R5 
    /*0000cd5c*/ BL          0x0000000000005E7C 
    GDC_ProSpreadRotationVgs_xcd60:
    /*0000cd60*/ MOV         R0, R6 
    /*0000cd64*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000cd68*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProSpreadRotationVgs_xcd6c:
    /*0000cd6c*/ LDR         R3, [R7, #8] 
    /*0000cd70*/ ADD         IP, SP, #28 
    /*0000cd74*/ LDR         R2, [R7, #4] 
    /*0000cd78*/ ADD         R0, SP, #24 
    /*0000cd7c*/ LDR         R1, [R7] 
    /*0000cd80*/ STR         IP, [SP] 
    /*0000cd84*/ MOV         IP, #1 
    /*0000cd88*/ STR         R6, [SP, #60]               @ 0x3c 
    /*0000cd8c*/ STR         R6, [SP, #52]               @ 0x34 
    /*0000cd90*/ STR         R6, [SP, #56]               @ 0x38 
    /*0000cd94*/ STR         IP, [SP, #48]               @ 0x30 
    /*0000cd98*/ BL          0x000000000000CD98          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000cd9c*/ SUBS        R6, R0, #0 
    /*0000cda0*/ BNE         GDC_ProSpreadRotationVgs_xce58
    /*0000cda4*/ BL          0x0000000000005D48 
    /*0000cda8*/ SUBS        R3, R0, #0 
    /*0000cdac*/ STR         R3, [SP, #12] 
    /*0000cdb0*/ BEQ         GDC_ProSpreadRotationVgs_xcfdc
    /*0000cdb4*/ LDR         R3, [SP, #12] 
    /*0000cdb8*/ MOV         R2, #776                    @ 0x308 
    /*0000cdbc*/ MOV         R1, R4 
    /*0000cdc0*/ ADD         R3, R3, #8 
    /*0000cdc4*/ MOV         R6, R3 
    /*0000cdc8*/ MOV         R0, R3 
    /*0000cdcc*/ BL          0x000000000000CDCC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000cdd0*/ LDR         R3, [SP, #8] 
    /*0000cdd4*/ MOV         R0, R6 
    /*0000cdd8*/ MOV         R2, SL 
    /*0000cddc*/ MOV         R1, R7 
    /*0000cde0*/ STR         R6, [SP, #8] 
    /*0000cde4*/ BL          0x000000000000CDE4          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*0000cde8*/ SUBS        R6, R0, #0 
    /*0000cdec*/ BEQ         GDC_ProSpreadRotationVgs_xce8c
    /*0000cdf0*/ MOV         R1, #18 
    /*0000cdf4*/ LDR         R0, [SP, #8] 
    /*0000cdf8*/ BL          0x000000000000CDF8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000cdfc*/ MOVW        R3, #4652                   @ 0x122c 
    /*0000ce00*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*0000ce04*/ STR         R3, [SP] 
    /*0000ce08*/ STR         R6, [SP, #4] 
    /*0000ce0c*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*0000ce10*/ LDR         R3, [PC, #524]              @ 0x000000000000d024 
    /*0000ce14*/ MOV         R1, #37                     @ 0x25 
    /*0000ce18*/ MOV         R0, #3 
    /*0000ce1c*/ BL          0x000000000000CE1C          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProSpreadRotationVgs_xce20:
    /*0000ce20*/ LDR         R1, [SP, #12] 
    /*0000ce24*/ MOV         R0, R5 
    /*0000ce28*/ BL          0x0000000000005E7C 
    GDC_ProSpreadRotationVgs_xce2c:
    /*0000ce2c*/ MOV         R3, #0 
    /*0000ce30*/ LDR         R0, [SP, #24] 
    /*0000ce34*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000ce38*/ STR         R3, [FP, #752]              @ 0x2f0 
    /*0000ce3c*/ BL          0x000000000000CE3C          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000ce40*/ B           GDC_ProSpreadRotationVgs_xcd54
    GDC_ProSpreadRotationVgs_xce44:
    /*0000ce44*/ MOV         R0, R8 
    /*0000ce48*/ BL          0x0000000000005F18 
    /*0000ce4c*/ SUBS        R6, R0, #0 
    /*0000ce50*/ BNE         GDC_ProSpreadRotationVgs_xcd54
    /*0000ce54*/ B           GDC_ProSpreadRotationVgs_xcd1c
    GDC_ProSpreadRotationVgs_xce58:
    /*0000ce58*/ MOV         R0, R4 
    /*0000ce5c*/ MOV         R1, #18 
    /*0000ce60*/ BL          0x000000000000CE60          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000ce64*/ MOVW        R3, #4630                   @ 0x1216 
    /*0000ce68*/ STR         R6, [SP, #4] 
    /*0000ce6c*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3600] 
    /*0000ce70*/ STR         R3, [SP] 
    /*0000ce74*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3600] 
    /*0000ce78*/ LDR         R3, [PC, #420]              @ 0x000000000000d024 
    /*0000ce7c*/ MOV         R1, #37                     @ 0x25 
    /*0000ce80*/ MOV         R0, #3 
    /*0000ce84*/ BL          0x000000000000CE84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ce88*/ B           GDC_ProSpreadRotationVgs_xcd54
    GDC_ProSpreadRotationVgs_xce8c:
    /*0000ce8c*/ LDR         IP, [SP, #12] 
    /*0000ce90*/ MOV         R3, SL 
    /*0000ce94*/ LDR         R0, [SL, #16] 
    /*0000ce98*/ MOV         R2, R7 
    /*0000ce9c*/ ADD         R1, IP, #688                @ 0x2b0 
    /*0000cea0*/ ADD         LR, IP, #704                @ 0x2c0 
    /*0000cea4*/ STR         R6, [R1, #-4] 
    /*0000cea8*/ MOV         SL, IP 
    /*0000ceac*/ STR         R0, [R1, #-8] 
    /*0000ceb0*/ LDR         IP, [IP, #344]              @ 0x158 
    /*0000ceb4*/ LDR         R0, [SP, #24] 
    /*0000ceb8*/ STR         IP, [SL, #688]              @ 0x2b0 
    /*0000cebc*/ MOVW        IP, #0                      @ Gdc_B4VgsCallBack [R_ARM_MOVW_ABS_NC: .text+0xd670] 
    /*0000cec0*/ STR         R6, [R1, #4] 
    /*0000cec4*/ MOVT        IP, #0                      @ Gdc_B4VgsCallBack [R_ARM_MOVT_ABS: .text+0xd670] 
    /*0000cec8*/ LDR         R1, [SL, #348]              @ 0x15c 
    /*0000cecc*/ STR         R6, [LR, #-4] 
    /*0000ced0*/ STR         R1, [LR, #-8] 
    /*0000ced4*/ LDR         R7, [FP, #748]              @ 0x2ec 
    /*0000ced8*/ LDR         R1, [SP, #8] 
    /*0000cedc*/ STR         R7, [SL, #704]              @ 0x2c0 
    /*0000cee0*/ MOV         R7, R6 
    /*0000cee4*/ STR         R6, [LR, #4] 
    /*0000cee8*/ STR         R6, [SL, #716]              @ 0x2cc 
    /*0000ceec*/ STR         R8, [SL, #712]              @ 0x2c8 
    /*0000cef0*/ STR         IP, [SL, #756]              @ 0x2f4 
    /*0000cef4*/ BL          0x0000000000006F38 
    /*0000cef8*/ SUBS        R6, R0, #0 
    /*0000cefc*/ BNE         GDC_ProSpreadRotationVgs_xcf9c
    /*0000cf00*/ ADD         R1, SP, #20 
    /*0000cf04*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000cf08*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000cf0c*/ BL          0x000000000000CF0C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000cf10*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000cf14*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000cf18*/ ADD         R1, SP, #20 
    /*0000cf1c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000cf20*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000cf24*/ LDR         R2, [R3, R8, LSL #2] 
    /*0000cf28*/ LDR         R3, [R2, #8] 
    /*0000cf2c*/ ADD         R3, R3, #1 
    /*0000cf30*/ STR         R3, [R2, #8] 
    /*0000cf34*/ BL          0x000000000000CF34          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000cf38*/ LDR         R0, [SP, #24] 
    /*0000cf3c*/ BL          0x000000000000CF3C          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000cf40*/ SUBS        R6, R0, #0 
    /*0000cf44*/ BEQ         GDC_ProSpreadRotationVgs_xd014
    /*0000cf48*/ LDR         R8, [SP, #12] 
    /*0000cf4c*/ MOV         R1, #18 
    /*0000cf50*/ ADD         R0, R8, #344                @ 0x158 
    /*0000cf54*/ BL          0x000000000000CF54          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000cf58*/ MOV         R1, #37                     @ 0x25 
    /*0000cf5c*/ STR         R6, [SP, #4] 
    /*0000cf60*/ MOVW        R3, #4682                   @ 0x124a 
    /*0000cf64*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000cf68*/ STR         R3, [SP] 
    /*0000cf6c*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000cf70*/ LDR         R3, [PC, #172]              @ 0x000000000000d024 
    /*0000cf74*/ MOV         R0, #3 
    /*0000cf78*/ BL          0x000000000000CF78          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cf7c*/ STR         R7, [R4, #748]              @ 0x2ec 
    /*0000cf80*/ LDR         R0, [SP, #24] 
    /*0000cf84*/ STR         R7, [FP, #752]              @ 0x2f0 
    /*0000cf88*/ BL          0x000000000000CF88          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000cf8c*/ MOV         R1, R8 
    /*0000cf90*/ MOV         R0, R5 
    /*0000cf94*/ BL          0x0000000000005E7C 
    /*0000cf98*/ B           GDC_ProSpreadRotationVgs_xcd60
    GDC_ProSpreadRotationVgs_xcf9c:
    /*0000cf9c*/ LDR         R0, [SP, #8] 
    /*0000cfa0*/ MOV         R1, #18 
    /*0000cfa4*/ BL          0x000000000000CFA4          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000cfa8*/ MOV         R1, #18 
    /*0000cfac*/ ADD         R0, SL, #344                @ 0x158 
    /*0000cfb0*/ BL          0x000000000000CFB0          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000cfb4*/ MOVW        R3, #4669                   @ 0x123d 
    /*0000cfb8*/ STR         R6, [SP, #4] 
    /*0000cfbc*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35c4] 
    /*0000cfc0*/ STR         R3, [SP] 
    /*0000cfc4*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35c4] 
    /*0000cfc8*/ LDR         R3, [PC, #84]               @ 0x000000000000d024 
    /*0000cfcc*/ MOV         R1, #37                     @ 0x25 
    /*0000cfd0*/ MOV         R0, #3 
    /*0000cfd4*/ BL          0x000000000000CFD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cfd8*/ B           GDC_ProSpreadRotationVgs_xce20
    GDC_ProSpreadRotationVgs_xcfdc:
    /*0000cfdc*/ MOV         R1, #18 
    /*0000cfe0*/ MOV         R0, R4 
    /*0000cfe4*/ BL          0x000000000000CFE4          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000cfe8*/ MOVW        R3, #4638                   @ 0x121e 
    /*0000cfec*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*0000cff0*/ STR         R3, [SP] 
    /*0000cff4*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*0000cff8*/ LDR         R3, [PC, #36]               @ 0x000000000000d024 
    /*0000cffc*/ MOV         R1, #37                     @ 0x25 
    /*0000d000*/ MOV         R0, #3 
    /*0000d004*/ MOVW        R6, #32781                  @ 0x800d 
    /*0000d008*/ BL          0x000000000000D008          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d00c*/ MOVT        R6, #40997                  @ 0xa025 
    /*0000d010*/ B           GDC_ProSpreadRotationVgs_xce2c
    GDC_ProSpreadRotationVgs_xd014:
    /*0000d014*/ LDR         R1, [SP, #12] 
    /*0000d018*/ MOV         R0, R5 
    /*0000d01c*/ BL          0x0000000000005E7C 
    /*0000d020*/ B           GDC_ProSpreadRotationVgs_xcd60
    /*0000d024*/ ANDEQ       R0, R0, R0, ASR #16 
FUNC_END GDC_ProSpreadRotationVgs


FUNC_BEGIN GDC_ProSpreadRotation
    /*0000d028*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000d02c*/ LDR         IP, [R2, #16] 
    /*0000d030*/ LDR         LR, [SP, #4] 
    /*0000d034*/ CMP         IP, #0 
    /*0000d038*/ BNE         GDC_ProSpreadRotation_xd048
    /*0000d03c*/ STR         LR, [SP, #4] 
    /*0000d040*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_ProSpreadRotation_xd044:
    /*0000d044*/ B           GDC_ProSpreadRotation_xd044 @ GDC_ProSpreadRotationEx [R_ARM_JUMP24: .text+0xc96c] 
    GDC_ProSpreadRotation_xd048:
    /*0000d048*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_ProSpreadRotation_xd04c:
    /*0000d04c*/ B           GDC_ProSpreadRotation_xd04c @ GDC_ProSpreadRotationVgs [R_ARM_JUMP24: .text+0xccd8] 
FUNC_END GDC_ProSpreadRotation


FUNC_BEGIN GDC_ProSpread
    /*0000d050*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000d054*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000d058*/ LDR         R8, [R1, #12] 
    /*0000d05c*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000d060*/ MOV         R7, R1 
    /*0000d064*/ LDR         R1, [R0, #748]              @ 0x2ec 
    /*0000d068*/ ADD         R9, R0, #4096               @ 0x1000 
    /*0000d06c*/ LDR         R5, [R3] 
    /*0000d070*/ CMP         R8, #63                     @ 0x3f 
    /*0000d074*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000d078*/ MOV         R4, R0 
    /*0000d07c*/ MOV         FP, R2 
    /*0000d080*/ SUB         SL, R0, #8 
    /*0000d084*/ ADD         R5, R5, #648                @ 0x288 
    /*0000d088*/ STR         R1, [R9, #752]              @ 0x2f0 
    /*0000d08c*/ BHI         GDC_ProSpread_xd1ac
    GDC_ProSpread_xd090:
    /*0000d090*/ MOV         R1, #18 
    /*0000d094*/ MOV         R0, R4 
    /*0000d098*/ BL          0x000000000000D098          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000d09c*/ SUBS        R6, R0, #0 
    /*0000d0a0*/ BEQ         GDC_ProSpread_xd0e0
    /*0000d0a4*/ MOVW        R3, #4746                   @ 0x128a 
    /*0000d0a8*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000d0ac*/ STR         R3, [SP] 
    /*0000d0b0*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000d0b4*/ STR         R6, [SP, #4] 
    /*0000d0b8*/ MOV         R1, #37                     @ 0x25 
    /*0000d0bc*/ LDR         R3, [PC, #432]              @ 0x000000000000d274 
    /*0000d0c0*/ MOV         R0, #3 
    /*0000d0c4*/ BL          0x000000000000D0C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProSpread_xd0c8:
    /*0000d0c8*/ MOV         R1, SL 
    /*0000d0cc*/ MOV         R0, R5 
    /*0000d0d0*/ BL          0x0000000000005E7C 
    GDC_ProSpread_xd0d4:
    /*0000d0d4*/ MOV         R0, R6 
    /*0000d0d8*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000d0dc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProSpread_xd0e0:
    /*0000d0e0*/ LDR         R3, [R7, #8] 
    /*0000d0e4*/ ADD         R0, SP, #28 
    /*0000d0e8*/ LDR         R2, [R7, #4] 
    /*0000d0ec*/ LDR         R1, [R7] 
    /*0000d0f0*/ STR         R0, [SP] 
    /*0000d0f4*/ LDR         R0, [SP, #104]              @ 0x68 
    /*0000d0f8*/ STR         R6, [SP, #12] 
    /*0000d0fc*/ STR         R6, [SP, #60]               @ 0x3c 
    /*0000d100*/ LDR         IP, [R0, #216]              @ 0xd8 
    /*0000d104*/ LDR         LR, [R0, #212]              @ 0xd4 
    /*0000d108*/ ADD         R0, SP, #24 
    /*0000d10c*/ STR         IP, [SP, #56]               @ 0x38 
    /*0000d110*/ MOV         IP, #1 
    /*0000d114*/ STR         LR, [SP, #52]               @ 0x34 
    /*0000d118*/ STR         IP, [SP, #48]               @ 0x30 
    /*0000d11c*/ BL          0x000000000000D11C          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000d120*/ SUBS        R6, R0, #0 
    /*0000d124*/ BNE         GDC_ProSpread_xd1c0
    /*0000d128*/ LDR         R1, [R9, #748]              @ 0x2ec 
    /*0000d12c*/ MOV         R2, R7 
    /*0000d130*/ STR         R6, [R4, #744]              @ 0x2e8 
    /*0000d134*/ MOV         R3, FP 
    /*0000d138*/ MOVW        R0, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*0000d13c*/ STR         R8, [R4, #740]              @ 0x2e4 
    /*0000d140*/ MOVT        R0, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*0000d144*/ STR         R1, [R4, #736]              @ 0x2e0 
    /*0000d148*/ STR         R0, [R4, #748]              @ 0x2ec 
    /*0000d14c*/ MOV         R1, R4 
    /*0000d150*/ LDR         R0, [SP, #24] 
    /*0000d154*/ MOV         R7, R6 
    /*0000d158*/ BL          0x0000000000006F38 
    /*0000d15c*/ SUBS        R6, R0, #0 
    /*0000d160*/ BEQ         GDC_ProSpread_xd1f4
    /*0000d164*/ MOV         R1, #18 
    /*0000d168*/ MOV         R0, R4 
    /*0000d16c*/ BL          0x000000000000D16C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000d170*/ STR         R6, [SP, #4] 
    /*0000d174*/ MOVW        R3, #4774                   @ 0x12a6 
    /*0000d178*/ MOV         R1, #37                     @ 0x25 
    /*0000d17c*/ STR         R3, [SP] 
    /*0000d180*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35c4] 
    /*0000d184*/ LDR         R3, [PC, #232]              @ 0x000000000000d274 
    /*0000d188*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35c4] 
    /*0000d18c*/ MOV         R0, #3 
    /*0000d190*/ BL          0x000000000000D190          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d194*/ LDR         R3, [SP, #12] 
    /*0000d198*/ LDR         R0, [SP, #24] 
    /*0000d19c*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000d1a0*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*0000d1a4*/ BL          0x000000000000D1A4          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000d1a8*/ B           GDC_ProSpread_xd0c8
    GDC_ProSpread_xd1ac:
    /*0000d1ac*/ MOV         R0, R8 
    /*0000d1b0*/ BL          0x0000000000005F18 
    /*0000d1b4*/ SUBS        R6, R0, #0 
    /*0000d1b8*/ BNE         GDC_ProSpread_xd0c8
    /*0000d1bc*/ B           GDC_ProSpread_xd090
    GDC_ProSpread_xd1c0:
    /*0000d1c0*/ MOV         R0, R4 
    /*0000d1c4*/ MOV         R1, #18 
    /*0000d1c8*/ BL          0x000000000000D1C8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000d1cc*/ MOVW        R3, #4761                   @ 0x1299 
    /*0000d1d0*/ STR         R6, [SP, #4] 
    /*0000d1d4*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3600] 
    /*0000d1d8*/ STR         R3, [SP] 
    /*0000d1dc*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3600] 
    /*0000d1e0*/ LDR         R3, [PC, #140]              @ 0x000000000000d274 
    /*0000d1e4*/ MOV         R1, #37                     @ 0x25 
    /*0000d1e8*/ MOV         R0, #3 
    /*0000d1ec*/ BL          0x000000000000D1EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d1f0*/ B           GDC_ProSpread_xd0c8
    GDC_ProSpread_xd1f4:
    /*0000d1f4*/ ADD         R1, SP, #20 
    /*0000d1f8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000d1fc*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000d200*/ BL          0x000000000000D200          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000d204*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000d208*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000d20c*/ ADD         R1, SP, #20 
    /*0000d210*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000d214*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000d218*/ LDR         R2, [R3, R8, LSL #2] 
    /*0000d21c*/ LDR         R3, [R2, #8] 
    /*0000d220*/ ADD         R3, R3, #1 
    /*0000d224*/ STR         R3, [R2, #8] 
    /*0000d228*/ BL          0x000000000000D228          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000d22c*/ LDR         R0, [SP, #24] 
    /*0000d230*/ BL          0x000000000000D230          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000d234*/ SUBS        R6, R0, #0 
    /*0000d238*/ BEQ         GDC_ProSpread_xd0d4
    /*0000d23c*/ STR         R6, [SP, #4] 
    /*0000d240*/ MOVW        R3, #4786                   @ 0x12b2 
    /*0000d244*/ MOV         R1, #37                     @ 0x25 
    /*0000d248*/ STR         R3, [SP] 
    /*0000d24c*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000d250*/ LDR         R3, [PC, #28]               @ 0x000000000000d274 
    /*0000d254*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000d258*/ MOV         R0, #3 
    /*0000d25c*/ BL          0x000000000000D25C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d260*/ STR         R7, [R4, #748]              @ 0x2ec 
    /*0000d264*/ LDR         R0, [SP, #24] 
    /*0000d268*/ STR         R7, [R9, #752]              @ 0x2f0 
    /*0000d26c*/ BL          0x000000000000D26C          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000d270*/ B           GDC_ProSpread_xd0d4
    /*0000d274*/ ANDEQ       R0, R0, IP, ASR R8 
FUNC_END GDC_ProSpread


FUNC_BEGIN GDC_ProRotationVgs
    /*0000d278*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000d27c*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000d280*/ LDR         SL, [R1, #12] 
    /*0000d284*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000d288*/ MOV         R5, R0 
    /*0000d28c*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000d290*/ SUB         SP, SP, #100                @ 0x64 
    /*0000d294*/ MOV         R7, R1 
    /*0000d298*/ LDR         R4, [R3] 
    /*0000d29c*/ ADD         R1, R5, #4096               @ 0x1000 
    /*0000d2a0*/ CMP         SL, #63                     @ 0x3f 
    /*0000d2a4*/ STR         R2, [SP, #8] 
    /*0000d2a8*/ STR         R0, [R1, #752]              @ 0x2f0 
    /*0000d2ac*/ SUB         R8, R5, #8 
    /*0000d2b0*/ ADD         R9, R4, #648                @ 0x288 
    /*0000d2b4*/ BHI         GDC_ProRotationVgs_xd4dc
    GDC_ProRotationVgs_xd2b8:
    /*0000d2b8*/ MOV         R1, #18 
    /*0000d2bc*/ MOV         R0, R5 
    /*0000d2c0*/ BL          0x000000000000D2C0          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000d2c4*/ SUBS        R6, R0, #0 
    /*0000d2c8*/ BNE         GDC_ProRotationVgs_xd464
    /*0000d2cc*/ MOV         R0, #45                     @ 0x2d 
    /*0000d2d0*/ BL          0x000000000000D2D0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000d2d4*/ SUBS        FP, R0, #0 
    /*0000d2d8*/ BEQ         GDC_ProRotationVgs_xd5f8
    /*0000d2dc*/ LDR         R3, [FP] 
    /*0000d2e0*/ CMP         R3, #0 
    /*0000d2e4*/ BEQ         GDC_ProRotationVgs_xd5f8
    /*0000d2e8*/ LDR         R3, [FP, #44]               @ 0x2c 
    /*0000d2ec*/ CMP         R3, #0 
    /*0000d2f0*/ BEQ         GDC_ProRotationVgs_xd5f8
    /*0000d2f4*/ LDR         R3, [FP, #12] 
    /*0000d2f8*/ CMP         R3, #0 
    /*0000d2fc*/ BEQ         GDC_ProRotationVgs_xd5f8
    /*0000d300*/ LDR         LR, [R7, #8] 
    /*0000d304*/ MOV         IP, #1 
    /*0000d308*/ LDR         R3, [R7, #4] 
    /*0000d30c*/ ADD         R0, SP, #32 
    /*0000d310*/ LDR         R2, [R7] 
    /*0000d314*/ MOV         R1, R6 
    /*0000d318*/ STR         R0, [SP, #4] 
    /*0000d31c*/ ADD         R0, SP, #28 
    /*0000d320*/ STR         R6, [SP, #88]               @ 0x58 
    /*0000d324*/ STR         LR, [SP] 
    /*0000d328*/ STR         IP, [SP, #84]               @ 0x54 
    /*0000d32c*/ LDR         R6, [FP] 
    /*0000d330*/ BLX         R6 
    /*0000d334*/ SUBS        R6, R0, #0 
    /*0000d338*/ BNE         GDC_ProRotationVgs_xd4f0
    /*0000d33c*/ LDR         R3, [FP, #64]               @ 0x40 
    /*0000d340*/ BLX         R3 
    /*0000d344*/ SUBS        R3, R0, #0 
    /*0000d348*/ STR         R3, [SP, #12] 
    /*0000d34c*/ BEQ         GDC_ProRotationVgs_xd5c0
    /*0000d350*/ LDR         R3, [R7, #12] 
    /*0000d354*/ MOV         R2, R8 
    /*0000d358*/ LDR         R1, [SP, #12] 
    /*0000d35c*/ MOV         R0, R5 
    /*0000d360*/ BL          0x000000000000D360          @ GDC_ConVertGdcTaskInfoToVgsTaskInfo [R_ARM_CALL: .text+0x8608] 
    /*0000d364*/ LDR         R3, [SP, #8] 
    /*0000d368*/ MOV         R0, #45                     @ 0x2d 
    /*0000d36c*/ LDR         R6, [R7, #12] 
    /*0000d370*/ LDR         R3, [R3, #16] 
    /*0000d374*/ STR         R3, [SP, #16] 
    /*0000d378*/ LDR         R3, [SP, #28] 
    /*0000d37c*/ STR         R3, [SP, #8] 
    /*0000d380*/ BL          0x000000000000D380          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000d384*/ CMP         R6, #63                     @ 0x3f 
    /*0000d388*/ MOV         R3, R0 
    /*0000d38c*/ BHI         GDC_ProRotationVgs_xd5a4
    GDC_ProRotationVgs_xd390:
    /*0000d390*/ LDR         LR, [SP, #12] 
    /*0000d394*/ MOV         R1, #37                     @ 0x25 
    /*0000d398*/ LDR         R2, [SP, #16] 
    /*0000d39c*/ LDR         R0, [SP, #8] 
    /*0000d3a0*/ STR         R1, [LR, #668]              @ 0x29c 
    /*0000d3a4*/ MOV         R1, LR 
    /*0000d3a8*/ LDR         IP, [R7] 
    /*0000d3ac*/ STR         IP, [LR, #724]              @ 0x2d4 
    /*0000d3b0*/ LDR         IP, [R7, #4] 
    /*0000d3b4*/ STR         IP, [LR, #728]              @ 0x2d8 
    /*0000d3b8*/ LDR         IP, [R7, #8] 
    /*0000d3bc*/ STR         IP, [LR, #732]              @ 0x2dc 
    /*0000d3c0*/ LDR         R3, [R3, #44]               @ 0x2c 
    /*0000d3c4*/ BLX         R3 
    /*0000d3c8*/ SUBS        R6, R0, #0 
    /*0000d3cc*/ BNE         GDC_ProRotationVgs_xd520
    /*0000d3d0*/ ADD         R1, SP, #24 
    /*0000d3d4*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000d3d8*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000d3dc*/ BL          0x000000000000D3DC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000d3e0*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000d3e4*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000d3e8*/ ADD         R1, SP, #24 
    /*0000d3ec*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000d3f0*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000d3f4*/ LDR         R2, [R3, SL, LSL #2] 
    /*0000d3f8*/ LDR         R3, [R2, #12] 
    /*0000d3fc*/ ADD         R3, R3, #1 
    /*0000d400*/ STR         R3, [R2, #12] 
    /*0000d404*/ BL          0x000000000000D404          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000d408*/ MOV         R2, R6 
    /*0000d40c*/ LDR         R3, [FP, #12] 
    /*0000d410*/ MOV         R1, #1 
    /*0000d414*/ LDR         R0, [SP, #28] 
    /*0000d418*/ BLX         R3 
    /*0000d41c*/ SUBS        R6, R0, #0 
    /*0000d420*/ BEQ         GDC_ProRotationVgs_xd4d0
    /*0000d424*/ MOV         R0, R5 
    /*0000d428*/ MOV         R1, #18 
    /*0000d42c*/ BL          0x000000000000D42C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000d430*/ STR         R6, [SP, #4] 
    /*0000d434*/ MOV         R1, #37                     @ 0x25 
    /*0000d438*/ MOVW        R3, #4885                   @ 0x1315 
    /*0000d43c*/ MOVW        R2, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a00] 
    /*0000d440*/ STR         R3, [SP] 
    /*0000d444*/ MOVT        R2, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a00] 
    /*0000d448*/ LDR         R3, [PC, #536]              @ 0x000000000000d668 
    /*0000d44c*/ MOV         R0, #3 
    /*0000d450*/ BL          0x000000000000D450          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d454*/ LDR         R3, [FP, #4] 
    /*0000d458*/ LDR         R0, [SP, #28] 
    /*0000d45c*/ BLX         R3 
    /*0000d460*/ B           GDC_ProRotationVgs_xd4d0
    GDC_ProRotationVgs_xd464:
    /*0000d464*/ MOVW        R3, #4829                   @ 0x12dd 
    /*0000d468*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000d46c*/ STR         R3, [SP] 
    /*0000d470*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000d474*/ STR         R6, [SP, #4] 
    /*0000d478*/ MOV         R1, #37                     @ 0x25 
    /*0000d47c*/ LDR         R3, [PC, #484]              @ 0x000000000000d668 
    /*0000d480*/ MOV         R0, #3 
    /*0000d484*/ BL          0x000000000000D484          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProRotationVgs_xd488:
    /*0000d488*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000d48c*/ ADD         R1, SP, #24 
    /*0000d490*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000d494*/ ADD         R4, R4, #660                @ 0x294 
    /*0000d498*/ BL          0x000000000000D498          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000d49c*/ LDR         R3, [R4] 
    /*0000d4a0*/ CMP         R3, R4 
    /*0000d4a4*/ BEQ         GDC_ProRotationVgs_xd62c
    /*0000d4a8*/ MOV         R1, R8 
    /*0000d4ac*/ MOV         R0, R9 
    /*0000d4b0*/ BL          0x000000000000D4B0          @ GDC_GetCurrentNodeFromBusyList [R_ARM_CALL: .text+0xff84] 
    /*0000d4b4*/ MOV         R1, R8 
    /*0000d4b8*/ MOV         R0, R9 
    /*0000d4bc*/ BL          0x000000000000D4BC          @ GDC_PutNodeToFreeList [R_ARM_CALL: .text+0xfe90] 
    /*0000d4c0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000d4c4*/ ADD         R1, SP, #24 
    /*0000d4c8*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000d4cc*/ BL          0x000000000000D4CC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    GDC_ProRotationVgs_xd4d0:
    /*0000d4d0*/ MOV         R0, R6 
    /*0000d4d4*/ ADD         SP, SP, #100                @ 0x64 
    /*0000d4d8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProRotationVgs_xd4dc:
    /*0000d4dc*/ MOV         R0, SL 
    /*0000d4e0*/ BL          0x0000000000005F18 
    /*0000d4e4*/ SUBS        R6, R0, #0 
    /*0000d4e8*/ BNE         GDC_ProRotationVgs_xd488
    /*0000d4ec*/ B           GDC_ProRotationVgs_xd2b8
    GDC_ProRotationVgs_xd4f0:
    /*0000d4f0*/ MOV         R0, R5 
    /*0000d4f4*/ MOV         R1, #18 
    /*0000d4f8*/ BL          0x000000000000D4F8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000d4fc*/ MOVW        R3, #4851                   @ 0x12f3 
    /*0000d500*/ MOVW        R2, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3968] 
    /*0000d504*/ STR         R3, [SP] 
    /*0000d508*/ MOVT        R2, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3968] 
    /*0000d50c*/ LDR         R3, [PC, #340]              @ 0x000000000000d668 
    /*0000d510*/ MOV         R1, #37                     @ 0x25 
    /*0000d514*/ MOV         R0, #3 
    /*0000d518*/ BL          0x000000000000D518          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d51c*/ B           GDC_ProRotationVgs_xd488
    GDC_ProRotationVgs_xd520:
    /*0000d520*/ MOVW        R3, #1303                   @ 0x517 
    /*0000d524*/ MOVW        R2, #0                      @ .LC91 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x39c8] 
    /*0000d528*/ STR         R3, [SP] 
    /*0000d52c*/ MOV         R1, #37                     @ 0x25 
    /*0000d530*/ MOVT        R2, #0                      @ .LC91 [R_ARM_MOVT_ABS: .rodata.str1.4+0x39c8] 
    /*0000d534*/ LDR         R3, [PC, #304]              @ 0x000000000000d66c 
    /*0000d538*/ MOV         R0, #3 
    /*0000d53c*/ BL          0x000000000000D53C          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProRotationVgs_xd540:
    /*0000d540*/ MOV         R1, #18 
    /*0000d544*/ MOV         R0, R5 
    /*0000d548*/ BL          0x000000000000D548          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000d54c*/ MOVW        R3, #4872                   @ 0x1308 
    /*0000d550*/ MOVW        R2, #0                      @ .LC94 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a78] 
    /*0000d554*/ STR         R3, [SP] 
    /*0000d558*/ STR         R6, [SP, #4] 
    /*0000d55c*/ MOVT        R2, #0                      @ .LC94 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a78] 
    /*0000d560*/ LDR         R3, [PC, #256]              @ 0x000000000000d668 
    /*0000d564*/ MOV         R1, #37                     @ 0x25 
    /*0000d568*/ MOV         R0, #3 
    /*0000d56c*/ BL          0x000000000000D56C          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProRotationVgs_xd570:
    /*0000d570*/ LDR         R3, [FP, #4] 
    /*0000d574*/ LDR         R0, [SP, #28] 
    /*0000d578*/ BLX         R3 
    /*0000d57c*/ MOVW        R3, #4895                   @ 0x131f 
    /*0000d580*/ STR         R6, [SP, #4] 
    /*0000d584*/ MOVW        R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a38] 
    /*0000d588*/ STR         R3, [SP] 
    /*0000d58c*/ MOVT        R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a38] 
    /*0000d590*/ LDR         R3, [PC, #208]              @ 0x000000000000d668 
    /*0000d594*/ MOV         R1, #37                     @ 0x25 
    /*0000d598*/ MOV         R0, #6 
    /*0000d59c*/ BL          0x000000000000D59C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d5a0*/ B           GDC_ProRotationVgs_xd488
    GDC_ProRotationVgs_xd5a4:
    /*0000d5a4*/ STR         R0, [SP, #20] 
    /*0000d5a8*/ MOV         R0, R6 
    /*0000d5ac*/ BL          0x0000000000005F18 
    /*0000d5b0*/ LDR         R3, [SP, #20] 
    /*0000d5b4*/ SUBS        R6, R0, #0 
    /*0000d5b8*/ BNE         GDC_ProRotationVgs_xd540
    /*0000d5bc*/ B           GDC_ProRotationVgs_xd390
    GDC_ProRotationVgs_xd5c0:
    /*0000d5c0*/ MOV         R1, #18 
    /*0000d5c4*/ MOV         R0, R5 
    /*0000d5c8*/ BL          0x000000000000D5C8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000d5cc*/ MOVW        R3, #4858                   @ 0x12fa 
    /*0000d5d0*/ MOVW        R2, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3998] 
    /*0000d5d4*/ STR         R3, [SP] 
    /*0000d5d8*/ MOVT        R2, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3998] 
    /*0000d5dc*/ LDR         R3, [PC, #132]              @ 0x000000000000d668 
    /*0000d5e0*/ MOV         R1, #37                     @ 0x25 
    /*0000d5e4*/ MOV         R0, #3 
    /*0000d5e8*/ MOVW        R6, #32782                  @ 0x800e 
    /*0000d5ec*/ BL          0x000000000000D5EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d5f0*/ MOVT        R6, #40997                  @ 0xa025 
    /*0000d5f4*/ B           GDC_ProRotationVgs_xd570
    GDC_ProRotationVgs_xd5f8:
    /*0000d5f8*/ MOV         R1, #18 
    /*0000d5fc*/ MOV         R0, R5 
    /*0000d600*/ BL          0x000000000000D600          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000d604*/ MOVW        R3, #4839                   @ 0x12e7 
    /*0000d608*/ MOVW        R2, #0                      @ .LC88 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3900] 
    /*0000d60c*/ STR         R3, [SP] 
    /*0000d610*/ MOVT        R2, #0                      @ .LC88 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3900] 
    /*0000d614*/ LDR         R3, [PC, #76]               @ 0x000000000000d668 
    /*0000d618*/ MOV         R1, #37                     @ 0x25 
    /*0000d61c*/ MOV         R0, #3 
    /*0000d620*/ BL          0x000000000000D620          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d624*/ MVN         R6, #0 
    /*0000d628*/ B           GDC_ProRotationVgs_xd4d0
    GDC_ProRotationVgs_xd62c:
    /*0000d62c*/ MOVW        R3, #4901                   @ 0x1325 
    /*0000d630*/ MOV         R1, #37                     @ 0x25 
    /*0000d634*/ STR         R3, [SP] 
    /*0000d638*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2518] 
    /*0000d63c*/ LDR         R3, [PC, #36]               @ 0x000000000000d668 
    /*0000d640*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2518] 
    /*0000d644*/ MOV         R0, #4 
    /*0000d648*/ MOVW        R6, #32782                  @ 0x800e 
    /*0000d64c*/ BL          0x000000000000D64C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d650*/ ADD         R1, SP, #24 
    /*0000d654*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000d658*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000d65c*/ BL          0x000000000000D65C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000d660*/ MOVT        R6, #40997                  @ 0xa025 
    /*0000d664*/ B           GDC_ProRotationVgs_xd4d0
    /*0000d668*/ ANDEQ       R0, R0, IP, ROR #16 
    /*0000d66c*/ ANDEQ       R0, R0, R0, LSL #17 
FUNC_END GDC_ProRotationVgs


FUNC_BEGIN Gdc_B4VgsCallBack
    /*0000d670*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000d674*/ MOV         R8, R3 
    /*0000d678*/ LDR         SL, [R8, #704]              @ 0x2c0 
    /*0000d67c*/ SUB         SP, SP, #92                 @ 0x5c 
    /*0000d680*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000d684*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000d688*/ CMP         SL, #63                     @ 0x3f 
    /*0000d68c*/ STR         R0, [SP, #8] 
    /*0000d690*/ STR         R1, [SP, #12] 
    /*0000d694*/ STR         R2, [SP, #16] 
    /*0000d698*/ LDR         R7, [R3] 
    /*0000d69c*/ BHI         Gdc_B4VgsCallBack_xd850
    Gdc_B4VgsCallBack_xd6a0:
    /*0000d6a0*/ MOV         R1, #18 
    /*0000d6a4*/ MOV         R0, R8 
    /*0000d6a8*/ BL          0x000000000000D6A8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000d6ac*/ CMP         R0, #0 
    /*0000d6b0*/ BNE         Gdc_B4VgsCallBack_xd8bc
    Gdc_B4VgsCallBack_xd6b4:
    /*0000d6b4*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000d6b8*/ ADD         R1, SP, #28 
    /*0000d6bc*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000d6c0*/ LDR         R9, [R8, #696]              @ 0x2b8 
    /*0000d6c4*/ BL          0x000000000000D6C4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000d6c8*/ LDR         R5, [R7, #660]!             @ 0x294 
    /*0000d6cc*/ CMP         R7, R5 
    /*0000d6d0*/ LDR         R4, [R5] 
    /*0000d6d4*/ BEQ         Gdc_B4VgsCallBack_xd8b0
    /*0000d6d8*/ MOVW        R3, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3058] 
    /*0000d6dc*/ MOVW        FP, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2694] 
    /*0000d6e0*/ MOVT        R3, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3058] 
    /*0000d6e4*/ MOVT        FP, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2694] 
    /*0000d6e8*/ STR         R3, [SP, #20] 
    /*0000d6ec*/ B           Gdc_B4VgsCallBack_xd70c
    Gdc_B4VgsCallBack_xd6f0:
    /*0000d6f0*/ LDR         R3, [R6, #756]              @ 0x2f4 
    /*0000d6f4*/ CMP         R9, R3 
    /*0000d6f8*/ BEQ         Gdc_B4VgsCallBack_xd738
    Gdc_B4VgsCallBack_xd6fc:
    /*0000d6fc*/ CMP         R4, R7 
    /*0000d700*/ MOV         R5, R4 
    /*0000d704*/ LDR         R4, [R4] 
    /*0000d708*/ BEQ         Gdc_B4VgsCallBack_xd8b4
    Gdc_B4VgsCallBack_xd70c:
    /*0000d70c*/ CMP         R5, #0 
    /*0000d710*/ ADD         R6, R5, #4096               @ 0x1000 
    /*0000d714*/ BNE         Gdc_B4VgsCallBack_xd6f0
    /*0000d718*/ LDR         R3, [SP, #20] 
    /*0000d71c*/ MOVW        R2, #610                    @ 0x262 
    /*0000d720*/ LDR         R1, [PC, #472]              @ 0x000000000000d900 
    /*0000d724*/ MOV         R0, FP 
    /*0000d728*/ BL          0x000000000000D728          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000d72c*/ LDR         R3, [R6, #756]              @ 0x2f4 
    /*0000d730*/ CMP         R9, R3 
    /*0000d734*/ BNE         Gdc_B4VgsCallBack_xd6fc
    Gdc_B4VgsCallBack_xd738:
    /*0000d738*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000d73c*/ ADD         R1, SP, #28 
    /*0000d740*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000d744*/ BL          0x000000000000D744          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000d748*/ ADDS        R4, R5, #8 
    /*0000d74c*/ BEQ         Gdc_B4VgsCallBack_xd8e0
    Gdc_B4VgsCallBack_xd750:
    /*0000d750*/ LDR         R3, [R8, #764]              @ 0x2fc 
    /*0000d754*/ CMP         R3, #1 
    /*0000d758*/ BEQ         Gdc_B4VgsCallBack_xd780
    /*0000d75c*/ STR         R3, [SP, #4] 
    /*0000d760*/ MOVW        R2, #0                      @ .LC96 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ae4] 
    /*0000d764*/ MOVW        R3, #626                    @ 0x272 
    /*0000d768*/ MOVT        R2, #0                      @ .LC96 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ae4] 
    /*0000d76c*/ STR         R3, [SP] 
    /*0000d770*/ MOV         R1, #37                     @ 0x25 
    /*0000d774*/ LDR         R3, [PC, #388]              @ 0x000000000000d900 
    /*0000d778*/ MOV         R0, #3 
    /*0000d77c*/ BL          0x000000000000D77C          @ HI_LOG [R_ARM_CALL: +0x0] 
    Gdc_B4VgsCallBack_xd780:
    /*0000d780*/ LDR         R3, [R6, #760]              @ 0x2f8 
    /*0000d784*/ CMP         R3, #0 
    /*0000d788*/ BEQ         Gdc_B4VgsCallBack_xd804
    /*0000d78c*/ LDR         R1, [SP, #8] 
    /*0000d790*/ MOV         R2, #336                    @ 0x150 
    /*0000d794*/ LDR         R0, [SP, #12] 
    /*0000d798*/ LDR         R3, [R8, #672]              @ 0x2a0 
    /*0000d79c*/ LDR         IP, [SP, #16] 
    /*0000d7a0*/ STR         R1, [SP, #32] 
    /*0000d7a4*/ ADD         R1, R8, R2 
    /*0000d7a8*/ STR         R0, [SP, #36]               @ 0x24 
    /*0000d7ac*/ MOV         R0, R4 
    /*0000d7b0*/ STR         IP, [SP, #40]               @ 0x28 
    /*0000d7b4*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000d7b8*/ STR         SL, [SP, #44]               @ 0x2c 
    /*0000d7bc*/ BL          0x000000000000D7BC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000d7c0*/ LDR         R3, [R8, #680]              @ 0x2a8 
    /*0000d7c4*/ ADD         R2, SP, #52                 @ 0x34 
    /*0000d7c8*/ ADD         R1, SP, #32 
    /*0000d7cc*/ MOV         R0, R4 
    /*0000d7d0*/ STR         R3, [R5, #8] 
    /*0000d7d4*/ LDR         R3, [R8, #688]              @ 0x2b0 
    /*0000d7d8*/ STR         R3, [R5, #12] 
    /*0000d7dc*/ LDR         R3, [R6, #760]              @ 0x2f8 
    /*0000d7e0*/ STR         R3, [R5, #756]              @ 0x2f4 
    /*0000d7e4*/ BL          0x000000000000D7E4          @ GDC_ProRotationVgs [R_ARM_CALL: .text+0xd278] 
    /*0000d7e8*/ CMP         R0, #0 
    /*0000d7ec*/ BNE         Gdc_B4VgsCallBack_xd88c
    Gdc_B4VgsCallBack_xd7f0:
    /*0000d7f0*/ MOV         R0, R4 
    /*0000d7f4*/ MOV         R1, #18 
    /*0000d7f8*/ BL          0x000000000000D7F8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000d7fc*/ CMP         R0, #0 
    /*0000d800*/ BNE         Gdc_B4VgsCallBack_xd868
    Gdc_B4VgsCallBack_xd804:
    /*0000d804*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000d808*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000d80c*/ ADD         R1, SP, #28 
    /*0000d810*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000d814*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000d818*/ BL          0x000000000000D818          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000d81c*/ LDR         R2, [R4, SL, LSL #2] 
    /*0000d820*/ ADD         R1, SP, #28 
    /*0000d824*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000d828*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000d82c*/ LDR         R3, [R2, #8] 
    /*0000d830*/ SUB         R3, R3, #1 
    /*0000d834*/ STR         R3, [R2, #8] 
    /*0000d838*/ BL          0x000000000000D838          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000d83c*/ LDR         R0, [R4, SL, LSL #2] 
    /*0000d840*/ ADD         R0, R0, #24 
    /*0000d844*/ BL          0x000000000000D844          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0000d848*/ ADD         SP, SP, #92                 @ 0x5c 
    /*0000d84c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    Gdc_B4VgsCallBack_xd850:
    /*0000d850*/ MOV         R0, SL 
    /*0000d854*/ BL          0x0000000000005F18 
    /*0000d858*/ CMP         R0, #0 
    /*0000d85c*/ BEQ         Gdc_B4VgsCallBack_xd6a0
    /*0000d860*/ ADD         SP, SP, #92                 @ 0x5c 
    /*0000d864*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    Gdc_B4VgsCallBack_xd868:
    /*0000d868*/ MOV         R3, #656                    @ 0x290 
    /*0000d86c*/ MOVW        R2, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3160] 
    /*0000d870*/ STR         R3, [SP] 
    /*0000d874*/ MOVT        R2, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3160] 
    /*0000d878*/ LDR         R3, [PC, #128]              @ 0x000000000000d900 
    /*0000d87c*/ MOV         R1, #37                     @ 0x25 
    /*0000d880*/ MOV         R0, #3 
    /*0000d884*/ BL          0x000000000000D884          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d888*/ B           Gdc_B4VgsCallBack_xd804
    Gdc_B4VgsCallBack_xd88c:
    /*0000d88c*/ MOV         R2, #2 
    /*0000d890*/ MOV         R3, R8 
    /*0000d894*/ STR         R2, [R8, #764]              @ 0x2fc 
    /*0000d898*/ LDR         R1, [R8, #756]              @ 0x2f4 
    /*0000d89c*/ LDR         R2, [R8, #760]              @ 0x2f8 
    /*0000d8a0*/ LDR         R5, [R5, #756]              @ 0x2f4 
    /*0000d8a4*/ LDR         R0, [R8, #752]              @ 0x2f0 
    /*0000d8a8*/ BLX         R5 
    /*0000d8ac*/ B           Gdc_B4VgsCallBack_xd7f0
    Gdc_B4VgsCallBack_xd8b0:
    /*0000d8b0*/ MOV         R5, R7 
    Gdc_B4VgsCallBack_xd8b4:
    /*0000d8b4*/ ADD         R6, R5, #4096               @ 0x1000 
    /*0000d8b8*/ B           Gdc_B4VgsCallBack_xd738
    Gdc_B4VgsCallBack_xd8bc:
    /*0000d8bc*/ MOVW        R3, #601                    @ 0x259 
    /*0000d8c0*/ MOVW        R2, #0                      @ .LC95 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3abc] 
    /*0000d8c4*/ STR         R3, [SP] 
    /*0000d8c8*/ MOVT        R2, #0                      @ .LC95 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3abc] 
    /*0000d8cc*/ LDR         R3, [PC, #44]               @ 0x000000000000d900 
    /*0000d8d0*/ MOV         R1, #37                     @ 0x25 
    /*0000d8d4*/ MOV         R0, #3 
    /*0000d8d8*/ BL          0x000000000000D8D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d8dc*/ B           Gdc_B4VgsCallBack_xd6b4
    Gdc_B4VgsCallBack_xd8e0:
    /*0000d8e0*/ MOVW        R3, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x306c] 
    /*0000d8e4*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2694] 
    /*0000d8e8*/ MOVT        R3, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x306c] 
    /*0000d8ec*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2694] 
    /*0000d8f0*/ MOVW        R2, #622                    @ 0x26e 
    /*0000d8f4*/ LDR         R1, [PC, #4]                @ 0x000000000000d900 
    /*0000d8f8*/ BL          0x000000000000D8F8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000d8fc*/ B           Gdc_B4VgsCallBack_xd750
    /*0000d900*/ MULEQ       R0, R8, R8 
FUNC_END Gdc_B4VgsCallBack


FUNC_BEGIN GDC_ProRotationEx
    /*0000d904*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000d908*/ MOV         R7, R1 
    /*0000d90c*/ LDR         R8, [R7, #12] 
    /*0000d910*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000d914*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000d918*/ MOV         R4, R0 
    /*0000d91c*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000d920*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000d924*/ ADD         R9, R4, #4096               @ 0x1000 
    /*0000d928*/ LDR         R5, [R1] 
    /*0000d92c*/ CMP         R8, #63                     @ 0x3f 
    /*0000d930*/ STR         R2, [SP, #8] 
    /*0000d934*/ MOV         FP, R3 
    /*0000d938*/ STR         R0, [R9, #752]              @ 0x2f0 
    /*0000d93c*/ ADD         R5, R5, #648                @ 0x288 
    /*0000d940*/ SUB         SL, R4, #8 
    /*0000d944*/ BHI         GDC_ProRotationEx_xda60
    GDC_ProRotationEx_xd948:
    /*0000d948*/ MOV         R1, #18 
    /*0000d94c*/ MOV         R0, R4 
    /*0000d950*/ BL          0x000000000000D950          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000d954*/ SUBS        R6, R0, #0 
    /*0000d958*/ BEQ         GDC_ProRotationEx_xd998
    /*0000d95c*/ MOVW        R3, #4939                   @ 0x134b 
    /*0000d960*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000d964*/ STR         R3, [SP] 
    /*0000d968*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000d96c*/ STR         R6, [SP, #4] 
    /*0000d970*/ MOV         R1, #37                     @ 0x25 
    /*0000d974*/ LDR         R3, [PC, #428]              @ 0x000000000000db28 
    /*0000d978*/ MOV         R0, #3 
    /*0000d97c*/ BL          0x000000000000D97C          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProRotationEx_xd980:
    /*0000d980*/ MOV         R1, SL 
    /*0000d984*/ MOV         R0, R5 
    /*0000d988*/ BL          0x0000000000005E7C 
    GDC_ProRotationEx_xd98c:
    /*0000d98c*/ MOV         R0, R6 
    /*0000d990*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000d994*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProRotationEx_xd998:
    /*0000d998*/ LDR         R3, [R7, #8] 
    /*0000d99c*/ ADD         R0, SP, #28 
    /*0000d9a0*/ LDR         R2, [R7, #4] 
    /*0000d9a4*/ LDR         R1, [R7] 
    /*0000d9a8*/ STR         R0, [SP] 
    /*0000d9ac*/ ADD         R0, SP, #24 
    /*0000d9b0*/ LDR         IP, [FP, #212]              @ 0xd4 
    /*0000d9b4*/ LDR         LR, [FP, #216]              @ 0xd8 
    /*0000d9b8*/ STR         R6, [SP, #12] 
    /*0000d9bc*/ STR         R6, [SP, #60]               @ 0x3c 
    /*0000d9c0*/ STR         IP, [SP, #52]               @ 0x34 
    /*0000d9c4*/ MOV         IP, #1 
    /*0000d9c8*/ STR         LR, [SP, #56]               @ 0x38 
    /*0000d9cc*/ STR         IP, [SP, #48]               @ 0x30 
    /*0000d9d0*/ BL          0x000000000000D9D0          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000d9d4*/ SUBS        R6, R0, #0 
    /*0000d9d8*/ BNE         GDC_ProRotationEx_xda74
    /*0000d9dc*/ LDR         R1, [R9, #748]              @ 0x2ec 
    /*0000d9e0*/ MOV         R2, R7 
    /*0000d9e4*/ STR         R6, [R4, #744]              @ 0x2e8 
    /*0000d9e8*/ MOVW        R0, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*0000d9ec*/ LDR         R3, [SP, #8] 
    /*0000d9f0*/ MOVT        R0, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*0000d9f4*/ STR         R1, [R4, #736]              @ 0x2e0 
    /*0000d9f8*/ MOV         R1, R4 
    /*0000d9fc*/ STR         R0, [R4, #748]              @ 0x2ec 
    /*0000da00*/ MOV         R7, R6 
    /*0000da04*/ STR         R8, [R4, #740]              @ 0x2e4 
    /*0000da08*/ LDR         R0, [SP, #24] 
    /*0000da0c*/ BL          0x00000000000060CC 
    /*0000da10*/ SUBS        R6, R0, #0 
    /*0000da14*/ BEQ         GDC_ProRotationEx_xdaa8
    /*0000da18*/ MOV         R1, #18 
    /*0000da1c*/ MOV         R0, R4 
    /*0000da20*/ BL          0x000000000000DA20          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000da24*/ STR         R6, [SP, #4] 
    /*0000da28*/ MOVW        R3, #4965                   @ 0x1365 
    /*0000da2c*/ MOV         R1, #37                     @ 0x25 
    /*0000da30*/ STR         R3, [SP] 
    /*0000da34*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35c4] 
    /*0000da38*/ LDR         R3, [PC, #232]              @ 0x000000000000db28 
    /*0000da3c*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35c4] 
    /*0000da40*/ MOV         R0, #3 
    /*0000da44*/ BL          0x000000000000DA44          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000da48*/ LDR         R3, [SP, #12] 
    /*0000da4c*/ LDR         R0, [SP, #24] 
    /*0000da50*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000da54*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*0000da58*/ BL          0x000000000000DA58          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000da5c*/ B           GDC_ProRotationEx_xd980
    GDC_ProRotationEx_xda60:
    /*0000da60*/ MOV         R0, R8 
    /*0000da64*/ BL          0x0000000000005F18 
    /*0000da68*/ SUBS        R6, R0, #0 
    /*0000da6c*/ BNE         GDC_ProRotationEx_xd980
    /*0000da70*/ B           GDC_ProRotationEx_xd948
    GDC_ProRotationEx_xda74:
    /*0000da74*/ MOV         R0, R4 
    /*0000da78*/ MOV         R1, #18 
    /*0000da7c*/ BL          0x000000000000DA7C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000da80*/ MOVW        R3, #4954                   @ 0x135a 
    /*0000da84*/ STR         R6, [SP, #4] 
    /*0000da88*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3600] 
    /*0000da8c*/ STR         R3, [SP] 
    /*0000da90*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3600] 
    /*0000da94*/ LDR         R3, [PC, #140]              @ 0x000000000000db28 
    /*0000da98*/ MOV         R1, #37                     @ 0x25 
    /*0000da9c*/ MOV         R0, #3 
    /*0000daa0*/ BL          0x000000000000DAA0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000daa4*/ B           GDC_ProRotationEx_xd980
    GDC_ProRotationEx_xdaa8:
    /*0000daa8*/ ADD         R1, SP, #20 
    /*0000daac*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000dab0*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000dab4*/ BL          0x000000000000DAB4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000dab8*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000dabc*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000dac0*/ ADD         R1, SP, #20 
    /*0000dac4*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000dac8*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000dacc*/ LDR         R2, [R3, R8, LSL #2] 
    /*0000dad0*/ LDR         R3, [R2, #8] 
    /*0000dad4*/ ADD         R3, R3, #1 
    /*0000dad8*/ STR         R3, [R2, #8] 
    /*0000dadc*/ BL          0x000000000000DADC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000dae0*/ LDR         R0, [SP, #24] 
    /*0000dae4*/ BL          0x000000000000DAE4          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000dae8*/ SUBS        R6, R0, #0 
    /*0000daec*/ BEQ         GDC_ProRotationEx_xd98c
    /*0000daf0*/ STR         R6, [SP, #4] 
    /*0000daf4*/ MOVW        R3, #4977                   @ 0x1371 
    /*0000daf8*/ MOV         R1, #37                     @ 0x25 
    /*0000dafc*/ STR         R3, [SP] 
    /*0000db00*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000db04*/ LDR         R3, [PC, #28]               @ 0x000000000000db28 
    /*0000db08*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000db0c*/ MOV         R0, #3 
    /*0000db10*/ BL          0x000000000000DB10          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000db14*/ STR         R7, [R4, #748]              @ 0x2ec 
    /*0000db18*/ LDR         R0, [SP, #24] 
    /*0000db1c*/ STR         R7, [R9, #752]              @ 0x2f0 
    /*0000db20*/ BL          0x000000000000DB20          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000db24*/ B           GDC_ProRotationEx_xd98c
    /*0000db28*/ ANDEQ       R0, R0, IP, LSR #17 
FUNC_END GDC_ProRotationEx


FUNC_BEGIN GDC_ProRotation
    /*0000db2c*/ LDR         IP, [R2, #16] 
    /*0000db30*/ LDR         R3, [SP] 
    /*0000db34*/ CMP         IP, #0 
    /*0000db38*/ BNE         GDC_ProRotation_xdb40
    GDC_ProRotation_xdb3c:
    /*0000db3c*/ B           GDC_ProRotation_xdb3c       @ GDC_ProRotationEx [R_ARM_JUMP24: .text+0xd904] 
    GDC_ProRotation_xdb40:
    /*0000db40*/ B           GDC_ProRotation_xdb40       @ GDC_ProRotationVgs [R_ARM_JUMP24: .text+0xd278] 
FUNC_END GDC_ProRotation


FUNC_BEGIN GDC_ProLDCV2
    /*0000db44*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000db48*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000db4c*/ LDR         R8, [R1, #12] 
    /*0000db50*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000db54*/ LDR         R2, [R0, #748]              @ 0x2ec 
    /*0000db58*/ SUB         SP, SP, #60                 @ 0x3c 
    /*0000db5c*/ ADD         R9, R0, #4096               @ 0x1000 
    /*0000db60*/ LDR         R5, [R3] 
    /*0000db64*/ CMP         R8, #63                     @ 0x3f 
    /*0000db68*/ MOV         R7, R1 
    /*0000db6c*/ MOV         R4, R0 
    /*0000db70*/ SUB         SL, R0, #8 
    /*0000db74*/ ADD         R5, R5, #648                @ 0x288 
    /*0000db78*/ STR         R2, [R9, #752]              @ 0x2f0 
    /*0000db7c*/ LDR         FP, [SP, #96]               @ 0x60 
    /*0000db80*/ BHI         GDC_ProLDCV2_xdc98
    GDC_ProLDCV2_xdb84:
    /*0000db84*/ LDR         R2, [FP, #212]              @ 0xd4 
    /*0000db88*/ MOV         R1, #18 
    /*0000db8c*/ LDR         R3, [FP, #216]              @ 0xd8 
    /*0000db90*/ MOV         R0, R4 
    /*0000db94*/ MOV         IP, #1 
    /*0000db98*/ MOV         FP, #0 
    /*0000db9c*/ STR         IP, [SP, #40]               @ 0x28 
    /*0000dba0*/ STR         R2, [SP, #44]               @ 0x2c 
    /*0000dba4*/ STR         R3, [SP, #48]               @ 0x30 
    /*0000dba8*/ STR         FP, [SP, #52]               @ 0x34 
    /*0000dbac*/ BL          0x000000000000DBAC          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000dbb0*/ SUBS        R6, R0, #0 
    /*0000dbb4*/ BEQ         GDC_ProLDCV2_xdbf4
    /*0000dbb8*/ MOVW        R3, #5042                   @ 0x13b2 
    /*0000dbbc*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000dbc0*/ STR         R3, [SP] 
    /*0000dbc4*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000dbc8*/ STR         R6, [SP, #4] 
    /*0000dbcc*/ MOV         R1, #37                     @ 0x25 
    /*0000dbd0*/ LDR         R3, [PC, #408]              @ 0x000000000000dd70 
    /*0000dbd4*/ MOV         R0, #3 
    /*0000dbd8*/ BL          0x000000000000DBD8          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProLDCV2_xdbdc:
    /*0000dbdc*/ MOV         R1, SL 
    /*0000dbe0*/ MOV         R0, R5 
    /*0000dbe4*/ BL          0x0000000000005E7C 
    GDC_ProLDCV2_xdbe8:
    /*0000dbe8*/ MOV         R0, R6 
    /*0000dbec*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0000dbf0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProLDCV2_xdbf4:
    /*0000dbf4*/ LDR         R3, [R7, #8] 
    /*0000dbf8*/ ADD         IP, SP, #20 
    /*0000dbfc*/ LDR         R2, [R7, #4] 
    /*0000dc00*/ ADD         R0, SP, #16 
    /*0000dc04*/ LDR         R1, [R7] 
    /*0000dc08*/ STR         IP, [SP] 
    /*0000dc0c*/ BL          0x000000000000DC0C          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000dc10*/ SUBS        R6, R0, #0 
    /*0000dc14*/ BNE         GDC_ProLDCV2_xdcac
    /*0000dc18*/ LDR         R1, [R9, #748]              @ 0x2ec 
    /*0000dc1c*/ MOV         R0, #1 
    /*0000dc20*/ MOV         R2, R7 
    /*0000dc24*/ STR         R0, [R4, #744]              @ 0x2e8 
    /*0000dc28*/ MOVW        R3, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*0000dc2c*/ STR         R8, [R4, #740]              @ 0x2e4 
    /*0000dc30*/ MOVT        R3, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*0000dc34*/ STR         R1, [R4, #736]              @ 0x2e0 
    /*0000dc38*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000dc3c*/ MOV         R1, R4 
    /*0000dc40*/ LDR         R3, [SP, #100]              @ 0x64 
    /*0000dc44*/ LDR         R0, [SP, #16] 
    /*0000dc48*/ BL          0x0000000000005FA8 
    /*0000dc4c*/ SUBS        R6, R0, #0 
    /*0000dc50*/ BEQ         GDC_ProLDCV2_xdce0
    /*0000dc54*/ MOV         R1, #18 
    /*0000dc58*/ MOV         R0, R4 
    /*0000dc5c*/ BL          0x000000000000DC5C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000dc60*/ STR         R6, [SP, #4] 
    /*0000dc64*/ MOVW        R3, #5063                   @ 0x13c7 
    /*0000dc68*/ MOV         R1, #37                     @ 0x25 
    /*0000dc6c*/ STR         R3, [SP] 
    /*0000dc70*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x374c] 
    /*0000dc74*/ LDR         R3, [PC, #244]              @ 0x000000000000dd70 
    /*0000dc78*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x374c] 
    /*0000dc7c*/ MOV         R0, #3 
    /*0000dc80*/ BL          0x000000000000DC80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000dc84*/ STR         FP, [R4, #748]              @ 0x2ec 
    /*0000dc88*/ LDR         R0, [SP, #16] 
    /*0000dc8c*/ STR         FP, [R9, #752]              @ 0x2f0 
    /*0000dc90*/ BL          0x000000000000DC90          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000dc94*/ B           GDC_ProLDCV2_xdbdc
    GDC_ProLDCV2_xdc98:
    /*0000dc98*/ MOV         R0, R8 
    /*0000dc9c*/ BL          0x0000000000005F18 
    /*0000dca0*/ SUBS        R6, R0, #0 
    /*0000dca4*/ BNE         GDC_ProLDCV2_xdbdc
    /*0000dca8*/ B           GDC_ProLDCV2_xdb84
    GDC_ProLDCV2_xdcac:
    /*0000dcac*/ MOV         R0, R4 
    /*0000dcb0*/ MOV         R1, #18 
    /*0000dcb4*/ BL          0x000000000000DCB4          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000dcb8*/ MOVW        R3, #5051                   @ 0x13bb 
    /*0000dcbc*/ STR         R6, [SP, #4] 
    /*0000dcc0*/ MOVW        R2, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3844] 
    /*0000dcc4*/ STR         R3, [SP] 
    /*0000dcc8*/ MOVT        R2, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3844] 
    /*0000dccc*/ LDR         R3, [PC, #156]              @ 0x000000000000dd70 
    /*0000dcd0*/ MOV         R1, #37                     @ 0x25 
    /*0000dcd4*/ MOV         R0, #3 
    /*0000dcd8*/ BL          0x000000000000DCD8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000dcdc*/ B           GDC_ProLDCV2_xdbdc
    GDC_ProLDCV2_xdce0:
    /*0000dce0*/ ADD         R1, SP, #12 
    /*0000dce4*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000dce8*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000dcec*/ BL          0x000000000000DCEC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000dcf0*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000dcf4*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000dcf8*/ ADD         R1, SP, #12 
    /*0000dcfc*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000dd00*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000dd04*/ LDR         IP, [R3, R8, LSL #2] 
    /*0000dd08*/ LDR         R2, [IP, #8] 
    /*0000dd0c*/ ADD         R2, R2, #1 
    /*0000dd10*/ STR         R2, [IP, #8] 
    /*0000dd14*/ LDR         R2, [R3, R8, LSL #2] 
    /*0000dd18*/ LDR         R3, [R2, #16] 
    /*0000dd1c*/ ADD         R3, R3, #1 
    /*0000dd20*/ STR         R3, [R2, #16] 
    /*0000dd24*/ BL          0x000000000000DD24          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000dd28*/ LDR         R0, [SP, #16] 
    /*0000dd2c*/ BL          0x000000000000DD2C          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000dd30*/ SUBS        R6, R0, #0 
    /*0000dd34*/ BEQ         GDC_ProLDCV2_xdbe8
    /*0000dd38*/ STR         R6, [SP, #4] 
    /*0000dd3c*/ MOVW        R3, #5076                   @ 0x13d4 
    /*0000dd40*/ MOV         R1, #37                     @ 0x25 
    /*0000dd44*/ STR         R3, [SP] 
    /*0000dd48*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000dd4c*/ LDR         R3, [PC, #28]               @ 0x000000000000dd70 
    /*0000dd50*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000dd54*/ MOV         R0, #3 
    /*0000dd58*/ BL          0x000000000000DD58          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000dd5c*/ STR         FP, [R4, #748]              @ 0x2ec 
    /*0000dd60*/ LDR         R0, [SP, #16] 
    /*0000dd64*/ STR         FP, [R9, #752]              @ 0x2f0 
    /*0000dd68*/ BL          0x000000000000DD68          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000dd6c*/ B           GDC_ProLDCV2_xdbe8
    /*0000dd70*/ ANDEQ       R0, R0, R0, ASR #17 
FUNC_END GDC_ProLDCV2


FUNC_BEGIN GDC_ProLDCV2RotationEx
    /*0000dd74*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000dd78*/ MOV         R7, R1 
    /*0000dd7c*/ LDR         R8, [R7, #12] 
    /*0000dd80*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000dd84*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000dd88*/ MOV         R4, R0 
    /*0000dd8c*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000dd90*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0000dd94*/ ADD         R9, R4, #4096               @ 0x1000 
    /*0000dd98*/ LDR         R5, [R1] 
    /*0000dd9c*/ CMP         R8, #63                     @ 0x3f 
    /*0000dda0*/ MOV         FP, R3 
    /*0000dda4*/ STR         R2, [SP, #12] 
    /*0000dda8*/ ADD         R5, R5, #648                @ 0x288 
    /*0000ddac*/ STR         R0, [R9, #752]              @ 0x2f0 
    /*0000ddb0*/ SUB         SL, R4, #8 
    /*0000ddb4*/ LDR         R3, [SP, #112]              @ 0x70 
    /*0000ddb8*/ BHI         GDC_ProLDCV2RotationEx_xdef4
    GDC_ProLDCV2RotationEx_xddbc:
    /*0000ddbc*/ LDR         R2, [R3, #212]              @ 0xd4 
    /*0000ddc0*/ MOV         R1, #18 
    /*0000ddc4*/ LDR         R3, [R3, #216]              @ 0xd8 
    /*0000ddc8*/ MOV         R0, R4 
    /*0000ddcc*/ STR         R2, [SP, #60]               @ 0x3c 
    /*0000ddd0*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000ddd4*/ MOV         R3, #1 
    /*0000ddd8*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000dddc*/ MOV         R3, #0 
    /*0000dde0*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000dde4*/ BL          0x000000000000DDE4          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000dde8*/ SUBS        R6, R0, #0 
    /*0000ddec*/ BEQ         GDC_ProLDCV2RotationEx_xde2c
    /*0000ddf0*/ MOVW        R3, #5125                   @ 0x1405 
    /*0000ddf4*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000ddf8*/ STR         R3, [SP] 
    /*0000ddfc*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000de00*/ STR         R6, [SP, #4] 
    /*0000de04*/ MOV         R1, #37                     @ 0x25 
    /*0000de08*/ LDR         R3, [PC, #736]              @ 0x000000000000e0f0 
    /*0000de0c*/ MOV         R0, #3 
    /*0000de10*/ BL          0x000000000000DE10          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProLDCV2RotationEx_xde14:
    /*0000de14*/ MOV         R1, SL 
    /*0000de18*/ MOV         R0, R5 
    /*0000de1c*/ BL          0x0000000000005E7C 
    GDC_ProLDCV2RotationEx_xde20:
    /*0000de20*/ MOV         R0, R6 
    /*0000de24*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000de28*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProLDCV2RotationEx_xde2c:
    /*0000de2c*/ LDR         R3, [R7, #8] 
    /*0000de30*/ ADD         IP, SP, #36                 @ 0x24 
    /*0000de34*/ LDR         R2, [R7, #4] 
    /*0000de38*/ ADD         R0, SP, #32 
    /*0000de3c*/ LDR         R1, [R7] 
    /*0000de40*/ STR         IP, [SP] 
    /*0000de44*/ BL          0x000000000000DE44          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000de48*/ SUBS        R6, R0, #0 
    /*0000de4c*/ BNE         GDC_ProLDCV2RotationEx_xdf10
    /*0000de50*/ BL          0x0000000000005D48 
    /*0000de54*/ SUBS        R3, R0, #0 
    /*0000de58*/ STR         R3, [SP, #16] 
    /*0000de5c*/ BEQ         GDC_ProLDCV2RotationEx_xe038
    /*0000de60*/ LDR         R3, [SP, #16] 
    /*0000de64*/ MOV         R2, #776                    @ 0x308 
    /*0000de68*/ MOV         R1, R4 
    /*0000de6c*/ ADD         R3, R3, #8 
    /*0000de70*/ STR         R3, [SP, #20] 
    /*0000de74*/ MOV         R6, R3 
    /*0000de78*/ MOV         R0, R3 
    /*0000de7c*/ BL          0x000000000000DE7C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000de80*/ MOV         R3, FP 
    /*0000de84*/ MOV         R0, R6 
    /*0000de88*/ LDR         R2, [SP, #12] 
    /*0000de8c*/ MOV         R1, R7 
    /*0000de90*/ MOV         FP, R6 
    /*0000de94*/ BL          0x000000000000DE94          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*0000de98*/ SUBS        R6, R0, #0 
    /*0000de9c*/ BEQ         GDC_ProLDCV2RotationEx_xdf44
    /*0000dea0*/ MOV         R1, #18 
    /*0000dea4*/ MOV         R0, FP 
    /*0000dea8*/ BL          0x000000000000DEA8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000deac*/ MOVW        R3, #5157                   @ 0x1425 
    /*0000deb0*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*0000deb4*/ STR         R3, [SP] 
    /*0000deb8*/ STR         R6, [SP, #4] 
    /*0000debc*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*0000dec0*/ LDR         R3, [PC, #552]              @ 0x000000000000e0f0 
    /*0000dec4*/ MOV         R1, #37                     @ 0x25 
    /*0000dec8*/ MOV         R0, #3 
    /*0000decc*/ BL          0x000000000000DECC          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProLDCV2RotationEx_xded0:
    /*0000ded0*/ LDR         R1, [SP, #16] 
    /*0000ded4*/ MOV         R0, R5 
    /*0000ded8*/ BL          0x0000000000005E7C 
    GDC_ProLDCV2RotationEx_xdedc:
    /*0000dedc*/ MOV         R3, #0 
    /*0000dee0*/ LDR         R0, [SP, #32] 
    /*0000dee4*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000dee8*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*0000deec*/ BL          0x000000000000DEEC          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000def0*/ B           GDC_ProLDCV2RotationEx_xde14
    GDC_ProLDCV2RotationEx_xdef4:
    /*0000def4*/ MOV         R0, R8 
    /*0000def8*/ STR         R3, [SP, #16] 
    /*0000defc*/ BL          0x0000000000005F18 
    /*0000df00*/ LDR         R3, [SP, #16] 
    /*0000df04*/ SUBS        R6, R0, #0 
    /*0000df08*/ BNE         GDC_ProLDCV2RotationEx_xde14
    /*0000df0c*/ B           GDC_ProLDCV2RotationEx_xddbc
    GDC_ProLDCV2RotationEx_xdf10:
    /*0000df10*/ MOV         R0, R4 
    /*0000df14*/ MOV         R1, #18 
    /*0000df18*/ BL          0x000000000000DF18          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000df1c*/ MOVW        R3, #5134                   @ 0x140e 
    /*0000df20*/ STR         R6, [SP, #4] 
    /*0000df24*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3600] 
    /*0000df28*/ STR         R3, [SP] 
    /*0000df2c*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3600] 
    /*0000df30*/ LDR         R3, [PC, #440]              @ 0x000000000000e0f0 
    /*0000df34*/ MOV         R1, #37                     @ 0x25 
    /*0000df38*/ MOV         R0, #3 
    /*0000df3c*/ BL          0x000000000000DF3C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000df40*/ B           GDC_ProLDCV2RotationEx_xde14
    GDC_ProLDCV2RotationEx_xdf44:
    /*0000df44*/ LDR         FP, [SP, #20] 
    /*0000df48*/ MOV         R2, R7 
    /*0000df4c*/ LDR         R3, [SP, #116]              @ 0x74 
    /*0000df50*/ LDR         R0, [SP, #32] 
    /*0000df54*/ MOV         R1, FP 
    /*0000df58*/ BL          0x0000000000005FA8 
    /*0000df5c*/ SUBS        R6, R0, #0 
    /*0000df60*/ BNE         GDC_ProLDCV2RotationEx_xdff4
    /*0000df64*/ LDR         R3, [SP, #16] 
    /*0000df68*/ MOV         R2, #336                    @ 0x150 
    /*0000df6c*/ MOV         R0, R4 
    /*0000df70*/ MOV         FP, R6 
    /*0000df74*/ ADD         R1, R3, #344                @ 0x158 
    /*0000df78*/ BL          0x000000000000DF78          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000df7c*/ LDR         R1, [SP, #16] 
    /*0000df80*/ MOV         R0, R5 
    /*0000df84*/ BL          0x0000000000005E7C 
    /*0000df88*/ LDR         R0, [R9, #748]              @ 0x2ec 
    /*0000df8c*/ LDR         R3, [SP, #12] 
    /*0000df90*/ MOV         R2, R7 
    /*0000df94*/ STR         R6, [R4, #744]              @ 0x2e8 
    /*0000df98*/ MOVW        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*0000df9c*/ STR         R0, [R4, #736]              @ 0x2e0 
    /*0000dfa0*/ MOVT        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*0000dfa4*/ STR         R8, [R4, #740]              @ 0x2e4 
    /*0000dfa8*/ STR         R1, [R4, #748]              @ 0x2ec 
    /*0000dfac*/ MOV         R1, R4 
    /*0000dfb0*/ LDR         R0, [SP, #32] 
    /*0000dfb4*/ BL          0x00000000000060CC 
    /*0000dfb8*/ SUBS        R6, R0, #0 
    /*0000dfbc*/ BEQ         GDC_ProLDCV2RotationEx_xe070
    /*0000dfc0*/ MOV         R1, #18 
    /*0000dfc4*/ MOV         R0, R4 
    /*0000dfc8*/ BL          0x000000000000DFC8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000dfcc*/ MOVW        R3, #5183                   @ 0x143f 
    /*0000dfd0*/ STR         R6, [SP, #4] 
    /*0000dfd4*/ MOVW        R2, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37c4] 
    /*0000dfd8*/ STR         R3, [SP] 
    /*0000dfdc*/ MOVT        R2, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37c4] 
    /*0000dfe0*/ LDR         R3, [PC, #264]              @ 0x000000000000e0f0 
    /*0000dfe4*/ MOV         R1, #37                     @ 0x25 
    /*0000dfe8*/ MOV         R0, #3 
    /*0000dfec*/ BL          0x000000000000DFEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000dff0*/ B           GDC_ProLDCV2RotationEx_xdedc
    GDC_ProLDCV2RotationEx_xdff4:
    /*0000dff4*/ MOV         R0, FP 
    /*0000dff8*/ MOV         R1, #18 
    /*0000dffc*/ BL          0x000000000000DFFC          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000e000*/ LDR         R3, [SP, #16] 
    /*0000e004*/ MOV         R1, #18 
    /*0000e008*/ ADD         R0, R3, #344                @ 0x158 
    /*0000e00c*/ BL          0x000000000000E00C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000e010*/ MOVW        R3, #5167                   @ 0x142f 
    /*0000e014*/ STR         R6, [SP, #4] 
    /*0000e018*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x374c] 
    /*0000e01c*/ STR         R3, [SP] 
    /*0000e020*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x374c] 
    /*0000e024*/ LDR         R3, [PC, #196]              @ 0x000000000000e0f0 
    /*0000e028*/ MOV         R1, #37                     @ 0x25 
    /*0000e02c*/ MOV         R0, #3 
    /*0000e030*/ BL          0x000000000000E030          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e034*/ B           GDC_ProLDCV2RotationEx_xded0
    GDC_ProLDCV2RotationEx_xe038:
    /*0000e038*/ MOV         R1, #18 
    /*0000e03c*/ MOV         R0, R4 
    /*0000e040*/ BL          0x000000000000E040          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000e044*/ MOVW        R3, #5142                   @ 0x1416 
    /*0000e048*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*0000e04c*/ STR         R3, [SP] 
    /*0000e050*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*0000e054*/ LDR         R3, [PC, #148]              @ 0x000000000000e0f0 
    /*0000e058*/ MOV         R1, #37                     @ 0x25 
    /*0000e05c*/ MOV         R0, #3 
    /*0000e060*/ MOVW        R6, #32781                  @ 0x800d 
    /*0000e064*/ BL          0x000000000000E064          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e068*/ MOVT        R6, #40997                  @ 0xa025 
    /*0000e06c*/ B           GDC_ProLDCV2RotationEx_xdedc
    GDC_ProLDCV2RotationEx_xe070:
    /*0000e070*/ ADD         R1, SP, #28 
    /*0000e074*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000e078*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000e07c*/ BL          0x000000000000E07C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000e080*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000e084*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000e088*/ ADD         R1, SP, #28 
    /*0000e08c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000e090*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000e094*/ LDR         R2, [R3, R8, LSL #2] 
    /*0000e098*/ LDR         R3, [R2, #8] 
    /*0000e09c*/ ADD         R3, R3, #1 
    /*0000e0a0*/ STR         R3, [R2, #8] 
    /*0000e0a4*/ BL          0x000000000000E0A4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000e0a8*/ LDR         R0, [SP, #32] 
    /*0000e0ac*/ BL          0x000000000000E0AC          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000e0b0*/ SUBS        R6, R0, #0 
    /*0000e0b4*/ BEQ         GDC_ProLDCV2RotationEx_xde20
    /*0000e0b8*/ STR         R6, [SP, #4] 
    /*0000e0bc*/ MOVW        R3, #5195                   @ 0x144b 
    /*0000e0c0*/ MOV         R1, #37                     @ 0x25 
    /*0000e0c4*/ STR         R3, [SP] 
    /*0000e0c8*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000e0cc*/ LDR         R3, [PC, #28]               @ 0x000000000000e0f0 
    /*0000e0d0*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000e0d4*/ MOV         R0, #3 
    /*0000e0d8*/ BL          0x000000000000E0D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e0dc*/ STR         FP, [R4, #748]              @ 0x2ec 
    /*0000e0e0*/ LDR         R0, [SP, #32] 
    /*0000e0e4*/ STR         FP, [R9, #752]              @ 0x2f0 
    /*0000e0e8*/ BL          0x000000000000E0E8          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000e0ec*/ B           GDC_ProLDCV2RotationEx_xde20
    /*0000e0f0*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END GDC_ProLDCV2RotationEx


FUNC_BEGIN GDC_ProLDCV2Rotation
    /*0000e0f4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000e0f8*/ LDR         LR, [R2, #16] 
    /*0000e0fc*/ LDR         IP, [SP, #4] 
    /*0000e100*/ CMP         LR, #0 
    /*0000e104*/ LDR         LR, [SP, #8] 
    /*0000e108*/ BNE         GDC_ProLDCV2Rotation_xe118
    /*0000e10c*/ STMIB       SP, {IP, LR} 
    /*0000e110*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_ProLDCV2Rotation_xe114:
    /*0000e114*/ B           GDC_ProLDCV2Rotation_xe114  @ GDC_ProLDCV2RotationEx [R_ARM_JUMP24: .text+0xdd74] 
    GDC_ProLDCV2Rotation_xe118:
    /*0000e118*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_ProLDCV2Rotation_xe11c:
    /*0000e11c*/ B           GDC_ProLDCV2Rotation_xe11c  @ GDC_ProGyroRotation [R_ARM_JUMP24: .text+0xb474] 
FUNC_END GDC_ProLDCV2Rotation


FUNC_BEGIN GDC_ProLDCV2Spread
    /*0000e120*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000e124*/ MOV         R7, R1 
    /*0000e128*/ LDR         R8, [R7, #12] 
    /*0000e12c*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000e130*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000e134*/ MOV         R4, R0 
    /*0000e138*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000e13c*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0000e140*/ ADD         R9, R4, #4096               @ 0x1000 
    /*0000e144*/ LDR         R5, [R1] 
    /*0000e148*/ CMP         R8, #63                     @ 0x3f 
    /*0000e14c*/ MOV         FP, R3 
    /*0000e150*/ STR         R2, [SP, #12] 
    /*0000e154*/ ADD         R5, R5, #648                @ 0x288 
    /*0000e158*/ STR         R0, [R9, #752]              @ 0x2f0 
    /*0000e15c*/ SUB         SL, R4, #8 
    /*0000e160*/ LDR         R3, [SP, #112]              @ 0x70 
    /*0000e164*/ BHI         GDC_ProLDCV2Spread_xe29c
    GDC_ProLDCV2Spread_xe168:
    /*0000e168*/ LDR         R2, [R3, #212]              @ 0xd4 
    /*0000e16c*/ MOV         R1, #18 
    /*0000e170*/ LDR         R3, [R3, #216]              @ 0xd8 
    /*0000e174*/ MOV         R0, R4 
    /*0000e178*/ STR         R2, [SP, #60]               @ 0x3c 
    /*0000e17c*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000e180*/ MOV         R3, #1 
    /*0000e184*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000e188*/ MOV         R3, #0 
    /*0000e18c*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000e190*/ BL          0x000000000000E190          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000e194*/ SUBS        R6, R0, #0 
    /*0000e198*/ BEQ         GDC_ProLDCV2Spread_xe1d8
    /*0000e19c*/ MOVW        R3, #5265                   @ 0x1491 
    /*0000e1a0*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000e1a4*/ STR         R3, [SP] 
    /*0000e1a8*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000e1ac*/ STR         R6, [SP, #4] 
    /*0000e1b0*/ MOV         R1, #37                     @ 0x25 
    /*0000e1b4*/ LDR         R3, [PC, #732]              @ 0x000000000000e498 
    /*0000e1b8*/ MOV         R0, #3 
    /*0000e1bc*/ BL          0x000000000000E1BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProLDCV2Spread_xe1c0:
    /*0000e1c0*/ MOV         R1, SL 
    /*0000e1c4*/ MOV         R0, R5 
    /*0000e1c8*/ BL          0x0000000000005E7C 
    GDC_ProLDCV2Spread_xe1cc:
    /*0000e1cc*/ MOV         R0, R6 
    /*0000e1d0*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000e1d4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProLDCV2Spread_xe1d8:
    /*0000e1d8*/ LDR         R3, [R7, #8] 
    /*0000e1dc*/ ADD         IP, SP, #36                 @ 0x24 
    /*0000e1e0*/ LDR         R2, [R7, #4] 
    /*0000e1e4*/ ADD         R0, SP, #32 
    /*0000e1e8*/ LDR         R1, [R7] 
    /*0000e1ec*/ STR         IP, [SP] 
    /*0000e1f0*/ BL          0x000000000000E1F0          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000e1f4*/ SUBS        R6, R0, #0 
    /*0000e1f8*/ BNE         GDC_ProLDCV2Spread_xe2b8
    /*0000e1fc*/ BL          0x0000000000005D48 
    /*0000e200*/ SUBS        R3, R0, #0 
    /*0000e204*/ STR         R3, [SP, #16] 
    /*0000e208*/ BEQ         GDC_ProLDCV2Spread_xe3e0
    /*0000e20c*/ LDR         R3, [SP, #16] 
    /*0000e210*/ MOV         R2, #776                    @ 0x308 
    /*0000e214*/ MOV         R1, R4 
    /*0000e218*/ ADD         R3, R3, #8 
    /*0000e21c*/ STR         R3, [SP, #20] 
    /*0000e220*/ MOV         R6, R3 
    /*0000e224*/ MOV         R0, R3 
    /*0000e228*/ BL          0x000000000000E228          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000e22c*/ MOV         R0, R6 
    /*0000e230*/ MOV         R3, FP 
    /*0000e234*/ LDR         R2, [SP, #12] 
    /*0000e238*/ MOV         R1, R7 
    /*0000e23c*/ BL          0x000000000000E23C          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*0000e240*/ SUBS        R6, R0, #0 
    /*0000e244*/ BEQ         GDC_ProLDCV2Spread_xe2ec
    /*0000e248*/ MOV         R1, #18 
    /*0000e24c*/ MOV         R0, R4 
    /*0000e250*/ BL          0x000000000000E250          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000e254*/ MOVW        R3, #5296                   @ 0x14b0 
    /*0000e258*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*0000e25c*/ STR         R3, [SP] 
    /*0000e260*/ STR         R6, [SP, #4] 
    /*0000e264*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*0000e268*/ LDR         R3, [PC, #552]              @ 0x000000000000e498 
    /*0000e26c*/ MOV         R1, #37                     @ 0x25 
    /*0000e270*/ MOV         R0, #3 
    /*0000e274*/ BL          0x000000000000E274          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProLDCV2Spread_xe278:
    /*0000e278*/ LDR         R1, [SP, #16] 
    /*0000e27c*/ MOV         R0, R5 
    /*0000e280*/ BL          0x0000000000005E7C 
    GDC_ProLDCV2Spread_xe284:
    /*0000e284*/ MOV         R3, #0 
    /*0000e288*/ LDR         R0, [SP, #32] 
    /*0000e28c*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000e290*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*0000e294*/ BL          0x000000000000E294          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000e298*/ B           GDC_ProLDCV2Spread_xe1c0
    GDC_ProLDCV2Spread_xe29c:
    /*0000e29c*/ MOV         R0, R8 
    /*0000e2a0*/ STR         R3, [SP, #16] 
    /*0000e2a4*/ BL          0x0000000000005F18 
    /*0000e2a8*/ LDR         R3, [SP, #16] 
    /*0000e2ac*/ SUBS        R6, R0, #0 
    /*0000e2b0*/ BNE         GDC_ProLDCV2Spread_xe1c0
    /*0000e2b4*/ B           GDC_ProLDCV2Spread_xe168
    GDC_ProLDCV2Spread_xe2b8:
    /*0000e2b8*/ MOV         R0, R4 
    /*0000e2bc*/ MOV         R1, #18 
    /*0000e2c0*/ BL          0x000000000000E2C0          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000e2c4*/ MOVW        R3, #5274                   @ 0x149a 
    /*0000e2c8*/ STR         R6, [SP, #4] 
    /*0000e2cc*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3600] 
    /*0000e2d0*/ STR         R3, [SP] 
    /*0000e2d4*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3600] 
    /*0000e2d8*/ LDR         R3, [PC, #440]              @ 0x000000000000e498 
    /*0000e2dc*/ MOV         R1, #37                     @ 0x25 
    /*0000e2e0*/ MOV         R0, #3 
    /*0000e2e4*/ BL          0x000000000000E2E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e2e8*/ B           GDC_ProLDCV2Spread_xe1c0
    GDC_ProLDCV2Spread_xe2ec:
    /*0000e2ec*/ LDR         FP, [SP, #20] 
    /*0000e2f0*/ MOV         R2, R7 
    /*0000e2f4*/ LDR         R3, [SP, #116]              @ 0x74 
    /*0000e2f8*/ LDR         R0, [SP, #32] 
    /*0000e2fc*/ MOV         R1, FP 
    /*0000e300*/ BL          0x0000000000005FA8 
    /*0000e304*/ SUBS        R6, R0, #0 
    /*0000e308*/ BNE         GDC_ProLDCV2Spread_xe39c
    /*0000e30c*/ LDR         R3, [SP, #16] 
    /*0000e310*/ MOV         R2, #336                    @ 0x150 
    /*0000e314*/ MOV         R0, R4 
    /*0000e318*/ MOV         FP, R6 
    /*0000e31c*/ ADD         R1, R3, #344                @ 0x158 
    /*0000e320*/ BL          0x000000000000E320          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000e324*/ LDR         R1, [SP, #16] 
    /*0000e328*/ MOV         R0, R5 
    /*0000e32c*/ BL          0x0000000000005E7C 
    /*0000e330*/ LDR         R0, [R9, #748]              @ 0x2ec 
    /*0000e334*/ LDR         R3, [SP, #12] 
    /*0000e338*/ MOV         R2, R7 
    /*0000e33c*/ STR         R6, [R4, #744]              @ 0x2e8 
    /*0000e340*/ MOVW        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*0000e344*/ STR         R0, [R4, #736]              @ 0x2e0 
    /*0000e348*/ MOVT        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*0000e34c*/ STR         R8, [R4, #740]              @ 0x2e4 
    /*0000e350*/ STR         R1, [R4, #748]              @ 0x2ec 
    /*0000e354*/ MOV         R1, R4 
    /*0000e358*/ LDR         R0, [SP, #32] 
    /*0000e35c*/ BL          0x0000000000006F38 
    /*0000e360*/ SUBS        R6, R0, #0 
    /*0000e364*/ BEQ         GDC_ProLDCV2Spread_xe418
    /*0000e368*/ MOV         R1, #18 
    /*0000e36c*/ MOV         R0, R4 
    /*0000e370*/ BL          0x000000000000E370          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000e374*/ MOVW        R3, #5322                   @ 0x14ca 
    /*0000e378*/ STR         R6, [SP, #4] 
    /*0000e37c*/ MOVW        R2, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3788] 
    /*0000e380*/ STR         R3, [SP] 
    /*0000e384*/ MOVT        R2, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3788] 
    /*0000e388*/ LDR         R3, [PC, #264]              @ 0x000000000000e498 
    /*0000e38c*/ MOV         R1, #37                     @ 0x25 
    /*0000e390*/ MOV         R0, #3 
    /*0000e394*/ BL          0x000000000000E394          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e398*/ B           GDC_ProLDCV2Spread_xe284
    GDC_ProLDCV2Spread_xe39c:
    /*0000e39c*/ MOV         R0, FP 
    /*0000e3a0*/ MOV         R1, #18 
    /*0000e3a4*/ BL          0x000000000000E3A4          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000e3a8*/ LDR         R3, [SP, #16] 
    /*0000e3ac*/ MOV         R1, #18 
    /*0000e3b0*/ ADD         R0, R3, #344                @ 0x158 
    /*0000e3b4*/ BL          0x000000000000E3B4          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000e3b8*/ MOVW        R3, #5306                   @ 0x14ba 
    /*0000e3bc*/ STR         R6, [SP, #4] 
    /*0000e3c0*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x374c] 
    /*0000e3c4*/ STR         R3, [SP] 
    /*0000e3c8*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x374c] 
    /*0000e3cc*/ LDR         R3, [PC, #196]              @ 0x000000000000e498 
    /*0000e3d0*/ MOV         R1, #37                     @ 0x25 
    /*0000e3d4*/ MOV         R0, #3 
    /*0000e3d8*/ BL          0x000000000000E3D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e3dc*/ B           GDC_ProLDCV2Spread_xe278
    GDC_ProLDCV2Spread_xe3e0:
    /*0000e3e0*/ MOV         R1, #18 
    /*0000e3e4*/ MOV         R0, R4 
    /*0000e3e8*/ BL          0x000000000000E3E8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000e3ec*/ MOVW        R3, #5282                   @ 0x14a2 
    /*0000e3f0*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*0000e3f4*/ STR         R3, [SP] 
    /*0000e3f8*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*0000e3fc*/ LDR         R3, [PC, #148]              @ 0x000000000000e498 
    /*0000e400*/ MOV         R1, #37                     @ 0x25 
    /*0000e404*/ MOV         R0, #3 
    /*0000e408*/ MOVW        R6, #32781                  @ 0x800d 
    /*0000e40c*/ BL          0x000000000000E40C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e410*/ MOVT        R6, #40997                  @ 0xa025 
    /*0000e414*/ B           GDC_ProLDCV2Spread_xe284
    GDC_ProLDCV2Spread_xe418:
    /*0000e418*/ ADD         R1, SP, #28 
    /*0000e41c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000e420*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000e424*/ BL          0x000000000000E424          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000e428*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000e42c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000e430*/ ADD         R1, SP, #28 
    /*0000e434*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000e438*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000e43c*/ LDR         R2, [R3, R8, LSL #2] 
    /*0000e440*/ LDR         R3, [R2, #8] 
    /*0000e444*/ ADD         R3, R3, #1 
    /*0000e448*/ STR         R3, [R2, #8] 
    /*0000e44c*/ BL          0x000000000000E44C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000e450*/ LDR         R0, [SP, #32] 
    /*0000e454*/ BL          0x000000000000E454          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000e458*/ SUBS        R6, R0, #0 
    /*0000e45c*/ BEQ         GDC_ProLDCV2Spread_xe1cc
    /*0000e460*/ STR         R6, [SP, #4] 
    /*0000e464*/ MOVW        R3, #5334                   @ 0x14d6 
    /*0000e468*/ MOV         R1, #37                     @ 0x25 
    /*0000e46c*/ STR         R3, [SP] 
    /*0000e470*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000e474*/ LDR         R3, [PC, #28]               @ 0x000000000000e498 
    /*0000e478*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000e47c*/ MOV         R0, #3 
    /*0000e480*/ BL          0x000000000000E480          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e484*/ STR         FP, [R4, #748]              @ 0x2ec 
    /*0000e488*/ LDR         R0, [SP, #32] 
    /*0000e48c*/ STR         FP, [R9, #752]              @ 0x2f0 
    /*0000e490*/ BL          0x000000000000E490          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000e494*/ B           GDC_ProLDCV2Spread_xe1cc
    /*0000e498*/ ANDEQ       R0, R0, R8, ROR #17 
FUNC_END GDC_ProLDCV2Spread


FUNC_BEGIN GDC_ProLDCV2SpreadRotationVgs
    /*0000e49c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000e4a0*/ MOV         R7, R1 
    /*0000e4a4*/ LDR         R8, [R7, #12] 
    /*0000e4a8*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000e4ac*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000e4b0*/ MOV         R4, R0 
    /*0000e4b4*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000e4b8*/ SUB         SP, SP, #84                 @ 0x54 
    /*0000e4bc*/ ADD         FP, R4, #4096               @ 0x1000 
    /*0000e4c0*/ LDR         R5, [R1] 
    /*0000e4c4*/ CMP         R8, #63                     @ 0x3f 
    /*0000e4c8*/ MOV         SL, R2 
    /*0000e4cc*/ STR         R3, [SP, #12] 
    /*0000e4d0*/ ADD         R5, R5, #648                @ 0x288 
    /*0000e4d4*/ STR         R0, [FP, #752]              @ 0x2f0 
    /*0000e4d8*/ SUB         R9, R4, #8 
    /*0000e4dc*/ BHI         GDC_ProLDCV2SpreadRotationVgs_xe60c
    GDC_ProLDCV2SpreadRotationVgs_xe4e0:
    /*0000e4e0*/ MOV         R1, #18 
    /*0000e4e4*/ MOV         R0, R4 
    /*0000e4e8*/ MOV         R3, #1 
    /*0000e4ec*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000e4f0*/ MOV         R3, #0 
    /*0000e4f4*/ STR         R3, [SP, #76]               @ 0x4c 
    /*0000e4f8*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000e4fc*/ STR         R3, [SP, #72]               @ 0x48 
    /*0000e500*/ BL          0x000000000000E500          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000e504*/ SUBS        R6, R0, #0 
    /*0000e508*/ BEQ         GDC_ProLDCV2SpreadRotationVgs_xe548
    /*0000e50c*/ MOVW        R3, #5388                   @ 0x150c 
    /*0000e510*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000e514*/ STR         R3, [SP] 
    /*0000e518*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000e51c*/ STR         R6, [SP, #4] 
    /*0000e520*/ MOV         R1, #37                     @ 0x25 
    /*0000e524*/ LDR         R3, [PC, #904]              @ 0x000000000000e8b4 
    /*0000e528*/ MOV         R0, #3 
    /*0000e52c*/ BL          0x000000000000E52C          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProLDCV2SpreadRotationVgs_xe530:
    /*0000e530*/ MOV         R1, R9 
    /*0000e534*/ MOV         R0, R5 
    /*0000e538*/ BL          0x0000000000005E7C 
    GDC_ProLDCV2SpreadRotationVgs_xe53c:
    /*0000e53c*/ MOV         R0, R6 
    /*0000e540*/ ADD         SP, SP, #84                 @ 0x54 
    /*0000e544*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProLDCV2SpreadRotationVgs_xe548:
    /*0000e548*/ LDR         R3, [R7, #8] 
    /*0000e54c*/ ADD         IP, SP, #44                 @ 0x2c 
    /*0000e550*/ LDR         R2, [R7, #4] 
    /*0000e554*/ ADD         R0, SP, #36                 @ 0x24 
    /*0000e558*/ LDR         R1, [R7] 
    /*0000e55c*/ STR         IP, [SP] 
    /*0000e560*/ BL          0x000000000000E560          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000e564*/ SUBS        R6, R0, #0 
    /*0000e568*/ BNE         GDC_ProLDCV2SpreadRotationVgs_xe620
    /*0000e56c*/ BL          0x0000000000005D48 
    /*0000e570*/ SUBS        R3, R0, #0 
    /*0000e574*/ STR         R3, [SP, #16] 
    /*0000e578*/ BEQ         GDC_ProLDCV2SpreadRotationVgs_xe720
    /*0000e57c*/ LDR         R3, [SP, #16] 
    /*0000e580*/ MOV         R2, #776                    @ 0x308 
    /*0000e584*/ MOV         R1, R4 
    /*0000e588*/ ADD         R3, R3, #8 
    /*0000e58c*/ MOV         R6, R3 
    /*0000e590*/ MOV         R0, R3 
    /*0000e594*/ BL          0x000000000000E594          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000e598*/ MOV         R0, R6 
    /*0000e59c*/ LDR         R3, [SP, #12] 
    /*0000e5a0*/ MOV         R2, SL 
    /*0000e5a4*/ MOV         R1, R7 
    /*0000e5a8*/ STR         R6, [SP, #20] 
    /*0000e5ac*/ BL          0x000000000000E5AC          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*0000e5b0*/ SUBS        R6, R0, #0 
    /*0000e5b4*/ BEQ         GDC_ProLDCV2SpreadRotationVgs_xe654
    /*0000e5b8*/ LDR         R0, [SP, #20] 
    /*0000e5bc*/ MOV         R1, #18 
    /*0000e5c0*/ BL          0x000000000000E5C0          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000e5c4*/ MOVW        R3, #5419                   @ 0x152b 
    /*0000e5c8*/ STR         R6, [SP, #4] 
    GDC_ProLDCV2SpreadRotationVgs_xe5cc:
    /*0000e5cc*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*0000e5d0*/ STR         R3, [SP] 
    /*0000e5d4*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*0000e5d8*/ LDR         R3, [PC, #724]              @ 0x000000000000e8b4 
    /*0000e5dc*/ MOV         R1, #37                     @ 0x25 
    /*0000e5e0*/ MOV         R0, #3 
    /*0000e5e4*/ BL          0x000000000000E5E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProLDCV2SpreadRotationVgs_xe5e8:
    /*0000e5e8*/ LDR         R1, [SP, #16] 
    /*0000e5ec*/ MOV         R0, R5 
    /*0000e5f0*/ BL          0x0000000000005E7C 
    GDC_ProLDCV2SpreadRotationVgs_xe5f4:
    /*0000e5f4*/ MOV         R3, #0 
    /*0000e5f8*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000e5fc*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000e600*/ STR         R3, [FP, #752]              @ 0x2f0 
    /*0000e604*/ BL          0x000000000000E604          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000e608*/ B           GDC_ProLDCV2SpreadRotationVgs_xe530
    GDC_ProLDCV2SpreadRotationVgs_xe60c:
    /*0000e60c*/ MOV         R0, R8 
    /*0000e610*/ BL          0x0000000000005F18 
    /*0000e614*/ SUBS        R6, R0, #0 
    /*0000e618*/ BNE         GDC_ProLDCV2SpreadRotationVgs_xe530
    /*0000e61c*/ B           GDC_ProLDCV2SpreadRotationVgs_xe4e0
    GDC_ProLDCV2SpreadRotationVgs_xe620:
    /*0000e620*/ MOV         R0, R4 
    /*0000e624*/ MOV         R1, #18 
    /*0000e628*/ BL          0x000000000000E628          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000e62c*/ MOVW        R3, #5397                   @ 0x1515 
    /*0000e630*/ STR         R6, [SP, #4] 
    /*0000e634*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3600] 
    /*0000e638*/ STR         R3, [SP] 
    /*0000e63c*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3600] 
    /*0000e640*/ LDR         R3, [PC, #620]              @ 0x000000000000e8b4 
    /*0000e644*/ MOV         R1, #37                     @ 0x25 
    /*0000e648*/ MOV         R0, #3 
    /*0000e64c*/ BL          0x000000000000E64C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e650*/ B           GDC_ProLDCV2SpreadRotationVgs_xe530
    GDC_ProLDCV2SpreadRotationVgs_xe654:
    /*0000e654*/ LDR         R3, [SL, #16] 
    /*0000e658*/ MOV         R2, R7 
    /*0000e65c*/ STR         R6, [SL, #16] 
    /*0000e660*/ LDR         R1, [SP, #20] 
    /*0000e664*/ STR         R3, [SP, #24] 
    /*0000e668*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000e66c*/ LDR         R3, [SP, #124]              @ 0x7c 
    /*0000e670*/ BL          0x0000000000005FA8 
    /*0000e674*/ SUBS        R6, R0, #0 
    /*0000e678*/ BNE         GDC_ProLDCV2SpreadRotationVgs_xe6dc
    /*0000e67c*/ LDR         R3, [SP, #16] 
    /*0000e680*/ LDR         R6, [SP, #20] 
    /*0000e684*/ LDR         R2, [SP, #24] 
    /*0000e688*/ ADD         R3, R3, #344                @ 0x158 
    /*0000e68c*/ STR         R3, [SP, #28] 
    /*0000e690*/ MOV         R1, R3 
    /*0000e694*/ MOV         R0, R6 
    /*0000e698*/ STR         R2, [SL, #16] 
    /*0000e69c*/ MOV         R2, #336                    @ 0x150 
    /*0000e6a0*/ BL          0x000000000000E6A0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000e6a4*/ MOV         R0, R6 
    /*0000e6a8*/ LDR         R3, [SP, #12] 
    /*0000e6ac*/ MOV         R2, SL 
    /*0000e6b0*/ MOV         R1, R7 
    /*0000e6b4*/ STR         R6, [SP, #20] 
    /*0000e6b8*/ BL          0x000000000000E6B8          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*0000e6bc*/ SUBS        R6, R0, #0 
    /*0000e6c0*/ BEQ         GDC_ProLDCV2SpreadRotationVgs_xe758
    /*0000e6c4*/ LDR         R0, [SP, #20] 
    /*0000e6c8*/ MOV         R1, #18 
    /*0000e6cc*/ BL          0x000000000000E6CC          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000e6d0*/ STR         R6, [SP, #4] 
    /*0000e6d4*/ MOVW        R3, #5445                   @ 0x1545 
    /*0000e6d8*/ B           GDC_ProLDCV2SpreadRotationVgs_xe5cc
    GDC_ProLDCV2SpreadRotationVgs_xe6dc:
    /*0000e6dc*/ LDR         R0, [SP, #20] 
    /*0000e6e0*/ MOV         R1, #18 
    /*0000e6e4*/ BL          0x000000000000E6E4          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000e6e8*/ LDR         R3, [SP, #16] 
    /*0000e6ec*/ MOV         R1, #18 
    /*0000e6f0*/ ADD         R0, R3, #344                @ 0x158 
    /*0000e6f4*/ BL          0x000000000000E6F4          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000e6f8*/ MOVW        R3, #5432                   @ 0x1538 
    /*0000e6fc*/ STR         R6, [SP, #4] 
    /*0000e700*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x374c] 
    /*0000e704*/ STR         R3, [SP] 
    /*0000e708*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x374c] 
    /*0000e70c*/ LDR         R3, [PC, #416]              @ 0x000000000000e8b4 
    /*0000e710*/ MOV         R1, #37                     @ 0x25 
    /*0000e714*/ MOV         R0, #3 
    /*0000e718*/ BL          0x000000000000E718          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e71c*/ B           GDC_ProLDCV2SpreadRotationVgs_xe5e8
    GDC_ProLDCV2SpreadRotationVgs_xe720:
    /*0000e720*/ MOV         R1, #18 
    /*0000e724*/ MOV         R0, R4 
    /*0000e728*/ BL          0x000000000000E728          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000e72c*/ MOVW        R3, #5405                   @ 0x151d 
    /*0000e730*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*0000e734*/ STR         R3, [SP] 
    /*0000e738*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*0000e73c*/ LDR         R3, [PC, #368]              @ 0x000000000000e8b4 
    /*0000e740*/ MOV         R1, #37                     @ 0x25 
    /*0000e744*/ MOV         R0, #3 
    /*0000e748*/ MOVW        R6, #32781                  @ 0x800d 
    /*0000e74c*/ BL          0x000000000000E74C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e750*/ MOVT        R6, #40997                  @ 0xa025 
    /*0000e754*/ B           GDC_ProLDCV2SpreadRotationVgs_xe5f4
    GDC_ProLDCV2SpreadRotationVgs_xe758:
    /*0000e758*/ LDR         IP, [SP, #16] 
    /*0000e75c*/ MOV         R3, SL 
    /*0000e760*/ LDR         R0, [SL, #16] 
    /*0000e764*/ MOV         R2, R7 
    /*0000e768*/ ADD         R1, IP, #688                @ 0x2b0 
    /*0000e76c*/ ADD         LR, IP, #704                @ 0x2c0 
    /*0000e770*/ STR         R6, [R1, #-4] 
    /*0000e774*/ MOV         SL, IP 
    /*0000e778*/ STR         R0, [R1, #-8] 
    /*0000e77c*/ LDR         IP, [IP, #344]              @ 0x158 
    /*0000e780*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000e784*/ STR         IP, [SL, #688]              @ 0x2b0 
    /*0000e788*/ MOVW        IP, #0                      @ Gdc_B4VgsCallBack [R_ARM_MOVW_ABS_NC: .text+0xd670] 
    /*0000e78c*/ STR         R6, [R1, #4] 
    /*0000e790*/ MOVT        IP, #0                      @ Gdc_B4VgsCallBack [R_ARM_MOVT_ABS: .text+0xd670] 
    /*0000e794*/ LDR         R1, [SL, #348]              @ 0x15c 
    /*0000e798*/ STR         R6, [LR, #-4] 
    /*0000e79c*/ STR         R1, [LR, #-8] 
    /*0000e7a0*/ LDR         R7, [FP, #748]              @ 0x2ec 
    /*0000e7a4*/ LDR         R1, [SP, #20] 
    /*0000e7a8*/ STR         R7, [SL, #704]              @ 0x2c0 
    /*0000e7ac*/ MOV         R7, R6 
    /*0000e7b0*/ STR         R6, [LR, #4] 
    /*0000e7b4*/ STR         R6, [SL, #716]              @ 0x2cc 
    /*0000e7b8*/ STR         R8, [SL, #712]              @ 0x2c8 
    /*0000e7bc*/ STR         IP, [SL, #756]              @ 0x2f4 
    /*0000e7c0*/ BL          0x0000000000006F38 
    /*0000e7c4*/ SUBS        R6, R0, #0 
    /*0000e7c8*/ BEQ         GDC_ProLDCV2SpreadRotationVgs_xe80c
    /*0000e7cc*/ LDR         R0, [SP, #20] 
    /*0000e7d0*/ MOV         R1, #18 
    /*0000e7d4*/ BL          0x000000000000E7D4          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000e7d8*/ LDR         R0, [SP, #28] 
    /*0000e7dc*/ MOV         R1, #18 
    /*0000e7e0*/ BL          0x000000000000E7E0          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000e7e4*/ MOVW        R3, #5462                   @ 0x1556 
    /*0000e7e8*/ STR         R6, [SP, #4] 
    /*0000e7ec*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35c4] 
    /*0000e7f0*/ STR         R3, [SP] 
    /*0000e7f4*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35c4] 
    /*0000e7f8*/ LDR         R3, [PC, #180]              @ 0x000000000000e8b4 
    /*0000e7fc*/ MOV         R1, #37                     @ 0x25 
    /*0000e800*/ MOV         R0, #3 
    /*0000e804*/ BL          0x000000000000E804          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e808*/ B           GDC_ProLDCV2SpreadRotationVgs_xe5e8
    GDC_ProLDCV2SpreadRotationVgs_xe80c:
    /*0000e80c*/ ADD         R1, SP, #40                 @ 0x28 
    /*0000e810*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000e814*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000e818*/ BL          0x000000000000E818          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000e81c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000e820*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000e824*/ ADD         R1, SP, #40                 @ 0x28 
    /*0000e828*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000e82c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000e830*/ LDR         R2, [R3, R8, LSL #2] 
    /*0000e834*/ LDR         R3, [R2, #8] 
    /*0000e838*/ ADD         R3, R3, #1 
    /*0000e83c*/ STR         R3, [R2, #8] 
    /*0000e840*/ BL          0x000000000000E840          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000e844*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000e848*/ BL          0x000000000000E848          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000e84c*/ SUBS        R6, R0, #0 
    /*0000e850*/ BEQ         GDC_ProLDCV2SpreadRotationVgs_xe8a4
    /*0000e854*/ LDR         R0, [SP, #28] 
    /*0000e858*/ MOV         R1, #18 
    /*0000e85c*/ BL          0x000000000000E85C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000e860*/ STR         R6, [SP, #4] 
    /*0000e864*/ MOVW        R3, #5475                   @ 0x1563 
    /*0000e868*/ MOV         R1, #37                     @ 0x25 
    /*0000e86c*/ STR         R3, [SP] 
    /*0000e870*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000e874*/ LDR         R3, [PC, #56]               @ 0x000000000000e8b4 
    /*0000e878*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000e87c*/ MOV         R0, #3 
    /*0000e880*/ BL          0x000000000000E880          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e884*/ MOV         R0, R5 
    /*0000e888*/ LDR         R1, [SP, #16] 
    /*0000e88c*/ BL          0x0000000000005E7C 
    /*0000e890*/ STR         R7, [R4, #748]              @ 0x2ec 
    /*0000e894*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000e898*/ STR         R7, [FP, #752]              @ 0x2f0 
    /*0000e89c*/ BL          0x000000000000E89C          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000e8a0*/ B           GDC_ProLDCV2SpreadRotationVgs_xe53c
    GDC_ProLDCV2SpreadRotationVgs_xe8a4:
    /*0000e8a4*/ LDR         R1, [SP, #16] 
    /*0000e8a8*/ MOV         R0, R5 
    /*0000e8ac*/ BL          0x0000000000005E7C 
    /*0000e8b0*/ B           GDC_ProLDCV2SpreadRotationVgs_xe53c
    /*0000e8b4*/ STRDEQ      R0, [R0], -IP 
FUNC_END GDC_ProLDCV2SpreadRotationVgs


FUNC_BEGIN GDC_ProLDCV2SpreadRotationEx
    /*0000e8b8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000e8bc*/ MOV         R7, R1 
    /*0000e8c0*/ LDR         R8, [R7, #12] 
    /*0000e8c4*/ MOVW        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000e8c8*/ MOVT        R1, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000e8cc*/ MOV         R4, R0 
    /*0000e8d0*/ LDR         R0, [R0, #748]              @ 0x2ec 
    /*0000e8d4*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0000e8d8*/ ADD         R9, R4, #4096               @ 0x1000 
    /*0000e8dc*/ LDR         R5, [R1] 
    /*0000e8e0*/ CMP         R8, #63                     @ 0x3f 
    /*0000e8e4*/ STR         R3, [SP, #8] 
    /*0000e8e8*/ MOV         FP, R2 
    /*0000e8ec*/ ADD         R5, R5, #648                @ 0x288 
    /*0000e8f0*/ STR         R0, [R9, #752]              @ 0x2f0 
    /*0000e8f4*/ SUB         SL, R4, #8 
    /*0000e8f8*/ LDR         R3, [SP, #112]              @ 0x70 
    /*0000e8fc*/ BHI         GDC_ProLDCV2SpreadRotationEx_xea34
    GDC_ProLDCV2SpreadRotationEx_xe900:
    /*0000e900*/ LDR         R2, [R3, #212]              @ 0xd4 
    /*0000e904*/ MOV         R1, #18 
    /*0000e908*/ LDR         R3, [R3, #216]              @ 0xd8 
    /*0000e90c*/ MOV         R0, R4 
    /*0000e910*/ STR         R2, [SP, #60]               @ 0x3c 
    /*0000e914*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000e918*/ MOV         R3, #1 
    /*0000e91c*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000e920*/ MOV         R3, #0 
    /*0000e924*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000e928*/ BL          0x000000000000E928          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000e92c*/ SUBS        R6, R0, #0 
    /*0000e930*/ BEQ         GDC_ProLDCV2SpreadRotationEx_xe970
    /*0000e934*/ MOVW        R3, #5530                   @ 0x159a 
    /*0000e938*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000e93c*/ STR         R3, [SP] 
    /*0000e940*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000e944*/ STR         R6, [SP, #4] 
    /*0000e948*/ MOV         R1, #37                     @ 0x25 
    /*0000e94c*/ LDR         R3, [PC, #908]              @ 0x000000000000ece0 
    /*0000e950*/ MOV         R0, #3 
    /*0000e954*/ BL          0x000000000000E954          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProLDCV2SpreadRotationEx_xe958:
    /*0000e958*/ MOV         R1, SL 
    /*0000e95c*/ MOV         R0, R5 
    /*0000e960*/ BL          0x0000000000005E7C 
    GDC_ProLDCV2SpreadRotationEx_xe964:
    /*0000e964*/ MOV         R0, R6 
    /*0000e968*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0000e96c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProLDCV2SpreadRotationEx_xe970:
    /*0000e970*/ LDR         R3, [R7, #8] 
    /*0000e974*/ ADD         IP, SP, #36                 @ 0x24 
    /*0000e978*/ LDR         R2, [R7, #4] 
    /*0000e97c*/ ADD         R0, SP, #32 
    /*0000e980*/ LDR         R1, [R7] 
    /*0000e984*/ STR         IP, [SP] 
    /*0000e988*/ BL          0x000000000000E988          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000e98c*/ SUBS        R6, R0, #0 
    /*0000e990*/ BNE         GDC_ProLDCV2SpreadRotationEx_xea50
    /*0000e994*/ BL          0x0000000000005D48 
    /*0000e998*/ SUBS        R3, R0, #0 
    /*0000e99c*/ STR         R3, [SP, #12] 
    /*0000e9a0*/ BEQ         GDC_ProLDCV2SpreadRotationEx_xeb3c
    /*0000e9a4*/ LDR         R3, [SP, #12] 
    /*0000e9a8*/ MOV         R2, #776                    @ 0x308 
    /*0000e9ac*/ MOV         R1, R4 
    /*0000e9b0*/ ADD         R3, R3, #8 
    /*0000e9b4*/ MOV         R6, R3 
    /*0000e9b8*/ MOV         R0, R3 
    /*0000e9bc*/ BL          0x000000000000E9BC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000e9c0*/ MOV         R0, R6 
    /*0000e9c4*/ LDR         R3, [SP, #8] 
    /*0000e9c8*/ MOV         R2, FP 
    /*0000e9cc*/ MOV         R1, R7 
    /*0000e9d0*/ STR         R6, [SP, #16] 
    /*0000e9d4*/ BL          0x000000000000E9D4          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*0000e9d8*/ SUBS        R6, R0, #0 
    /*0000e9dc*/ BEQ         GDC_ProLDCV2SpreadRotationEx_xea84
    /*0000e9e0*/ LDR         R0, [SP, #16] 
    /*0000e9e4*/ MOV         R1, #18 
    /*0000e9e8*/ BL          0x000000000000E9E8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000e9ec*/ MOVW        R3, #5561                   @ 0x15b9 
    /*0000e9f0*/ STR         R6, [SP, #4] 
    GDC_ProLDCV2SpreadRotationEx_xe9f4:
    /*0000e9f4*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*0000e9f8*/ STR         R3, [SP] 
    /*0000e9fc*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*0000ea00*/ LDR         R3, [PC, #728]              @ 0x000000000000ece0 
    /*0000ea04*/ MOV         R1, #37                     @ 0x25 
    /*0000ea08*/ MOV         R0, #3 
    /*0000ea0c*/ BL          0x000000000000EA0C          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProLDCV2SpreadRotationEx_xea10:
    /*0000ea10*/ LDR         R1, [SP, #12] 
    /*0000ea14*/ MOV         R0, R5 
    /*0000ea18*/ BL          0x0000000000005E7C 
    GDC_ProLDCV2SpreadRotationEx_xea1c:
    /*0000ea1c*/ MOV         R3, #0 
    /*0000ea20*/ LDR         R0, [SP, #32] 
    /*0000ea24*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000ea28*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*0000ea2c*/ BL          0x000000000000EA2C          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000ea30*/ B           GDC_ProLDCV2SpreadRotationEx_xe958
    GDC_ProLDCV2SpreadRotationEx_xea34:
    /*0000ea34*/ MOV         R0, R8 
    /*0000ea38*/ STR         R3, [SP, #12] 
    /*0000ea3c*/ BL          0x0000000000005F18 
    /*0000ea40*/ LDR         R3, [SP, #12] 
    /*0000ea44*/ SUBS        R6, R0, #0 
    /*0000ea48*/ BNE         GDC_ProLDCV2SpreadRotationEx_xe958
    /*0000ea4c*/ B           GDC_ProLDCV2SpreadRotationEx_xe900
    GDC_ProLDCV2SpreadRotationEx_xea50:
    /*0000ea50*/ MOV         R0, R4 
    /*0000ea54*/ MOV         R1, #18 
    /*0000ea58*/ BL          0x000000000000EA58          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000ea5c*/ MOVW        R3, #5539                   @ 0x15a3 
    /*0000ea60*/ STR         R6, [SP, #4] 
    /*0000ea64*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3600] 
    /*0000ea68*/ STR         R3, [SP] 
    /*0000ea6c*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3600] 
    /*0000ea70*/ LDR         R3, [PC, #616]              @ 0x000000000000ece0 
    /*0000ea74*/ MOV         R1, #37                     @ 0x25 
    /*0000ea78*/ MOV         R0, #3 
    /*0000ea7c*/ BL          0x000000000000EA7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ea80*/ B           GDC_ProLDCV2SpreadRotationEx_xe958
    GDC_ProLDCV2SpreadRotationEx_xea84:
    /*0000ea84*/ LDR         R3, [SP, #116]              @ 0x74 
    /*0000ea88*/ MOV         R2, R7 
    /*0000ea8c*/ LDR         R1, [SP, #16] 
    /*0000ea90*/ LDR         R0, [SP, #32] 
    /*0000ea94*/ BL          0x0000000000005FA8 
    /*0000ea98*/ SUBS        R6, R0, #0 
    /*0000ea9c*/ BNE         GDC_ProLDCV2SpreadRotationEx_xeaf8
    /*0000eaa0*/ LDR         R3, [SP, #12] 
    /*0000eaa4*/ MOV         R2, #336                    @ 0x150 
    /*0000eaa8*/ LDR         R6, [SP, #16] 
    /*0000eaac*/ ADD         R3, R3, #344                @ 0x158 
    /*0000eab0*/ STR         R3, [SP, #20] 
    /*0000eab4*/ MOV         R1, R3 
    /*0000eab8*/ MOV         R0, R6 
    /*0000eabc*/ BL          0x000000000000EABC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000eac0*/ MOV         R0, R6 
    /*0000eac4*/ LDR         R3, [SP, #8] 
    /*0000eac8*/ MOV         R2, FP 
    /*0000eacc*/ MOV         R1, R7 
    /*0000ead0*/ STR         R6, [SP, #16] 
    /*0000ead4*/ BL          0x000000000000EAD4          @ GDC_MidProc [R_ARM_CALL: .text+0x8ad8] 
    /*0000ead8*/ SUBS        R6, R0, #0 
    /*0000eadc*/ BEQ         GDC_ProLDCV2SpreadRotationEx_xeb74
    /*0000eae0*/ LDR         R0, [SP, #16] 
    /*0000eae4*/ MOV         R1, #18 
    /*0000eae8*/ BL          0x000000000000EAE8          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000eaec*/ STR         R6, [SP, #4] 
    /*0000eaf0*/ MOVW        R3, #5583                   @ 0x15cf 
    /*0000eaf4*/ B           GDC_ProLDCV2SpreadRotationEx_xe9f4
    GDC_ProLDCV2SpreadRotationEx_xeaf8:
    /*0000eaf8*/ LDR         R0, [SP, #16] 
    /*0000eafc*/ MOV         R1, #18 
    /*0000eb00*/ BL          0x000000000000EB00          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000eb04*/ LDR         R3, [SP, #12] 
    /*0000eb08*/ MOV         R1, #18 
    /*0000eb0c*/ ADD         R0, R3, #344                @ 0x158 
    /*0000eb10*/ BL          0x000000000000EB10          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000eb14*/ MOVW        R3, #5571                   @ 0x15c3 
    /*0000eb18*/ STR         R6, [SP, #4] 
    /*0000eb1c*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x374c] 
    /*0000eb20*/ STR         R3, [SP] 
    /*0000eb24*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x374c] 
    /*0000eb28*/ LDR         R3, [PC, #432]              @ 0x000000000000ece0 
    /*0000eb2c*/ MOV         R1, #37                     @ 0x25 
    /*0000eb30*/ MOV         R0, #3 
    /*0000eb34*/ BL          0x000000000000EB34          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000eb38*/ B           GDC_ProLDCV2SpreadRotationEx_xea10
    GDC_ProLDCV2SpreadRotationEx_xeb3c:
    /*0000eb3c*/ MOV         R1, #18 
    /*0000eb40*/ MOV         R0, R4 
    /*0000eb44*/ BL          0x000000000000EB44          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000eb48*/ MOVW        R3, #5547                   @ 0x15ab 
    /*0000eb4c*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3314] 
    /*0000eb50*/ STR         R3, [SP] 
    /*0000eb54*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3314] 
    /*0000eb58*/ LDR         R3, [PC, #384]              @ 0x000000000000ece0 
    /*0000eb5c*/ MOV         R1, #37                     @ 0x25 
    /*0000eb60*/ MOV         R0, #3 
    /*0000eb64*/ MOVW        R6, #32781                  @ 0x800d 
    /*0000eb68*/ BL          0x000000000000EB68          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000eb6c*/ MOVT        R6, #40997                  @ 0xa025 
    /*0000eb70*/ B           GDC_ProLDCV2SpreadRotationEx_xea1c
    GDC_ProLDCV2SpreadRotationEx_xeb74:
    /*0000eb74*/ LDR         R1, [SP, #16] 
    /*0000eb78*/ MOV         R3, FP 
    /*0000eb7c*/ MOV         R2, R7 
    /*0000eb80*/ LDR         R0, [SP, #32] 
    /*0000eb84*/ BL          0x0000000000006F38 
    /*0000eb88*/ SUBS        R6, R0, #0 
    /*0000eb8c*/ BEQ         GDC_ProLDCV2SpreadRotationEx_xebd0
    /*0000eb90*/ MOV         R1, #18 
    /*0000eb94*/ MOV         R0, R4 
    /*0000eb98*/ BL          0x000000000000EB98          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000eb9c*/ MOV         R1, #18 
    /*0000eba0*/ ADD         R0, R4, #336                @ 0x150 
    /*0000eba4*/ BL          0x000000000000EBA4          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000eba8*/ MOVW        R3, #5593                   @ 0x15d9 
    /*0000ebac*/ STR         R6, [SP, #4] 
    /*0000ebb0*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35c4] 
    /*0000ebb4*/ STR         R3, [SP] 
    /*0000ebb8*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35c4] 
    /*0000ebbc*/ LDR         R3, [PC, #284]              @ 0x000000000000ece0 
    /*0000ebc0*/ MOV         R1, #37                     @ 0x25 
    /*0000ebc4*/ MOV         R0, #3 
    /*0000ebc8*/ BL          0x000000000000EBC8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ebcc*/ B           GDC_ProLDCV2SpreadRotationEx_xea10
    GDC_ProLDCV2SpreadRotationEx_xebd0:
    /*0000ebd0*/ MOV         R2, #336                    @ 0x150 
    /*0000ebd4*/ LDR         R1, [SP, #20] 
    /*0000ebd8*/ MOV         R0, R4 
    /*0000ebdc*/ STR         R6, [SP, #8] 
    /*0000ebe0*/ BL          0x000000000000EBE0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000ebe4*/ LDR         R1, [SP, #12] 
    /*0000ebe8*/ MOV         R0, R5 
    /*0000ebec*/ BL          0x0000000000005E7C 
    /*0000ebf0*/ LDR         R0, [R9, #748]              @ 0x2ec 
    /*0000ebf4*/ MOV         R3, FP 
    /*0000ebf8*/ STR         R6, [R4, #744]              @ 0x2e8 
    /*0000ebfc*/ MOV         R2, R7 
    /*0000ec00*/ MOVW        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*0000ec04*/ STR         R0, [R4, #736]              @ 0x2e0 
    /*0000ec08*/ MOVT        R1, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*0000ec0c*/ STR         R8, [R4, #740]              @ 0x2e4 
    /*0000ec10*/ STR         R1, [R4, #748]              @ 0x2ec 
    /*0000ec14*/ MOV         R1, R4 
    /*0000ec18*/ LDR         R0, [SP, #32] 
    /*0000ec1c*/ BL          0x00000000000060CC 
    /*0000ec20*/ SUBS        R6, R0, #0 
    /*0000ec24*/ BEQ         GDC_ProLDCV2SpreadRotationEx_xec5c
    /*0000ec28*/ MOV         R1, #18 
    /*0000ec2c*/ MOV         R0, R4 
    /*0000ec30*/ BL          0x000000000000EC30          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000ec34*/ MOVW        R3, #5609                   @ 0x15e9 
    /*0000ec38*/ STR         R6, [SP, #4] 
    /*0000ec3c*/ MOVW        R2, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3680] 
    /*0000ec40*/ STR         R3, [SP] 
    /*0000ec44*/ MOVT        R2, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3680] 
    /*0000ec48*/ LDR         R3, [PC, #144]              @ 0x000000000000ece0 
    /*0000ec4c*/ MOV         R1, #37                     @ 0x25 
    /*0000ec50*/ MOV         R0, #3 
    /*0000ec54*/ BL          0x000000000000EC54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ec58*/ B           GDC_ProLDCV2SpreadRotationEx_xea1c
    GDC_ProLDCV2SpreadRotationEx_xec5c:
    /*0000ec5c*/ ADD         R1, SP, #28 
    /*0000ec60*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000ec64*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000ec68*/ BL          0x000000000000EC68          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000ec6c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000ec70*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000ec74*/ ADD         R1, SP, #28 
    /*0000ec78*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000ec7c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000ec80*/ LDR         R2, [R3, R8, LSL #2] 
    /*0000ec84*/ LDR         R3, [R2, #8] 
    /*0000ec88*/ ADD         R3, R3, #1 
    /*0000ec8c*/ STR         R3, [R2, #8] 
    /*0000ec90*/ BL          0x000000000000EC90          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000ec94*/ LDR         R0, [SP, #32] 
    /*0000ec98*/ BL          0x000000000000EC98          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000ec9c*/ SUBS        R6, R0, #0 
    /*0000eca0*/ BEQ         GDC_ProLDCV2SpreadRotationEx_xe964
    /*0000eca4*/ STR         R6, [SP, #4] 
    /*0000eca8*/ MOVW        R3, #5621                   @ 0x15f5 
    /*0000ecac*/ MOV         R1, #37                     @ 0x25 
    /*0000ecb0*/ STR         R3, [SP] 
    /*0000ecb4*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000ecb8*/ LDR         R3, [PC, #32]               @ 0x000000000000ece0 
    /*0000ecbc*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000ecc0*/ MOV         R0, #3 
    /*0000ecc4*/ BL          0x000000000000ECC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ecc8*/ LDR         R3, [SP, #8] 
    /*0000eccc*/ LDR         R0, [SP, #32] 
    /*0000ecd0*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000ecd4*/ STR         R3, [R9, #752]              @ 0x2f0 
    /*0000ecd8*/ BL          0x000000000000ECD8          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000ecdc*/ B           GDC_ProLDCV2SpreadRotationEx_xe964
    /*0000ece0*/ ANDEQ       R0, R0, IP, LSL R9 
FUNC_END GDC_ProLDCV2SpreadRotationEx


FUNC_BEGIN GDC_ProLDCV2SpeadRotation
    /*0000ece4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000ece8*/ LDR         LR, [R2, #16] 
    /*0000ecec*/ LDR         IP, [SP, #4] 
    /*0000ecf0*/ CMP         LR, #0 
    /*0000ecf4*/ LDR         LR, [SP, #8] 
    /*0000ecf8*/ BNE         GDC_ProLDCV2SpeadRotation_xed08
    /*0000ecfc*/ STMIB       SP, {IP, LR} 
    /*0000ed00*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_ProLDCV2SpeadRotation_xed04:
    /*0000ed04*/ B           GDC_ProLDCV2SpeadRotation_xed04@ GDC_ProLDCV2SpreadRotationEx [R_ARM_JUMP24: .text+0xe8b8] 
    GDC_ProLDCV2SpeadRotation_xed08:
    /*0000ed08*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    GDC_ProLDCV2SpeadRotation_xed0c:
    /*0000ed0c*/ B           GDC_ProLDCV2SpeadRotation_xed0c@ GDC_ProLDCV2SpreadRotationVgs [R_ARM_JUMP24: .text+0xe49c] 
FUNC_END GDC_ProLDCV2SpeadRotation


FUNC_BEGIN GDC_ProcBypassTask
    /*0000ed10*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000ed14*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000ed18*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000ed1c*/ CMP         R1, #63                     @ 0x3f 
    /*0000ed20*/ LDR         R2, [R0, #748]              @ 0x2ec 
    /*0000ed24*/ MOV         R4, R0 
    /*0000ed28*/ ADD         R8, R0, #4096               @ 0x1000 
    /*0000ed2c*/ LDR         R0, [R3] 
    /*0000ed30*/ SUB         SP, SP, #60                 @ 0x3c 
    /*0000ed34*/ MOV         R7, R1 
    /*0000ed38*/ STR         R2, [R8, #752]              @ 0x2f0 
    /*0000ed3c*/ SUB         R9, R4, #8 
    /*0000ed40*/ ADD         R6, R0, #648                @ 0x288 
    /*0000ed44*/ BHI         GDC_ProcBypassTask_xee40
    GDC_ProcBypassTask_xed48:
    /*0000ed48*/ MOV         R1, #18 
    /*0000ed4c*/ MOV         R0, R4 
    /*0000ed50*/ BL          0x000000000000ED50          @ GDC_AddVb [R_ARM_CALL: .text+0x8544] 
    /*0000ed54*/ SUBS        R5, R0, #0 
    /*0000ed58*/ BEQ         GDC_ProcBypassTask_xed98
    /*0000ed5c*/ MOVW        R3, #5678                   @ 0x162e 
    /*0000ed60*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3020] 
    /*0000ed64*/ STR         R3, [SP] 
    /*0000ed68*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3020] 
    /*0000ed6c*/ STR         R5, [SP, #4] 
    /*0000ed70*/ MOV         R1, #37                     @ 0x25 
    /*0000ed74*/ LDR         R3, [PC, #396]              @ 0x000000000000ef08 
    /*0000ed78*/ MOV         R0, #3 
    /*0000ed7c*/ BL          0x000000000000ED7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_ProcBypassTask_xed80:
    /*0000ed80*/ MOV         R1, R9 
    /*0000ed84*/ MOV         R0, R6 
    /*0000ed88*/ BL          0x0000000000005E7C 
    GDC_ProcBypassTask_xed8c:
    /*0000ed8c*/ MOV         R0, R5 
    /*0000ed90*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0000ed94*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcBypassTask_xed98:
    /*0000ed98*/ LDR         R3, [R4, #760]              @ 0x2f8 
    /*0000ed9c*/ ADD         R0, SP, #20 
    /*0000eda0*/ LDR         R2, [R4, #756]              @ 0x2f4 
    /*0000eda4*/ MOV         SL, R5 
    /*0000eda8*/ LDR         R1, [R4, #752]              @ 0x2f0 
    /*0000edac*/ STR         R0, [SP] 
    /*0000edb0*/ ADD         R0, SP, #16 
    /*0000edb4*/ STR         R5, [SP, #40]               @ 0x28 
    /*0000edb8*/ STR         R5, [SP, #52]               @ 0x34 
    /*0000edbc*/ BL          0x000000000000EDBC          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0000edc0*/ SUBS        R5, R0, #0 
    /*0000edc4*/ BNE         GDC_ProcBypassTask_xee54
    /*0000edc8*/ LDR         R2, [R8, #748]              @ 0x2ec 
    /*0000edcc*/ MOVW        R3, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVW_ABS_NC: .text+0x816c] 
    /*0000edd0*/ STR         R5, [R4, #744]              @ 0x2e8 
    /*0000edd4*/ MOVT        R3, #0                      @ Gdc_B4ViCallBack [R_ARM_MOVT_ABS: .text+0x816c] 
    /*0000edd8*/ STR         R7, [R4, #740]              @ 0x2e4 
    /*0000eddc*/ MOV         R1, R4 
    /*0000ede0*/ STR         R3, [R4, #748]              @ 0x2ec 
    /*0000ede4*/ MOV         FP, R5 
    /*0000ede8*/ STR         R2, [R4, #736]              @ 0x2e0 
    /*0000edec*/ LDR         R0, [SP, #16] 
    /*0000edf0*/ BL          0x000000000000EDF0          @ GDC_AddBypassTask [R_ARM_CALL: .text+0x19a0] 
    /*0000edf4*/ SUBS        R5, R0, #0 
    /*0000edf8*/ BEQ         GDC_ProcBypassTask_xee88
    /*0000edfc*/ MOV         R1, #18 
    /*0000ee00*/ MOV         R0, R4 
    /*0000ee04*/ BL          0x000000000000EE04          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000ee08*/ STR         R5, [SP, #4] 
    /*0000ee0c*/ MOVW        R3, #5699                   @ 0x1643 
    /*0000ee10*/ MOV         R1, #37                     @ 0x25 
    /*0000ee14*/ STR         R3, [SP] 
    /*0000ee18*/ MOVW        R2, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b50] 
    /*0000ee1c*/ LDR         R3, [PC, #228]              @ 0x000000000000ef08 
    /*0000ee20*/ MOVT        R2, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b50] 
    /*0000ee24*/ MOV         R0, #3 
    /*0000ee28*/ BL          0x000000000000EE28          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ee2c*/ STR         SL, [R4, #748]              @ 0x2ec 
    /*0000ee30*/ LDR         R0, [SP, #16] 
    /*0000ee34*/ STR         SL, [R8, #752]              @ 0x2f0 
    /*0000ee38*/ BL          0x000000000000EE38          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000ee3c*/ B           GDC_ProcBypassTask_xed80
    GDC_ProcBypassTask_xee40:
    /*0000ee40*/ MOV         R0, R1 
    /*0000ee44*/ BL          0x0000000000005F18 
    /*0000ee48*/ SUBS        R5, R0, #0 
    /*0000ee4c*/ BNE         GDC_ProcBypassTask_xed80
    /*0000ee50*/ B           GDC_ProcBypassTask_xed48
    GDC_ProcBypassTask_xee54:
    /*0000ee54*/ MOV         R0, R4 
    /*0000ee58*/ MOV         R1, #18 
    /*0000ee5c*/ BL          0x000000000000EE5C          @ GDC_PutVb [R_ARM_CALL: .text+0x7e64] 
    /*0000ee60*/ MOVW        R3, #5689                   @ 0x1639 
    /*0000ee64*/ STR         R5, [SP, #4] 
    /*0000ee68*/ MOVW        R2, #0                      @ .LC97 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b18] 
    /*0000ee6c*/ STR         R3, [SP] 
    /*0000ee70*/ MOVT        R2, #0                      @ .LC97 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b18] 
    /*0000ee74*/ LDR         R3, [PC, #140]              @ 0x000000000000ef08 
    /*0000ee78*/ MOV         R1, #37                     @ 0x25 
    /*0000ee7c*/ MOV         R0, #3 
    /*0000ee80*/ BL          0x000000000000EE80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ee84*/ B           GDC_ProcBypassTask_xed80
    GDC_ProcBypassTask_xee88:
    /*0000ee88*/ ADD         R1, SP, #12 
    /*0000ee8c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000ee90*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000ee94*/ BL          0x000000000000EE94          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000ee98*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000ee9c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000eea0*/ ADD         R1, SP, #12 
    /*0000eea4*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000eea8*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000eeac*/ LDR         R2, [R3, R7, LSL #2] 
    /*0000eeb0*/ LDR         R3, [R2, #8] 
    /*0000eeb4*/ ADD         R3, R3, #1 
    /*0000eeb8*/ STR         R3, [R2, #8] 
    /*0000eebc*/ BL          0x000000000000EEBC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000eec0*/ LDR         R0, [SP, #16] 
    /*0000eec4*/ BL          0x000000000000EEC4          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*0000eec8*/ SUBS        R5, R0, #0 
    /*0000eecc*/ BEQ         GDC_ProcBypassTask_xed8c
    /*0000eed0*/ STR         R5, [SP, #4] 
    /*0000eed4*/ MOVW        R3, #5711                   @ 0x164f 
    /*0000eed8*/ MOV         R1, #37                     @ 0x25 
    /*0000eedc*/ STR         R3, [SP] 
    /*0000eee0*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3590] 
    /*0000eee4*/ LDR         R3, [PC, #28]               @ 0x000000000000ef08 
    /*0000eee8*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3590] 
    /*0000eeec*/ MOV         R0, #3 
    /*0000eef0*/ BL          0x000000000000EEF0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000eef4*/ STR         FP, [R4, #748]              @ 0x2ec 
    /*0000eef8*/ LDR         R0, [SP, #16] 
    /*0000eefc*/ STR         FP, [R8, #752]              @ 0x2f0 
    /*0000ef00*/ BL          0x000000000000EF00          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0000ef04*/ B           GDC_ProcBypassTask_xed8c
    /*0000ef08*/ ANDEQ       R0, R0, IP, LSR R9 
FUNC_END GDC_ProcBypassTask


FUNC_BEGIN GDC_GetChnOptCtx
    /*0000ef0c*/ CMP         R0, #63                     @ 0x3f 
    /*0000ef10*/ PUSH        {R4, R5, R6, LR} 
    /*0000ef14*/ MOV         R4, R0 
    /*0000ef18*/ MOV         R5, R1 
    /*0000ef1c*/ BHI         GDC_GetChnOptCtx_xef44
    GDC_GetChnOptCtx_xef20:
    /*0000ef20*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000ef24*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000ef28*/ ADD         R0, R0, R4, LSL #2 
    /*0000ef2c*/ LDR         R3, [R0, #256]              @ 0x100 
    /*0000ef30*/ CMP         R3, #0 
    /*0000ef34*/ BEQ         GDC_GetChnOptCtx_xef54
    /*0000ef38*/ STR         R3, [R5] 
    /*0000ef3c*/ MOV         R0, #0 
    /*0000ef40*/ POP         {R4, R5, R6, PC} 
    GDC_GetChnOptCtx_xef44:
    /*0000ef44*/ BL          0x0000000000005F18 
    /*0000ef48*/ CMP         R0, #0 
    /*0000ef4c*/ POPNE       {R4, R5, R6, PC} 
    /*0000ef50*/ B           GDC_GetChnOptCtx_xef20
    GDC_GetChnOptCtx_xef54:
    /*0000ef54*/ MVN         R0, #0 
    /*0000ef58*/ POP         {R4, R5, R6, PC} 
FUNC_END GDC_GetChnOptCtx


FUNC_BEGIN GDC_ProcGDCFunction
    /*0000ef5c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000ef60*/ MOVW        IP, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*0000ef64*/ SUB         SP, SP, #444                @ 0x1bc 
    /*0000ef68*/ MOVT        IP, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0000ef6c*/ MOV         R6, R0 
    /*0000ef70*/ MOV         R7, R1 
    /*0000ef74*/ MOV         R5, R2 
    /*0000ef78*/ ADD         R0, SP, #24 
    /*0000ef7c*/ MOV         R2, #416                    @ 0x1a0 
    /*0000ef80*/ MOV         R1, #0 
    /*0000ef84*/ LDR         R4, [IP] 
    /*0000ef88*/ MOV         SL, R3 
    /*0000ef8c*/ BL          0x000000000000EF8C          @ memset [R_ARM_CALL: +0x0] 
    /*0000ef90*/ CMP         R6, #0 
    /*0000ef94*/ BEQ         GDC_ProcGDCFunction_xf398
    /*0000ef98*/ CMP         R5, #0 
    /*0000ef9c*/ CMPNE       R7, #0 
    /*0000efa0*/ ADD         R4, R4, #648                @ 0x288 
    /*0000efa4*/ BEQ         GDC_ProcGDCFunction_xf0a8
    /*0000efa8*/ LDR         R8, [R7, #12] 
    /*0000efac*/ CMP         R8, #63                     @ 0x3f 
    /*0000efb0*/ BHI         GDC_ProcGDCFunction_xf0c8
    GDC_ProcGDCFunction_xefb4:
    /*0000efb4*/ MOVW        R9, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000efb8*/ MOVT        R9, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000efbc*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000efc0*/ ADD         R1, SP, #20 
    /*0000efc4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000efc8*/ BL          0x000000000000EFC8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000efcc*/ LDR         R3, [R9, R8, LSL #2] 
    /*0000efd0*/ LDR         R2, [R3] 
    /*0000efd4*/ CMP         R2, #0 
    /*0000efd8*/ BEQ         GDC_ProcGDCFunction_xf0dc
    /*0000efdc*/ LDR         R2, [R5, #32] 
    /*0000efe0*/ CMP         R2, #0 
    /*0000efe4*/ BNE         GDC_ProcGDCFunction_xf000
    /*0000efe8*/ LDR         R2, [R5, #4] 
    /*0000efec*/ CMP         R2, #1 
    /*0000eff0*/ BEQ         GDC_ProcGDCFunction_xf1a0
    GDC_ProcGDCFunction_xeff4:
    /*0000eff4*/ LDR         R2, [R5, #28] 
    /*0000eff8*/ CMP         R2, #1 
    /*0000effc*/ BEQ         GDC_ProcGDCFunction_xf1b0
    GDC_ProcGDCFunction_xf000:
    /*0000f000*/ LDR         R2, [R3, #20] 
    /*0000f004*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000f008*/ ADD         R1, SP, #20 
    /*0000f00c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000f010*/ ADD         R2, R2, #1 
    /*0000f014*/ STR         R2, [R3, #20] 
    /*0000f018*/ BL          0x000000000000F018          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000f01c*/ LDR         R3, [R5, #16] 
    /*0000f020*/ CMP         R3, #0 
    /*0000f024*/ LDR         R3, [R5, #32] 
    /*0000f028*/ LDREQ       FP, [R5, #20] 
    /*0000f02c*/ MOVNE       FP, #1 
    /*0000f030*/ SUBEQ       FP, FP, #1 
    /*0000f034*/ CLZEQ       FP, FP 
    /*0000f038*/ LSREQ       FP, FP, #5 
    /*0000f03c*/ CMP         R3, #0 
    /*0000f040*/ BNE         GDC_ProcGDCFunction_xf1fc
    /*0000f044*/ LDR         R3, [R5, #4] 
    /*0000f048*/ CMP         R3, #0 
    /*0000f04c*/ LDR         R3, [R5, #24] 
    /*0000f050*/ BEQ         GDC_ProcGDCFunction_xf11c
    /*0000f054*/ CMP         R3, #0 
    /*0000f058*/ BNE         GDC_ProcGDCFunction_xf210
    /*0000f05c*/ LDR         R3, [R5, #28] 
    /*0000f060*/ CMP         R3, #0 
    /*0000f064*/ BNE         GDC_ProcGDCFunction_xf210
    /*0000f068*/ LDR         R3, [R5, #12] 
    /*0000f06c*/ MOV         R1, R7 
    /*0000f070*/ LDR         R2, [SP, #480]              @ 0x1e0 
    /*0000f074*/ MOV         R0, R6 
    /*0000f078*/ CMP         R3, #0 
    /*0000f07c*/ ADD         R3, SP, #24 
    /*0000f080*/ STR         R3, [SP, #4] 
    /*0000f084*/ MOV         R3, SL 
    /*0000f088*/ STR         R2, [SP] 
    /*0000f08c*/ MOV         R2, R5 
    /*0000f090*/ BEQ         GDC_ProcGDCFunction_xf400
    /*0000f094*/ CMP         FP, #0 
    /*0000f098*/ BEQ         GDC_ProcGDCFunction_xf470
    /*0000f09c*/ BL          0x000000000000F09C          @ GDC_ProDISSpreadRotation [R_ARM_CALL: .text+0xaabc] 
    /*0000f0a0*/ MOV         FP, R0 
    /*0000f0a4*/ B           GDC_ProcGDCFunction_xf158
    GDC_ProcGDCFunction_xf0a8:
    /*0000f0a8*/ MOVW        FP, #32774                  @ 0x8006 
    /*0000f0ac*/ MOVT        FP, #40997                  @ 0xa025 
    GDC_ProcGDCFunction_xf0b0:
    /*0000f0b0*/ SUB         R1, R6, #8 
    /*0000f0b4*/ MOV         R0, R4 
    /*0000f0b8*/ BL          0x0000000000005E7C 
    GDC_ProcGDCFunction_xf0bc:
    /*0000f0bc*/ MOV         R0, FP 
    /*0000f0c0*/ ADD         SP, SP, #444                @ 0x1bc 
    /*0000f0c4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcGDCFunction_xf0c8:
    /*0000f0c8*/ MOV         R0, R8 
    /*0000f0cc*/ BL          0x0000000000005F18 
    /*0000f0d0*/ SUBS        FP, R0, #0 
    /*0000f0d4*/ BNE         GDC_ProcGDCFunction_xf0b0
    /*0000f0d8*/ B           GDC_ProcGDCFunction_xefb4
    GDC_ProcGDCFunction_xf0dc:
    /*0000f0dc*/ ADD         R1, SP, #20 
    /*0000f0e0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000f0e4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000f0e8*/ MOVW        FP, #32773                  @ 0x8005 
    /*0000f0ec*/ BL          0x000000000000F0EC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000f0f0*/ MOVW        R3, #5780                   @ 0x1694 
    /*0000f0f4*/ STR         R8, [SP, #4] 
    /*0000f0f8*/ MOVW        R2, #0                      @ .LC99 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b8c] 
    /*0000f0fc*/ STR         R3, [SP] 
    /*0000f100*/ MOVT        R2, #0                      @ .LC99 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b8c] 
    /*0000f104*/ LDR         R3, [PC, #916]              @ 0x000000000000f4a0 
    /*0000f108*/ MOV         R1, #37                     @ 0x25 
    /*0000f10c*/ MOV         R0, #3 
    /*0000f110*/ MOVT        FP, #40997                  @ 0xa025 
    /*0000f114*/ BL          0x000000000000F114          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f118*/ B           GDC_ProcGDCFunction_xf0b0
    GDC_ProcGDCFunction_xf11c:
    /*0000f11c*/ CMP         R3, #0 
    /*0000f120*/ BEQ         GDC_ProcGDCFunction_xf250
    /*0000f124*/ LDR         R3, [R5, #12] 
    /*0000f128*/ MOV         R2, R5 
    /*0000f12c*/ MOV         R1, R7 
    /*0000f130*/ MOV         R0, R6 
    /*0000f134*/ CMP         R3, #0 
    /*0000f138*/ LDR         R3, [SP, #480]              @ 0x1e0 
    /*0000f13c*/ STR         R3, [SP] 
    /*0000f140*/ MOV         R3, SL 
    /*0000f144*/ BEQ         GDC_ProcGDCFunction_xf3a4
    /*0000f148*/ CMP         FP, #0 
    /*0000f14c*/ BEQ         GDC_ProcGDCFunction_xf38c
    /*0000f150*/ BL          0x000000000000F150          @ GDC_ProLDCSpeadRotation [R_ARM_CALL: .text+0xc148] 
    /*0000f154*/ MOV         FP, R0 
    GDC_ProcGDCFunction_xf158:
    /*0000f158*/ ADD         R1, SP, #20 
    /*0000f15c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000f160*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000f164*/ BL          0x000000000000F164          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000f168*/ LDR         R2, [R9, R8, LSL #2] 
    /*0000f16c*/ ADD         R1, SP, #20 
    /*0000f170*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000f174*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000f178*/ LDR         R3, [R2, #20] 
    /*0000f17c*/ SUB         R3, R3, #1 
    /*0000f180*/ STR         R3, [R2, #20] 
    /*0000f184*/ BL          0x000000000000F184          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000f188*/ LDR         R0, [R9, R8, LSL #2] 
    /*0000f18c*/ ADD         R0, R0, #24 
    /*0000f190*/ BL          0x000000000000F190          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0000f194*/ MOV         R0, FP 
    /*0000f198*/ ADD         SP, SP, #444                @ 0x1bc 
    /*0000f19c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcGDCFunction_xf1a0:
    /*0000f1a0*/ LDR         R2, [SP, #480]              @ 0x1e0 
    /*0000f1a4*/ LDR         R2, [R2, #128]              @ 0x80 
    /*0000f1a8*/ CMP         R2, #2 
    /*0000f1ac*/ BNE         GDC_ProcGDCFunction_xeff4
    GDC_ProcGDCFunction_xf1b0:
    /*0000f1b0*/ LDR         R3, [R3, #4] 
    /*0000f1b4*/ CMP         R3, #0 
    /*0000f1b8*/ BNE         GDC_ProcGDCFunction_xf29c
    /*0000f1bc*/ MOVW        R3, #5791                   @ 0x169f 
    /*0000f1c0*/ MOV         R1, #37                     @ 0x25 
    /*0000f1c4*/ STR         R3, [SP] 
    /*0000f1c8*/ MOVW        R2, #0                      @ .LC100 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bc0] 
    /*0000f1cc*/ LDR         R3, [PC, #716]              @ 0x000000000000f4a0 
    /*0000f1d0*/ MOVT        R2, #0                      @ .LC100 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bc0] 
    /*0000f1d4*/ STR         R8, [SP, #4] 
    /*0000f1d8*/ MOV         R0, #3 
    /*0000f1dc*/ BL          0x000000000000F1DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f1e0*/ ADD         R1, SP, #20 
    /*0000f1e4*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000f1e8*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000f1ec*/ MOVW        FP, #32777                  @ 0x8009 
    /*0000f1f0*/ BL          0x000000000000F1F0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000f1f4*/ MOVT        FP, #40997                  @ 0xa025 
    /*0000f1f8*/ B           GDC_ProcGDCFunction_xf0b0
    GDC_ProcGDCFunction_xf1fc:
    /*0000f1fc*/ MOV         R0, R6 
    /*0000f200*/ MOV         R1, R8 
    /*0000f204*/ BL          0x000000000000F204          @ GDC_ProcBypassTask [R_ARM_CALL: .text+0xed10] 
    /*0000f208*/ MOV         FP, R0 
    /*0000f20c*/ B           GDC_ProcGDCFunction_xf158
    GDC_ProcGDCFunction_xf210:
    /*0000f210*/ LDR         R3, [R5, #12] 
    /*0000f214*/ MOV         R1, R7 
    /*0000f218*/ LDR         R2, [SP, #480]              @ 0x1e0 
    /*0000f21c*/ MOV         R0, R6 
    /*0000f220*/ CMP         R3, #0 
    /*0000f224*/ ADD         R3, SP, #24 
    /*0000f228*/ STR         R3, [SP, #4] 
    /*0000f22c*/ MOV         R3, SL 
    /*0000f230*/ STR         R2, [SP] 
    /*0000f234*/ MOV         R2, R5 
    /*0000f238*/ BEQ         GDC_ProcGDCFunction_xf32c
    /*0000f23c*/ CMP         FP, #0 
    /*0000f240*/ BEQ         GDC_ProcGDCFunction_xf374
    /*0000f244*/ BL          0x000000000000F244          @ GDC_ProcAll [R_ARM_CALL: .text+0x9478] 
    /*0000f248*/ MOV         FP, R0 
    /*0000f24c*/ B           GDC_ProcGDCFunction_xf158
    GDC_ProcGDCFunction_xf250:
    /*0000f250*/ LDR         R3, [R5, #28] 
    /*0000f254*/ CMP         R3, #0 
    /*0000f258*/ LDR         R3, [R5, #12] 
    /*0000f25c*/ BEQ         GDC_ProcGDCFunction_xf340
    /*0000f260*/ LDR         R2, [SP, #480]              @ 0x1e0 
    /*0000f264*/ CMP         R3, #0 
    /*0000f268*/ MOV         R1, R7 
    /*0000f26c*/ ADD         R3, SP, #24 
    /*0000f270*/ MOV         R0, R6 
    /*0000f274*/ STR         R3, [SP, #4] 
    /*0000f278*/ STR         R2, [SP] 
    /*0000f27c*/ MOV         R3, SL 
    /*0000f280*/ MOV         R2, R5 
    /*0000f284*/ BEQ         GDC_ProcGDCFunction_xf3ec
    /*0000f288*/ CMP         FP, #0 
    /*0000f28c*/ BEQ         GDC_ProcGDCFunction_xf47c
    /*0000f290*/ BL          0x000000000000F290          @ GDC_ProLDCV2SpeadRotation [R_ARM_CALL: .text+0xece4] 
    /*0000f294*/ MOV         FP, R0 
    /*0000f298*/ B           GDC_ProcGDCFunction_xf158
    GDC_ProcGDCFunction_xf29c:
    /*0000f29c*/ ADD         FP, R9, R8, LSL #2 
    /*0000f2a0*/ MOV         R0, #57                     @ 0x39 
    /*0000f2a4*/ LDR         R3, [FP, #256]              @ 0x100 
    /*0000f2a8*/ ADD         R2, R3, #1360               @ 0x550 
    /*0000f2ac*/ LDR         R1, [R3, #1360]             @ 0x550 
    /*0000f2b0*/ LDRD        R2, [R2, #-8] 
    /*0000f2b4*/ STR         R1, [SP, #128]              @ 0x80 
    /*0000f2b8*/ STRD        R2, [SP, #24] 
    /*0000f2bc*/ BL          0x000000000000F2BC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000f2c0*/ CMP         R0, #0 
    /*0000f2c4*/ BEQ         GDC_ProcGDCFunction_xf3b0
    /*0000f2c8*/ LDR         R3, [R0, #28] 
    /*0000f2cc*/ SUBS        IP, R3, #0 
    /*0000f2d0*/ BEQ         GDC_ProcGDCFunction_xf3b0
    /*0000f2d4*/ LDR         R3, [FP, #256]              @ 0x100 
    /*0000f2d8*/ ADD         R1, SP, #32 
    /*0000f2dc*/ STR         SL, [SP, #4] 
    /*0000f2e0*/ MOV         R0, R8 
    /*0000f2e4*/ STR         R1, [SP, #8] 
    /*0000f2e8*/ ADD         R3, R3, #752                @ 0x2f0 
    /*0000f2ec*/ LDR         R2, [SP, #480]              @ 0x1e0 
    /*0000f2f0*/ MOV         R1, R6 
    /*0000f2f4*/ STR         R5, [SP] 
    /*0000f2f8*/ BLX         IP 
    /*0000f2fc*/ CMP         R0, #0 
    /*0000f300*/ BNE         GDC_ProcGDCFunction_xf440
    /*0000f304*/ LDR         IP, [FP, #256]              @ 0x100 
    /*0000f308*/ ADD         R2, SL, #672                @ 0x2a0 
    /*0000f30c*/ ADD         R3, IP, #744                @ 0x2e8 
    /*0000f310*/ ADD         IP, IP, #816                @ 0x330 
    GDC_ProcGDCFunction_xf314:
    /*0000f314*/ LDRD        R0, [R3, #8]! 
    /*0000f318*/ CMP         IP, R3 
    /*0000f31c*/ STRD        R0, [R2, #8]! 
    /*0000f320*/ BNE         GDC_ProcGDCFunction_xf314
    /*0000f324*/ LDR         R3, [R9, R8, LSL #2] 
    /*0000f328*/ B           GDC_ProcGDCFunction_xf000
    GDC_ProcGDCFunction_xf32c:
    /*0000f32c*/ CMP         FP, #0 
    /*0000f330*/ BEQ         GDC_ProcGDCFunction_xf380
    /*0000f334*/ BL          0x000000000000F334          @ GDC_ProcDISLDCRotation [R_ARM_CALL: .text+0x9f70] 
    /*0000f338*/ MOV         FP, R0 
    /*0000f33c*/ B           GDC_ProcGDCFunction_xf158
    GDC_ProcGDCFunction_xf340:
    /*0000f340*/ CMP         R3, #0 
    /*0000f344*/ BEQ         GDC_ProcGDCFunction_xf414
    /*0000f348*/ LDR         R3, [SP, #480]              @ 0x1e0 
    /*0000f34c*/ CMP         FP, #0 
    /*0000f350*/ MOV         R2, R5 
    /*0000f354*/ MOV         R1, R7 
    /*0000f358*/ MOV         R0, R6 
    /*0000f35c*/ STR         R3, [SP] 
    /*0000f360*/ MOV         R3, SL 
    /*0000f364*/ BEQ         GDC_ProcGDCFunction_xf488
    /*0000f368*/ BL          0x000000000000F368          @ GDC_ProSpreadRotation [R_ARM_CALL: .text+0xd028] 
    /*0000f36c*/ MOV         FP, R0 
    /*0000f370*/ B           GDC_ProcGDCFunction_xf158
    GDC_ProcGDCFunction_xf374:
    /*0000f374*/ BL          0x000000000000F374          @ GDC_ProcDISLDCSpread [R_ARM_CALL: .text+0x94ac] 
    /*0000f378*/ MOV         FP, R0 
    /*0000f37c*/ B           GDC_ProcGDCFunction_xf158
    GDC_ProcGDCFunction_xf380:
    /*0000f380*/ BL          0x000000000000F380          @ GDC_ProcDISLDC [R_ARM_CALL: .text+0x9fa4] 
    /*0000f384*/ MOV         FP, R0 
    /*0000f388*/ B           GDC_ProcGDCFunction_xf158
    GDC_ProcGDCFunction_xf38c:
    /*0000f38c*/ BL          0x000000000000F38C          @ GDC_ProLDCSpead [R_ARM_CALL: .text+0xc170] 
    /*0000f390*/ MOV         FP, R0 
    /*0000f394*/ B           GDC_ProcGDCFunction_xf158
    GDC_ProcGDCFunction_xf398:
    /*0000f398*/ MOVW        FP, #32774                  @ 0x8006 
    /*0000f39c*/ MOVT        FP, #40997                  @ 0xa025 
    /*0000f3a0*/ B           GDC_ProcGDCFunction_xf0bc
    GDC_ProcGDCFunction_xf3a4:
    /*0000f3a4*/ BL          0x000000000000F3A4          @ GDC_ProOneModeOfLDCRotation [R_ARM_CALL: .text+0xc944] 
    /*0000f3a8*/ MOV         FP, R0 
    /*0000f3ac*/ B           GDC_ProcGDCFunction_xf158
    GDC_ProcGDCFunction_xf3b0:
    /*0000f3b0*/ MOVW        R3, #5812                   @ 0x16b4 
    /*0000f3b4*/ STR         R3, [SP] 
    /*0000f3b8*/ LDR         R3, [PC, #224]              @ 0x000000000000f4a0 
    /*0000f3bc*/ MOVW        R2, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c04] 
    /*0000f3c0*/ MOVT        R2, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c04] 
    /*0000f3c4*/ MOV         R1, #37                     @ 0x25 
    /*0000f3c8*/ MOV         R0, #4 
    /*0000f3cc*/ MOVW        FP, #32774                  @ 0x8006 
    GDC_ProcGDCFunction_xf3d0:
    /*0000f3d0*/ BL          0x000000000000F3D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f3d4*/ ADD         R1, SP, #20 
    /*0000f3d8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000f3dc*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000f3e0*/ BL          0x000000000000F3E0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000f3e4*/ MOVT        FP, #40997                  @ 0xa025 
    /*0000f3e8*/ B           GDC_ProcGDCFunction_xf0b0
    GDC_ProcGDCFunction_xf3ec:
    /*0000f3ec*/ CMP         FP, #0 
    /*0000f3f0*/ BEQ         GDC_ProcGDCFunction_xf464
    /*0000f3f4*/ BL          0x000000000000F3F4          @ GDC_ProLDCV2Rotation [R_ARM_CALL: .text+0xe0f4] 
    /*0000f3f8*/ MOV         FP, R0 
    /*0000f3fc*/ B           GDC_ProcGDCFunction_xf158
    GDC_ProcGDCFunction_xf400:
    /*0000f400*/ CMP         FP, #0 
    /*0000f404*/ BEQ         GDC_ProcGDCFunction_xf494
    /*0000f408*/ BL          0x000000000000F408          @ GDC_ProDISRotation [R_ARM_CALL: .text+0xb7bc] 
    /*0000f40c*/ MOV         FP, R0 
    /*0000f410*/ B           GDC_ProcGDCFunction_xf158
    GDC_ProcGDCFunction_xf414:
    /*0000f414*/ CMP         FP, #0 
    /*0000f418*/ BEQ         GDC_ProcGDCFunction_xf158
    /*0000f41c*/ LDR         R3, [SP, #480]              @ 0x1e0 
    /*0000f420*/ MOV         R2, R5 
    /*0000f424*/ MOV         R1, R7 
    /*0000f428*/ MOV         R0, R6 
    /*0000f42c*/ STR         R3, [SP] 
    /*0000f430*/ MOV         R3, SL 
    /*0000f434*/ BL          0x000000000000F434          @ GDC_ProRotation [R_ARM_CALL: .text+0xdb2c] 
    /*0000f438*/ MOV         FP, R0 
    /*0000f43c*/ B           GDC_ProcGDCFunction_xf158
    GDC_ProcGDCFunction_xf440:
    /*0000f440*/ MOV         R3, #5824                   @ 0x16c0 
    /*0000f444*/ MOVW        R2, #0                      @ .LC102 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c74] 
    /*0000f448*/ STR         R3, [SP] 
    /*0000f44c*/ MOVT        R2, #0                      @ .LC102 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c74] 
    /*0000f450*/ LDR         R3, [PC, #72]               @ 0x000000000000f4a0 
    /*0000f454*/ MOV         R1, #37                     @ 0x25 
    /*0000f458*/ MOV         R0, #3 
    /*0000f45c*/ MOVW        FP, #32771                  @ 0x8003 
    /*0000f460*/ B           GDC_ProcGDCFunction_xf3d0
    GDC_ProcGDCFunction_xf464:
    /*0000f464*/ BL          0x000000000000F464          @ GDC_ProLDCV2 [R_ARM_CALL: .text+0xdb44] 
    /*0000f468*/ MOV         FP, R0 
    /*0000f46c*/ B           GDC_ProcGDCFunction_xf158
    GDC_ProcGDCFunction_xf470:
    /*0000f470*/ BL          0x000000000000F470          @ GDC_ProDISSpread [R_ARM_CALL: .text+0xaae8] 
    /*0000f474*/ MOV         FP, R0 
    /*0000f478*/ B           GDC_ProcGDCFunction_xf158
    GDC_ProcGDCFunction_xf47c:
    /*0000f47c*/ BL          0x000000000000F47C          @ GDC_ProLDCV2Spread [R_ARM_CALL: .text+0xe120] 
    /*0000f480*/ MOV         FP, R0 
    /*0000f484*/ B           GDC_ProcGDCFunction_xf158
    GDC_ProcGDCFunction_xf488:
    /*0000f488*/ BL          0x000000000000F488          @ GDC_ProSpread [R_ARM_CALL: .text+0xd050] 
    /*0000f48c*/ MOV         FP, R0 
    /*0000f490*/ B           GDC_ProcGDCFunction_xf158
    GDC_ProcGDCFunction_xf494:
    /*0000f494*/ BL          0x000000000000F494          @ GDC_ProDIS [R_ARM_CALL: .text+0xb804] 
    /*0000f498*/ MOV         FP, R0 
    /*0000f49c*/ B           GDC_ProcGDCFunction_xf158
    /*0000f4a0*/ ANDEQ       R0, R0, R0, ASR R9 
FUNC_END GDC_ProcGDCFunction


FUNC_BEGIN Gdc_GetChnId
    /*0000f4a4*/ LDR         R1, [PC, #96]               @ 0x000000000000f50c 
    /*0000f4a8*/ MOV         R3, #0 
    /*0000f4ac*/ B           Gdc_GetChnId_xf4bc
    Gdc_GetChnId_xf4b0:
    /*0000f4b0*/ ADD         R3, R3, #1 
    /*0000f4b4*/ CMP         R3, #64                     @ 0x40 
    /*0000f4b8*/ BEQ         Gdc_GetChnId_xf4d4
    Gdc_GetChnId_xf4bc:
    /*0000f4bc*/ LDR         R2, [R1, #4]! 
    /*0000f4c0*/ CMP         R2, #0 
    /*0000f4c4*/ BNE         Gdc_GetChnId_xf4b0
    /*0000f4c8*/ STR         R3, [R0] 
    /*0000f4cc*/ MOV         R0, R2 
    /*0000f4d0*/ BX          LR 
    Gdc_GetChnId_xf4d4:
    /*0000f4d4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000f4d8*/ SUB         SP, SP, #12 
    /*0000f4dc*/ MOVW        R3, #6792                   @ 0x1a88 
    /*0000f4e0*/ MOV         R1, #37                     @ 0x25 
    /*0000f4e4*/ STR         R3, [SP] 
    /*0000f4e8*/ MOVW        R2, #0                      @ .LC103 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3cb0] 
    /*0000f4ec*/ LDR         R3, [PC, #28]               @ 0x000000000000f510 
    /*0000f4f0*/ MOVT        R2, #0                      @ .LC103 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3cb0] 
    /*0000f4f4*/ MOV         R0, #3 
    /*0000f4f8*/ BL          0x000000000000F4F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f4fc*/ MOVW        R0, #32786                  @ 0x8012 
    /*0000f500*/ MOVT        R0, #40997                  @ 0xa025 
    /*0000f504*/ ADD         SP, SP, #12 
    /*0000f508*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000f50c*/ ANDEQ       R0, R0, R4, LSR #10 
    /*0000f510*/ ANDEQ       R0, R0, R4, ROR #18 
FUNC_END Gdc_GetChnId


FUNC_BEGIN Gdc_MotionAlgInit
    /*0000f514*/ PUSH        {R4, R5, R6, LR} 
    /*0000f518*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000f51c*/ SUB         SP, SP, #24 
    /*0000f520*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000f524*/ ADD         IP, R4, R0, LSL #2 
    /*0000f528*/ ADD         R3, SP, #8 
    /*0000f52c*/ MOV         R5, R0 
    /*0000f530*/ MOV         R0, #0 
    /*0000f534*/ STM         R3, {R1, R2} 
    /*0000f538*/ LDR         R1, [IP, #256]              @ 0x100 
    /*0000f53c*/ STR         R0, [SP, #20] 
    /*0000f540*/ ADD         R0, R1, #1344               @ 0x540 
    /*0000f544*/ ADD         R1, R1, #1360               @ 0x550 
    /*0000f548*/ ADD         R0, R0, #8 
    /*0000f54c*/ BL          0x000000000000F54C          @ GDC_DRV_MallocAngleVelAddr [R_ARM_CALL: .text+0x171f4] 
    /*0000f550*/ SUBS        R6, R0, #0 
    /*0000f554*/ BNE         Gdc_MotionAlgInit_xf5c4
    /*0000f558*/ MOV         R0, #57                     @ 0x39 
    /*0000f55c*/ BL          0x000000000000F55C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000f560*/ CMP         R0, #0 
    /*0000f564*/ BEQ         Gdc_MotionAlgInit_xf620
    /*0000f568*/ LDR         R3, [R0] 
    /*0000f56c*/ CMP         R3, #0 
    /*0000f570*/ BEQ         Gdc_MotionAlgInit_xf620
    /*0000f574*/ LDR         R2, [SP, #12] 
    /*0000f578*/ MOV         R0, R5 
    /*0000f57c*/ LDR         R1, [SP, #8] 
    /*0000f580*/ BLX         R3 
    /*0000f584*/ SUBS        R6, R0, #0 
    /*0000f588*/ BNE         Gdc_MotionAlgInit_xf5f4
    /*0000f58c*/ ADD         R1, SP, #20 
    /*0000f590*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000f594*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000f598*/ BL          0x000000000000F598          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000f59c*/ LDR         R3, [R4, R5, LSL #2] 
    /*0000f5a0*/ MOV         R2, #1 
    /*0000f5a4*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000f5a8*/ ADD         R1, SP, #20 
    /*0000f5ac*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000f5b0*/ STR         R2, [R3, #4] 
    /*0000f5b4*/ BL          0x000000000000F5B4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    Gdc_MotionAlgInit_xf5b8:
    /*0000f5b8*/ MOV         R0, R6 
    /*0000f5bc*/ ADD         SP, SP, #24 
    /*0000f5c0*/ POP         {R4, R5, R6, PC} 
    Gdc_MotionAlgInit_xf5c4:
    /*0000f5c4*/ STR         R6, [SP, #4] 
    /*0000f5c8*/ MOVW        R3, #6807                   @ 0x1a97 
    /*0000f5cc*/ MOV         R1, #37                     @ 0x25 
    /*0000f5d0*/ STR         R3, [SP] 
    /*0000f5d4*/ MOVW        R2, #0                      @ .LC104 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ce4] 
    /*0000f5d8*/ LDR         R3, [PC, #108]              @ 0x000000000000f64c 
    /*0000f5dc*/ MOVT        R2, #0                      @ .LC104 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ce4] 
    /*0000f5e0*/ MOV         R0, #3 
    /*0000f5e4*/ BL          0x000000000000F5E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f5e8*/ MOV         R0, R6 
    /*0000f5ec*/ ADD         SP, SP, #24 
    /*0000f5f0*/ POP         {R4, R5, R6, PC} 
    Gdc_MotionAlgInit_xf5f4:
    /*0000f5f4*/ MOVW        R3, #6823                   @ 0x1aa7 
    /*0000f5f8*/ MOVW        R2, #0                      @ .LC105 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d24] 
    /*0000f5fc*/ STR         R3, [SP] 
    /*0000f600*/ MOVT        R2, #0                      @ .LC105 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d24] 
    /*0000f604*/ LDR         R3, [PC, #64]               @ 0x000000000000f64c 
    /*0000f608*/ MOV         R1, #37                     @ 0x25 
    /*0000f60c*/ MOV         R0, #3 
    /*0000f610*/ MOVW        R6, #32771                  @ 0x8003 
    /*0000f614*/ BL          0x000000000000F614          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f618*/ MOVT        R6, #40997                  @ 0xa025 
    /*0000f61c*/ B           Gdc_MotionAlgInit_xf5b8
    Gdc_MotionAlgInit_xf620:
    /*0000f620*/ MOVW        R3, #6815                   @ 0x1a9f 
    /*0000f624*/ MOVW        R2, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c04] 
    /*0000f628*/ STR         R3, [SP] 
    /*0000f62c*/ MOVT        R2, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c04] 
    /*0000f630*/ LDR         R3, [PC, #20]               @ 0x000000000000f64c 
    /*0000f634*/ MOV         R1, #37                     @ 0x25 
    /*0000f638*/ MOV         R0, #4 
    /*0000f63c*/ MOVW        R6, #32774                  @ 0x8006 
    /*0000f640*/ BL          0x000000000000F640          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f644*/ MOVT        R6, #40997                  @ 0xa025 
    /*0000f648*/ B           Gdc_MotionAlgInit_xf5b8
    /*0000f64c*/ ANDEQ       R0, R0, R4, ROR R9 
FUNC_END Gdc_MotionAlgInit


FUNC_BEGIN Gdc_MotionAlgDeInit
    /*0000f650*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000f654*/ SUB         SP, SP, #20 
    /*0000f658*/ ADD         R5, SP, #16 
    /*0000f65c*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000f660*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000f664*/ MOV         R6, R0 
    /*0000f668*/ MOV         R7, #0 
    /*0000f66c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000f670*/ STR         R7, [R5, #-4]! 
    /*0000f674*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000f678*/ MOV         R1, R5 
    /*0000f67c*/ BL          0x000000000000F67C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000f680*/ LDR         R3, [R4, R6, LSL #2] 
    /*0000f684*/ ADD         R4, R4, R6, LSL #2 
    /*0000f688*/ MOV         R1, R5 
    /*0000f68c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000f690*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000f694*/ STR         R7, [R3, #4] 
    /*0000f698*/ BL          0x000000000000F698          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000f69c*/ LDR         R3, [R4, #256]              @ 0x100 
    /*0000f6a0*/ LDR         R2, [R3, #1360]!            @ 0x550 
    /*0000f6a4*/ LDRD        R0, [R3, #-8] 
    /*0000f6a8*/ BL          0x000000000000F6A8          @ GDC_DRV_FreeAngleVelAddr [R_ARM_CALL: .text+0x17270] 
    /*0000f6ac*/ MOV         R0, #57                     @ 0x39 
    /*0000f6b0*/ BL          0x000000000000F6B0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000f6b4*/ CMP         R0, #0 
    /*0000f6b8*/ BEQ         Gdc_MotionAlgDeInit_xf6e0
    /*0000f6bc*/ LDR         R3, [R0, #4] 
    /*0000f6c0*/ CMP         R3, R7 
    /*0000f6c4*/ BEQ         Gdc_MotionAlgDeInit_xf6e0
    /*0000f6c8*/ MOV         R0, R6 
    /*0000f6cc*/ BLX         R3 
    /*0000f6d0*/ CMP         R0, #0 
    /*0000f6d4*/ BNE         Gdc_MotionAlgDeInit_xf70c
    Gdc_MotionAlgDeInit_xf6d8:
    /*0000f6d8*/ ADD         SP, SP, #20 
    /*0000f6dc*/ POP         {R4, R5, R6, R7, PC} 
    Gdc_MotionAlgDeInit_xf6e0:
    /*0000f6e0*/ MOVW        R3, #6850                   @ 0x1ac2 
    /*0000f6e4*/ MOVW        R2, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c04] 
    /*0000f6e8*/ STR         R3, [SP] 
    /*0000f6ec*/ MOVT        R2, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c04] 
    /*0000f6f0*/ LDR         R3, [PC, #64]               @ 0x000000000000f738 
    /*0000f6f4*/ MOV         R1, #37                     @ 0x25 
    /*0000f6f8*/ MOV         R0, #4 
    /*0000f6fc*/ BL          0x000000000000F6FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f700*/ MOVW        R0, #32774                  @ 0x8006 
    /*0000f704*/ MOVT        R0, #40997                  @ 0xa025 
    /*0000f708*/ B           Gdc_MotionAlgDeInit_xf6d8
    Gdc_MotionAlgDeInit_xf70c:
    /*0000f70c*/ MOVW        R3, #6858                   @ 0x1aca 
    /*0000f710*/ MOVW        R2, #0                      @ .LC106 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d58] 
    /*0000f714*/ STR         R3, [SP] 
    /*0000f718*/ MOVT        R2, #0                      @ .LC106 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d58] 
    /*0000f71c*/ LDR         R3, [PC, #20]               @ 0x000000000000f738 
    /*0000f720*/ MOV         R1, #37                     @ 0x25 
    /*0000f724*/ MOV         R0, #3 
    /*0000f728*/ BL          0x000000000000F728          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f72c*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000f730*/ MOVT        R0, #40997                  @ 0xa025 
    /*0000f734*/ B           Gdc_MotionAlgDeInit_xf6d8
    /*0000f738*/ ANDEQ       R0, R0, R8, LSL #19 
FUNC_END Gdc_MotionAlgDeInit


FUNC_BEGIN Gdc_CreatChn
    /*0000f73c*/ PUSH        {R4, R5, R6, LR} 
    /*0000f740*/ SUB         SP, SP, #16 
    /*0000f744*/ MOV         R5, R0 
    /*0000f748*/ BL          0x000000000000F748          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*0000f74c*/ SUBS        R4, R0, #0 
    /*0000f750*/ BEQ         Gdc_CreatChn_xf760
    Gdc_CreatChn_xf754:
    /*0000f754*/ MOV         R0, R4 
    /*0000f758*/ ADD         SP, SP, #16 
    /*0000f75c*/ POP         {R4, R5, R6, PC} 
    Gdc_CreatChn_xf760:
    /*0000f760*/ MOVW        R0, #1368                   @ 0x558 
    /*0000f764*/ BL          0x000000000000F764          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*0000f768*/ SUBS        R6, R0, #0 
    /*0000f76c*/ BEQ         Gdc_CreatChn_xf88c
    /*0000f770*/ MOVW        R2, #1368                   @ 0x558 
    /*0000f774*/ MOV         R1, R4 
    /*0000f778*/ BL          0x000000000000F778          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000f77c*/ ADD         R1, SP, #12 
    /*0000f780*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000f784*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000f788*/ BL          0x000000000000F788          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000f78c*/ LDR         R1, [PC, #292]              @ 0x000000000000f8b8 
    /*0000f790*/ MOV         R3, R4 
    /*0000f794*/ B           Gdc_CreatChn_xf7a4
    Gdc_CreatChn_xf798:
    /*0000f798*/ ADD         R3, R3, #1 
    /*0000f79c*/ CMP         R3, #64                     @ 0x40 
    /*0000f7a0*/ BEQ         Gdc_CreatChn_xf820
    Gdc_CreatChn_xf7a4:
    /*0000f7a4*/ LDR         R2, [R1, #4]! 
    /*0000f7a8*/ CMP         R2, #0 
    /*0000f7ac*/ BNE         Gdc_CreatChn_xf798
    /*0000f7b0*/ MOVW        IP, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000f7b4*/ MOVT        IP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000f7b8*/ ADD         R0, IP, R3, LSL #2 
    /*0000f7bc*/ STR         R3, [R5] 
    /*0000f7c0*/ MOV         LR, #1 
    /*0000f7c4*/ ADD         R1, SP, #12 
    /*0000f7c8*/ STR         R6, [R0, #256]              @ 0x100 
    /*0000f7cc*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000f7d0*/ LDR         R3, [R5] 
    /*0000f7d4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000f7d8*/ LDR         R3, [IP, R3, LSL #2] 
    /*0000f7dc*/ STR         R2, [R3, #8] 
    /*0000f7e0*/ LDR         R3, [R5] 
    /*0000f7e4*/ LDR         R3, [IP, R3, LSL #2] 
    /*0000f7e8*/ STR         R2, [R3, #12] 
    /*0000f7ec*/ LDR         R3, [R5] 
    /*0000f7f0*/ LDR         R3, [IP, R3, LSL #2] 
    /*0000f7f4*/ STR         R2, [R3, #16] 
    /*0000f7f8*/ LDR         R3, [R5] 
    /*0000f7fc*/ LDR         R3, [IP, R3, LSL #2] 
    /*0000f800*/ STR         R2, [R3, #20] 
    /*0000f804*/ LDR         R3, [R5] 
    /*0000f808*/ LDR         R3, [IP, R3, LSL #2] 
    /*0000f80c*/ STR         LR, [R3] 
    /*0000f810*/ BL          0x000000000000F810          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000f814*/ MOV         R0, R4 
    /*0000f818*/ ADD         SP, SP, #16 
    /*0000f81c*/ POP         {R4, R5, R6, PC} 
    Gdc_CreatChn_xf820:
    /*0000f820*/ MOVW        R3, #6792                   @ 0x1a88 
    /*0000f824*/ MOV         R1, #37                     @ 0x25 
    /*0000f828*/ STR         R3, [SP] 
    /*0000f82c*/ MOVW        R2, #0                      @ .LC103 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3cb0] 
    /*0000f830*/ LDR         R3, [PC, #132]              @ 0x000000000000f8bc 
    /*0000f834*/ MOVT        R2, #0                      @ .LC103 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3cb0] 
    /*0000f838*/ MOV         R0, #3 
    /*0000f83c*/ MOVW        R4, #32786                  @ 0x8012 
    /*0000f840*/ BL          0x000000000000F840          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f844*/ MOVT        R4, #40997                  @ 0xa025 
    /*0000f848*/ MOVW        R3, #6890                   @ 0x1aea 
    /*0000f84c*/ MOV         R1, #37                     @ 0x25 
    /*0000f850*/ STM         SP, {R3, R4} 
    /*0000f854*/ MOVW        R2, #0                      @ .LC108 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3dc8] 
    /*0000f858*/ LDR         R3, [PC, #96]               @ 0x000000000000f8c0 
    /*0000f85c*/ MOVT        R2, #0                      @ .LC108 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3dc8] 
    /*0000f860*/ MOV         R0, #3 
    /*0000f864*/ BL          0x000000000000F864          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f868*/ ADD         R1, SP, #12 
    /*0000f86c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000f870*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000f874*/ BL          0x000000000000F874          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000f878*/ MOV         R0, R6 
    /*0000f87c*/ BL          0x000000000000F87C          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0000f880*/ MOV         R0, R4 
    /*0000f884*/ ADD         SP, SP, #16 
    /*0000f888*/ POP         {R4, R5, R6, PC} 
    Gdc_CreatChn_xf88c:
    /*0000f88c*/ MOVW        R3, #6877                   @ 0x1add 
    /*0000f890*/ MOVW        R2, #0                      @ .LC107 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d8c] 
    /*0000f894*/ STR         R3, [SP] 
    /*0000f898*/ MOVT        R2, #0                      @ .LC107 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d8c] 
    /*0000f89c*/ LDR         R3, [PC, #28]               @ 0x000000000000f8c0 
    /*0000f8a0*/ MOV         R1, #37                     @ 0x25 
    /*0000f8a4*/ MOV         R0, #3 
    /*0000f8a8*/ MOVW        R4, #32781                  @ 0x800d 
    /*0000f8ac*/ BL          0x000000000000F8AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f8b0*/ MOVT        R4, #40997                  @ 0xa025 
    /*0000f8b4*/ B           Gdc_CreatChn_xf754
    /*0000f8b8*/ ANDEQ       R0, R0, R4, LSR #10 
    /*0000f8bc*/ ANDEQ       R0, R0, R4, ROR #18 
    /*0000f8c0*/ MULEQ       R0, IP, R9 
FUNC_END Gdc_CreatChn


FUNC_BEGIN Gdc_DestroyChn
    /*0000f8c4*/ PUSH        {R4, R5, R6, LR} 
    /*0000f8c8*/ CMP         R0, #63                     @ 0x3f 
    /*0000f8cc*/ SUB         SP, SP, #16 
    /*0000f8d0*/ STR         R0, [SP, #4] 
    /*0000f8d4*/ BHI         Gdc_DestroyChn_xf9e4
    Gdc_DestroyChn_xf8d8:
    /*0000f8d8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000f8dc*/ ADD         R1, SP, #12 
    /*0000f8e0*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000f8e4*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000f8e8*/ BL          0x000000000000F8E8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000f8ec*/ LDR         R3, [SP, #4] 
    /*0000f8f0*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000f8f4*/ ADD         R2, R4, R3, LSL #2 
    /*0000f8f8*/ LDR         R2, [R2, #256]              @ 0x100 
    /*0000f8fc*/ CMP         R2, #0 
    /*0000f900*/ BEQ         Gdc_DestroyChn_xfa14
    /*0000f904*/ LDR         R3, [R4, R3, LSL #2] 
    /*0000f908*/ MOV         R2, #0 
    /*0000f90c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000f910*/ ADD         R1, SP, #12 
    /*0000f914*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000f918*/ STR         R2, [R3] 
    /*0000f91c*/ BL          0x000000000000F91C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000f920*/ LDR         R3, [SP, #4] 
    /*0000f924*/ LDR         R3, [R4, R3, LSL #2] 
    /*0000f928*/ LDR         R2, [R3, #8] 
    /*0000f92c*/ CMP         R2, #0 
    /*0000f930*/ BEQ         Gdc_DestroyChn_xf9f8
    Gdc_DestroyChn_xf934:
    /*0000f934*/ MOVW        R6, #0                      @ GDC_WaitStopWorkingCallBack [R_ARM_MOVW_ABS_NC: .text+0x5dec] 
    /*0000f938*/ ADD         R5, SP, #4 
    /*0000f93c*/ MOVT        R6, #0                      @ GDC_WaitStopWorkingCallBack [R_ARM_MOVT_ABS: .text+0x5dec] 
    /*0000f940*/ B           Gdc_DestroyChn_xf95c
    Gdc_DestroyChn_xf944:
    /*0000f944*/ LDR         R3, [SP, #4] 
    /*0000f948*/ LDR         R0, [R4, R3, LSL #2] 
    /*0000f94c*/ ADD         R0, R0, #24 
    /*0000f950*/ BL          0x000000000000F950          @ osal_wait_uninterruptible [R_ARM_CALL: +0x0] 
    /*0000f954*/ CMP         R0, #0 
    /*0000f958*/ BLT         Gdc_DestroyChn_xf974
    Gdc_DestroyChn_xf95c:
    /*0000f95c*/ MOV         R0, R5 
    /*0000f960*/ BL          0x000000000000F960          @ GDC_WaitStopWorkingCallBack [R_ARM_CALL: .text+0x5dec] 
    /*0000f964*/ MOV         R2, R5 
    /*0000f968*/ MOV         R1, R6 
    /*0000f96c*/ CMP         R0, #0 
    /*0000f970*/ BEQ         Gdc_DestroyChn_xf944
    Gdc_DestroyChn_xf974:
    /*0000f974*/ ADD         R1, SP, #12 
    /*0000f978*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000f97c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000f980*/ MOV         R5, #0 
    /*0000f984*/ BL          0x000000000000F984          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000f988*/ LDR         R3, [SP, #4] 
    /*0000f98c*/ ADD         R1, SP, #12 
    /*0000f990*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000f994*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000f998*/ LDR         IP, [R4, R3, LSL #2] 
    /*0000f99c*/ ADD         R2, R4, R3, LSL #2 
    /*0000f9a0*/ STR         R5, [IP, #8] 
    /*0000f9a4*/ LDR         IP, [R4, R3, LSL #2] 
    /*0000f9a8*/ STR         R5, [IP, #12] 
    /*0000f9ac*/ LDR         IP, [R4, R3, LSL #2] 
    /*0000f9b0*/ STR         R5, [IP, #16] 
    /*0000f9b4*/ LDR         R3, [R4, R3, LSL #2] 
    /*0000f9b8*/ STR         R5, [R3, #20] 
    /*0000f9bc*/ LDR         R4, [R2, #256]              @ 0x100 
    /*0000f9c0*/ STR         R5, [R2, #256]              @ 0x100 
    /*0000f9c4*/ BL          0x000000000000F9C4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000f9c8*/ CMP         R4, R5 
    /*0000f9cc*/ MOV         R0, R4 
    /*0000f9d0*/ BEQ         Gdc_DestroyChn_xf9dc
    /*0000f9d4*/ BL          0x000000000000F9D4          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0000f9d8*/ MOV         R0, R5 
    Gdc_DestroyChn_xf9dc:
    /*0000f9dc*/ ADD         SP, SP, #16 
    /*0000f9e0*/ POP         {R4, R5, R6, PC} 
    Gdc_DestroyChn_xf9e4:
    /*0000f9e4*/ BL          0x0000000000005F18 
    /*0000f9e8*/ CMP         R0, #0 
    /*0000f9ec*/ BEQ         Gdc_DestroyChn_xf8d8
    /*0000f9f0*/ ADD         SP, SP, #16 
    /*0000f9f4*/ POP         {R4, R5, R6, PC} 
    Gdc_DestroyChn_xf9f8:
    /*0000f9f8*/ LDR         R2, [R3, #12] 
    /*0000f9fc*/ CMP         R2, #0 
    /*0000fa00*/ BNE         Gdc_DestroyChn_xf934
    /*0000fa04*/ LDR         R3, [R3, #20] 
    /*0000fa08*/ CMP         R3, #0 
    /*0000fa0c*/ BEQ         Gdc_DestroyChn_xf974
    /*0000fa10*/ B           Gdc_DestroyChn_xf934
    Gdc_DestroyChn_xfa14:
    /*0000fa14*/ ADD         R1, SP, #12 
    /*0000fa18*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000fa1c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000fa20*/ BL          0x000000000000FA20          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000fa24*/ MOVW        R0, #32773                  @ 0x8005 
    /*0000fa28*/ MOVT        R0, #40997                  @ 0xa025 
    /*0000fa2c*/ B           Gdc_DestroyChn_xf9dc
FUNC_END Gdc_DestroyChn


FUNC_BEGIN GDC_GetLDCV2Working
    /*0000fa30*/ PUSH        {R4, LR} 
    /*0000fa34*/ SUB         SP, SP, #8 
    /*0000fa38*/ MOV         R4, R0 
    /*0000fa3c*/ ADD         R1, SP, #4 
    /*0000fa40*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000fa44*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000fa48*/ BL          0x000000000000FA48          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000fa4c*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x428] 
    /*0000fa50*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x428] 
    /*0000fa54*/ ADD         R3, R2, R4, LSL #2 
    /*0000fa58*/ LDR         R3, [R3, #256]              @ 0x100 
    /*0000fa5c*/ CMP         R3, #0 
    /*0000fa60*/ BEQ         GDC_GetLDCV2Working_xfa84
    /*0000fa64*/ LDR         R3, [R2, R4, LSL #2] 
    /*0000fa68*/ LDR         R2, [R3, #16] 
    /*0000fa6c*/ CMP         R2, #0 
    /*0000fa70*/ MOVNE       R3, #1 
    /*0000fa74*/ BNE         GDC_GetLDCV2Working_xfa84
    /*0000fa78*/ LDR         R3, [R3, #20] 
    /*0000fa7c*/ ADDS        R3, R3, #0 
    /*0000fa80*/ MOVNE       R3, #1 
    GDC_GetLDCV2Working_xfa84:
    /*0000fa84*/ ADD         R1, SP, #4 
    /*0000fa88*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0000fa8c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0000fa90*/ MOV         R4, R3 
    /*0000fa94*/ BL          0x000000000000FA94          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000fa98*/ MOV         R0, R4 
    /*0000fa9c*/ ADD         SP, SP, #8 
    /*0000faa0*/ POP         {R4, PC} 
FUNC_END GDC_GetLDCV2Working


FUNC_BEGIN GDC_DeInitQueueBuf
    /*0000faa4*/ LDR         R3, [R0, #8] 
    /*0000faa8*/ CMP         R3, #0 
    /*0000faac*/ BXEQ        LR 
    /*0000fab0*/ PUSH        {R4, R5, LR} 
    /*0000fab4*/ SUB         SP, SP, #12 
    /*0000fab8*/ MOV         R4, R0 
    /*0000fabc*/ MOV         R1, #37                     @ 0x25 
    /*0000fac0*/ STR         R3, [SP, #4] 
    /*0000fac4*/ MOV         R2, #128                    @ 0x80 
    /*0000fac8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x9ac] 
    /*0000facc*/ STR         R2, [SP] 
    /*0000fad0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x9ac] 
    /*0000fad4*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e04] 
    /*0000fad8*/ MOV         R0, #7 
    /*0000fadc*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e04] 
    /*0000fae0*/ BL          0x000000000000FAE0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000fae4*/ MOV         R5, #0 
    /*0000fae8*/ LDR         R0, [R4, #8] 
    /*0000faec*/ BL          0x000000000000FAEC          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0000faf0*/ MOV         R1, R5 
    /*0000faf4*/ STR         R5, [R4, #8] 
    /*0000faf8*/ MOV         R2, #16 
    /*0000fafc*/ ADD         R0, R4, #28 
    /*0000fb00*/ BL          0x000000000000FB00          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000fb04*/ MOV         R1, R5 
    /*0000fb08*/ MOV         R2, #16 
    /*0000fb0c*/ ADD         R0, R4, #44                 @ 0x2c 
    /*0000fb10*/ BL          0x000000000000FB10          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000fb14*/ MOV         R1, R5 
    /*0000fb18*/ MOV         R2, #16 
    /*0000fb1c*/ ADD         R0, R4, #68                 @ 0x44 
    /*0000fb20*/ BL          0x000000000000FB20          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000fb24*/ MOV         R1, R5 
    /*0000fb28*/ MOV         R2, #16 
    /*0000fb2c*/ ADD         R0, R4, #84                 @ 0x54 
    /*0000fb30*/ BL          0x000000000000FB30          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000fb34*/ MOV         R1, R5 
    /*0000fb38*/ ADD         R0, R4, #100                @ 0x64 
    /*0000fb3c*/ MOV         R2, #16 
    /*0000fb40*/ ADD         SP, SP, #12 
    /*0000fb44*/ POP         {R4, R5, LR} 
    GDC_DeInitQueueBuf_xfb48:
    /*0000fb48*/ B           GDC_DeInitQueueBuf_xfb48    @ osal_memset [R_ARM_JUMP24: +0x0] 
FUNC_END GDC_DeInitQueueBuf


FUNC_BEGIN GDC_DeInitTaskBuf
    /*0000fb4c*/ LDR         R3, [R0] 
    /*0000fb50*/ CMP         R3, #0 
    /*0000fb54*/ BXEQ        LR 
    /*0000fb58*/ PUSH        {R4, LR} 
    /*0000fb5c*/ SUB         SP, SP, #8 
    /*0000fb60*/ MOV         R4, R0 
    /*0000fb64*/ MOV         R1, #37                     @ 0x25 
    /*0000fb68*/ STR         R3, [SP, #4] 
    /*0000fb6c*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e38] 
    /*0000fb70*/ MOV         R3, #360                    @ 0x168 
    /*0000fb74*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e38] 
    /*0000fb78*/ STR         R3, [SP] 
    /*0000fb7c*/ MOV         R0, #7 
    /*0000fb80*/ LDR         R3, [PC, #24]               @ 0x000000000000fba0 
    /*0000fb84*/ BL          0x000000000000FB84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000fb88*/ LDR         R0, [R4] 
    /*0000fb8c*/ BL          0x000000000000FB8C          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0000fb90*/ MOV         R3, #0 
    /*0000fb94*/ STR         R3, [R4] 
    /*0000fb98*/ ADD         SP, SP, #8 
    /*0000fb9c*/ POP         {R4, PC} 
    /*0000fba0*/ ANDEQ       R0, R0, R0, ASR #19 
FUNC_END GDC_DeInitTaskBuf


FUNC_BEGIN GDC_DeInitNodeBuf
    /*0000fba4*/ LDR         R3, [R0] 
    /*0000fba8*/ CMP         R3, #0 
    /*0000fbac*/ BXEQ        LR 
    /*0000fbb0*/ PUSH        {R4, LR} 
    /*0000fbb4*/ SUB         SP, SP, #8 
    /*0000fbb8*/ MOV         R4, R0 
    /*0000fbbc*/ MOV         R1, #37                     @ 0x25 
    /*0000fbc0*/ STR         R3, [SP, #4] 
    /*0000fbc4*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e38] 
    /*0000fbc8*/ MOV         R3, #536                    @ 0x218 
    /*0000fbcc*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e38] 
    /*0000fbd0*/ STR         R3, [SP] 
    /*0000fbd4*/ MOV         R0, #7 
    /*0000fbd8*/ LDR         R3, [PC, #24]               @ 0x000000000000fbf8 
    /*0000fbdc*/ BL          0x000000000000FBDC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000fbe0*/ LDR         R0, [R4] 
    /*0000fbe4*/ BL          0x000000000000FBE4          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0000fbe8*/ MOV         R3, #0 
    /*0000fbec*/ STR         R3, [R4] 
    /*0000fbf0*/ ADD         SP, SP, #8 
    /*0000fbf4*/ POP         {R4, PC} 
    /*0000fbf8*/ LDRDEQ      R0, [R0], -R4 
FUNC_END GDC_DeInitNodeBuf


FUNC_BEGIN GDC_DeInitJobBuf
    /*0000fbfc*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000fc00*/ MOVW        R7, #0                      @ max_gdc_job [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*0000fc04*/ MOVT        R7, #0                      @ max_gdc_job [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000fc08*/ SUB         SP, SP, #12 
    /*0000fc0c*/ MOV         R6, R0 
    /*0000fc10*/ LDR         R3, [R7] 
    /*0000fc14*/ CMP         R3, #0 
    /*0000fc18*/ MOVNE       R4, #0 
    /*0000fc1c*/ MOVNE       R5, R4 
    /*0000fc20*/ BEQ         GDC_DeInitJobBuf_xfc48
    GDC_DeInitJobBuf_xfc24:
    /*0000fc24*/ LDR         R0, [R6] 
    /*0000fc28*/ ADD         R5, R5, #1 
    /*0000fc2c*/ ADD         R0, R0, R4 
    /*0000fc30*/ ADD         R4, R4, #184                @ 0xb8 
    /*0000fc34*/ ADD         R0, R0, #84                 @ 0x54 
    /*0000fc38*/ BL          0x000000000000FC38          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*0000fc3c*/ LDR         R3, [R7] 
    /*0000fc40*/ CMP         R3, R5 
    /*0000fc44*/ BHI         GDC_DeInitJobBuf_xfc24
    GDC_DeInitJobBuf_xfc48:
    /*0000fc48*/ MOV         R0, R6 
    /*0000fc4c*/ BL          0x000000000000FAA4 
    /*0000fc50*/ LDR         R3, [R6, #4] 
    /*0000fc54*/ CMP         R3, #0 
    /*0000fc58*/ BEQ         GDC_DeInitJobBuf_xfc90
    /*0000fc5c*/ STR         R3, [SP, #4] 
    /*0000fc60*/ MOV         R1, #37                     @ 0x25 
    /*0000fc64*/ MOVW        R3, #273                    @ 0x111 
    /*0000fc68*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e70] 
    /*0000fc6c*/ STR         R3, [SP] 
    /*0000fc70*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e70] 
    /*0000fc74*/ LDR         R3, [PC, #92]               @ 0x000000000000fcd8 
    /*0000fc78*/ MOV         R0, #7 
    /*0000fc7c*/ BL          0x000000000000FC7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000fc80*/ LDR         R0, [R6, #4] 
    /*0000fc84*/ BL          0x000000000000FC84          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0000fc88*/ MOV         R3, #0 
    /*0000fc8c*/ STR         R3, [R6, #4] 
    GDC_DeInitJobBuf_xfc90:
    /*0000fc90*/ LDR         R3, [R6] 
    /*0000fc94*/ CMP         R3, #0 
    /*0000fc98*/ BEQ         GDC_DeInitJobBuf_xfcd0
    /*0000fc9c*/ STR         R3, [SP, #4] 
    /*0000fca0*/ MOV         R1, #37                     @ 0x25 
    /*0000fca4*/ MOV         R3, #280                    @ 0x118 
    /*0000fca8*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ea8] 
    /*0000fcac*/ STR         R3, [SP] 
    /*0000fcb0*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ea8] 
    /*0000fcb4*/ LDR         R3, [PC, #28]               @ 0x000000000000fcd8 
    /*0000fcb8*/ MOV         R0, #7 
    /*0000fcbc*/ BL          0x000000000000FCBC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000fcc0*/ LDR         R0, [R6] 
    /*0000fcc4*/ BL          0x000000000000FCC4          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0000fcc8*/ MOV         R3, #0 
    /*0000fccc*/ STR         R3, [R6] 
    GDC_DeInitJobBuf_xfcd0:
    /*0000fcd0*/ ADD         SP, SP, #12 
    /*0000fcd4*/ POP         {R4, R5, R6, R7, PC} 
    /*0000fcd8*/ ANDEQ       R0, R0, R8, ROR #19 
FUNC_END GDC_DeInitJobBuf


FUNC_BEGIN GDC_InitNodeBuf
    /*0000fcdc*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000fce0*/ MOV         R5, R1 
    /*0000fce4*/ MOV         R8, #4864                   @ 0x1300 
    /*0000fce8*/ MOV         R4, R0 
    /*0000fcec*/ MUL         R8, R8, R5 
    /*0000fcf0*/ SUB         SP, SP, #16 
    /*0000fcf4*/ MOV         R2, #28 
    /*0000fcf8*/ MOV         R1, #0 
    /*0000fcfc*/ BL          0x000000000000FCFC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000fd00*/ ADD         R6, R4, #4 
    /*0000fd04*/ ADD         R3, R4, #12 
    /*0000fd08*/ STR         R6, [R4, #4] 
    /*0000fd0c*/ STR         R6, [R4, #8] 
    /*0000fd10*/ STR         R3, [R4, #12] 
    /*0000fd14*/ MOV         R0, R8 
    /*0000fd18*/ STR         R3, [R4, #16] 
    /*0000fd1c*/ BL          0x000000000000FD1C          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*0000fd20*/ SUBS        R7, R0, #0 
    /*0000fd24*/ BEQ         GDC_InitNodeBuf_xfda0
    /*0000fd28*/ MOV         R2, R8 
    /*0000fd2c*/ MOV         R1, #0 
    /*0000fd30*/ BL          0x000000000000FD30          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000fd34*/ CMP         R5, #0 
    /*0000fd38*/ STR         R7, [R4] 
    /*0000fd3c*/ BEQ         GDC_InitNodeBuf_xfd90
    /*0000fd40*/ MOV         R2, #0 
    /*0000fd44*/ MOV         R0, R7 
    /*0000fd48*/ MOV         R1, R2 
    /*0000fd4c*/ B           GDC_InitNodeBuf_xfd54
    GDC_InitNodeBuf_xfd50:
    /*0000fd50*/ LDR         R0, [R4] 
    GDC_InitNodeBuf_xfd54:
    /*0000fd54*/ ADD         R3, R0, R2 
    /*0000fd58*/ ADD         IP, R3, #4096               @ 0x1000 
    /*0000fd5c*/ STR         R1, [IP, #756]              @ 0x2f4 
    /*0000fd60*/ ADD         R1, R1, #1 
    /*0000fd64*/ LDR         IP, [R4, #8] 
    /*0000fd68*/ CMP         R5, R1 
    /*0000fd6c*/ STR         R3, [R4, #8] 
    /*0000fd70*/ STR         R6, [R0, R2] 
    /*0000fd74*/ ADD         R2, R2, #4864               @ 0x1300 
    /*0000fd78*/ STR         IP, [R3, #4] 
    /*0000fd7c*/ STR         R3, [IP] 
    /*0000fd80*/ LDR         R3, [R4, #20] 
    /*0000fd84*/ ADD         R3, R3, #1 
    /*0000fd88*/ STR         R3, [R4, #20] 
    /*0000fd8c*/ BNE         GDC_InitNodeBuf_xfd50
    GDC_InitNodeBuf_xfd90:
    /*0000fd90*/ MOV         R0, #0 
    /*0000fd94*/ STR         R0, [R4, #24] 
    GDC_InitNodeBuf_xfd98:
    /*0000fd98*/ ADD         SP, SP, #16 
    /*0000fd9c*/ POP         {R4, R5, R6, R7, R8, PC} 
    GDC_InitNodeBuf_xfda0:
    /*0000fda0*/ MOV         R2, #4 
    /*0000fda4*/ MOVW        R3, #497                    @ 0x1f1 
    /*0000fda8*/ STR         R2, [SP, #8] 
    /*0000fdac*/ MOV         R1, #37                     @ 0x25 
    /*0000fdb0*/ STR         R3, [SP] 
    /*0000fdb4*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ee0] 
    /*0000fdb8*/ STR         R5, [SP, #4] 
    /*0000fdbc*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ee0] 
    /*0000fdc0*/ LDR         R3, [PC, #16]               @ 0x000000000000fdd8 
    /*0000fdc4*/ MOV         R0, #1 
    /*0000fdc8*/ BL          0x000000000000FDC8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000fdcc*/ MOVW        R0, #32781                  @ 0x800d 
    /*0000fdd0*/ MOVT        R0, #40997                  @ 0xa025 
    /*0000fdd4*/ B           GDC_InitNodeBuf_xfd98
    /*0000fdd8*/ STRDEQ      R0, [R0], -IP 
FUNC_END GDC_InitNodeBuf


FUNC_BEGIN GDC_QueryBusyNodeNum
    /*0000fddc*/ LDR         R0, [R0, #24] 
    /*0000fde0*/ BX          LR 
FUNC_END GDC_QueryBusyNodeNum


FUNC_BEGIN GDC_GetNodeFromFreeList
    /*0000fde4*/ MOV         R3, R0 
    /*0000fde8*/ PUSH        {R4, R5, LR} 
    /*0000fdec*/ SUB         SP, SP, #12 
    /*0000fdf0*/ LDR         R4, [R3, #4]! 
    /*0000fdf4*/ CMP         R4, R3 
    /*0000fdf8*/ BEQ         GDC_GetNodeFromFreeList_xfe64
    /*0000fdfc*/ CMP         R4, #0 
    /*0000fe00*/ MOV         R5, R0 
    /*0000fe04*/ BEQ         GDC_GetNodeFromFreeList_xfe44
    GDC_GetNodeFromFreeList_xfe08:
    /*0000fe08*/ LDR         R1, [R4, #4] 
    /*0000fe0c*/ MOV         R2, #256                    @ 0x100 
    /*0000fe10*/ LDR         IP, [R4] 
    /*0000fe14*/ MOVT        R2, #16 
    /*0000fe18*/ MOV         R3, #512                    @ 0x200 
    /*0000fe1c*/ MOVT        R3, #32 
    /*0000fe20*/ MOV         R0, R4 
    /*0000fe24*/ STR         R1, [IP, #4] 
    /*0000fe28*/ STR         IP, [R1] 
    /*0000fe2c*/ STM         R4, {R2, R3} 
    /*0000fe30*/ LDR         R3, [R5, #20] 
    /*0000fe34*/ SUB         R3, R3, #1 
    /*0000fe38*/ STR         R3, [R5, #20] 
    GDC_GetNodeFromFreeList_xfe3c:
    /*0000fe3c*/ ADD         SP, SP, #12 
    /*0000fe40*/ POP         {R4, R5, PC} 
    GDC_GetNodeFromFreeList_xfe44:
    /*0000fe44*/ MOVW        R3, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f5c] 
    /*0000fe48*/ MOVW        R0, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f70] 
    /*0000fe4c*/ MOVT        R3, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f5c] 
    /*0000fe50*/ MOVT        R0, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f70] 
    /*0000fe54*/ MOVW        R2, #393                    @ 0x189 
    /*0000fe58*/ LDR         R1, [PC, #44]               @ 0x000000000000fe8c 
    /*0000fe5c*/ BL          0x000000000000FE5C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000fe60*/ B           GDC_GetNodeFromFreeList_xfe08
    GDC_GetNodeFromFreeList_xfe64:
    /*0000fe64*/ MOV         R3, #388                    @ 0x184 
    /*0000fe68*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f2c] 
    /*0000fe6c*/ STR         R3, [SP] 
    /*0000fe70*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f2c] 
    /*0000fe74*/ LDR         R3, [PC, #16]               @ 0x000000000000fe8c 
    /*0000fe78*/ MOV         R1, #37                     @ 0x25 
    /*0000fe7c*/ MOV         R0, #3 
    /*0000fe80*/ BL          0x000000000000FE80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000fe84*/ MOV         R0, #0 
    /*0000fe88*/ B           GDC_GetNodeFromFreeList_xfe3c
    /*0000fe8c*/ ANDEQ       R0, R0, IP, LSL #20 
FUNC_END GDC_GetNodeFromFreeList


FUNC_BEGIN GDC_PutNodeToFreeList
    /*0000fe90*/ LDR         R3, [R0, #8] 
    /*0000fe94*/ ADD         R2, R0, #4 
    /*0000fe98*/ STR         R1, [R0, #8] 
    /*0000fe9c*/ STM         R1, {R2, R3} 
    /*0000fea0*/ STR         R1, [R3] 
    /*0000fea4*/ LDR         R3, [R0, #20] 
    /*0000fea8*/ ADD         R3, R3, #1 
    /*0000feac*/ STR         R3, [R0, #20] 
    /*0000feb0*/ BX          LR 
FUNC_END GDC_PutNodeToFreeList


FUNC_BEGIN GDC_GetNodeFromBusyList
    /*0000feb4*/ MOV         R3, R0 
    /*0000feb8*/ PUSH        {R4, R5, LR} 
    /*0000febc*/ SUB         SP, SP, #12 
    /*0000fec0*/ LDR         R4, [R3, #12]! 
    /*0000fec4*/ CMP         R4, R3 
    /*0000fec8*/ BEQ         GDC_GetNodeFromBusyList_xff34
    /*0000fecc*/ CMP         R4, #0 
    /*0000fed0*/ MOV         R5, R0 
    /*0000fed4*/ BEQ         GDC_GetNodeFromBusyList_xff14
    GDC_GetNodeFromBusyList_xfed8:
    /*0000fed8*/ LDR         R1, [R4, #4] 
    /*0000fedc*/ MOV         R2, #256                    @ 0x100 
    /*0000fee0*/ LDR         IP, [R4] 
    /*0000fee4*/ MOVT        R2, #16 
    /*0000fee8*/ MOV         R3, #512                    @ 0x200 
    /*0000feec*/ MOVT        R3, #32 
    /*0000fef0*/ MOV         R0, R4 
    /*0000fef4*/ STR         R1, [IP, #4] 
    /*0000fef8*/ STR         IP, [R1] 
    /*0000fefc*/ STM         R4, {R2, R3} 
    /*0000ff00*/ LDR         R3, [R5, #24] 
    /*0000ff04*/ SUB         R3, R3, #1 
    /*0000ff08*/ STR         R3, [R5, #24] 
    GDC_GetNodeFromBusyList_xff0c:
    /*0000ff0c*/ ADD         SP, SP, #12 
    /*0000ff10*/ POP         {R4, R5, PC} 
    GDC_GetNodeFromBusyList_xff14:
    /*0000ff14*/ MOVW        R3, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f5c] 
    /*0000ff18*/ MOVW        R0, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f70] 
    /*0000ff1c*/ MOVT        R3, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f5c] 
    /*0000ff20*/ MOVT        R0, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f70] 
    /*0000ff24*/ MOV         R2, #424                    @ 0x1a8 
    /*0000ff28*/ LDR         R1, [PC, #44]               @ 0x000000000000ff5c 
    /*0000ff2c*/ BL          0x000000000000FF2C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000ff30*/ B           GDC_GetNodeFromBusyList_xfed8
    GDC_GetNodeFromBusyList_xff34:
    /*0000ff34*/ MOVW        R3, #419                    @ 0x1a3 
    /*0000ff38*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3fb0] 
    /*0000ff3c*/ STR         R3, [SP] 
    /*0000ff40*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3fb0] 
    /*0000ff44*/ LDR         R3, [PC, #16]               @ 0x000000000000ff5c 
    /*0000ff48*/ MOV         R1, #37                     @ 0x25 
    /*0000ff4c*/ MOV         R0, #4 
    /*0000ff50*/ BL          0x000000000000FF50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ff54*/ MOV         R0, #0 
    /*0000ff58*/ B           GDC_GetNodeFromBusyList_xff0c
    /*0000ff5c*/ ANDEQ       R0, R0, R4, LSR #20 
FUNC_END GDC_GetNodeFromBusyList


FUNC_BEGIN GDC_PutNodeToBusyList
    /*0000ff60*/ LDR         R3, [R0, #16] 
    /*0000ff64*/ ADD         R2, R0, #12 
    /*0000ff68*/ STR         R1, [R0, #16] 
    /*0000ff6c*/ STM         R1, {R2, R3} 
    /*0000ff70*/ STR         R1, [R3] 
    /*0000ff74*/ LDR         R3, [R0, #24] 
    /*0000ff78*/ ADD         R3, R3, #1 
    /*0000ff7c*/ STR         R3, [R0, #24] 
    /*0000ff80*/ BX          LR 
FUNC_END GDC_PutNodeToBusyList


FUNC_BEGIN GDC_GetCurrentNodeFromBusyList
    /*0000ff84*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000ff88*/ ADD         R3, R0, #12 
    /*0000ff8c*/ LDR         R2, [R0, #12] 
    /*0000ff90*/ SUB         SP, SP, #12 
    /*0000ff94*/ CMP         R2, R3 
    /*0000ff98*/ BEQ         GDC_GetCurrentNodeFromBusyList_xffd4
    /*0000ff9c*/ LDR         IP, [R1, #4] 
    /*0000ffa0*/ MOV         R2, #256                    @ 0x100 
    /*0000ffa4*/ LDR         LR, [R1] 
    /*0000ffa8*/ MOVT        R2, #16 
    /*0000ffac*/ MOV         R3, #512                    @ 0x200 
    /*0000ffb0*/ MOVT        R3, #32 
    /*0000ffb4*/ STR         IP, [LR, #4] 
    /*0000ffb8*/ STR         LR, [IP] 
    /*0000ffbc*/ STM         R1, {R2, R3} 
    /*0000ffc0*/ LDR         R3, [R0, #24] 
    /*0000ffc4*/ SUB         R3, R3, #1 
    /*0000ffc8*/ STR         R3, [R0, #24] 
    GDC_GetCurrentNodeFromBusyList_xffcc:
    /*0000ffcc*/ ADD         SP, SP, #12 
    /*0000ffd0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    GDC_GetCurrentNodeFromBusyList_xffd4:
    /*0000ffd4*/ MOV         R3, #448                    @ 0x1c0 
    /*0000ffd8*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3fe0] 
    /*0000ffdc*/ STR         R3, [SP] 
    /*0000ffe0*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3fe0] 
    /*0000ffe4*/ LDR         R3, [PC, #12]               @ 0x000000000000fff8 
    /*0000ffe8*/ MOV         R1, #37                     @ 0x25 
    /*0000ffec*/ MOV         R0, #0 
    /*0000fff0*/ BL          0x000000000000FFF0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000fff4*/ B           GDC_GetCurrentNodeFromBusyList_xffcc
    /*0000fff8*/ ANDEQ       R0, R0, IP, LSR SL 
FUNC_END GDC_GetCurrentNodeFromBusyList


FUNC_BEGIN GDC_DeInitBuf
    /*0000fffc*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00010000*/ SUBS        R7, R0, #0 
    /*00010004*/ MOV         R4, R1 
    /*00010008*/ MOV         R6, R2 
    /*0001000c*/ MOV         R5, R3 
    /*00010010*/ BEQ         GDC_DeInitBuf_x10060
    GDC_DeInitBuf_x10014:
    /*00010014*/ CMP         R4, #0 
    /*00010018*/ BEQ         GDC_DeInitBuf_x10040
    GDC_DeInitBuf_x1001c:
    /*0001001c*/ MOV         R0, R7 
    /*00010020*/ BL          0x000000000000FBFC 
    /*00010024*/ MOV         R0, R4 
    /*00010028*/ BL          0x000000000000FB4C 
    /*0001002c*/ MOV         R0, R6 
    /*00010030*/ BL          0x000000000000FBA4 
    /*00010034*/ MOV         R0, R5 
    /*00010038*/ POP         {R4, R5, R6, R7, R8, LR} 
    /*0001003c*/ B           0x000000000000FBA4 
    GDC_DeInitBuf_x10040:
    /*00010040*/ MOVW        R3, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x401c] 
    /*00010044*/ MOVW        R0, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f70] 
    /*00010048*/ MOVT        R3, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x401c] 
    /*0001004c*/ MOVT        R0, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f70] 
    /*00010050*/ MOV         R2, #608                    @ 0x260 
    /*00010054*/ LDR         R1, [PC, #36]               @ 0x0000000000010080 
    /*00010058*/ BL          0x0000000000010058          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001005c*/ B           GDC_DeInitBuf_x1001c
    GDC_DeInitBuf_x10060:
    /*00010060*/ MOVW        R3, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x400c] 
    /*00010064*/ MOVW        R0, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f70] 
    /*00010068*/ MOVT        R3, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x400c] 
    /*0001006c*/ MOVT        R0, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f70] 
    /*00010070*/ MOVW        R2, #607                    @ 0x25f 
    /*00010074*/ LDR         R1, [PC, #4]                @ 0x0000000000010080 
    /*00010078*/ BL          0x0000000000010078          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001007c*/ B           GDC_DeInitBuf_x10014
    /*00010080*/ ANDEQ       R0, R0, IP, ASR SL 
FUNC_END GDC_DeInitBuf


FUNC_BEGIN GDC_QueryFreeTaskNum
    /*00010084*/ LDR         R0, [R0, #12] 
    /*00010088*/ BX          LR 
FUNC_END GDC_QueryFreeTaskNum


FUNC_BEGIN GDC_GetTaskFromFreeList
    /*0001008c*/ MOV         R3, R0 
    /*00010090*/ PUSH        {R4, R5, LR} 
    /*00010094*/ SUB         SP, SP, #12 
    /*00010098*/ LDR         R4, [R3, #4]! 
    /*0001009c*/ CMP         R4, R3 
    /*000100a0*/ BEQ         GDC_GetTaskFromFreeList_x1010c
    /*000100a4*/ CMP         R4, #0 
    /*000100a8*/ MOV         R5, R0 
    /*000100ac*/ BEQ         GDC_GetTaskFromFreeList_x100ec
    GDC_GetTaskFromFreeList_x100b0:
    /*000100b0*/ LDR         R1, [R4, #4] 
    /*000100b4*/ MOV         R2, #256                    @ 0x100 
    /*000100b8*/ LDR         IP, [R4] 
    /*000100bc*/ MOVT        R2, #16 
    /*000100c0*/ MOV         R3, #512                    @ 0x200 
    /*000100c4*/ MOVT        R3, #32 
    /*000100c8*/ MOV         R0, R4 
    /*000100cc*/ STR         R1, [IP, #4] 
    /*000100d0*/ STR         IP, [R1] 
    /*000100d4*/ STM         R4, {R2, R3} 
    /*000100d8*/ LDR         R3, [R5, #12] 
    /*000100dc*/ SUB         R3, R3, #1 
    /*000100e0*/ STR         R3, [R5, #12] 
    GDC_GetTaskFromFreeList_x100e4:
    /*000100e4*/ ADD         SP, SP, #12 
    /*000100e8*/ POP         {R4, R5, PC} 
    GDC_GetTaskFromFreeList_x100ec:
    /*000100ec*/ MOVW        R3, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f5c] 
    /*000100f0*/ MOVW        R0, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f70] 
    /*000100f4*/ MOVT        R3, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f5c] 
    /*000100f8*/ MOVT        R0, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f70] 
    /*000100fc*/ MOVW        R2, #639                    @ 0x27f 
    /*00010100*/ LDR         R1, [PC, #44]               @ 0x0000000000010134 
    /*00010104*/ BL          0x0000000000010104          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00010108*/ B           GDC_GetTaskFromFreeList_x100b0
    GDC_GetTaskFromFreeList_x1010c:
    /*0001010c*/ MOVW        R3, #634                    @ 0x27a 
    /*00010110*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4030] 
    /*00010114*/ STR         R3, [SP] 
    /*00010118*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4030] 
    /*0001011c*/ LDR         R3, [PC, #16]               @ 0x0000000000010134 
    /*00010120*/ MOV         R1, #37                     @ 0x25 
    /*00010124*/ MOV         R0, #4 
    /*00010128*/ BL          0x0000000000010128          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001012c*/ MOV         R0, #0 
    /*00010130*/ B           GDC_GetTaskFromFreeList_x100e4
    /*00010134*/ ANDEQ       R0, R0, IP, ROR #20 
FUNC_END GDC_GetTaskFromFreeList


FUNC_BEGIN GDC_PutTaskToFreeList
    /*00010138*/ LDR         R3, [R0, #8] 
    /*0001013c*/ ADD         R2, R0, #4 
    /*00010140*/ STR         R1, [R0, #8] 
    /*00010144*/ STM         R1, {R2, R3} 
    /*00010148*/ STR         R1, [R3] 
    /*0001014c*/ LDR         R3, [R0, #12] 
    /*00010150*/ ADD         R3, R3, #1 
    /*00010154*/ STR         R3, [R0, #12] 
    /*00010158*/ BX          LR 
FUNC_END GDC_PutTaskToFreeList


FUNC_BEGIN GDC_QueryTaskNumInJob
    /*0001015c*/ LDR         R0, [R0, #20] 
    /*00010160*/ BX          LR 
FUNC_END GDC_QueryTaskNumInJob


FUNC_BEGIN GDC_GetTaskFromJob
    /*00010164*/ PUSH        {R4, LR} 
    /*00010168*/ SUBS        R4, R0, #0 
    /*0001016c*/ SUB         SP, SP, #8 
    /*00010170*/ BEQ         GDC_GetTaskFromJob_x101d0
    GDC_GetTaskFromJob_x10174:
    /*00010174*/ MOV         R3, R4 
    /*00010178*/ LDR         R0, [R3, #8]! 
    /*0001017c*/ CMP         R0, R3 
    /*00010180*/ BEQ         GDC_GetTaskFromJob_x101f0
    /*00010184*/ LDR         R1, [R0, #4] 
    /*00010188*/ MOV         R2, #256                    @ 0x100 
    /*0001018c*/ LDR         IP, [R0] 
    /*00010190*/ MOVT        R2, #16 
    /*00010194*/ MOV         R3, #512                    @ 0x200 
    /*00010198*/ MOVT        R3, #32 
    /*0001019c*/ STR         R1, [IP, #4] 
    /*000101a0*/ STR         IP, [R1] 
    /*000101a4*/ STM         R0, {R2, R3} 
    /*000101a8*/ LDR         R3, [R4, #20] 
    /*000101ac*/ SUB         R3, R3, #1 
    /*000101b0*/ STR         R3, [R4, #20] 
    /*000101b4*/ LDR         R3, [R0, #788]              @ 0x314 
    /*000101b8*/ CMP         R3, #6 
    /*000101bc*/ LDREQ       R3, [R4, #24] 
    /*000101c0*/ SUBEQ       R3, R3, #1 
    /*000101c4*/ STREQ       R3, [R4, #24] 
    GDC_GetTaskFromJob_x101c8:
    /*000101c8*/ ADD         SP, SP, #8 
    /*000101cc*/ POP         {R4, PC} 
    GDC_GetTaskFromJob_x101d0:
    /*000101d0*/ MOVW        R3, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4060] 
    /*000101d4*/ MOVW        R0, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f70] 
    /*000101d8*/ MOVT        R3, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4060] 
    /*000101dc*/ MOVT        R0, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f70] 
    /*000101e0*/ MOVW        R2, #670                    @ 0x29e 
    /*000101e4*/ LDR         R1, [PC, #48]               @ 0x000000000001021c 
    /*000101e8*/ BL          0x00000000000101E8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000101ec*/ B           GDC_GetTaskFromJob_x10174
    GDC_GetTaskFromJob_x101f0:
    /*000101f0*/ MOVW        R3, #674                    @ 0x2a2 
    /*000101f4*/ STR         R4, [SP, #4] 
    /*000101f8*/ STR         R3, [SP] 
    /*000101fc*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4070] 
    /*00010200*/ LDR         R3, [PC, #20]               @ 0x000000000001021c 
    /*00010204*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4070] 
    /*00010208*/ MOV         R1, #37                     @ 0x25 
    /*0001020c*/ MOV         R0, #4 
    /*00010210*/ BL          0x0000000000010210          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010214*/ MOV         R0, #0 
    /*00010218*/ B           GDC_GetTaskFromJob_x101c8
    /*0001021c*/ ANDEQ       R0, R0, R4, LSL #21 
FUNC_END GDC_GetTaskFromJob


FUNC_BEGIN GDC_PutTaskToJob
    /*00010220*/ LDR         R3, [R1, #12] 
    /*00010224*/ ADD         R2, R1, #8 
    /*00010228*/ STR         R0, [R1, #12] 
    /*0001022c*/ STM         R0, {R2, R3} 
    /*00010230*/ STR         R0, [R3] 
    /*00010234*/ LDR         R3, [R1, #20] 
    /*00010238*/ ADD         R3, R3, #1 
    /*0001023c*/ STR         R3, [R1, #20] 
    /*00010240*/ LDR         R3, [R0, #788]              @ 0x314 
    /*00010244*/ CMP         R3, #6 
    /*00010248*/ LDREQ       R3, [R1, #24] 
    /*0001024c*/ ADDEQ       R3, R3, #1 
    /*00010250*/ STREQ       R3, [R1, #24] 
    /*00010254*/ BX          LR 
FUNC_END GDC_PutTaskToJob


FUNC_BEGIN GDC_QueryFreeJobNum
    /*00010258*/ LDR         R0, [R0, #60]               @ 0x3c 
    /*0001025c*/ BX          LR 
FUNC_END GDC_QueryFreeJobNum


FUNC_BEGIN GDC_GetJobFromFreeList
    /*00010260*/ MOV         R3, R0 
    /*00010264*/ PUSH        {R4, R5, R6, LR} 
    /*00010268*/ LDR         R4, [R3, #12]! 
    /*0001026c*/ CMP         R4, R3 
    /*00010270*/ BEQ         GDC_GetJobFromFreeList_x102d8
    /*00010274*/ CMP         R4, #0 
    /*00010278*/ MOV         R5, R0 
    /*0001027c*/ BEQ         GDC_GetJobFromFreeList_x102b8
    GDC_GetJobFromFreeList_x10280:
    /*00010280*/ LDR         R1, [R4, #4] 
    /*00010284*/ MOV         R2, #256                    @ 0x100 
    /*00010288*/ LDR         IP, [R4] 
    /*0001028c*/ MOVT        R2, #16 
    /*00010290*/ MOV         R3, #512                    @ 0x200 
    /*00010294*/ MOVT        R3, #32 
    /*00010298*/ MOV         R0, R4 
    /*0001029c*/ STR         R1, [IP, #4] 
    /*000102a0*/ STR         IP, [R1] 
    /*000102a4*/ STM         R4, {R2, R3} 
    /*000102a8*/ LDR         R3, [R5, #60]               @ 0x3c 
    /*000102ac*/ SUB         R3, R3, #1 
    /*000102b0*/ STR         R3, [R5, #60]               @ 0x3c 
    /*000102b4*/ POP         {R4, R5, R6, PC} 
    GDC_GetJobFromFreeList_x102b8:
    /*000102b8*/ MOVW        R3, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f5c] 
    /*000102bc*/ MOVW        R0, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f70] 
    /*000102c0*/ MOVT        R3, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f5c] 
    /*000102c4*/ MOVT        R0, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f70] 
    /*000102c8*/ MOVW        R2, #725                    @ 0x2d5 
    /*000102cc*/ LDR         R1, [PC, #12]               @ 0x00000000000102e0 
    /*000102d0*/ BL          0x00000000000102D0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000102d4*/ B           GDC_GetJobFromFreeList_x10280
    GDC_GetJobFromFreeList_x102d8:
    /*000102d8*/ MOV         R0, #0 
    /*000102dc*/ POP         {R4, R5, R6, PC} 
    /*000102e0*/ MULEQ       R0, R8, SL 
FUNC_END GDC_GetJobFromFreeList


FUNC_BEGIN GDC_PutJobToFreeList
    /*000102e4*/ PUSH        {R4, R5, R6, LR} 
    /*000102e8*/ MOV         R4, R1 
    /*000102ec*/ LDR         R3, [R0, #16] 
    /*000102f0*/ MOV         R5, #0 
    /*000102f4*/ MOV         R6, R0 
    /*000102f8*/ ADD         R2, R0, #12 
    /*000102fc*/ STR         R1, [R6, #16] 
    /*00010300*/ MOV         R0, #60                     @ 0x3c 
    /*00010304*/ STM         R1, {R2, R3} 
    /*00010308*/ MOV         R2, #4 
    /*0001030c*/ STR         R1, [R3] 
    /*00010310*/ MOV         R1, R5 
    /*00010314*/ STR         R0, [R4, #28] 
    /*00010318*/ ADD         R0, R4, #44                 @ 0x2c 
    /*0001031c*/ STR         R2, [R4, #60]               @ 0x3c 
    /*00010320*/ MOV         R2, #16 
    /*00010324*/ STR         R5, [R4, #20] 
    /*00010328*/ STR         R5, [R4, #24] 
    /*0001032c*/ STR         R5, [R4, #40]               @ 0x28 
    /*00010330*/ STR         R5, [R4, #16] 
    /*00010334*/ BL          0x0000000000010334          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00010338*/ STR         R5, [R4, #76]               @ 0x4c 
    /*0001033c*/ STR         R5, [R4, #92]               @ 0x5c 
    /*00010340*/ STR         R5, [R4, #104]              @ 0x68 
    /*00010344*/ STR         R5, [R4, #108]              @ 0x6c 
    /*00010348*/ STR         R5, [R4, #112]              @ 0x70 
    /*0001034c*/ LDR         R3, [R6, #60]               @ 0x3c 
    /*00010350*/ ADD         R3, R3, #1 
    /*00010354*/ STR         R3, [R6, #60]               @ 0x3c 
    /*00010358*/ POP         {R4, R5, R6, PC} 
FUNC_END GDC_PutJobToFreeList


FUNC_BEGIN GDC_InitBuf
    /*0001035c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00010360*/ SUB         SP, SP, #28 
    /*00010364*/ MOVW        R8, #0                      @ g_stGdcCallerCtx [R_ARM_MOVW_ABS_NC: .bss+0xc] 
    /*00010368*/ MOVT        R8, #0                      @ g_stGdcCallerCtx [R_ARM_MOVT_ABS: .bss+0xc] 
    /*0001036c*/ MOV         R4, R0 
    /*00010370*/ STR         R2, [SP, #16] 
    /*00010374*/ MOV         R5, R1 
    /*00010378*/ MOV         R2, #604                    @ 0x25c 
    /*0001037c*/ MOV         R1, #0 
    /*00010380*/ STR         R3, [SP, #20] 
    /*00010384*/ LDR         R6, [SP, #64]               @ 0x40 
    /*00010388*/ BL          0x0000000000010388          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0001038c*/ ADD         R2, R4, #12 
    /*00010390*/ ADD         R3, R4, #20 
    /*00010394*/ STR         R2, [R4, #12] 
    /*00010398*/ MOV         R9, #22 
    /*0001039c*/ STR         R2, [R4, #16] 
    /*000103a0*/ STR         R3, [R4, #20] 
    /*000103a4*/ STR         R3, [R4, #24] 
    /*000103a8*/ LDR         R7, [R8, #48]               @ 0x30 
    /*000103ac*/ MUL         R9, R9, R7 
    /*000103b0*/ MOV         R0, R9 
    /*000103b4*/ BL          0x00000000000103B4          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*000103b8*/ CMP         R0, #0 
    /*000103bc*/ STR         R0, [R4, #8] 
    /*000103c0*/ BEQ         GDC_InitBuf_x106dc
    /*000103c4*/ MOV         R2, R9 
    /*000103c8*/ MOV         R1, #0 
    /*000103cc*/ BL          0x00000000000103CC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000103d0*/ LDR         R1, [R4, #8] 
    /*000103d4*/ LSL         R0, R7, #3 
    /*000103d8*/ ADD         R3, R4, #32 
    /*000103dc*/ ADD         IP, R1, R0 
    /*000103e0*/ ADD         R9, R4, #40                 @ 0x28 
    /*000103e4*/ ADD         R0, IP, R0 
    /*000103e8*/ ADD         LR, R8, #32 
    /*000103ec*/ ADD         R2, R0, R7, LSL #2 
    /*000103f0*/ MOV         R8, R1 
    /*000103f4*/ STR         R1, [R4, #28] 
    /*000103f8*/ MOV         R1, R0 
    /*000103fc*/ MOV         SL, R2 
    /*00010400*/ STR         R0, [R4, #100]              @ 0x64 
    /*00010404*/ STR         IP, [R4, #44]               @ 0x2c 
    /*00010408*/ ADD         R0, R2, R7 
    /*0001040c*/ STR         R2, [R4, #68]               @ 0x44 
    /*00010410*/ STR         R0, [R4, #84]               @ 0x54 
    GDC_InitBuf_x10414:
    /*00010414*/ LDR         R2, [LR], #4 
    /*00010418*/ CMP         R3, R9 
    /*0001041c*/ ADD         R3, R3, #4 
    /*00010420*/ ADD         R7, SL, R2 
    /*00010424*/ ADD         SL, R0, R2 
    /*00010428*/ LSL         R0, R2, #3 
    /*0001042c*/ STR         R7, [R3, #36]               @ 0x24 
    /*00010430*/ ADD         R8, R8, R0 
    /*00010434*/ STR         SL, [R3, #52]               @ 0x34 
    /*00010438*/ ADD         R2, R1, R2, LSL #2 
    /*0001043c*/ ADD         R0, IP, R0 
    /*00010440*/ STR         R8, [R3, #-4] 
    /*00010444*/ STR         R0, [R3, #12] 
    /*00010448*/ STR         R2, [R3, #68]               @ 0x44 
    /*0001044c*/ BEQ         GDC_InitBuf_x10464
    /*00010450*/ LDR         IP, [R3, #12] 
    /*00010454*/ LDR         SL, [R3, #36]               @ 0x24 
    /*00010458*/ LDR         R0, [R3, #52]               @ 0x34 
    /*0001045c*/ LDR         R1, [R3, #68]               @ 0x44 
    /*00010460*/ B           GDC_InitBuf_x10414
    GDC_InitBuf_x10464:
    /*00010464*/ LDR         R8, [PC, #788]              @ 0x0000000000010780 
    /*00010468*/ ADD         R0, R4, #28 
    /*0001046c*/ ADD         SL, R4, #44                 @ 0x2c 
    GDC_InitBuf_x10470:
    /*00010470*/ LDR         IP, [R8], #4 
    /*00010474*/ LDR         R3, [R8, #-20]              @ 0xffffffec 
    /*00010478*/ CMP         R3, #0 
    /*0001047c*/ LSLNE       R9, IP, #3 
    /*00010480*/ MOVNE       R7, #0 
    /*00010484*/ MOVNE       LR, R7 
    /*00010488*/ BEQ         GDC_InitBuf_x104e0
    GDC_InitBuf_x1048c:
    /*0001048c*/ CMP         IP, #0 
    /*00010490*/ BEQ         GDC_InitBuf_x104d0
    /*00010494*/ MOV         R3, R7 
    /*00010498*/ MOV         R1, #0 
    GDC_InitBuf_x1049c:
    /*0001049c*/ LDR         FP, [R0] 
    /*000104a0*/ ADD         R1, R1, #1 
    /*000104a4*/ CMP         R1, IP 
    /*000104a8*/ ADD         R2, FP, R3 
    /*000104ac*/ STR         R2, [FP, R3] 
    /*000104b0*/ STR         R2, [R2, #4] 
    /*000104b4*/ LDR         FP, [R0, #16] 
    /*000104b8*/ ADD         R2, FP, R3 
    /*000104bc*/ STR         R2, [FP, R3] 
    /*000104c0*/ ADD         R3, R3, #8 
    /*000104c4*/ STR         R2, [R2, #4] 
    /*000104c8*/ BNE         GDC_InitBuf_x1049c
    /*000104cc*/ LDR         R3, [R8, #-20]              @ 0xffffffec 
    GDC_InitBuf_x104d0:
    /*000104d0*/ ADD         LR, LR, #1 
    /*000104d4*/ ADD         R7, R7, R9 
    /*000104d8*/ CMP         LR, R3 
    /*000104dc*/ BCC         GDC_InitBuf_x1048c
    GDC_InitBuf_x104e0:
    /*000104e0*/ ADD         R0, R0, #4 
    /*000104e4*/ CMP         SL, R0 
    /*000104e8*/ BNE         GDC_InitBuf_x10470
    /*000104ec*/ LSL         R8, R6, #2 
    /*000104f0*/ MOV         R0, R8 
    /*000104f4*/ BL          0x00000000000104F4          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*000104f8*/ CMP         R0, #0 
    /*000104fc*/ STR         R0, [R4, #4] 
    /*00010500*/ BEQ         GDC_InitBuf_x10754
    /*00010504*/ MOV         R7, #184                    @ 0xb8 
    /*00010508*/ MOV         R2, R8 
    /*0001050c*/ MUL         R8, R7, R6 
    /*00010510*/ MOV         R1, #0 
    /*00010514*/ BL          0x0000000000010514          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00010518*/ MOV         R0, R8 
    /*0001051c*/ BL          0x000000000001051C          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00010520*/ SUBS        R9, R0, #0 
    /*00010524*/ BEQ         GDC_InitBuf_x1070c
    /*00010528*/ MOV         R2, R8 
    /*0001052c*/ MOV         R1, #0 
    /*00010530*/ BL          0x0000000000010530          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00010534*/ CMP         R6, #0 
    /*00010538*/ STR         R9, [R4] 
    /*0001053c*/ BEQ         GDC_InitBuf_x1059c
    /*00010540*/ MOV         R8, #0 
    /*00010544*/ MOV         SL, R8 
    /*00010548*/ B           GDC_InitBuf_x10550
    GDC_InitBuf_x1054c:
    /*0001054c*/ LDR         R9, [R4] 
    GDC_InitBuf_x10550:
    /*00010550*/ MLA         R9, R7, R8, R9 
    /*00010554*/ ADD         R0, R9, #84                 @ 0x54 
    /*00010558*/ BL          0x0000000000010558          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*0001055c*/ LDR         R2, [R4, #4] 
    /*00010560*/ ADD         R3, R9, #8 
    /*00010564*/ MOV         R1, R9 
    /*00010568*/ MOV         R0, R4 
    /*0001056c*/ STR         R9, [R2, R8, LSL #2] 
    /*00010570*/ STR         R8, [R9, #88]               @ 0x58 
    /*00010574*/ ADD         R8, R8, #1 
    /*00010578*/ STR         SL, [R9, #16] 
    /*0001057c*/ STR         SL, [R9, #108]              @ 0x6c 
    /*00010580*/ STR         SL, [R9, #112]              @ 0x70 
    /*00010584*/ STR         SL, [R9, #92]               @ 0x5c 
    /*00010588*/ STR         R3, [R9, #8] 
    /*0001058c*/ STR         R3, [R9, #12] 
    /*00010590*/ BL          0x0000000000010590          @ GDC_PutJobToFreeList [R_ARM_CALL: .text+0x102e4] 
    /*00010594*/ CMP         R6, R8 
    /*00010598*/ BNE         GDC_InitBuf_x1054c
    GDC_InitBuf_x1059c:
    /*0001059c*/ LDR         R3, [SP, #68]               @ 0x44 
    /*000105a0*/ MOV         R9, #2176                   @ 0x880 
    /*000105a4*/ MOV         R2, #16 
    /*000105a8*/ MOV         R1, #0 
    /*000105ac*/ MOV         R0, R5 
    /*000105b0*/ ADD         R6, R5, #4 
    /*000105b4*/ MUL         R8, R9, R3 
    /*000105b8*/ BL          0x00000000000105B8          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000105bc*/ STR         R6, [R5, #4] 
    /*000105c0*/ STR         R6, [R5, #8] 
    /*000105c4*/ MOV         R0, R8 
    /*000105c8*/ BL          0x00000000000105C8          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*000105cc*/ SUBS        R7, R0, #0 
    /*000105d0*/ BEQ         GDC_InitBuf_x10694
    /*000105d4*/ MOV         R2, R8 
    /*000105d8*/ MOV         R1, #0 
    /*000105dc*/ BL          0x00000000000105DC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000105e0*/ LDR         R3, [SP, #68]               @ 0x44 
    /*000105e4*/ STR         R7, [R5] 
    /*000105e8*/ CMP         R3, #0 
    /*000105ec*/ BEQ         GDC_InitBuf_x10644
    /*000105f0*/ MOV         R2, #0 
    /*000105f4*/ MOV         R0, R7 
    /*000105f8*/ MOV         R1, R2 
    /*000105fc*/ MVN         LR, #0 
    /*00010600*/ MOV         R7, R3 
    /*00010604*/ B           GDC_InitBuf_x1060c
    GDC_InitBuf_x10608:
    /*00010608*/ LDR         R0, [R5] 
    GDC_InitBuf_x1060c:
    /*0001060c*/ ADD         R3, R0, R2 
    /*00010610*/ ADD         R1, R1, #1 
    /*00010614*/ CMP         R7, R1 
    /*00010618*/ STR         LR, [R3, #784]              @ 0x310 
    /*0001061c*/ LDR         IP, [R5, #8] 
    /*00010620*/ STR         R3, [R5, #8] 
    /*00010624*/ STR         R6, [R0, R2] 
    /*00010628*/ ADD         R2, R2, #2176               @ 0x880 
    /*0001062c*/ STR         IP, [R3, #4] 
    /*00010630*/ STR         R3, [IP] 
    /*00010634*/ LDR         R3, [R5, #12] 
    /*00010638*/ ADD         R3, R3, #1 
    /*0001063c*/ STR         R3, [R5, #12] 
    /*00010640*/ BNE         GDC_InitBuf_x10608
    GDC_InitBuf_x10644:
    /*00010644*/ LDR         R0, [SP, #16] 
    /*00010648*/ LDR         R1, [SP, #72]               @ 0x48 
    /*0001064c*/ BL          0x000000000000FCDC 
    /*00010650*/ SUBS        R8, R0, #0 
    /*00010654*/ BNE         GDC_InitBuf_x10678
    /*00010658*/ LDR         R0, [SP, #20] 
    /*0001065c*/ LDR         R1, [SP, #72]               @ 0x48 
    /*00010660*/ BL          0x000000000000FCDC 
    /*00010664*/ SUBS        R8, R0, #0 
    /*00010668*/ BNE         GDC_InitBuf_x10678
    GDC_InitBuf_x1066c:
    /*0001066c*/ MOV         R0, R8 
    /*00010670*/ ADD         SP, SP, #28 
    /*00010674*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_InitBuf_x10678:
    /*00010678*/ MOV         R0, R4 
    /*0001067c*/ BL          0x000000000000FBFC 
    /*00010680*/ MOV         R0, R5 
    /*00010684*/ BL          0x000000000000FB4C 
    /*00010688*/ MOV         R0, R8 
    /*0001068c*/ ADD         SP, SP, #28 
    /*00010690*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_InitBuf_x10694:
    /*00010694*/ LDR         R2, [SP, #68]               @ 0x44 
    /*00010698*/ MOV         R1, #37                     @ 0x25 
    /*0001069c*/ STR         R9, [SP, #8] 
    /*000106a0*/ MOVW        R3, #322                    @ 0x142 
    /*000106a4*/ MOV         R0, #1 
    /*000106a8*/ STR         R3, [SP] 
    /*000106ac*/ STR         R2, [SP, #4] 
    /*000106b0*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4178] 
    /*000106b4*/ LDR         R3, [PC, #200]              @ 0x0000000000010784 
    /*000106b8*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4178] 
    /*000106bc*/ BL          0x00000000000106BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000106c0*/ MOV         R0, R4 
    /*000106c4*/ BL          0x000000000000FBFC 
    /*000106c8*/ MOVW        R8, #32781                  @ 0x800d 
    /*000106cc*/ MOVT        R8, #40997                  @ 0xa025 
    /*000106d0*/ MOV         R0, R8 
    /*000106d4*/ ADD         SP, SP, #28 
    /*000106d8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_InitBuf_x106dc:
    /*000106dc*/ MOV         R3, #64                     @ 0x40 
    /*000106e0*/ STR         R9, [SP, #4] 
    /*000106e4*/ STR         R3, [SP] 
    /*000106e8*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x40a8] 
    /*000106ec*/ LDR         R3, [PC, #148]              @ 0x0000000000010788 
    /*000106f0*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x40a8] 
    /*000106f4*/ MOV         R1, #37                     @ 0x25 
    /*000106f8*/ MOV         R0, #3 
    /*000106fc*/ MOVW        R8, #32781                  @ 0x800d 
    /*00010700*/ BL          0x0000000000010700          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010704*/ MOVT        R8, #40997                  @ 0xa025 
    /*00010708*/ B           GDC_InitBuf_x1066c
    GDC_InitBuf_x1070c:
    /*0001070c*/ MOV         R0, R4 
    /*00010710*/ MOVW        R8, #32781                  @ 0x800d 
    /*00010714*/ BL          0x000000000000FAA4 
    /*00010718*/ LDR         R0, [R4, #4] 
    /*0001071c*/ BL          0x000000000001071C          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00010720*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4130] 
    /*00010724*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4130] 
    /*00010728*/ STR         R9, [R4, #4] 
    /*0001072c*/ MOV         R3, #209                    @ 0xd1 
    /*00010730*/ STR         R7, [SP, #8] 
    /*00010734*/ STR         R6, [SP, #4] 
    /*00010738*/ STR         R3, [SP] 
    GDC_InitBuf_x1073c:
    /*0001073c*/ LDR         R3, [PC, #72]               @ 0x000000000001078c 
    /*00010740*/ MOV         R1, #37                     @ 0x25 
    /*00010744*/ MOV         R0, #1 
    /*00010748*/ MOVT        R8, #40997                  @ 0xa025 
    /*0001074c*/ BL          0x000000000001074C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010750*/ B           GDC_InitBuf_x1066c
    GDC_InitBuf_x10754:
    /*00010754*/ MOV         R0, R4 
    /*00010758*/ MOVW        R8, #32781                  @ 0x800d 
    /*0001075c*/ BL          0x000000000000FAA4 
    /*00010760*/ MOV         R2, #4 
    /*00010764*/ MOV         R3, #188                    @ 0xbc 
    /*00010768*/ STR         R2, [SP, #8] 
    /*0001076c*/ STR         R6, [SP, #4] 
    /*00010770*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x40e4] 
    /*00010774*/ STR         R3, [SP] 
    /*00010778*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x40e4] 
    /*0001077c*/ B           GDC_InitBuf_x1073c
    /*00010780*/ ANDEQ       R0, R0, R0, LSL R0          @ g_stGdcCallerCtx [R_ARM_ABS32: .bss+0xc] 
    /*00010784*/ LDRDEQ      R0, [R0], -R4 
    /*00010788*/ @           <UNDEFINED> instruction: 0x00000ab0 
    /*0001078c*/ ANDEQ       R0, R0, R4, ASR #21 
FUNC_END GDC_InitBuf


FUNC_BEGIN GDC_QueryCreatedJobNum
    /*00010790*/ LDR         R0, [R0, #64]               @ 0x40 
    /*00010794*/ BX          LR 
FUNC_END GDC_QueryCreatedJobNum


FUNC_BEGIN GDC_GetJobFromCreatedList
    /*00010798*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001079c*/ ADD         R3, R0, #20 
    /*000107a0*/ LDR         R2, [R0, #20] 
    /*000107a4*/ SUB         SP, SP, #12 
    /*000107a8*/ CMP         R2, R3 
    /*000107ac*/ BEQ         GDC_GetJobFromCreatedList_x107e8
    /*000107b0*/ LDR         IP, [R1, #4] 
    /*000107b4*/ MOV         R2, #256                    @ 0x100 
    /*000107b8*/ LDR         LR, [R1] 
    /*000107bc*/ MOVT        R2, #16 
    /*000107c0*/ MOV         R3, #512                    @ 0x200 
    /*000107c4*/ MOVT        R3, #32 
    /*000107c8*/ STR         IP, [LR, #4] 
    /*000107cc*/ STR         LR, [IP] 
    /*000107d0*/ STM         R1, {R2, R3} 
    /*000107d4*/ LDR         R3, [R0, #64]               @ 0x40 
    /*000107d8*/ SUB         R3, R3, #1 
    /*000107dc*/ STR         R3, [R0, #64]               @ 0x40 
    GDC_GetJobFromCreatedList_x107e0:
    /*000107e0*/ ADD         SP, SP, #12 
    /*000107e4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    GDC_GetJobFromCreatedList_x107e8:
    /*000107e8*/ MOV         R3, #768                    @ 0x300 
    /*000107ec*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x41c4] 
    /*000107f0*/ STR         R3, [SP] 
    /*000107f4*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x41c4] 
    /*000107f8*/ LDR         R3, [PC, #12]               @ 0x000000000001080c 
    /*000107fc*/ MOV         R1, #37                     @ 0x25 
    /*00010800*/ MOV         R0, #0 
    /*00010804*/ BL          0x0000000000010804          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010808*/ B           GDC_GetJobFromCreatedList_x107e0
    /*0001080c*/ ANDEQ       R0, R0, R4, ROR #21 
FUNC_END GDC_GetJobFromCreatedList


FUNC_BEGIN GDC_PutJobToCreatedList
    /*00010810*/ LDR         R3, [R0, #24] 
    /*00010814*/ ADD         R2, R0, #20 
    /*00010818*/ STR         R1, [R0, #24] 
    /*0001081c*/ STM         R1, {R2, R3} 
    /*00010820*/ STR         R1, [R3] 
    /*00010824*/ LDR         R3, [R0, #64]               @ 0x40 
    /*00010828*/ ADD         R3, R3, #1 
    /*0001082c*/ STR         R3, [R0, #64]               @ 0x40 
    /*00010830*/ BX          LR 
FUNC_END GDC_PutJobToCreatedList


FUNC_BEGIN GDC_GetFirstJobFromBusyList
    /*00010834*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00010838*/ SUB         SP, SP, #16 
    /*0001083c*/ MOV         R8, R1 
    /*00010840*/ MOV         R7, R2 
    /*00010844*/ MOV         R6, R3 
    /*00010848*/ MOV         SL, R0 
    /*0001084c*/ BL          0x000000000001084C          @ GDC_HiModId2CallerId [R_ARM_CALL: .text+0xe20] 
    /*00010850*/ STR         R7, [SP] 
    /*00010854*/ MOV         R3, R8 
    /*00010858*/ MOV         R1, #8 
    /*0001085c*/ ADD         R9, R6, R0, LSL #2 
    /*00010860*/ MOV         R2, R0 
    /*00010864*/ MOV         R5, R0 
    /*00010868*/ LDR         R0, [R9, #28] 
    /*0001086c*/ BL          0x000000000001086C          @ GDC_GetPointerByOffset [R_ARM_CALL: .text+0xe5c] 
    /*00010870*/ LDR         R4, [R0] 
    /*00010874*/ CMP         R0, R4 
    /*00010878*/ BEQ         GDC_GetFirstJobFromBusyList_x10908
    /*0001087c*/ CMP         R4, #0 
    /*00010880*/ BEQ         GDC_GetFirstJobFromBusyList_x108e8
    GDC_GetFirstJobFromBusyList_x10884:
    /*00010884*/ LDR         R1, [R4, #4] 
    /*00010888*/ MOV         R3, R8 
    /*0001088c*/ LDR         LR, [R4] 
    /*00010890*/ MOV         IP, #256                    @ 0x100 
    /*00010894*/ MOV         R0, #512                    @ 0x200 
    /*00010898*/ MOVT        IP, #16 
    /*0001089c*/ MOVT        R0, #32 
    /*000108a0*/ MOV         R2, R5 
    /*000108a4*/ STR         R1, [LR, #4] 
    /*000108a8*/ STR         LR, [R1] 
    /*000108ac*/ MOV         R1, #1 
    /*000108b0*/ STR         IP, [R4] 
    /*000108b4*/ STR         R0, [R4, #4] 
    /*000108b8*/ LDR         R0, [R9, #68]               @ 0x44 
    /*000108bc*/ STR         R7, [SP] 
    /*000108c0*/ BL          0x00000000000108C0          @ GDC_GetPointerByOffset [R_ARM_CALL: .text+0xe5c] 
    /*000108c4*/ LDRB        R3, [R0] 
    /*000108c8*/ SUB         R3, R3, #1 
    /*000108cc*/ STRB        R3, [R0] 
    /*000108d0*/ LDR         R3, [R6, #116]              @ 0x74 
    /*000108d4*/ SUB         R3, R3, #1 
    /*000108d8*/ STR         R3, [R6, #116]              @ 0x74 
    GDC_GetFirstJobFromBusyList_x108dc:
    /*000108dc*/ MOV         R0, R4 
    /*000108e0*/ ADD         SP, SP, #16 
    /*000108e4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    GDC_GetFirstJobFromBusyList_x108e8:
    /*000108e8*/ MOVW        R3, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4230] 
    /*000108ec*/ MOVW        R0, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f70] 
    /*000108f0*/ MOVT        R3, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4230] 
    /*000108f4*/ MOVT        R0, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f70] 
    /*000108f8*/ MOV         R2, #808                    @ 0x328 
    /*000108fc*/ LDR         R1, [PC, #56]               @ 0x000000000001093c 
    /*00010900*/ BL          0x0000000000010900          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00010904*/ B           GDC_GetFirstJobFromBusyList_x10884
    GDC_GetFirstJobFromBusyList_x10908:
    /*00010908*/ MOVW        R3, #803                    @ 0x323 
    /*0001090c*/ STR         R7, [SP, #12] 
    /*00010910*/ STR         R3, [SP] 
    /*00010914*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x41f4] 
    /*00010918*/ STR         R8, [SP, #8] 
    /*0001091c*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x41f4] 
    /*00010920*/ STR         SL, [SP, #4] 
    /*00010924*/ MOV         R1, #37                     @ 0x25 
    /*00010928*/ LDR         R3, [PC, #12]               @ 0x000000000001093c 
    /*0001092c*/ MOV         R0, #4 
    /*00010930*/ BL          0x0000000000010930          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010934*/ MOV         R4, #0 
    /*00010938*/ B           GDC_GetFirstJobFromBusyList_x108dc
    /*0001093c*/ ANDEQ       R0, R0, R0, LSL #22 
FUNC_END GDC_GetFirstJobFromBusyList


FUNC_BEGIN GDC_QueryFirstJobFromBusyList
    /*00010940*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00010944*/ SUB         SP, SP, #20 
    /*00010948*/ MOV         R5, R1 
    /*0001094c*/ MOV         R6, R2 
    /*00010950*/ MOV         R4, R3 
    /*00010954*/ MOV         R7, R0 
    /*00010958*/ BL          0x0000000000010958          @ GDC_HiModId2CallerId [R_ARM_CALL: .text+0xe20] 
    /*0001095c*/ STR         R6, [SP] 
    /*00010960*/ MOV         R3, R5 
    /*00010964*/ MOV         R1, #8 
    /*00010968*/ ADD         R4, R4, R0, LSL #2 
    /*0001096c*/ MOV         R2, R0 
    /*00010970*/ LDR         R0, [R4, #28] 
    /*00010974*/ BL          0x0000000000010974          @ GDC_GetPointerByOffset [R_ARM_CALL: .text+0xe5c] 
    /*00010978*/ LDR         R4, [R0] 
    /*0001097c*/ CMP         R0, R4 
    /*00010980*/ BEQ         GDC_QueryFirstJobFromBusyList_x109c0
    /*00010984*/ CMP         R4, #0 
    /*00010988*/ MOVNE       R0, R4 
    /*0001098c*/ BEQ         GDC_QueryFirstJobFromBusyList_x10998
    GDC_QueryFirstJobFromBusyList_x10990:
    /*00010990*/ ADD         SP, SP, #20 
    /*00010994*/ POP         {R4, R5, R6, R7, PC} 
    GDC_QueryFirstJobFromBusyList_x10998:
    /*00010998*/ MOVW        R2, #841                    @ 0x349 
    /*0001099c*/ LDR         R1, [PC, #80]               @ 0x00000000000109f4 
    /*000109a0*/ MOVW        R3, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4230] 
    /*000109a4*/ MOVW        R0, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f70] 
    /*000109a8*/ MOVT        R3, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4230] 
    /*000109ac*/ MOVT        R0, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f70] 
    /*000109b0*/ BL          0x00000000000109B0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000109b4*/ MOV         R0, R4 
    /*000109b8*/ ADD         SP, SP, #20 
    /*000109bc*/ POP         {R4, R5, R6, R7, PC} 
    GDC_QueryFirstJobFromBusyList_x109c0:
    /*000109c0*/ MOV         R3, #836                    @ 0x344 
    /*000109c4*/ STR         R6, [SP, #12] 
    /*000109c8*/ STR         R3, [SP] 
    /*000109cc*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x41f4] 
    /*000109d0*/ STR         R5, [SP, #8] 
    /*000109d4*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x41f4] 
    /*000109d8*/ STR         R7, [SP, #4] 
    /*000109dc*/ MOV         R1, #37                     @ 0x25 
    /*000109e0*/ LDR         R3, [PC, #12]               @ 0x00000000000109f4 
    /*000109e4*/ MOV         R0, #4 
    /*000109e8*/ BL          0x00000000000109E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000109ec*/ MOV         R0, #0 
    /*000109f0*/ B           GDC_QueryFirstJobFromBusyList_x10990
    /*000109f4*/ ANDEQ       R0, R0, IP, LSL FP 
FUNC_END GDC_QueryFirstJobFromBusyList


FUNC_BEGIN GDC_GetJobFromBusyList
    /*000109f8*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000109fc*/ SUB         SP, SP, #12 
    /*00010a00*/ MOV         R8, R1 
    /*00010a04*/ MOV         R7, R2 
    /*00010a08*/ MOV         R6, R3 
    /*00010a0c*/ LDR         R4, [SP, #40]               @ 0x28 
    /*00010a10*/ BL          0x0000000000010A10          @ GDC_HiModId2CallerId [R_ARM_CALL: .text+0xe20] 
    /*00010a14*/ STR         R7, [SP] 
    /*00010a18*/ MOV         R3, R8 
    /*00010a1c*/ MOV         R1, #8 
    /*00010a20*/ ADD         R9, R6, R0, LSL #2 
    /*00010a24*/ MOV         R2, R0 
    /*00010a28*/ MOV         R5, R0 
    /*00010a2c*/ LDR         R0, [R9, #28] 
    /*00010a30*/ BL          0x0000000000010A30          @ GDC_GetPointerByOffset [R_ARM_CALL: .text+0xe5c] 
    /*00010a34*/ LDR         R3, [R0] 
    /*00010a38*/ CMP         R3, R0 
    /*00010a3c*/ BEQ         GDC_GetJobFromBusyList_x10a9c
    /*00010a40*/ LDR         R0, [R9, #68]               @ 0x44 
    /*00010a44*/ MOV         R3, R8 
    /*00010a48*/ MOV         R2, R5 
    /*00010a4c*/ STR         R7, [SP] 
    /*00010a50*/ MOV         R1, #1 
    /*00010a54*/ BL          0x0000000000010A54          @ GDC_GetPointerByOffset [R_ARM_CALL: .text+0xe5c] 
    /*00010a58*/ LDR         R1, [R4, #4] 
    /*00010a5c*/ LDR         IP, [R4] 
    /*00010a60*/ MOV         R2, #256                    @ 0x100 
    /*00010a64*/ MOV         R3, #512                    @ 0x200 
    /*00010a68*/ MOVT        R2, #16 
    /*00010a6c*/ MOVT        R3, #32 
    /*00010a70*/ STR         R1, [IP, #4] 
    /*00010a74*/ STR         IP, [R1] 
    /*00010a78*/ STM         R4, {R2, R3} 
    /*00010a7c*/ LDRB        R3, [R0] 
    /*00010a80*/ SUB         R3, R3, #1 
    /*00010a84*/ STRB        R3, [R0] 
    /*00010a88*/ LDR         R3, [R6, #116]              @ 0x74 
    /*00010a8c*/ SUB         R3, R3, #1 
    /*00010a90*/ STR         R3, [R6, #116]              @ 0x74 
    /*00010a94*/ ADD         SP, SP, #12 
    /*00010a98*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    GDC_GetJobFromBusyList_x10a9c:
    /*00010a9c*/ MOV         R3, #864                    @ 0x360 
    /*00010aa0*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4248] 
    /*00010aa4*/ STR         R3, [SP, #40]               @ 0x28 
    /*00010aa8*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4248] 
    /*00010aac*/ LDR         R3, [PC, #16]               @ 0x0000000000010ac4 
    /*00010ab0*/ MOV         R1, #37                     @ 0x25 
    /*00010ab4*/ MOV         R0, #0 
    /*00010ab8*/ ADD         SP, SP, #12 
    /*00010abc*/ POP         {R4, R5, R6, R7, R8, R9, LR} 
    GDC_GetJobFromBusyList_x10ac0:
    /*00010ac0*/ B           GDC_GetJobFromBusyList_x10ac0@ HI_LOG [R_ARM_JUMP24: +0x0] 
    /*00010ac4*/ ANDEQ       R0, R0, IP, LSR FP 
FUNC_END GDC_GetJobFromBusyList


FUNC_BEGIN GDC_PutJobToBusyList
    /*00010ac8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00010acc*/ SUB         SP, SP, #8 
    /*00010ad0*/ MOV         R5, R3 
    /*00010ad4*/ MOV         R9, R1 
    /*00010ad8*/ LDR         R4, [SP, #40]               @ 0x28 
    /*00010adc*/ MOV         R8, R2 
    /*00010ae0*/ BL          0x0000000000010AE0          @ GDC_HiModId2CallerId [R_ARM_CALL: .text+0xe20] 
    /*00010ae4*/ STR         R8, [SP] 
    /*00010ae8*/ MOV         R3, R9 
    /*00010aec*/ MOV         R1, #8 
    /*00010af0*/ ADD         SL, R5, R0, LSL #2 
    /*00010af4*/ MOV         R7, R0 
    /*00010af8*/ MOV         R2, R0 
    /*00010afc*/ LDR         R0, [SL, #28] 
    /*00010b00*/ BL          0x0000000000010B00          @ GDC_GetPointerByOffset [R_ARM_CALL: .text+0xe5c] 
    /*00010b04*/ MOV         R3, R9 
    /*00010b08*/ MOV         R2, R7 
    /*00010b0c*/ MOV         R1, #1 
    /*00010b10*/ MOV         R6, R0 
    /*00010b14*/ LDR         R0, [SL, #68]               @ 0x44 
    /*00010b18*/ STR         R8, [SP] 
    /*00010b1c*/ BL          0x0000000000010B1C          @ GDC_GetPointerByOffset [R_ARM_CALL: .text+0xe5c] 
    /*00010b20*/ LDR         R3, [R6, #4] 
    /*00010b24*/ STR         R4, [R6, #4] 
    /*00010b28*/ STR         R6, [R4] 
    /*00010b2c*/ STR         R3, [R4, #4] 
    /*00010b30*/ STR         R4, [R3] 
    /*00010b34*/ LDRB        R3, [R0] 
    /*00010b38*/ ADD         R3, R3, #1 
    /*00010b3c*/ STRB        R3, [R0] 
    /*00010b40*/ LDR         R3, [R5, #116]              @ 0x74 
    /*00010b44*/ ADD         R3, R3, #1 
    /*00010b48*/ STR         R3, [R5, #116]              @ 0x74 
    /*00010b4c*/ ADD         SP, SP, #8 
    /*00010b50*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END GDC_PutJobToBusyList


FUNC_BEGIN GDC_QueryBusyJobNum
    /*00010b54*/ PUSH        {R4, R5, R6, LR} 
    /*00010b58*/ SUB         SP, SP, #8 
    /*00010b5c*/ MOV         R5, R1 
    /*00010b60*/ MOV         R6, R2 
    /*00010b64*/ MOV         R4, R3 
    /*00010b68*/ BL          0x0000000000010B68          @ GDC_HiModId2CallerId [R_ARM_CALL: .text+0xe20] 
    /*00010b6c*/ STR         R6, [SP] 
    /*00010b70*/ MOV         R3, R5 
    /*00010b74*/ MOV         R1, #1 
    /*00010b78*/ ADD         R4, R4, R0, LSL #2 
    /*00010b7c*/ MOV         R2, R0 
    /*00010b80*/ LDR         R0, [R4, #68]               @ 0x44 
    /*00010b84*/ BL          0x0000000000010B84          @ GDC_GetPointerByOffset [R_ARM_CALL: .text+0xe5c] 
    /*00010b88*/ LDRB        R0, [R0] 
    /*00010b8c*/ ADD         SP, SP, #8 
    /*00010b90*/ POP         {R4, R5, R6, PC} 
FUNC_END GDC_QueryBusyJobNum


FUNC_BEGIN GDC_QueryBusyTotalJobNum
    /*00010b94*/ LDR         R0, [R0, #116]              @ 0x74 
    /*00010b98*/ BX          LR 
FUNC_END GDC_QueryBusyTotalJobNum


FUNC_BEGIN GDC_GetJobFromProcList
    /*00010b9c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00010ba0*/ SUB         SP, SP, #12 
    /*00010ba4*/ MOV         R8, R1 
    /*00010ba8*/ MOV         R7, R2 
    /*00010bac*/ MOV         R6, R3 
    /*00010bb0*/ LDR         R4, [SP, #40]               @ 0x28 
    /*00010bb4*/ BL          0x0000000000010BB4          @ GDC_HiModId2CallerId [R_ARM_CALL: .text+0xe20] 
    /*00010bb8*/ STR         R7, [SP] 
    /*00010bbc*/ MOV         R3, R8 
    /*00010bc0*/ MOV         R1, #8 
    /*00010bc4*/ ADD         R9, R6, R0, LSL #2 
    /*00010bc8*/ MOV         R2, R0 
    /*00010bcc*/ MOV         R5, R0 
    /*00010bd0*/ LDR         R0, [R9, #44]               @ 0x2c 
    /*00010bd4*/ BL          0x0000000000010BD4          @ GDC_GetPointerByOffset [R_ARM_CALL: .text+0xe5c] 
    /*00010bd8*/ LDR         R3, [R0] 
    /*00010bdc*/ CMP         R3, R0 
    /*00010be0*/ BEQ         GDC_GetJobFromProcList_x10c40
    /*00010be4*/ LDR         R0, [R9, #84]               @ 0x54 
    /*00010be8*/ MOV         R3, R8 
    /*00010bec*/ MOV         R2, R5 
    /*00010bf0*/ STR         R7, [SP] 
    /*00010bf4*/ MOV         R1, #1 
    /*00010bf8*/ BL          0x0000000000010BF8          @ GDC_GetPointerByOffset [R_ARM_CALL: .text+0xe5c] 
    /*00010bfc*/ LDR         R1, [R4, #4] 
    /*00010c00*/ LDR         IP, [R4] 
    /*00010c04*/ MOV         R2, #256                    @ 0x100 
    /*00010c08*/ MOV         R3, #512                    @ 0x200 
    /*00010c0c*/ MOVT        R2, #16 
    /*00010c10*/ MOVT        R3, #32 
    /*00010c14*/ STR         R1, [IP, #4] 
    /*00010c18*/ STR         IP, [R1] 
    /*00010c1c*/ STM         R4, {R2, R3} 
    /*00010c20*/ LDRB        R3, [R0] 
    /*00010c24*/ SUB         R3, R3, #1 
    /*00010c28*/ STRB        R3, [R0] 
    /*00010c2c*/ LDR         R3, [R6, #120]              @ 0x78 
    /*00010c30*/ SUB         R3, R3, #1 
    /*00010c34*/ STR         R3, [R6, #120]              @ 0x78 
    /*00010c38*/ ADD         SP, SP, #12 
    /*00010c3c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    GDC_GetJobFromProcList_x10c40:
    /*00010c40*/ MOVW        R3, #937                    @ 0x3a9 
    /*00010c44*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4274] 
    /*00010c48*/ STR         R3, [SP, #40]               @ 0x28 
    /*00010c4c*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4274] 
    /*00010c50*/ LDR         R3, [PC, #16]               @ 0x0000000000010c68 
    /*00010c54*/ MOV         R1, #37                     @ 0x25 
    /*00010c58*/ MOV         R0, #0 
    /*00010c5c*/ ADD         SP, SP, #12 
    /*00010c60*/ POP         {R4, R5, R6, R7, R8, R9, LR} 
    GDC_GetJobFromProcList_x10c64:
    /*00010c64*/ B           GDC_GetJobFromProcList_x10c64@ HI_LOG [R_ARM_JUMP24: +0x0] 
    /*00010c68*/ ANDEQ       R0, R0, R4, ASR FP 
FUNC_END GDC_GetJobFromProcList


FUNC_BEGIN GDC_PutJobToProcList
    /*00010c6c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00010c70*/ SUB         SP, SP, #8 
    /*00010c74*/ MOV         R5, R3 
    /*00010c78*/ MOV         R9, R1 
    /*00010c7c*/ LDR         R4, [SP, #40]               @ 0x28 
    /*00010c80*/ MOV         R8, R2 
    /*00010c84*/ BL          0x0000000000010C84          @ GDC_HiModId2CallerId [R_ARM_CALL: .text+0xe20] 
    /*00010c88*/ STR         R8, [SP] 
    /*00010c8c*/ MOV         R3, R9 
    /*00010c90*/ MOV         R1, #8 
    /*00010c94*/ ADD         SL, R5, R0, LSL #2 
    /*00010c98*/ MOV         R7, R0 
    /*00010c9c*/ MOV         R2, R0 
    /*00010ca0*/ LDR         R0, [SL, #44]               @ 0x2c 
    /*00010ca4*/ BL          0x0000000000010CA4          @ GDC_GetPointerByOffset [R_ARM_CALL: .text+0xe5c] 
    /*00010ca8*/ MOV         R3, R9 
    /*00010cac*/ MOV         R2, R7 
    /*00010cb0*/ MOV         R1, #1 
    /*00010cb4*/ MOV         R6, R0 
    /*00010cb8*/ LDR         R0, [SL, #84]               @ 0x54 
    /*00010cbc*/ STR         R8, [SP] 
    /*00010cc0*/ BL          0x0000000000010CC0          @ GDC_GetPointerByOffset [R_ARM_CALL: .text+0xe5c] 
    /*00010cc4*/ LDR         R3, [R6, #4] 
    /*00010cc8*/ STR         R4, [R6, #4] 
    /*00010ccc*/ STR         R6, [R4] 
    /*00010cd0*/ STR         R3, [R4, #4] 
    /*00010cd4*/ STR         R4, [R3] 
    /*00010cd8*/ LDRB        R3, [R0] 
    /*00010cdc*/ ADD         R3, R3, #1 
    /*00010ce0*/ STRB        R3, [R0] 
    /*00010ce4*/ LDR         R3, [R5, #120]              @ 0x78 
    /*00010ce8*/ ADD         R3, R3, #1 
    /*00010cec*/ STR         R3, [R5, #120]              @ 0x78 
    /*00010cf0*/ ADD         SP, SP, #8 
    /*00010cf4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END GDC_PutJobToProcList


FUNC_BEGIN GDC_QueryProcJobNum
    /*00010cf8*/ PUSH        {R4, R5, R6, LR} 
    /*00010cfc*/ SUB         SP, SP, #8 
    /*00010d00*/ MOV         R5, R1 
    /*00010d04*/ MOV         R6, R2 
    /*00010d08*/ MOV         R4, R3 
    /*00010d0c*/ BL          0x0000000000010D0C          @ GDC_HiModId2CallerId [R_ARM_CALL: .text+0xe20] 
    /*00010d10*/ STR         R6, [SP] 
    /*00010d14*/ MOV         R3, R5 
    /*00010d18*/ MOV         R1, #1 
    /*00010d1c*/ ADD         R4, R4, R0, LSL #2 
    /*00010d20*/ MOV         R2, R0 
    /*00010d24*/ LDR         R0, [R4, #84]               @ 0x54 
    /*00010d28*/ BL          0x0000000000010D28          @ GDC_GetPointerByOffset [R_ARM_CALL: .text+0xe5c] 
    /*00010d2c*/ LDRB        R0, [R0] 
    /*00010d30*/ ADD         SP, SP, #8 
    /*00010d34*/ POP         {R4, R5, R6, PC} 
FUNC_END GDC_QueryProcJobNum


FUNC_BEGIN GDC_QueryProcTotalJobNum
    /*00010d38*/ LDR         R0, [R0, #120]              @ 0x78 
    /*00010d3c*/ BX          LR 
FUNC_END GDC_QueryProcTotalJobNum


FUNC_BEGIN GDC_LastProcIsRegionCallBack
    /*00010d40*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00010d44*/ MOVW        R6, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00010d48*/ MOVT        R6, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00010d4c*/ SUBS        R7, R3, #0 
    /*00010d50*/ SUB         SP, SP, #16 
    /*00010d54*/ LDR         R4, [R6] 
    /*00010d58*/ ADD         R5, R4, #620                @ 0x26c 
    /*00010d5c*/ BEQ         GDC_LastProcIsRegionCallBack_x10f24
    GDC_LastProcIsRegionCallBack_x10d60:
    /*00010d60*/ ADD         R1, SP, #12 
    /*00010d64*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00010d68*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00010d6c*/ BL          0x0000000000010D6C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00010d70*/ MOVW        R3, #0                      @ g_enGdcModState [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00010d74*/ MOVT        R3, #0                      @ g_enGdcModState [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00010d78*/ LDR         R2, [R6] 
    /*00010d7c*/ LDR         R1, [R3] 
    /*00010d80*/ LDR         R3, [R2, #1440]             @ 0x5a0 
    /*00010d84*/ CMP         R1, #1 
    /*00010d88*/ ADD         R3, R3, #1 
    /*00010d8c*/ STR         R3, [R2, #1440]             @ 0x5a0 
    /*00010d90*/ BEQ         GDC_LastProcIsRegionCallBack_x10e48
    /*00010d94*/ CMP         R2, #0 
    /*00010d98*/ MOVNE       R7, #2 
    /*00010d9c*/ BNE         GDC_LastProcIsRegionCallBack_x10de0
    /*00010da0*/ B           GDC_LastProcIsRegionCallBack_x10df4
    GDC_LastProcIsRegionCallBack_x10da4:
    /*00010da4*/ BL          0x0000000000010DA4          @ GDC_GetNodeFromBusyList [R_ARM_CALL: .text+0xfeb4] 
    /*00010da8*/ SUBS        R4, R0, #0 
    /*00010dac*/ ADD         R3, R4, #8 
    /*00010db0*/ ADD         R2, R4, #4096               @ 0x1000 
    /*00010db4*/ BEQ         GDC_LastProcIsRegionCallBack_x10e0c
    /*00010db8*/ LDR         R6, [R2, #760]              @ 0x2f8 
    /*00010dbc*/ CMP         R6, #0 
    /*00010dc0*/ BEQ         GDC_LastProcIsRegionCallBack_x10dd4
    /*00010dc4*/ ADD         R0, R4, #760                @ 0x2f8 
    /*00010dc8*/ STR         R7, [R4, #772]              @ 0x304 
    /*00010dcc*/ LDM         R0, {R0, R1, R2} 
    /*00010dd0*/ BLX         R6 
    GDC_LastProcIsRegionCallBack_x10dd4:
    /*00010dd4*/ MOV         R1, R4 
    /*00010dd8*/ MOV         R0, R5 
    /*00010ddc*/ BL          0x0000000000010DDC          @ GDC_PutNodeToFreeList [R_ARM_CALL: .text+0xfe90] 
    GDC_LastProcIsRegionCallBack_x10de0:
    /*00010de0*/ MOV         R0, R5 
    /*00010de4*/ BL          0x0000000000010DE4          @ GDC_QueryBusyNodeNum [R_ARM_CALL: .text+0xfddc] 
    /*00010de8*/ CMP         R0, #0 
    /*00010dec*/ MOV         R0, R5 
    /*00010df0*/ BNE         GDC_LastProcIsRegionCallBack_x10da4
    GDC_LastProcIsRegionCallBack_x10df4:
    /*00010df4*/ ADD         R1, SP, #12 
    /*00010df8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00010dfc*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00010e00*/ BL          0x0000000000010E00          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00010e04*/ ADD         SP, SP, #16 
    /*00010e08*/ POP         {R4, R5, R6, R7, R8, PC} 
    GDC_LastProcIsRegionCallBack_x10e0c:
    /*00010e0c*/ MOVW        R2, #638                    @ 0x27e 
    /*00010e10*/ MOV         R1, #37                     @ 0x25 
    /*00010e14*/ STR         R2, [SP] 
    /*00010e18*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xb6c] 
    /*00010e1c*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4300] 
    /*00010e20*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xb6c] 
    /*00010e24*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4300] 
    /*00010e28*/ MOV         R0, #2 
    /*00010e2c*/ BL          0x0000000000010E2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010e30*/ ADD         R1, SP, #12 
    /*00010e34*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00010e38*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00010e3c*/ BL          0x0000000000010E3C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00010e40*/ ADD         SP, SP, #16 
    /*00010e44*/ POP         {R4, R5, R6, R7, R8, PC} 
    GDC_LastProcIsRegionCallBack_x10e48:
    /*00010e48*/ MOV         R3, R4 
    /*00010e4c*/ LDR         R0, [R7, #672]              @ 0x2a0 
    /*00010e50*/ LDR         R2, [R3, #632]!             @ 0x278 
    /*00010e54*/ CMP         R3, R2 
    /*00010e58*/ LDR         R4, [R2] 
    /*00010e5c*/ BEQ         GDC_LastProcIsRegionCallBack_x10f90
    /*00010e60*/ ADD         R6, R2, #4096               @ 0x1000 
    /*00010e64*/ LDR         R1, [R6, #756]              @ 0x2f4 
    /*00010e68*/ CMP         R0, R1 
    /*00010e6c*/ BNE         GDC_LastProcIsRegionCallBack_x10e84
    /*00010e70*/ B           GDC_LastProcIsRegionCallBack_x10f10
    GDC_LastProcIsRegionCallBack_x10e74:
    /*00010e74*/ LDR         R1, [R6, #756]              @ 0x2f4 
    /*00010e78*/ CMP         R0, R1 
    /*00010e7c*/ BEQ         GDC_LastProcIsRegionCallBack_x10f14
    /*00010e80*/ MOV         R4, R2 
    GDC_LastProcIsRegionCallBack_x10e84:
    /*00010e84*/ CMP         R4, R3 
    /*00010e88*/ ADD         R6, R4, #4096               @ 0x1000 
    /*00010e8c*/ LDR         R2, [R4] 
    /*00010e90*/ BNE         GDC_LastProcIsRegionCallBack_x10e74
    GDC_LastProcIsRegionCallBack_x10e94:
    /*00010e94*/ CMP         R4, #0 
    /*00010e98*/ BEQ         GDC_LastProcIsRegionCallBack_x10f6c
    GDC_LastProcIsRegionCallBack_x10e9c:
    /*00010e9c*/ ADDS        R8, R4, #8 
    /*00010ea0*/ BEQ         GDC_LastProcIsRegionCallBack_x10f48
    GDC_LastProcIsRegionCallBack_x10ea4:
    /*00010ea4*/ LDR         R3, [R7, #764]              @ 0x2fc 
    /*00010ea8*/ CMP         R3, #1 
    /*00010eac*/ BEQ         GDC_LastProcIsRegionCallBack_x10ed8
    /*00010eb0*/ MOVW        R2, #678                    @ 0x2a6 
    /*00010eb4*/ STR         R3, [SP, #4] 
    /*00010eb8*/ STR         R2, [SP] 
    /*00010ebc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xb6c] 
    /*00010ec0*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x435c] 
    /*00010ec4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xb6c] 
    /*00010ec8*/ MOV         R1, #37                     @ 0x25 
    /*00010ecc*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x435c] 
    /*00010ed0*/ MOV         R0, #3 
    /*00010ed4*/ BL          0x0000000000010ED4          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_LastProcIsRegionCallBack_x10ed8:
    /*00010ed8*/ LDR         R6, [R6, #760]              @ 0x2f8 
    /*00010edc*/ CMP         R6, #0 
    /*00010ee0*/ BEQ         GDC_LastProcIsRegionCallBack_x10f00
    /*00010ee4*/ LDR         R0, [R7, #764]              @ 0x2fc 
    /*00010ee8*/ MOV         R3, R8 
    /*00010eec*/ LDR         R2, [R4, #768]              @ 0x300 
    /*00010ef0*/ LDR         R1, [R4, #764]              @ 0x2fc 
    /*00010ef4*/ STR         R0, [R4, #772]              @ 0x304 
    /*00010ef8*/ LDR         R0, [R4, #760]              @ 0x2f8 
    /*00010efc*/ BLX         R6 
    GDC_LastProcIsRegionCallBack_x10f00:
    /*00010f00*/ MOV         R1, R4 
    /*00010f04*/ MOV         R0, R5 
    /*00010f08*/ BL          0x0000000000010F08          @ GDC_PutNodeToFreeList [R_ARM_CALL: .text+0xfe90] 
    /*00010f0c*/ B           GDC_LastProcIsRegionCallBack_x10df4
    GDC_LastProcIsRegionCallBack_x10f10:
    /*00010f10*/ MOV         R4, R2 
    GDC_LastProcIsRegionCallBack_x10f14:
    /*00010f14*/ MOV         R1, R4 
    /*00010f18*/ MOV         R0, R5 
    /*00010f1c*/ BL          0x0000000000010F1C          @ GDC_GetCurrentNodeFromBusyList [R_ARM_CALL: .text+0xff84] 
    /*00010f20*/ B           GDC_LastProcIsRegionCallBack_x10e94
    GDC_LastProcIsRegionCallBack_x10f24:
    /*00010f24*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42a4] 
    /*00010f28*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xb6c] 
    /*00010f2c*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42a4] 
    /*00010f30*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xb6c] 
    /*00010f34*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c0] 
    /*00010f38*/ MOVW        R2, #621                    @ 0x26d 
    /*00010f3c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c0] 
    /*00010f40*/ BL          0x0000000000010F40          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00010f44*/ B           GDC_LastProcIsRegionCallBack_x10d60
    GDC_LastProcIsRegionCallBack_x10f48:
    /*00010f48*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4340] 
    /*00010f4c*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xb6c] 
    /*00010f50*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4340] 
    /*00010f54*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xb6c] 
    /*00010f58*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c0] 
    /*00010f5c*/ MOVW        R2, #674                    @ 0x2a2 
    /*00010f60*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c0] 
    /*00010f64*/ BL          0x0000000000010F64          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00010f68*/ B           GDC_LastProcIsRegionCallBack_x10ea4
    GDC_LastProcIsRegionCallBack_x10f6c:
    /*00010f6c*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x432c] 
    /*00010f70*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xb6c] 
    /*00010f74*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x432c] 
    /*00010f78*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xb6c] 
    /*00010f7c*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c0] 
    /*00010f80*/ MOVW        R2, #670                    @ 0x29e 
    /*00010f84*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c0] 
    /*00010f88*/ BL          0x0000000000010F88          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00010f8c*/ B           GDC_LastProcIsRegionCallBack_x10e9c
    GDC_LastProcIsRegionCallBack_x10f90:
    /*00010f90*/ MOV         R4, R3 
    /*00010f94*/ ADD         R6, R3, #4096               @ 0x1000 
    /*00010f98*/ B           GDC_LastProcIsRegionCallBack_x10e94
FUNC_END GDC_LastProcIsRegionCallBack


FUNC_BEGIN GDC_LastProcIsVgsScaleCallBack
    /*00010f9c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00010fa0*/ MOVW        R6, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00010fa4*/ MOVT        R6, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00010fa8*/ SUBS        R7, R3, #0 
    /*00010fac*/ SUB         SP, SP, #16 
    /*00010fb0*/ LDR         R4, [R6] 
    /*00010fb4*/ ADD         R5, R4, #620                @ 0x26c 
    /*00010fb8*/ BEQ         GDC_LastProcIsVgsScaleCallBack_x1117c
    GDC_LastProcIsVgsScaleCallBack_x10fbc:
    /*00010fbc*/ ADD         R1, SP, #12 
    /*00010fc0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00010fc4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00010fc8*/ BL          0x0000000000010FC8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00010fcc*/ MOVW        R3, #0                      @ g_enGdcModState [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00010fd0*/ MOVT        R3, #0                      @ g_enGdcModState [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00010fd4*/ LDR         R2, [R6] 
    /*00010fd8*/ LDR         R1, [R3] 
    /*00010fdc*/ LDR         R3, [R2, #1412]             @ 0x584 
    /*00010fe0*/ CMP         R1, #1 
    /*00010fe4*/ ADD         R3, R3, #1 
    /*00010fe8*/ STR         R3, [R2, #1412]             @ 0x584 
    /*00010fec*/ BEQ         GDC_LastProcIsVgsScaleCallBack_x110a0
    /*00010ff0*/ CMP         R2, #0 
    /*00010ff4*/ MOVNE       R7, #2 
    /*00010ff8*/ BNE         GDC_LastProcIsVgsScaleCallBack_x1103c
    /*00010ffc*/ B           GDC_LastProcIsVgsScaleCallBack_x11050
    GDC_LastProcIsVgsScaleCallBack_x11000:
    /*00011000*/ BL          0x0000000000011000          @ GDC_GetNodeFromBusyList [R_ARM_CALL: .text+0xfeb4] 
    /*00011004*/ SUBS        R4, R0, #0 
    /*00011008*/ ADD         R3, R4, #8 
    /*0001100c*/ ADD         R2, R4, #4096               @ 0x1000 
    /*00011010*/ BEQ         GDC_LastProcIsVgsScaleCallBack_x11068
    /*00011014*/ LDR         R6, [R2, #760]              @ 0x2f8 
    /*00011018*/ CMP         R6, #0 
    /*0001101c*/ BEQ         GDC_LastProcIsVgsScaleCallBack_x11030
    /*00011020*/ ADD         R0, R4, #760                @ 0x2f8 
    /*00011024*/ STR         R7, [R4, #772]              @ 0x304 
    /*00011028*/ LDM         R0, {R0, R1, R2} 
    /*0001102c*/ BLX         R6 
    GDC_LastProcIsVgsScaleCallBack_x11030:
    /*00011030*/ MOV         R1, R4 
    /*00011034*/ MOV         R0, R5 
    /*00011038*/ BL          0x0000000000011038          @ GDC_PutNodeToFreeList [R_ARM_CALL: .text+0xfe90] 
    GDC_LastProcIsVgsScaleCallBack_x1103c:
    /*0001103c*/ MOV         R0, R5 
    /*00011040*/ BL          0x0000000000011040          @ GDC_QueryBusyNodeNum [R_ARM_CALL: .text+0xfddc] 
    /*00011044*/ CMP         R0, #0 
    /*00011048*/ MOV         R0, R5 
    /*0001104c*/ BNE         GDC_LastProcIsVgsScaleCallBack_x11000
    GDC_LastProcIsVgsScaleCallBack_x11050:
    /*00011050*/ ADD         R1, SP, #12 
    /*00011054*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011058*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001105c*/ BL          0x000000000001105C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011060*/ ADD         SP, SP, #16 
    /*00011064*/ POP         {R4, R5, R6, R7, R8, PC} 
    GDC_LastProcIsVgsScaleCallBack_x11068:
    /*00011068*/ MOV         R3, #552                    @ 0x228 
    /*0001106c*/ MOV         R1, #37                     @ 0x25 
    /*00011070*/ STR         R3, [SP] 
    /*00011074*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4300] 
    /*00011078*/ LDR         R3, [PC, #360]              @ 0x00000000000111e8 
    /*0001107c*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4300] 
    /*00011080*/ MOV         R0, #2 
    /*00011084*/ BL          0x0000000000011084          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011088*/ ADD         R1, SP, #12 
    /*0001108c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011090*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011094*/ BL          0x0000000000011094          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011098*/ ADD         SP, SP, #16 
    /*0001109c*/ POP         {R4, R5, R6, R7, R8, PC} 
    GDC_LastProcIsVgsScaleCallBack_x110a0:
    /*000110a0*/ MOV         R3, R4 
    /*000110a4*/ LDR         R0, [R7, #672]              @ 0x2a0 
    /*000110a8*/ LDR         R2, [R3, #632]!             @ 0x278 
    /*000110ac*/ CMP         R3, R2 
    /*000110b0*/ LDR         R4, [R2] 
    /*000110b4*/ BEQ         GDC_LastProcIsVgsScaleCallBack_x111dc
    /*000110b8*/ ADD         R6, R2, #4096               @ 0x1000 
    /*000110bc*/ LDR         R1, [R6, #756]              @ 0x2f4 
    /*000110c0*/ CMP         R0, R1 
    /*000110c4*/ BNE         GDC_LastProcIsVgsScaleCallBack_x110dc
    /*000110c8*/ B           GDC_LastProcIsVgsScaleCallBack_x11168
    GDC_LastProcIsVgsScaleCallBack_x110cc:
    /*000110cc*/ LDR         R1, [R6, #756]              @ 0x2f4 
    /*000110d0*/ CMP         R0, R1 
    /*000110d4*/ BEQ         GDC_LastProcIsVgsScaleCallBack_x1116c
    /*000110d8*/ MOV         R4, R2 
    GDC_LastProcIsVgsScaleCallBack_x110dc:
    /*000110dc*/ CMP         R4, R3 
    /*000110e0*/ ADD         R6, R4, #4096               @ 0x1000 
    /*000110e4*/ LDR         R2, [R4] 
    /*000110e8*/ BNE         GDC_LastProcIsVgsScaleCallBack_x110cc
    GDC_LastProcIsVgsScaleCallBack_x110ec:
    /*000110ec*/ CMP         R4, #0 
    /*000110f0*/ BEQ         GDC_LastProcIsVgsScaleCallBack_x111bc
    GDC_LastProcIsVgsScaleCallBack_x110f4:
    /*000110f4*/ ADDS        R8, R4, #8 
    /*000110f8*/ BEQ         GDC_LastProcIsVgsScaleCallBack_x1119c
    GDC_LastProcIsVgsScaleCallBack_x110fc:
    /*000110fc*/ LDR         R3, [R7, #736]              @ 0x2e0 
    /*00011100*/ CMP         R3, #1 
    /*00011104*/ BEQ         GDC_LastProcIsVgsScaleCallBack_x1112c
    /*00011108*/ STR         R3, [SP, #4] 
    /*0001110c*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x43d4] 
    /*00011110*/ MOV         R3, #592                    @ 0x250 
    /*00011114*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x43d4] 
    /*00011118*/ STR         R3, [SP] 
    /*0001111c*/ MOV         R1, #37                     @ 0x25 
    /*00011120*/ LDR         R3, [PC, #192]              @ 0x00000000000111e8 
    /*00011124*/ MOV         R0, #3 
    /*00011128*/ BL          0x0000000000011128          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_LastProcIsVgsScaleCallBack_x1112c:
    /*0001112c*/ LDR         R3, [R6, #760]              @ 0x2f8 
    /*00011130*/ CMP         R3, #0 
    /*00011134*/ BEQ         GDC_LastProcIsVgsScaleCallBack_x11158
    /*00011138*/ LDR         R1, [R7, #736]              @ 0x2e0 
    /*0001113c*/ ADD         R0, R4, #772                @ 0x304 
    /*00011140*/ BL          0x0000000000011140          @ GDC_GetReturnGdcState [R_ARM_CALL: .text+0xe7c] 
    /*00011144*/ ADD         R0, R4, #760                @ 0x2f8 
    /*00011148*/ LDR         R6, [R6, #760]              @ 0x2f8 
    /*0001114c*/ MOV         R3, R8 
    /*00011150*/ LDM         R0, {R0, R1, R2} 
    /*00011154*/ BLX         R6 
    GDC_LastProcIsVgsScaleCallBack_x11158:
    /*00011158*/ MOV         R1, R4 
    /*0001115c*/ MOV         R0, R5 
    /*00011160*/ BL          0x0000000000011160          @ GDC_PutNodeToFreeList [R_ARM_CALL: .text+0xfe90] 
    /*00011164*/ B           GDC_LastProcIsVgsScaleCallBack_x11050
    GDC_LastProcIsVgsScaleCallBack_x11168:
    /*00011168*/ MOV         R4, R2 
    GDC_LastProcIsVgsScaleCallBack_x1116c:
    /*0001116c*/ MOV         R1, R4 
    /*00011170*/ MOV         R0, R5 
    /*00011174*/ BL          0x0000000000011174          @ GDC_GetCurrentNodeFromBusyList [R_ARM_CALL: .text+0xff84] 
    /*00011178*/ B           GDC_LastProcIsVgsScaleCallBack_x110ec
    GDC_LastProcIsVgsScaleCallBack_x1117c:
    /*0001117c*/ MOVW        R3, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x43b8] 
    /*00011180*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c0] 
    /*00011184*/ MOVT        R3, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x43b8] 
    /*00011188*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c0] 
    /*0001118c*/ MOVW        R2, #527                    @ 0x20f 
    /*00011190*/ LDR         R1, [PC, #80]               @ 0x00000000000111e8 
    /*00011194*/ BL          0x0000000000011194          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011198*/ B           GDC_LastProcIsVgsScaleCallBack_x10fbc
    GDC_LastProcIsVgsScaleCallBack_x1119c:
    /*0001119c*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4340] 
    /*000111a0*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c0] 
    /*000111a4*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4340] 
    /*000111a8*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c0] 
    /*000111ac*/ MOV         R2, #588                    @ 0x24c 
    /*000111b0*/ LDR         R1, [PC, #48]               @ 0x00000000000111e8 
    /*000111b4*/ BL          0x00000000000111B4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000111b8*/ B           GDC_LastProcIsVgsScaleCallBack_x110fc
    GDC_LastProcIsVgsScaleCallBack_x111bc:
    /*000111bc*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x432c] 
    /*000111c0*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c0] 
    /*000111c4*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x432c] 
    /*000111c8*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c0] 
    /*000111cc*/ MOV         R2, #584                    @ 0x248 
    /*000111d0*/ LDR         R1, [PC, #16]               @ 0x00000000000111e8 
    /*000111d4*/ BL          0x00000000000111D4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000111d8*/ B           GDC_LastProcIsVgsScaleCallBack_x110f4
    GDC_LastProcIsVgsScaleCallBack_x111dc:
    /*000111dc*/ MOV         R4, R3 
    /*000111e0*/ ADD         R6, R3, #4096               @ 0x1000 
    /*000111e4*/ B           GDC_LastProcIsVgsScaleCallBack_x110ec
    /*000111e8*/ ANDEQ       R0, R0, IP, LSL #23 
FUNC_END GDC_LastProcIsVgsScaleCallBack


FUNC_BEGIN GDC_ProcVgsScaleFirstCallBack
    /*000111ec*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000111f0*/ MOVW        R7, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*000111f4*/ MOVT        R7, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*000111f8*/ SUBS        R9, R3, #0 
    /*000111fc*/ SUB         SP, SP, #124                @ 0x7c 
    /*00011200*/ LDR         R5, [R7] 
    /*00011204*/ ADD         R4, R5, #620                @ 0x26c 
    /*00011208*/ BEQ         GDC_ProcVgsScaleFirstCallBack_x116ec
    GDC_ProcVgsScaleFirstCallBack_x1120c:
    /*0001120c*/ ADD         R1, SP, #80                 @ 0x50 
    /*00011210*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011214*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011218*/ BL          0x0000000000011218          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001121c*/ MOVW        R3, #0                      @ g_enGdcModState [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00011220*/ MOVT        R3, #0                      @ g_enGdcModState [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00011224*/ LDR         R2, [R7] 
    /*00011228*/ LDR         R1, [R3] 
    /*0001122c*/ LDR         R3, [R2, #1412]             @ 0x584 
    /*00011230*/ CMP         R1, #1 
    /*00011234*/ ADD         R3, R3, #1 
    /*00011238*/ STR         R3, [R2, #1412]             @ 0x584 
    /*0001123c*/ BEQ         GDC_ProcVgsScaleFirstCallBack_x112f0
    /*00011240*/ CMP         R2, #0 
    /*00011244*/ MOVNE       R7, #2 
    /*00011248*/ BNE         GDC_ProcVgsScaleFirstCallBack_x1128c
    /*0001124c*/ B           GDC_ProcVgsScaleFirstCallBack_x112a0
    GDC_ProcVgsScaleFirstCallBack_x11250:
    /*00011250*/ BL          0x0000000000011250          @ GDC_GetNodeFromBusyList [R_ARM_CALL: .text+0xfeb4] 
    /*00011254*/ SUBS        R5, R0, #0 
    /*00011258*/ ADD         R3, R5, #8 
    /*0001125c*/ ADD         R2, R5, #4096               @ 0x1000 
    /*00011260*/ BEQ         GDC_ProcVgsScaleFirstCallBack_x112b8
    /*00011264*/ LDR         R6, [R2, #760]              @ 0x2f8 
    /*00011268*/ CMP         R6, #0 
    /*0001126c*/ BEQ         GDC_ProcVgsScaleFirstCallBack_x11280
    /*00011270*/ ADD         R0, R5, #760                @ 0x2f8 
    /*00011274*/ STR         R7, [R5, #772]              @ 0x304 
    /*00011278*/ LDM         R0, {R0, R1, R2} 
    /*0001127c*/ BLX         R6 
    GDC_ProcVgsScaleFirstCallBack_x11280:
    /*00011280*/ MOV         R1, R5 
    /*00011284*/ MOV         R0, R4 
    /*00011288*/ BL          0x0000000000011288          @ GDC_PutNodeToFreeList [R_ARM_CALL: .text+0xfe90] 
    GDC_ProcVgsScaleFirstCallBack_x1128c:
    /*0001128c*/ MOV         R0, R4 
    /*00011290*/ BL          0x0000000000011290          @ GDC_QueryBusyNodeNum [R_ARM_CALL: .text+0xfddc] 
    /*00011294*/ CMP         R0, #0 
    /*00011298*/ MOV         R0, R4 
    /*0001129c*/ BNE         GDC_ProcVgsScaleFirstCallBack_x11250
    GDC_ProcVgsScaleFirstCallBack_x112a0:
    /*000112a0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000112a4*/ ADD         R1, SP, #80                 @ 0x50 
    /*000112a8*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000112ac*/ BL          0x00000000000112AC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    GDC_ProcVgsScaleFirstCallBack_x112b0:
    /*000112b0*/ ADD         SP, SP, #124                @ 0x7c 
    /*000112b4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcVgsScaleFirstCallBack_x112b8:
    /*000112b8*/ MOVW        R3, #734                    @ 0x2de 
    /*000112bc*/ MOV         R1, #37                     @ 0x25 
    /*000112c0*/ STR         R3, [SP] 
    /*000112c4*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4300] 
    /*000112c8*/ LDR         R3, [PC, #1716]             @ 0x0000000000011984 
    /*000112cc*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4300] 
    /*000112d0*/ MOV         R0, #2 
    /*000112d4*/ BL          0x00000000000112D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000112d8*/ ADD         R1, SP, #80                 @ 0x50 
    /*000112dc*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000112e0*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000112e4*/ BL          0x00000000000112E4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000112e8*/ ADD         SP, SP, #124                @ 0x7c 
    /*000112ec*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcVgsScaleFirstCallBack_x112f0:
    /*000112f0*/ MOV         IP, R5 
    /*000112f4*/ ADD         SL, R9, #688                @ 0x2b0 
    /*000112f8*/ LDR         R3, [IP, #632]!             @ 0x278 
    /*000112fc*/ LDRD        R0, [SL] 
    /*00011300*/ CMP         R3, IP 
    /*00011304*/ LDR         R5, [R3] 
    /*00011308*/ STRD        R0, [SP, #24] 
    /*0001130c*/ BEQ         GDC_ProcVgsScaleFirstCallBack_x11904
    /*00011310*/ ADD         R6, R3, #4096               @ 0x1000 
    /*00011314*/ LDR         R1, [SP, #24] 
    /*00011318*/ LDR         R2, [R6, #756]              @ 0x2f4 
    /*0001131c*/ CMP         R1, R2 
    /*00011320*/ BEQ         GDC_ProcVgsScaleFirstCallBack_x11910
    /*00011324*/ MOV         R1, IP 
    /*00011328*/ B           GDC_ProcVgsScaleFirstCallBack_x1133c
    GDC_ProcVgsScaleFirstCallBack_x1132c:
    /*0001132c*/ LDR         R2, [R6, #756]              @ 0x2f4 
    /*00011330*/ CMP         R0, R2 
    /*00011334*/ BEQ         GDC_ProcVgsScaleFirstCallBack_x1134c
    /*00011338*/ MOV         R5, R3 
    GDC_ProcVgsScaleFirstCallBack_x1133c:
    /*0001133c*/ CMP         R5, R1 
    /*00011340*/ ADD         R6, R5, #4096               @ 0x1000 
    /*00011344*/ LDR         R3, [R5] 
    /*00011348*/ BNE         GDC_ProcVgsScaleFirstCallBack_x1132c
    GDC_ProcVgsScaleFirstCallBack_x1134c:
    /*0001134c*/ CMP         R5, #0 
    /*00011350*/ BEQ         GDC_ProcVgsScaleFirstCallBack_x11814
    GDC_ProcVgsScaleFirstCallBack_x11354:
    /*00011354*/ ADD         R1, SP, #80                 @ 0x50 
    /*00011358*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0001135c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011360*/ ADD         R3, R5, #784                @ 0x310 
    /*00011364*/ STR         R3, [SP, #48]               @ 0x30 
    /*00011368*/ BL          0x0000000000011368          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001136c*/ LDRD        R2, [SL, #-8] 
    /*00011370*/ ADDS        R1, R5, #8 
    /*00011374*/ LDR         R8, [R9, #672]              @ 0x2a0 
    /*00011378*/ STR         R1, [SP, #40]               @ 0x28 
    /*0001137c*/ STRD        R2, [SP, #32] 
    /*00011380*/ STR         R8, [SP, #20] 
    /*00011384*/ STR         R2, [SP, #44]               @ 0x2c 
    /*00011388*/ BEQ         GDC_ProcVgsScaleFirstCallBack_x11834
    GDC_ProcVgsScaleFirstCallBack_x1138c:
    /*0001138c*/ ADD         R3, R5, #784                @ 0x310 
    /*00011390*/ CMP         R3, #0 
    /*00011394*/ BEQ         GDC_ProcVgsScaleFirstCallBack_x11854
    GDC_ProcVgsScaleFirstCallBack_x11398:
    /*00011398*/ LDR         R3, [SP, #32] 
    /*0001139c*/ CMP         R8, R3 
    /*000113a0*/ BCS         GDC_ProcVgsScaleFirstCallBack_x1142c
    GDC_ProcVgsScaleFirstCallBack_x113a4:
    /*000113a4*/ LDR         IP, [R9, #736]              @ 0x2e0 
    /*000113a8*/ CMP         IP, #1 
    /*000113ac*/ BEQ         GDC_ProcVgsScaleFirstCallBack_x1144c
    /*000113b0*/ MOVW        R3, #795                    @ 0x31b 
    /*000113b4*/ STR         IP, [SP, #4] 
    /*000113b8*/ STR         R3, [SP] 
    /*000113bc*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x43d4] 
    /*000113c0*/ LDR         R3, [PC, #1468]             @ 0x0000000000011984 
    /*000113c4*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x43d4] 
    /*000113c8*/ MOV         R1, #37                     @ 0x25 
    /*000113cc*/ MOV         R0, #3 
    /*000113d0*/ BL          0x00000000000113D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000113d4*/ LDR         R3, [R6, #760]              @ 0x2f8 
    /*000113d8*/ CMP         R3, #0 
    /*000113dc*/ BEQ         GDC_ProcVgsScaleFirstCallBack_x11400
    /*000113e0*/ LDR         R1, [R9, #736]              @ 0x2e0 
    /*000113e4*/ ADD         R0, R5, #772                @ 0x304 
    /*000113e8*/ BL          0x00000000000113E8          @ GDC_GetReturnGdcState [R_ARM_CALL: .text+0xe7c] 
    /*000113ec*/ ADD         R0, R5, #760                @ 0x2f8 
    /*000113f0*/ LDR         R6, [R6, #760]              @ 0x2f8 
    /*000113f4*/ ADDS        R3, R5, #8 
    /*000113f8*/ LDM         R0, {R0, R1, R2} 
    /*000113fc*/ BLX         R6 
    GDC_ProcVgsScaleFirstCallBack_x11400:
    /*00011400*/ ADD         R1, SP, #80                 @ 0x50 
    /*00011404*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011408*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001140c*/ BL          0x000000000001140C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00011410*/ MOV         R1, R5 
    /*00011414*/ MOV         R0, R4 
    /*00011418*/ BL          0x0000000000011418          @ GDC_GetCurrentNodeFromBusyList [R_ARM_CALL: .text+0xff84] 
    /*0001141c*/ MOV         R1, R5 
    /*00011420*/ MOV         R0, R4 
    /*00011424*/ BL          0x0000000000011424          @ GDC_PutNodeToFreeList [R_ARM_CALL: .text+0xfe90] 
    /*00011428*/ B           GDC_ProcVgsScaleFirstCallBack_x112a0
    GDC_ProcVgsScaleFirstCallBack_x1142c:
    /*0001142c*/ MOVW        R3, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x444c] 
    /*00011430*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c0] 
    /*00011434*/ MOVT        R3, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x444c] 
    /*00011438*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c0] 
    /*0001143c*/ MOVW        R2, #789                    @ 0x315 
    /*00011440*/ LDR         R1, [PC, #1340]             @ 0x0000000000011984 
    /*00011444*/ BL          0x0000000000011444          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011448*/ B           GDC_ProcVgsScaleFirstCallBack_x113a4
    GDC_ProcVgsScaleFirstCallBack_x1144c:
    /*0001144c*/ LDR         R1, [R5, #760]              @ 0x2f8 
    /*00011450*/ ADD         LR, SP, #84                 @ 0x54 
    /*00011454*/ LDR         R3, [R5, #768]              @ 0x300 
    /*00011458*/ ADD         R0, SP, #76                 @ 0x4c 
    /*0001145c*/ LDR         R2, [R5, #764]              @ 0x2fc 
    /*00011460*/ STR         LR, [SP] 
    /*00011464*/ STR         IP, [SP, #104]              @ 0x68 
    /*00011468*/ MOV         IP, #0 
    /*0001146c*/ STR         IP, [SP, #116]              @ 0x74 
    /*00011470*/ STR         IP, [SP, #108]              @ 0x6c 
    /*00011474*/ STR         IP, [SP, #112]              @ 0x70 
    /*00011478*/ BL          0x0000000000011478          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0001147c*/ ADD         R1, SP, #80                 @ 0x50 
    /*00011480*/ CMP         R0, #0 
    /*00011484*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011488*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001148c*/ BNE         GDC_ProcVgsScaleFirstCallBack_x1170c
    /*00011490*/ BL          0x0000000000011490          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00011494*/ LDR         R2, [R7] 
    /*00011498*/ ADD         R1, SP, #80                 @ 0x50 
    /*0001149c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000114a0*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000114a4*/ LDR         R3, [R2, #1416]             @ 0x588 
    /*000114a8*/ ADD         R3, R3, #1 
    /*000114ac*/ STR         R3, [R2, #1416]             @ 0x588 
    /*000114b0*/ BL          0x00000000000114B0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000114b4*/ MOV         R1, R9 
    /*000114b8*/ MOV         R2, #336                    @ 0x150 
    /*000114bc*/ ADDS        R0, R5, #8 
    /*000114c0*/ BL          0x00000000000114C0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000114c4*/ LDR         R3, [SP, #32] 
    /*000114c8*/ LDR         IP, [R6, #280]              @ 0x118 
    /*000114cc*/ LDR         R0, [R6, #284]              @ 0x11c 
    /*000114d0*/ CMP         R8, R3 
    /*000114d4*/ LDR         R1, [R6, #288]              @ 0x120 
    /*000114d8*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10e0] 
    /*000114dc*/ LDR         R2, [R6, #292]              @ 0x124 
    /*000114e0*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10e0] 
    /*000114e4*/ LDR         LR, [R6, #276]              @ 0x114 
    /*000114e8*/ STR         IP, [R3, #8] 
    /*000114ec*/ STR         R0, [R3, #288]              @ 0x120 
    /*000114f0*/ LDR         IP, [R6, #296]              @ 0x128 
    /*000114f4*/ LDR         R0, [R6, #300]              @ 0x12c 
    /*000114f8*/ STR         R1, [R3, #292]              @ 0x124 
    /*000114fc*/ STR         R2, [R3, #296]              @ 0x128 
    /*00011500*/ LDR         R1, [R6, #304]              @ 0x130 
    /*00011504*/ LDR         R2, [R6, #308]              @ 0x134 
    /*00011508*/ STR         LR, [R3] 
    /*0001150c*/ STR         IP, [R3, #300]              @ 0x12c 
    /*00011510*/ STR         R0, [R3, #304]              @ 0x130 
    /*00011514*/ STR         R1, [R3, #308]              @ 0x134 
    /*00011518*/ STR         R2, [R3, #312]              @ 0x138 
    /*0001151c*/ BCS         GDC_ProcVgsScaleFirstCallBack_x117d0
    /*00011520*/ MOV         R9, #44                     @ 0x2c 
    /*00011524*/ MOVW        R2, #4412                   @ 0x113c 
    /*00011528*/ MUL         R9, R9, R8 
    /*0001152c*/ ADD         R1, R5, R9 
    /*00011530*/ LDR         R2, [R1, R2] 
    /*00011534*/ CMP         R2, #3 
    /*00011538*/ BEQ         GDC_ProcVgsScaleFirstCallBack_x117d0
    /*0001153c*/ LDR         IP, [SP, #48]               @ 0x30 
    /*00011540*/ MOV         R0, #88                     @ 0x58 
    /*00011544*/ MOV         R2, #72                     @ 0x48 
    /*00011548*/ MOV         SL, #368                    @ 0x170 
    /*0001154c*/ ADD         FP, R9, #3616               @ 0xe20 
    /*00011550*/ ADD         R1, R8, #96                 @ 0x60 
    /*00011554*/ MLA         R0, R0, R8, IP 
    /*00011558*/ ADD         FP, FP, #12 
    /*0001155c*/ MLA         R2, R2, R8, IP 
    /*00011560*/ ADD         R1, IP, R1, LSL #5 
    /*00011564*/ MLA         SL, SL, R8, IP 
    /*00011568*/ ADD         R9, R9, #4416               @ 0x1140 
    /*0001156c*/ ADD         R0, R0, #3200               @ 0xc80 
    /*00011570*/ ADD         R2, R2, #1312               @ 0x520 
    /*00011574*/ ADD         FP, IP, FP 
    /*00011578*/ ADD         IP, IP, #3552               @ 0xde0 
    /*0001157c*/ STR         IP, [SP, #52]               @ 0x34 
    /*00011580*/ ADD         R9, R9, #40                 @ 0x28 
    /*00011584*/ LDR         IP, [SP, #32] 
    /*00011588*/ ADD         R9, R5, R9 
    /*0001158c*/ ADD         R3, R3, #504                @ 0x1f8 
    /*00011590*/ STR         R4, [SP, #64]               @ 0x40 
    /*00011594*/ SUB         IP, IP, #1 
    /*00011598*/ STR         R5, [SP, #48]               @ 0x30 
    /*0001159c*/ STR         R6, [SP, #68]               @ 0x44 
    /*000115a0*/ ADD         SL, SL, #1600               @ 0x640 
    /*000115a4*/ ADD         R8, R8, #1 
    /*000115a8*/ STR         IP, [SP, #56]               @ 0x38 
    /*000115ac*/ STR         R3, [SP, #60]               @ 0x3c 
    /*000115b0*/ MOV         R4, R0 
    /*000115b4*/ MOV         R5, R1 
    /*000115b8*/ MOV         R6, R2 
    /*000115bc*/ B           GDC_ProcVgsScaleFirstCallBack_x11654
    GDC_ProcVgsScaleFirstCallBack_x115c0:
    /*000115c0*/ LDR         R2, [R9] 
    /*000115c4*/ CMP         R2, #3 
    /*000115c8*/ BEQ         GDC_ProcVgsScaleFirstCallBack_x1178c
    /*000115cc*/ LDR         R2, [SP, #48]               @ 0x30 
    /*000115d0*/ STR         R3, [R2, #756]              @ 0x2f4 
    GDC_ProcVgsScaleFirstCallBack_x115d4:
    /*000115d4*/ LDR         R1, [SP, #40]               @ 0x28 
    /*000115d8*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10e0] 
    /*000115dc*/ LDR         R0, [SP, #76]               @ 0x4c 
    /*000115e0*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10e0] 
    /*000115e4*/ BL          0x00000000000115E4          @ GDC_AddCorrectionTask [R_ARM_CALL: .text+0x2fe8] 
    /*000115e8*/ ADD         R4, R4, #88                 @ 0x58 
    /*000115ec*/ ADD         R1, SP, #80                 @ 0x50 
    /*000115f0*/ STR         R8, [SP, #20] 
    /*000115f4*/ ADD         R6, R6, #72                 @ 0x48 
    /*000115f8*/ ADD         SL, SL, #368                @ 0x170 
    /*000115fc*/ ADD         R5, R5, #32 
    /*00011600*/ ADD         FP, FP, #44                 @ 0x2c 
    /*00011604*/ CMP         R0, #0 
    /*00011608*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0001160c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011610*/ BNE         GDC_ProcVgsScaleFirstCallBack_x11874
    /*00011614*/ BL          0x0000000000011614          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00011618*/ LDR         R2, [R7] 
    /*0001161c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011620*/ ADD         R1, SP, #80                 @ 0x50 
    /*00011624*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011628*/ LDR         R3, [R2, #1424]             @ 0x590 
    /*0001162c*/ ADD         R3, R3, #1 
    /*00011630*/ STR         R3, [R2, #1424]             @ 0x590 
    /*00011634*/ BL          0x0000000000011634          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011638*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0001163c*/ CMP         R3, R8 
    /*00011640*/ ADD         R8, R8, #1 
    /*00011644*/ BLS         GDC_ProcVgsScaleFirstCallBack_x117cc
    /*00011648*/ LDR         R3, [R9], #44               @ 0x2c 
    /*0001164c*/ CMP         R3, #3 
    /*00011650*/ BEQ         GDC_ProcVgsScaleFirstCallBack_x117cc
    GDC_ProcVgsScaleFirstCallBack_x11654:
    /*00011654*/ MOV         R2, #88                     @ 0x58 
    /*00011658*/ MOV         R1, R4 
    /*0001165c*/ LDR         R0, [PC, #804]              @ 0x0000000000011988 
    /*00011660*/ BL          0x0000000000011660          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011664*/ MOV         R2, #72                     @ 0x48 
    /*00011668*/ MOV         R1, R6 
    /*0001166c*/ LDR         R0, [PC, #792]              @ 0x000000000001198c 
    /*00011670*/ BL          0x0000000000011670          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011674*/ MOV         R2, #368                    @ 0x170 
    /*00011678*/ MOV         R1, SL 
    /*0001167c*/ LDR         R0, [SP, #60]               @ 0x3c 
    /*00011680*/ BL          0x0000000000011680          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011684*/ MOV         R2, #32 
    /*00011688*/ MOV         R1, R5 
    /*0001168c*/ LDR         R0, [PC, #764]              @ 0x0000000000011990 
    /*00011690*/ BL          0x0000000000011690          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011694*/ MOV         R2, #24 
    /*00011698*/ LDR         R1, [SP, #52]               @ 0x34 
    /*0001169c*/ LDR         R0, [PC, #752]              @ 0x0000000000011994 
    /*000116a0*/ BL          0x00000000000116A0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000116a4*/ MOV         R2, #44                     @ 0x2c 
    /*000116a8*/ MOV         R1, FP 
    /*000116ac*/ LDR         R0, [PC, #740]              @ 0x0000000000011998 
    /*000116b0*/ BL          0x00000000000116B0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000116b4*/ LDR         R3, [SP, #20] 
    /*000116b8*/ LDR         R2, [SP, #56]               @ 0x38 
    /*000116bc*/ CMP         R3, R2 
    /*000116c0*/ MOV         R3, #0 
    /*000116c4*/ BNE         GDC_ProcVgsScaleFirstCallBack_x115c0
    /*000116c8*/ LDR         IP, [SP, #48]               @ 0x30 
    /*000116cc*/ MOVW        R3, #0                      @ GDC_LastProcIsRegionCallBack [R_ARM_MOVW_ABS_NC: .text+0x10d40] 
    /*000116d0*/ LDRD        R0, [SP, #24] 
    /*000116d4*/ MOVT        R3, #0                      @ GDC_LastProcIsRegionCallBack [R_ARM_MOVT_ABS: .text+0x10d40] 
    /*000116d8*/ ADD         R2, IP, #688                @ 0x2b0 
    /*000116dc*/ MOV         R1, #0 
    /*000116e0*/ STRD        R0, [R2, #-8] 
    /*000116e4*/ STR         R3, [IP, #756]              @ 0x2f4 
    /*000116e8*/ B           GDC_ProcVgsScaleFirstCallBack_x115d4
    GDC_ProcVgsScaleFirstCallBack_x116ec:
    /*000116ec*/ MOVW        R3, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x43b8] 
    /*000116f0*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c0] 
    /*000116f4*/ MOVT        R3, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x43b8] 
    /*000116f8*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c0] 
    /*000116fc*/ MOVW        R2, #717                    @ 0x2cd 
    /*00011700*/ LDR         R1, [PC, #636]              @ 0x0000000000011984 
    /*00011704*/ BL          0x0000000000011704          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011708*/ B           GDC_ProcVgsScaleFirstCallBack_x1120c
    GDC_ProcVgsScaleFirstCallBack_x1170c:
    /*0001170c*/ BL          0x000000000001170C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00011710*/ LDR         R2, [R7] 
    /*00011714*/ ADD         R1, SP, #80                 @ 0x50 
    /*00011718*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0001171c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011720*/ LDR         R3, [R2, #1420]             @ 0x58c 
    /*00011724*/ ADD         R3, R3, #1 
    /*00011728*/ STR         R3, [R2, #1420]             @ 0x58c 
    /*0001172c*/ BL          0x000000000001172C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011730*/ LDR         R1, [R5, #768]              @ 0x300 
    /*00011734*/ MOVW        R0, #826                    @ 0x33a 
    /*00011738*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4464] 
    /*0001173c*/ LDR         R3, [PC, #576]              @ 0x0000000000011984 
    /*00011740*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4464] 
    /*00011744*/ STR         R1, [SP, #8] 
    /*00011748*/ MOV         R1, #37                     @ 0x25 
    /*0001174c*/ LDR         IP, [R5, #760]              @ 0x2f8 
    /*00011750*/ STR         R0, [SP] 
    /*00011754*/ MOV         R0, #3 
    /*00011758*/ STR         IP, [SP, #4] 
    /*0001175c*/ BL          0x000000000001175C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011760*/ LDR         R6, [R6, #760]              @ 0x2f8 
    /*00011764*/ CMP         R6, #0 
    /*00011768*/ BEQ         GDC_ProcVgsScaleFirstCallBack_x11400
    /*0001176c*/ ADDS        R3, R5, #8 
    GDC_ProcVgsScaleFirstCallBack_x11770:
    /*00011770*/ MOV         R1, #2 
    /*00011774*/ LDR         R2, [R5, #768]              @ 0x300 
    /*00011778*/ STR         R1, [R5, #772]              @ 0x304 
    /*0001177c*/ LDR         R0, [R5, #760]              @ 0x2f8 
    /*00011780*/ LDR         R1, [R5, #764]              @ 0x2fc 
    /*00011784*/ BLX         R6 
    /*00011788*/ B           GDC_ProcVgsScaleFirstCallBack_x11400
    GDC_ProcVgsScaleFirstCallBack_x1178c:
    /*0001178c*/ LDR         IP, [SP, #48]               @ 0x30 
    /*00011790*/ MOV         R0, R8 
    /*00011794*/ ASR         R1, R8, #31 
    /*00011798*/ ADD         R3, IP, #688                @ 0x2b0 
    /*0001179c*/ ADD         R2, IP, #704                @ 0x2c0 
    /*000117a0*/ STRD        R0, [R3, #-8] 
    /*000117a4*/ LDRD        R0, [SP, #32] 
    /*000117a8*/ MOV         R1, #0 
    /*000117ac*/ STRD        R0, [R3] 
    /*000117b0*/ MOVW        R3, #0                      @ GDC_ProcRegionsFirstCallBack [R_ARM_MOVW_ABS_NC: .text+0x1199c] 
    /*000117b4*/ LDRD        R0, [SP, #24] 
    /*000117b8*/ MOVT        R3, #0                      @ GDC_ProcRegionsFirstCallBack [R_ARM_MOVT_ABS: .text+0x1199c] 
    /*000117bc*/ MOV         R1, #0 
    /*000117c0*/ STRD        R0, [R2, #-8] 
    /*000117c4*/ STR         R3, [IP, #756]              @ 0x2f4 
    /*000117c8*/ B           GDC_ProcVgsScaleFirstCallBack_x115d4
    GDC_ProcVgsScaleFirstCallBack_x117cc:
    /*000117cc*/ LDR         R5, [SP, #48]               @ 0x30 
    GDC_ProcVgsScaleFirstCallBack_x117d0:
    /*000117d0*/ LDR         R0, [SP, #76]               @ 0x4c 
    /*000117d4*/ BL          0x00000000000117D4          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*000117d8*/ CMP         R0, #0 
    /*000117dc*/ BNE         GDC_ProcVgsScaleFirstCallBack_x11918
    /*000117e0*/ ADD         R1, SP, #80                 @ 0x50 
    /*000117e4*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000117e8*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000117ec*/ BL          0x00000000000117EC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000117f0*/ LDR         R2, [R7] 
    /*000117f4*/ ADD         R1, SP, #80                 @ 0x50 
    /*000117f8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000117fc*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011800*/ LDR         R3, [R2, #1432]             @ 0x598 
    /*00011804*/ ADD         R3, R3, #1 
    /*00011808*/ STR         R3, [R2, #1432]             @ 0x598 
    /*0001180c*/ BL          0x000000000001180C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011810*/ B           GDC_ProcVgsScaleFirstCallBack_x112b0
    GDC_ProcVgsScaleFirstCallBack_x11814:
    /*00011814*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x432c] 
    /*00011818*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c0] 
    /*0001181c*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x432c] 
    /*00011820*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c0] 
    /*00011824*/ MOVW        R2, #766                    @ 0x2fe 
    /*00011828*/ LDR         R1, [PC, #340]              @ 0x0000000000011984 
    /*0001182c*/ BL          0x000000000001182C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011830*/ B           GDC_ProcVgsScaleFirstCallBack_x11354
    GDC_ProcVgsScaleFirstCallBack_x11834:
    /*00011834*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4340] 
    /*00011838*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c0] 
    /*0001183c*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4340] 
    /*00011840*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c0] 
    /*00011844*/ MOVW        R2, #781                    @ 0x30d 
    /*00011848*/ LDR         R1, [PC, #308]              @ 0x0000000000011984 
    /*0001184c*/ BL          0x000000000001184C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011850*/ B           GDC_ProcVgsScaleFirstCallBack_x1138c
    GDC_ProcVgsScaleFirstCallBack_x11854:
    /*00011854*/ MOVW        R3, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x442c] 
    /*00011858*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c0] 
    /*0001185c*/ MOVT        R3, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x442c] 
    /*00011860*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c0] 
    /*00011864*/ MOVW        R2, #782                    @ 0x30e 
    /*00011868*/ LDR         R1, [PC, #276]              @ 0x0000000000011984 
    /*0001186c*/ BL          0x000000000001186C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011870*/ B           GDC_ProcVgsScaleFirstCallBack_x11398
    GDC_ProcVgsScaleFirstCallBack_x11874:
    /*00011874*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011878*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001187c*/ LDR         R5, [SP, #48]               @ 0x30 
    /*00011880*/ LDR         R4, [SP, #64]               @ 0x40 
    /*00011884*/ LDR         R6, [SP, #68]               @ 0x44 
    /*00011888*/ BL          0x0000000000011888          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001188c*/ LDR         R2, [R7] 
    /*00011890*/ ADD         R1, SP, #80                 @ 0x50 
    /*00011894*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011898*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001189c*/ LDR         R3, [R2, #1428]             @ 0x594 
    /*000118a0*/ ADD         R3, R3, #1 
    /*000118a4*/ STR         R3, [R2, #1428]             @ 0x594 
    /*000118a8*/ BL          0x00000000000118A8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000118ac*/ LDR         R1, [R5, #768]              @ 0x300 
    /*000118b0*/ LDR         R3, [PC, #204]              @ 0x0000000000011984 
    /*000118b4*/ MOVW        R0, #901                    @ 0x385 
    /*000118b8*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x44b8] 
    /*000118bc*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x44b8] 
    /*000118c0*/ STR         R1, [SP, #8] 
    /*000118c4*/ MOV         R1, #37                     @ 0x25 
    /*000118c8*/ LDR         IP, [R5, #760]              @ 0x2f8 
    /*000118cc*/ STR         R0, [SP] 
    /*000118d0*/ MOV         R0, #3 
    /*000118d4*/ STR         IP, [SP, #4] 
    /*000118d8*/ BL          0x00000000000118D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000118dc*/ LDR         R0, [SP, #76]               @ 0x4c 
    /*000118e0*/ BL          0x00000000000118E0          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*000118e4*/ LDR         R3, [R5, #756]              @ 0x2f4 
    /*000118e8*/ CMP         R3, #0 
    /*000118ec*/ BNE         GDC_ProcVgsScaleFirstCallBack_x112b0
    /*000118f0*/ LDR         R6, [R6, #760]              @ 0x2f8 
    /*000118f4*/ CMP         R6, #0 
    /*000118f8*/ BEQ         GDC_ProcVgsScaleFirstCallBack_x11400
    /*000118fc*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00011900*/ B           GDC_ProcVgsScaleFirstCallBack_x11770
    GDC_ProcVgsScaleFirstCallBack_x11904:
    /*00011904*/ MOV         R5, R3 
    /*00011908*/ ADD         R6, R3, #4096               @ 0x1000 
    /*0001190c*/ B           GDC_ProcVgsScaleFirstCallBack_x1134c
    GDC_ProcVgsScaleFirstCallBack_x11910:
    /*00011910*/ MOV         R5, R3 
    /*00011914*/ B           GDC_ProcVgsScaleFirstCallBack_x1134c
    GDC_ProcVgsScaleFirstCallBack_x11918:
    /*00011918*/ ADD         R1, SP, #80                 @ 0x50 
    /*0001191c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011920*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011924*/ BL          0x0000000000011924          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00011928*/ LDR         R2, [R7] 
    /*0001192c*/ ADD         R1, SP, #80                 @ 0x50 
    /*00011930*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011934*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011938*/ LDR         R3, [R2, #1436]             @ 0x59c 
    /*0001193c*/ ADD         R3, R3, #1 
    /*00011940*/ STR         R3, [R2, #1436]             @ 0x59c 
    /*00011944*/ BL          0x0000000000011944          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011948*/ LDR         R1, [R5, #768]              @ 0x300 
    /*0001194c*/ MOVW        LR, #949                    @ 0x3b5 
    /*00011950*/ LDR         R3, [PC, #44]               @ 0x0000000000011984 
    /*00011954*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4514] 
    /*00011958*/ MOV         R0, #3 
    /*0001195c*/ STR         R1, [SP, #8] 
    /*00011960*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4514] 
    /*00011964*/ LDR         IP, [R5, #760]              @ 0x2f8 
    /*00011968*/ MOV         R1, #37                     @ 0x25 
    /*0001196c*/ STR         LR, [SP] 
    /*00011970*/ STR         IP, [SP, #4] 
    /*00011974*/ BL          0x0000000000011974          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011978*/ LDR         R0, [SP, #76]               @ 0x4c 
    /*0001197c*/ BL          0x000000000001197C          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*00011980*/ B           GDC_ProcVgsScaleFirstCallBack_x112b0
    /*00011984*/ ANDEQ       R0, R0, IP, LSR #23 
    /*00011988*/ ANDEQ       R1, R0, R0, LSL #5 
    /*0001198c*/ ANDEQ       R1, R0, R8, LSR R2 
    /*00011990*/ ANDEQ       R1, R0, R8, ASR #8 
    /*00011994*/ ANDEQ       R1, R0, R0, LSR #4 
    /*00011998*/ ANDEQ       R1, R0, R8, ROR #8 
FUNC_END GDC_ProcVgsScaleFirstCallBack


FUNC_BEGIN GDC_ProcRegionsFirstCallBack
    /*0001199c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000119a0*/ MOVW        FP, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*000119a4*/ MOVT        FP, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*000119a8*/ SUBS        R8, R3, #0 
    /*000119ac*/ SUB         SP, SP, #140                @ 0x8c 
    /*000119b0*/ LDR         R5, [FP] 
    /*000119b4*/ ADD         R4, R5, #620                @ 0x26c 
    /*000119b8*/ BEQ         GDC_ProcRegionsFirstCallBack_x11ce4
    GDC_ProcRegionsFirstCallBack_x119bc:
    /*000119bc*/ ADD         R1, SP, #68                 @ 0x44 
    /*000119c0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000119c4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000119c8*/ BL          0x00000000000119C8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000119cc*/ MOVW        R3, #0                      @ g_enGdcModState [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000119d0*/ MOVT        R3, #0                      @ g_enGdcModState [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000119d4*/ LDR         R2, [FP] 
    /*000119d8*/ LDR         R1, [R3] 
    /*000119dc*/ LDR         R3, [R2, #1440]             @ 0x5a0 
    /*000119e0*/ CMP         R1, #1 
    /*000119e4*/ ADD         R3, R3, #1 
    /*000119e8*/ STR         R3, [R2, #1440]             @ 0x5a0 
    /*000119ec*/ BEQ         GDC_ProcRegionsFirstCallBack_x11aa0
    /*000119f0*/ CMP         R2, #0 
    /*000119f4*/ MOVNE       R7, #2 
    /*000119f8*/ BNE         GDC_ProcRegionsFirstCallBack_x11a3c
    /*000119fc*/ B           GDC_ProcRegionsFirstCallBack_x11a50
    GDC_ProcRegionsFirstCallBack_x11a00:
    /*00011a00*/ BL          0x0000000000011A00          @ GDC_GetNodeFromBusyList [R_ARM_CALL: .text+0xfeb4] 
    /*00011a04*/ SUBS        R5, R0, #0 
    /*00011a08*/ ADD         R3, R5, #8 
    /*00011a0c*/ ADD         R2, R5, #4096               @ 0x1000 
    /*00011a10*/ BEQ         GDC_ProcRegionsFirstCallBack_x11a68
    /*00011a14*/ LDR         R6, [R2, #760]              @ 0x2f8 
    /*00011a18*/ CMP         R6, #0 
    /*00011a1c*/ BEQ         GDC_ProcRegionsFirstCallBack_x11a30
    /*00011a20*/ ADD         R0, R5, #760                @ 0x2f8 
    /*00011a24*/ STR         R7, [R5, #772]              @ 0x304 
    /*00011a28*/ LDM         R0, {R0, R1, R2} 
    /*00011a2c*/ BLX         R6 
    GDC_ProcRegionsFirstCallBack_x11a30:
    /*00011a30*/ MOV         R1, R5 
    /*00011a34*/ MOV         R0, R4 
    /*00011a38*/ BL          0x0000000000011A38          @ GDC_PutNodeToFreeList [R_ARM_CALL: .text+0xfe90] 
    GDC_ProcRegionsFirstCallBack_x11a3c:
    /*00011a3c*/ MOV         R0, R4 
    /*00011a40*/ BL          0x0000000000011A40          @ GDC_QueryBusyNodeNum [R_ARM_CALL: .text+0xfddc] 
    /*00011a44*/ CMP         R0, #0 
    /*00011a48*/ MOV         R0, R4 
    /*00011a4c*/ BNE         GDC_ProcRegionsFirstCallBack_x11a00
    GDC_ProcRegionsFirstCallBack_x11a50:
    /*00011a50*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011a54*/ ADD         R1, SP, #68                 @ 0x44 
    /*00011a58*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011a5c*/ BL          0x0000000000011A5C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    GDC_ProcRegionsFirstCallBack_x11a60:
    /*00011a60*/ ADD         SP, SP, #140                @ 0x8c 
    /*00011a64*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcRegionsFirstCallBack_x11a68:
    /*00011a68*/ MOV         R3, #1000                   @ 0x3e8 
    /*00011a6c*/ MOV         R1, #37                     @ 0x25 
    /*00011a70*/ STR         R3, [SP] 
    /*00011a74*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4300] 
    /*00011a78*/ LDR         R3, [PC, #1772]             @ 0x000000000001216c 
    /*00011a7c*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4300] 
    /*00011a80*/ MOV         R0, #2 
    /*00011a84*/ BL          0x0000000000011A84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011a88*/ ADD         R1, SP, #68                 @ 0x44 
    /*00011a8c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011a90*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011a94*/ BL          0x0000000000011A94          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011a98*/ ADD         SP, SP, #140                @ 0x8c 
    /*00011a9c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcRegionsFirstCallBack_x11aa0:
    /*00011aa0*/ MOV         IP, R5 
    /*00011aa4*/ ADD         R6, R8, #688                @ 0x2b0 
    /*00011aa8*/ LDR         R3, [IP, #632]!             @ 0x278 
    /*00011aac*/ LDRD        R0, [R6] 
    /*00011ab0*/ CMP         R3, IP 
    /*00011ab4*/ LDR         R9, [R3] 
    /*00011ab8*/ STRD        R0, [SP, #8] 
    /*00011abc*/ BEQ         GDC_ProcRegionsFirstCallBack_x11d38
    /*00011ac0*/ ADD         R2, R3, #4096               @ 0x1000 
    /*00011ac4*/ LDR         R1, [SP, #8] 
    /*00011ac8*/ LDR         R2, [R2, #756]              @ 0x2f4 
    /*00011acc*/ CMP         R1, R2 
    /*00011ad0*/ BEQ         GDC_ProcRegionsFirstCallBack_x11d38
    /*00011ad4*/ MOV         R1, IP 
    /*00011ad8*/ B           GDC_ProcRegionsFirstCallBack_x11aec
    GDC_ProcRegionsFirstCallBack_x11adc:
    /*00011adc*/ LDR         R3, [R3, #756]              @ 0x2f4 
    /*00011ae0*/ CMP         R0, R3 
    /*00011ae4*/ BEQ         GDC_ProcRegionsFirstCallBack_x11afc
    /*00011ae8*/ MOV         R9, R2 
    GDC_ProcRegionsFirstCallBack_x11aec:
    /*00011aec*/ CMP         R9, R1 
    /*00011af0*/ ADD         R3, R9, #4096               @ 0x1000 
    /*00011af4*/ LDR         R2, [R9] 
    /*00011af8*/ BNE         GDC_ProcRegionsFirstCallBack_x11adc
    GDC_ProcRegionsFirstCallBack_x11afc:
    /*00011afc*/ CMP         R9, #0 
    /*00011b00*/ BEQ         GDC_ProcRegionsFirstCallBack_x11f60
    GDC_ProcRegionsFirstCallBack_x11b04:
    /*00011b04*/ ADD         R1, SP, #68                 @ 0x44 
    /*00011b08*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011b0c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011b10*/ ADD         R5, R9, #784                @ 0x310 
    /*00011b14*/ BL          0x0000000000011B14          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011b18*/ LDRD        R2, [R6, #-8] 
    /*00011b1c*/ LDR         R7, [R8, #672]              @ 0x2a0 
    /*00011b20*/ ADDS        R1, R9, #8 
    /*00011b24*/ STR         R1, [SP, #40]               @ 0x28 
    /*00011b28*/ STRD        R2, [SP, #16] 
    /*00011b2c*/ STR         R7, [SP, #32] 
    /*00011b30*/ STR         R2, [SP, #28] 
    /*00011b34*/ BEQ         GDC_ProcRegionsFirstCallBack_x11f80
    GDC_ProcRegionsFirstCallBack_x11b38:
    /*00011b38*/ CMP         R5, #0 
    /*00011b3c*/ BEQ         GDC_ProcRegionsFirstCallBack_x11f40
    GDC_ProcRegionsFirstCallBack_x11b40:
    /*00011b40*/ LDR         R3, [SP, #16] 
    /*00011b44*/ CMP         R7, R3 
    /*00011b48*/ BCS         GDC_ProcRegionsFirstCallBack_x11bd4
    GDC_ProcRegionsFirstCallBack_x11b4c:
    /*00011b4c*/ LDR         SL, [R8, #764]              @ 0x2fc 
    /*00011b50*/ CMP         SL, #1 
    /*00011b54*/ BEQ         GDC_ProcRegionsFirstCallBack_x11bf4
    /*00011b58*/ MOVW        R3, #1049                   @ 0x419 
    /*00011b5c*/ STR         SL, [SP, #4] 
    /*00011b60*/ STR         R3, [SP] 
    /*00011b64*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x435c] 
    /*00011b68*/ LDR         R3, [PC, #1532]             @ 0x000000000001216c 
    /*00011b6c*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x435c] 
    /*00011b70*/ MOV         R1, #37                     @ 0x25 
    /*00011b74*/ MOV         R0, #3 
    /*00011b78*/ BL          0x0000000000011B78          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011b7c*/ ADD         R3, R9, #4096               @ 0x1000 
    /*00011b80*/ LDR         R5, [R3, #760]              @ 0x2f8 
    /*00011b84*/ CMP         R5, #0 
    /*00011b88*/ BEQ         GDC_ProcRegionsFirstCallBack_x11ba8
    /*00011b8c*/ LDR         R0, [R8, #764]              @ 0x2fc 
    /*00011b90*/ ADDS        R3, R9, #8 
    /*00011b94*/ LDR         R2, [R9, #768]              @ 0x300 
    /*00011b98*/ LDR         R1, [R9, #764]              @ 0x2fc 
    /*00011b9c*/ STR         R0, [R9, #772]              @ 0x304 
    /*00011ba0*/ LDR         R0, [R9, #760]              @ 0x2f8 
    /*00011ba4*/ BLX         R5 
    GDC_ProcRegionsFirstCallBack_x11ba8:
    /*00011ba8*/ ADD         R1, SP, #68                 @ 0x44 
    /*00011bac*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011bb0*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011bb4*/ BL          0x0000000000011BB4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00011bb8*/ MOV         R1, R9 
    /*00011bbc*/ MOV         R0, R4 
    /*00011bc0*/ BL          0x0000000000011BC0          @ GDC_GetCurrentNodeFromBusyList [R_ARM_CALL: .text+0xff84] 
    /*00011bc4*/ MOV         R1, R9 
    /*00011bc8*/ MOV         R0, R4 
    /*00011bcc*/ BL          0x0000000000011BCC          @ GDC_PutNodeToFreeList [R_ARM_CALL: .text+0xfe90] 
    /*00011bd0*/ B           GDC_ProcRegionsFirstCallBack_x11a50
    GDC_ProcRegionsFirstCallBack_x11bd4:
    /*00011bd4*/ MOVW        R3, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x444c] 
    /*00011bd8*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c0] 
    /*00011bdc*/ MOVT        R3, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x444c] 
    /*00011be0*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c0] 
    /*00011be4*/ MOVW        R2, #1043                   @ 0x413 
    /*00011be8*/ LDR         R1, [PC, #1404]             @ 0x000000000001216c 
    /*00011bec*/ BL          0x0000000000011BEC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011bf0*/ B           GDC_ProcRegionsFirstCallBack_x11b4c
    GDC_ProcRegionsFirstCallBack_x11bf4:
    /*00011bf4*/ MOV         R0, #45                     @ 0x2d 
    /*00011bf8*/ BL          0x0000000000011BF8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011bfc*/ SUBS        R6, R0, #0 
    /*00011c00*/ BEQ         GDC_ProcRegionsFirstCallBack_x11d04
    /*00011c04*/ LDR         R3, [R6] 
    /*00011c08*/ CMP         R3, #0 
    /*00011c0c*/ BEQ         GDC_ProcRegionsFirstCallBack_x11d04
    /*00011c10*/ LDR         R3, [R6, #32] 
    /*00011c14*/ CMP         R3, #0 
    /*00011c18*/ BEQ         GDC_ProcRegionsFirstCallBack_x11d04
    /*00011c1c*/ LDR         R3, [R6, #12] 
    /*00011c20*/ CMP         R3, #0 
    /*00011c24*/ BEQ         GDC_ProcRegionsFirstCallBack_x11d04
    /*00011c28*/ MOV         R3, #0 
    /*00011c2c*/ STR         SL, [SP, #124]              @ 0x7c 
    /*00011c30*/ STR         R3, [SP, #128]              @ 0x80 
    /*00011c34*/ ADD         R2, SP, #72                 @ 0x48 
    /*00011c38*/ STR         R3, [SP] 
    /*00011c3c*/ MOV         R1, R3 
    /*00011c40*/ STR         R2, [SP, #4] 
    /*00011c44*/ ADD         R0, SP, #64                 @ 0x40 
    /*00011c48*/ LDR         R8, [R6] 
    /*00011c4c*/ MOV         R2, #37                     @ 0x25 
    /*00011c50*/ BLX         R8 
    /*00011c54*/ ADD         R1, SP, #68                 @ 0x44 
    /*00011c58*/ SUBS        R8, R0, #0 
    /*00011c5c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011c60*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011c64*/ BEQ         GDC_ProcRegionsFirstCallBack_x11d40
    /*00011c68*/ BL          0x0000000000011C68          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00011c6c*/ LDR         R2, [FP] 
    /*00011c70*/ ADD         R1, SP, #68                 @ 0x44 
    /*00011c74*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011c78*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011c7c*/ LDR         R3, [R2, #1372]             @ 0x55c 
    /*00011c80*/ ADD         R3, R3, #1 
    /*00011c84*/ STR         R3, [R2, #1372]             @ 0x55c 
    /*00011c88*/ BL          0x0000000000011C88          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011c8c*/ MOV         R3, #37                     @ 0x25 
    /*00011c90*/ MOV         R1, R3 
    /*00011c94*/ STR         R3, [SP, #4] 
    /*00011c98*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x45cc] 
    /*00011c9c*/ MOVW        R3, #1096                   @ 0x448 
    /*00011ca0*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x45cc] 
    /*00011ca4*/ STR         R3, [SP] 
    /*00011ca8*/ MOV         R0, #3 
    /*00011cac*/ LDR         R3, [PC, #1208]             @ 0x000000000001216c 
    /*00011cb0*/ BL          0x0000000000011CB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011cb4*/ ADD         R3, R9, #4096               @ 0x1000 
    /*00011cb8*/ LDR         R5, [R3, #760]              @ 0x2f8 
    /*00011cbc*/ CMP         R5, #0 
    /*00011cc0*/ BEQ         GDC_ProcRegionsFirstCallBack_x11ba8
    GDC_ProcRegionsFirstCallBack_x11cc4:
    /*00011cc4*/ ADDS        R3, R9, #8 
    GDC_ProcRegionsFirstCallBack_x11cc8:
    /*00011cc8*/ MOV         R1, #2 
    /*00011ccc*/ LDR         R2, [R9, #768]              @ 0x300 
    /*00011cd0*/ STR         R1, [R9, #772]              @ 0x304 
    /*00011cd4*/ LDR         R0, [R9, #760]              @ 0x2f8 
    /*00011cd8*/ LDR         R1, [R9, #764]              @ 0x2fc 
    /*00011cdc*/ BLX         R5 
    /*00011ce0*/ B           GDC_ProcRegionsFirstCallBack_x11ba8
    GDC_ProcRegionsFirstCallBack_x11ce4:
    /*00011ce4*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42a4] 
    /*00011ce8*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c0] 
    /*00011cec*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42a4] 
    /*00011cf0*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c0] 
    /*00011cf4*/ MOVW        R2, #982                    @ 0x3d6 
    /*00011cf8*/ LDR         R1, [PC, #1132]             @ 0x000000000001216c 
    /*00011cfc*/ BL          0x0000000000011CFC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011d00*/ B           GDC_ProcRegionsFirstCallBack_x119bc
    GDC_ProcRegionsFirstCallBack_x11d04:
    /*00011d04*/ MOVW        R3, #1069                   @ 0x42d 
    /*00011d08*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4564] 
    /*00011d0c*/ STR         R3, [SP] 
    /*00011d10*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4564] 
    /*00011d14*/ LDR         R3, [PC, #1104]             @ 0x000000000001216c 
    /*00011d18*/ MOV         R1, #37                     @ 0x25 
    /*00011d1c*/ MOV         R0, #3 
    /*00011d20*/ BL          0x0000000000011D20          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011d24*/ ADD         R3, R9, #4096               @ 0x1000 
    /*00011d28*/ LDR         R5, [R3, #760]              @ 0x2f8 
    /*00011d2c*/ CMP         R5, #0 
    /*00011d30*/ BNE         GDC_ProcRegionsFirstCallBack_x11cc4
    /*00011d34*/ B           GDC_ProcRegionsFirstCallBack_x11ba8
    GDC_ProcRegionsFirstCallBack_x11d38:
    /*00011d38*/ MOV         R9, R3 
    /*00011d3c*/ B           GDC_ProcRegionsFirstCallBack_x11afc
    GDC_ProcRegionsFirstCallBack_x11d40:
    /*00011d40*/ BL          0x0000000000011D40          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00011d44*/ LDR         R2, [FP] 
    /*00011d48*/ ADD         R1, SP, #68                 @ 0x44 
    /*00011d4c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011d50*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011d54*/ LDR         R3, [R2, #1368]             @ 0x558 
    /*00011d58*/ ADD         R3, R3, #1 
    /*00011d5c*/ STR         R3, [R2, #1368]             @ 0x558 
    /*00011d60*/ BL          0x0000000000011D60          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011d64*/ MOV         R1, R8 
    /*00011d68*/ MOV         R2, #320                    @ 0x140 
    /*00011d6c*/ LDR         R0, [PC, #1020]             @ 0x0000000000012170 
    /*00011d70*/ BL          0x0000000000011D70          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00011d74*/ LDR         R3, [SP, #16] 
    /*00011d78*/ CMP         R7, R3 
    /*00011d7c*/ BCS         GDC_ProcRegionsFirstCallBack_x11fa4
    /*00011d80*/ MOV         R3, #44                     @ 0x2c 
    /*00011d84*/ MOVW        R2, #4412                   @ 0x113c 
    /*00011d88*/ MUL         R3, R3, R7 
    /*00011d8c*/ ADD         R1, R9, R3 
    /*00011d90*/ LDR         R2, [R1, R2] 
    /*00011d94*/ CMP         R2, #3 
    /*00011d98*/ BNE         GDC_ProcRegionsFirstCallBack_x11fa4
    /*00011d9c*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10e0] 
    /*00011da0*/ STR         R9, [SP, #48]               @ 0x30 
    /*00011da4*/ MOV         R1, R2 
    /*00011da8*/ ADD         R2, R3, #4416               @ 0x1140 
    /*00011dac*/ ADD         R3, R3, #3648               @ 0xe40 
    /*00011db0*/ MOVT        R1, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10e0] 
    /*00011db4*/ ADD         R3, R3, #8 
    /*00011db8*/ STR         R1, [SP, #52]               @ 0x34 
    /*00011dbc*/ ADD         R3, R5, R3 
    /*00011dc0*/ ADD         R2, R2, #40                 @ 0x28 
    /*00011dc4*/ ADD         R1, R1, #952                @ 0x3b8 
    /*00011dc8*/ ADD         SL, R9, R2 
    /*00011dcc*/ ADD         R1, R1, #188                @ 0xbc 
    /*00011dd0*/ ADD         R7, R7, #1 
    /*00011dd4*/ STR         R1, [SP, #56]               @ 0x38 
    /*00011dd8*/ MOV         R9, R3 
    /*00011ddc*/ STR         R4, [SP, #60]               @ 0x3c 
    /*00011de0*/ LDR         R8, [SP, #32] 
    /*00011de4*/ STR         FP, [SP, #44]               @ 0x2c 
    /*00011de8*/ B           GDC_ProcRegionsFirstCallBack_x11ec0
    GDC_ProcRegionsFirstCallBack_x11dec:
    /*00011dec*/ LDR         FP, [SL] 
    /*00011df0*/ MOVW        IP, #0                      @ GDC_ProcVgsScaleFirstCallBack [R_ARM_MOVW_ABS_NC: .text+0x111ec] 
    /*00011df4*/ LDRD        R0, [SP, #16] 
    /*00011df8*/ MOVT        IP, #0                      @ GDC_ProcVgsScaleFirstCallBack [R_ARM_MOVT_ABS: .text+0x111ec] 
    /*00011dfc*/ CMP         FP, #3 
    /*00011e00*/ MOV         R1, #0 
    /*00011e04*/ STREQ       R4, [R5, #720]              @ 0x2d0 
    /*00011e08*/ STRD        R0, [SP, #32] 
    /*00011e0c*/ LDRD        R0, [SP, #8] 
    /*00011e10*/ MOV         R1, #0 
    /*00011e14*/ BEQ         GDC_ProcRegionsFirstCallBack_x11e2c
    /*00011e18*/ STRD        R2, [R8] 
    /*00011e1c*/ LDRD        R2, [SP, #32] 
    /*00011e20*/ STRD        R0, [LR] 
    /*00011e24*/ STRD        R2, [LR, #-8] 
    /*00011e28*/ STR         IP, [R5, #720]              @ 0x2d0 
    GDC_ProcRegionsFirstCallBack_x11e2c:
    /*00011e2c*/ LDR         IP, [SP, #52]               @ 0x34 
    /*00011e30*/ MOV         R1, R9 
    /*00011e34*/ MOV         R2, #16 
    /*00011e38*/ LDR         R0, [SP, #56]               @ 0x38 
    /*00011e3c*/ MOV         R3, #1 
    /*00011e40*/ MOV         R8, R7 
    /*00011e44*/ STR         R3, [IP, #1136]             @ 0x470 
    /*00011e48*/ BL          0x0000000000011E48          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011e4c*/ MOV         R1, R5 
    /*00011e50*/ LDR         R3, [R6, #32] 
    /*00011e54*/ LDR         R2, [PC, #788]              @ 0x0000000000012170 
    /*00011e58*/ ADD         R9, R9, #44                 @ 0x2c 
    /*00011e5c*/ LDR         R0, [SP, #64]               @ 0x40 
    /*00011e60*/ LDR         R5, [R5, #720]              @ 0x2d0 
    /*00011e64*/ BLX         R3 
    /*00011e68*/ ADD         R1, SP, #68                 @ 0x44 
    /*00011e6c*/ CMP         R0, #0 
    /*00011e70*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011e74*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011e78*/ BNE         GDC_ProcRegionsFirstCallBack_x1207c
    /*00011e7c*/ BL          0x0000000000011E7C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00011e80*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00011e84*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011e88*/ ADD         R1, SP, #68                 @ 0x44 
    /*00011e8c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011e90*/ LDR         R2, [R3] 
    /*00011e94*/ LDR         R3, [R2, #1384]             @ 0x568 
    /*00011e98*/ ADD         R3, R3, #1 
    /*00011e9c*/ STR         R3, [R2, #1384]             @ 0x568 
    /*00011ea0*/ BL          0x0000000000011EA0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011ea4*/ LDR         R3, [SP, #28] 
    /*00011ea8*/ CMP         R3, R7 
    /*00011eac*/ ADD         R7, R7, #1 
    /*00011eb0*/ BLS         GDC_ProcRegionsFirstCallBack_x11fa0
    /*00011eb4*/ LDR         R3, [SL], #44               @ 0x2c 
    /*00011eb8*/ CMP         R3, #3 
    /*00011ebc*/ BNE         GDC_ProcRegionsFirstCallBack_x11fa0
    GDC_ProcRegionsFirstCallBack_x11ec0:
    /*00011ec0*/ LDR         R3, [R6, #64]               @ 0x40 
    /*00011ec4*/ MOV         R4, #0 
    /*00011ec8*/ BLX         R3 
    /*00011ecc*/ LDR         R1, [SP, #40]               @ 0x28 
    /*00011ed0*/ MOV         R3, #37                     @ 0x25 
    /*00011ed4*/ MOV         R2, #336                    @ 0x150 
    /*00011ed8*/ SUBS        R5, R0, #0 
    /*00011edc*/ BEQ         GDC_ProcRegionsFirstCallBack_x11ff4
    /*00011ee0*/ STR         R3, [R5, #724]              @ 0x2d4 
    /*00011ee4*/ STR         R4, [R5, #728]              @ 0x2d8 
    /*00011ee8*/ STR         R4, [R5, #732]              @ 0x2dc 
    /*00011eec*/ BL          0x0000000000011EEC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011ef0*/ LDR         R3, [SP, #48]               @ 0x30 
    /*00011ef4*/ MOV         R2, #336                    @ 0x150 
    /*00011ef8*/ ADD         R0, R5, R2 
    /*00011efc*/ ADD         R1, R3, #344                @ 0x158 
    /*00011f00*/ BL          0x0000000000011F00          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011f04*/ LDR         R3, [SP, #28] 
    /*00011f08*/ ADD         LR, R5, #688                @ 0x2b0 
    /*00011f0c*/ MOV         R2, R7 
    /*00011f10*/ SUB         R3, R3, #1 
    /*00011f14*/ CMP         R3, R8 
    /*00011f18*/ ADD         R8, R5, #672                @ 0x2a0 
    /*00011f1c*/ ASR         R3, R7, #31 
    /*00011f20*/ BNE         GDC_ProcRegionsFirstCallBack_x11dec
    /*00011f24*/ LDRD        R0, [SP, #8] 
    /*00011f28*/ MOVW        R3, #0                      @ GDC_LastProcIsVgsScaleCallBack [R_ARM_MOVW_ABS_NC: .text+0x10f9c] 
    /*00011f2c*/ MOV         R1, #0 
    /*00011f30*/ MOVT        R3, #0                      @ GDC_LastProcIsVgsScaleCallBack [R_ARM_MOVT_ABS: .text+0x10f9c] 
    /*00011f34*/ STRD        R0, [R8] 
    /*00011f38*/ STR         R3, [R5, #720]              @ 0x2d0 
    /*00011f3c*/ B           GDC_ProcRegionsFirstCallBack_x11e2c
    GDC_ProcRegionsFirstCallBack_x11f40:
    /*00011f40*/ MOVW        R3, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x442c] 
    /*00011f44*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c0] 
    /*00011f48*/ MOVT        R3, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x442c] 
    /*00011f4c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c0] 
    /*00011f50*/ MOVW        R2, #1041                   @ 0x411 
    /*00011f54*/ LDR         R1, [PC, #528]              @ 0x000000000001216c 
    /*00011f58*/ BL          0x0000000000011F58          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011f5c*/ B           GDC_ProcRegionsFirstCallBack_x11b40
    GDC_ProcRegionsFirstCallBack_x11f60:
    /*00011f60*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x432c] 
    /*00011f64*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c0] 
    /*00011f68*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x432c] 
    /*00011f6c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c0] 
    /*00011f70*/ MOVW        R2, #1031                   @ 0x407 
    /*00011f74*/ LDR         R1, [PC, #496]              @ 0x000000000001216c 
    /*00011f78*/ BL          0x0000000000011F78          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011f7c*/ B           GDC_ProcRegionsFirstCallBack_x11b04
    GDC_ProcRegionsFirstCallBack_x11f80:
    /*00011f80*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4340] 
    /*00011f84*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c0] 
    /*00011f88*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4340] 
    /*00011f8c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c0] 
    /*00011f90*/ MOV         R2, #1040                   @ 0x410 
    /*00011f94*/ LDR         R1, [PC, #464]              @ 0x000000000001216c 
    /*00011f98*/ BL          0x0000000000011F98          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011f9c*/ B           GDC_ProcRegionsFirstCallBack_x11b38
    GDC_ProcRegionsFirstCallBack_x11fa0:
    /*00011fa0*/ LDR         FP, [SP, #44]               @ 0x2c 
    GDC_ProcRegionsFirstCallBack_x11fa4:
    /*00011fa4*/ LDR         R3, [R6, #12] 
    /*00011fa8*/ MOV         R2, #0 
    /*00011fac*/ MOV         R1, #1 
    /*00011fb0*/ LDR         R0, [SP, #64]               @ 0x40 
    /*00011fb4*/ BLX         R3 
    /*00011fb8*/ CMP         R0, #0 
    /*00011fbc*/ BNE         GDC_ProcRegionsFirstCallBack_x12104
    /*00011fc0*/ ADD         R1, SP, #68                 @ 0x44 
    /*00011fc4*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011fc8*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011fcc*/ BL          0x0000000000011FCC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00011fd0*/ LDR         R2, [FP] 
    /*00011fd4*/ ADD         R1, SP, #68                 @ 0x44 
    /*00011fd8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00011fdc*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00011fe0*/ LDR         R3, [R2, #1400]             @ 0x578 
    /*00011fe4*/ ADD         R3, R3, #1 
    /*00011fe8*/ STR         R3, [R2, #1400]             @ 0x578 
    /*00011fec*/ BL          0x0000000000011FEC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00011ff0*/ B           GDC_ProcRegionsFirstCallBack_x11a60
    GDC_ProcRegionsFirstCallBack_x11ff4:
    /*00011ff4*/ LDR         FP, [SP, #44]               @ 0x2c 
    /*00011ff8*/ ADD         R1, SP, #68                 @ 0x44 
    /*00011ffc*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00012000*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00012004*/ LDR         R9, [SP, #48]               @ 0x30 
    /*00012008*/ LDR         R4, [SP, #60]               @ 0x3c 
    /*0001200c*/ BL          0x000000000001200C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00012010*/ LDR         R2, [FP] 
    /*00012014*/ ADD         R1, SP, #68                 @ 0x44 
    /*00012018*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0001201c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00012020*/ LDR         R3, [R2, #1388]             @ 0x56c 
    /*00012024*/ ADD         R3, R3, #1 
    /*00012028*/ STR         R3, [R2, #1388]             @ 0x56c 
    /*0001202c*/ BL          0x000000000001202C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00012030*/ MOV         R3, #37                     @ 0x25 
    /*00012034*/ MOV         R1, R3 
    /*00012038*/ STR         R3, [SP, #4] 
    /*0001203c*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4610] 
    /*00012040*/ MOVW        R3, #1129                   @ 0x469 
    /*00012044*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4610] 
    /*00012048*/ STR         R3, [SP] 
    /*0001204c*/ MOV         R0, #3 
    /*00012050*/ LDR         R3, [PC, #276]              @ 0x000000000001216c 
    /*00012054*/ BL          0x0000000000012054          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012058*/ LDR         R3, [R6, #4] 
    /*0001205c*/ LDR         R0, [SP, #64]               @ 0x40 
    /*00012060*/ BLX         R3 
    /*00012064*/ ADD         R3, R9, #4096               @ 0x1000 
    /*00012068*/ LDR         R5, [R3, #760]              @ 0x2f8 
    /*0001206c*/ CMP         R5, #0 
    /*00012070*/ BEQ         GDC_ProcRegionsFirstCallBack_x11ba8
    GDC_ProcRegionsFirstCallBack_x12074:
    /*00012074*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00012078*/ B           GDC_ProcRegionsFirstCallBack_x11cc8
    GDC_ProcRegionsFirstCallBack_x1207c:
    /*0001207c*/ LDR         FP, [SP, #44]               @ 0x2c 
    /*00012080*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00012084*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00012088*/ LDR         R4, [SP, #60]               @ 0x3c 
    /*0001208c*/ LDR         R9, [SP, #48]               @ 0x30 
    /*00012090*/ BL          0x0000000000012090          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00012094*/ LDR         R2, [FP] 
    /*00012098*/ ADD         R1, SP, #68                 @ 0x44 
    /*0001209c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000120a0*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000120a4*/ LDR         R3, [R2, #1388]             @ 0x56c 
    /*000120a8*/ ADD         R3, R3, #1 
    /*000120ac*/ STR         R3, [R2, #1388]             @ 0x56c 
    /*000120b0*/ BL          0x00000000000120B0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000120b4*/ MOV         R3, #37                     @ 0x25 
    /*000120b8*/ MOV         R1, R3 
    /*000120bc*/ STR         R3, [SP, #4] 
    /*000120c0*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4650] 
    /*000120c4*/ MOVW        R3, #1180                   @ 0x49c 
    /*000120c8*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4650] 
    /*000120cc*/ STR         R3, [SP] 
    /*000120d0*/ MOV         R0, #3 
    /*000120d4*/ LDR         R3, [PC, #144]              @ 0x000000000001216c 
    /*000120d8*/ BL          0x00000000000120D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000120dc*/ LDR         R3, [R6, #4] 
    /*000120e0*/ LDR         R0, [SP, #64]               @ 0x40 
    /*000120e4*/ BLX         R3 
    /*000120e8*/ CMP         R5, #0 
    /*000120ec*/ BNE         GDC_ProcRegionsFirstCallBack_x11a60
    /*000120f0*/ ADD         R3, R9, #4096               @ 0x1000 
    /*000120f4*/ LDR         R5, [R3, #760]              @ 0x2f8 
    /*000120f8*/ CMP         R5, #0 
    /*000120fc*/ BNE         GDC_ProcRegionsFirstCallBack_x12074
    /*00012100*/ B           GDC_ProcRegionsFirstCallBack_x11ba8
    GDC_ProcRegionsFirstCallBack_x12104:
    /*00012104*/ ADD         R1, SP, #68                 @ 0x44 
    /*00012108*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0001210c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00012110*/ BL          0x0000000000012110          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00012114*/ LDR         R2, [FP] 
    /*00012118*/ ADD         R1, SP, #68                 @ 0x44 
    /*0001211c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00012120*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00012124*/ LDR         R3, [R2, #1404]             @ 0x57c 
    /*00012128*/ ADD         R3, R3, #1 
    /*0001212c*/ STR         R3, [R2, #1404]             @ 0x57c 
    /*00012130*/ BL          0x0000000000012130          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00012134*/ MOV         R3, #37                     @ 0x25 
    /*00012138*/ MOV         R1, R3 
    /*0001213c*/ STR         R3, [SP, #4] 
    /*00012140*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4698] 
    /*00012144*/ MOVW        R3, #1225                   @ 0x4c9 
    /*00012148*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4698] 
    /*0001214c*/ STR         R3, [SP] 
    /*00012150*/ MOV         R0, #3 
    /*00012154*/ LDR         R3, [PC, #16]               @ 0x000000000001216c 
    /*00012158*/ BL          0x0000000000012158          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001215c*/ LDR         R3, [R6, #4] 
    /*00012160*/ LDR         R0, [SP, #64]               @ 0x40 
    /*00012164*/ BLX         R3 
    /*00012168*/ B           GDC_ProcRegionsFirstCallBack_x11a60
    /*0001216c*/ ANDEQ       R0, R0, IP, ASR #23 
    /*00012170*/ MULEQ       R0, R8, R4 
FUNC_END GDC_ProcRegionsFirstCallBack


FUNC_BEGIN GDC_ProcCorrectionWithBgColor.part.8
    /*00012174*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00012178*/ SUB         SP, SP, #148                @ 0x94 
    /*0001217c*/ MOV         R9, R0 
    /*00012180*/ MOV         R0, #45                     @ 0x2d 
    /*00012184*/ MOV         FP, R1 
    /*00012188*/ STR         R2, [SP, #8] 
    /*0001218c*/ BL          0x000000000001218C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00012190*/ SUBS        R5, R0, #0 
    /*00012194*/ BEQ         GDC_ProcCorrectionWithBgColor.part.8_x12468
    /*00012198*/ LDR         R3, [R5] 
    /*0001219c*/ CMP         R3, #0 
    /*000121a0*/ BEQ         GDC_ProcCorrectionWithBgColor.part.8_x12468
    /*000121a4*/ LDR         R3, [R5, #16] 
    /*000121a8*/ CMP         R3, #0 
    /*000121ac*/ BEQ         GDC_ProcCorrectionWithBgColor.part.8_x12468
    /*000121b0*/ LDR         R3, [R5, #12] 
    /*000121b4*/ CMP         R3, #0 
    /*000121b8*/ BEQ         GDC_ProcCorrectionWithBgColor.part.8_x12468
    /*000121bc*/ MOV         R3, #0 
    /*000121c0*/ ADD         R2, SP, #80                 @ 0x50 
    /*000121c4*/ STR         R3, [SP, #136]              @ 0x88 
    /*000121c8*/ MOV         R8, #1 
    /*000121cc*/ STR         R2, [SP, #4] 
    /*000121d0*/ MOV         R1, R3 
    /*000121d4*/ STR         R3, [SP] 
    /*000121d8*/ MOV         R2, #37                     @ 0x25 
    /*000121dc*/ STR         R8, [SP, #132]              @ 0x84 
    /*000121e0*/ ADD         R0, SP, #24 
    /*000121e4*/ LDR         R4, [R5] 
    /*000121e8*/ BLX         R4 
    /*000121ec*/ SUBS        R4, R0, #0 
    /*000121f0*/ BNE         GDC_ProcCorrectionWithBgColor.part.8_x123bc
    /*000121f4*/ MOVW        R7, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*000121f8*/ MOVT        R7, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*000121fc*/ ADD         R1, SP, #20 
    /*00012200*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00012204*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00012208*/ BL          0x0000000000012208          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001220c*/ LDR         R2, [R7] 
    /*00012210*/ ADD         R1, SP, #20 
    /*00012214*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00012218*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001221c*/ LDR         R3, [R2, #1360]             @ 0x550 
    /*00012220*/ ADD         R3, R3, #1 
    /*00012224*/ STR         R3, [R2, #1360]             @ 0x550 
    /*00012228*/ BL          0x0000000000012228          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001222c*/ LDR         R3, [R5, #64]               @ 0x40 
    /*00012230*/ BLX         R3 
    /*00012234*/ SUBS        R6, R0, #0 
    /*00012238*/ BEQ         GDC_ProcCorrectionWithBgColor.part.8_x12490
    /*0001223c*/ ADD         R3, R9, #336                @ 0x150 
    /*00012240*/ MOV         R2, #336                    @ 0x150 
    /*00012244*/ STR         R3, [SP, #12] 
    /*00012248*/ MOV         SL, #37                     @ 0x25 
    /*0001224c*/ MOV         R1, R3 
    /*00012250*/ BL          0x0000000000012250          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00012254*/ LDR         R3, [SP, #12] 
    /*00012258*/ MOV         R2, #336                    @ 0x150 
    /*0001225c*/ ADD         R0, R6, R2 
    /*00012260*/ MOV         R1, R3 
    /*00012264*/ BL          0x0000000000012264          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00012268*/ LDR         R2, [SP, #8] 
    /*0001226c*/ STR         R4, [R6, #728]              @ 0x2d8 
    /*00012270*/ MOVW        R3, #0                      @ GDC_ProcCorrectionWithBgColorCallBack [R_ARM_MOVW_ABS_NC: .text+0x142c0] 
    /*00012274*/ STR         R4, [R6, #732]              @ 0x2dc 
    /*00012278*/ MOVT        R3, #0                      @ GDC_ProcCorrectionWithBgColorCallBack [R_ARM_MOVT_ABS: .text+0x142c0] 
    /*0001227c*/ STR         R2, [R6, #672]              @ 0x2a0 
    /*00012280*/ MOV         R1, R6 
    /*00012284*/ STR         R4, [R6, #676]              @ 0x2a4 
    /*00012288*/ ADD         R2, SP, #28 
    /*0001228c*/ STR         R3, [R6, #720]              @ 0x2d0 
    /*00012290*/ STR         SL, [R6, #724]              @ 0x2d4 
    /*00012294*/ LDR         IP, [FP, #3600]             @ 0xe10 
    /*00012298*/ LDR         R0, [R9, #340]              @ 0x154 
    /*0001229c*/ LDR         R3, [R9, #336]              @ 0x150 
    /*000122a0*/ STR         IP, [SP, #76]               @ 0x4c 
    /*000122a4*/ STR         R0, [SP, #48]               @ 0x30 
    /*000122a8*/ STR         R4, [SP, #32] 
    /*000122ac*/ STR         R4, [R6, #20] 
    /*000122b0*/ STR         R4, [SP, #36]               @ 0x24 
    /*000122b4*/ STR         R4, [SP, #40]               @ 0x28 
    /*000122b8*/ STR         R3, [SP, #44]               @ 0x2c 
    /*000122bc*/ STR         R8, [SP, #28] 
    /*000122c0*/ LDR         R0, [SP, #24] 
    /*000122c4*/ LDR         R3, [R5, #16] 
    /*000122c8*/ BLX         R3 
    /*000122cc*/ ADD         R1, SP, #20 
    /*000122d0*/ SUBS        R4, R0, #0 
    /*000122d4*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000122d8*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000122dc*/ BNE         GDC_ProcCorrectionWithBgColor.part.8_x1235c
    /*000122e0*/ BL          0x00000000000122E0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000122e4*/ LDR         R2, [R7] 
    /*000122e8*/ ADD         R1, SP, #20 
    /*000122ec*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000122f0*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000122f4*/ LDR         R3, [R2, #1376]             @ 0x560 
    /*000122f8*/ ADD         R3, R3, #1 
    /*000122fc*/ STR         R3, [R2, #1376]             @ 0x560 
    /*00012300*/ BL          0x0000000000012300          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00012304*/ MOV         R1, R8 
    /*00012308*/ LDR         R3, [R5, #12] 
    /*0001230c*/ MOV         R2, R4 
    /*00012310*/ LDR         R0, [SP, #24] 
    /*00012314*/ BLX         R3 
    /*00012318*/ ADD         R1, SP, #20 
    /*0001231c*/ CMP         R0, #0 
    /*00012320*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00012324*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00012328*/ BNE         GDC_ProcCorrectionWithBgColor.part.8_x12428
    /*0001232c*/ BL          0x000000000001232C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00012330*/ LDR         R2, [R7] 
    /*00012334*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00012338*/ ADD         R1, SP, #20 
    /*0001233c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00012340*/ LDR         R3, [R2, #1392]             @ 0x570 
    /*00012344*/ ADD         R3, R3, #1 
    /*00012348*/ STR         R3, [R2, #1392]             @ 0x570 
    /*0001234c*/ BL          0x000000000001234C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    GDC_ProcCorrectionWithBgColor.part.8_x12350:
    /*00012350*/ MOV         R0, R4 
    /*00012354*/ ADD         SP, SP, #148                @ 0x94 
    /*00012358*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcCorrectionWithBgColor.part.8_x1235c:
    /*0001235c*/ BL          0x000000000001235C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00012360*/ LDR         R2, [R7] 
    /*00012364*/ ADD         R1, SP, #20 
    /*00012368*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0001236c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00012370*/ LDR         R3, [R2, #1380]             @ 0x564 
    /*00012374*/ ADD         R3, R3, #1 
    /*00012378*/ STR         R3, [R2, #1380]             @ 0x564 
    /*0001237c*/ BL          0x000000000001237C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00012380*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x46d8] 
    /*00012384*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x46d8] 
    /*00012388*/ MOV         R1, SL 
    /*0001238c*/ MOVW        R3, #2119                   @ 0x847 
    /*00012390*/ STR         SL, [SP, #4] 
    /*00012394*/ STR         R3, [SP] 
    GDC_ProcCorrectionWithBgColor.part.8_x12398:
    /*00012398*/ LDR         R3, [PC, #328]              @ 0x00000000000124e8 
    /*0001239c*/ MOV         R0, #3 
    /*000123a0*/ BL          0x00000000000123A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000123a4*/ LDR         R3, [R5, #4] 
    /*000123a8*/ LDR         R0, [SP, #24] 
    /*000123ac*/ BLX         R3 
    /*000123b0*/ MOV         R0, R4 
    /*000123b4*/ ADD         SP, SP, #148                @ 0x94 
    /*000123b8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcCorrectionWithBgColor.part.8_x123bc:
    /*000123bc*/ ADD         R1, SP, #20 
    /*000123c0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000123c4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000123c8*/ BL          0x00000000000123C8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000123cc*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*000123d0*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*000123d4*/ ADD         R1, SP, #20 
    /*000123d8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000123dc*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000123e0*/ LDR         R2, [R3] 
    /*000123e4*/ LDR         R3, [R2, #1364]             @ 0x554 
    /*000123e8*/ ADD         R3, R3, R8 
    /*000123ec*/ STR         R3, [R2, #1364]             @ 0x554 
    /*000123f0*/ BL          0x00000000000123F0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000123f4*/ MOV         R3, #37                     @ 0x25 
    /*000123f8*/ MOV         R1, R3 
    /*000123fc*/ STR         R3, [SP, #4] 
    /*00012400*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x45cc] 
    /*00012404*/ MOVW        R3, #2072                   @ 0x818 
    /*00012408*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x45cc] 
    /*0001240c*/ STR         R3, [SP] 
    /*00012410*/ MOV         R0, #3 
    /*00012414*/ LDR         R3, [PC, #204]              @ 0x00000000000124e8 
    /*00012418*/ BL          0x0000000000012418          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001241c*/ MOV         R0, R4 
    /*00012420*/ ADD         SP, SP, #148                @ 0x94 
    /*00012424*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcCorrectionWithBgColor.part.8_x12428:
    /*00012428*/ BL          0x0000000000012428          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001242c*/ LDR         R2, [R7] 
    /*00012430*/ ADD         R1, SP, #20 
    /*00012434*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00012438*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001243c*/ LDR         R3, [R2, #1396]             @ 0x574 
    /*00012440*/ ADD         R3, R3, #1 
    /*00012444*/ STR         R3, [R2, #1396]             @ 0x574 
    /*00012448*/ BL          0x0000000000012448          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001244c*/ MOVW        R3, #2141                   @ 0x85d 
    /*00012450*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4698] 
    /*00012454*/ STR         SL, [SP, #4] 
    /*00012458*/ MOV         R1, SL 
    /*0001245c*/ STR         R3, [SP] 
    /*00012460*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4698] 
    /*00012464*/ B           GDC_ProcCorrectionWithBgColor.part.8_x12398
    GDC_ProcCorrectionWithBgColor.part.8_x12468:
    /*00012468*/ MOVW        R3, #2056                   @ 0x808 
    /*0001246c*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4564] 
    /*00012470*/ STR         R3, [SP] 
    /*00012474*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4564] 
    /*00012478*/ LDR         R3, [PC, #104]              @ 0x00000000000124e8 
    /*0001247c*/ MOV         R1, #37                     @ 0x25 
    /*00012480*/ MOV         R0, #3 
    /*00012484*/ MVN         R4, #0 
    /*00012488*/ BL          0x0000000000012488          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001248c*/ B           GDC_ProcCorrectionWithBgColor.part.8_x12350
    GDC_ProcCorrectionWithBgColor.part.8_x12490:
    /*00012490*/ ADD         R1, SP, #20 
    /*00012494*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00012498*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001249c*/ MOVW        R4, #32781                  @ 0x800d 
    /*000124a0*/ BL          0x00000000000124A0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000124a4*/ LDR         R2, [R7] 
    /*000124a8*/ ADD         R1, SP, #20 
    /*000124ac*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000124b0*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000124b4*/ MOVT        R4, #40997                  @ 0xa025 
    /*000124b8*/ LDR         R3, [R2, #1380]             @ 0x564 
    /*000124bc*/ ADD         R3, R3, #1 
    /*000124c0*/ STR         R3, [R2, #1380]             @ 0x564 
    /*000124c4*/ BL          0x00000000000124C4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000124c8*/ MOV         R3, #37                     @ 0x25 
    /*000124cc*/ MOV         R1, R3 
    /*000124d0*/ STR         R3, [SP, #4] 
    /*000124d4*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4610] 
    /*000124d8*/ MOVW        R3, #2086                   @ 0x826 
    /*000124dc*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4610] 
    /*000124e0*/ STR         R3, [SP] 
    /*000124e4*/ B           GDC_ProcCorrectionWithBgColor.part.8_x12398
    /*000124e8*/ ANDEQ       R0, R0, IP, ROR #23 
FUNC_END GDC_ProcCorrectionWithBgColor.part.8


FUNC_BEGIN GDC_ExeGetFreeNode
    /*000124ec*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*000124f0*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*000124f4*/ PUSH        {R4, R5, LR} 
    /*000124f8*/ SUB         SP, SP, #20 
    /*000124fc*/ LDR         R4, [R3] 
    /*00012500*/ ADD         R1, SP, #12 
    /*00012504*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00012508*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001250c*/ ADD         R4, R4, #620                @ 0x26c 
    /*00012510*/ BL          0x0000000000012510          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00012514*/ MOV         R0, R4 
    /*00012518*/ BL          0x0000000000012518          @ GDC_GetNodeFromFreeList [R_ARM_CALL: .text+0xfde4] 
    /*0001251c*/ SUBS        R5, R0, #0 
    /*00012520*/ BEQ         GDC_ExeGetFreeNode_x12558
    /*00012524*/ ADD         R3, R5, #4096               @ 0x1000 
    /*00012528*/ MOV         R0, R4 
    /*0001252c*/ MOV         R2, #0 
    /*00012530*/ MOV         R1, R5 
    /*00012534*/ STR         R2, [R3, #760]              @ 0x2f8 
    /*00012538*/ BL          0x0000000000012538          @ GDC_PutNodeToBusyList [R_ARM_CALL: .text+0xff60] 
    /*0001253c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00012540*/ ADD         R1, SP, #12 
    /*00012544*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00012548*/ BL          0x0000000000012548          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    GDC_ExeGetFreeNode_x1254c:
    /*0001254c*/ MOV         R0, R5 
    /*00012550*/ ADD         SP, SP, #20 
    /*00012554*/ POP         {R4, R5, PC} 
    GDC_ExeGetFreeNode_x12558:
    /*00012558*/ MOV         R3, #41                     @ 0x29 
    /*0001255c*/ MOV         R1, #37                     @ 0x25 
    /*00012560*/ STR         R3, [SP] 
    /*00012564*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4720] 
    /*00012568*/ LDR         R3, [PC, #28]               @ 0x000000000001258c 
    /*0001256c*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4720] 
    /*00012570*/ MOV         R0, #3 
    /*00012574*/ BL          0x0000000000012574          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012578*/ ADD         R1, SP, #12 
    /*0001257c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00012580*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00012584*/ BL          0x0000000000012584          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00012588*/ B           GDC_ExeGetFreeNode_x1254c
    /*0001258c*/ ANDEQ       R0, R0, IP, LSL #24 
FUNC_END GDC_ExeGetFreeNode


FUNC_BEGIN GDC_ExePutFreeNode
    /*00012590*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00012594*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00012598*/ PUSH        {R4, R5, R6, LR} 
    /*0001259c*/ MOVW        R4, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000125a0*/ LDR         R5, [R3] 
    /*000125a4*/ MOVT        R4, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000125a8*/ SUB         SP, SP, #8 
    /*000125ac*/ MOV         R6, R0 
    /*000125b0*/ ADD         R5, R5, #620                @ 0x26c 
    /*000125b4*/ ADD         R1, SP, #4 
    /*000125b8*/ MOV         R0, R4 
    /*000125bc*/ BL          0x00000000000125BC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000125c0*/ MOV         R1, R6 
    /*000125c4*/ MOV         R0, R5 
    /*000125c8*/ BL          0x00000000000125C8          @ GDC_GetCurrentNodeFromBusyList [R_ARM_CALL: .text+0xff84] 
    /*000125cc*/ MOV         R1, R6 
    /*000125d0*/ MOV         R0, R5 
    /*000125d4*/ BL          0x00000000000125D4          @ GDC_PutNodeToFreeList [R_ARM_CALL: .text+0xfe90] 
    /*000125d8*/ ADD         R1, SP, #4 
    /*000125dc*/ MOV         R0, R4 
    /*000125e0*/ BL          0x00000000000125E0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000125e4*/ ADD         SP, SP, #8 
    /*000125e8*/ POP         {R4, R5, R6, PC} 
FUNC_END GDC_ExePutFreeNode


FUNC_BEGIN GDC_CheckCompressOutputAlign
    /*000125ec*/ PUSH        {R4, R5, R6, LR} 
    /*000125f0*/ MOV         R5, R0 
    /*000125f4*/ SUB         SP, SP, #16 
    /*000125f8*/ MOV         R0, R1 
    /*000125fc*/ MOV         R4, R1 
    /*00012600*/ BL          0x0000000000012600          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*00012604*/ SUBS        R6, R0, #0 
    /*00012608*/ BNE         GDC_CheckCompressOutputAlign_x12684
    /*0001260c*/ LDR         LR, [R4, #36]               @ 0x24 
    /*00012610*/ CMP         LR, #0 
    /*00012614*/ BEQ         GDC_CheckCompressOutputAlign_x12684
    /*00012618*/ LDR         R3, [R4, #68]               @ 0x44 
    /*0001261c*/ RSBS        R2, R3, #0 
    /*00012620*/ UXTB        R6, R3 
    /*00012624*/ UXTB        R2, R2 
    /*00012628*/ RSBPL       R6, R2, #0 
    /*0001262c*/ CMP         R6, #0 
    /*00012630*/ BNE         GDC_CheckCompressOutputAlign_x12690
    /*00012634*/ MOV         R1, R4 
    /*00012638*/ MOV         R0, R6 
    /*0001263c*/ B           GDC_CheckCompressOutputAlign_x12660
    GDC_CheckCompressOutputAlign_x12640:
    /*00012640*/ LDR         R3, [R1, #112]              @ 0x70 
    /*00012644*/ ADD         R1, R1, #44                 @ 0x2c 
    /*00012648*/ RSBS        IP, R3, #0 
    /*0001264c*/ UXTB        R2, R3 
    /*00012650*/ UXTB        IP, IP 
    /*00012654*/ RSBPL       R2, IP, #0 
    /*00012658*/ CMP         R2, #0 
    /*0001265c*/ BNE         GDC_CheckCompressOutputAlign_x12690
    GDC_CheckCompressOutputAlign_x12660:
    /*00012660*/ LDR         R2, [R1, #76]               @ 0x4c 
    /*00012664*/ SUB         R3, R5, R3 
    /*00012668*/ TST         R2, #255                    @ 0xff 
    /*0001266c*/ BEQ         GDC_CheckCompressOutputAlign_x12678
    /*00012670*/ CMP         R2, R3 
    /*00012674*/ BNE         GDC_CheckCompressOutputAlign_x126cc
    GDC_CheckCompressOutputAlign_x12678:
    /*00012678*/ ADD         R0, R0, #1 
    /*0001267c*/ CMP         LR, R0 
    /*00012680*/ BNE         GDC_CheckCompressOutputAlign_x12640
    GDC_CheckCompressOutputAlign_x12684:
    /*00012684*/ MOV         R0, R6 
    /*00012688*/ ADD         SP, SP, #16 
    /*0001268c*/ POP         {R4, R5, R6, PC} 
    GDC_CheckCompressOutputAlign_x12690:
    /*00012690*/ STR         R3, [SP, #8] 
    /*00012694*/ MOV         R1, #37                     @ 0x25 
    /*00012698*/ STR         R0, [SP, #4] 
    /*0001269c*/ MOV         R3, #106                    @ 0x6a 
    /*000126a0*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x47dc] 
    /*000126a4*/ STR         R3, [SP] 
    /*000126a8*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x47dc] 
    /*000126ac*/ LDR         R3, [PC, #88]               @ 0x000000000001270c 
    /*000126b0*/ MOV         R0, #3 
    /*000126b4*/ MOVW        R6, #32771                  @ 0x8003 
    /*000126b8*/ BL          0x00000000000126B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000126bc*/ MOVT        R6, #40997                  @ 0xa025 
    /*000126c0*/ MOV         R0, R6 
    /*000126c4*/ ADD         SP, SP, #16 
    /*000126c8*/ POP         {R4, R5, R6, PC} 
    GDC_CheckCompressOutputAlign_x126cc:
    /*000126cc*/ STR         R3, [SP, #12] 
    /*000126d0*/ MOV         R1, #37                     @ 0x25 
    /*000126d4*/ STR         R2, [SP, #8] 
    /*000126d8*/ MOV         R3, #100                    @ 0x64 
    /*000126dc*/ STR         R0, [SP, #4] 
    /*000126e0*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x474c] 
    /*000126e4*/ STR         R3, [SP] 
    /*000126e8*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x474c] 
    /*000126ec*/ LDR         R3, [PC, #24]               @ 0x000000000001270c 
    /*000126f0*/ MOV         R0, #3 
    /*000126f4*/ BL          0x00000000000126F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000126f8*/ MOVW        R6, #32771                  @ 0x8003 
    /*000126fc*/ MOVT        R6, #40997                  @ 0xa025 
    /*00012700*/ MOV         R0, R6 
    /*00012704*/ ADD         SP, SP, #16 
    /*00012708*/ POP         {R4, R5, R6, PC} 
    /*0001270c*/ ANDEQ       R0, R0, R0, LSR #24 
FUNC_END GDC_CheckCompressOutputAlign


FUNC_BEGIN GDC_CheckSeamlessOutput
    /*00012710*/ PUSH        {R4, R5, R6, LR} 
    /*00012714*/ MOV         R5, R0 
    /*00012718*/ SUB         SP, SP, #8 
    /*0001271c*/ MOV         R0, R2 
    /*00012720*/ MOV         R4, R2 
    /*00012724*/ MOV         R6, R1 
    /*00012728*/ BL          0x0000000000012728          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*0001272c*/ CMP         R0, #0 
    /*00012730*/ BNE         GDC_CheckSeamlessOutput_x12764
    /*00012734*/ LDR         R3, [R4, #68]               @ 0x44 
    /*00012738*/ CMP         R3, #0 
    /*0001273c*/ BNE         GDC_CheckSeamlessOutput_x1276c
    /*00012740*/ LDR         R3, [R4, #72]               @ 0x48 
    /*00012744*/ CMP         R3, #0 
    /*00012748*/ BNE         GDC_CheckSeamlessOutput_x1276c
    /*0001274c*/ LDR         R3, [R4, #76]               @ 0x4c 
    /*00012750*/ CMP         R3, R5 
    /*00012754*/ BNE         GDC_CheckSeamlessOutput_x1276c
    /*00012758*/ LDR         R3, [R4, #80]               @ 0x50 
    /*0001275c*/ CMP         R3, R6 
    /*00012760*/ BNE         GDC_CheckSeamlessOutput_x1276c
    GDC_CheckSeamlessOutput_x12764:
    /*00012764*/ ADD         SP, SP, #8 
    /*00012768*/ POP         {R4, R5, R6, PC} 
    GDC_CheckSeamlessOutput_x1276c:
    /*0001276c*/ MOV         R3, #124                    @ 0x7c 
    /*00012770*/ MOV         R1, #37                     @ 0x25 
    /*00012774*/ STR         R3, [SP] 
    /*00012778*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4828] 
    /*0001277c*/ LDR         R3, [PC, #24]               @ 0x000000000001279c 
    /*00012780*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4828] 
    /*00012784*/ MOV         R0, #3 
    /*00012788*/ BL          0x0000000000012788          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001278c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00012790*/ MOVT        R0, #40997                  @ 0xa025 
    /*00012794*/ ADD         SP, SP, #8 
    /*00012798*/ POP         {R4, R5, R6, PC} 
    /*0001279c*/ ANDEQ       R0, R0, R0, ASR #24 
FUNC_END GDC_CheckSeamlessOutput


FUNC_BEGIN GDC_CheckFisheyeImage
    /*000127a0*/ PUSH        {R4, R5, LR} 
    /*000127a4*/ MOV         R5, R0 
    /*000127a8*/ LDR         R0, [R0] 
    /*000127ac*/ SUB         SP, SP, #20 
    /*000127b0*/ CMP         R0, #1920                   @ 0x780 
    /*000127b4*/ LDRCC       R1, [R5, #4] 
    /*000127b8*/ BCC         GDC_CheckFisheyeImage_x128c8
    /*000127bc*/ MOV         R4, R1 
    /*000127c0*/ LDR         R1, [R5, #4] 
    /*000127c4*/ MOVW        R3, #1079                   @ 0x437 
    /*000127c8*/ CMP         R1, R3 
    /*000127cc*/ BLS         GDC_CheckFisheyeImage_x128c8
    /*000127d0*/ LDR         R3, [R4] 
    /*000127d4*/ LDR         R2, [R4, #4] 
    /*000127d8*/ CMP         R3, #640                    @ 0x280 
    /*000127dc*/ BCC         GDC_CheckFisheyeImage_x12890
    /*000127e0*/ CMP         R2, #360                    @ 0x168 
    /*000127e4*/ BCC         GDC_CheckFisheyeImage_x12890
    /*000127e8*/ MOV         R3, #0 
    /*000127ec*/ MOV         R2, #1 
    /*000127f0*/ BL          0x00000000000127F0          @ GDC_DRV_CheckCommWH [R_ARM_CALL: .text+0x1793c] 
    /*000127f4*/ CMP         R0, #0 
    /*000127f8*/ BEQ         GDC_CheckFisheyeImage_x12804
    GDC_CheckFisheyeImage_x127fc:
    /*000127fc*/ ADD         SP, SP, #20 
    /*00012800*/ POP         {R4, R5, PC} 
    GDC_CheckFisheyeImage_x12804:
    /*00012804*/ MOV         R2, R0 
    /*00012808*/ MOV         R3, #1 
    /*0001280c*/ LDM         R4, {R0, R1} 
    /*00012810*/ BL          0x0000000000012810          @ GDC_DRV_CheckCommWH [R_ARM_CALL: .text+0x1793c] 
    /*00012814*/ CMP         R0, #0 
    /*00012818*/ BNE         GDC_CheckFisheyeImage_x127fc
    /*0001281c*/ LDR         R0, [R5, #8] 
    /*00012820*/ BL          0x0000000000012820          @ GDC_DRV_CheckPixelFormat [R_ARM_CALL: .text+0x18f00] 
    /*00012824*/ CMP         R0, #0 
    /*00012828*/ BNE         GDC_CheckFisheyeImage_x128fc
    /*0001282c*/ LDR         R3, [R5, #12] 
    /*00012830*/ CMP         R3, #0 
    /*00012834*/ BNE         GDC_CheckFisheyeImage_x128e4
    /*00012838*/ LDR         R0, [R4, #8] 
    /*0001283c*/ BL          0x000000000001283C          @ GDC_DRV_CheckPixelFormat [R_ARM_CALL: .text+0x18f00] 
    /*00012840*/ CMP         R0, #0 
    /*00012844*/ BNE         GDC_CheckFisheyeImage_x1291c
    /*00012848*/ LDR         R3, [R5, #8] 
    /*0001284c*/ CMP         R3, #39                     @ 0x27 
    /*00012850*/ BNE         GDC_CheckFisheyeImage_x127fc
    /*00012854*/ LDR         R3, [R4, #8] 
    /*00012858*/ CMP         R3, #26 
    /*0001285c*/ BNE         GDC_CheckFisheyeImage_x127fc
    /*00012860*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x49c8] 
    /*00012864*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x49c8] 
    /*00012868*/ STR         R3, [SP, #4] 
    /*0001286c*/ MOV         R3, #181                    @ 0xb5 
    /*00012870*/ STR         R3, [SP] 
    GDC_CheckFisheyeImage_x12874:
    /*00012874*/ LDR         R3, [PC, #192]              @ 0x000000000001293c 
    GDC_CheckFisheyeImage_x12878:
    /*00012878*/ MOV         R1, #37                     @ 0x25 
    /*0001287c*/ MOV         R0, #3 
    /*00012880*/ BL          0x0000000000012880          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012884*/ MOVW        R0, #32771                  @ 0x8003 
    /*00012888*/ MOVT        R0, #40997                  @ 0xa025 
    /*0001288c*/ B           GDC_CheckFisheyeImage_x127fc
    GDC_CheckFisheyeImage_x12890:
    /*00012890*/ STR         R2, [SP, #8] 
    /*00012894*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x48c0] 
    /*00012898*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x48c0] 
    /*0001289c*/ MOV         R1, #141                    @ 0x8d 
    /*000128a0*/ STR         R3, [SP, #4] 
    /*000128a4*/ STR         R1, [SP] 
    GDC_CheckFisheyeImage_x128a8:
    /*000128a8*/ LDR         R3, [PC, #140]              @ 0x000000000001293c 
    /*000128ac*/ MOV         R1, #37                     @ 0x25 
    /*000128b0*/ MOV         R0, #3 
    /*000128b4*/ BL          0x00000000000128B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000128b8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000128bc*/ MOVT        R0, #40997                  @ 0xa025 
    /*000128c0*/ ADD         SP, SP, #20 
    /*000128c4*/ POP         {R4, R5, PC} 
    GDC_CheckFisheyeImage_x128c8:
    /*000128c8*/ MOV         R3, #135                    @ 0x87 
    /*000128cc*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4880] 
    /*000128d0*/ STR         R1, [SP, #8] 
    /*000128d4*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4880] 
    /*000128d8*/ STR         R0, [SP, #4] 
    /*000128dc*/ STR         R3, [SP] 
    /*000128e0*/ B           GDC_CheckFisheyeImage_x128a8
    GDC_CheckFisheyeImage_x128e4:
    /*000128e4*/ STR         R3, [SP, #4] 
    /*000128e8*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4940] 
    /*000128ec*/ MOV         R3, #167                    @ 0xa7 
    /*000128f0*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4940] 
    /*000128f4*/ STR         R3, [SP] 
    /*000128f8*/ B           GDC_CheckFisheyeImage_x12874
    GDC_CheckFisheyeImage_x128fc:
    /*000128fc*/ LDR         R1, [R5, #8] 
    /*00012900*/ MOV         R3, #161                    @ 0xa1 
    /*00012904*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4900] 
    /*00012908*/ STR         R3, [SP] 
    /*0001290c*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4900] 
    /*00012910*/ LDR         R3, [PC, #36]               @ 0x000000000001293c 
    /*00012914*/ STR         R1, [SP, #4] 
    /*00012918*/ B           GDC_CheckFisheyeImage_x12878
    GDC_CheckFisheyeImage_x1291c:
    /*0001291c*/ LDR         R1, [R4, #8] 
    /*00012920*/ MOV         R3, #175                    @ 0xaf 
    /*00012924*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4984] 
    /*00012928*/ STR         R3, [SP] 
    /*0001292c*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4984] 
    /*00012930*/ LDR         R3, [PC, #4]                @ 0x000000000001293c 
    /*00012934*/ STR         R1, [SP, #4] 
    /*00012938*/ B           GDC_CheckFisheyeImage_x12878
    /*0001293c*/ ANDEQ       R0, R0, R8, ASR IP 
FUNC_END GDC_CheckFisheyeImage


FUNC_BEGIN GDC_CheckRegionCompressFormat
    /*00012940*/ PUSH        {R4, R5, R6, LR} 
    /*00012944*/ SUB         SP, SP, #8 
    /*00012948*/ LDR         R0, [R1, #12] 
    /*0001294c*/ MOV         R4, R1 
    /*00012950*/ MOV         R6, R2 
    /*00012954*/ BL          0x0000000000012954          @ GDC_DRV_CheckCompressFormat [R_ARM_CALL: .text+0x18f1c] 
    /*00012958*/ SUBS        R5, R0, #0 
    /*0001295c*/ BNE         GDC_CheckRegionCompressFormat_x12a34
    /*00012960*/ LDR         R3, [R4, #12] 
    /*00012964*/ CMP         R3, #0 
    /*00012968*/ BEQ         GDC_CheckRegionCompressFormat_x12998
    /*0001296c*/ LDR         R3, [R6, #8] 
    /*00012970*/ CMP         R3, #1 
    /*00012974*/ BEQ         GDC_CheckRegionCompressFormat_x129fc
    /*00012978*/ LDR         R3, [R6, #36]               @ 0x24 
    /*0001297c*/ CMP         R3, #1 
    /*00012980*/ BNE         GDC_CheckRegionCompressFormat_x129d0
    /*00012984*/ MOV         R2, R6 
    /*00012988*/ LDM         R4, {R0, R1} 
    /*0001298c*/ BL          0x000000000001298C          @ GDC_CheckSeamlessOutput [R_ARM_CALL: .text+0x12710] 
    /*00012990*/ SUBS        R5, R0, #0 
    /*00012994*/ BNE         GDC_CheckRegionCompressFormat_x129a4
    GDC_CheckRegionCompressFormat_x12998:
    /*00012998*/ MOV         R0, R5 
    /*0001299c*/ ADD         SP, SP, #8 
    /*000129a0*/ POP         {R4, R5, R6, PC} 
    GDC_CheckRegionCompressFormat_x129a4:
    /*000129a4*/ MOV         R3, #220                    @ 0xdc 
    /*000129a8*/ MOV         R1, #37                     @ 0x25 
    /*000129ac*/ STR         R3, [SP] 
    /*000129b0*/ MOVW        R2, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ae0] 
    /*000129b4*/ LDR         R3, [PC, #172]              @ 0x0000000000012a68 
    /*000129b8*/ MOVT        R2, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ae0] 
    /*000129bc*/ MOV         R0, #3 
    /*000129c0*/ BL          0x00000000000129C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000129c4*/ MOV         R0, R5 
    /*000129c8*/ ADD         SP, SP, #8 
    /*000129cc*/ POP         {R4, R5, R6, PC} 
    GDC_CheckRegionCompressFormat_x129d0:
    /*000129d0*/ MOV         R3, #226                    @ 0xe2 
    /*000129d4*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4b40] 
    /*000129d8*/ STR         R3, [SP] 
    /*000129dc*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4b40] 
    /*000129e0*/ LDR         R3, [PC, #128]              @ 0x0000000000012a68 
    /*000129e4*/ MOV         R1, #37                     @ 0x25 
    /*000129e8*/ MOV         R0, #3 
    /*000129ec*/ MOVW        R5, #32771                  @ 0x8003 
    /*000129f0*/ BL          0x00000000000129F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000129f4*/ MOVT        R5, #40997                  @ 0xa025 
    /*000129f8*/ B           GDC_CheckRegionCompressFormat_x12998
    GDC_CheckRegionCompressFormat_x129fc:
    /*000129fc*/ MOV         R1, R6 
    /*00012a00*/ LDR         R0, [R4] 
    /*00012a04*/ BL          0x0000000000012A04          @ GDC_CheckCompressOutputAlign [R_ARM_CALL: .text+0x125ec] 
    /*00012a08*/ SUBS        R5, R0, #0 
    /*00012a0c*/ BEQ         GDC_CheckRegionCompressFormat_x12998
    /*00012a10*/ MOV         R3, #208                    @ 0xd0 
    /*00012a14*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4a74] 
    /*00012a18*/ STR         R3, [SP] 
    /*00012a1c*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4a74] 
    /*00012a20*/ LDR         R3, [PC, #64]               @ 0x0000000000012a68 
    /*00012a24*/ MOV         R1, #37                     @ 0x25 
    /*00012a28*/ MOV         R0, #3 
    /*00012a2c*/ BL          0x0000000000012A2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012a30*/ B           GDC_CheckRegionCompressFormat_x12998
    GDC_CheckRegionCompressFormat_x12a34:
    /*00012a34*/ LDR         R1, [R4, #12] 
    /*00012a38*/ MOV         R3, #195                    @ 0xc3 
    /*00012a3c*/ MOVW        R2, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4a30] 
    /*00012a40*/ STR         R3, [SP] 
    /*00012a44*/ MOVT        R2, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4a30] 
    /*00012a48*/ LDR         R3, [PC, #24]               @ 0x0000000000012a68 
    /*00012a4c*/ STR         R1, [SP, #4] 
    /*00012a50*/ MOV         R0, #3 
    /*00012a54*/ MOV         R1, #37                     @ 0x25 
    /*00012a58*/ MOVW        R5, #32771                  @ 0x8003 
    /*00012a5c*/ BL          0x0000000000012A5C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012a60*/ MOVT        R5, #40997                  @ 0xa025 
    /*00012a64*/ B           GDC_CheckRegionCompressFormat_x12998
    /*00012a68*/ ANDEQ       R0, R0, R0, ROR IP 
FUNC_END GDC_CheckRegionCompressFormat


FUNC_BEGIN GDC_CheckRegionInfo
    /*00012a6c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00012a70*/ MOV         R9, R2 
    /*00012a74*/ LDR         R3, [R2, #36]               @ 0x24 
    /*00012a78*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00012a7c*/ SUB         R2, R3, #1 
    /*00012a80*/ CMP         R2, #3 
    /*00012a84*/ BHI         GDC_CheckRegionInfo_x12f34
    /*00012a88*/ LDR         R2, [R0, #4] 
    /*00012a8c*/ ADD         R4, R9, #40                 @ 0x28 
    /*00012a90*/ LDR         R3, [R0] 
    /*00012a94*/ MOV         R8, R1 
    /*00012a98*/ MOV         R5, #0 
    /*00012a9c*/ MOVW        R6, #4094                   @ 0xffe 
    /*00012aa0*/ ADD         R2, R2, R2, LSL #1 
    /*00012aa4*/ MOVW        R7, #639                    @ 0x27f 
    /*00012aa8*/ ADD         R3, R3, R3, LSL #1 
    /*00012aac*/ LSR         R2, R2, #2 
    /*00012ab0*/ LSR         R3, R3, #2 
    /*00012ab4*/ CMP         R2, R3 
    /*00012ab8*/ MOVCS       R3, R2 
    /*00012abc*/ STR         R3, [SP, #36]               @ 0x24 
    GDC_CheckRegionInfo_x12ac0:
    /*00012ac0*/ MOV         R1, R4 
    /*00012ac4*/ MOV         R0, R5 
    /*00012ac8*/ BL          0x0000000000012AC8          @ GDC_DRV_CheckChipFisheyeRegionAttr [R_ARM_CALL: .text+0x17ab8] 
    /*00012acc*/ CMP         R0, #0 
    /*00012ad0*/ BNE         GDC_CheckRegionInfo_x12c08
    /*00012ad4*/ LDR         R3, [R4] 
    /*00012ad8*/ CMP         R3, #3 
    /*00012adc*/ BEQ         GDC_CheckRegionInfo_x12b54
    /*00012ae0*/ LDMIB       R4, {R1, R2} 
    /*00012ae4*/ CMP         R1, R2 
    /*00012ae8*/ BCS         GDC_CheckRegionInfo_x12e38
    /*00012aec*/ CMP         R2, #0 
    /*00012af0*/ BEQ         GDC_CheckRegionInfo_x12d64
    /*00012af4*/ LDR         R1, [SP, #36]               @ 0x24 
    /*00012af8*/ CMP         R1, R2 
    /*00012afc*/ BCC         GDC_CheckRegionInfo_x12d64
    /*00012b00*/ LDR         R2, [R4, #12] 
    /*00012b04*/ CMP         R2, #360                    @ 0x168 
    /*00012b08*/ BHI         GDC_CheckRegionInfo_x12e54
    /*00012b0c*/ LDR         R2, [R4, #16] 
    /*00012b10*/ CMP         R2, #360                    @ 0x168 
    /*00012b14*/ BHI         GDC_CheckRegionInfo_x12e90
    /*00012b18*/ LDR         R2, [R4, #20] 
    /*00012b1c*/ SUB         R1, R2, #1 
    /*00012b20*/ CMP         R1, R6 
    /*00012b24*/ BHI         GDC_CheckRegionInfo_x12eb4
    /*00012b28*/ LDR         R2, [R4, #24] 
    /*00012b2c*/ SUB         R1, R2, #1 
    /*00012b30*/ CMP         R1, R6 
    /*00012b34*/ BHI         GDC_CheckRegionInfo_x12ef8
    /*00012b38*/ CMP         R3, #1 
    /*00012b3c*/ BEQ         GDC_CheckRegionInfo_x12c44
    /*00012b40*/ CMP         R3, #0 
    /*00012b44*/ BNE         GDC_CheckRegionInfo_x12b54
    /*00012b48*/ LDR         R3, [R9, #32] 
    /*00012b4c*/ CMP         R3, #2 
    /*00012b50*/ BEQ         GDC_CheckRegionInfo_x12f58
    GDC_CheckRegionInfo_x12b54:
    /*00012b54*/ LDR         R3, [R8, #16] 
    /*00012b58*/ CMP         R3, #0 
    /*00012b5c*/ LDR         R3, [R4, #28] 
    /*00012b60*/ BNE         GDC_CheckRegionInfo_x12c10
    /*00012b64*/ TST         R3, #15 
    /*00012b68*/ BNE         GDC_CheckRegionInfo_x12dcc
    /*00012b6c*/ LDR         IP, [R4, #32] 
    /*00012b70*/ TST         IP, #1 
    /*00012b74*/ BNE         GDC_CheckRegionInfo_x12dd8
    GDC_CheckRegionInfo_x12b78:
    /*00012b78*/ CMP         R3, #0 
    /*00012b7c*/ BLT         GDC_CheckRegionInfo_x12c80
    /*00012b80*/ CMP         IP, #0 
    /*00012b84*/ BLT         GDC_CheckRegionInfo_x12c80
    /*00012b88*/ LDR         R2, [R8] 
    /*00012b8c*/ LDR         SL, [R8, #4] 
    /*00012b90*/ SUB         R1, R2, #640                @ 0x280 
    /*00012b94*/ CMP         R3, R1 
    /*00012b98*/ BHI         GDC_CheckRegionInfo_x12cbc
    /*00012b9c*/ SUB         R1, SL, #360                @ 0x168 
    /*00012ba0*/ CMP         IP, R1 
    /*00012ba4*/ BHI         GDC_CheckRegionInfo_x12cbc
    /*00012ba8*/ LDR         R1, [R4, #36]               @ 0x24 
    /*00012bac*/ TST         R1, #1 
    /*00012bb0*/ BNE         GDC_CheckRegionInfo_x12de4
    /*00012bb4*/ LDR         LR, [R4, #40]               @ 0x28 
    /*00012bb8*/ TST         LR, #1 
    /*00012bbc*/ BNE         GDC_CheckRegionInfo_x12e1c
    /*00012bc0*/ CMP         R2, R1 
    /*00012bc4*/ CMPCS       R1, R7 
    /*00012bc8*/ BLS         GDC_CheckRegionInfo_x12cfc
    /*00012bcc*/ MOVW        FP, #359                    @ 0x167 
    /*00012bd0*/ CMP         SL, LR 
    /*00012bd4*/ CMPCS       LR, FP 
    /*00012bd8*/ BLS         GDC_CheckRegionInfo_x12d40
    /*00012bdc*/ ADD         FP, R3, R1 
    /*00012be0*/ CMP         R2, FP 
    /*00012be4*/ BCC         GDC_CheckRegionInfo_x12d88
    /*00012be8*/ ADD         FP, IP, LR 
    /*00012bec*/ CMP         SL, FP 
    /*00012bf0*/ BCC         GDC_CheckRegionInfo_x12d88
    /*00012bf4*/ LDR         R3, [R9, #36]               @ 0x24 
    /*00012bf8*/ ADD         R5, R5, #1 
    /*00012bfc*/ ADD         R4, R4, #44                 @ 0x2c 
    /*00012c00*/ CMP         R3, R5 
    /*00012c04*/ BHI         GDC_CheckRegionInfo_x12ac0
    GDC_CheckRegionInfo_x12c08:
    /*00012c08*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00012c0c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_CheckRegionInfo_x12c10:
    /*00012c10*/ TST         R3, #63                     @ 0x3f 
    /*00012c14*/ BNE         GDC_CheckRegionInfo_x12f24
    /*00012c18*/ LDR         IP, [R4, #32] 
    /*00012c1c*/ TST         IP, #1 
    /*00012c20*/ BEQ         GDC_CheckRegionInfo_x12b78
    GDC_CheckRegionInfo_x12c24:
    /*00012c24*/ MOVW        R1, #335                    @ 0x14f 
    /*00012c28*/ STR         IP, [SP, #12] 
    GDC_CheckRegionInfo_x12c2c:
    /*00012c2c*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4f40] 
    /*00012c30*/ STR         R3, [SP, #8] 
    /*00012c34*/ STR         R5, [SP, #4] 
    /*00012c38*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4f40] 
    /*00012c3c*/ STR         R1, [SP] 
    /*00012c40*/ B           GDC_CheckRegionInfo_x12c9c
    GDC_CheckRegionInfo_x12c44:
    /*00012c44*/ LDR         R3, [R9, #32] 
    /*00012c48*/ CMP         R3, #1 
    /*00012c4c*/ BHI         GDC_CheckRegionInfo_x12b54
    /*00012c50*/ MOVW        R2, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4e70] 
    /*00012c54*/ MOVT        R2, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4e70] 
    /*00012c58*/ MOVW        R3, #309                    @ 0x135 
    /*00012c5c*/ STR         R5, [SP, #4] 
    /*00012c60*/ STR         R3, [SP] 
    GDC_CheckRegionInfo_x12c64:
    /*00012c64*/ LDR         R3, [PC, #772]              @ 0x0000000000012f70 
    /*00012c68*/ MOV         R1, #37                     @ 0x25 
    /*00012c6c*/ MOV         R0, #3 
    /*00012c70*/ BL          0x0000000000012C70          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012c74*/ MOVW        R0, #32771                  @ 0x8003 
    /*00012c78*/ MOVT        R0, #40997                  @ 0xa025 
    /*00012c7c*/ B           GDC_CheckRegionInfo_x12c08
    GDC_CheckRegionInfo_x12c80:
    /*00012c80*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4f9c] 
    /*00012c84*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4f9c] 
    /*00012c88*/ MOVW        R1, #351                    @ 0x15f 
    /*00012c8c*/ STR         IP, [SP, #12] 
    /*00012c90*/ STR         R3, [SP, #8] 
    /*00012c94*/ STR         R5, [SP, #4] 
    /*00012c98*/ STR         R1, [SP] 
    GDC_CheckRegionInfo_x12c9c:
    /*00012c9c*/ MOV         R1, #37                     @ 0x25 
    /*00012ca0*/ LDR         R3, [PC, #712]              @ 0x0000000000012f70 
    /*00012ca4*/ MOV         R0, #3 
    /*00012ca8*/ BL          0x0000000000012CA8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012cac*/ MOVW        R0, #32771                  @ 0x8003 
    /*00012cb0*/ MOVT        R0, #40997                  @ 0xa025 
    /*00012cb4*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00012cb8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_CheckRegionInfo_x12cbc:
    /*00012cbc*/ MOVW        LR, #359                    @ 0x167 
    /*00012cc0*/ STR         R2, [SP, #16] 
    /*00012cc4*/ STR         R3, [SP, #8] 
    /*00012cc8*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ff4] 
    /*00012ccc*/ STR         SL, [SP, #20] 
    /*00012cd0*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ff4] 
    /*00012cd4*/ STR         IP, [SP, #12] 
    /*00012cd8*/ MOV         R1, #37                     @ 0x25 
    /*00012cdc*/ STR         R5, [SP, #4] 
    /*00012ce0*/ MOV         R0, #3 
    /*00012ce4*/ STR         LR, [SP] 
    /*00012ce8*/ LDR         R3, [PC, #640]              @ 0x0000000000012f70 
    /*00012cec*/ BL          0x0000000000012CEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012cf0*/ MOVW        R0, #32771                  @ 0x8003 
    /*00012cf4*/ MOVT        R0, #40997                  @ 0xa025 
    /*00012cf8*/ B           GDC_CheckRegionInfo_x12c08
    GDC_CheckRegionInfo_x12cfc:
    /*00012cfc*/ STR         R2, [SP, #16] 
    /*00012d00*/ MOVW        R2, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5118] 
    /*00012d04*/ MOVT        R2, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5118] 
    /*00012d08*/ MOVW        R3, #381                    @ 0x17d 
    /*00012d0c*/ MOV         R0, #640                    @ 0x280 
    /*00012d10*/ STR         R1, [SP, #8] 
    /*00012d14*/ STR         R5, [SP, #4] 
    /*00012d18*/ STR         R0, [SP, #12] 
    GDC_CheckRegionInfo_x12d1c:
    /*00012d1c*/ STR         R3, [SP] 
    /*00012d20*/ MOV         R1, #37                     @ 0x25 
    /*00012d24*/ LDR         R3, [PC, #580]              @ 0x0000000000012f70 
    /*00012d28*/ MOV         R0, #3 
    /*00012d2c*/ BL          0x0000000000012D2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012d30*/ MOVW        R0, #32771                  @ 0x8003 
    /*00012d34*/ MOVT        R0, #40997                  @ 0xa025 
    /*00012d38*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00012d3c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_CheckRegionInfo_x12d40:
    /*00012d40*/ MOV         R1, #360                    @ 0x168 
    /*00012d44*/ MOVW        R2, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5180] 
    /*00012d48*/ STR         SL, [SP, #16] 
    /*00012d4c*/ MOVW        R3, #389                    @ 0x185 
    /*00012d50*/ STR         LR, [SP, #8] 
    /*00012d54*/ MOVT        R2, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5180] 
    /*00012d58*/ STR         R5, [SP, #4] 
    /*00012d5c*/ STR         R1, [SP, #12] 
    /*00012d60*/ B           GDC_CheckRegionInfo_x12d1c
    GDC_CheckRegionInfo_x12d64:
    /*00012d64*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00012d68*/ STR         R2, [SP, #8] 
    /*00012d6c*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c78] 
    /*00012d70*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c78] 
    /*00012d74*/ STR         R5, [SP, #4] 
    /*00012d78*/ STR         R3, [SP, #12] 
    /*00012d7c*/ MOVW        R3, #274                    @ 0x112 
    GDC_CheckRegionInfo_x12d80:
    /*00012d80*/ STR         R3, [SP] 
    /*00012d84*/ B           GDC_CheckRegionInfo_x12c9c
    GDC_CheckRegionInfo_x12d88:
    /*00012d88*/ STR         R2, [SP, #24] 
    /*00012d8c*/ MOVW        R4, #417                    @ 0x1a1 
    /*00012d90*/ STR         R1, [SP, #16] 
    /*00012d94*/ MOVW        R2, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x51ec] 
    /*00012d98*/ STR         R3, [SP, #8] 
    /*00012d9c*/ MOVT        R2, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x51ec] 
    /*00012da0*/ STR         SL, [SP, #28] 
    /*00012da4*/ MOV         R1, #37                     @ 0x25 
    /*00012da8*/ STR         LR, [SP, #20] 
    /*00012dac*/ MOV         R0, #3 
    /*00012db0*/ STR         IP, [SP, #12] 
    /*00012db4*/ STM         SP, {R4, R5} 
    /*00012db8*/ LDR         R3, [PC, #432]              @ 0x0000000000012f70 
    /*00012dbc*/ BL          0x0000000000012DBC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012dc0*/ MOVW        R0, #32771                  @ 0x8003 
    /*00012dc4*/ MOVT        R0, #40997                  @ 0xa025 
    /*00012dc8*/ B           GDC_CheckRegionInfo_x12c08
    GDC_CheckRegionInfo_x12dcc:
    /*00012dcc*/ MOV         R2, #44                     @ 0x2c 
    /*00012dd0*/ MLA         R9, R2, R5, R9 
    /*00012dd4*/ LDR         IP, [R9, #72]               @ 0x48 
    GDC_CheckRegionInfo_x12dd8:
    /*00012dd8*/ STR         IP, [SP, #12] 
    /*00012ddc*/ MOVW        R1, #326                    @ 0x146 
    /*00012de0*/ B           GDC_CheckRegionInfo_x12c2c
    GDC_CheckRegionInfo_x12de4:
    /*00012de4*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5060] 
    /*00012de8*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5060] 
    /*00012dec*/ MOVW        R3, #366                    @ 0x16e 
    /*00012df0*/ STR         R1, [SP, #8] 
    /*00012df4*/ STR         R5, [SP, #4] 
    /*00012df8*/ STR         R3, [SP] 
    GDC_CheckRegionInfo_x12dfc:
    /*00012dfc*/ LDR         R3, [PC, #364]              @ 0x0000000000012f70 
    GDC_CheckRegionInfo_x12e00:
    /*00012e00*/ MOV         R1, #37                     @ 0x25 
    /*00012e04*/ MOV         R0, #3 
    /*00012e08*/ BL          0x0000000000012E08          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012e0c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00012e10*/ MOVT        R0, #40997                  @ 0xa025 
    /*00012e14*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00012e18*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_CheckRegionInfo_x12e1c:
    /*00012e1c*/ MOVW        R3, #373                    @ 0x175 
    /*00012e20*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x50bc] 
    /*00012e24*/ STR         LR, [SP, #8] 
    /*00012e28*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x50bc] 
    /*00012e2c*/ STR         R5, [SP, #4] 
    /*00012e30*/ STR         R3, [SP] 
    /*00012e34*/ B           GDC_CheckRegionInfo_x12dfc
    GDC_CheckRegionInfo_x12e38:
    /*00012e38*/ STR         R2, [SP, #12] 
    /*00012e3c*/ MOVW        R3, #267                    @ 0x10b 
    /*00012e40*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c14] 
    /*00012e44*/ STR         R1, [SP, #8] 
    /*00012e48*/ STR         R5, [SP, #4] 
    /*00012e4c*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c14] 
    /*00012e50*/ B           GDC_CheckRegionInfo_x12d80
    GDC_CheckRegionInfo_x12e54:
    /*00012e54*/ STR         R2, [SP, #8] 
    /*00012e58*/ MOV         R2, #360                    @ 0x168 
    /*00012e5c*/ STR         R2, [SP, #12] 
    /*00012e60*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4cdc] 
    /*00012e64*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4cdc] 
    /*00012e68*/ MOVW        R3, #281                    @ 0x119 
    /*00012e6c*/ STR         R5, [SP, #4] 
    /*00012e70*/ STR         R3, [SP] 
    GDC_CheckRegionInfo_x12e74:
    /*00012e74*/ LDR         R3, [PC, #244]              @ 0x0000000000012f70 
    /*00012e78*/ MOV         R1, #37                     @ 0x25 
    /*00012e7c*/ MOV         R0, #3 
    /*00012e80*/ BL          0x0000000000012E80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012e84*/ MOVW        R0, #32771                  @ 0x8003 
    /*00012e88*/ MOVT        R0, #40997                  @ 0xa025 
    /*00012e8c*/ B           GDC_CheckRegionInfo_x12c08
    GDC_CheckRegionInfo_x12e90:
    /*00012e90*/ STR         R2, [SP, #8] 
    /*00012e94*/ MOV         R3, #288                    @ 0x120 
    /*00012e98*/ MOV         R2, #360                    @ 0x168 
    /*00012e9c*/ STR         R5, [SP, #4] 
    /*00012ea0*/ STR         R2, [SP, #12] 
    /*00012ea4*/ MOVW        R2, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4d3c] 
    /*00012ea8*/ STR         R3, [SP] 
    /*00012eac*/ MOVT        R2, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4d3c] 
    /*00012eb0*/ B           GDC_CheckRegionInfo_x12e74
    GDC_CheckRegionInfo_x12eb4:
    /*00012eb4*/ STR         R2, [SP, #8] 
    /*00012eb8*/ MOV         R2, #1 
    /*00012ebc*/ STR         R2, [SP, #12] 
    /*00012ec0*/ MOVW        R2, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4da0] 
    /*00012ec4*/ MOVT        R2, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4da0] 
    /*00012ec8*/ MOVW        R3, #4095                   @ 0xfff 
    /*00012ecc*/ STR         R5, [SP, #4] 
    /*00012ed0*/ STR         R3, [SP, #16] 
    /*00012ed4*/ MOVW        R3, #295                    @ 0x127 
    /*00012ed8*/ STR         R3, [SP] 
    GDC_CheckRegionInfo_x12edc:
    /*00012edc*/ LDR         R3, [PC, #140]              @ 0x0000000000012f70 
    /*00012ee0*/ MOV         R1, #37                     @ 0x25 
    /*00012ee4*/ MOV         R0, #3 
    /*00012ee8*/ BL          0x0000000000012EE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012eec*/ MOVW        R0, #32771                  @ 0x8003 
    /*00012ef0*/ MOVT        R0, #40997                  @ 0xa025 
    /*00012ef4*/ B           GDC_CheckRegionInfo_x12c08
    GDC_CheckRegionInfo_x12ef8:
    /*00012ef8*/ MOVW        R3, #4095                   @ 0xfff 
    /*00012efc*/ STR         R2, [SP, #8] 
    /*00012f00*/ STR         R3, [SP, #16] 
    /*00012f04*/ MOV         R2, #1 
    /*00012f08*/ MOVW        R3, #302                    @ 0x12e 
    /*00012f0c*/ STR         R2, [SP, #12] 
    /*00012f10*/ STR         R5, [SP, #4] 
    /*00012f14*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4e08] 
    /*00012f18*/ STR         R3, [SP] 
    /*00012f1c*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4e08] 
    /*00012f20*/ B           GDC_CheckRegionInfo_x12edc
    GDC_CheckRegionInfo_x12f24:
    /*00012f24*/ MOV         R2, #44                     @ 0x2c 
    /*00012f28*/ MLA         R9, R2, R5, R9 
    /*00012f2c*/ LDR         IP, [R9, #72]               @ 0x48 
    /*00012f30*/ B           GDC_CheckRegionInfo_x12c24
    GDC_CheckRegionInfo_x12f34:
    /*00012f34*/ MOV         R2, #4 
    /*00012f38*/ STR         R3, [SP, #4] 
    /*00012f3c*/ STR         R2, [SP, #8] 
    /*00012f40*/ MOV         R3, #246                    @ 0xf6 
    /*00012f44*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4bbc] 
    /*00012f48*/ STR         R3, [SP] 
    /*00012f4c*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4bbc] 
    /*00012f50*/ LDR         R3, [PC, #24]               @ 0x0000000000012f70 
    /*00012f54*/ B           GDC_CheckRegionInfo_x12e00
    GDC_CheckRegionInfo_x12f58:
    /*00012f58*/ MOVW        R3, #315                    @ 0x13b 
    /*00012f5c*/ MOVW        R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ee0] 
    /*00012f60*/ STR         R5, [SP, #4] 
    /*00012f64*/ MOVT        R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ee0] 
    /*00012f68*/ STR         R3, [SP] 
    /*00012f6c*/ B           GDC_CheckRegionInfo_x12c64
    /*00012f70*/ MULEQ       R0, R0, IP 
FUNC_END GDC_CheckRegionInfo


FUNC_BEGIN GDC_CheckCorrectionInfo
    /*00012f74*/ PUSH        {R4, R5, R6, LR} 
    /*00012f78*/ SUB         SP, SP, #16 
    /*00012f7c*/ MOV         R4, R1 
    /*00012f80*/ MOV         R5, R2 
    /*00012f84*/ MOV         R6, R0 
    /*00012f88*/ BL          0x0000000000012F88          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*00012f8c*/ CMP         R0, #0 
    /*00012f90*/ BEQ         GDC_CheckCorrectionInfo_x12f9c
    GDC_CheckCorrectionInfo_x12f94:
    /*00012f94*/ ADD         SP, SP, #16 
    /*00012f98*/ POP         {R4, R5, R6, PC} 
    GDC_CheckCorrectionInfo_x12f9c:
    /*00012f9c*/ MOV         R0, R4 
    /*00012fa0*/ BL          0x0000000000012FA0          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*00012fa4*/ CMP         R0, #0 
    /*00012fa8*/ BNE         GDC_CheckCorrectionInfo_x12f94
    /*00012fac*/ MOV         R0, R5 
    /*00012fb0*/ BL          0x0000000000012FB0          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*00012fb4*/ CMP         R0, #0 
    /*00012fb8*/ BNE         GDC_CheckCorrectionInfo_x12f94
    /*00012fbc*/ MOV         R1, R4 
    /*00012fc0*/ MOV         R0, R6 
    /*00012fc4*/ BL          0x0000000000012FC4          @ GDC_CheckFisheyeImage [R_ARM_CALL: .text+0x127a0] 
    /*00012fc8*/ CMP         R0, #0 
    /*00012fcc*/ BNE         GDC_CheckCorrectionInfo_x12f94
    /*00012fd0*/ MOV         R2, R5 
    /*00012fd4*/ MOV         R1, R4 
    /*00012fd8*/ MOV         R0, R6 
    /*00012fdc*/ BL          0x0000000000012FDC          @ GDC_CheckRegionCompressFormat [R_ARM_CALL: .text+0x12940] 
    /*00012fe0*/ CMP         R0, #0 
    /*00012fe4*/ BNE         GDC_CheckCorrectionInfo_x12f94
    /*00012fe8*/ LDR         R3, [R5] 
    /*00012fec*/ CMP         R3, #1 
    /*00012ff0*/ BHI         GDC_CheckCorrectionInfo_x130b0
    /*00012ff4*/ LDR         R3, [R5, #8] 
    /*00012ff8*/ CMP         R3, #1 
    /*00012ffc*/ BHI         GDC_CheckCorrectionInfo_x13080
    /*00013000*/ CMP         R3, #0 
    /*00013004*/ BEQ         GDC_CheckCorrectionInfo_x13014
    /*00013008*/ LDR         R3, [R5, #12] 
    /*0001300c*/ TST         R3, #-16777216              @ 0xff000000 
    /*00013010*/ BNE         GDC_CheckCorrectionInfo_x1319c
    GDC_CheckCorrectionInfo_x13014:
    /*00013014*/ LDR         R1, [R5, #16] 
    /*00013018*/ MOVW        R3, #511                    @ 0x1ff 
    /*0001301c*/ MOVW        R2, #1022                   @ 0x3fe 
    /*00013020*/ ADD         R0, R1, R3 
    /*00013024*/ CMP         R0, R2 
    /*00013028*/ BHI         GDC_CheckCorrectionInfo_x13170
    /*0001302c*/ LDR         R1, [R5, #20] 
    /*00013030*/ ADD         R0, R1, R3 
    /*00013034*/ CMP         R0, R2 
    /*00013038*/ BHI         GDC_CheckCorrectionInfo_x13144
    /*0001303c*/ LDR         R3, [R5, #28] 
    /*00013040*/ ADD         R2, R3, #760                @ 0x2f8 
    /*00013044*/ CMP         R2, #1520                   @ 0x5f0 
    /*00013048*/ BHI         GDC_CheckCorrectionInfo_x13100
    /*0001304c*/ LDR         R3, [R5, #24] 
    /*00013050*/ CMP         R3, #32 
    /*00013054*/ BHI         GDC_CheckCorrectionInfo_x130c8
    /*00013058*/ MOV         R0, R5 
    /*0001305c*/ BL          0x000000000001305C          @ GDC_DRV_CheckChipFisheyeAttr [R_ARM_CALL: .text+0x17a40] 
    /*00013060*/ CMP         R0, #0 
    /*00013064*/ BNE         GDC_CheckCorrectionInfo_x12f94
    /*00013068*/ MOV         R2, R5 
    /*0001306c*/ MOV         R1, R4 
    /*00013070*/ MOV         R0, R6 
    /*00013074*/ ADD         SP, SP, #16 
    /*00013078*/ POP         {R4, R5, R6, LR} 
    GDC_CheckCorrectionInfo_x1307c:
    /*0001307c*/ B           GDC_CheckCorrectionInfo_x1307c@ GDC_CheckRegionInfo [R_ARM_JUMP24: .text+0x12a6c] 
    GDC_CheckCorrectionInfo_x13080:
    /*00013080*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x52d8] 
    /*00013084*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x52d8] 
    /*00013088*/ STR         R3, [SP, #4] 
    /*0001308c*/ MOVW        R3, #457                    @ 0x1c9 
    /*00013090*/ STR         R3, [SP] 
    GDC_CheckCorrectionInfo_x13094:
    /*00013094*/ LDR         R3, [PC, #292]              @ 0x00000000000131c0 
    /*00013098*/ MOV         R1, #37                     @ 0x25 
    /*0001309c*/ MOV         R0, #3 
    /*000130a0*/ BL          0x00000000000130A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000130a4*/ MOVW        R0, #32771                  @ 0x8003 
    /*000130a8*/ MOVT        R0, #40997                  @ 0xa025 
    /*000130ac*/ B           GDC_CheckCorrectionInfo_x12f94
    GDC_CheckCorrectionInfo_x130b0:
    /*000130b0*/ STR         R3, [SP, #4] 
    /*000130b4*/ MOVW        R2, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5280] 
    /*000130b8*/ MOVW        R3, #451                    @ 0x1c3 
    /*000130bc*/ MOVT        R2, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5280] 
    /*000130c0*/ STR         R3, [SP] 
    /*000130c4*/ B           GDC_CheckCorrectionInfo_x13094
    GDC_CheckCorrectionInfo_x130c8:
    /*000130c8*/ STR         R3, [SP, #4] 
    /*000130cc*/ MOV         R2, #32 
    /*000130d0*/ MOVW        R3, #495                    @ 0x1ef 
    /*000130d4*/ STR         R2, [SP, #8] 
    /*000130d8*/ STR         R3, [SP] 
    /*000130dc*/ MOVW        R2, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x54a4] 
    /*000130e0*/ LDR         R3, [PC, #216]              @ 0x00000000000131c0 
    /*000130e4*/ MOVT        R2, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x54a4] 
    /*000130e8*/ MOV         R1, #37                     @ 0x25 
    /*000130ec*/ MOV         R0, #3 
    /*000130f0*/ BL          0x00000000000130F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000130f4*/ MOVW        R0, #32771                  @ 0x8003 
    /*000130f8*/ MOVT        R0, #40997                  @ 0xa025 
    /*000130fc*/ B           GDC_CheckCorrectionInfo_x12f94
    GDC_CheckCorrectionInfo_x13100:
    /*00013100*/ MOV         R2, #760                    @ 0x2f8 
    /*00013104*/ STR         R2, [SP, #12] 
    /*00013108*/ MOVW        R2, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5448] 
    /*0001310c*/ MOVT        R2, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5448] 
    /*00013110*/ STR         R3, [SP, #4] 
    /*00013114*/ MOV         R1, #488                    @ 0x1e8 
    /*00013118*/ MOVW        R3, #64776                  @ 0xfd08 
    /*0001311c*/ STR         R1, [SP] 
    /*00013120*/ MOVT        R3, #65535                  @ 0xffff 
    /*00013124*/ STR         R3, [SP, #8] 
    GDC_CheckCorrectionInfo_x13128:
    /*00013128*/ LDR         R3, [PC, #144]              @ 0x00000000000131c0 
    GDC_CheckCorrectionInfo_x1312c:
    /*0001312c*/ MOV         R1, #37                     @ 0x25 
    /*00013130*/ MOV         R0, #3 
    /*00013134*/ BL          0x0000000000013134          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013138*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001313c*/ MOVT        R0, #40997                  @ 0xa025 
    /*00013140*/ B           GDC_CheckCorrectionInfo_x12f94
    GDC_CheckCorrectionInfo_x13144:
    /*00013144*/ MOVW        R2, #481                    @ 0x1e1 
    /*00013148*/ STR         R3, [SP, #12] 
    /*0001314c*/ STR         R2, [SP] 
    /*00013150*/ MOVW        R3, #65025                  @ 0xfe01 
    /*00013154*/ MOVW        R2, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x53ec] 
    /*00013158*/ MOVT        R3, #65535                  @ 0xffff 
    /*0001315c*/ STR         R1, [SP, #4] 
    /*00013160*/ MOVT        R2, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x53ec] 
    /*00013164*/ STR         R3, [SP, #8] 
    /*00013168*/ LDR         R3, [PC, #80]               @ 0x00000000000131c0 
    /*0001316c*/ B           GDC_CheckCorrectionInfo_x1312c
    GDC_CheckCorrectionInfo_x13170:
    /*00013170*/ MOVW        R2, #474                    @ 0x1da 
    /*00013174*/ STR         R3, [SP, #12] 
    /*00013178*/ STR         R2, [SP] 
    /*0001317c*/ MOVW        R3, #65025                  @ 0xfe01 
    /*00013180*/ MOVW        R2, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5390] 
    /*00013184*/ MOVT        R3, #65535                  @ 0xffff 
    /*00013188*/ STR         R1, [SP, #4] 
    /*0001318c*/ MOVT        R2, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5390] 
    /*00013190*/ STR         R3, [SP, #8] 
    /*00013194*/ LDR         R3, [PC, #36]               @ 0x00000000000131c0 
    /*00013198*/ B           GDC_CheckCorrectionInfo_x1312c
    GDC_CheckCorrectionInfo_x1319c:
    /*0001319c*/ MVN         R2, #-16777216              @ 0xff000000 
    /*000131a0*/ STR         R3, [SP, #4] 
    /*000131a4*/ STR         R2, [SP, #12] 
    /*000131a8*/ MOVW        R3, #466                    @ 0x1d2 
    /*000131ac*/ MOVW        R2, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5330] 
    /*000131b0*/ STR         R0, [SP, #8] 
    /*000131b4*/ STR         R3, [SP] 
    /*000131b8*/ MOVT        R2, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5330] 
    /*000131bc*/ B           GDC_CheckCorrectionInfo_x13128
    /*000131c0*/ ANDEQ       R0, R0, R4, LSR #25 
FUNC_END GDC_CheckCorrectionInfo


FUNC_BEGIN GDC_ProcAllRegions
    /*000131c4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000131c8*/ SUB         SP, SP, #92                 @ 0x5c 
    /*000131cc*/ MOV         R5, R1 
    /*000131d0*/ MOV         R6, R0 
    /*000131d4*/ STR         R2, [SP, #20] 
    /*000131d8*/ BL          0x00000000000131D8          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*000131dc*/ SUBS        R4, R0, #0 
    /*000131e0*/ BEQ         GDC_ProcAllRegions_x131f0
    GDC_ProcAllRegions_x131e4:
    /*000131e4*/ MOV         R0, R4 
    /*000131e8*/ ADD         SP, SP, #92                 @ 0x5c 
    /*000131ec*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcAllRegions_x131f0:
    /*000131f0*/ MOV         R0, R5 
    /*000131f4*/ BL          0x00000000000131F4          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*000131f8*/ SUBS        R4, R0, #0 
    /*000131fc*/ BNE         GDC_ProcAllRegions_x131e4
    /*00013200*/ BL          0x0000000000013200          @ GDC_CheckModStart [R_ARM_CALL: .text+0xe00] 
    /*00013204*/ SUBS        R4, R0, #0 
    /*00013208*/ BNE         GDC_ProcAllRegions_x131e4
    /*0001320c*/ LDR         R3, [R6, #760]              @ 0x2f8 
    /*00013210*/ ADD         IP, SP, #52                 @ 0x34 
    /*00013214*/ LDR         R2, [R6, #756]              @ 0x2f4 
    /*00013218*/ ADD         R0, SP, #48                 @ 0x30 
    /*0001321c*/ LDR         R1, [R6, #752]              @ 0x2f0 
    /*00013220*/ STR         IP, [SP] 
    /*00013224*/ MOV         IP, #1 
    /*00013228*/ STR         R4, [SP, #84]               @ 0x54 
    /*0001322c*/ STR         R4, [SP, #76]               @ 0x4c 
    /*00013230*/ STR         R4, [SP, #80]               @ 0x50 
    /*00013234*/ STR         IP, [SP, #72]               @ 0x48 
    /*00013238*/ BL          0x0000000000013238          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*0001323c*/ SUBS        R4, R0, #0 
    /*00013240*/ BNE         GDC_ProcAllRegions_x13490
    /*00013244*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00013248*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*0001324c*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00013250*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013254*/ MOV         R7, R3 
    /*00013258*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001325c*/ STR         R3, [SP, #24] 
    /*00013260*/ BL          0x0000000000013260          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00013264*/ LDR         R2, [R7] 
    /*00013268*/ ADD         R1, SP, #44                 @ 0x2c 
    /*0001326c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013270*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013274*/ LDR         R3, [R2, #1416]             @ 0x588 
    /*00013278*/ ADD         R3, R3, #1 
    /*0001327c*/ STR         R3, [R2, #1416]             @ 0x588 
    /*00013280*/ BL          0x0000000000013280          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013284*/ LDR         R2, [R5, #3624]             @ 0xe28 
    /*00013288*/ LDR         R1, [R5, #3592]             @ 0xe08 
    /*0001328c*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10e0] 
    /*00013290*/ CMP         R2, #0 
    /*00013294*/ LDR         R2, [R5, #3596]             @ 0xe0c 
    /*00013298*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10e0] 
    /*0001329c*/ LDR         R0, [R5, #3600]             @ 0xe10 
    /*000132a0*/ LDR         IP, [R5, #3588]             @ 0xe04 
    /*000132a4*/ STR         R1, [R3, #1280]             @ 0x500 
    /*000132a8*/ STR         R2, [R3, #1560]             @ 0x618 
    /*000132ac*/ LDR         R1, [R5, #3604]             @ 0xe14 
    /*000132b0*/ LDR         R2, [R5, #3608]             @ 0xe18 
    /*000132b4*/ STR         R0, [R3, #1564]             @ 0x61c 
    /*000132b8*/ STR         R1, [R3, #1568]             @ 0x620 
    /*000132bc*/ LDR         R0, [R5, #3612]             @ 0xe1c 
    /*000132c0*/ LDR         R1, [R5, #3616]             @ 0xe20 
    /*000132c4*/ STR         R2, [R3, #1572]             @ 0x624 
    /*000132c8*/ LDR         R2, [R5, #3620]             @ 0xe24 
    /*000132cc*/ STR         IP, [R3, #1272]             @ 0x4f8 
    /*000132d0*/ STR         R0, [R3, #1576]             @ 0x628 
    /*000132d4*/ STR         R1, [R3, #1580]             @ 0x62c 
    /*000132d8*/ STR         R2, [R3, #1584]             @ 0x630 
    /*000132dc*/ BEQ         GDC_ProcAllRegions_x13500
    /*000132e0*/ ADD         R2, R5, #3552               @ 0xde0 
    /*000132e4*/ STR         R2, [SP, #28] 
    /*000132e8*/ ADD         R2, R5, #3200               @ 0xc80 
    /*000132ec*/ ADD         R8, R5, #3616               @ 0xe20 
    /*000132f0*/ ADD         R3, R3, #2144               @ 0x860 
    /*000132f4*/ MOV         R7, R4 
    /*000132f8*/ STR         R4, [SP, #36]               @ 0x24 
    /*000132fc*/ ADD         R8, R8, #12 
    /*00013300*/ ADD         FP, R5, #1312               @ 0x520 
    /*00013304*/ ADD         SL, R5, #1600               @ 0x640 
    /*00013308*/ ADD         R9, R5, #3072               @ 0xc00 
    /*0001330c*/ STR         R3, [SP, #32] 
    /*00013310*/ MOV         R4, R2 
    /*00013314*/ B           GDC_ProcAllRegions_x1334c
    GDC_ProcAllRegions_x13318:
    /*00013318*/ BL          0x0000000000013318          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001331c*/ LDR         R3, [SP, #24] 
    /*00013320*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013324*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00013328*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001332c*/ LDR         R2, [R3] 
    /*00013330*/ LDR         R3, [R2, #1424]             @ 0x590 
    /*00013334*/ ADD         R3, R3, #1 
    /*00013338*/ STR         R3, [R2, #1424]             @ 0x590 
    /*0001333c*/ BL          0x000000000001333C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013340*/ LDR         R3, [R5, #3624]             @ 0xe28 
    /*00013344*/ CMP         R7, R3 
    /*00013348*/ BCS         GDC_ProcAllRegions_x134fc
    GDC_ProcAllRegions_x1334c:
    /*0001334c*/ LDR         R3, [PC, #624]              @ 0x00000000000135c4 
    /*00013350*/ MOV         R1, R4 
    /*00013354*/ MOV         R2, #88                     @ 0x58 
    /*00013358*/ ADD         R4, R4, #88                 @ 0x58 
    /*0001335c*/ ADD         R0, R3, #416                @ 0x1a0 
    /*00013360*/ BL          0x0000000000013360          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00013364*/ MOV         R1, FP 
    /*00013368*/ MOV         R2, #72                     @ 0x48 
    /*0001336c*/ LDR         R0, [PC, #596]              @ 0x00000000000135c8 
    /*00013370*/ BL          0x0000000000013370          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00013374*/ MOV         R1, SL 
    /*00013378*/ MOV         R2, #368                    @ 0x170 
    /*0001337c*/ LDR         R0, [PC, #584]              @ 0x00000000000135cc 
    /*00013380*/ BL          0x0000000000013380          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00013384*/ MOV         R1, R9 
    /*00013388*/ MOV         R2, #32 
    /*0001338c*/ LDR         R0, [SP, #32] 
    /*00013390*/ BL          0x0000000000013390          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00013394*/ LDR         R3, [PC, #552]              @ 0x00000000000135c4 
    /*00013398*/ MOV         R2, #24 
    /*0001339c*/ LDR         R1, [SP, #28] 
    /*000133a0*/ ADD         R0, R3, #320                @ 0x140 
    /*000133a4*/ ADD         FP, FP, #72                 @ 0x48 
    /*000133a8*/ BL          0x00000000000133A8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000133ac*/ MOV         R1, R8 
    /*000133b0*/ MOV         R2, #44                     @ 0x2c 
    /*000133b4*/ LDR         R0, [PC, #532]              @ 0x00000000000135d0 
    /*000133b8*/ BL          0x00000000000133B8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000133bc*/ LDR         R3, [R5, #3624]             @ 0xe28 
    /*000133c0*/ MOV         R2, #0 
    /*000133c4*/ LDR         R0, [SP, #48]               @ 0x30 
    /*000133c8*/ SUB         R3, R3, #1 
    /*000133cc*/ ADD         SL, SL, #368                @ 0x170 
    /*000133d0*/ CMP         R3, R7 
    /*000133d4*/ STRNE       R2, [R6, #748]              @ 0x2ec 
    /*000133d8*/ LDR         R2, [PC, #484]              @ 0x00000000000135c4 
    /*000133dc*/ ADD         R7, R7, #1 
    /*000133e0*/ LDREQ       R3, [SP, #20] 
    /*000133e4*/ MOVEQ       R1, #0 
    /*000133e8*/ ADD         R9, R9, #32 
    /*000133ec*/ ADD         R8, R8, #44                 @ 0x2c 
    /*000133f0*/ STREQ       R3, [R6, #672]              @ 0x2a0 
    /*000133f4*/ MOVWEQ      R3, #0                      @ GDC_LastProcIsRegionCallBack [R_ARM_MOVW_ABS_NC: .text+0x10d40] 
    /*000133f8*/ MOVTEQ      R3, #0                      @ GDC_LastProcIsRegionCallBack [R_ARM_MOVT_ABS: .text+0x10d40] 
    /*000133fc*/ STREQ       R3, [R6, #748]              @ 0x2ec 
    /*00013400*/ STREQ       R1, [R6, #676]              @ 0x2a4 
    /*00013404*/ MOV         R1, R6 
    /*00013408*/ BL          0x0000000000013408          @ GDC_AddCorrectionTask [R_ARM_CALL: .text+0x2fe8] 
    /*0001340c*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00013410*/ SUBS        R3, R0, #0 
    /*00013414*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013418*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001341c*/ BEQ         GDC_ProcAllRegions_x13318
    /*00013420*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013424*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013428*/ MOV         R4, R3 
    /*0001342c*/ BL          0x000000000001342C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00013430*/ LDR         R3, [SP, #24] 
    /*00013434*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00013438*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0001343c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013440*/ LDR         R2, [R3] 
    /*00013444*/ LDR         R3, [R2, #1428]             @ 0x594 
    /*00013448*/ ADD         R3, R3, #1 
    /*0001344c*/ STR         R3, [R2, #1428]             @ 0x594 
    /*00013450*/ BL          0x0000000000013450          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013454*/ LDR         R1, [R6, #760]              @ 0x2f8 
    /*00013458*/ LDR         R3, [R6, #752]              @ 0x2f0 
    /*0001345c*/ MOVW        R0, #1319                   @ 0x527 
    /*00013460*/ MOVW        R2, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5500] 
    /*00013464*/ STR         R0, [SP] 
    /*00013468*/ STR         R1, [SP, #8] 
    /*0001346c*/ MOVT        R2, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5500] 
    /*00013470*/ STR         R3, [SP, #4] 
    /*00013474*/ MOV         R1, #37                     @ 0x25 
    /*00013478*/ LDR         R3, [PC, #340]              @ 0x00000000000135d4 
    /*0001347c*/ MOV         R0, #3 
    /*00013480*/ BL          0x0000000000013480          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013484*/ LDR         R0, [SP, #48]               @ 0x30 
    /*00013488*/ BL          0x0000000000013488          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*0001348c*/ B           GDC_ProcAllRegions_x131e4
    GDC_ProcAllRegions_x13490:
    /*00013490*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00013494*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013498*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001349c*/ BL          0x000000000001349C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000134a0*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*000134a4*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*000134a8*/ ADD         R1, SP, #44                 @ 0x2c 
    /*000134ac*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000134b0*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000134b4*/ LDR         R2, [R3] 
    /*000134b8*/ LDR         R3, [R2, #1420]             @ 0x58c 
    /*000134bc*/ ADD         R3, R3, #1 
    /*000134c0*/ STR         R3, [R2, #1420]             @ 0x58c 
    /*000134c4*/ BL          0x00000000000134C4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000134c8*/ LDR         R1, [R6, #760]              @ 0x2f8 
    /*000134cc*/ LDR         R3, [R6, #752]              @ 0x2f0 
    /*000134d0*/ MOVW        R0, #1269                   @ 0x4f5 
    /*000134d4*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4464] 
    /*000134d8*/ STR         R0, [SP] 
    /*000134dc*/ STR         R1, [SP, #8] 
    /*000134e0*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4464] 
    /*000134e4*/ STR         R3, [SP, #4] 
    /*000134e8*/ MOV         R1, #37                     @ 0x25 
    /*000134ec*/ LDR         R3, [PC, #224]              @ 0x00000000000135d4 
    /*000134f0*/ MOV         R0, #3 
    /*000134f4*/ BL          0x00000000000134F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000134f8*/ B           GDC_ProcAllRegions_x131e4
    GDC_ProcAllRegions_x134fc:
    /*000134fc*/ LDR         R4, [SP, #36]               @ 0x24 
    GDC_ProcAllRegions_x13500:
    /*00013500*/ LDR         R0, [SP, #48]               @ 0x30 
    /*00013504*/ BL          0x0000000000013504          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*00013508*/ SUBS        R3, R0, #0 
    /*0001350c*/ BNE         GDC_ProcAllRegions_x1354c
    /*00013510*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00013514*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013518*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001351c*/ MOV         R4, R3 
    /*00013520*/ BL          0x0000000000013520          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00013524*/ LDR         R3, [SP, #24] 
    /*00013528*/ ADD         R1, SP, #44                 @ 0x2c 
    /*0001352c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013530*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013534*/ LDR         R2, [R3] 
    /*00013538*/ LDR         R3, [R2, #1432]             @ 0x598 
    /*0001353c*/ ADD         R3, R3, #1 
    /*00013540*/ STR         R3, [R2, #1432]             @ 0x598 
    /*00013544*/ BL          0x0000000000013544          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013548*/ B           GDC_ProcAllRegions_x131e4
    GDC_ProcAllRegions_x1354c:
    /*0001354c*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00013550*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013554*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013558*/ BL          0x0000000000013558          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001355c*/ LDR         R3, [SP, #24] 
    /*00013560*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00013564*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013568*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001356c*/ LDR         R2, [R3] 
    /*00013570*/ LDR         R3, [R2, #1436]             @ 0x59c 
    /*00013574*/ ADD         R3, R3, #1 
    /*00013578*/ STR         R3, [R2, #1436]             @ 0x59c 
    /*0001357c*/ BL          0x000000000001357C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013580*/ LDR         R1, [R6, #756]              @ 0x2f4 
    /*00013584*/ LDR         R0, [R6, #752]              @ 0x2f0 
    /*00013588*/ MOVW        R3, #1356                   @ 0x54c 
    /*0001358c*/ LDR         IP, [R6, #760]              @ 0x2f8 
    /*00013590*/ MOVW        R2, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x555c] 
    /*00013594*/ STR         R1, [SP, #8] 
    /*00013598*/ MOVT        R2, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x555c] 
    /*0001359c*/ STR         R0, [SP, #4] 
    /*000135a0*/ MOV         R1, #37                     @ 0x25 
    /*000135a4*/ STR         R3, [SP] 
    /*000135a8*/ MOV         R0, #3 
    /*000135ac*/ STR         IP, [SP, #12] 
    /*000135b0*/ LDR         R3, [PC, #28]               @ 0x00000000000135d4 
    /*000135b4*/ BL          0x00000000000135B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000135b8*/ LDR         R0, [SP, #48]               @ 0x30 
    /*000135bc*/ BL          0x00000000000135BC          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*000135c0*/ B           GDC_ProcAllRegions_x131e4
    /*000135c4*/ LDRDEQ      R1, [R0], -R8 
    /*000135c8*/ ANDEQ       R1, R0, R0, LSR R7 
    /*000135cc*/ LDRDEQ      R1, [R0], -R0 
    /*000135d0*/ ANDEQ       R1, R0, R0, ROR #18 
    /*000135d4*/ @           <UNDEFINED> instruction: 0x00000cbc 
FUNC_END GDC_ProcAllRegions


FUNC_BEGIN GDC_ProcAllVgsScale
    /*000135d8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000135dc*/ SUB         SP, SP, #108                @ 0x6c 
    /*000135e0*/ MOV         R5, R1 
    /*000135e4*/ MOV         R6, R0 
    /*000135e8*/ STR         R2, [SP, #12] 
    /*000135ec*/ BL          0x00000000000135EC          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*000135f0*/ SUBS        R4, R0, #0 
    /*000135f4*/ BEQ         GDC_ProcAllVgsScale_x13604
    GDC_ProcAllVgsScale_x135f8:
    /*000135f8*/ MOV         R0, R4 
    /*000135fc*/ ADD         SP, SP, #108                @ 0x6c 
    /*00013600*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcAllVgsScale_x13604:
    /*00013604*/ MOV         R0, R5 
    /*00013608*/ BL          0x0000000000013608          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*0001360c*/ SUBS        R4, R0, #0 
    /*00013610*/ BNE         GDC_ProcAllVgsScale_x135f8
    /*00013614*/ BL          0x0000000000013614          @ GDC_CheckModStart [R_ARM_CALL: .text+0xe00] 
    /*00013618*/ SUBS        R4, R0, #0 
    /*0001361c*/ BNE         GDC_ProcAllVgsScale_x135f8
    /*00013620*/ MOV         R0, #45                     @ 0x2d 
    /*00013624*/ BL          0x0000000000013624          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013628*/ SUBS        FP, R0, #0 
    /*0001362c*/ BEQ         GDC_ProcAllVgsScale_x139d4
    /*00013630*/ LDR         R3, [FP] 
    /*00013634*/ CMP         R3, #0 
    /*00013638*/ BEQ         GDC_ProcAllVgsScale_x139d4
    /*0001363c*/ LDR         R3, [FP, #32] 
    /*00013640*/ CMP         R3, #0 
    /*00013644*/ BEQ         GDC_ProcAllVgsScale_x139d4
    /*00013648*/ LDR         R3, [FP, #12] 
    /*0001364c*/ CMP         R3, #0 
    /*00013650*/ BEQ         GDC_ProcAllVgsScale_x139d4
    /*00013654*/ STR         R4, [SP, #96]               @ 0x60 
    /*00013658*/ MOV         R3, #1 
    /*0001365c*/ STR         R4, [SP] 
    /*00013660*/ ADD         R2, SP, #40                 @ 0x28 
    /*00013664*/ STR         R3, [SP, #92]               @ 0x5c 
    /*00013668*/ MOV         R1, R4 
    /*0001366c*/ STR         R2, [SP, #4] 
    /*00013670*/ MOV         R3, R4 
    /*00013674*/ MOV         R2, #37                     @ 0x25 
    /*00013678*/ LDR         R4, [FP] 
    /*0001367c*/ ADD         R0, SP, #36                 @ 0x24 
    /*00013680*/ BLX         R4 
    /*00013684*/ SUBS        R4, R0, #0 
    /*00013688*/ BNE         GDC_ProcAllVgsScale_x1386c
    /*0001368c*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00013690*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00013694*/ ADD         R1, SP, #32 
    /*00013698*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0001369c*/ MOV         R7, R3 
    /*000136a0*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000136a4*/ STR         R3, [SP, #24] 
    /*000136a8*/ BL          0x00000000000136A8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000136ac*/ LDR         R2, [R7] 
    /*000136b0*/ ADD         R1, SP, #32 
    /*000136b4*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000136b8*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000136bc*/ LDR         R3, [R2, #1368]             @ 0x558 
    /*000136c0*/ ADD         R3, R3, #1 
    /*000136c4*/ STR         R3, [R2, #1368]             @ 0x558 
    /*000136c8*/ BL          0x00000000000136C8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000136cc*/ MOV         R2, #320                    @ 0x140 
    /*000136d0*/ MOV         R1, R4 
    /*000136d4*/ LDR         R0, [PC, #800]              @ 0x00000000000139fc 
    /*000136d8*/ BL          0x00000000000136D8          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000136dc*/ LDR         R3, [R5, #3624]             @ 0xe28 
    /*000136e0*/ CMP         R3, #0 
    /*000136e4*/ BEQ         GDC_ProcAllVgsScale_x138d4
    /*000136e8*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10e0] 
    /*000136ec*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10e0] 
    /*000136f0*/ ADD         R9, R5, #3648               @ 0xe40 
    /*000136f4*/ STR         R3, [SP, #16] 
    /*000136f8*/ ADD         R3, R3, #2224               @ 0x8b0 
    /*000136fc*/ ADD         R9, R9, #8 
    /*00013700*/ ADD         R3, R3, #188                @ 0xbc 
    /*00013704*/ MOV         R7, R4 
    /*00013708*/ STR         R3, [SP, #20] 
    /*0001370c*/ STR         R4, [SP, #28] 
    /*00013710*/ LDR         SL, [SP, #24] 
    /*00013714*/ B           GDC_ProcAllVgsScale_x137dc
    GDC_ProcAllVgsScale_x13718:
    /*00013718*/ STR         IP, [R8, #724]              @ 0x2d4 
    /*0001371c*/ STR         R4, [R8, #728]              @ 0x2d8 
    /*00013720*/ STR         R4, [R8, #732]              @ 0x2dc 
    /*00013724*/ BL          0x0000000000013724          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00013728*/ MOV         R2, #336                    @ 0x150 
    /*0001372c*/ ADD         R1, R6, R2 
    /*00013730*/ ADD         R0, R8, R2 
    /*00013734*/ BL          0x0000000000013734          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00013738*/ LDR         R2, [R5, #3624]             @ 0xe28 
    /*0001373c*/ MOV         R1, R9 
    /*00013740*/ LDR         R0, [SP, #20] 
    /*00013744*/ SUB         R2, R2, #1 
    /*00013748*/ MOV         IP, #1 
    /*0001374c*/ CMP         R2, R7 
    /*00013750*/ STREQ       R4, [R8, #676]              @ 0x2a4 
    /*00013754*/ STRNE       R4, [R8, #720]              @ 0x2d0 
    /*00013758*/ ADD         R7, R7, #1 
    /*0001375c*/ LDREQ       R3, [SP, #12] 
    /*00013760*/ MOVWEQ      R2, #0                      @ GDC_LastProcIsVgsScaleCallBack [R_ARM_MOVW_ABS_NC: .text+0x10f9c] 
    /*00013764*/ MOVTEQ      R2, #0                      @ GDC_LastProcIsVgsScaleCallBack [R_ARM_MOVT_ABS: .text+0x10f9c] 
    /*00013768*/ STREQ       R2, [R8, #720]              @ 0x2d0 
    /*0001376c*/ MOV         R2, #16 
    /*00013770*/ ADD         R9, R9, #44                 @ 0x2c 
    /*00013774*/ STREQ       R3, [R8, #672]              @ 0x2a0 
    /*00013778*/ LDR         R3, [SP, #16] 
    /*0001377c*/ STR         IP, [R3, #2408]             @ 0x968 
    /*00013780*/ BL          0x0000000000013780          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00013784*/ MOV         R1, R8 
    /*00013788*/ LDR         R3, [FP, #32] 
    /*0001378c*/ LDR         R2, [PC, #616]              @ 0x00000000000139fc 
    /*00013790*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00013794*/ BLX         R3 
    /*00013798*/ ADD         R1, SP, #32 
    /*0001379c*/ SUBS        R3, R0, #0 
    /*000137a0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000137a4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000137a8*/ BNE         GDC_ProcAllVgsScale_x1392c
    /*000137ac*/ BL          0x00000000000137AC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000137b0*/ LDR         R2, [SL] 
    /*000137b4*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000137b8*/ ADD         R1, SP, #32 
    /*000137bc*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000137c0*/ LDR         R3, [R2, #1384]             @ 0x568 
    /*000137c4*/ ADD         R3, R3, #1 
    /*000137c8*/ STR         R3, [R2, #1384]             @ 0x568 
    /*000137cc*/ BL          0x00000000000137CC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000137d0*/ LDR         R3, [R5, #3624]             @ 0xe28 
    /*000137d4*/ CMP         R7, R3 
    /*000137d8*/ BCS         GDC_ProcAllVgsScale_x138d0
    GDC_ProcAllVgsScale_x137dc:
    /*000137dc*/ LDR         R3, [FP, #64]               @ 0x40 
    /*000137e0*/ MOV         R4, #0 
    /*000137e4*/ BLX         R3 
    /*000137e8*/ MOV         R1, R6 
    /*000137ec*/ MOV         IP, #37                     @ 0x25 
    /*000137f0*/ MOV         R2, #336                    @ 0x150 
    /*000137f4*/ SUBS        R8, R0, #0 
    /*000137f8*/ BNE         GDC_ProcAllVgsScale_x13718
    /*000137fc*/ ADD         R1, SP, #32 
    /*00013800*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013804*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013808*/ MVN         R4, #0 
    /*0001380c*/ BL          0x000000000001380C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00013810*/ LDR         R3, [SP, #24] 
    /*00013814*/ ADD         R1, SP, #32 
    /*00013818*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0001381c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013820*/ LDR         R2, [R3] 
    /*00013824*/ LDR         R3, [R2, #1388]             @ 0x56c 
    /*00013828*/ ADD         R3, R3, #1 
    /*0001382c*/ STR         R3, [R2, #1388]             @ 0x56c 
    /*00013830*/ BL          0x0000000000013830          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013834*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4610] 
    /*00013838*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4610] 
    /*0001383c*/ MOV         R3, #37                     @ 0x25 
    /*00013840*/ MOV         R1, R3 
    /*00013844*/ STR         R3, [SP, #4] 
    /*00013848*/ MOVW        R3, #1430                   @ 0x596 
    /*0001384c*/ STR         R3, [SP] 
    GDC_ProcAllVgsScale_x13850:
    /*00013850*/ LDR         R3, [PC, #424]              @ 0x0000000000013a00 
    /*00013854*/ MOV         R0, #3 
    /*00013858*/ BL          0x0000000000013858          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001385c*/ LDR         R3, [FP, #4] 
    /*00013860*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00013864*/ BLX         R3 
    /*00013868*/ B           GDC_ProcAllVgsScale_x135f8
    GDC_ProcAllVgsScale_x1386c:
    /*0001386c*/ ADD         R1, SP, #32 
    /*00013870*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013874*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013878*/ BL          0x0000000000013878          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001387c*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00013880*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00013884*/ ADD         R1, SP, #32 
    /*00013888*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0001388c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013890*/ LDR         R2, [R3] 
    /*00013894*/ LDR         R3, [R2, #1372]             @ 0x55c 
    /*00013898*/ ADD         R3, R3, #1 
    /*0001389c*/ STR         R3, [R2, #1372]             @ 0x55c 
    /*000138a0*/ BL          0x00000000000138A0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000138a4*/ MOV         R3, #37                     @ 0x25 
    /*000138a8*/ MOV         R1, R3 
    /*000138ac*/ STR         R3, [SP, #4] 
    /*000138b0*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x45cc] 
    /*000138b4*/ MOVW        R3, #1409                   @ 0x581 
    /*000138b8*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x45cc] 
    /*000138bc*/ STR         R3, [SP] 
    /*000138c0*/ MOV         R0, #3 
    /*000138c4*/ LDR         R3, [PC, #308]              @ 0x0000000000013a00 
    /*000138c8*/ BL          0x00000000000138C8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000138cc*/ B           GDC_ProcAllVgsScale_x135f8
    GDC_ProcAllVgsScale_x138d0:
    /*000138d0*/ LDR         R4, [SP, #28] 
    GDC_ProcAllVgsScale_x138d4:
    /*000138d4*/ LDR         R3, [FP, #12] 
    /*000138d8*/ MOV         R2, #0 
    /*000138dc*/ MOV         R1, #1 
    /*000138e0*/ LDR         R0, [SP, #36]               @ 0x24 
    /*000138e4*/ BLX         R3 
    /*000138e8*/ SUBS        R3, R0, #0 
    /*000138ec*/ BNE         GDC_ProcAllVgsScale_x13980
    /*000138f0*/ ADD         R1, SP, #32 
    /*000138f4*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000138f8*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000138fc*/ MOV         R4, R3 
    /*00013900*/ BL          0x0000000000013900          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00013904*/ LDR         R3, [SP, #24] 
    /*00013908*/ ADD         R1, SP, #32 
    /*0001390c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013910*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013914*/ LDR         R2, [R3] 
    /*00013918*/ LDR         R3, [R2, #1400]             @ 0x578 
    /*0001391c*/ ADD         R3, R3, #1 
    /*00013920*/ STR         R3, [R2, #1400]             @ 0x578 
    /*00013924*/ BL          0x0000000000013924          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013928*/ B           GDC_ProcAllVgsScale_x135f8
    GDC_ProcAllVgsScale_x1392c:
    /*0001392c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013930*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013934*/ MOV         R4, R3 
    /*00013938*/ BL          0x0000000000013938          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001393c*/ LDR         R3, [SP, #24] 
    /*00013940*/ ADD         R1, SP, #32 
    /*00013944*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013948*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001394c*/ LDR         R2, [R3] 
    /*00013950*/ LDR         R3, [R2, #1388]             @ 0x56c 
    /*00013954*/ ADD         R3, R3, #1 
    /*00013958*/ STR         R3, [R2, #1388]             @ 0x56c 
    /*0001395c*/ BL          0x000000000001395C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013960*/ MOV         R3, #37                     @ 0x25 
    /*00013964*/ MOV         R1, R3 
    /*00013968*/ STR         R3, [SP, #4] 
    /*0001396c*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4650] 
    /*00013970*/ MOVW        R3, #1462                   @ 0x5b6 
    /*00013974*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4650] 
    /*00013978*/ STR         R3, [SP] 
    /*0001397c*/ B           GDC_ProcAllVgsScale_x13850
    GDC_ProcAllVgsScale_x13980:
    /*00013980*/ ADD         R1, SP, #32 
    /*00013984*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013988*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001398c*/ BL          0x000000000001398C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00013990*/ LDR         R3, [SP, #24] 
    /*00013994*/ ADD         R1, SP, #32 
    /*00013998*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0001399c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000139a0*/ LDR         R2, [R3] 
    /*000139a4*/ LDR         R3, [R2, #1404]             @ 0x57c 
    /*000139a8*/ ADD         R3, R3, #1 
    /*000139ac*/ STR         R3, [R2, #1404]             @ 0x57c 
    /*000139b0*/ BL          0x00000000000139B0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000139b4*/ MOV         R3, #37                     @ 0x25 
    /*000139b8*/ MOV         R1, R3 
    /*000139bc*/ STR         R3, [SP, #4] 
    /*000139c0*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4698] 
    /*000139c4*/ MOVW        R3, #1499                   @ 0x5db 
    /*000139c8*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4698] 
    /*000139cc*/ STR         R3, [SP] 
    /*000139d0*/ B           GDC_ProcAllVgsScale_x13850
    GDC_ProcAllVgsScale_x139d4:
    /*000139d4*/ MOVW        R3, #1393                   @ 0x571 
    /*000139d8*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4564] 
    /*000139dc*/ STR         R3, [SP] 
    /*000139e0*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4564] 
    /*000139e4*/ LDR         R3, [PC, #20]               @ 0x0000000000013a00 
    /*000139e8*/ MOV         R1, #37                     @ 0x25 
    /*000139ec*/ MOV         R0, #3 
    /*000139f0*/ MVN         R4, #0 
    /*000139f4*/ BL          0x00000000000139F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000139f8*/ B           GDC_ProcAllVgsScale_x135f8
    /*000139fc*/ MULEQ       R0, R0, R9 
    /*00013a00*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END GDC_ProcAllVgsScale


FUNC_BEGIN GDC_ProcVgsScaleFisrt
    /*00013a04*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00013a08*/ SUB         SP, SP, #108                @ 0x6c 
    /*00013a0c*/ MOV         R6, R1 
    /*00013a10*/ MOV         R9, R2 
    /*00013a14*/ MOV         R8, R0 
    /*00013a18*/ BL          0x0000000000013A18          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*00013a1c*/ SUBS        R5, R0, #0 
    /*00013a20*/ BEQ         GDC_ProcVgsScaleFisrt_x13a30
    GDC_ProcVgsScaleFisrt_x13a24:
    /*00013a24*/ MOV         R0, R5 
    /*00013a28*/ ADD         SP, SP, #108                @ 0x6c 
    /*00013a2c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcVgsScaleFisrt_x13a30:
    /*00013a30*/ MOV         R0, R6 
    /*00013a34*/ BL          0x0000000000013A34          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*00013a38*/ SUBS        R5, R0, #0 
    /*00013a3c*/ BNE         GDC_ProcVgsScaleFisrt_x13a24
    /*00013a40*/ BL          0x0000000000013A40          @ GDC_CheckModStart [R_ARM_CALL: .text+0xe00] 
    /*00013a44*/ SUBS        R5, R0, #0 
    /*00013a48*/ BNE         GDC_ProcVgsScaleFisrt_x13a24
    /*00013a4c*/ MOV         R0, #45                     @ 0x2d 
    /*00013a50*/ BL          0x0000000000013A50          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00013a54*/ SUBS        SL, R0, #0 
    /*00013a58*/ BEQ         GDC_ProcVgsScaleFisrt_x13e50
    /*00013a5c*/ LDR         R3, [SL] 
    /*00013a60*/ CMP         R3, #0 
    /*00013a64*/ BEQ         GDC_ProcVgsScaleFisrt_x13e50
    /*00013a68*/ LDR         R3, [SL, #32] 
    /*00013a6c*/ CMP         R3, #0 
    /*00013a70*/ BEQ         GDC_ProcVgsScaleFisrt_x13e50
    /*00013a74*/ LDR         R3, [SL, #12] 
    /*00013a78*/ CMP         R3, #0 
    /*00013a7c*/ BEQ         GDC_ProcVgsScaleFisrt_x13e50
    /*00013a80*/ STR         R5, [SP, #96]               @ 0x60 
    /*00013a84*/ MOV         R3, #1 
    /*00013a88*/ STR         R5, [SP] 
    /*00013a8c*/ ADD         R2, SP, #40                 @ 0x28 
    /*00013a90*/ STR         R3, [SP, #92]               @ 0x5c 
    /*00013a94*/ MOV         R1, R5 
    /*00013a98*/ STR         R2, [SP, #4] 
    /*00013a9c*/ MOV         R3, R5 
    /*00013aa0*/ LDR         R4, [SL] 
    /*00013aa4*/ MOV         R2, #37                     @ 0x25 
    /*00013aa8*/ ADD         R0, SP, #36                 @ 0x24 
    /*00013aac*/ BLX         R4 
    /*00013ab0*/ SUBS        R5, R0, #0 
    /*00013ab4*/ BNE         GDC_ProcVgsScaleFisrt_x13ce8
    /*00013ab8*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00013abc*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00013ac0*/ ADD         R1, SP, #32 
    /*00013ac4*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013ac8*/ MOV         R4, R3 
    /*00013acc*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013ad0*/ STR         R3, [SP, #12] 
    /*00013ad4*/ BL          0x0000000000013AD4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00013ad8*/ LDR         R2, [R4] 
    /*00013adc*/ ADD         R1, SP, #32 
    /*00013ae0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013ae4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013ae8*/ LDR         R3, [R2, #1368]             @ 0x558 
    /*00013aec*/ ADD         R3, R3, #1 
    /*00013af0*/ STR         R3, [R2, #1368]             @ 0x558 
    /*00013af4*/ BL          0x0000000000013AF4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013af8*/ MOV         R2, #320                    @ 0x140 
    /*00013afc*/ MOV         R1, R5 
    /*00013b00*/ LDR         R0, [PC, #880]              @ 0x0000000000013e78 
    /*00013b04*/ BL          0x0000000000013B04          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00013b08*/ LDR         R3, [R6, #3624]             @ 0xe28 
    /*00013b0c*/ CMP         R3, #0 
    /*00013b10*/ BEQ         GDC_ProcVgsScaleFisrt_x13d50
    /*00013b14*/ LDR         R3, [R6, #3628]             @ 0xe2c 
    /*00013b18*/ CMP         R3, #3 
    /*00013b1c*/ BNE         GDC_ProcVgsScaleFisrt_x13d50
    /*00013b20*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10e0] 
    /*00013b24*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10e0] 
    /*00013b28*/ STR         R3, [SP, #16] 
    /*00013b2c*/ ADD         R3, R3, #2544               @ 0x9f0 
    /*00013b30*/ ADD         R3, R3, #188                @ 0xbc 
    /*00013b34*/ ADD         R7, R6, #3648               @ 0xe40 
    /*00013b38*/ STR         R3, [SP, #20] 
    /*00013b3c*/ MOV         R2, #1 
    /*00013b40*/ MOV         R3, #0 
    /*00013b44*/ MOV         FP, R8 
    /*00013b48*/ STR         R9, [SP, #24] 
    /*00013b4c*/ ADD         R7, R7, #8 
    /*00013b50*/ STR         R5, [SP, #28] 
    /*00013b54*/ MOV         R8, R2 
    /*00013b58*/ MOV         R9, R3 
    /*00013b5c*/ B           GDC_ProcVgsScaleFisrt_x13c50
    GDC_ProcVgsScaleFisrt_x13b60:
    /*00013b60*/ STR         IP, [R4, #724]              @ 0x2d4 
    /*00013b64*/ STR         R5, [R4, #728]              @ 0x2d8 
    /*00013b68*/ STR         R5, [R4, #732]              @ 0x2dc 
    /*00013b6c*/ BL          0x0000000000013B6C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00013b70*/ MOV         R2, #336                    @ 0x150 
    /*00013b74*/ ADD         R1, FP, R2 
    /*00013b78*/ ADD         R0, R4, R2 
    /*00013b7c*/ BL          0x0000000000013B7C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00013b80*/ LDR         R0, [R7, #16] 
    /*00013b84*/ MOVW        R2, #0                      @ GDC_ProcVgsScaleFirstCallBack [R_ARM_MOVW_ABS_NC: .text+0x111ec] 
    /*00013b88*/ ADD         IP, R4, #672                @ 0x2a0 
    /*00013b8c*/ CMP         R0, #3 
    /*00013b90*/ ADD         R1, R4, #688                @ 0x2b0 
    /*00013b94*/ MOVT        R2, #0                      @ GDC_ProcVgsScaleFirstCallBack [R_ARM_MOVT_ABS: .text+0x111ec] 
    /*00013b98*/ STREQ       R5, [R4, #720]              @ 0x2d0 
    /*00013b9c*/ BEQ         GDC_ProcVgsScaleFisrt_x13bbc
    /*00013ba0*/ STRD        R8, [IP] 
    /*00013ba4*/ LDR         R3, [SP, #24] 
    /*00013ba8*/ LDR         R0, [R6, #3624]             @ 0xe28 
    /*00013bac*/ STMDB       R1, {R0, R5} 
    /*00013bb0*/ STR         R3, [R4, #688]              @ 0x2b0 
    /*00013bb4*/ STR         R5, [R1, #4] 
    /*00013bb8*/ STR         R2, [R4, #720]              @ 0x2d0 
    GDC_ProcVgsScaleFisrt_x13bbc:
    /*00013bbc*/ LDR         IP, [SP, #16] 
    /*00013bc0*/ MOV         R1, R7 
    /*00013bc4*/ MOV         R2, #16 
    /*00013bc8*/ LDR         R0, [SP, #20] 
    /*00013bcc*/ MOV         R3, #1 
    /*00013bd0*/ ADD         R7, R7, #44                 @ 0x2c 
    /*00013bd4*/ STR         R3, [IP, #2728]             @ 0xaa8 
    /*00013bd8*/ BL          0x0000000000013BD8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00013bdc*/ MOV         R1, R4 
    /*00013be0*/ LDR         R3, [SL, #32] 
    /*00013be4*/ LDR         R2, [PC, #652]              @ 0x0000000000013e78 
    /*00013be8*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00013bec*/ BLX         R3 
    /*00013bf0*/ ADD         R1, SP, #32 
    /*00013bf4*/ SUBS        R3, R0, #0 
    /*00013bf8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013bfc*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013c00*/ BNE         GDC_ProcVgsScaleFisrt_x13da8
    /*00013c04*/ BL          0x0000000000013C04          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00013c08*/ LDR         R3, [SP, #12] 
    /*00013c0c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013c10*/ ADD         R1, SP, #32 
    /*00013c14*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013c18*/ LDR         R2, [R3] 
    /*00013c1c*/ LDR         R3, [R2, #1384]             @ 0x568 
    /*00013c20*/ ADD         R3, R3, #1 
    /*00013c24*/ STR         R3, [R2, #1384]             @ 0x568 
    /*00013c28*/ BL          0x0000000000013C28          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013c2c*/ LDR         R3, [R6, #3624]             @ 0xe28 
    /*00013c30*/ CMP         R3, R8 
    /*00013c34*/ BLS         GDC_ProcVgsScaleFisrt_x13d4c
    /*00013c38*/ LDR         R3, [SP, #8] 
    /*00013c3c*/ ADDS        R8, R8, #1 
    /*00013c40*/ ADC         R9, R9, #0 
    /*00013c44*/ LDR         R3, [R3, #16] 
    /*00013c48*/ CMP         R3, #3 
    /*00013c4c*/ BNE         GDC_ProcVgsScaleFisrt_x13d4c
    GDC_ProcVgsScaleFisrt_x13c50:
    /*00013c50*/ LDR         R2, [SL, #64]               @ 0x40 
    /*00013c54*/ MOV         R5, #0 
    /*00013c58*/ BLX         R2 
    /*00013c5c*/ MOV         R1, FP 
    /*00013c60*/ MOV         IP, #37                     @ 0x25 
    /*00013c64*/ MOV         R2, #336                    @ 0x150 
    /*00013c68*/ STR         R7, [SP, #8] 
    /*00013c6c*/ SUBS        R4, R0, #0 
    /*00013c70*/ BNE         GDC_ProcVgsScaleFisrt_x13b60
    /*00013c74*/ ADD         R1, SP, #32 
    /*00013c78*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013c7c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013c80*/ MOVW        R5, #32781                  @ 0x800d 
    /*00013c84*/ BL          0x0000000000013C84          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00013c88*/ LDR         R3, [SP, #12] 
    /*00013c8c*/ ADD         R1, SP, #32 
    /*00013c90*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013c94*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013c98*/ MOVT        R5, #40997                  @ 0xa025 
    /*00013c9c*/ LDR         R2, [R3] 
    /*00013ca0*/ LDR         R3, [R2, #1388]             @ 0x56c 
    /*00013ca4*/ ADD         R3, R3, #1 
    /*00013ca8*/ STR         R3, [R2, #1388]             @ 0x56c 
    /*00013cac*/ BL          0x0000000000013CAC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013cb0*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4610] 
    /*00013cb4*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4610] 
    /*00013cb8*/ MOV         R3, #37                     @ 0x25 
    /*00013cbc*/ MOV         R1, R3 
    /*00013cc0*/ STR         R3, [SP, #4] 
    /*00013cc4*/ MOVW        R3, #1574                   @ 0x626 
    /*00013cc8*/ STR         R3, [SP] 
    GDC_ProcVgsScaleFisrt_x13ccc:
    /*00013ccc*/ LDR         R3, [PC, #424]              @ 0x0000000000013e7c 
    /*00013cd0*/ MOV         R0, #3 
    /*00013cd4*/ BL          0x0000000000013CD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013cd8*/ LDR         R3, [SL, #4] 
    /*00013cdc*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00013ce0*/ BLX         R3 
    /*00013ce4*/ B           GDC_ProcVgsScaleFisrt_x13a24
    GDC_ProcVgsScaleFisrt_x13ce8:
    /*00013ce8*/ ADD         R1, SP, #32 
    /*00013cec*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013cf0*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013cf4*/ BL          0x0000000000013CF4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00013cf8*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00013cfc*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00013d00*/ ADD         R1, SP, #32 
    /*00013d04*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013d08*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013d0c*/ LDR         R2, [R3] 
    /*00013d10*/ LDR         R3, [R2, #1372]             @ 0x55c 
    /*00013d14*/ ADD         R3, R3, #1 
    /*00013d18*/ STR         R3, [R2, #1372]             @ 0x55c 
    /*00013d1c*/ BL          0x0000000000013D1C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013d20*/ MOV         R3, #37                     @ 0x25 
    /*00013d24*/ MOV         R1, R3 
    /*00013d28*/ STR         R3, [SP, #4] 
    /*00013d2c*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x45cc] 
    /*00013d30*/ MOV         R3, #1552                   @ 0x610 
    /*00013d34*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x45cc] 
    /*00013d38*/ STR         R3, [SP] 
    /*00013d3c*/ MOV         R0, #3 
    /*00013d40*/ LDR         R3, [PC, #308]              @ 0x0000000000013e7c 
    /*00013d44*/ BL          0x0000000000013D44          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013d48*/ B           GDC_ProcVgsScaleFisrt_x13a24
    GDC_ProcVgsScaleFisrt_x13d4c:
    /*00013d4c*/ LDR         R5, [SP, #28] 
    GDC_ProcVgsScaleFisrt_x13d50:
    /*00013d50*/ LDR         R3, [SL, #12] 
    /*00013d54*/ MOV         R2, #0 
    /*00013d58*/ MOV         R1, #1 
    /*00013d5c*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00013d60*/ BLX         R3 
    /*00013d64*/ SUBS        R3, R0, #0 
    /*00013d68*/ BNE         GDC_ProcVgsScaleFisrt_x13dfc
    /*00013d6c*/ ADD         R1, SP, #32 
    /*00013d70*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013d74*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013d78*/ MOV         R5, R3 
    /*00013d7c*/ BL          0x0000000000013D7C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00013d80*/ LDR         R3, [SP, #12] 
    /*00013d84*/ ADD         R1, SP, #32 
    /*00013d88*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013d8c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013d90*/ LDR         R2, [R3] 
    /*00013d94*/ LDR         R3, [R2, #1400]             @ 0x578 
    /*00013d98*/ ADD         R3, R3, #1 
    /*00013d9c*/ STR         R3, [R2, #1400]             @ 0x578 
    /*00013da0*/ BL          0x0000000000013DA0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013da4*/ B           GDC_ProcVgsScaleFisrt_x13a24
    GDC_ProcVgsScaleFisrt_x13da8:
    /*00013da8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013dac*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013db0*/ MOV         R5, R3 
    /*00013db4*/ BL          0x0000000000013DB4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00013db8*/ LDR         R3, [SP, #12] 
    /*00013dbc*/ ADD         R1, SP, #32 
    /*00013dc0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013dc4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013dc8*/ LDR         R2, [R3] 
    /*00013dcc*/ LDR         R3, [R2, #1388]             @ 0x56c 
    /*00013dd0*/ ADD         R3, R3, #1 
    /*00013dd4*/ STR         R3, [R2, #1388]             @ 0x56c 
    /*00013dd8*/ BL          0x0000000000013DD8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013ddc*/ MOV         R3, #37                     @ 0x25 
    /*00013de0*/ MOV         R1, R3 
    /*00013de4*/ STR         R3, [SP, #4] 
    /*00013de8*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4650] 
    /*00013dec*/ MOVW        R3, #1607                   @ 0x647 
    /*00013df0*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4650] 
    /*00013df4*/ STR         R3, [SP] 
    /*00013df8*/ B           GDC_ProcVgsScaleFisrt_x13ccc
    GDC_ProcVgsScaleFisrt_x13dfc:
    /*00013dfc*/ ADD         R1, SP, #32 
    /*00013e00*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013e04*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013e08*/ BL          0x0000000000013E08          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00013e0c*/ LDR         R3, [SP, #12] 
    /*00013e10*/ ADD         R1, SP, #32 
    /*00013e14*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013e18*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013e1c*/ LDR         R2, [R3] 
    /*00013e20*/ LDR         R3, [R2, #1404]             @ 0x57c 
    /*00013e24*/ ADD         R3, R3, #1 
    /*00013e28*/ STR         R3, [R2, #1404]             @ 0x57c 
    /*00013e2c*/ BL          0x0000000000013E2C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013e30*/ MOV         R3, #37                     @ 0x25 
    /*00013e34*/ MOV         R1, R3 
    /*00013e38*/ STR         R3, [SP, #4] 
    /*00013e3c*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4698] 
    /*00013e40*/ MOVW        R3, #1649                   @ 0x671 
    /*00013e44*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4698] 
    /*00013e48*/ STR         R3, [SP] 
    /*00013e4c*/ B           GDC_ProcVgsScaleFisrt_x13ccc
    GDC_ProcVgsScaleFisrt_x13e50:
    /*00013e50*/ MOV         R3, #1536                   @ 0x600 
    /*00013e54*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4564] 
    /*00013e58*/ STR         R3, [SP] 
    /*00013e5c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4564] 
    /*00013e60*/ LDR         R3, [PC, #20]               @ 0x0000000000013e7c 
    /*00013e64*/ MOV         R1, #37                     @ 0x25 
    /*00013e68*/ MOV         R0, #3 
    /*00013e6c*/ MVN         R5, #0 
    /*00013e70*/ BL          0x0000000000013E70          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013e74*/ B           GDC_ProcVgsScaleFisrt_x13a24
    /*00013e78*/ LDRDEQ      R1, [R0], -R0 
    /*00013e7c*/ ANDEQ       R0, R0, R4, ROR #25 
FUNC_END GDC_ProcVgsScaleFisrt


FUNC_BEGIN GDC_ProcRegionsFisrt
    /*00013e80*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00013e84*/ SUB         SP, SP, #100                @ 0x64 
    /*00013e88*/ MOV         R4, R1 
    /*00013e8c*/ MOV         R6, R0 
    /*00013e90*/ STR         R2, [SP, #16] 
    /*00013e94*/ BL          0x0000000000013E94          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*00013e98*/ SUBS        R5, R0, #0 
    /*00013e9c*/ BEQ         GDC_ProcRegionsFisrt_x13eac
    GDC_ProcRegionsFisrt_x13ea0:
    /*00013ea0*/ MOV         R0, R5 
    /*00013ea4*/ ADD         SP, SP, #100                @ 0x64 
    /*00013ea8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_ProcRegionsFisrt_x13eac:
    /*00013eac*/ MOV         R0, R4 
    /*00013eb0*/ BL          0x0000000000013EB0          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*00013eb4*/ SUBS        R5, R0, #0 
    /*00013eb8*/ BNE         GDC_ProcRegionsFisrt_x13ea0
    /*00013ebc*/ BL          0x0000000000013EBC          @ GDC_CheckModStart [R_ARM_CALL: .text+0xe00] 
    /*00013ec0*/ SUBS        R5, R0, #0 
    /*00013ec4*/ BNE         GDC_ProcRegionsFisrt_x13ea0
    /*00013ec8*/ LDR         R3, [R6, #760]              @ 0x2f8 
    /*00013ecc*/ ADD         IP, SP, #60                 @ 0x3c 
    /*00013ed0*/ LDR         R2, [R6, #756]              @ 0x2f4 
    /*00013ed4*/ ADD         R0, SP, #56                 @ 0x38 
    /*00013ed8*/ LDR         R1, [R6, #752]              @ 0x2f0 
    /*00013edc*/ STR         IP, [SP] 
    /*00013ee0*/ MOV         IP, #1 
    /*00013ee4*/ STR         R5, [SP, #92]               @ 0x5c 
    /*00013ee8*/ STR         R5, [SP, #84]               @ 0x54 
    /*00013eec*/ STR         R5, [SP, #88]               @ 0x58 
    /*00013ef0*/ STR         IP, [SP, #80]               @ 0x50 
    /*00013ef4*/ BL          0x0000000000013EF4          @ GDC_BeginJob [R_ARM_CALL: .text+0x2d18] 
    /*00013ef8*/ SUBS        R5, R0, #0 
    /*00013efc*/ BNE         GDC_ProcRegionsFisrt_x14120
    /*00013f00*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00013f04*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00013f08*/ ADD         R1, SP, #52                 @ 0x34 
    /*00013f0c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013f10*/ MOV         R7, R3 
    /*00013f14*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013f18*/ STR         R3, [SP, #28] 
    /*00013f1c*/ BL          0x0000000000013F1C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00013f20*/ LDR         R2, [R7] 
    /*00013f24*/ ADD         R1, SP, #52                 @ 0x34 
    /*00013f28*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00013f2c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00013f30*/ LDR         R3, [R2, #1416]             @ 0x588 
    /*00013f34*/ ADD         R3, R3, #1 
    /*00013f38*/ STR         R3, [R2, #1416]             @ 0x588 
    /*00013f3c*/ BL          0x0000000000013F3C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00013f40*/ LDR         R2, [R4, #3624]             @ 0xe28 
    /*00013f44*/ LDR         R1, [R4, #3592]             @ 0xe08 
    /*00013f48*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x10e0] 
    /*00013f4c*/ CMP         R2, #0 
    /*00013f50*/ LDR         R2, [R4, #3596]             @ 0xe0c 
    /*00013f54*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x10e0] 
    /*00013f58*/ LDR         R0, [R4, #3600]             @ 0xe10 
    /*00013f5c*/ LDR         IP, [R4, #3588]             @ 0xe04 
    /*00013f60*/ STR         R1, [R3, #2872]             @ 0xb38 
    /*00013f64*/ STR         R2, [R3, #3152]             @ 0xc50 
    /*00013f68*/ LDR         R1, [R4, #3604]             @ 0xe14 
    /*00013f6c*/ LDR         R2, [R4, #3608]             @ 0xe18 
    /*00013f70*/ STR         R0, [R3, #3156]             @ 0xc54 
    /*00013f74*/ STR         R1, [R3, #3160]             @ 0xc58 
    /*00013f78*/ LDR         R0, [R4, #3616]             @ 0xe20 
    /*00013f7c*/ LDR         R1, [R4, #3612]             @ 0xe1c 
    /*00013f80*/ STR         R2, [R3, #3164]             @ 0xc5c 
    /*00013f84*/ LDR         R2, [R4, #3620]             @ 0xe24 
    /*00013f88*/ STR         IP, [R3, #2864]             @ 0xb30 
    /*00013f8c*/ STR         R0, [R3, #3172]             @ 0xc64 
    /*00013f90*/ STR         R1, [R3, #3168]             @ 0xc60 
    /*00013f94*/ STR         R2, [R3, #3176]             @ 0xc68 
    /*00013f98*/ BEQ         GDC_ProcRegionsFisrt_x14190
    /*00013f9c*/ LDR         R2, [R4, #3628]             @ 0xe2c 
    /*00013fa0*/ CMP         R2, #3 
    /*00013fa4*/ BEQ         GDC_ProcRegionsFisrt_x14190
    /*00013fa8*/ MOVW        R2, #0                      @ GDC_ProcRegionsFirstCallBack [R_ARM_MOVW_ABS_NC: .text+0x1199c] 
    /*00013fac*/ MOVT        R2, #0                      @ GDC_ProcRegionsFirstCallBack [R_ARM_MOVT_ABS: .text+0x1199c] 
    /*00013fb0*/ STR         R2, [SP, #40]               @ 0x28 
    /*00013fb4*/ ADD         R2, R4, #3552               @ 0xde0 
    /*00013fb8*/ STR         R2, [SP, #32] 
    /*00013fbc*/ ADD         R2, R4, #3200               @ 0xc80 
    /*00013fc0*/ ADD         R7, R4, #3616               @ 0xe20 
    /*00013fc4*/ ADD         R8, R3, #2864               @ 0xb30 
    /*00013fc8*/ STR         R5, [SP, #44]               @ 0x2c 
    /*00013fcc*/ ADD         R3, R3, #3184               @ 0xc70 
    /*00013fd0*/ ADD         R7, R7, #12 
    /*00013fd4*/ ADD         R9, R4, #1312               @ 0x520 
    /*00013fd8*/ MOV         SL, #1 
    /*00013fdc*/ MOV         FP, #0 
    /*00013fe0*/ STR         R3, [SP, #36]               @ 0x24 
    /*00013fe4*/ MOV         R5, R2 
    /*00013fe8*/ B           GDC_ProcRegionsFisrt_x1406c
    GDC_ProcRegionsFisrt_x13fec:
    /*00013fec*/ MOV         R1, R6 
    /*00013ff0*/ LDR         R2, [PC, #680]              @ 0x00000000000142a0 
    /*00013ff4*/ LDR         R0, [SP, #56]               @ 0x38 
    /*00013ff8*/ ADD         R5, R5, #88                 @ 0x58 
    /*00013ffc*/ BL          0x0000000000013FFC          @ GDC_AddCorrectionTask [R_ARM_CALL: .text+0x2fe8] 
    /*00014000*/ ADD         R9, R9, #72                 @ 0x48 
    /*00014004*/ ADD         R1, SP, #52                 @ 0x34 
    /*00014008*/ ADD         R7, R7, #44                 @ 0x2c 
    /*0001400c*/ SUBS        R3, R0, #0 
    /*00014010*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00014014*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00014018*/ BNE         GDC_ProcRegionsFisrt_x141dc
    /*0001401c*/ BL          0x000000000001401C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00014020*/ LDR         R3, [SP, #28] 
    /*00014024*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00014028*/ ADD         R1, SP, #52                 @ 0x34 
    /*0001402c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00014030*/ LDR         R2, [R3] 
    /*00014034*/ LDR         R3, [R2, #1424]             @ 0x590 
    /*00014038*/ ADD         R3, R3, #1 
    /*0001403c*/ STR         R3, [R2, #1424]             @ 0x590 
    /*00014040*/ BL          0x0000000000014040          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00014044*/ LDR         R3, [R4, #3624]             @ 0xe28 
    /*00014048*/ LDR         R2, [SP, #20] 
    /*0001404c*/ CMP         R3, R2 
    /*00014050*/ BLS         GDC_ProcRegionsFisrt_x1418c
    /*00014054*/ LDR         R3, [SP, #24] 
    /*00014058*/ ADDS        SL, SL, #1 
    /*0001405c*/ ADC         FP, FP, #0 
    /*00014060*/ LDR         R3, [R3, #44]               @ 0x2c 
    /*00014064*/ CMP         R3, #3 
    /*00014068*/ BEQ         GDC_ProcRegionsFisrt_x1418c
    GDC_ProcRegionsFisrt_x1406c:
    /*0001406c*/ MOV         R2, #88                     @ 0x58 
    /*00014070*/ MOV         R1, R5 
    /*00014074*/ LDR         R0, [PC, #552]              @ 0x00000000000142a4 
    /*00014078*/ STR         SL, [SP, #20] 
    /*0001407c*/ BL          0x000000000001407C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00014080*/ MOV         R2, #72                     @ 0x48 
    /*00014084*/ MOV         R1, R9 
    /*00014088*/ ADD         R0, R8, #344                @ 0x158 
    /*0001408c*/ BL          0x000000000001408C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00014090*/ MOV         R2, #368                    @ 0x170 
    /*00014094*/ MLA         R1, R2, SL, R4 
    /*00014098*/ ADD         R0, R8, #504                @ 0x1f8 
    /*0001409c*/ STR         R7, [SP, #24] 
    /*000140a0*/ ADD         R1, R1, #1232               @ 0x4d0 
    /*000140a4*/ BL          0x00000000000140A4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000140a8*/ ADD         R1, SL, #95                 @ 0x5f 
    /*000140ac*/ MOV         R2, #32 
    /*000140b0*/ ADD         R0, R8, #872                @ 0x368 
    /*000140b4*/ ADD         R1, R4, R1, LSL #5 
    /*000140b8*/ BL          0x00000000000140B8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000140bc*/ MOV         R2, #24 
    /*000140c0*/ LDR         R1, [SP, #32] 
    /*000140c4*/ LDR         R0, [SP, #36]               @ 0x24 
    /*000140c8*/ BL          0x00000000000140C8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000140cc*/ MOV         R2, #44                     @ 0x2c 
    /*000140d0*/ MOV         R1, R7 
    /*000140d4*/ ADD         R0, R8, #904                @ 0x388 
    /*000140d8*/ BL          0x00000000000140D8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000140dc*/ LDR         R3, [R7, #44]               @ 0x2c 
    /*000140e0*/ MOV         R2, #0 
    /*000140e4*/ CMP         R3, #3 
    /*000140e8*/ STRNE       R2, [R6, #748]              @ 0x2ec 
    /*000140ec*/ BNE         GDC_ProcRegionsFisrt_x13fec
    /*000140f0*/ ADD         R2, R6, #672                @ 0x2a0 
    /*000140f4*/ LDR         R3, [SP, #40]               @ 0x28 
    /*000140f8*/ MOV         R1, #0 
    /*000140fc*/ STRD        SL, [R2] 
    /*00014100*/ LDR         R2, [R4, #3624]             @ 0xe28 
    /*00014104*/ STR         R1, [R6, #684]              @ 0x2ac 
    /*00014108*/ STR         R1, [R6, #692]              @ 0x2b4 
    /*0001410c*/ STR         R2, [R6, #680]              @ 0x2a8 
    /*00014110*/ LDR         R2, [SP, #16] 
    /*00014114*/ STR         R3, [R6, #748]              @ 0x2ec 
    /*00014118*/ STR         R2, [R6, #688]              @ 0x2b0 
    /*0001411c*/ B           GDC_ProcRegionsFisrt_x13fec
    GDC_ProcRegionsFisrt_x14120:
    /*00014120*/ ADD         R1, SP, #52                 @ 0x34 
    /*00014124*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00014128*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001412c*/ BL          0x000000000001412C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00014130*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*00014134*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*00014138*/ ADD         R1, SP, #52                 @ 0x34 
    /*0001413c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00014140*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00014144*/ LDR         R2, [R3] 
    /*00014148*/ LDR         R3, [R2, #1420]             @ 0x58c 
    /*0001414c*/ ADD         R3, R3, #1 
    /*00014150*/ STR         R3, [R2, #1420]             @ 0x58c 
    /*00014154*/ BL          0x0000000000014154          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00014158*/ LDR         R1, [R6, #760]              @ 0x2f8 
    /*0001415c*/ LDR         R3, [R6, #752]              @ 0x2f0 
    /*00014160*/ MOVW        R0, #1697                   @ 0x6a1 
    /*00014164*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4464] 
    /*00014168*/ STR         R0, [SP] 
    /*0001416c*/ STR         R1, [SP, #8] 
    /*00014170*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4464] 
    /*00014174*/ STR         R3, [SP, #4] 
    /*00014178*/ MOV         R1, #37                     @ 0x25 
    /*0001417c*/ LDR         R3, [PC, #292]              @ 0x00000000000142a8 
    /*00014180*/ MOV         R0, #3 
    /*00014184*/ BL          0x0000000000014184          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014188*/ B           GDC_ProcRegionsFisrt_x13ea0
    GDC_ProcRegionsFisrt_x1418c:
    /*0001418c*/ LDR         R5, [SP, #44]               @ 0x2c 
    GDC_ProcRegionsFisrt_x14190:
    /*00014190*/ LDR         R0, [SP, #56]               @ 0x38 
    /*00014194*/ BL          0x0000000000014194          @ GDC_EndJob [R_ARM_CALL: .text+0x2058] 
    /*00014198*/ SUBS        R3, R0, #0 
    /*0001419c*/ BNE         GDC_ProcRegionsFisrt_x1424c
    /*000141a0*/ ADD         R1, SP, #52                 @ 0x34 
    /*000141a4*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000141a8*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000141ac*/ MOV         R5, R3 
    /*000141b0*/ BL          0x00000000000141B0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000141b4*/ LDR         R3, [SP, #28] 
    /*000141b8*/ ADD         R1, SP, #52                 @ 0x34 
    /*000141bc*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000141c0*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000141c4*/ LDR         R2, [R3] 
    /*000141c8*/ LDR         R3, [R2, #1432]             @ 0x598 
    /*000141cc*/ ADD         R3, R3, #1 
    /*000141d0*/ STR         R3, [R2, #1432]             @ 0x598 
    /*000141d4*/ BL          0x00000000000141D4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000141d8*/ B           GDC_ProcRegionsFisrt_x13ea0
    GDC_ProcRegionsFisrt_x141dc:
    /*000141dc*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000141e0*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000141e4*/ MOV         R5, R3 
    /*000141e8*/ BL          0x00000000000141E8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000141ec*/ LDR         R3, [SP, #28] 
    /*000141f0*/ ADD         R1, SP, #52                 @ 0x34 
    /*000141f4*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000141f8*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000141fc*/ LDR         R2, [R3] 
    /*00014200*/ LDR         R3, [R2, #1428]             @ 0x594 
    /*00014204*/ ADD         R3, R3, #1 
    /*00014208*/ STR         R3, [R2, #1428]             @ 0x594 
    /*0001420c*/ BL          0x000000000001420C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00014210*/ LDR         R1, [R6, #760]              @ 0x2f8 
    /*00014214*/ MOVW        R2, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5500] 
    /*00014218*/ MOVT        R2, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5500] 
    /*0001421c*/ LDR         R3, [R6, #752]              @ 0x2f0 
    /*00014220*/ MOVW        R0, #1753                   @ 0x6d9 
    /*00014224*/ STR         R1, [SP, #8] 
    /*00014228*/ STR         R0, [SP] 
    GDC_ProcRegionsFisrt_x1422c:
    /*0001422c*/ STR         R3, [SP, #4] 
    /*00014230*/ MOV         R1, #37                     @ 0x25 
    /*00014234*/ LDR         R3, [PC, #108]              @ 0x00000000000142a8 
    /*00014238*/ MOV         R0, #3 
    /*0001423c*/ BL          0x000000000001423C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014240*/ LDR         R0, [SP, #56]               @ 0x38 
    /*00014244*/ BL          0x0000000000014244          @ GDC_CancelJob [R_ARM_CALL: .text+0x2428] 
    /*00014248*/ B           GDC_ProcRegionsFisrt_x13ea0
    GDC_ProcRegionsFisrt_x1424c:
    /*0001424c*/ ADD         R1, SP, #52                 @ 0x34 
    /*00014250*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00014254*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00014258*/ BL          0x0000000000014258          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0001425c*/ LDR         R3, [SP, #28] 
    /*00014260*/ ADD         R1, SP, #52                 @ 0x34 
    /*00014264*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00014268*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*0001426c*/ LDR         R2, [R3] 
    /*00014270*/ LDR         R3, [R2, #1436]             @ 0x59c 
    /*00014274*/ ADD         R3, R3, #1 
    /*00014278*/ STR         R3, [R2, #1436]             @ 0x59c 
    /*0001427c*/ BL          0x000000000001427C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00014280*/ LDR         R1, [R6, #760]              @ 0x2f8 
    /*00014284*/ LDR         R3, [R6, #752]              @ 0x2f0 
    /*00014288*/ MOVW        R0, #1796                   @ 0x704 
    /*0001428c*/ MOVW        R2, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x55bc] 
    /*00014290*/ STR         R0, [SP] 
    /*00014294*/ STR         R1, [SP, #8] 
    /*00014298*/ MOVT        R2, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0x55bc] 
    /*0001429c*/ B           GDC_ProcRegionsFisrt_x1422c
    /*000142a0*/ ANDEQ       R1, R0, R0, LSL IP 
    /*000142a4*/ @           <UNDEFINED> instruction: 0x00001db0 
    /*000142a8*/ STRDEQ      R0, [R0], -IP 
FUNC_END GDC_ProcRegionsFisrt


FUNC_BEGIN GDC_ProcRegionsAndVgsScale
    /*000142ac*/ CMP         R2, #1 
    /*000142b0*/ MOV         R2, R3 
    /*000142b4*/ BEQ         GDC_ProcRegionsAndVgsScale_x142bc
    GDC_ProcRegionsAndVgsScale_x142b8:
    /*000142b8*/ B           GDC_ProcRegionsAndVgsScale_x142b8@ GDC_ProcRegionsFisrt [R_ARM_JUMP24: .text+0x13e80] 
    GDC_ProcRegionsAndVgsScale_x142bc:
    /*000142bc*/ B           GDC_ProcRegionsAndVgsScale_x142bc@ GDC_ProcVgsScaleFisrt [R_ARM_JUMP24: .text+0x13a04] 
FUNC_END GDC_ProcRegionsAndVgsScale


FUNC_BEGIN GDC_ProcCorrectionWithBgColorCallBack
    /*000142c0*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000142c4*/ MOVW        R6, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*000142c8*/ MOVT        R6, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*000142cc*/ SUBS        R7, R3, #0 
    /*000142d0*/ SUB         SP, SP, #20 
    /*000142d4*/ LDR         R4, [R6] 
    /*000142d8*/ ADD         R5, R4, #620                @ 0x26c 
    /*000142dc*/ BEQ         GDC_ProcCorrectionWithBgColorCallBack_x14554
    GDC_ProcCorrectionWithBgColorCallBack_x142e0:
    /*000142e0*/ ADD         R1, SP, #12 
    /*000142e4*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000142e8*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000142ec*/ BL          0x00000000000142EC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000142f0*/ MOVW        R3, #0                      @ g_enGdcModState [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*000142f4*/ MOVT        R3, #0                      @ g_enGdcModState [R_ARM_MOVT_ABS: .bss+0x0] 
    /*000142f8*/ LDR         R2, [R6] 
    /*000142fc*/ LDR         R1, [R3] 
    /*00014300*/ LDR         R3, [R2, #1408]             @ 0x580 
    /*00014304*/ CMP         R1, #1 
    /*00014308*/ ADD         R3, R3, #1 
    /*0001430c*/ STR         R3, [R2, #1408]             @ 0x580 
    /*00014310*/ BEQ         GDC_ProcCorrectionWithBgColorCallBack_x143c4
    /*00014314*/ CMP         R2, #0 
    /*00014318*/ MOVNE       R7, #2 
    /*0001431c*/ BNE         GDC_ProcCorrectionWithBgColorCallBack_x14360
    /*00014320*/ B           GDC_ProcCorrectionWithBgColorCallBack_x14374
    GDC_ProcCorrectionWithBgColorCallBack_x14324:
    /*00014324*/ BL          0x0000000000014324          @ GDC_GetNodeFromBusyList [R_ARM_CALL: .text+0xfeb4] 
    /*00014328*/ SUBS        R4, R0, #0 
    /*0001432c*/ ADD         R3, R4, #8 
    /*00014330*/ ADD         R2, R4, #4096               @ 0x1000 
    /*00014334*/ BEQ         GDC_ProcCorrectionWithBgColorCallBack_x1438c
    /*00014338*/ LDR         R6, [R2, #760]              @ 0x2f8 
    /*0001433c*/ CMP         R6, #0 
    /*00014340*/ BEQ         GDC_ProcCorrectionWithBgColorCallBack_x14354
    /*00014344*/ ADD         R0, R4, #760                @ 0x2f8 
    /*00014348*/ STR         R7, [R4, #772]              @ 0x304 
    /*0001434c*/ LDM         R0, {R0, R1, R2} 
    /*00014350*/ BLX         R6 
    GDC_ProcCorrectionWithBgColorCallBack_x14354:
    /*00014354*/ MOV         R1, R4 
    /*00014358*/ MOV         R0, R5 
    /*0001435c*/ BL          0x000000000001435C          @ GDC_PutNodeToFreeList [R_ARM_CALL: .text+0xfe90] 
    GDC_ProcCorrectionWithBgColorCallBack_x14360:
    /*00014360*/ MOV         R0, R5 
    /*00014364*/ BL          0x0000000000014364          @ GDC_QueryBusyNodeNum [R_ARM_CALL: .text+0xfddc] 
    /*00014368*/ CMP         R0, #0 
    /*0001436c*/ MOV         R0, R5 
    /*00014370*/ BNE         GDC_ProcCorrectionWithBgColorCallBack_x14324
    GDC_ProcCorrectionWithBgColorCallBack_x14374:
    /*00014374*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00014378*/ ADD         R1, SP, #12 
    /*0001437c*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00014380*/ BL          0x0000000000014380          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    GDC_ProcCorrectionWithBgColorCallBack_x14384:
    /*00014384*/ ADD         SP, SP, #20 
    /*00014388*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    GDC_ProcCorrectionWithBgColorCallBack_x1438c:
    /*0001438c*/ MOVW        R3, #1921                   @ 0x781 
    /*00014390*/ MOV         R1, #37                     @ 0x25 
    /*00014394*/ STR         R3, [SP] 
    /*00014398*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4300] 
    /*0001439c*/ LDR         R3, [PC, #548]              @ 0x00000000000145c8 
    /*000143a0*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4300] 
    /*000143a4*/ MOV         R0, #2 
    /*000143a8*/ BL          0x00000000000143A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000143ac*/ ADD         R1, SP, #12 
    /*000143b0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000143b4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000143b8*/ BL          0x00000000000143B8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000143bc*/ ADD         SP, SP, #20 
    /*000143c0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    GDC_ProcCorrectionWithBgColorCallBack_x143c4:
    /*000143c4*/ MOV         R3, R4 
    /*000143c8*/ LDR         R8, [R7, #672]              @ 0x2a0 
    /*000143cc*/ LDR         R2, [R3, #632]!             @ 0x278 
    /*000143d0*/ CMP         R2, R3 
    /*000143d4*/ LDR         R4, [R2] 
    /*000143d8*/ BEQ         GDC_ProcCorrectionWithBgColorCallBack_x145b4
    /*000143dc*/ ADD         R6, R2, #4096               @ 0x1000 
    /*000143e0*/ LDR         R1, [R6, #756]              @ 0x2f4 
    /*000143e4*/ CMP         R8, R1 
    /*000143e8*/ BNE         GDC_ProcCorrectionWithBgColorCallBack_x14400
    /*000143ec*/ B           GDC_ProcCorrectionWithBgColorCallBack_x145c0
    GDC_ProcCorrectionWithBgColorCallBack_x143f0:
    /*000143f0*/ LDR         R1, [R6, #756]              @ 0x2f4 
    /*000143f4*/ CMP         R8, R1 
    /*000143f8*/ BEQ         GDC_ProcCorrectionWithBgColorCallBack_x14410
    /*000143fc*/ MOV         R4, R2 
    GDC_ProcCorrectionWithBgColorCallBack_x14400:
    /*00014400*/ CMP         R4, R3 
    /*00014404*/ ADD         R6, R4, #4096               @ 0x1000 
    /*00014408*/ LDR         R2, [R4] 
    /*0001440c*/ BNE         GDC_ProcCorrectionWithBgColorCallBack_x143f0
    GDC_ProcCorrectionWithBgColorCallBack_x14410:
    /*00014410*/ CMP         R4, #0 
    /*00014414*/ BEQ         GDC_ProcCorrectionWithBgColorCallBack_x14594
    GDC_ProcCorrectionWithBgColorCallBack_x14418:
    /*00014418*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*0001441c*/ ADD         R1, SP, #12 
    /*00014420*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00014424*/ ADD         R9, R4, #8 
    /*00014428*/ BL          0x0000000000014428          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001442c*/ LDR         R3, [R7, #736]              @ 0x2e0 
    /*00014430*/ CMP         R3, #1 
    /*00014434*/ BEQ         GDC_ProcCorrectionWithBgColorCallBack_x144b4
    /*00014438*/ STR         R3, [SP, #4] 
    /*0001443c*/ MOVW        R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x560c] 
    /*00014440*/ MOVW        R3, #1962                   @ 0x7aa 
    /*00014444*/ MOVT        R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x560c] 
    /*00014448*/ STR         R3, [SP] 
    /*0001444c*/ MOV         R1, #37                     @ 0x25 
    /*00014450*/ LDR         R3, [PC, #368]              @ 0x00000000000145c8 
    /*00014454*/ MOV         R0, #3 
    /*00014458*/ BL          0x0000000000014458          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001445c*/ LDR         R3, [R6, #760]              @ 0x2f8 
    /*00014460*/ CMP         R3, #0 
    /*00014464*/ BEQ         GDC_ProcCorrectionWithBgColorCallBack_x14488
    /*00014468*/ LDR         R1, [R7, #736]              @ 0x2e0 
    /*0001446c*/ ADD         R0, R4, #772                @ 0x304 
    /*00014470*/ BL          0x0000000000014470          @ GDC_GetReturnGdcState [R_ARM_CALL: .text+0xe7c] 
    /*00014474*/ ADD         R0, R4, #760                @ 0x2f8 
    /*00014478*/ LDR         R6, [R6, #760]              @ 0x2f8 
    /*0001447c*/ MOV         R3, R9 
    /*00014480*/ LDM         R0, {R0, R1, R2} 
    /*00014484*/ BLX         R6 
    GDC_ProcCorrectionWithBgColorCallBack_x14488:
    /*00014488*/ ADD         R1, SP, #12 
    /*0001448c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00014490*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00014494*/ BL          0x0000000000014494          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00014498*/ MOV         R1, R4 
    /*0001449c*/ MOV         R0, R5 
    /*000144a0*/ BL          0x00000000000144A0          @ GDC_GetCurrentNodeFromBusyList [R_ARM_CALL: .text+0xff84] 
    /*000144a4*/ MOV         R1, R4 
    /*000144a8*/ MOV         R0, R5 
    /*000144ac*/ BL          0x00000000000144AC          @ GDC_PutNodeToFreeList [R_ARM_CALL: .text+0xfe90] 
    /*000144b0*/ B           GDC_ProcCorrectionWithBgColorCallBack_x14374
    GDC_ProcCorrectionWithBgColorCallBack_x144b4:
    /*000144b4*/ LDR         R7, [R6, #312]              @ 0x138 
    /*000144b8*/ ADD         R1, R4, #784                @ 0x310 
    /*000144bc*/ CMP         R7, #0 
    /*000144c0*/ BEQ         GDC_ProcCorrectionWithBgColorCallBack_x14574
    /*000144c4*/ ADD         R0, R4, #4352               @ 0x1100 
    /*000144c8*/ MOV         LR, #0 
    /*000144cc*/ ADD         R0, R0, #60                 @ 0x3c 
    /*000144d0*/ MOV         R2, LR 
    /*000144d4*/ MOV         R3, LR 
    GDC_ProcCorrectionWithBgColorCallBack_x144d8:
    /*000144d8*/ LDR         IP, [R0] 
    /*000144dc*/ ADD         R0, R0, #44                 @ 0x2c 
    /*000144e0*/ CMP         IP, #3 
    /*000144e4*/ BEQ         GDC_ProcCorrectionWithBgColorCallBack_x14544
    GDC_ProcCorrectionWithBgColorCallBack_x144e8:
    /*000144e8*/ ADD         R3, R3, #1 
    /*000144ec*/ CMP         R3, R7 
    /*000144f0*/ BNE         GDC_ProcCorrectionWithBgColorCallBack_x144d8
    /*000144f4*/ CMP         LR, #0 
    /*000144f8*/ BEQ         GDC_ProcCorrectionWithBgColorCallBack_x14574
    /*000144fc*/ CMP         LR, R3 
    /*00014500*/ BEQ         GDC_ProcCorrectionWithBgColorCallBack_x14584
    /*00014504*/ MOV         R3, R8 
    /*00014508*/ MOV         R0, R9 
    /*0001450c*/ BL          0x000000000001450C          @ GDC_ProcRegionsAndVgsScale [R_ARM_CALL: .text+0x142ac] 
    GDC_ProcCorrectionWithBgColorCallBack_x14510:
    /*00014510*/ CMP         R0, #0 
    /*00014514*/ BEQ         GDC_ProcCorrectionWithBgColorCallBack_x14384
    /*00014518*/ LDR         R6, [R6, #760]              @ 0x2f8 
    /*0001451c*/ CMP         R6, #0 
    /*00014520*/ BEQ         GDC_ProcCorrectionWithBgColorCallBack_x14488
    /*00014524*/ MOV         R1, #2 
    /*00014528*/ MOV         R3, R9 
    /*0001452c*/ STR         R1, [R4, #772]              @ 0x304 
    /*00014530*/ LDR         R2, [R4, #768]              @ 0x300 
    /*00014534*/ LDR         R1, [R4, #764]              @ 0x2fc 
    /*00014538*/ LDR         R0, [R4, #760]              @ 0x2f8 
    /*0001453c*/ BLX         R6 
    /*00014540*/ B           GDC_ProcCorrectionWithBgColorCallBack_x14488
    GDC_ProcCorrectionWithBgColorCallBack_x14544:
    /*00014544*/ CMP         R3, #0 
    /*00014548*/ ADD         LR, LR, #1 
    /*0001454c*/ MOVEQ       R2, #1 
    /*00014550*/ B           GDC_ProcCorrectionWithBgColorCallBack_x144e8
    GDC_ProcCorrectionWithBgColorCallBack_x14554:
    /*00014554*/ MOVW        R3, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x43b8] 
    /*00014558*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c0] 
    /*0001455c*/ MOVT        R3, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x43b8] 
    /*00014560*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c0] 
    /*00014564*/ MOVW        R2, #1906                   @ 0x772 
    /*00014568*/ LDR         R1, [PC, #88]               @ 0x00000000000145c8 
    /*0001456c*/ BL          0x000000000001456C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00014570*/ B           GDC_ProcCorrectionWithBgColorCallBack_x142e0
    GDC_ProcCorrectionWithBgColorCallBack_x14574:
    /*00014574*/ MOV         R2, R8 
    /*00014578*/ MOV         R0, R9 
    /*0001457c*/ BL          0x000000000001457C          @ GDC_ProcAllRegions [R_ARM_CALL: .text+0x131c4] 
    /*00014580*/ B           GDC_ProcCorrectionWithBgColorCallBack_x14510
    GDC_ProcCorrectionWithBgColorCallBack_x14584:
    /*00014584*/ MOV         R2, R8 
    /*00014588*/ MOV         R0, R9 
    /*0001458c*/ BL          0x000000000001458C          @ GDC_ProcAllVgsScale [R_ARM_CALL: .text+0x135d8] 
    /*00014590*/ B           GDC_ProcCorrectionWithBgColorCallBack_x14510
    GDC_ProcCorrectionWithBgColorCallBack_x14594:
    /*00014594*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x432c] 
    /*00014598*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42c0] 
    /*0001459c*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x432c] 
    /*000145a0*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42c0] 
    /*000145a4*/ MOVW        R2, #1953                   @ 0x7a1 
    /*000145a8*/ LDR         R1, [PC, #24]               @ 0x00000000000145c8 
    /*000145ac*/ BL          0x00000000000145AC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000145b0*/ B           GDC_ProcCorrectionWithBgColorCallBack_x14418
    GDC_ProcCorrectionWithBgColorCallBack_x145b4:
    /*000145b4*/ MOV         R4, R2 
    /*000145b8*/ ADD         R6, R2, #4096               @ 0x1000 
    /*000145bc*/ B           GDC_ProcCorrectionWithBgColorCallBack_x14410
    GDC_ProcCorrectionWithBgColorCallBack_x145c0:
    /*000145c0*/ MOV         R4, R2 
    /*000145c4*/ B           GDC_ProcCorrectionWithBgColorCallBack_x14410
    /*000145c8*/ ANDEQ       R0, R0, R4, LSL SP 
FUNC_END GDC_ProcCorrectionWithBgColorCallBack


FUNC_BEGIN GDC_ProcCorrectionWithoutBgColor
    /*000145cc*/ PUSH        {R4, R5, R6, LR} 
    /*000145d0*/ MOV         R4, R1 
    /*000145d4*/ MOV         R6, R2 
    /*000145d8*/ MOV         R5, R0 
    /*000145dc*/ BL          0x00000000000145DC          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*000145e0*/ CMP         R0, #0 
    /*000145e4*/ POPNE       {R4, R5, R6, PC} 
    /*000145e8*/ MOV         R0, R4 
    /*000145ec*/ BL          0x00000000000145EC          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*000145f0*/ CMP         R0, #0 
    /*000145f4*/ POPNE       {R4, R5, R6, PC} 
    /*000145f8*/ BL          0x00000000000145F8          @ GDC_CheckModStart [R_ARM_CALL: .text+0xe00] 
    /*000145fc*/ CMP         R0, #0 
    /*00014600*/ POPNE       {R4, R5, R6, PC} 
    /*00014604*/ LDR         IP, [R4, #3624]             @ 0xe28 
    /*00014608*/ CMP         IP, #0 
    /*0001460c*/ BEQ         GDC_ProcCorrectionWithoutBgColor_x14674
    /*00014610*/ MOV         R2, R0 
    /*00014614*/ MOV         R1, R4 
    /*00014618*/ MOV         LR, R0 
    /*0001461c*/ MOV         R3, R0 
    /*00014620*/ B           GDC_ProcCorrectionWithoutBgColor_x14630
    GDC_ProcCorrectionWithoutBgColor_x14624:
    /*00014624*/ ADD         R3, R3, #1 
    /*00014628*/ CMP         IP, R3 
    /*0001462c*/ BEQ         GDC_ProcCorrectionWithoutBgColor_x14650
    GDC_ProcCorrectionWithoutBgColor_x14630:
    /*00014630*/ LDR         R0, [R1, #3628]             @ 0xe2c 
    /*00014634*/ ADD         R1, R1, #44                 @ 0x2c 
    /*00014638*/ CMP         R0, #3 
    /*0001463c*/ BNE         GDC_ProcCorrectionWithoutBgColor_x14624
    /*00014640*/ CMP         R3, #0 
    /*00014644*/ ADD         LR, LR, #1 
    /*00014648*/ MOVEQ       R2, #1 
    /*0001464c*/ B           GDC_ProcCorrectionWithoutBgColor_x14624
    GDC_ProcCorrectionWithoutBgColor_x14650:
    /*00014650*/ CMP         LR, #0 
    /*00014654*/ BEQ         GDC_ProcCorrectionWithoutBgColor_x14674
    /*00014658*/ CMP         IP, LR 
    /*0001465c*/ BEQ         GDC_ProcCorrectionWithoutBgColor_x14688
    /*00014660*/ MOV         R3, R6 
    /*00014664*/ MOV         R1, R4 
    /*00014668*/ MOV         R0, R5 
    /*0001466c*/ POP         {R4, R5, R6, LR} 
    GDC_ProcCorrectionWithoutBgColor_x14670:
    /*00014670*/ B           GDC_ProcCorrectionWithoutBgColor_x14670@ GDC_ProcRegionsAndVgsScale [R_ARM_JUMP24: .text+0x142ac] 
    GDC_ProcCorrectionWithoutBgColor_x14674:
    /*00014674*/ MOV         R2, R6 
    /*00014678*/ MOV         R1, R4 
    /*0001467c*/ MOV         R0, R5 
    /*00014680*/ POP         {R4, R5, R6, LR} 
    GDC_ProcCorrectionWithoutBgColor_x14684:
    /*00014684*/ B           GDC_ProcCorrectionWithoutBgColor_x14684@ GDC_ProcAllRegions [R_ARM_JUMP24: .text+0x131c4] 
    GDC_ProcCorrectionWithoutBgColor_x14688:
    /*00014688*/ MOV         R2, R6 
    /*0001468c*/ MOV         R1, R4 
    /*00014690*/ MOV         R0, R5 
    /*00014694*/ POP         {R4, R5, R6, LR} 
    GDC_ProcCorrectionWithoutBgColor_x14698:
    /*00014698*/ B           GDC_ProcCorrectionWithoutBgColor_x14698@ GDC_ProcAllVgsScale [R_ARM_JUMP24: .text+0x135d8] 
FUNC_END GDC_ProcCorrectionWithoutBgColor


FUNC_BEGIN GDC_ProcCorrectionWithBgColor
    /*0001469c*/ PUSH        {R4, R5, R6, LR} 
    /*000146a0*/ MOV         R4, R1 
    /*000146a4*/ MOV         R6, R2 
    /*000146a8*/ MOV         R5, R0 
    /*000146ac*/ BL          0x00000000000146AC          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*000146b0*/ CMP         R0, #0 
    /*000146b4*/ POPNE       {R4, R5, R6, PC} 
    /*000146b8*/ MOV         R0, R4 
    /*000146bc*/ BL          0x00000000000146BC          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*000146c0*/ CMP         R0, #0 
    /*000146c4*/ POPNE       {R4, R5, R6, PC} 
    /*000146c8*/ BL          0x00000000000146C8          @ GDC_CheckModStart [R_ARM_CALL: .text+0xe00] 
    /*000146cc*/ CMP         R0, #0 
    /*000146d0*/ POPNE       {R4, R5, R6, PC} 
    /*000146d4*/ MOV         R2, R6 
    /*000146d8*/ MOV         R1, R4 
    /*000146dc*/ MOV         R0, R5 
    /*000146e0*/ POP         {R4, R5, R6, LR} 
    /*000146e4*/ B           0x0000000000012174 
FUNC_END GDC_ProcCorrectionWithBgColor


FUNC_BEGIN GDC_ProcCorrection
    /*000146e8*/ MOVW        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVW_ABS_NC: .bss+0x4] 
    /*000146ec*/ MOVT        R3, #0                      @ g_pstGdcCtx [R_ARM_MOVT_ABS: .bss+0x4] 
    /*000146f0*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000146f4*/ SUB         SP, SP, #20 
    /*000146f8*/ MOV         R5, R1 
    /*000146fc*/ MOV         R6, R0 
    /*00014700*/ LDR         R7, [R3] 
    /*00014704*/ BL          0x0000000000014704          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*00014708*/ SUBS        R4, R0, #0 
    /*0001470c*/ BEQ         GDC_ProcCorrection_x1471c
    GDC_ProcCorrection_x14710:
    /*00014710*/ MOV         R0, R4 
    /*00014714*/ ADD         SP, SP, #20 
    /*00014718*/ POP         {R4, R5, R6, R7, PC} 
    GDC_ProcCorrection_x1471c:
    /*0001471c*/ MOV         R0, R5 
    /*00014720*/ BL          0x0000000000014720          @ GDC_CheckNullPtr [R_ARM_CALL: .text+0xdec] 
    /*00014724*/ SUBS        R4, R0, #0 
    /*00014728*/ BNE         GDC_ProcCorrection_x14710
    /*0001472c*/ BL          0x000000000001472C          @ GDC_CheckModStart [R_ARM_CALL: .text+0xe00] 
    /*00014730*/ SUBS        R4, R0, #0 
    /*00014734*/ BNE         GDC_ProcCorrection_x14710
    /*00014738*/ LDR         R2, [R5, #3588]             @ 0xe04 
    /*0001473c*/ ADD         R1, R6, #336                @ 0x150 
    /*00014740*/ CMP         R2, #1 
    /*00014744*/ BNE         GDC_ProcCorrection_x14810
    /*00014748*/ MOV         R0, R6 
    /*0001474c*/ BL          0x000000000001474C          @ GDC_CheckImage [R_ARM_CALL: .text+0x11c4] 
    /*00014750*/ SUBS        R4, R0, #0 
    /*00014754*/ BNE         GDC_ProcCorrection_x147ec
    /*00014758*/ LDR         R3, [R6, #748]              @ 0x2ec 
    /*0001475c*/ ADD         R4, R6, #4096               @ 0x1000 
    /*00014760*/ MOV         R2, #3808                   @ 0xee0 
    /*00014764*/ MOV         R1, R5 
    /*00014768*/ ADD         R0, R6, #776                @ 0x308 
    /*0001476c*/ STR         R3, [R4, #752]              @ 0x2f0 
    /*00014770*/ BL          0x0000000000014770          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00014774*/ LDR         R3, [R5, #3596]             @ 0xe0c 
    /*00014778*/ LDR         R2, [R4, #748]              @ 0x2ec 
    /*0001477c*/ MOV         R1, R5 
    /*00014780*/ CMP         R3, #0 
    /*00014784*/ MOV         R0, R6 
    /*00014788*/ BNE         GDC_ProcCorrection_x147e0
    /*0001478c*/ BL          0x000000000001478C          @ GDC_ProcCorrectionWithoutBgColor [R_ARM_CALL: .text+0x145cc] 
    /*00014790*/ MOV         R4, R0 
    GDC_ProcCorrection_x14794:
    /*00014794*/ CMP         R4, #0 
    /*00014798*/ BEQ         GDC_ProcCorrection_x14710
    /*0001479c*/ ADD         R7, R7, #620                @ 0x26c 
    /*000147a0*/ SUB         R6, R6, #8 
    /*000147a4*/ ADD         R1, SP, #12 
    /*000147a8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000147ac*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000147b0*/ BL          0x00000000000147B0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000147b4*/ MOV         R1, R6 
    /*000147b8*/ MOV         R0, R7 
    /*000147bc*/ BL          0x00000000000147BC          @ GDC_GetCurrentNodeFromBusyList [R_ARM_CALL: .text+0xff84] 
    /*000147c0*/ MOV         R1, R6 
    /*000147c4*/ MOV         R0, R7 
    /*000147c8*/ BL          0x00000000000147C8          @ GDC_PutNodeToFreeList [R_ARM_CALL: .text+0xfe90] 
    /*000147cc*/ ADD         R1, SP, #12 
    /*000147d0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000147d4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000147d8*/ BL          0x00000000000147D8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000147dc*/ B           GDC_ProcCorrection_x14710
    GDC_ProcCorrection_x147e0:
    /*000147e0*/ BL          0x00000000000147E0          @ GDC_ProcCorrectionWithBgColor [R_ARM_CALL: .text+0x1469c] 
    /*000147e4*/ MOV         R4, R0 
    /*000147e8*/ B           GDC_ProcCorrection_x14794
    GDC_ProcCorrection_x147ec:
    /*000147ec*/ MOVW        R3, #2203                   @ 0x89b 
    /*000147f0*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x56b0] 
    /*000147f4*/ STR         R3, [SP] 
    /*000147f8*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x56b0] 
    /*000147fc*/ LDR         R3, [PC, #56]               @ 0x000000000001483c 
    /*00014800*/ MOV         R1, #37                     @ 0x25 
    /*00014804*/ MOV         R0, #3 
    /*00014808*/ BL          0x0000000000014808          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001480c*/ B           GDC_ProcCorrection_x14710
    GDC_ProcCorrection_x14810:
    /*00014810*/ MOVW        R3, #2195                   @ 0x893 
    /*00014814*/ MOVW        R2, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x566c] 
    /*00014818*/ STR         R3, [SP] 
    /*0001481c*/ MOVT        R2, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x566c] 
    /*00014820*/ LDR         R3, [PC, #20]               @ 0x000000000001483c 
    /*00014824*/ MOV         R1, #37                     @ 0x25 
    /*00014828*/ MOV         R0, #3 
    /*0001482c*/ MOVW        R4, #32771                  @ 0x8003 
    /*00014830*/ BL          0x0000000000014830          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014834*/ MOVT        R4, #40997                  @ 0xa025 
    /*00014838*/ B           GDC_ProcCorrection_x14710
    /*0001483c*/ ANDEQ       R0, R0, IP, LSR SP 
FUNC_END GDC_ProcCorrection


FUNC_BEGIN GDC_WaitConditionCallBackEx
    /*00014840*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1fc8] 
    /*00014844*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1fc8] 
    /*00014848*/ LDR         R3, [R3] 
    /*0001484c*/ LDR         R2, [R3, #216]              @ 0xd8 
    /*00014850*/ CMP         R2, #0 
    /*00014854*/ LDREQ       R0, [R3, #220]              @ 0xdc 
    /*00014858*/ CLZEQ       R0, R0 
    /*0001485c*/ LSREQ       R0, R0, #5 
    /*00014860*/ MOVNE       R0, #0 
    /*00014864*/ BX          LR 
FUNC_END GDC_WaitConditionCallBackEx


FUNC_BEGIN GDC_DrvCommSetCancelFlags
    /*00014868*/ PUSH        {R4, R5, R6, LR} 
    /*0001486c*/ SUB         SP, SP, #8 
    /*00014870*/ MOV         R6, R1 
    /*00014874*/ MOV         R5, R2 
    /*00014878*/ MOV         R4, R3 
    /*0001487c*/ BL          0x000000000001487C          @ GDC_HiModId2CallerId [R_ARM_CALL: .text+0xe20] 
    /*00014880*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1fc8] 
    /*00014884*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1fc8] 
    /*00014888*/ MOV         R3, R6 
    /*0001488c*/ MOV         R1, #4 
    /*00014890*/ LDR         IP, [IP] 
    /*00014894*/ MOV         R2, R0 
    /*00014898*/ ADD         R0, IP, R0, LSL #2 
    /*0001489c*/ LDR         R0, [R0, #236]              @ 0xec 
    /*000148a0*/ STR         R5, [SP] 
    /*000148a4*/ BL          0x00000000000148A4          @ GDC_GetPointerByOffset [R_ARM_CALL: .text+0xe5c] 
    /*000148a8*/ STR         R4, [R0] 
    /*000148ac*/ MOV         R0, #0 
    /*000148b0*/ ADD         SP, SP, #8 
    /*000148b4*/ POP         {R4, R5, R6, PC} 
FUNC_END GDC_DrvCommSetCancelFlags


FUNC_BEGIN GDC_DrvCommCancelJob
    /*000148b8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000148bc*/ MOVW        R8, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1fc8] 
    /*000148c0*/ MOVT        R8, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1fc8] 
    /*000148c4*/ SUB         SP, SP, #20 
    /*000148c8*/ LDR         R3, [R8] 
    /*000148cc*/ LDR         R2, [R3, #4] 
    /*000148d0*/ LDR         SL, [R2, R0, LSL #2] 
    /*000148d4*/ LDR         R1, [SL, #20] 
    /*000148d8*/ CMP         R1, #4 
    /*000148dc*/ BEQ         GDC_DrvCommCancelJob_x14938
    /*000148e0*/ SUB         R3, R1, #3 
    /*000148e4*/ BICS        R3, R3, #2 
    /*000148e8*/ MOVEQ       R4, #1 
    /*000148ec*/ MOVNE       R4, #0 
    /*000148f0*/ BICS        R3, R1, #8 
    /*000148f4*/ ORREQ       R4, R4, #1 
    /*000148f8*/ CMP         R4, #0 
    /*000148fc*/ BNE         GDC_DrvCommCancelJob_x149e0
    /*00014900*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5738] 
    /*00014904*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5738] 
    /*00014908*/ BL          0x0000000000014908          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0001490c*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5754] 
    /*00014910*/ MOVW        R1, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0xd50] 
    /*00014914*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5754] 
    /*00014918*/ MOVT        R1, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0xd50] 
    /*0001491c*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5758] 
    /*00014920*/ MOV         R2, #191                    @ 0xbf 
    /*00014924*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5758] 
    /*00014928*/ BL          0x0000000000014928          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001492c*/ MOV         R0, R4 
    GDC_DrvCommCancelJob_x14930:
    /*00014930*/ ADD         SP, SP, #20 
    /*00014934*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_DrvCommCancelJob_x14938:
    /*00014938*/ MOV         FP, SL 
    /*0001493c*/ LDR         R6, [FP, #12]! 
    /*00014940*/ CMP         R6, FP 
    /*00014944*/ LDR         R9, [R6] 
    /*00014948*/ BEQ         GDC_DrvCommCancelJob_x149bc
    GDC_DrvCommCancelJob_x1494c:
    /*0001494c*/ MOV         R7, R6 
    /*00014950*/ LDR         R5, [R7, #8]! 
    /*00014954*/ CMP         R5, R7 
    /*00014958*/ LDR         R4, [R5] 
    /*0001495c*/ BEQ         GDC_DrvCommCancelJob_x1498c
    GDC_DrvCommCancelJob_x14960:
    /*00014960*/ MOV         R1, R5 
    /*00014964*/ MOV         R0, R6 
    /*00014968*/ BL          0x0000000000014968          @ GDC_DrvGetNodeFromTask [R_ARM_CALL: .text+0x16bcc] 
    /*0001496c*/ LDR         R0, [R8] 
    /*00014970*/ MOV         R1, R5 
    /*00014974*/ MOV         R5, R4 
    /*00014978*/ ADD         R0, R0, #128                @ 0x80 
    /*0001497c*/ BL          0x000000000001497C          @ GDC_DrvPutNodeToFreeList [R_ARM_CALL: .text+0x16adc] 
    /*00014980*/ CMP         R4, R7 
    /*00014984*/ LDR         R4, [R4] 
    /*00014988*/ BNE         GDC_DrvCommCancelJob_x14960
    GDC_DrvCommCancelJob_x1498c:
    /*0001498c*/ MOV         R1, R6 
    /*00014990*/ MOV         R0, SL 
    /*00014994*/ BL          0x0000000000014994          @ GDC_DrvGetTaskFromJob [R_ARM_CALL: .text+0x16d10] 
    /*00014998*/ LDR         R0, [R8] 
    /*0001499c*/ MOV         R1, R6 
    /*000149a0*/ MOV         R6, R9 
    /*000149a4*/ ADD         R0, R0, #108                @ 0x6c 
    /*000149a8*/ BL          0x00000000000149A8          @ GDC_DrvPutTaskToFreeList [R_ARM_CALL: .text+0x16cec] 
    /*000149ac*/ CMP         R9, FP 
    /*000149b0*/ LDR         R9, [R9] 
    /*000149b4*/ BNE         GDC_DrvCommCancelJob_x1494c
    /*000149b8*/ LDR         R3, [R8] 
    GDC_DrvCommCancelJob_x149bc:
    /*000149bc*/ MOV         R0, R3 
    /*000149c0*/ MOV         R1, SL 
    /*000149c4*/ BL          0x00000000000149C4          @ GDC_DrvGetJobFromWaitList [R_ARM_CALL: .text+0x16eb4] 
    /*000149c8*/ LDR         R0, [R8] 
    /*000149cc*/ MOV         R1, SL 
    /*000149d0*/ BL          0x00000000000149D0          @ GDC_DrvPutJobToFreeList [R_ARM_CALL: .text+0x16e5c] 
    /*000149d4*/ MOV         R0, #0 
    /*000149d8*/ ADD         SP, SP, #20 
    /*000149dc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_DrvCommCancelJob_x149e0:
    /*000149e0*/ STR         R1, [SP, #8] 
    /*000149e4*/ MOV         R2, #185                    @ 0xb9 
    /*000149e8*/ STR         R0, [SP, #4] 
    /*000149ec*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0xd50] 
    /*000149f0*/ STR         R2, [SP] 
    /*000149f4*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0xd50] 
    /*000149f8*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x56f4] 
    /*000149fc*/ MOV         R1, #37                     @ 0x25 
    /*00014a00*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x56f4] 
    /*00014a04*/ MOV         R0, #3 
    /*00014a08*/ BL          0x0000000000014A08          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014a0c*/ MVN         R0, #0 
    /*00014a10*/ B           GDC_DrvCommCancelJob_x14930
FUNC_END GDC_DrvCommCancelJob


FUNC_BEGIN GDC_DrvCommCalcNodeNum
    /*00014a14*/ PUSH        {R4, LR} 
    /*00014a18*/ SUBS        R4, R0, #0 
    /*00014a1c*/ BEQ         GDC_DrvCommCalcNodeNum_x14a78
    GDC_DrvCommCalcNodeNum_x14a20:
    /*00014a20*/ LDR         R3, [R4, #16] 
    /*00014a24*/ CMP         R3, #2 
    /*00014a28*/ BEQ         GDC_DrvCommCalcNodeNum_x14a48
    /*00014a2c*/ MOVW        R3, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57a8] 
    /*00014a30*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5758] 
    /*00014a34*/ MOVT        R3, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57a8] 
    /*00014a38*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5758] 
    /*00014a3c*/ MOV         R2, #219                    @ 0xdb 
    /*00014a40*/ LDR         R1, [PC, #80]               @ 0x0000000000014a98 
    /*00014a44*/ BL          0x0000000000014A44          @ osal_panic [R_ARM_CALL: +0x0] 
    GDC_DrvCommCalcNodeNum_x14a48:
    /*00014a48*/ MOV         R1, R4 
    /*00014a4c*/ MOV         R0, #0 
    /*00014a50*/ LDR         R3, [R1, #8]! 
    /*00014a54*/ CMP         R3, R1 
    /*00014a58*/ LDR         R3, [R3] 
    /*00014a5c*/ BEQ         GDC_DrvCommCalcNodeNum_x14a74
    GDC_DrvCommCalcNodeNum_x14a60:
    /*00014a60*/ CMP         R3, R1 
    /*00014a64*/ ADD         R0, R0, #1 
    /*00014a68*/ LDR         R3, [R3] 
    /*00014a6c*/ BNE         GDC_DrvCommCalcNodeNum_x14a60
    /*00014a70*/ POP         {R4, PC} 
    GDC_DrvCommCalcNodeNum_x14a74:
    /*00014a74*/ POP         {R4, PC} 
    GDC_DrvCommCalcNodeNum_x14a78:
    /*00014a78*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5798] 
    /*00014a7c*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5758] 
    /*00014a80*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5798] 
    /*00014a84*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5758] 
    /*00014a88*/ MOV         R2, #218                    @ 0xda 
    /*00014a8c*/ LDR         R1, [PC, #4]                @ 0x0000000000014a98 
    /*00014a90*/ BL          0x0000000000014A90          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00014a94*/ B           GDC_DrvCommCalcNodeNum_x14a20
    /*00014a98*/ ANDEQ       R0, R0, R8, ROR #26 
FUNC_END GDC_DrvCommCalcNodeNum


FUNC_BEGIN GDC_DrvCommConvertTaskInfo
    /*00014a9c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00014aa0*/ ADD         R6, R1, #16 
    /*00014aa4*/ MOV         R4, R1 
    /*00014aa8*/ MOV         R5, R0 
    /*00014aac*/ MOVW        R2, #1928                   @ 0x788 
    /*00014ab0*/ MOV         R1, #0 
    /*00014ab4*/ SUB         SP, SP, #12 
    /*00014ab8*/ MOV         R0, R6 
    /*00014abc*/ BL          0x0000000000014ABC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00014ac0*/ ADD         R1, R5, #352                @ 0x160 
    /*00014ac4*/ ADD         R3, R5, #8 
    /*00014ac8*/ ADD         R7, R5, #344                @ 0x158 
    /*00014acc*/ STR         R3, [R4, #16] 
    /*00014ad0*/ STR         R7, [R4, #20] 
    /*00014ad4*/ LDRD        R2, [R1, #112]              @ 0x70 
    /*00014ad8*/ STRD        R2, [R4, #24] 
    /*00014adc*/ LDRD        R2, [R1, #120]              @ 0x78 
    /*00014ae0*/ STRD        R2, [R4, #32] 
    /*00014ae4*/ LDRD        R2, [R1, #64]               @ 0x40 
    /*00014ae8*/ STRD        R2, [R4, #40]               @ 0x28 
    /*00014aec*/ LDRD        R2, [R1, #72]               @ 0x48 
    /*00014af0*/ STRD        R2, [R4, #48]               @ 0x30 
    /*00014af4*/ LDRD        R2, [R1, #160]              @ 0xa0 
    /*00014af8*/ STRD        R2, [R4, #56]               @ 0x38 
    /*00014afc*/ LDRD        R2, [R1, #168]              @ 0xa8 
    /*00014b00*/ STRD        R2, [R4, #64]               @ 0x40 
    /*00014b04*/ LDR         R3, [R5, #344]              @ 0x158 
    /*00014b08*/ STR         R3, [R4, #80]               @ 0x50 
    /*00014b0c*/ LDR         R3, [R5, #348]              @ 0x15c 
    /*00014b10*/ STR         R3, [R4, #84]               @ 0x54 
    /*00014b14*/ LDR         R3, [R5, #8] 
    /*00014b18*/ STR         R3, [R4, #88]               @ 0x58 
    /*00014b1c*/ LDR         R3, [R5, #12] 
    /*00014b20*/ STR         R3, [R4, #92]               @ 0x5c 
    /*00014b24*/ LDR         R3, [R5, #792]              @ 0x318 
    /*00014b28*/ STR         R3, [R4, #528]              @ 0x210 
    /*00014b2c*/ LDR         R3, [R5, #788]              @ 0x314 
    /*00014b30*/ CMP         R3, #6 
    /*00014b34*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*00014b38*/ B           GDC_DrvCommConvertTaskInfo_x14b58
    /*00014b3c*/ ANDEQ       R4, R1, R8, ROR #23 
    /*00014b40*/ STRDEQ      R4, [R1], -R8 
    /*00014b44*/ ANDEQ       R4, R1, R8, LSL #24 
    /*00014b48*/ @           <UNDEFINED> instruction: 0x00014bbc 
    /*00014b4c*/ ANDEQ       R4, R1, R8, ASR FP 
    /*00014b50*/ ANDEQ       R4, R1, R8, ASR FP 
    /*00014b54*/ ANDEQ       R4, R1, R4, ROR FP 
    GDC_DrvCommConvertTaskInfo_x14b58:
    /*00014b58*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5754] 
    /*00014b5c*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5758] 
    /*00014b60*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5754] 
    /*00014b64*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5758] 
    /*00014b68*/ MOV         R2, #292                    @ 0x124 
    /*00014b6c*/ LDR         R1, [PC, #164]              @ 0x0000000000014c18 
    /*00014b70*/ BL          0x0000000000014B70          @ osal_panic [R_ARM_CALL: +0x0] 
    GDC_DrvCommConvertTaskInfo_x14b74:
    /*00014b74*/ LDR         R3, [R5, #364]              @ 0x16c 
    /*00014b78*/ CMP         R3, #1 
    /*00014b7c*/ BEQ         GDC_DrvCommConvertTaskInfo_x14bd8
    GDC_DrvCommConvertTaskInfo_x14b80:
    /*00014b80*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1fc8] 
    /*00014b84*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1fc8] 
    /*00014b88*/ ADD         R1, R4, #1008               @ 0x3f0 
    /*00014b8c*/ ADD         R0, R4, #532                @ 0x214 
    /*00014b90*/ LDR         R3, [R3] 
    /*00014b94*/ ADD         R2, R3, #272                @ 0x110 
    /*00014b98*/ LDR         IP, [R3, #280]              @ 0x118 
    /*00014b9c*/ LDRD        R2, [R2] 
    /*00014ba0*/ STR         IP, [SP] 
    /*00014ba4*/ BL          0x0000000000014BA4          @ GDC_DRV_CovertIntPCoef [R_ARM_CALL: .text+0x187d0] 
    /*00014ba8*/ MOV         R0, R6 
    /*00014bac*/ BL          0x0000000000014BAC          @ GDC_DRV_UpdateImgInfo [R_ARM_CALL: .text+0x18ed0] 
    /*00014bb0*/ MOV         R0, #0 
    /*00014bb4*/ ADD         SP, SP, #12 
    /*00014bb8*/ POP         {R4, R5, R6, R7, PC} 
    /*00014bbc*/ ADD         R0, R5, #1744               @ 0x6d0 
    /*00014bc0*/ MOV         R1, R6 
    /*00014bc4*/ ADD         R0, R0, #8 
    /*00014bc8*/ BL          0x0000000000014BC8          @ GDC_DRV_ConvertGyroInfo [R_ARM_CALL: .text+0x18e60] 
    /*00014bcc*/ LDR         R3, [R5, #364]              @ 0x16c 
    /*00014bd0*/ CMP         R3, #1 
    /*00014bd4*/ BNE         GDC_DrvCommConvertTaskInfo_x14b80
    GDC_DrvCommConvertTaskInfo_x14bd8:
    /*00014bd8*/ MOV         R0, R7 
    /*00014bdc*/ MOV         R1, R6 
    /*00014be0*/ BL          0x0000000000014BE0          @ GDC_DRV_CovertCmpInfo [R_ARM_CALL: .text+0x1857c] 
    /*00014be4*/ B           GDC_DrvCommConvertTaskInfo_x14b80
    /*00014be8*/ MOV         R1, R6 
    /*00014bec*/ ADD         R0, R5, #800                @ 0x320 
    /*00014bf0*/ BL          0x0000000000014BF0          @ GDC_DRV_ConvertCorrectionInfo [R_ARM_CALL: .text+0x18b64] 
    /*00014bf4*/ B           GDC_DrvCommConvertTaskInfo_x14b74
    /*00014bf8*/ MOV         R1, R6 
    /*00014bfc*/ ADD         R0, R5, #800                @ 0x320 
    /*00014c00*/ BL          0x0000000000014C00          @ GDC_DRV_ConvertTRIGtLDCInfo [R_ARM_CALL: .text+0x18d40] 
    /*00014c04*/ B           GDC_DrvCommConvertTaskInfo_x14b74
    /*00014c08*/ MOV         R1, R6 
    /*00014c0c*/ ADD         R0, R5, #800                @ 0x320 
    /*00014c10*/ BL          0x0000000000014C10          @ GDC_DRV_ConvertPMFInfo [R_ARM_CALL: .text+0x18de8] 
    /*00014c14*/ B           GDC_DrvCommConvertTaskInfo_x14b74
    /*00014c18*/ ANDEQ       R0, R0, R0, LSL #27 
FUNC_END GDC_DrvCommConvertTaskInfo


FUNC_BEGIN GDC_DrvCommCalcWeight
    /*00014c1c*/ LDR         R3, [R0, #788]              @ 0x314 
    /*00014c20*/ CMP         R3, #3 
    /*00014c24*/ BLS         GDC_DrvCommCalcWeight_x14c60
    /*00014c28*/ CMP         R3, #6 
    /*00014c2c*/ BNE         GDC_DrvCommCalcWeight_x14c38
    /*00014c30*/ MOV         R0, #0 
    /*00014c34*/ BX          LR 
    GDC_DrvCommCalcWeight_x14c38:
    /*00014c38*/ PUSH        {R4, LR} 
    /*00014c3c*/ MOVW        R2, #342                    @ 0x156 
    /*00014c40*/ LDR         R1, [PC, #52]               @ 0x0000000000014c7c 
    /*00014c44*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5754] 
    /*00014c48*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5758] 
    /*00014c4c*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5754] 
    /*00014c50*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5758] 
    /*00014c54*/ BL          0x0000000000014C54          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00014c58*/ MOV         R0, #0 
    /*00014c5c*/ POP         {R4, PC} 
    GDC_DrvCommCalcWeight_x14c60:
    /*00014c60*/ LDR         IP, [R0, #344]              @ 0x158 
    /*00014c64*/ LDR         R2, [R0, #348]              @ 0x15c 
    /*00014c68*/ LDR         R3, [R0, #8] 
    /*00014c6c*/ LDR         R1, [R0, #12] 
    /*00014c70*/ MUL         R0, R2, IP 
    /*00014c74*/ MLA         R0, R1, R3, R0 
    /*00014c78*/ BX          LR 
    /*00014c7c*/ MULEQ       R0, IP, SP 
FUNC_END GDC_DrvCommCalcWeight


FUNC_BEGIN GDC_DrvCommPrepareHWInfo
    /*00014c80*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00014c84*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1fc8] 
    /*00014c88*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1fc8] 
    /*00014c8c*/ SUBS        R4, R0, #0 
    /*00014c90*/ MOV         R5, R1 
    /*00014c94*/ LDR         R9, [R3] 
    /*00014c98*/ ADD         R9, R9, #108                @ 0x6c 
    /*00014c9c*/ BEQ         GDC_DrvCommPrepareHWInfo_x14d78
    GDC_DrvCommPrepareHWInfo_x14ca0:
    /*00014ca0*/ LDR         R3, [R4, #16] 
    /*00014ca4*/ CMP         R3, #2 
    /*00014ca8*/ BEQ         GDC_DrvCommPrepareHWInfo_x14cc8
    /*00014cac*/ MOVW        R3, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57a8] 
    /*00014cb0*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5758] 
    /*00014cb4*/ MOVT        R3, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57a8] 
    /*00014cb8*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5758] 
    /*00014cbc*/ MOVW        R2, #371                    @ 0x173 
    /*00014cc0*/ LDR         R1, [PC, #208]              @ 0x0000000000014d98 
    /*00014cc4*/ BL          0x0000000000014CC4          @ osal_panic [R_ARM_CALL: +0x0] 
    GDC_DrvCommPrepareHWInfo_x14cc8:
    /*00014cc8*/ MOV         R3, #0 
    /*00014ccc*/ STR         R3, [R5, #48]               @ 0x30 
    /*00014cd0*/ LDR         R3, [R4, #28] 
    /*00014cd4*/ MOV         R8, R4 
    /*00014cd8*/ STR         R3, [R5, #28] 
    /*00014cdc*/ LDR         R3, [R4, #32] 
    /*00014ce0*/ STR         R3, [R5, #32] 
    /*00014ce4*/ LDR         R3, [R4, #36]               @ 0x24 
    /*00014ce8*/ STR         R3, [R5, #36]               @ 0x24 
    /*00014cec*/ LDR         R6, [R8, #8]! 
    /*00014cf0*/ CMP         R6, R8 
    /*00014cf4*/ LDR         R4, [R6] 
    /*00014cf8*/ BEQ         GDC_DrvCommPrepareHWInfo_x14d58
    /*00014cfc*/ MOVW        FP, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57d0] 
    /*00014d00*/ MOVW        SL, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5758] 
    /*00014d04*/ MOVT        FP, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57d0] 
    /*00014d08*/ MOVT        SL, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5758] 
    GDC_DrvCommPrepareHWInfo_x14d0c:
    /*00014d0c*/ MOV         R0, R9 
    /*00014d10*/ BL          0x0000000000014D10          @ GDC_DrvGetTaskFromFreeList [R_ARM_CALL: .text+0x16c40] 
    /*00014d14*/ SUBS        R7, R0, #0 
    /*00014d18*/ BEQ         GDC_DrvCommPrepareHWInfo_x14d60
    GDC_DrvCommPrepareHWInfo_x14d1c:
    /*00014d1c*/ MOV         R1, R7 
    /*00014d20*/ MOV         R0, R6 
    /*00014d24*/ BL          0x0000000000014D24          @ GDC_DrvCommConvertTaskInfo [R_ARM_CALL: .text+0x14a9c] 
    /*00014d28*/ MOV         R0, R6 
    /*00014d2c*/ BL          0x0000000000014D2C          @ GDC_DrvCommCalcWeight [R_ARM_CALL: .text+0x14c1c] 
    /*00014d30*/ LDR         R3, [R5, #48]               @ 0x30 
    /*00014d34*/ MOV         R1, R5 
    /*00014d38*/ MOV         R6, R4 
    /*00014d3c*/ ADD         R3, R3, R0 
    /*00014d40*/ MOV         R0, R7 
    /*00014d44*/ STR         R3, [R5, #48]               @ 0x30 
    /*00014d48*/ BL          0x0000000000014D48          @ GDC_DrvPutTaskToJob [R_ARM_CALL: .text+0x16db8] 
    /*00014d4c*/ CMP         R4, R8 
    /*00014d50*/ LDR         R4, [R4] 
    /*00014d54*/ BNE         GDC_DrvCommPrepareHWInfo_x14d0c
    GDC_DrvCommPrepareHWInfo_x14d58:
    /*00014d58*/ MOV         R0, #0 
    /*00014d5c*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_DrvCommPrepareHWInfo_x14d60:
    /*00014d60*/ MOV         R3, FP 
    /*00014d64*/ MOVW        R2, #381                    @ 0x17d 
    /*00014d68*/ LDR         R1, [PC, #40]               @ 0x0000000000014d98 
    /*00014d6c*/ MOV         R0, SL 
    /*00014d70*/ BL          0x0000000000014D70          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00014d74*/ B           GDC_DrvCommPrepareHWInfo_x14d1c
    GDC_DrvCommPrepareHWInfo_x14d78:
    /*00014d78*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5798] 
    /*00014d7c*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5758] 
    /*00014d80*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5798] 
    /*00014d84*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5758] 
    /*00014d88*/ MOVW        R2, #370                    @ 0x172 
    /*00014d8c*/ LDR         R1, [PC, #4]                @ 0x0000000000014d98 
    /*00014d90*/ BL          0x0000000000014D90          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00014d94*/ B           GDC_DrvCommPrepareHWInfo_x14ca0
    /*00014d98*/ @           <UNDEFINED> instruction: 0x00000db4 
FUNC_END GDC_DrvCommPrepareHWInfo


FUNC_BEGIN GDC_DrvCommGetProc
    /*00014d9c*/ PUSH        {R4, LR} 
    /*00014da0*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1fc8] 
    /*00014da4*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1fc8] 
    /*00014da8*/ LDR         R0, [R4] 
    /*00014dac*/ ADD         R0, R0, #128                @ 0x80 
    /*00014db0*/ BL          0x0000000000014DB0          @ GDC_DrvQueryFreeNodeNum [R_ARM_CALL: .text+0x16b00] 
    /*00014db4*/ STR         R0, [R4, #4]! 
    /*00014db8*/ MOV         R0, R4 
    /*00014dbc*/ POP         {R4, PC} 
FUNC_END GDC_DrvCommGetProc


FUNC_BEGIN GDC_DrvCommPrepareNodes
    /*00014dc0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00014dc4*/ SUBS        R9, R0, #0 
    /*00014dc8*/ SUB         SP, SP, #12 
    /*00014dcc*/ BEQ         GDC_DrvCommPrepareNodes_x14edc
    GDC_DrvCommPrepareNodes_x14dd0:
    /*00014dd0*/ LDR         R3, [R9, #20] 
    /*00014dd4*/ SUB         R3, R3, #3 
    /*00014dd8*/ CMP         R3, #1 
    /*00014ddc*/ BLS         GDC_DrvCommPrepareNodes_x14dfc
    /*00014de0*/ MOVW        R3, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57f4] 
    /*00014de4*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5758] 
    /*00014de8*/ MOVT        R3, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57f4] 
    /*00014dec*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5758] 
    /*00014df0*/ MOVW        R2, #423                    @ 0x1a7 
    /*00014df4*/ LDR         R1, [PC, #256]              @ 0x0000000000014efc 
    /*00014df8*/ BL          0x0000000000014DF8          @ osal_panic [R_ARM_CALL: +0x0] 
    GDC_DrvCommPrepareNodes_x14dfc:
    /*00014dfc*/ LDR         R6, [R9, #12]! 
    /*00014e00*/ CMP         R6, R9 
    /*00014e04*/ LDR         R8, [R6] 
    /*00014e08*/ BEQ         GDC_DrvCommPrepareNodes_x14eb8
    /*00014e0c*/ MOVW        SL, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1fc8] 
    /*00014e10*/ MOVW        FP, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5858] 
    /*00014e14*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5758] 
    /*00014e18*/ MOVT        SL, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1fc8] 
    /*00014e1c*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5758] 
    /*00014e20*/ MOVT        FP, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5858] 
    /*00014e24*/ STR         R3, [SP, #4] 
    /*00014e28*/ B           GDC_DrvCommPrepareNodes_x14e58
    GDC_DrvCommPrepareNodes_x14e2c:
    /*00014e2c*/ MOV         R1, R5 
    /*00014e30*/ LDR         R2, [R4, #20] 
    /*00014e34*/ LDR         R0, [R4, #16] 
    /*00014e38*/ BL          0x0000000000014E38          @ GDC_DRV_SetReg_Gyro [R_ARM_CALL: .text+0x17b14] 
    /*00014e3c*/ MOV         R1, R6 
    /*00014e40*/ MOV         R0, R4 
    /*00014e44*/ MOV         R6, R8 
    /*00014e48*/ BL          0x0000000000014E48          @ GDC_DrvPutNodeToTask [R_ARM_CALL: .text+0x16bb4] 
    /*00014e4c*/ CMP         R8, R9 
    /*00014e50*/ LDR         R8, [R8] 
    /*00014e54*/ BEQ         GDC_DrvCommPrepareNodes_x14eb8
    GDC_DrvCommPrepareNodes_x14e58:
    /*00014e58*/ LDR         R0, [SL] 
    /*00014e5c*/ MOV         R5, R6 
    /*00014e60*/ ADD         R0, R0, #128                @ 0x80 
    /*00014e64*/ BL          0x0000000000014E64          @ GDC_DrvGetNodeFromFreeList [R_ARM_CALL: .text+0x16b08] 
    /*00014e68*/ SUBS        R4, R0, #0 
    /*00014e6c*/ BEQ         GDC_DrvCommPrepareNodes_x14ec4
    GDC_DrvCommPrepareNodes_x14e70:
    /*00014e70*/ LDR         R3, [R5, #16]! 
    /*00014e74*/ LDR         R2, [R4, #20] 
    /*00014e78*/ LDR         R0, [R4, #16] 
    /*00014e7c*/ LDR         R7, [R3, #24] 
    /*00014e80*/ MOV         R1, R5 
    /*00014e84*/ ADDS        R7, R7, #0 
    /*00014e88*/ MOVNE       R7, #1 
    /*00014e8c*/ MOV         R3, R7 
    /*00014e90*/ BL          0x0000000000014E90          @ GDC_DRV_SetReg [R_ARM_CALL: .text+0x17f58] 
    /*00014e94*/ LDR         R3, [R6, #20] 
    /*00014e98*/ LDR         R3, [R3, #20] 
    /*00014e9c*/ CMP         R3, #0 
    /*00014ea0*/ BEQ         GDC_DrvCommPrepareNodes_x14e2c
    /*00014ea4*/ MOV         R2, R7 
    /*00014ea8*/ MOV         R1, R5 
    /*00014eac*/ LDR         R0, [R4, #16] 
    /*00014eb0*/ BL          0x0000000000014EB0          @ GDC_DRV_SetCmpReg [R_ARM_CALL: .text+0x173d0] 
    /*00014eb4*/ B           GDC_DrvCommPrepareNodes_x14e2c
    GDC_DrvCommPrepareNodes_x14eb8:
    /*00014eb8*/ MOV         R0, #0 
    /*00014ebc*/ ADD         SP, SP, #12 
    /*00014ec0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_DrvCommPrepareNodes_x14ec4:
    /*00014ec4*/ MOV         R3, FP 
    /*00014ec8*/ MOVW        R2, #430                    @ 0x1ae 
    /*00014ecc*/ LDR         R1, [PC, #40]               @ 0x0000000000014efc 
    /*00014ed0*/ LDR         R0, [SP, #4] 
    /*00014ed4*/ BL          0x0000000000014ED4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00014ed8*/ B           GDC_DrvCommPrepareNodes_x14e70
    GDC_DrvCommPrepareNodes_x14edc:
    /*00014edc*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57e4] 
    /*00014ee0*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5758] 
    /*00014ee4*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57e4] 
    /*00014ee8*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5758] 
    /*00014eec*/ MOVW        R2, #422                    @ 0x1a6 
    /*00014ef0*/ LDR         R1, [PC, #4]                @ 0x0000000000014efc 
    /*00014ef4*/ BL          0x0000000000014EF4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00014ef8*/ B           GDC_DrvCommPrepareNodes_x14dd0
    /*00014efc*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END GDC_DrvCommPrepareNodes


FUNC_BEGIN GDC_DrvCommStartWaitlist
    /*00014f00*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00014f04*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1fc8] 
    /*00014f08*/ SUB         SP, SP, #68                 @ 0x44 
    /*00014f0c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1fc8] 
    /*00014f10*/ ADD         R4, R0, #44                 @ 0x2c 
    /*00014f14*/ MOV         R5, R0 
    /*00014f18*/ STR         R3, [SP, #20] 
    /*00014f1c*/ MOV         R2, #0 
    /*00014f20*/ LDR         R3, [R3] 
    /*00014f24*/ STR         R0, [SP, #44]               @ 0x2c 
    /*00014f28*/ STR         R2, [SP, #56]               @ 0x38 
    /*00014f2c*/ MOV         R0, R3 
    /*00014f30*/ LDR         R3, [R3, R4, LSL #2] 
    /*00014f34*/ STR         R2, [SP, #60]               @ 0x3c 
    /*00014f38*/ STR         R3, [SP, #48]               @ 0x30 
    /*00014f3c*/ BL          0x0000000000014F3C          @ GDC_DrvQueryWaitJobNum [R_ARM_CALL: .text+0x16eac] 
    /*00014f40*/ CMP         R0, #0 
    /*00014f44*/ BEQ         GDC_DrvCommStartWaitlist_x15180
    /*00014f48*/ ADD         R4, SP, #60                 @ 0x3c 
    /*00014f4c*/ MOV         R0, R4 
    /*00014f50*/ BL          0x0000000000014F50          @ GDC_DRV_RamSpinLock [R_ARM_CALL: .text+0x19260] 
    /*00014f54*/ ADD         R1, SP, #56                 @ 0x38 
    /*00014f58*/ MOV         R0, R5 
    /*00014f5c*/ BL          0x0000000000014F5C          @ GDC_DRV_GetRamStatus [R_ARM_CALL: .text+0x19174] 
    /*00014f60*/ LDR         R3, [SP, #56]               @ 0x38 
    /*00014f64*/ CMP         R3, #0 
    /*00014f68*/ BEQ         GDC_DrvCommStartWaitlist_x153c4
    /*00014f6c*/ CMP         R3, #1 
    /*00014f70*/ BEQ         GDC_DrvCommStartWaitlist_x151d8
    GDC_DrvCommStartWaitlist_x14f74:
    /*00014f74*/ MOV         R0, R4 
    /*00014f78*/ BL          0x0000000000014F78          @ GDC_DRV_RamSpinUnlock [R_ARM_CALL: .text+0x19270] 
    /*00014f7c*/ LDR         R3, [SP, #20] 
    /*00014f80*/ LDR         R0, [R3] 
    /*00014f84*/ MOV         R2, R0 
    /*00014f88*/ LDR         R3, [R2, #16]! 
    /*00014f8c*/ CMP         R3, R2 
    /*00014f90*/ LDR         R2, [R3] 
    /*00014f94*/ BEQ         GDC_DrvCommStartWaitlist_x152cc
    /*00014f98*/ MOV         R6, #0 
    /*00014f9c*/ MOV         FP, R3 
    /*00014fa0*/ MOV         R7, R6 
    /*00014fa4*/ MOV         R5, R6 
    /*00014fa8*/ MOV         R9, R6 
    /*00014fac*/ MOV         R4, R6 
    /*00014fb0*/ MOVW        R1, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5754] 
    /*00014fb4*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5758] 
    /*00014fb8*/ MOVT        R1, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5754] 
    /*00014fbc*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5758] 
    /*00014fc0*/ STR         R1, [SP, #28] 
    /*00014fc4*/ MOVW        R1, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x58c8] 
    /*00014fc8*/ STR         R0, [SP, #32] 
    /*00014fcc*/ MOVT        R1, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x58c8] 
    /*00014fd0*/ STR         R2, [SP, #24] 
    /*00014fd4*/ STR         R1, [SP, #52]               @ 0x34 
    /*00014fd8*/ STR         R6, [SP, #36]               @ 0x24 
    GDC_DrvCommStartWaitlist_x14fdc:
    /*00014fdc*/ LDR         R0, [FP, #28] 
    /*00014fe0*/ BL          0x0000000000014FE0          @ GDC_HiModId2CallerId [R_ARM_CALL: .text+0xe20] 
    /*00014fe4*/ LDR         R3, [SP, #20] 
    /*00014fe8*/ MOV         R1, #4 
    /*00014fec*/ LDR         IP, [R3] 
    /*00014ff0*/ LDR         R3, [FP, #32] 
    /*00014ff4*/ MOV         R2, R0 
    /*00014ff8*/ ADD         R0, IP, R0, LSL #2 
    /*00014ffc*/ LDR         IP, [FP, #36]               @ 0x24 
    /*00015000*/ LDR         R0, [R0, #236]              @ 0xec 
    /*00015004*/ STR         IP, [SP] 
    /*00015008*/ BL          0x0000000000015008          @ GDC_GetPointerByOffset [R_ARM_CALL: .text+0xe5c] 
    /*0001500c*/ LDR         R3, [R0] 
    /*00015010*/ CMP         R3, #0 
    /*00015014*/ BNE         GDC_DrvCommStartWaitlist_x1522c
    /*00015018*/ CMP         R6, #0 
    /*0001501c*/ BEQ         GDC_DrvCommStartWaitlist_x15038
    /*00015020*/ LDR         R3, [R6, #52]               @ 0x34 
    /*00015024*/ CMP         R3, #0 
    /*00015028*/ BNE         GDC_DrvCommStartWaitlist_x15038
    /*0001502c*/ LDR         R3, [FP, #52]               @ 0x34 
    /*00015030*/ CMP         R3, #1 
    /*00015034*/ BEQ         GDC_DrvCommStartWaitlist_x15254
    GDC_DrvCommStartWaitlist_x15038:
    /*00015038*/ LDR         R3, [SP, #20] 
    /*0001503c*/ LDR         R2, [SP, #36]               @ 0x24 
    /*00015040*/ LDR         R0, [R3] 
    /*00015044*/ LDR         R3, [R0, #172]              @ 0xac 
    /*00015048*/ RSB         R3, R3, R3, LSL #8 
    /*0001504c*/ CMP         R2, R3, LSL #13 
    /*00015050*/ BGE         GDC_DrvCommStartWaitlist_x15254
    /*00015054*/ LDR         R3, [FP, #60]               @ 0x3c 
    /*00015058*/ CMP         R3, #0 
    /*0001505c*/ BNE         GDC_DrvCommStartWaitlist_x152f4
    /*00015060*/ ADD         R0, R0, #128                @ 0x80 
    /*00015064*/ BL          0x0000000000015064          @ GDC_DrvQueryFreeNodeNum [R_ARM_CALL: .text+0x16b00] 
    /*00015068*/ LDR         R3, [FP, #44]               @ 0x2c 
    /*0001506c*/ CMP         R0, R3 
    /*00015070*/ BCC         GDC_DrvCommStartWaitlist_x153dc
    /*00015074*/ LDR         R6, [SP, #20] 
    /*00015078*/ MOV         R0, FP 
    /*0001507c*/ LDR         R3, [R6, #24] 
    /*00015080*/ SUB         R3, R3, #1 
    /*00015084*/ STR         R3, [R6, #24] 
    /*00015088*/ BL          0x0000000000015088          @ GDC_DrvCommPrepareNodes [R_ARM_CALL: .text+0x14dc0] 
    /*0001508c*/ MOV         R3, #1 
    /*00015090*/ LDR         R0, [R6] 
    /*00015094*/ MOV         R1, FP 
    /*00015098*/ STR         R3, [FP, #60]               @ 0x3c 
    /*0001509c*/ BL          0x000000000001509C          @ GDC_DrvGetJobFromWaitList [R_ARM_CALL: .text+0x16eb4] 
    /*000150a0*/ LDR         R3, [SP, #48]               @ 0x30 
    /*000150a4*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*000150a8*/ MOV         R1, FP 
    /*000150ac*/ LDR         R0, [R6] 
    /*000150b0*/ BL          0x00000000000150B0          @ GDC_DrvPutJobToBusyList [R_ARM_CALL: .text+0x17018] 
    /*000150b4*/ LDR         R6, [FP, #12] 
    /*000150b8*/ LDR         R1, [SP, #36]               @ 0x24 
    /*000150bc*/ MOV         R3, #5 
    /*000150c0*/ LDR         R2, [FP, #48]               @ 0x30 
    /*000150c4*/ STR         R3, [FP, #20] 
    /*000150c8*/ ADD         R2, R1, R2 
    /*000150cc*/ STR         R2, [SP, #36]               @ 0x24 
    GDC_DrvCommStartWaitlist_x150d0:
    /*000150d0*/ ADD         R3, FP, #12 
    /*000150d4*/ LDR         SL, [R6] 
    /*000150d8*/ CMP         R3, R6 
    /*000150dc*/ STR         R3, [SP, #16] 
    /*000150e0*/ BEQ         GDC_DrvCommStartWaitlist_x1520c
    /*000150e4*/ STR         FP, [SP, #40]               @ 0x28 
    /*000150e8*/ MOV         FP, R6 
    GDC_DrvCommStartWaitlist_x150ec:
    /*000150ec*/ MOV         R8, FP 
    /*000150f0*/ LDR         R3, [R8, #8]! 
    /*000150f4*/ CMP         R8, R3 
    /*000150f8*/ LDR         R6, [R3] 
    /*000150fc*/ BEQ         GDC_DrvCommStartWaitlist_x15164
    /*00015100*/ MOV         R7, R4 
    /*00015104*/ MOV         R4, R3 
    /*00015108*/ B           GDC_DrvCommStartWaitlist_x15110
    GDC_DrvCommStartWaitlist_x1510c:
    /*0001510c*/ MOV         R4, R3 
    GDC_DrvCommStartWaitlist_x15110:
    /*00015110*/ MOV         R1, R5 
    /*00015114*/ LDR         R0, [R4, #16] 
    /*00015118*/ STR         R5, [R4, #20] 
    /*0001511c*/ BL          0x000000000001511C          @ GDC_HAL_SetNodeID [R_ARM_CALL: .text+0x19348] 
    /*00015120*/ MOV         R1, #186                    @ 0xba 
    /*00015124*/ LDR         R0, [R4, #16] 
    /*00015128*/ BL          0x0000000000015128          @ GDC_HAL_SetMask [R_ARM_CALL: .text+0x19354] 
    /*0001512c*/ CMP         R5, #0 
    /*00015130*/ MOVEQ       R9, R4 
    /*00015134*/ BEQ         GDC_DrvCommStartWaitlist_x1514c
    /*00015138*/ CMP         R7, #0 
    /*0001513c*/ BEQ         GDC_DrvCommStartWaitlist_x151ec
    GDC_DrvCommStartWaitlist_x15140:
    /*00015140*/ LDR         R0, [R7, #16] 
    /*00015144*/ LDRD        R2, [R4, #8] 
    /*00015148*/ BL          0x0000000000015148          @ GDC_HAL_SetNext [R_ARM_CALL: .text+0x19380] 
    GDC_DrvCommStartWaitlist_x1514c:
    /*0001514c*/ CMP         R6, R8 
    /*00015150*/ MOV         R3, R6 
    /*00015154*/ ADD         R5, R5, #1 
    /*00015158*/ LDR         R6, [R6] 
    /*0001515c*/ MOV         R7, R4 
    /*00015160*/ BNE         GDC_DrvCommStartWaitlist_x1510c
    GDC_DrvCommStartWaitlist_x15164:
    /*00015164*/ LDR         R2, [SP, #16] 
    /*00015168*/ MOV         R3, SL 
    /*0001516c*/ CMP         SL, R2 
    /*00015170*/ LDR         SL, [SL] 
    /*00015174*/ BEQ         GDC_DrvCommStartWaitlist_x15204
    /*00015178*/ MOV         FP, R3 
    /*0001517c*/ B           GDC_DrvCommStartWaitlist_x150ec
    GDC_DrvCommStartWaitlist_x15180:
    /*00015180*/ LDR         R3, [SP, #20] 
    /*00015184*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*00015188*/ LDR         R0, [R3] 
    /*0001518c*/ LDR         R2, [R0, R4, LSL #2] 
    /*00015190*/ BL          0x0000000000015190          @ GDC_DrvQueryBusyJobNum [R_ARM_CALL: .text+0x17068] 
    /*00015194*/ SUBS        R5, R0, #0 
    /*00015198*/ BEQ         GDC_DrvCommStartWaitlist_x151a8
    /*0001519c*/ MOV         R0, #0 
    /*000151a0*/ ADD         SP, SP, #68                 @ 0x44 
    /*000151a4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_DrvCommStartWaitlist_x151a8:
    /*000151a8*/ LDR         R6, [SP, #44]               @ 0x2c 
    /*000151ac*/ ADD         R4, SP, #60                 @ 0x3c 
    /*000151b0*/ MOV         R0, R6 
    /*000151b4*/ BL          0x00000000000151B4          @ GDC_DRV_ClkDisable [R_ARM_CALL: .text+0x189c0] 
    /*000151b8*/ MOV         R0, R4 
    /*000151bc*/ BL          0x00000000000151BC          @ GDC_DRV_RamSpinLock [R_ARM_CALL: .text+0x19260] 
    /*000151c0*/ ADD         R1, SP, #56                 @ 0x38 
    /*000151c4*/ MOV         R0, R6 
    /*000151c8*/ BL          0x00000000000151C8          @ GDC_DRV_GetRamStatus [R_ARM_CALL: .text+0x19174] 
    /*000151cc*/ LDR         R3, [SP, #56]               @ 0x38 
    /*000151d0*/ CMP         R3, #2 
    /*000151d4*/ BEQ         GDC_DrvCommStartWaitlist_x15440
    GDC_DrvCommStartWaitlist_x151d8:
    /*000151d8*/ MOV         R0, R4 
    /*000151dc*/ BL          0x00000000000151DC          @ GDC_DRV_RamSpinUnlock [R_ARM_CALL: .text+0x19270] 
    /*000151e0*/ MOV         R0, #0 
    /*000151e4*/ ADD         SP, SP, #68                 @ 0x44 
    /*000151e8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_DrvCommStartWaitlist_x151ec:
    /*000151ec*/ LDR         R3, [SP, #28] 
    /*000151f0*/ MOVW        R2, #637                    @ 0x27d 
    /*000151f4*/ LDR         R1, [PC, #604]              @ 0x0000000000015458 
    /*000151f8*/ LDR         R0, [SP, #32] 
    /*000151fc*/ BL          0x00000000000151FC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00015200*/ B           GDC_DrvCommStartWaitlist_x15140
    GDC_DrvCommStartWaitlist_x15204:
    /*00015204*/ MOV         R7, FP 
    /*00015208*/ LDR         FP, [SP, #40]               @ 0x28 
    GDC_DrvCommStartWaitlist_x1520c:
    /*0001520c*/ LDR         R0, [FP, #40]               @ 0x28 
    /*00015210*/ BL          0x0000000000015210          @ GDC_DrvCallBack [R_ARM_CALL: .text+0x4054] 
    /*00015214*/ LDR         R0, [FP, #40]               @ 0x28 
    /*00015218*/ BL          0x0000000000015218          @ GDC_GetHwStartTime [R_ARM_CALL: .text+0x4278] 
    /*0001521c*/ LDR         R3, [FP, #52]               @ 0x34 
    /*00015220*/ CMP         R3, #1 
    /*00015224*/ BEQ         GDC_DrvCommStartWaitlist_x15380
    GDC_DrvCommStartWaitlist_x15228:
    /*00015228*/ MOV         R6, FP 
    GDC_DrvCommStartWaitlist_x1522c:
    /*0001522c*/ LDR         R3, [SP, #20] 
    /*00015230*/ LDR         R1, [SP, #24] 
    /*00015234*/ LDR         R3, [R3] 
    /*00015238*/ MOV         R2, R1 
    /*0001523c*/ MOV         FP, R1 
    /*00015240*/ ADD         R3, R3, #16 
    /*00015244*/ LDR         R1, [R1] 
    /*00015248*/ CMP         R2, R3 
    /*0001524c*/ STR         R1, [SP, #24] 
    /*00015250*/ BNE         GDC_DrvCommStartWaitlist_x14fdc
    GDC_DrvCommStartWaitlist_x15254:
    /*00015254*/ CMP         R9, #0 
    /*00015258*/ BEQ         GDC_DrvCommStartWaitlist_x153b8
    /*0001525c*/ CMP         R4, #0 
    /*00015260*/ BEQ         GDC_DrvCommStartWaitlist_x15420
    GDC_DrvCommStartWaitlist_x15264:
    /*00015264*/ LDR         R0, [R4, #16] 
    /*00015268*/ MOV         R2, #0 
    /*0001526c*/ MOV         R3, #0 
    /*00015270*/ BL          0x0000000000015270          @ GDC_HAL_SetNext [R_ARM_CALL: .text+0x19380] 
    /*00015274*/ LDR         R7, [SP, #20] 
    /*00015278*/ LDR         R6, [SP, #44]               @ 0x2c 
    /*0001527c*/ LDR         R2, [R4, #20] 
    /*00015280*/ LDR         R3, [R7] 
    /*00015284*/ MOV         R0, R6 
    /*00015288*/ ADD         R3, R3, R6, LSL #2 
    /*0001528c*/ STR         R2, [R3, #196]              @ 0xc4 
    /*00015290*/ BL          0x0000000000015290          @ GDC_DRV_ClkEnable [R_ARM_CALL: .text+0x1893c] 
    /*00015294*/ LDRD        R4, [R9, #8] 
    /*00015298*/ LDR         R3, [R7] 
    /*0001529c*/ ADD         R1, R6, #77                 @ 0x4d 
    /*000152a0*/ MOV         R2, #0 
    /*000152a4*/ MOV         R0, R6 
    /*000152a8*/ ADD         R3, R3, R1, LSL #2 
    /*000152ac*/ STM         SP, {R2, R3} 
    /*000152b0*/ MOV         R2, R4 
    /*000152b4*/ MOV         R3, R5 
    /*000152b8*/ BL          0x00000000000152B8          @ GDC_HAL_Start [R_ARM_CALL: .text+0x19394] 
    /*000152bc*/ LDR         R0, [R7] 
    /*000152c0*/ ADD         R3, R6, #54                 @ 0x36 
    /*000152c4*/ MOV         R2, #1 
    /*000152c8*/ STR         R2, [R0, R3, LSL #2] 
    GDC_DrvCommStartWaitlist_x152cc:
    /*000152cc*/ ADD         R0, R0, #128                @ 0x80 
    /*000152d0*/ BL          0x00000000000152D0          @ GDC_DrvQueryFreeNodeNum [R_ARM_CALL: .text+0x16b00] 
    /*000152d4*/ LDR         R2, [SP, #20] 
    /*000152d8*/ LDR         R3, [R2, #8] 
    /*000152dc*/ CMP         R0, R3 
    /*000152e0*/ MOVCC       R3, R2 
    /*000152e4*/ STRCC       R0, [R3, #8] 
    /*000152e8*/ MOV         R0, #0 
    /*000152ec*/ ADD         SP, SP, #68                 @ 0x44 
    /*000152f0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_DrvCommStartWaitlist_x152f4:
    /*000152f4*/ MOV         R1, FP 
    /*000152f8*/ BL          0x00000000000152F8          @ GDC_DrvGetJobFromWaitList [R_ARM_CALL: .text+0x16eb4] 
    /*000152fc*/ LDR         R0, [SP, #20] 
    /*00015300*/ LDR         R3, [SP, #48]               @ 0x30 
    /*00015304*/ MOV         R1, FP 
    /*00015308*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0001530c*/ LDR         R0, [R0] 
    /*00015310*/ BL          0x0000000000015310          @ GDC_DrvPutJobToBusyList [R_ARM_CALL: .text+0x17018] 
    /*00015314*/ LDR         R6, [FP, #12] 
    /*00015318*/ MOV         R0, #5 
    /*0001531c*/ STR         R0, [FP, #20] 
    /*00015320*/ LDR         R1, [SP, #36]               @ 0x24 
    /*00015324*/ LDR         R3, [R6, #1048]             @ 0x418 
    /*00015328*/ LDR         R2, [FP, #48]               @ 0x30 
    /*0001532c*/ CMP         R3, #1 
    /*00015330*/ ADD         R2, R1, R2 
    /*00015334*/ STR         R2, [SP, #36]               @ 0x24 
    /*00015338*/ BNE         GDC_DrvCommStartWaitlist_x150d0
    /*0001533c*/ LDR         R3, [R6, #1052]             @ 0x41c 
    /*00015340*/ CMP         R3, #1 
    /*00015344*/ BNE         GDC_DrvCommStartWaitlist_x150d0
    /*00015348*/ MOVW        R2, #610                    @ 0x262 
    /*0001534c*/ LDR         R3, [PC, #260]              @ 0x0000000000015458 
    /*00015350*/ STR         R2, [SP] 
    /*00015354*/ MOV         R1, #37                     @ 0x25 
    /*00015358*/ LDR         R2, [SP, #52]               @ 0x34 
    /*0001535c*/ BL          0x000000000001535C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00015360*/ LDR         R3, [SP, #20] 
    /*00015364*/ ADD         R1, R6, #1056               @ 0x420 
    /*00015368*/ MOV         R2, #256                    @ 0x100 
    /*0001536c*/ LDR         R3, [R3] 
    /*00015370*/ LDR         R0, [R3, #264]              @ 0x108 
    /*00015374*/ BL          0x0000000000015374          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00015378*/ LDR         R6, [FP, #12] 
    /*0001537c*/ B           GDC_DrvCommStartWaitlist_x150d0
    GDC_DrvCommStartWaitlist_x15380:
    /*00015380*/ CMP         R4, #0 
    /*00015384*/ CMPNE       R7, #0 
    /*00015388*/ BEQ         GDC_DrvCommStartWaitlist_x15228
    /*0001538c*/ MOV         R1, #190                    @ 0xbe 
    /*00015390*/ LDR         R0, [R4, #16] 
    /*00015394*/ BL          0x0000000000015394          @ GDC_HAL_SetMask [R_ARM_CALL: .text+0x19354] 
    /*00015398*/ LDR         R3, [R7, #20] 
    /*0001539c*/ LDR         R1, [FP, #56]               @ 0x38 
    /*000153a0*/ ADD         R3, R3, #288                @ 0x120 
    /*000153a4*/ LDR         R0, [R4, #16] 
    /*000153a8*/ LDRD        R2, [R3, #-8] 
    /*000153ac*/ BL          0x00000000000153AC          @ GDC_HAL_SetLowDelay [R_ARM_CALL: .text+0x1935c] 
    /*000153b0*/ CMP         R9, #0 
    /*000153b4*/ BNE         GDC_DrvCommStartWaitlist_x15264
    GDC_DrvCommStartWaitlist_x153b8:
    /*000153b8*/ LDR         R3, [SP, #20] 
    /*000153bc*/ LDR         R0, [R3] 
    /*000153c0*/ B           GDC_DrvCommStartWaitlist_x152cc
    GDC_DrvCommStartWaitlist_x153c4:
    /*000153c4*/ MOV         R1, #2 
    /*000153c8*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*000153cc*/ BL          0x00000000000153CC          @ GDC_DRV_SetRamStatus [R_ARM_CALL: .text+0x1915c] 
    /*000153d0*/ MOV         R0, #2 
    /*000153d4*/ BL          0x00000000000153D4          @ GDC_DRV_SetRamUserSafety [R_ARM_CALL: .text+0x19214] 
    /*000153d8*/ B           GDC_DrvCommStartWaitlist_x14f74
    GDC_DrvCommStartWaitlist_x153dc:
    /*000153dc*/ LDR         R1, [FP, #28] 
    /*000153e0*/ MOV         R0, #556                    @ 0x22c 
    /*000153e4*/ LDR         LR, [SP, #20] 
    /*000153e8*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x586c] 
    /*000153ec*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x586c] 
    /*000153f0*/ LDR         R3, [LR, #20] 
    /*000153f4*/ STR         R1, [SP, #8] 
    /*000153f8*/ MOV         R1, #37                     @ 0x25 
    /*000153fc*/ LDR         IP, [FP, #40]               @ 0x28 
    /*00015400*/ ADD         R3, R3, #1 
    /*00015404*/ STR         R0, [SP] 
    /*00015408*/ MOV         R0, #3 
    /*0001540c*/ STR         R3, [LR, #20] 
    /*00015410*/ STR         IP, [SP, #4] 
    /*00015414*/ LDR         R3, [PC, #60]               @ 0x0000000000015458 
    /*00015418*/ BL          0x0000000000015418          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001541c*/ B           GDC_DrvCommStartWaitlist_x15254
    GDC_DrvCommStartWaitlist_x15420:
    /*00015420*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5754] 
    /*00015424*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5758] 
    /*00015428*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5754] 
    /*0001542c*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5758] 
    /*00015430*/ MOVW        R2, #679                    @ 0x2a7 
    /*00015434*/ LDR         R1, [PC, #28]               @ 0x0000000000015458 
    /*00015438*/ BL          0x0000000000015438          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001543c*/ B           GDC_DrvCommStartWaitlist_x15264
    GDC_DrvCommStartWaitlist_x15440:
    /*00015440*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*00015444*/ MOV         R1, R5 
    /*00015448*/ BL          0x0000000000015448          @ GDC_DRV_SetRamStatus [R_ARM_CALL: .text+0x1915c] 
    /*0001544c*/ MOV         R0, R5 
    /*00015450*/ BL          0x0000000000015450          @ GDC_DRV_SetRamUserSafety [R_ARM_CALL: .text+0x19214] 
    /*00015454*/ B           GDC_DrvCommStartWaitlist_x151d8
    /*00015458*/ ANDEQ       R0, R0, R8, ROR #27 
FUNC_END GDC_DrvCommStartWaitlist


FUNC_BEGIN GDC_DrvCommSubmitJob
    /*0001545c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00015460*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1fc8] 
    /*00015464*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1fc8] 
    /*00015468*/ SUBS        R6, R0, #0 
    /*0001546c*/ SUB         SP, SP, #28 
    /*00015470*/ LDR         R3, [R4] 
    /*00015474*/ MOV         R7, R3 
    /*00015478*/ BEQ         GDC_DrvCommSubmitJob_x156a8
    GDC_DrvCommSubmitJob_x1547c:
    /*0001547c*/ LDR         R2, [R3, #228]              @ 0xe4 
    /*00015480*/ CMP         R2, #1 
    /*00015484*/ BEQ         GDC_DrvCommSubmitJob_x156fc
    /*00015488*/ LDR         R2, [R3, #4] 
    /*0001548c*/ MOV         R1, #1 
    /*00015490*/ STR         R1, [R3, #224]              @ 0xe0 
    /*00015494*/ LDR         R3, [R6, #88]               @ 0x58 
    /*00015498*/ LDR         R5, [R2, R3, LSL #2] 
    /*0001549c*/ LDR         R3, [R5, #20] 
    /*000154a0*/ CMP         R3, #0 
    /*000154a4*/ BNE         GDC_DrvCommSubmitJob_x155f8
    GDC_DrvCommSubmitJob_x154a8:
    /*000154a8*/ MOV         R0, R7 
    /*000154ac*/ MOV         R1, R5 
    /*000154b0*/ BL          0x00000000000154B0          @ GDC_DrvGetJobFromFreeList [R_ARM_CALL: .text+0x16de4] 
    /*000154b4*/ MOV         R3, #3 
    /*000154b8*/ MOV         R2, #8 
    /*000154bc*/ STR         R3, [R5, #20] 
    /*000154c0*/ ADD         R1, R6, #68                 @ 0x44 
    /*000154c4*/ ADD         R0, R5, #52                 @ 0x34 
    /*000154c8*/ BL          0x00000000000154C8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000154cc*/ MOV         R0, R6 
    /*000154d0*/ BL          0x00000000000154D0          @ GDC_DrvCommCalcNodeNum [R_ARM_CALL: .text+0x14a14] 
    /*000154d4*/ LDR         R3, [R4, #12] 
    /*000154d8*/ CMP         R3, R0 
    /*000154dc*/ STRCC       R0, [R4, #12] 
    /*000154e0*/ CMP         R0, #0 
    /*000154e4*/ STR         R0, [R5, #44]               @ 0x2c 
    /*000154e8*/ BLE         GDC_DrvCommSubmitJob_x15688
    GDC_DrvCommSubmitJob_x154ec:
    /*000154ec*/ MOV         R1, R5 
    /*000154f0*/ MOV         R0, R6 
    /*000154f4*/ BL          0x00000000000154F4          @ GDC_DrvCommPrepareHWInfo [R_ARM_CALL: .text+0x14c80] 
    /*000154f8*/ LDR         R0, [R4] 
    /*000154fc*/ ADD         R0, R0, #128                @ 0x80 
    /*00015500*/ BL          0x0000000000015500          @ GDC_DrvQueryFreeNodeNum [R_ARM_CALL: .text+0x16b00] 
    /*00015504*/ LDR         R3, [R5, #44]               @ 0x2c 
    /*00015508*/ LDR         R2, [R4, #24] 
    /*0001550c*/ CMP         R0, R3 
    /*00015510*/ MOV         R7, R0 
    /*00015514*/ BLT         GDC_DrvCommSubmitJob_x155b4
    /*00015518*/ CMP         R2, #0 
    /*0001551c*/ BEQ         GDC_DrvCommSubmitJob_x15618
    GDC_DrvCommSubmitJob_x15520:
    /*00015520*/ STR         R2, [SP, #12] 
    /*00015524*/ MOV         R0, #796                    @ 0x31c 
    /*00015528*/ LDR         R1, [R6, #28] 
    /*0001552c*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x59d4] 
    /*00015530*/ LDR         R3, [PC, #496]              @ 0x0000000000015728 
    /*00015534*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x59d4] 
    /*00015538*/ STR         R1, [SP, #8] 
    /*0001553c*/ MOV         R1, #37                     @ 0x25 
    /*00015540*/ LDR         IP, [R6, #88]               @ 0x58 
    /*00015544*/ STR         R0, [SP] 
    /*00015548*/ MOV         R0, #3 
    /*0001554c*/ STR         IP, [SP, #4] 
    /*00015550*/ BL          0x0000000000015550          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_DrvCommSubmitJob_x15554:
    /*00015554*/ LDR         R2, [R4, #24] 
    /*00015558*/ MOV         R6, #0 
    /*0001555c*/ LDR         R3, [R4, #16] 
    /*00015560*/ MOV         R1, R5 
    /*00015564*/ LDR         R0, [R4] 
    /*00015568*/ ADD         R2, R2, #1 
    /*0001556c*/ STR         R6, [R5, #60]               @ 0x3c 
    /*00015570*/ ADD         R3, R3, #1 
    /*00015574*/ STR         R2, [R4, #24] 
    /*00015578*/ STR         R3, [R4, #16] 
    /*0001557c*/ BL          0x000000000001557C          @ GDC_DrvPutJobToWaitList [R_ARM_CALL: .text+0x16f2c] 
    /*00015580*/ LDR         R3, [R4] 
    /*00015584*/ MOV         R2, #4 
    /*00015588*/ STR         R2, [R5, #20] 
    /*0001558c*/ ADD         R0, R3, #212                @ 0xd4 
    /*00015590*/ STR         R6, [R3, #224]              @ 0xe0 
    /*00015594*/ BL          0x0000000000015594          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00015598*/ LDR         R3, [R4, #8] 
    /*0001559c*/ CMP         R3, R7 
    /*000155a0*/ STRHI       R7, [R4, #8] 
    /*000155a4*/ MOVHI       R0, R6 
    /*000155a8*/ MOVLS       R0, R6 
    GDC_DrvCommSubmitJob_x155ac:
    /*000155ac*/ ADD         SP, SP, #28 
    /*000155b0*/ POP         {R4, R5, R6, R7, PC} 
    GDC_DrvCommSubmitJob_x155b4:
    /*000155b4*/ CMP         R2, #0 
    /*000155b8*/ BNE         GDC_DrvCommSubmitJob_x15520
    /*000155bc*/ STR         R3, [SP, #16] 
    /*000155c0*/ MOVW        R0, #791                    @ 0x317 
    /*000155c4*/ STR         R7, [SP, #12] 
    /*000155c8*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5984] 
    /*000155cc*/ LDR         IP, [R6, #28] 
    /*000155d0*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5984] 
    /*000155d4*/ LDR         R3, [PC, #332]              @ 0x0000000000015728 
    /*000155d8*/ MOV         R1, #37                     @ 0x25 
    /*000155dc*/ STR         IP, [SP, #8] 
    /*000155e0*/ LDR         IP, [R6, #88]               @ 0x58 
    /*000155e4*/ STR         R0, [SP] 
    /*000155e8*/ MOV         R0, #3 
    /*000155ec*/ STR         IP, [SP, #4] 
    /*000155f0*/ BL          0x00000000000155F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000155f4*/ B           GDC_DrvCommSubmitJob_x15554
    GDC_DrvCommSubmitJob_x155f8:
    /*000155f8*/ MOVW        R3, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5940] 
    /*000155fc*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5758] 
    /*00015600*/ MOVT        R3, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5940] 
    /*00015604*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5758] 
    /*00015608*/ MOVW        R2, #763                    @ 0x2fb 
    /*0001560c*/ LDR         R1, [PC, #276]              @ 0x0000000000015728 
    /*00015610*/ BL          0x0000000000015610          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00015614*/ B           GDC_DrvCommSubmitJob_x154a8
    GDC_DrvCommSubmitJob_x15618:
    /*00015618*/ MOV         R0, R5 
    /*0001561c*/ BL          0x000000000001561C          @ GDC_DrvCommPrepareNodes [R_ARM_CALL: .text+0x14dc0] 
    /*00015620*/ LDR         R0, [R4] 
    /*00015624*/ MOV         R3, #1 
    /*00015628*/ STR         R3, [R5, #60]               @ 0x3c 
    /*0001562c*/ ADD         R0, R0, #128                @ 0x80 
    /*00015630*/ BL          0x0000000000015630          @ GDC_DrvQueryFreeNodeNum [R_ARM_CALL: .text+0x16b00] 
    /*00015634*/ LDR         R3, [R4, #8] 
    /*00015638*/ MOV         R1, R5 
    /*0001563c*/ CMP         R3, R0 
    /*00015640*/ STRHI       R0, [R4, #8] 
    /*00015644*/ LDR         R0, [R4] 
    /*00015648*/ BL          0x0000000000015648          @ GDC_DrvPutJobToWaitList [R_ARM_CALL: .text+0x16f2c] 
    /*0001564c*/ MOVW        R3, #0                      @ gdc_en [R_ARM_MOVW_ABS_NC: .data+0x154] 
    /*00015650*/ MOVT        R3, #0                      @ gdc_en [R_ARM_MOVT_ABS: .data+0x154] 
    /*00015654*/ MOV         R2, #4 
    /*00015658*/ STR         R2, [R5, #20] 
    /*0001565c*/ LDR         R3, [R3] 
    /*00015660*/ CMP         R3, #1 
    /*00015664*/ BEQ         GDC_DrvCommSubmitJob_x156cc
    GDC_DrvCommSubmitJob_x15668:
    /*00015668*/ LDR         R3, [R4] 
    GDC_DrvCommSubmitJob_x1566c:
    /*0001566c*/ MOV         R6, #0 
    /*00015670*/ ADD         R0, R3, #212                @ 0xd4 
    /*00015674*/ STR         R6, [R3, #224]              @ 0xe0 
    /*00015678*/ BL          0x0000000000015678          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0001567c*/ MOV         R0, R6 
    /*00015680*/ ADD         SP, SP, #28 
    /*00015684*/ POP         {R4, R5, R6, R7, PC} 
    GDC_DrvCommSubmitJob_x15688:
    /*00015688*/ MOVW        R3, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x596c] 
    /*0001568c*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5758] 
    /*00015690*/ MOVT        R3, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x596c] 
    /*00015694*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5758] 
    /*00015698*/ MOVW        R2, #779                    @ 0x30b 
    /*0001569c*/ LDR         R1, [PC, #132]              @ 0x0000000000015728 
    /*000156a0*/ BL          0x00000000000156A0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000156a4*/ B           GDC_DrvCommSubmitJob_x154ec
    GDC_DrvCommSubmitJob_x156a8:
    /*000156a8*/ MOVW        R3, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x58fc] 
    /*000156ac*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5758] 
    /*000156b0*/ MOVT        R3, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x58fc] 
    /*000156b4*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5758] 
    /*000156b8*/ MOV         R2, #752                    @ 0x2f0 
    /*000156bc*/ LDR         R1, [PC, #100]              @ 0x0000000000015728 
    /*000156c0*/ BL          0x00000000000156C0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000156c4*/ LDR         R3, [R4] 
    /*000156c8*/ B           GDC_DrvCommSubmitJob_x1547c
    GDC_DrvCommSubmitJob_x156cc:
    /*000156cc*/ LDR         R0, [R4] 
    /*000156d0*/ MOV         R1, #0 
    /*000156d4*/ LDR         R2, [R0, #176]              @ 0xb0 
    /*000156d8*/ BL          0x00000000000156D8          @ GDC_DrvQueryBusyJobNum [R_ARM_CALL: .text+0x17068] 
    /*000156dc*/ LDR         R3, [R4] 
    /*000156e0*/ CMP         R0, #0 
    /*000156e4*/ BNE         GDC_DrvCommSubmitJob_x1566c
    /*000156e8*/ LDR         R2, [R3, #228]              @ 0xe4 
    /*000156ec*/ CMP         R2, #0 
    /*000156f0*/ BNE         GDC_DrvCommSubmitJob_x1566c
    /*000156f4*/ BL          0x00000000000156F4          @ GDC_DrvCommStartWaitlist [R_ARM_CALL: .text+0x14f00] 
    /*000156f8*/ B           GDC_DrvCommSubmitJob_x15668
    GDC_DrvCommSubmitJob_x156fc:
    /*000156fc*/ STR         R2, [SP, #4] 
    /*00015700*/ MOVW        R3, #757                    @ 0x2f5 
    /*00015704*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x590c] 
    /*00015708*/ STR         R3, [SP] 
    /*0001570c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x590c] 
    /*00015710*/ LDR         R3, [PC, #16]               @ 0x0000000000015728 
    /*00015714*/ MOV         R1, #37                     @ 0x25 
    /*00015718*/ MOV         R0, #3 
    /*0001571c*/ BL          0x000000000001571C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00015720*/ MVN         R0, #0 
    /*00015724*/ B           GDC_DrvCommSubmitJob_x155ac
    /*00015728*/ ANDEQ       R0, R0, R4, LSL #28 
FUNC_END GDC_DrvCommSubmitJob


FUNC_BEGIN GDC_DrvCommIntStatistic
    /*0001572c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00015730*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1fc8] 
    /*00015734*/ SUB         SP, SP, #20 
    /*00015738*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1fc8] 
    /*0001573c*/ ADD         LR, SP, #8 
    /*00015740*/ MOVW        R6, #16960                  @ 0x4240 
    /*00015744*/ LDR         IP, [IP] 
    /*00015748*/ MOVT        R6, #15 
    /*0001574c*/ STM         LR, {R0, R1} 
    /*00015750*/ MOV         R1, R0 
    /*00015754*/ STM         SP, {R2, R3} 
    /*00015758*/ MOV         R3, R2 
    /*0001575c*/ LDR         R0, [SP, #4] 
    /*00015760*/ SUB         R3, R3, R1 
    /*00015764*/ LDR         R2, [SP, #12] 
    /*00015768*/ MOVW        R5, #16959                  @ 0x423f 
    /*0001576c*/ LDR         R4, [IP, #368]              @ 0x170 
    /*00015770*/ MOVT        R5, #15 
    /*00015774*/ SUB         R0, R0, R2 
    /*00015778*/ LDR         R7, [IP, #364]              @ 0x16c 
    /*0001577c*/ SUB         R2, R2, R4 
    /*00015780*/ LDR         R4, [IP, #352]              @ 0x160 
    /*00015784*/ MLA         R3, R6, R3, R0 
    /*00015788*/ SUB         R1, R1, R7 
    /*0001578c*/ LDR         R0, [IP, #324]              @ 0x144 
    /*00015790*/ MLA         R1, R6, R1, R2 
    /*00015794*/ CMP         R4, R3 
    /*00015798*/ LDR         R2, [IP, #340]              @ 0x154 
    /*0001579c*/ MOVCC       R4, R3 
    /*000157a0*/ STR         R3, [IP, #348]              @ 0x15c 
    /*000157a4*/ CMP         R1, R5 
    /*000157a8*/ ADD         R2, R3, R2 
    /*000157ac*/ STR         R4, [IP, #352]              @ 0x160 
    /*000157b0*/ ADD         R3, R0, #1 
    /*000157b4*/ STR         R2, [IP, #340]              @ 0x154 
    /*000157b8*/ STR         R3, [IP, #324]              @ 0x144 
    /*000157bc*/ BLS         GDC_DrvCommIntStatistic_x15808
    /*000157c0*/ LDR         R1, [IP, #328]              @ 0x148 
    /*000157c4*/ LDR         R0, [IP, #336]              @ 0x150 
    /*000157c8*/ SUB         R1, R3, R1 
    /*000157cc*/ STR         R1, [IP, #332]              @ 0x14c 
    /*000157d0*/ CMP         R1, R0 
    /*000157d4*/ STRHI       R1, [IP, #336]              @ 0x150 
    /*000157d8*/ LDR         R1, [IP, #344]              @ 0x158 
    /*000157dc*/ LDR         R0, [IP, #360]              @ 0x168 
    /*000157e0*/ SUB         R1, R2, R1 
    /*000157e4*/ STR         R2, [IP, #344]              @ 0x158 
    /*000157e8*/ CMP         R1, R0 
    /*000157ec*/ STR         R1, [IP, #356]              @ 0x164 
    /*000157f0*/ STRHI       R1, [IP, #360]              @ 0x168 
    /*000157f4*/ ADD         R0, IP, #364                @ 0x16c 
    /*000157f8*/ STR         R3, [IP, #328]              @ 0x148 
    /*000157fc*/ MOV         R1, LR 
    /*00015800*/ MOV         R2, #8 
    /*00015804*/ BL          0x0000000000015804          @ osal_memcpy [R_ARM_CALL: +0x0] 
    GDC_DrvCommIntStatistic_x15808:
    /*00015808*/ ADD         SP, SP, #20 
    /*0001580c*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END GDC_DrvCommIntStatistic


FUNC_BEGIN GDC_DrvCommLowDelayInt
    /*00015810*/ PUSH        {R4, R5, R6, LR} 
    /*00015814*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1fc8] 
    /*00015818*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1fc8] 
    /*0001581c*/ ADD         R3, R0, #44                 @ 0x2c 
    /*00015820*/ LDR         R2, [R5] 
    /*00015824*/ LDR         R3, [R2, R3, LSL #2] 
    /*00015828*/ ADD         R0, R3, R0, LSL #1 
    /*0001582c*/ ADD         R0, R0, #5 
    /*00015830*/ LDR         R4, [R2, R0, LSL #3] 
    /*00015834*/ LSL         R6, R0, #3 
    /*00015838*/ ADD         R2, R2, R6 
    /*0001583c*/ CMP         R4, R2 
    /*00015840*/ BEQ         GDC_DrvCommLowDelayInt_x15860
    GDC_DrvCommLowDelayInt_x15844:
    /*00015844*/ LDR         R0, [R4, #40]               @ 0x28 
    /*00015848*/ BL          0x0000000000015848          @ GDC_LowDelayIntCallBack [R_ARM_CALL: .text+0x4a40] 
    /*0001584c*/ LDR         R3, [R5] 
    /*00015850*/ LDR         R4, [R4] 
    /*00015854*/ ADD         R3, R3, R6 
    /*00015858*/ CMP         R4, R3 
    /*0001585c*/ BNE         GDC_DrvCommLowDelayInt_x15844
    GDC_DrvCommLowDelayInt_x15860:
    /*00015860*/ MOV         R0, #0 
    /*00015864*/ POP         {R4, R5, R6, PC} 
FUNC_END GDC_DrvCommLowDelayInt


FUNC_BEGIN GDC_DrvCommListInt
    /*00015868*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001586c*/ SUB         SP, SP, #36                 @ 0x24 
    /*00015870*/ MOV         R4, R1 
    /*00015874*/ MOVW        R7, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1fc8] 
    /*00015878*/ STR         R0, [SP] 
    /*0001587c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00015880*/ STR         R1, [SP, #12] 
    /*00015884*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00015888*/ ADD         R1, SP, #28 
    /*0001588c*/ MOVT        R7, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1fc8] 
    /*00015890*/ BL          0x0000000000015890          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00015894*/ BIC         R3, R4, #4 
    /*00015898*/ CMP         R3, #2 
    /*0001589c*/ LDR         R3, [R7] 
    /*000158a0*/ LDREQ       R2, [R3, #292]              @ 0x124 
    /*000158a4*/ LDRNE       R2, [R3, #296]              @ 0x128 
    /*000158a8*/ ADDEQ       R2, R2, #1 
    /*000158ac*/ ADDNE       R2, R2, #1 
    /*000158b0*/ STREQ       R2, [R3, #292]              @ 0x124 
    /*000158b4*/ STRNE       R2, [R3, #296]              @ 0x128 
    /*000158b8*/ LDR         R2, [SP] 
    /*000158bc*/ ADD         R1, R3, R2, LSL #2 
    /*000158c0*/ LSL         R2, R2, #1 
    /*000158c4*/ ADD         FP, R2, #5 
    /*000158c8*/ STR         R2, [SP, #20] 
    /*000158cc*/ MOV         IP, R2 
    /*000158d0*/ LDR         R2, [R1, #176]              @ 0xb0 
    /*000158d4*/ CMP         R2, #0 
    /*000158d8*/ MOVNE       R2, #1 
    /*000158dc*/ MOVEQ       R2, #0 
    /*000158e0*/ MOV         LR, R2 
    /*000158e4*/ STR         R2, [SP, #4] 
    /*000158e8*/ MOV         R2, IP 
    /*000158ec*/ ADD         R2, R2, LR 
    /*000158f0*/ ADD         IP, LR, FP 
    /*000158f4*/ ADD         R2, R2, #5 
    /*000158f8*/ MOVEQ       R0, #1 
    /*000158fc*/ MOVNE       R0, #0 
    /*00015900*/ STR         R0, [R1, #176]              @ 0xb0 
    /*00015904*/ LSL         R1, IP, #3 
    /*00015908*/ LDR         R9, [R3, R2, LSL #3] 
    /*0001590c*/ ADD         R2, R3, R1 
    /*00015910*/ STR         IP, [SP, #16] 
    /*00015914*/ CMP         R9, R2 
    /*00015918*/ STR         R1, [SP, #8] 
    /*0001591c*/ LDR         FP, [R9] 
    /*00015920*/ BEQ         GDC_DrvCommListInt_x159ac
    GDC_DrvCommListInt_x15924:
    /*00015924*/ LDR         R0, [R9, #40]               @ 0x28 
    /*00015928*/ BL          0x0000000000015928          @ GDC_GetHWEndTime [R_ARM_CALL: .text+0x4294] 
    /*0001592c*/ LDR         R6, [R9, #12]! 
    /*00015930*/ CMP         R6, R9 
    /*00015934*/ LDR         R8, [R6] 
    /*00015938*/ BEQ         GDC_DrvCommListInt_x1598c
    GDC_DrvCommListInt_x1593c:
    /*0001593c*/ MOV         SL, R6 
    /*00015940*/ LDR         R5, [SL, #8]! 
    /*00015944*/ CMP         R5, SL 
    /*00015948*/ LDR         R4, [R5] 
    /*0001594c*/ BEQ         GDC_DrvCommListInt_x1597c
    GDC_DrvCommListInt_x15950:
    /*00015950*/ MOV         R1, R5 
    /*00015954*/ MOV         R0, R6 
    /*00015958*/ BL          0x0000000000015958          @ GDC_DrvGetNodeFromTask [R_ARM_CALL: .text+0x16bcc] 
    /*0001595c*/ LDR         R0, [R7] 
    /*00015960*/ MOV         R1, R5 
    /*00015964*/ MOV         R5, R4 
    /*00015968*/ ADD         R0, R0, #128                @ 0x80 
    /*0001596c*/ BL          0x000000000001596C          @ GDC_DrvPutNodeToFreeList [R_ARM_CALL: .text+0x16adc] 
    /*00015970*/ CMP         R4, SL 
    /*00015974*/ LDR         R4, [R4] 
    /*00015978*/ BNE         GDC_DrvCommListInt_x15950
    GDC_DrvCommListInt_x1597c:
    /*0001597c*/ CMP         R8, R9 
    /*00015980*/ MOV         R6, R8 
    /*00015984*/ LDR         R8, [R8] 
    /*00015988*/ BNE         GDC_DrvCommListInt_x1593c
    GDC_DrvCommListInt_x1598c:
    /*0001598c*/ LDR         R3, [R7] 
    /*00015990*/ MOV         R1, FP 
    /*00015994*/ LDR         R2, [SP, #8] 
    /*00015998*/ MOV         R9, FP 
    /*0001599c*/ LDR         FP, [FP] 
    /*000159a0*/ ADD         R2, R3, R2 
    /*000159a4*/ CMP         R1, R2 
    /*000159a8*/ BNE         GDC_DrvCommListInt_x15924
    GDC_DrvCommListInt_x159ac:
    /*000159ac*/ LDR         R3, [R3, #228]              @ 0xe4 
    /*000159b0*/ CMP         R3, #1 
    /*000159b4*/ BEQ         GDC_DrvCommListInt_x159c0
    /*000159b8*/ LDR         R0, [SP] 
    /*000159bc*/ BL          0x00000000000159BC          @ GDC_DrvCommStartWaitlist [R_ARM_CALL: .text+0x14f00] 
    GDC_DrvCommListInt_x159c0:
    /*000159c0*/ ADD         R1, SP, #28 
    /*000159c4*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000159c8*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000159cc*/ BL          0x00000000000159CC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000159d0*/ LDR         R3, [SP, #20] 
    /*000159d4*/ LDR         R2, [SP, #4] 
    /*000159d8*/ LDR         R1, [R7] 
    /*000159dc*/ ADD         R2, R3, R2 
    /*000159e0*/ LDR         R3, [SP, #8] 
    /*000159e4*/ ADD         R2, R2, #5 
    /*000159e8*/ ADD         R3, R1, R3 
    /*000159ec*/ LDR         R5, [R1, R2, LSL #3] 
    /*000159f0*/ CMP         R5, R3 
    /*000159f4*/ LDR         R8, [R5] 
    /*000159f8*/ BEQ         GDC_DrvCommListInt_x15abc
    /*000159fc*/ LDR         R3, [SP, #16] 
    /*00015a00*/ MOVW        R9, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00015a04*/ MOVT        R9, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00015a08*/ LSL         SL, R3, #3 
    GDC_DrvCommListInt_x15a0c:
    /*00015a0c*/ ADD         R1, SP, #28 
    /*00015a10*/ MOV         R0, R9 
    /*00015a14*/ BL          0x0000000000015A14          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00015a18*/ MOV         R6, R5 
    /*00015a1c*/ LDM         SP, {R2, R3} 
    /*00015a20*/ MOV         R1, R5 
    /*00015a24*/ LDR         R0, [R7] 
    /*00015a28*/ BL          0x0000000000015A28          @ GDC_DrvGetJobFromBusyList [R_ARM_CALL: .text+0x16f74] 
    /*00015a2c*/ LDR         R4, [R6, #12]! 
    /*00015a30*/ CMP         R4, R6 
    /*00015a34*/ LDR         R3, [R4] 
    /*00015a38*/ MOVNE       FP, R3 
    /*00015a3c*/ BEQ         GDC_DrvCommListInt_x15a6c
    GDC_DrvCommListInt_x15a40:
    /*00015a40*/ MOV         R1, R4 
    /*00015a44*/ MOV         R0, R5 
    /*00015a48*/ BL          0x0000000000015A48          @ GDC_DrvGetTaskFromJob [R_ARM_CALL: .text+0x16d10] 
    /*00015a4c*/ LDR         R0, [R7] 
    /*00015a50*/ MOV         R1, R4 
    /*00015a54*/ MOV         R4, FP 
    /*00015a58*/ ADD         R0, R0, #108                @ 0x6c 
    /*00015a5c*/ BL          0x0000000000015A5C          @ GDC_DrvPutTaskToFreeList [R_ARM_CALL: .text+0x16cec] 
    /*00015a60*/ CMP         FP, R6 
    /*00015a64*/ LDR         FP, [FP] 
    /*00015a68*/ BNE         GDC_DrvCommListInt_x15a40
    GDC_DrvCommListInt_x15a6c:
    /*00015a6c*/ LDR         R4, [R5, #40]               @ 0x28 
    /*00015a70*/ LDR         R1, [R7] 
    /*00015a74*/ MOV         R0, R4 
    /*00015a78*/ ADD         R1, R1, #24 
    /*00015a7c*/ BL          0x0000000000015A7C          @ GDC_DRV_SetProcOkState [R_ARM_CALL: .text+0x19288] 
    /*00015a80*/ MOV         R1, R5 
    /*00015a84*/ LDR         R0, [R7] 
    /*00015a88*/ MOV         R5, R8 
    /*00015a8c*/ BL          0x0000000000015A8C          @ GDC_DrvPutJobToFreeList [R_ARM_CALL: .text+0x16e5c] 
    /*00015a90*/ ADD         R1, SP, #28 
    /*00015a94*/ MOV         R0, R9 
    /*00015a98*/ BL          0x0000000000015A98          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015a9c*/ LDR         R1, [SP, #12] 
    /*00015aa0*/ MOV         R0, R4 
    /*00015aa4*/ BL          0x0000000000015AA4          @ GDC_IntCallBack [R_ARM_CALL: .text+0x4b50] 
    /*00015aa8*/ LDR         R3, [R7] 
    /*00015aac*/ LDR         R8, [R8] 
    /*00015ab0*/ ADD         R3, R3, SL 
    /*00015ab4*/ CMP         R5, R3 
    /*00015ab8*/ BNE         GDC_DrvCommListInt_x15a0c
    GDC_DrvCommListInt_x15abc:
    /*00015abc*/ ADD         R1, SP, #28 
    /*00015ac0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00015ac4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00015ac8*/ BL          0x0000000000015AC8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00015acc*/ LDR         R1, [SP] 
    /*00015ad0*/ LDR         R0, [R7] 
    /*00015ad4*/ ADD         R3, R1, #44                 @ 0x2c 
    /*00015ad8*/ LDR         R2, [R0, R3, LSL #2] 
    /*00015adc*/ BL          0x0000000000015ADC          @ GDC_DrvQueryBusyJobNum [R_ARM_CALL: .text+0x17068] 
    /*00015ae0*/ SUBS        R2, R0, #0 
    /*00015ae4*/ BNE         GDC_DrvCommListInt_x15b00
    /*00015ae8*/ LDR         R1, [SP] 
    /*00015aec*/ LDR         R3, [R7] 
    /*00015af0*/ ADD         SL, R1, #54                 @ 0x36 
    /*00015af4*/ ADD         R0, R3, #212                @ 0xd4 
    /*00015af8*/ STR         R2, [R3, SL, LSL #2] 
    /*00015afc*/ BL          0x0000000000015AFC          @ osal_wakeup [R_ARM_CALL: +0x0] 
    GDC_DrvCommListInt_x15b00:
    /*00015b00*/ ADD         R1, SP, #28 
    /*00015b04*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00015b08*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00015b0c*/ BL          0x0000000000015B0C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015b10*/ MOV         R0, #0 
    /*00015b14*/ ADD         SP, SP, #36                 @ 0x24 
    /*00015b18*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END GDC_DrvCommListInt


FUNC_BEGIN GDC_DrvCommIrqProc
    /*00015b1c*/ MOVW        R3, #0                      @ nnie_irq [R_ARM_MOVW_ABS_NC: .data+0x15c] 
    /*00015b20*/ MOVT        R3, #0                      @ nnie_irq [R_ARM_MOVT_ABS: .data+0x15c] 
    /*00015b24*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00015b28*/ SUB         SP, SP, #48                 @ 0x30 
    /*00015b2c*/ LDR         R3, [R3] 
    /*00015b30*/ MOV         R5, #0 
    /*00015b34*/ STR         R5, [SP, #20] 
    /*00015b38*/ CMP         R3, R0 
    /*00015b3c*/ BEQ         GDC_DrvCommIrqProc_x15da0
    /*00015b40*/ ADD         R7, SP, #24 
    /*00015b44*/ MOV         R4, R0 
    /*00015b48*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1fc8] 
    /*00015b4c*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1fc8] 
    /*00015b50*/ MOV         R0, R7 
    /*00015b54*/ BL          0x0000000000015B54          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*00015b58*/ ADD         R1, SP, #20 
    /*00015b5c*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00015b60*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00015b64*/ BL          0x0000000000015B64          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00015b68*/ LDR         R3, [R5] 
    /*00015b6c*/ ADD         R1, SP, #20 
    /*00015b70*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00015b74*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00015b78*/ LDR         R3, [R3, #188]              @ 0xbc 
    /*00015b7c*/ SUBS        R4, R3, R4 
    /*00015b80*/ MOVNE       R4, #1 
    /*00015b84*/ BL          0x0000000000015B84          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015b88*/ ADD         R1, SP, #16 
    /*00015b8c*/ MOV         R0, R4 
    /*00015b90*/ BL          0x0000000000015B90          @ GDC_HAL_GetIntStatus [R_ARM_CALL: .text+0x19448] 
    /*00015b94*/ LDR         R0, [SP, #16] 
    /*00015b98*/ BL          0x0000000000015B98          @ GDC_DRV_IsWrongInt [R_ARM_CALL: .text+0x187f0] 
    /*00015b9c*/ LSL         R8, R4, #2 
    /*00015ba0*/ CMP         R0, #48                     @ 0x30 
    /*00015ba4*/ MOV         R1, R0 
    /*00015ba8*/ MOV         R6, R0 
    /*00015bac*/ MOV         R0, R4 
    /*00015bb0*/ LDREQ       R2, [R5] 
    /*00015bb4*/ LDREQ       R3, [R2, #304]              @ 0x130 
    /*00015bb8*/ ADDEQ       R3, R3, #1 
    /*00015bbc*/ STREQ       R3, [R2, #304]              @ 0x130 
    /*00015bc0*/ BL          0x0000000000015BC0          @ GDC_HAL_ClrIntStatus [R_ARM_CALL: .text+0x19460] 
    /*00015bc4*/ ADD         R1, SP, #20 
    /*00015bc8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00015bcc*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00015bd0*/ BL          0x0000000000015BD0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00015bd4*/ LDR         R3, [R5] 
    /*00015bd8*/ ADD         R1, R4, #51                 @ 0x33 
    /*00015bdc*/ MOV         R0, R4 
    /*00015be0*/ ADD         R1, R3, R1, LSL #2 
    /*00015be4*/ BL          0x0000000000015BE4          @ GDC_HAL_GetNodeID [R_ARM_CALL: .text+0x19480] 
    /*00015be8*/ LDR         R3, [R5] 
    /*00015bec*/ ADD         R3, R3, R8 
    /*00015bf0*/ LDR         R2, [R3, #196]              @ 0xc4 
    /*00015bf4*/ LDR         R3, [R3, #204]              @ 0xcc 
    /*00015bf8*/ CMP         R2, R3 
    /*00015bfc*/ BEQ         GDC_DrvCommIrqProc_x15c40
    /*00015c00*/ STR         R3, [SP, #12] 
    /*00015c04*/ MOV         R1, #37                     @ 0x25 
    /*00015c08*/ MOVW        R3, #1182                   @ 0x49e 
    /*00015c0c*/ STR         R2, [SP, #8] 
    /*00015c10*/ STR         R3, [SP] 
    /*00015c14*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5a24] 
    /*00015c18*/ LDR         R3, [PC, #484]              @ 0x0000000000015e04 
    /*00015c1c*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5a24] 
    /*00015c20*/ STR         R4, [SP, #4] 
    /*00015c24*/ MOV         R0, #3 
    /*00015c28*/ BL          0x0000000000015C28          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00015c2c*/ LDR         R3, [R5] 
    /*00015c30*/ ADD         R8, R3, R8 
    /*00015c34*/ LDR         R3, [R8, #316]              @ 0x13c 
    /*00015c38*/ ADD         R3, R3, #1 
    /*00015c3c*/ STR         R3, [R8, #316]              @ 0x13c 
    GDC_DrvCommIrqProc_x15c40:
    /*00015c40*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00015c44*/ ADD         R1, SP, #20 
    /*00015c48*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00015c4c*/ BL          0x0000000000015C4C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015c50*/ CMP         R6, #8 
    /*00015c54*/ CMPNE       R6, #2 
    /*00015c58*/ BEQ         GDC_DrvCommIrqProc_x15d8c
    /*00015c5c*/ CMP         R6, #6 
    /*00015c60*/ BEQ         GDC_DrvCommIrqProc_x15c9c
    /*00015c64*/ CMP         R6, #4 
    /*00015c68*/ STRNE       R6, [SP, #8] 
    /*00015c6c*/ MOVWNE      R3, #1210                   @ 0x4ba 
    /*00015c70*/ BEQ         GDC_DrvCommIrqProc_x15df8
    GDC_DrvCommIrqProc_x15c74:
    /*00015c74*/ STR         R3, [SP] 
    /*00015c78*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5a70] 
    /*00015c7c*/ STR         R4, [SP, #4] 
    /*00015c80*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5a70] 
    /*00015c84*/ LDR         R3, [PC, #376]              @ 0x0000000000015e04 
    /*00015c88*/ MOV         R1, #37                     @ 0x25 
    /*00015c8c*/ MOV         R0, #3 
    /*00015c90*/ BL          0x0000000000015C90          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00015c94*/ MOV         R0, R4 
    /*00015c98*/ BL          0x0000000000015C98          @ GDC_DRV_ClkDisable [R_ARM_CALL: .text+0x189c0] 
    GDC_DrvCommIrqProc_x15c9c:
    /*00015c9c*/ MOV         R1, R6 
    /*00015ca0*/ MOV         R0, R4 
    /*00015ca4*/ BL          0x0000000000015CA4          @ GDC_DrvCommListInt [R_ARM_CALL: .text+0x15868] 
    GDC_DrvCommIrqProc_x15ca8:
    /*00015ca8*/ ADD         R0, SP, #32 
    /*00015cac*/ ADD         R4, SP, #40                 @ 0x28 
    /*00015cb0*/ BL          0x0000000000015CB0          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*00015cb4*/ LDM         R7, {R0, R1} 
    /*00015cb8*/ LDR         R3, [R5] 
    /*00015cbc*/ MOVW        IP, #16960                  @ 0x4240 
    /*00015cc0*/ LDR         R2, [SP, #32] 
    /*00015cc4*/ MOVT        IP, #15 
    /*00015cc8*/ STM         R4, {R0, R1} 
    /*00015ccc*/ MOV         R1, R0 
    /*00015cd0*/ LDR         LR, [SP, #36]               @ 0x24 
    /*00015cd4*/ SUB         R2, R2, R1 
    /*00015cd8*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*00015cdc*/ MOVW        R5, #16959                  @ 0x423f 
    /*00015ce0*/ LDR         R7, [R3, #364]              @ 0x16c 
    /*00015ce4*/ MOVT        R5, #15 
    /*00015ce8*/ SUB         LR, LR, R0 
    /*00015cec*/ LDR         R6, [R3, #368]              @ 0x170 
    /*00015cf0*/ SUB         R1, R1, R7 
    /*00015cf4*/ MLA         R2, IP, R2, LR 
    /*00015cf8*/ SUB         R0, R0, R6 
    /*00015cfc*/ LDR         LR, [R3, #352]              @ 0x160 
    /*00015d00*/ MLA         R1, IP, R1, R0 
    /*00015d04*/ CMP         LR, R2 
    /*00015d08*/ LDR         R0, [R3, #340]              @ 0x154 
    /*00015d0c*/ MOVCC       LR, R2 
    /*00015d10*/ LDR         IP, [R3, #324]              @ 0x144 
    /*00015d14*/ CMP         R1, R5 
    /*00015d18*/ ADD         R0, R2, R0 
    /*00015d1c*/ STR         R2, [R3, #348]              @ 0x15c 
    /*00015d20*/ ADD         R2, IP, #1 
    /*00015d24*/ STR         R0, [R3, #340]              @ 0x154 
    /*00015d28*/ MOVLS       R0, #1 
    /*00015d2c*/ STR         LR, [R3, #352]              @ 0x160 
    /*00015d30*/ STR         R2, [R3, #324]              @ 0x144 
    /*00015d34*/ BLS         GDC_DrvCommIrqProc_x15d84
    /*00015d38*/ LDR         R1, [R3, #328]              @ 0x148 
    /*00015d3c*/ LDR         IP, [R3, #336]              @ 0x150 
    /*00015d40*/ SUB         R1, R2, R1 
    /*00015d44*/ STR         R1, [R3, #332]              @ 0x14c 
    /*00015d48*/ CMP         R1, IP 
    /*00015d4c*/ STRHI       R1, [R3, #336]              @ 0x150 
    /*00015d50*/ LDR         R1, [R3, #344]              @ 0x158 
    /*00015d54*/ LDR         IP, [R3, #360]              @ 0x168 
    /*00015d58*/ SUB         R1, R0, R1 
    /*00015d5c*/ STR         R2, [R3, #328]              @ 0x148 
    /*00015d60*/ CMP         R1, IP 
    /*00015d64*/ STR         R1, [R3, #356]              @ 0x164 
    /*00015d68*/ STRHI       R1, [R3, #360]              @ 0x168 
    /*00015d6c*/ MOV         R2, #8 
    /*00015d70*/ STR         R0, [R3, #344]              @ 0x158 
    /*00015d74*/ MOV         R1, R4 
    /*00015d78*/ ADD         R0, R3, #364                @ 0x16c 
    /*00015d7c*/ BL          0x0000000000015D7C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00015d80*/ MOV         R0, #1 
    GDC_DrvCommIrqProc_x15d84:
    /*00015d84*/ ADD         SP, SP, #48                 @ 0x30 
    /*00015d88*/ POP         {R4, R5, R6, R7, R8, PC} 
    GDC_DrvCommIrqProc_x15d8c:
    /*00015d8c*/ CMP         R6, #8 
    /*00015d90*/ STREQ       R6, [SP, #8] 
    /*00015d94*/ MOVWEQ      R3, #1193                   @ 0x4a9 
    /*00015d98*/ BNE         GDC_DrvCommIrqProc_x15c9c
    /*00015d9c*/ B           GDC_DrvCommIrqProc_x15c74
    GDC_DrvCommIrqProc_x15da0:
    /*00015da0*/ ADD         R0, SP, #20 
    /*00015da4*/ BL          0x0000000000015DA4          @ GDC_DRV_RamSpinLock [R_ARM_CALL: .text+0x19260] 
    /*00015da8*/ MOV         R1, #2 
    /*00015dac*/ MOV         R0, R5 
    /*00015db0*/ BL          0x0000000000015DB0          @ GDC_DRV_SetRamStatus [R_ARM_CALL: .text+0x1915c] 
    /*00015db4*/ MOV         R0, #2 
    /*00015db8*/ BL          0x0000000000015DB8          @ GDC_DRV_SetRamUserSafety [R_ARM_CALL: .text+0x19214] 
    /*00015dbc*/ ADD         R0, SP, #20 
    /*00015dc0*/ BL          0x0000000000015DC0          @ GDC_DRV_RamSpinUnlock [R_ARM_CALL: .text+0x19270] 
    /*00015dc4*/ ADD         R1, SP, #20 
    /*00015dc8*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00015dcc*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00015dd0*/ BL          0x0000000000015DD0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00015dd4*/ MOV         R0, R5 
    /*00015dd8*/ BL          0x0000000000015DD8          @ GDC_DrvCommStartWaitlist [R_ARM_CALL: .text+0x14f00] 
    /*00015ddc*/ ADD         R1, SP, #20 
    /*00015de0*/ MOVW        R0, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*00015de4*/ MOVT        R0, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*00015de8*/ BL          0x0000000000015DE8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00015dec*/ MOV         R0, R5 
    /*00015df0*/ ADD         SP, SP, #48                 @ 0x30 
    /*00015df4*/ POP         {R4, R5, R6, R7, R8, PC} 
    GDC_DrvCommIrqProc_x15df8:
    /*00015df8*/ MOV         R0, R4 
    /*00015dfc*/ BL          0x0000000000015DFC          @ GDC_DrvCommLowDelayInt [R_ARM_CALL: .text+0x15810] 
    /*00015e00*/ B           GDC_DrvCommIrqProc_x15ca8
    /*00015e04*/ ANDEQ       R0, R0, IP, LSL LR 
FUNC_END GDC_DrvCommIrqProc


FUNC_BEGIN GDC_DrvCommOpen
    /*00015e08*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00015e0c*/ MOVW        R5, #0                      @ g_stGdcCallerCtx [R_ARM_MOVW_ABS_NC: .bss+0xc] 
    /*00015e10*/ MOVT        R5, #0                      @ g_stGdcCallerCtx [R_ARM_MOVT_ABS: .bss+0xc] 
    /*00015e14*/ SUB         SP, SP, #12 
    /*00015e18*/ MOV         R8, R0 
    /*00015e1c*/ MOV         R0, #376                    @ 0x178 
    /*00015e20*/ MOV         R7, R1 
    /*00015e24*/ MOV         R6, R2 
    /*00015e28*/ MOV         R9, R3 
    /*00015e2c*/ LDR         SL, [R5, #48]               @ 0x30 
    /*00015e30*/ BL          0x0000000000015E30          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00015e34*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1fc8] 
    /*00015e38*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1fc8] 
    /*00015e3c*/ CMP         R0, #0 
    /*00015e40*/ STR         R0, [R4] 
    /*00015e44*/ BEQ         GDC_DrvCommOpen_x1607c
    /*00015e48*/ LSL         SL, SL, #2 
    /*00015e4c*/ MOV         R2, #376                    @ 0x178 
    /*00015e50*/ MOV         R1, #0 
    /*00015e54*/ BL          0x0000000000015E54          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00015e58*/ MOV         R0, SL 
    /*00015e5c*/ LDR         FP, [R4] 
    /*00015e60*/ BL          0x0000000000015E60          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00015e64*/ LDR         R3, [R4] 
    /*00015e68*/ STR         R0, [FP, #236]              @ 0xec 
    /*00015e6c*/ LDR         R0, [R3, #236]              @ 0xec 
    /*00015e70*/ CMP         R0, #0 
    /*00015e74*/ BEQ         GDC_DrvCommOpen_x16058
    /*00015e78*/ MOV         R2, SL 
    /*00015e7c*/ MOV         R1, #0 
    /*00015e80*/ BL          0x0000000000015E80          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00015e84*/ LDR         R0, [R4] 
    /*00015e88*/ ADD         R2, R5, #32 
    /*00015e8c*/ ADD         R3, R0, #236                @ 0xec 
    /*00015e90*/ ADD         LR, R0, #248                @ 0xf8 
    GDC_DrvCommOpen_x15e94:
    /*00015e94*/ LDR         IP, [R2], #4 
    /*00015e98*/ LDR         R1, [R3] 
    /*00015e9c*/ ADD         R1, R1, IP, LSL #2 
    /*00015ea0*/ STR         R1, [R3, #4]! 
    /*00015ea4*/ CMP         R3, LR 
    /*00015ea8*/ BNE         GDC_DrvCommOpen_x15e94
    /*00015eac*/ STR         R6, [SP, #4] 
    /*00015eb0*/ MOV         R3, R8 
    /*00015eb4*/ STR         R7, [SP] 
    /*00015eb8*/ ADD         R2, R0, #128                @ 0x80 
    /*00015ebc*/ ADD         R1, R0, #108                @ 0x6c 
    /*00015ec0*/ BL          0x0000000000015EC0          @ GDC_DrvInitBuf [R_ARM_CALL: .text+0x164e4] 
    /*00015ec4*/ CMP         R0, #0 
    /*00015ec8*/ BNE         GDC_DrvCommOpen_x15fb4
    /*00015ecc*/ MOVW        R2, #0                      @ gdc_irq [R_ARM_MOVW_ABS_NC: .data+0x158] 
    /*00015ed0*/ MOVT        R2, #0                      @ gdc_irq [R_ARM_MOVT_ABS: .data+0x158] 
    /*00015ed4*/ LDR         R3, [R4] 
    /*00015ed8*/ LDR         R2, [R2] 
    /*00015edc*/ STR         R8, [R3, #160]              @ 0xa0 
    /*00015ee0*/ STR         R2, [R3, #188]              @ 0xbc 
    /*00015ee4*/ STR         R7, [R3, #164]              @ 0xa4 
    /*00015ee8*/ STR         R6, [R3, #168]              @ 0xa8 
    /*00015eec*/ STR         R9, [R3, #172]              @ 0xac 
    /*00015ef0*/ STR         R0, [R3, #184]              @ 0xb8 
    /*00015ef4*/ STR         R0, [R3, #176]              @ 0xb0 
    /*00015ef8*/ STR         R0, [R3, #180]              @ 0xb4 
    /*00015efc*/ BL          0x0000000000015EFC          @ GDC_HAL_Open [R_ARM_CALL: .text+0x1929c] 
    /*00015f00*/ CMP         R0, #0 
    /*00015f04*/ BEQ         GDC_DrvCommOpen_x15fdc
    /*00015f08*/ MOVW        R3, #1316                   @ 0x524 
    /*00015f0c*/ STR         R0, [SP, #4] 
    /*00015f10*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b70] 
    /*00015f14*/ STR         R3, [SP] 
    /*00015f18*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b70] 
    /*00015f1c*/ LDR         R3, [PC, #384]              @ 0x00000000000160a4 
    /*00015f20*/ MOV         R1, #37                     @ 0x25 
    /*00015f24*/ MOV         R0, #3 
    /*00015f28*/ BL          0x0000000000015F28          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_DrvCommOpen_x15f2c:
    /*00015f2c*/ LDR         R0, [R4] 
    /*00015f30*/ CMP         R0, #0 
    /*00015f34*/ MVNEQ       R5, #0 
    /*00015f38*/ BEQ         GDC_DrvCommOpen_x15fa8
    /*00015f3c*/ ADD         R0, R0, #212                @ 0xd4 
    /*00015f40*/ BL          0x0000000000015F40          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*00015f44*/ LDR         R0, [R4] 
    /*00015f48*/ ADD         R2, R0, #128                @ 0x80 
    /*00015f4c*/ ADD         R1, R0, #108                @ 0x6c 
    /*00015f50*/ BL          0x0000000000015F50          @ GDC_DrvDeInitBuf [R_ARM_CALL: .text+0x169d4] 
    /*00015f54*/ LDR         R3, [R4] 
    /*00015f58*/ ADD         R1, R3, #256                @ 0x100 
    /*00015f5c*/ LDR         R2, [R3, #264]              @ 0x108 
    /*00015f60*/ LDRD        R0, [R1] 
    /*00015f64*/ BL          0x0000000000015F64          @ CMPI_MmzFree [R_ARM_CALL: +0x0] 
    /*00015f68*/ LDR         R0, [R4] 
    /*00015f6c*/ LDR         R3, [R0, #236]              @ 0xec 
    /*00015f70*/ CMP         R3, #0 
    /*00015f74*/ BEQ         GDC_DrvCommOpen_x15f98
    /*00015f78*/ MOV         R0, R3 
    /*00015f7c*/ BL          0x0000000000015F7C          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00015f80*/ LDR         R0, [R4] 
    /*00015f84*/ MOV         R2, #16 
    /*00015f88*/ MOV         R1, #0 
    /*00015f8c*/ ADD         R0, R0, #236                @ 0xec 
    /*00015f90*/ BL          0x0000000000015F90          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00015f94*/ LDR         R0, [R4] 
    GDC_DrvCommOpen_x15f98:
    /*00015f98*/ MVN         R5, #0 
    /*00015f9c*/ BL          0x0000000000015F9C          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00015fa0*/ MOV         R3, #0 
    /*00015fa4*/ STR         R3, [R4] 
    GDC_DrvCommOpen_x15fa8:
    /*00015fa8*/ MOV         R0, R5 
    /*00015fac*/ ADD         SP, SP, #12 
    /*00015fb0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_DrvCommOpen_x15fb4:
    /*00015fb4*/ STR         R0, [SP, #4] 
    /*00015fb8*/ MOVW        R3, #1292                   @ 0x50c 
    /*00015fbc*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b3c] 
    /*00015fc0*/ STR         R3, [SP] 
    /*00015fc4*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b3c] 
    /*00015fc8*/ LDR         R3, [PC, #212]              @ 0x00000000000160a4 
    /*00015fcc*/ MOV         R1, #37                     @ 0x25 
    /*00015fd0*/ MOV         R0, #3 
    /*00015fd4*/ BL          0x0000000000015FD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00015fd8*/ B           GDC_DrvCommOpen_x15f2c
    GDC_DrvCommOpen_x15fdc:
    /*00015fdc*/ BL          0x0000000000015FDC          @ GDC_DRV_AbolishReset [R_ARM_CALL: .text+0x18b2c] 
    /*00015fe0*/ MOVW        R0, #0                      @ GDC_DrvCommIrqProc [R_ARM_MOVW_ABS_NC: .text+0x15b1c] 
    /*00015fe4*/ MOVT        R0, #0                      @ GDC_DrvCommIrqProc [R_ARM_MOVT_ABS: .text+0x15b1c] 
    /*00015fe8*/ BL          0x0000000000015FE8          @ GDC_DRV_RequestIrq [R_ARM_CALL: .text+0x170a0] 
    /*00015fec*/ CMP         R0, #0 
    /*00015ff0*/ BNE         GDC_DrvCommOpen_x15f2c
    /*00015ff4*/ LDR         R0, [R4] 
    /*00015ff8*/ ADD         R1, R0, #280                @ 0x118 
    /*00015ffc*/ ADD         R0, R0, #272                @ 0x110 
    /*00016000*/ BL          0x0000000000016000          @ GDC_DRV_MallocInterPoleCoefAddr [R_ARM_CALL: .text+0x17178] 
    /*00016004*/ SUBS        R5, R0, #0 
    /*00016008*/ BNE         GDC_DrvCommOpen_x15f2c
    /*0001600c*/ BL          0x000000000001600C          @ GDC_DRV_PerformaceLimit [R_ARM_CALL: .text+0x17280] 
    /*00016010*/ LDR         R0, [R4] 
    /*00016014*/ ADD         R0, R0, #212                @ 0xd4 
    /*00016018*/ BL          0x0000000000016018          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*0001601c*/ LDR         R3, [R4] 
    /*00016020*/ MOV         R2, #20 
    /*00016024*/ MOV         R1, R5 
    /*00016028*/ LDR         R0, [PC, #120]              @ 0x00000000000160a8 
    /*0001602c*/ STR         R5, [R3, #216]              @ 0xd8 
    /*00016030*/ STR         R5, [R3, #220]              @ 0xdc 
    /*00016034*/ STR         R5, [R3, #224]              @ 0xe0 
    /*00016038*/ STR         R5, [R3, #228]              @ 0xe4 
    /*0001603c*/ STR         R5, [R4, #24] 
    /*00016040*/ BL          0x0000000000016040          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00016044*/ MOVW        R3, #0                      @ max_gdc_node [R_ARM_MOVW_ABS_NC: .data+0x8] 
    /*00016048*/ MOVT        R3, #0                      @ max_gdc_node [R_ARM_MOVT_ABS: .data+0x8] 
    /*0001604c*/ LDR         R3, [R3] 
    /*00016050*/ STR         R3, [R4, #8] 
    /*00016054*/ B           GDC_DrvCommOpen_x15fa8
    GDC_DrvCommOpen_x16058:
    /*00016058*/ MOVW        R3, #1272                   @ 0x4f8 
    /*0001605c*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5af4] 
    /*00016060*/ STR         R3, [SP] 
    /*00016064*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5af4] 
    /*00016068*/ LDR         R3, [PC, #52]               @ 0x00000000000160a4 
    /*0001606c*/ MOV         R1, #37                     @ 0x25 
    /*00016070*/ MOV         R0, #3 
    /*00016074*/ BL          0x0000000000016074          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016078*/ B           GDC_DrvCommOpen_x15f2c
    GDC_DrvCommOpen_x1607c:
    /*0001607c*/ MOVW        R3, #1257                   @ 0x4e9 
    /*00016080*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5ab4] 
    /*00016084*/ STR         R3, [SP] 
    /*00016088*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5ab4] 
    /*0001608c*/ LDR         R3, [PC, #16]               @ 0x00000000000160a4 
    /*00016090*/ MOV         R1, #37                     @ 0x25 
    /*00016094*/ MOV         R0, #3 
    /*00016098*/ MVN         R5, #0 
    /*0001609c*/ BL          0x000000000001609C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000160a0*/ B           GDC_DrvCommOpen_x15fa8
    /*000160a4*/ ANDEQ       R0, R0, R0, LSR LR 
    /*000160a8*/ ANDEQ       R1, R0, IP, ASR #31 
FUNC_END GDC_DrvCommOpen


FUNC_BEGIN GDC_DrvCommClose
    /*000160ac*/ PUSH        {R4, LR} 
    /*000160b0*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1fc8] 
    /*000160b4*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1fc8] 
    /*000160b8*/ LDR         R0, [R4] 
    /*000160bc*/ CMP         R0, #0 
    /*000160c0*/ BEQ         GDC_DrvCommClose_x1612c
    /*000160c4*/ ADD         R0, R0, #212                @ 0xd4 
    /*000160c8*/ BL          0x00000000000160C8          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*000160cc*/ LDR         R0, [R4] 
    /*000160d0*/ ADD         R2, R0, #128                @ 0x80 
    /*000160d4*/ ADD         R1, R0, #108                @ 0x6c 
    /*000160d8*/ BL          0x00000000000160D8          @ GDC_DrvDeInitBuf [R_ARM_CALL: .text+0x169d4] 
    /*000160dc*/ LDR         R3, [R4] 
    /*000160e0*/ ADD         R1, R3, #272                @ 0x110 
    /*000160e4*/ LDR         R2, [R3, #280]              @ 0x118 
    /*000160e8*/ LDRD        R0, [R1] 
    /*000160ec*/ BL          0x00000000000160EC          @ GDC_DRV_FreeInterPoleCoefAddr [R_ARM_CALL: .text+0x17168] 
    /*000160f0*/ LDR         R0, [R4] 
    /*000160f4*/ LDR         R3, [R0, #236]              @ 0xec 
    /*000160f8*/ CMP         R3, #0 
    /*000160fc*/ BEQ         GDC_DrvCommClose_x16120
    /*00016100*/ MOV         R0, R3 
    /*00016104*/ BL          0x0000000000016104          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00016108*/ LDR         R0, [R4] 
    /*0001610c*/ MOV         R2, #16 
    /*00016110*/ MOV         R1, #0 
    /*00016114*/ ADD         R0, R0, #236                @ 0xec 
    /*00016118*/ BL          0x0000000000016118          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0001611c*/ LDR         R0, [R4] 
    GDC_DrvCommClose_x16120:
    /*00016120*/ BL          0x0000000000016120          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00016124*/ MOV         R3, #0 
    /*00016128*/ STR         R3, [R4] 
    GDC_DrvCommClose_x1612c:
    /*0001612c*/ BL          0x000000000001612C          @ GDC_DRV_Reset [R_ARM_CALL: .text+0x18b10] 
    /*00016130*/ BL          0x0000000000016130          @ GDC_HAL_Close [R_ARM_CALL: .text+0x192f0] 
    /*00016134*/ BL          0x0000000000016134          @ GDC_DRV_FreetIrq [R_ARM_CALL: .text+0x18b30] 
    /*00016138*/ MOV         R3, #0 
    /*0001613c*/ MOV         R0, R3 
    /*00016140*/ STR         R3, [R4, #24] 
    /*00016144*/ POP         {R4, PC} 
FUNC_END GDC_DrvCommClose


FUNC_BEGIN GDC_DrvCommExitEx
    /*00016148*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001614c*/ MOVW        R7, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1fc8] 
    /*00016150*/ MOVT        R7, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1fc8] 
    /*00016154*/ SUB         SP, SP, #20 
    /*00016158*/ LDR         R0, [R7] 
    /*0001615c*/ BL          0x000000000001615C          @ GDC_DrvQueryBusyTotalJobNum [R_ARM_CALL: .text+0x17078] 
    /*00016160*/ SUBS        R3, R0, #0 
    /*00016164*/ STR         R3, [SP, #12] 
    /*00016168*/ BNE         GDC_DrvCommExitEx_x162f8
    /*0001616c*/ LDR         R3, [R7] 
    /*00016170*/ MOV         R2, R3 
    /*00016174*/ LDR         R9, [R2, #16]! 
    /*00016178*/ CMP         R9, R2 
    /*0001617c*/ LDR         FP, [R9] 
    /*00016180*/ BEQ         GDC_DrvCommExitEx_x16248
    /*00016184*/ STR         FP, [SP, #8] 
    GDC_DrvCommExitEx_x16188:
    /*00016188*/ MOV         SL, R9 
    /*0001618c*/ MOV         R0, R3 
    /*00016190*/ MOV         R1, R9 
    /*00016194*/ BL          0x0000000000016194          @ GDC_DrvGetJobFromWaitList [R_ARM_CALL: .text+0x16eb4] 
    /*00016198*/ LDR         R5, [SL, #12]! 
    /*0001619c*/ CMP         R5, SL 
    /*000161a0*/ LDR         R8, [R5] 
    /*000161a4*/ BEQ         GDC_DrvCommExitEx_x16218
    GDC_DrvCommExitEx_x161a8:
    /*000161a8*/ MOV         R6, R5 
    /*000161ac*/ LDR         R4, [R6, #8]! 
    /*000161b0*/ CMP         R4, R6 
    /*000161b4*/ LDR         R3, [R4] 
    /*000161b8*/ MOVNE       FP, R3 
    /*000161bc*/ BEQ         GDC_DrvCommExitEx_x161ec
    GDC_DrvCommExitEx_x161c0:
    /*000161c0*/ MOV         R1, R4 
    /*000161c4*/ MOV         R0, R5 
    /*000161c8*/ BL          0x00000000000161C8          @ GDC_DrvGetNodeFromTask [R_ARM_CALL: .text+0x16bcc] 
    /*000161cc*/ LDR         R0, [R7] 
    /*000161d0*/ MOV         R1, R4 
    /*000161d4*/ MOV         R4, FP 
    /*000161d8*/ ADD         R0, R0, #128                @ 0x80 
    /*000161dc*/ BL          0x00000000000161DC          @ GDC_DrvPutNodeToFreeList [R_ARM_CALL: .text+0x16adc] 
    /*000161e0*/ CMP         FP, R6 
    /*000161e4*/ LDR         FP, [FP] 
    /*000161e8*/ BNE         GDC_DrvCommExitEx_x161c0
    GDC_DrvCommExitEx_x161ec:
    /*000161ec*/ MOV         R1, R5 
    /*000161f0*/ MOV         R0, R9 
    /*000161f4*/ BL          0x00000000000161F4          @ GDC_DrvGetTaskFromJob [R_ARM_CALL: .text+0x16d10] 
    /*000161f8*/ LDR         R0, [R7] 
    /*000161fc*/ MOV         R1, R5 
    /*00016200*/ MOV         R5, R8 
    /*00016204*/ ADD         R0, R0, #108                @ 0x6c 
    /*00016208*/ BL          0x0000000000016208          @ GDC_DrvPutTaskToFreeList [R_ARM_CALL: .text+0x16cec] 
    /*0001620c*/ CMP         R8, SL 
    /*00016210*/ LDR         R8, [R8] 
    /*00016214*/ BNE         GDC_DrvCommExitEx_x161a8
    GDC_DrvCommExitEx_x16218:
    /*00016218*/ MOV         R1, R9 
    /*0001621c*/ LDR         R0, [R7] 
    /*00016220*/ BL          0x0000000000016220          @ GDC_DrvPutJobToFreeList [R_ARM_CALL: .text+0x16e5c] 
    /*00016224*/ LDR         R0, [SP, #8] 
    /*00016228*/ LDR         R3, [R7] 
    /*0001622c*/ MOV         R1, R0 
    /*00016230*/ MOV         R9, R0 
    /*00016234*/ ADD         R2, R3, #16 
    /*00016238*/ LDR         R0, [R0] 
    /*0001623c*/ CMP         R1, R2 
    /*00016240*/ STR         R0, [SP, #8] 
    /*00016244*/ BNE         GDC_DrvCommExitEx_x16188
    GDC_DrvCommExitEx_x16248:
    /*00016248*/ MOV         R0, R3 
    /*0001624c*/ LDR         R4, [R3, #160]              @ 0xa0 
    /*00016250*/ BL          0x0000000000016250          @ GDC_DrvQueryFreeJobNum [R_ARM_CALL: .text+0x16ddc] 
    /*00016254*/ CMP         R4, R0 
    /*00016258*/ MOVWNE      R3, #1521                   @ 0x5f1 
    /*0001625c*/ MOVWNE      R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5bd8] 
    /*00016260*/ STRNE       R3, [SP] 
    /*00016264*/ MOVTNE      R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5bd8] 
    /*00016268*/ BNE         GDC_DrvCommExitEx_x162c8
    /*0001626c*/ LDR         R3, [R7] 
    /*00016270*/ ADD         R0, R3, #108                @ 0x6c 
    /*00016274*/ LDR         R4, [R3, #164]              @ 0xa4 
    /*00016278*/ BL          0x0000000000016278          @ GDC_DrvQueryFreeTaskNum [R_ARM_CALL: .text+0x16c38] 
    /*0001627c*/ CMP         R4, R0 
    /*00016280*/ MOVWNE      R3, #1529                   @ 0x5f9 
    /*00016284*/ MOVWNE      R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5c08] 
    /*00016288*/ STRNE       R3, [SP] 
    /*0001628c*/ MOVTNE      R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5c08] 
    /*00016290*/ BNE         GDC_DrvCommExitEx_x162c8
    /*00016294*/ LDR         R3, [R7] 
    /*00016298*/ ADD         R0, R3, #128                @ 0x80 
    /*0001629c*/ LDR         R4, [R3, #168]              @ 0xa8 
    /*000162a0*/ BL          0x00000000000162A0          @ GDC_DrvQueryFreeNodeNum [R_ARM_CALL: .text+0x16b00] 
    /*000162a4*/ CMP         R4, R0 
    /*000162a8*/ BNE         GDC_DrvCommExitEx_x162b8
    /*000162ac*/ LDR         R0, [SP, #12] 
    /*000162b0*/ ADD         SP, SP, #20 
    /*000162b4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_DrvCommExitEx_x162b8:
    /*000162b8*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5c38] 
    /*000162bc*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5c38] 
    /*000162c0*/ MOVW        R3, #1537                   @ 0x601 
    /*000162c4*/ STR         R3, [SP] 
    GDC_DrvCommExitEx_x162c8:
    /*000162c8*/ MOVW        IP, #32777                  @ 0x8009 
    /*000162cc*/ LDR         R3, [PC, #100]              @ 0x0000000000016338 
    /*000162d0*/ MOV         R1, #37                     @ 0x25 
    /*000162d4*/ MOV         R0, #0 
    /*000162d8*/ MOV         R4, IP 
    /*000162dc*/ BL          0x00000000000162DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000162e0*/ MOV         IP, R4 
    /*000162e4*/ MOVT        IP, #40997                  @ 0xa025 
    /*000162e8*/ STR         IP, [SP, #12] 
    /*000162ec*/ LDR         R0, [SP, #12] 
    /*000162f0*/ ADD         SP, SP, #20 
    /*000162f4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_DrvCommExitEx_x162f8:
    /*000162f8*/ MOVW        IP, #32777                  @ 0x8009 
    /*000162fc*/ MOVW        R3, #1492                   @ 0x5d4 
    /*00016300*/ MOV         R1, #37                     @ 0x25 
    /*00016304*/ STR         R3, [SP] 
    /*00016308*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5ba4] 
    /*0001630c*/ LDR         R3, [PC, #36]               @ 0x0000000000016338 
    /*00016310*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5ba4] 
    /*00016314*/ MOV         R0, #0 
    /*00016318*/ MOV         R4, IP 
    /*0001631c*/ BL          0x000000000001631C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016320*/ MOV         IP, R4 
    /*00016324*/ MOVT        IP, #40977                  @ 0xa011 
    /*00016328*/ STR         IP, [SP, #12] 
    /*0001632c*/ LDR         R0, [SP, #12] 
    /*00016330*/ ADD         SP, SP, #20 
    /*00016334*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*00016338*/ ANDEQ       R0, R0, R0, ASR #28 
FUNC_END GDC_DrvCommExitEx


FUNC_BEGIN GDC_DrvCommExit
    /*0001633c*/ PUSH        {R4, R5, R6, LR} 
    /*00016340*/ SUB         SP, SP, #8 
    /*00016344*/ ADD         R4, SP, #8 
    /*00016348*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1fc8] 
    /*0001634c*/ MOVW        R5, #0                      @ GDC_WaitConditionCallBackEx [R_ARM_MOVW_ABS_NC: .text+0x14840] 
    /*00016350*/ MOV         R3, #0 
    /*00016354*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1fc8] 
    /*00016358*/ MOVT        R5, #0                      @ GDC_WaitConditionCallBackEx [R_ARM_MOVT_ABS: .text+0x14840] 
    /*0001635c*/ STR         R3, [R4, #-4]! 
    /*00016360*/ B           GDC_DrvCommExit_x16370
    GDC_DrvCommExit_x16364:
    /*00016364*/ BL          0x0000000000016364          @ osal_wait_uninterruptible [R_ARM_CALL: +0x0] 
    /*00016368*/ CMP         R0, #0 
    /*0001636c*/ BLT         GDC_DrvCommExit_x16398
    GDC_DrvCommExit_x16370:
    /*00016370*/ LDR         R3, [R6] 
    /*00016374*/ MOV         R2, R4 
    /*00016378*/ MOV         R1, R5 
    /*0001637c*/ ADD         R0, R3, #212                @ 0xd4 
    /*00016380*/ LDR         IP, [R3, #216]              @ 0xd8 
    /*00016384*/ CMP         IP, #0 
    /*00016388*/ BNE         GDC_DrvCommExit_x16364
    /*0001638c*/ LDR         R3, [R3, #220]              @ 0xdc 
    /*00016390*/ CMP         R3, #0 
    /*00016394*/ BNE         GDC_DrvCommExit_x16364
    GDC_DrvCommExit_x16398:
    /*00016398*/ BL          0x0000000000016398          @ GDC_DrvCommExitEx [R_ARM_CALL: .text+0x16148] 
    /*0001639c*/ MOV         R0, #0 
    /*000163a0*/ ADD         SP, SP, #8 
    /*000163a4*/ POP         {R4, R5, R6, PC} 
FUNC_END GDC_DrvCommExit


FUNC_BEGIN GDC_DrvCommNotify
    /*000163a8*/ PUSH        {R4, R5, LR} 
    /*000163ac*/ MOVW        R4, #0                      @ g_stGdcLock [R_ARM_MOVW_ABS_NC: .bss+0x40] 
    /*000163b0*/ MOVT        R4, #0                      @ g_stGdcLock [R_ARM_MOVT_ABS: .bss+0x40] 
    /*000163b4*/ SUB         SP, SP, #12 
    /*000163b8*/ MOV         R5, R0 
    /*000163bc*/ ADD         R1, SP, #4 
    /*000163c0*/ MOV         R0, R4 
    /*000163c4*/ BL          0x00000000000163C4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000163c8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1fc8] 
    /*000163cc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1fc8] 
    /*000163d0*/ MOV         R0, R4 
    /*000163d4*/ ADD         R1, SP, #4 
    /*000163d8*/ LDR         R3, [R3] 
    /*000163dc*/ STR         R5, [R3, #228]              @ 0xe4 
    /*000163e0*/ BL          0x00000000000163E0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000163e4*/ MOV         R0, #0 
    /*000163e8*/ ADD         SP, SP, #12 
    /*000163ec*/ POP         {R4, R5, PC} 
FUNC_END GDC_DrvCommNotify


FUNC_BEGIN GDC_DrvDeInitJobBuf
    /*000163f0*/ PUSH        {R4, LR} 
    /*000163f4*/ MOV         R4, R0 
    /*000163f8*/ LDR         R3, [R0, #4] 
    /*000163fc*/ SUB         SP, SP, #8 
    /*00016400*/ CMP         R3, #0 
    /*00016404*/ BEQ         GDC_DrvDeInitJobBuf_x16440
    /*00016408*/ STR         R3, [SP, #4] 
    /*0001640c*/ MOV         R2, #50                     @ 0x32 
    /*00016410*/ MOV         R1, #37                     @ 0x25 
    /*00016414*/ STR         R2, [SP] 
    /*00016418*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xe54] 
    /*0001641c*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5c68] 
    /*00016420*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xe54] 
    /*00016424*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5c68] 
    /*00016428*/ MOV         R0, #7 
    /*0001642c*/ BL          0x000000000001642C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016430*/ LDR         R0, [R4, #4] 
    /*00016434*/ BL          0x0000000000016434          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00016438*/ MOV         R3, #0 
    /*0001643c*/ STR         R3, [R4, #4] 
    GDC_DrvDeInitJobBuf_x16440:
    /*00016440*/ LDR         R3, [R4] 
    /*00016444*/ CMP         R3, #0 
    /*00016448*/ BEQ         GDC_DrvDeInitJobBuf_x16484
    /*0001644c*/ STR         R3, [SP, #4] 
    /*00016450*/ MOV         R2, #57                     @ 0x39 
    /*00016454*/ MOV         R1, #37                     @ 0x25 
    /*00016458*/ STR         R2, [SP] 
    /*0001645c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xe54] 
    /*00016460*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5ca0] 
    /*00016464*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xe54] 
    /*00016468*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5ca0] 
    /*0001646c*/ MOV         R0, #7 
    /*00016470*/ BL          0x0000000000016470          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016474*/ LDR         R0, [R4] 
    /*00016478*/ BL          0x0000000000016478          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0001647c*/ MOV         R3, #0 
    /*00016480*/ STR         R3, [R4] 
    GDC_DrvDeInitJobBuf_x16484:
    /*00016484*/ ADD         SP, SP, #8 
    /*00016488*/ POP         {R4, PC} 
FUNC_END GDC_DrvDeInitJobBuf


FUNC_BEGIN GDC_DrvDeInitTaskBuf
    /*0001648c*/ LDR         R3, [R0] 
    /*00016490*/ CMP         R3, #0 
    /*00016494*/ BXEQ        LR 
    /*00016498*/ PUSH        {R4, LR} 
    /*0001649c*/ SUB         SP, SP, #8 
    /*000164a0*/ MOV         R4, R0 
    /*000164a4*/ MOV         R1, #37                     @ 0x25 
    /*000164a8*/ STR         R3, [SP, #4] 
    /*000164ac*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5cd8] 
    /*000164b0*/ MOV         R3, #81                     @ 0x51 
    /*000164b4*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5cd8] 
    /*000164b8*/ STR         R3, [SP] 
    /*000164bc*/ MOV         R0, #7 
    /*000164c0*/ LDR         R3, [PC, #24]               @ 0x00000000000164e0 
    /*000164c4*/ BL          0x00000000000164C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000164c8*/ LDR         R0, [R4] 
    /*000164cc*/ BL          0x00000000000164CC          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*000164d0*/ MOV         R3, #0 
    /*000164d4*/ STR         R3, [R4] 
    /*000164d8*/ ADD         SP, SP, #8 
    /*000164dc*/ POP         {R4, PC} 
    /*000164e0*/ ANDEQ       R0, R0, R8, ROR #28 
FUNC_END GDC_DrvDeInitTaskBuf


FUNC_BEGIN GDC_DrvInitBuf
    /*000164e4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000164e8*/ LSL         SL, R3, #3 
    /*000164ec*/ MOV         R6, R0 
    /*000164f0*/ SUB         SP, SP, #36                 @ 0x24 
    /*000164f4*/ MOV         R7, R1 
    /*000164f8*/ MOV         R8, R2 
    /*000164fc*/ MOV         R1, #0 
    /*00016500*/ MOV         R2, #108                    @ 0x6c 
    /*00016504*/ ADD         R9, R0, #8 
    /*00016508*/ MOV         R4, R3 
    /*0001650c*/ ADD         R5, R6, #32 
    /*00016510*/ BL          0x0000000000016510          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00016514*/ ADD         R3, R6, #16 
    /*00016518*/ ADD         R2, R6, #24 
    /*0001651c*/ ADD         R1, R6, #48                 @ 0x30 
    /*00016520*/ STR         R3, [R6, #16] 
    /*00016524*/ STR         R3, [R6, #20] 
    /*00016528*/ MOV         R0, SL 
    /*0001652c*/ ADD         R3, R6, #40                 @ 0x28 
    /*00016530*/ STR         R2, [R6, #24] 
    /*00016534*/ STR         R2, [R6, #28] 
    /*00016538*/ ADD         R2, R6, #56                 @ 0x38 
    /*0001653c*/ STR         R3, [R6, #40]               @ 0x28 
    /*00016540*/ STR         R3, [R6, #44]               @ 0x2c 
    /*00016544*/ ADD         R3, R6, #64                 @ 0x40 
    /*00016548*/ STR         R9, [R6, #8] 
    /*0001654c*/ STR         R9, [R6, #12] 
    /*00016550*/ STR         R5, [R6, #32] 
    /*00016554*/ STR         R5, [R6, #36]               @ 0x24 
    /*00016558*/ STR         R1, [R6, #48]               @ 0x30 
    /*0001655c*/ STR         R1, [R6, #52]               @ 0x34 
    /*00016560*/ STR         R2, [R6, #56]               @ 0x38 
    /*00016564*/ STR         R2, [R6, #60]               @ 0x3c 
    /*00016568*/ STR         R3, [R6, #64]               @ 0x40 
    /*0001656c*/ STR         R3, [R6, #68]               @ 0x44 
    /*00016570*/ BL          0x0000000000016570          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00016574*/ CMP         R0, #0 
    /*00016578*/ STR         R0, [R6, #4] 
    /*0001657c*/ BEQ         GDC_DrvInitBuf_x16918
    /*00016580*/ LSL         FP, R4, #7 
    /*00016584*/ MOV         R2, SL 
    /*00016588*/ MOV         R1, #0 
    /*0001658c*/ BL          0x000000000001658C          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00016590*/ MOV         R0, FP 
    /*00016594*/ BL          0x0000000000016594          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00016598*/ SUBS        SL, R0, #0 
    /*0001659c*/ BEQ         GDC_DrvInitBuf_x16950
    /*000165a0*/ MOV         R2, FP 
    /*000165a4*/ MOV         R1, #0 
    /*000165a8*/ BL          0x00000000000165A8          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000165ac*/ CMP         R4, #0 
    /*000165b0*/ STR         SL, [R6] 
    /*000165b4*/ BEQ         GDC_DrvInitBuf_x166a8
    /*000165b8*/ MOV         R1, #0 
    /*000165bc*/ MOV         R3, SL 
    /*000165c0*/ MOV         R0, R1 
    /*000165c4*/ MOV         FP, #60                     @ 0x3c 
    /*000165c8*/ MVN         SL, #0 
    /*000165cc*/ B           GDC_DrvInitBuf_x165d4
    GDC_DrvInitBuf_x165d0:
    /*000165d0*/ LDR         R3, [R6] 
    GDC_DrvInitBuf_x165d4:
    /*000165d4*/ LDR         LR, [R6, #4] 
    /*000165d8*/ ADD         R2, R3, R1, LSL #6 
    /*000165dc*/ ADD         IP, R2, #12 
    /*000165e0*/ STR         R2, [LR, R1, LSL #2] 
    /*000165e4*/ STR         R1, [R2, #40]               @ 0x28 
    /*000165e8*/ STR         R0, [R2, #20] 
    /*000165ec*/ STR         IP, [R2, #12] 
    /*000165f0*/ STR         IP, [R2, #16] 
    /*000165f4*/ LDR         IP, [R6, #12] 
    /*000165f8*/ STR         R2, [R6, #12] 
    /*000165fc*/ STR         R9, [R3, R1, LSL #6] 
    /*00016600*/ ADD         R1, R1, #1 
    /*00016604*/ STR         IP, [R2, #4] 
    /*00016608*/ CMP         R4, R1 
    /*0001660c*/ STR         R2, [IP] 
    /*00016610*/ STR         R0, [R2, #24] 
    /*00016614*/ STR         FP, [R2, #28] 
    /*00016618*/ STR         R0, [R2, #20] 
    /*0001661c*/ STR         SL, [R2, #44]               @ 0x2c 
    /*00016620*/ STR         R0, [R2, #48]               @ 0x30 
    /*00016624*/ STR         R0, [R2, #60]               @ 0x3c 
    /*00016628*/ LDR         R3, [R6, #72]               @ 0x48 
    /*0001662c*/ ADD         R3, R3, #1 
    /*00016630*/ STR         R3, [R6, #72]               @ 0x48 
    /*00016634*/ BNE         GDC_DrvInitBuf_x165d0
    /*00016638*/ LSL         R9, R1, #1 
    /*0001663c*/ CMP         R1, R9 
    /*00016640*/ BCS         GDC_DrvInitBuf_x166a8
    /*00016644*/ LSL         R2, R1, #6 
    /*00016648*/ LSL         R0, R1, #2 
    /*0001664c*/ MOV         SL, #0 
    GDC_DrvInitBuf_x16650:
    /*00016650*/ LDR         LR, [R6] 
    /*00016654*/ LDR         R4, [R6, #4] 
    /*00016658*/ ADD         R3, LR, R2 
    /*0001665c*/ ADD         IP, R3, #12 
    /*00016660*/ STR         R3, [R4, R0] 
    /*00016664*/ ADD         R0, R0, #4 
    /*00016668*/ STR         R1, [R3, #40]               @ 0x28 
    /*0001666c*/ ADD         R1, R1, #1 
    /*00016670*/ STR         SL, [R3, #20] 
    /*00016674*/ CMP         R1, R9 
    /*00016678*/ STR         IP, [R3, #12] 
    /*0001667c*/ STR         IP, [R3, #16] 
    /*00016680*/ LDR         IP, [R6, #36]               @ 0x24 
    /*00016684*/ STR         R3, [R6, #36]               @ 0x24 
    /*00016688*/ STR         R5, [LR, R2] 
    /*0001668c*/ ADD         R2, R2, #64                 @ 0x40 
    /*00016690*/ STR         IP, [R3, #4] 
    /*00016694*/ STR         R3, [IP] 
    /*00016698*/ LDR         R3, [R6, #84]               @ 0x54 
    /*0001669c*/ ADD         R3, R3, #1 
    /*000166a0*/ STR         R3, [R6, #84]               @ 0x54 
    /*000166a4*/ BNE         GDC_DrvInitBuf_x16650
    GDC_DrvInitBuf_x166a8:
    /*000166a8*/ LDR         R3, [SP, #72]               @ 0x48 
    /*000166ac*/ MOVW        R5, #1944                   @ 0x798 
    /*000166b0*/ MOV         R2, #16 
    /*000166b4*/ MOV         R1, #0 
    /*000166b8*/ MOV         R0, R7 
    /*000166bc*/ ADD         R4, R7, #4 
    /*000166c0*/ MUL         R9, R5, R3 
    /*000166c4*/ BL          0x00000000000166C4          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000166c8*/ STR         R4, [R7, #4] 
    /*000166cc*/ STR         R4, [R7, #8] 
    /*000166d0*/ MOV         R0, R9 
    /*000166d4*/ BL          0x00000000000166D4          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*000166d8*/ SUBS        SL, R0, #0 
    /*000166dc*/ BEQ         GDC_DrvInitBuf_x16894
    /*000166e0*/ MOV         R2, R9 
    /*000166e4*/ MOV         R1, #0 
    /*000166e8*/ BL          0x00000000000166E8          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000166ec*/ LDR         R3, [SP, #72]               @ 0x48 
    /*000166f0*/ STR         SL, [R7] 
    /*000166f4*/ CMP         R3, #0 
    /*000166f8*/ BEQ         GDC_DrvInitBuf_x16750
    /*000166fc*/ MOV         R2, #0 
    /*00016700*/ MOV         IP, R3 
    /*00016704*/ MOV         R1, R2 
    /*00016708*/ B           GDC_DrvInitBuf_x16710
    GDC_DrvInitBuf_x1670c:
    /*0001670c*/ LDR         SL, [R7] 
    GDC_DrvInitBuf_x16710:
    /*00016710*/ ADD         R3, SL, R2 
    /*00016714*/ ADD         R1, R1, #1 
    /*00016718*/ ADD         R0, R3, #8 
    /*0001671c*/ CMP         IP, R1 
    /*00016720*/ STR         R0, [R3, #8] 
    /*00016724*/ STR         R0, [R3, #12] 
    /*00016728*/ LDR         R0, [R7, #8] 
    /*0001672c*/ STR         R3, [R7, #8] 
    /*00016730*/ STR         R4, [SL, R2] 
    /*00016734*/ ADD         R2, R2, R5 
    /*00016738*/ STR         R0, [R3, #4] 
    /*0001673c*/ STR         R3, [R0] 
    /*00016740*/ LDR         R3, [R7, #12] 
    /*00016744*/ ADD         R3, R3, #1 
    /*00016748*/ STR         R3, [R7, #12] 
    /*0001674c*/ BNE         GDC_DrvInitBuf_x1670c
    GDC_DrvInitBuf_x16750:
    /*00016750*/ MOV         SL, #0 
    /*00016754*/ MOV         R2, #32 
    /*00016758*/ MOV         R1, SL 
    /*0001675c*/ MOV         R0, R8 
    /*00016760*/ MOV         R4, #0 
    /*00016764*/ MOV         R5, #0 
    /*00016768*/ STR         SL, [SP, #20] 
    /*0001676c*/ STRD        R4, [SP, #24] 
    /*00016770*/ BL          0x0000000000016770          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00016774*/ LDR         R3, [SP, #76]               @ 0x4c 
    /*00016778*/ MOV         R5, #24 
    /*0001677c*/ ADD         R4, R8, #4 
    /*00016780*/ STR         R4, [R8, #4] 
    /*00016784*/ STR         R4, [R8, #8] 
    /*00016788*/ MUL         R5, R5, R3 
    /*0001678c*/ MOV         R0, R5 
    /*00016790*/ BL          0x0000000000016790          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00016794*/ SUBS        FP, R0, #0 
    /*00016798*/ BEQ         GDC_DrvInitBuf_x16994
    /*0001679c*/ MOV         R2, R5 
    /*000167a0*/ MOV         R1, SL 
    /*000167a4*/ BL          0x00000000000167A4          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000167a8*/ LDR         R3, [SP, #76]               @ 0x4c 
    /*000167ac*/ MOV         R9, #1744                   @ 0x6d0 
    /*000167b0*/ STR         FP, [R8] 
    /*000167b4*/ MOVW        R1, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5df0] 
    /*000167b8*/ ADD         R2, SP, #24 
    /*000167bc*/ MUL         R0, R9, R3 
    /*000167c0*/ MOVT        R1, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5df0] 
    /*000167c4*/ ADD         R3, SP, #20 
    /*000167c8*/ ADD         FP, R0, #16 
    /*000167cc*/ MOV         R0, SL 
    /*000167d0*/ STR         FP, [SP] 
    /*000167d4*/ BL          0x00000000000167D4          @ CMPI_MmzMallocNocache [R_ARM_CALL: +0x0] 
    /*000167d8*/ SUBS        R5, R0, #0 
    /*000167dc*/ BNE         GDC_DrvInitBuf_x168dc
    /*000167e0*/ MOV         R2, FP 
    /*000167e4*/ MOV         R1, R5 
    /*000167e8*/ LDR         R0, [SP, #20] 
    /*000167ec*/ BL          0x00000000000167EC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000167f0*/ LDRD        R0, [SP, #24] 
    /*000167f4*/ LDR         LR, [SP, #76]               @ 0x4c 
    /*000167f8*/ ADDS        R2, R0, #15 
    /*000167fc*/ LDR         IP, [SP, #20] 
    /*00016800*/ ADC         R3, R1, #0 
    /*00016804*/ CMP         LR, #0 
    /*00016808*/ STRD        R0, [R8, #16] 
    /*0001680c*/ BIC         R2, R2, #15 
    /*00016810*/ STR         IP, [R8, #24] 
    /*00016814*/ BEQ         GDC_DrvInitBuf_x16888
    /*00016818*/ ADDS        R6, R2, #1744               @ 0x6d0 
    /*0001681c*/ SUB         SL, LR, #1 
    /*00016820*/ ADC         R7, R3, #0 
    /*00016824*/ MOV         LR, R5 
    /*00016828*/ UMLAL       R6, R7, R9, SL 
    /*0001682c*/ B           GDC_DrvInitBuf_x16838
    GDC_DrvInitBuf_x16830:
    /*00016830*/ LDR         IP, [SP, #20] 
    /*00016834*/ LDRD        R0, [SP, #24] 
    GDC_DrvInitBuf_x16838:
    /*00016838*/ LDR         R9, [R8] 
    /*0001683c*/ SUB         R0, R2, R0 
    /*00016840*/ ADD         R0, IP, R0 
    /*00016844*/ ADD         R1, R9, LR 
    /*00016848*/ STRD        R2, [R1, #8] 
    /*0001684c*/ ADDS        R2, R2, #1744               @ 0x6d0 
    /*00016850*/ STR         R0, [R1, #16] 
    /*00016854*/ ADC         R3, R3, #0 
    /*00016858*/ LDR         R0, [R8, #8] 
    /*0001685c*/ CMP         R7, R3 
    /*00016860*/ STR         R1, [R8, #8] 
    /*00016864*/ CMPEQ       R6, R2 
    /*00016868*/ STR         R4, [R9, LR] 
    /*0001686c*/ ADD         LR, LR, #24 
    /*00016870*/ STR         R0, [R1, #4] 
    /*00016874*/ STR         R1, [R0] 
    /*00016878*/ LDR         R1, [R8, #28] 
    /*0001687c*/ ADD         R1, R1, #1 
    /*00016880*/ STR         R1, [R8, #28] 
    /*00016884*/ BNE         GDC_DrvInitBuf_x16830
    GDC_DrvInitBuf_x16888:
    /*00016888*/ MOV         R0, R5 
    /*0001688c*/ ADD         SP, SP, #36                 @ 0x24 
    /*00016890*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_DrvInitBuf_x16894:
    /*00016894*/ LDR         R2, [SP, #72]               @ 0x48 
    /*00016898*/ MOV         R1, #37                     @ 0x25 
    /*0001689c*/ STR         R5, [SP, #8] 
    /*000168a0*/ MOVW        R3, #267                    @ 0x10b 
    /*000168a4*/ MOV         R0, #1 
    /*000168a8*/ STR         R3, [SP] 
    /*000168ac*/ STR         R2, [SP, #4] 
    /*000168b0*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5da4] 
    /*000168b4*/ LDR         R3, [PC, #268]              @ 0x00000000000169c8 
    /*000168b8*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5da4] 
    /*000168bc*/ BL          0x00000000000168BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000168c0*/ MOV         R0, R6 
    /*000168c4*/ BL          0x00000000000163F0 
    /*000168c8*/ MOVW        R5, #32781                  @ 0x800d 
    /*000168cc*/ MOVT        R5, #40997                  @ 0xa025 
    /*000168d0*/ MOV         R0, R5 
    /*000168d4*/ ADD         SP, SP, #36                 @ 0x24 
    /*000168d8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_DrvInitBuf_x168dc:
    /*000168dc*/ MOV         R3, #352                    @ 0x160 
    /*000168e0*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5dfc] 
    /*000168e4*/ STR         R3, [SP] 
    /*000168e8*/ MOV         R0, SL 
    /*000168ec*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5dfc] 
    /*000168f0*/ LDR         R3, [PC, #212]              @ 0x00000000000169cc 
    /*000168f4*/ MOV         R1, #37                     @ 0x25 
    /*000168f8*/ BL          0x00000000000168F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_DrvInitBuf_x168fc:
    /*000168fc*/ MOV         R0, R6 
    /*00016900*/ MOVW        R5, #32781                  @ 0x800d 
    /*00016904*/ BL          0x00000000000163F0 
    /*00016908*/ MOV         R0, R7 
    /*0001690c*/ BL          0x000000000001648C 
    /*00016910*/ MOVT        R5, #40997                  @ 0xa025 
    /*00016914*/ B           GDC_DrvInitBuf_x16888
    GDC_DrvInitBuf_x16918:
    /*00016918*/ MOV         R2, #4 
    /*0001691c*/ MOV         R3, #167                    @ 0xa7 
    /*00016920*/ STR         R2, [SP, #8] 
    /*00016924*/ MOV         R1, #37                     @ 0x25 
    /*00016928*/ STR         R3, [SP] 
    /*0001692c*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5d10] 
    /*00016930*/ STR         R4, [SP, #4] 
    /*00016934*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5d10] 
    /*00016938*/ LDR         R3, [PC, #144]              @ 0x00000000000169d0 
    /*0001693c*/ MOV         R0, #1 
    /*00016940*/ MOVW        R5, #32781                  @ 0x800d 
    /*00016944*/ BL          0x0000000000016944          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016948*/ MOVT        R5, #40997                  @ 0xa025 
    /*0001694c*/ B           GDC_DrvInitBuf_x16888
    GDC_DrvInitBuf_x16950:
    /*00016950*/ LDR         R0, [R6, #4] 
    /*00016954*/ MOVW        R5, #32781                  @ 0x800d 
    /*00016958*/ BL          0x0000000000016958          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0001695c*/ STR         SL, [R6, #4] 
    /*00016960*/ MOV         R2, #64                     @ 0x40 
    /*00016964*/ MOV         R3, #190                    @ 0xbe 
    /*00016968*/ STR         R2, [SP, #8] 
    /*0001696c*/ MOV         R1, #37                     @ 0x25 
    /*00016970*/ STR         R3, [SP] 
    /*00016974*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5d5c] 
    /*00016978*/ STR         R4, [SP, #4] 
    /*0001697c*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5d5c] 
    /*00016980*/ LDR         R3, [PC, #72]               @ 0x00000000000169d0 
    /*00016984*/ MOV         R0, #1 
    /*00016988*/ BL          0x0000000000016988          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001698c*/ MOVT        R5, #40997                  @ 0xa025 
    /*00016990*/ B           GDC_DrvInitBuf_x16888
    GDC_DrvInitBuf_x16994:
    /*00016994*/ LDR         R3, [SP, #76]               @ 0x4c 
    /*00016998*/ MOV         R2, #4 
    /*0001699c*/ MOV         R1, #37                     @ 0x25 
    /*000169a0*/ STR         R2, [SP, #8] 
    /*000169a4*/ MOV         R0, #1 
    /*000169a8*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5da4] 
    /*000169ac*/ STR         R3, [SP, #4] 
    /*000169b0*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5da4] 
    /*000169b4*/ MOVW        R3, #329                    @ 0x149 
    /*000169b8*/ STR         R3, [SP] 
    /*000169bc*/ LDR         R3, [PC, #8]                @ 0x00000000000169cc 
    /*000169c0*/ BL          0x00000000000169C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000169c4*/ B           GDC_DrvInitBuf_x168fc
    /*000169c8*/ MULEQ       R0, R4, LR 
    /*000169cc*/ ANDEQ       R0, R0, R8, LSR #29 
    /*000169d0*/ ANDEQ       R0, R0, R0, LSL #29 
FUNC_END GDC_DrvInitBuf


FUNC_BEGIN GDC_DrvDeInitBuf
    /*000169d4*/ PUSH        {R4, R5, R6, LR} 
    /*000169d8*/ SUBS        R6, R0, #0 
    /*000169dc*/ SUB         SP, SP, #8 
    /*000169e0*/ MOV         R5, R1 
    /*000169e4*/ MOV         R4, R2 
    /*000169e8*/ BEQ         GDC_DrvDeInitBuf_x16a94
    GDC_DrvDeInitBuf_x169ec:
    /*000169ec*/ CMP         R5, #0 
    /*000169f0*/ BEQ         GDC_DrvDeInitBuf_x16ab4
    GDC_DrvDeInitBuf_x169f4:
    /*000169f4*/ CMP         R4, #0 
    /*000169f8*/ BEQ         GDC_DrvDeInitBuf_x16a74
    GDC_DrvDeInitBuf_x169fc:
    /*000169fc*/ MOV         R0, R6 
    /*00016a00*/ BL          0x00000000000163F0 
    /*00016a04*/ MOV         R0, R5 
    /*00016a08*/ BL          0x000000000001648C 
    /*00016a0c*/ LDR         R3, [R4] 
    /*00016a10*/ CMP         R3, #0 
    /*00016a14*/ BEQ         GDC_DrvDeInitBuf_x16a4c
    /*00016a18*/ STR         R3, [SP, #4] 
    /*00016a1c*/ MOV         R1, #37                     @ 0x25 
    /*00016a20*/ MOV         R3, #105                    @ 0x69 
    /*00016a24*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5cd8] 
    /*00016a28*/ STR         R3, [SP] 
    /*00016a2c*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5cd8] 
    /*00016a30*/ LDR         R3, [PC, #156]              @ 0x0000000000016ad4 
    /*00016a34*/ MOV         R0, #7 
    /*00016a38*/ BL          0x0000000000016A38          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016a3c*/ LDR         R0, [R4] 
    /*00016a40*/ BL          0x0000000000016A40          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00016a44*/ MOV         R3, #0 
    /*00016a48*/ STR         R3, [R4] 
    GDC_DrvDeInitBuf_x16a4c:
    /*00016a4c*/ LDRD        R0, [R4, #16] 
    /*00016a50*/ LDR         R2, [R4, #24] 
    /*00016a54*/ BL          0x0000000000016A54          @ CMPI_MmzFree [R_ARM_CALL: +0x0] 
    /*00016a58*/ MOV         R0, #0 
    /*00016a5c*/ MOV         R1, #0 
    /*00016a60*/ MOV         R3, #0 
    /*00016a64*/ STRD        R0, [R4, #16] 
    /*00016a68*/ STR         R3, [R4, #24] 
    /*00016a6c*/ ADD         SP, SP, #8 
    /*00016a70*/ POP         {R4, R5, R6, PC} 
    GDC_DrvDeInitBuf_x16a74:
    /*00016a74*/ MOVW        R3, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5ea0] 
    /*00016a78*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e4c] 
    /*00016a7c*/ MOVT        R3, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5ea0] 
    /*00016a80*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e4c] 
    /*00016a84*/ MOV         R2, #524                    @ 0x20c 
    /*00016a88*/ LDR         R1, [PC, #72]               @ 0x0000000000016ad8 
    /*00016a8c*/ BL          0x0000000000016A8C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00016a90*/ B           GDC_DrvDeInitBuf_x169fc
    GDC_DrvDeInitBuf_x16a94:
    /*00016a94*/ MOVW        R3, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e3c] 
    /*00016a98*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e4c] 
    /*00016a9c*/ MOVT        R3, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e3c] 
    /*00016aa0*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e4c] 
    /*00016aa4*/ MOVW        R2, #522                    @ 0x20a 
    /*00016aa8*/ LDR         R1, [PC, #40]               @ 0x0000000000016ad8 
    /*00016aac*/ BL          0x0000000000016AAC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00016ab0*/ B           GDC_DrvDeInitBuf_x169ec
    GDC_DrvDeInitBuf_x16ab4:
    /*00016ab4*/ MOVW        R3, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e8c] 
    /*00016ab8*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e4c] 
    /*00016abc*/ MOVT        R3, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e8c] 
    /*00016ac0*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e4c] 
    /*00016ac4*/ MOVW        R2, #523                    @ 0x20b 
    /*00016ac8*/ LDR         R1, [PC, #8]                @ 0x0000000000016ad8 
    /*00016acc*/ BL          0x0000000000016ACC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00016ad0*/ B           GDC_DrvDeInitBuf_x169f4
    /*00016ad4*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
    /*00016ad8*/ @           <UNDEFINED> instruction: 0x00000ebc 
FUNC_END GDC_DrvDeInitBuf


FUNC_BEGIN GDC_DrvPutNodeToFreeList
    /*00016adc*/ LDR         R3, [R0, #8] 
    /*00016ae0*/ ADD         R2, R0, #4 
    /*00016ae4*/ STR         R1, [R0, #8] 
    /*00016ae8*/ STM         R1, {R2, R3} 
    /*00016aec*/ STR         R1, [R3] 
    /*00016af0*/ LDR         R3, [R0, #28] 
    /*00016af4*/ ADD         R3, R3, #1 
    /*00016af8*/ STR         R3, [R0, #28] 
    /*00016afc*/ BX          LR 
FUNC_END GDC_DrvPutNodeToFreeList


FUNC_BEGIN GDC_DrvQueryFreeNodeNum
    /*00016b00*/ LDR         R0, [R0, #28] 
    /*00016b04*/ BX          LR 
FUNC_END GDC_DrvQueryFreeNodeNum


FUNC_BEGIN GDC_DrvGetNodeFromFreeList
    /*00016b08*/ MOV         R3, R0 
    /*00016b0c*/ PUSH        {R4, R5, LR} 
    /*00016b10*/ SUB         SP, SP, #12 
    /*00016b14*/ LDR         R4, [R3, #4]! 
    /*00016b18*/ CMP         R4, R3 
    /*00016b1c*/ BEQ         GDC_DrvGetNodeFromFreeList_x16b88
    /*00016b20*/ CMP         R4, #0 
    /*00016b24*/ MOV         R5, R0 
    /*00016b28*/ BEQ         GDC_DrvGetNodeFromFreeList_x16b68
    GDC_DrvGetNodeFromFreeList_x16b2c:
    /*00016b2c*/ LDR         R1, [R4, #4] 
    /*00016b30*/ MOV         R2, #256                    @ 0x100 
    /*00016b34*/ LDR         IP, [R4] 
    /*00016b38*/ MOVT        R2, #16 
    /*00016b3c*/ MOV         R3, #512                    @ 0x200 
    /*00016b40*/ MOVT        R3, #32 
    /*00016b44*/ MOV         R0, R4 
    /*00016b48*/ STR         R1, [IP, #4] 
    /*00016b4c*/ STR         IP, [R1] 
    /*00016b50*/ STM         R4, {R2, R3} 
    /*00016b54*/ LDR         R3, [R5, #28] 
    /*00016b58*/ SUB         R3, R3, #1 
    /*00016b5c*/ STR         R3, [R5, #28] 
    GDC_DrvGetNodeFromFreeList_x16b60:
    /*00016b60*/ ADD         SP, SP, #12 
    /*00016b64*/ POP         {R4, R5, PC} 
    GDC_DrvGetNodeFromFreeList_x16b68:
    /*00016b68*/ MOVW        R3, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5ee4] 
    /*00016b6c*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e4c] 
    /*00016b70*/ MOVT        R3, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5ee4] 
    /*00016b74*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e4c] 
    /*00016b78*/ MOV         R2, #560                    @ 0x230 
    /*00016b7c*/ LDR         R1, [PC, #44]               @ 0x0000000000016bb0 
    /*00016b80*/ BL          0x0000000000016B80          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00016b84*/ B           GDC_DrvGetNodeFromFreeList_x16b2c
    GDC_DrvGetNodeFromFreeList_x16b88:
    /*00016b88*/ MOVW        R3, #555                    @ 0x22b 
    /*00016b8c*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5eb4] 
    /*00016b90*/ STR         R3, [SP] 
    /*00016b94*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5eb4] 
    /*00016b98*/ LDR         R3, [PC, #16]               @ 0x0000000000016bb0 
    /*00016b9c*/ MOV         R1, #37                     @ 0x25 
    /*00016ba0*/ MOV         R0, #4 
    /*00016ba4*/ BL          0x0000000000016BA4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016ba8*/ MOV         R0, #0 
    /*00016bac*/ B           GDC_DrvGetNodeFromFreeList_x16b60
    /*00016bb0*/ ANDEQ       R0, R0, R8, ROR #29 
FUNC_END GDC_DrvGetNodeFromFreeList


FUNC_BEGIN GDC_DrvPutNodeToTask
    /*00016bb4*/ LDR         R3, [R1, #12] 
    /*00016bb8*/ ADD         R2, R1, #8 
    /*00016bbc*/ STR         R0, [R1, #12] 
    /*00016bc0*/ STM         R0, {R2, R3} 
    /*00016bc4*/ STR         R0, [R3] 
    /*00016bc8*/ BX          LR 
FUNC_END GDC_DrvPutNodeToTask


FUNC_BEGIN GDC_DrvGetNodeFromTask
    /*00016bcc*/ LDR         R2, [R0, #8] 
    /*00016bd0*/ ADD         R3, R0, #8 
    /*00016bd4*/ CMP         R2, R3 
    /*00016bd8*/ BEQ         GDC_DrvGetNodeFromTask_x16c04
    /*00016bdc*/ LDR         R0, [R1, #4] 
    /*00016be0*/ MOV         R2, #256                    @ 0x100 
    /*00016be4*/ LDR         IP, [R1] 
    /*00016be8*/ MOVT        R2, #16 
    /*00016bec*/ MOV         R3, #512                    @ 0x200 
    /*00016bf0*/ MOVT        R3, #32 
    /*00016bf4*/ STR         R0, [IP, #4] 
    /*00016bf8*/ STR         IP, [R0] 
    /*00016bfc*/ STM         R1, {R2, R3} 
    /*00016c00*/ BX          LR 
    GDC_DrvGetNodeFromTask_x16c04:
    /*00016c04*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00016c08*/ SUB         SP, SP, #12 
    /*00016c0c*/ MOVW        R3, #582                    @ 0x246 
    /*00016c10*/ MOV         R1, #37                     @ 0x25 
    /*00016c14*/ STR         R3, [SP] 
    /*00016c18*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5ef8] 
    /*00016c1c*/ LDR         R3, [PC, #16]               @ 0x0000000000016c34 
    /*00016c20*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5ef8] 
    /*00016c24*/ MOV         R0, #0 
    /*00016c28*/ BL          0x0000000000016C28          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016c2c*/ ADD         SP, SP, #12 
    /*00016c30*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00016c34*/ ANDEQ       R0, R0, R4, LSL #30 
FUNC_END GDC_DrvGetNodeFromTask


FUNC_BEGIN GDC_DrvQueryFreeTaskNum
    /*00016c38*/ LDR         R0, [R0, #12] 
    /*00016c3c*/ BX          LR 
FUNC_END GDC_DrvQueryFreeTaskNum


FUNC_BEGIN GDC_DrvGetTaskFromFreeList
    /*00016c40*/ MOV         R3, R0 
    /*00016c44*/ PUSH        {R4, R5, LR} 
    /*00016c48*/ SUB         SP, SP, #12 
    /*00016c4c*/ LDR         R4, [R3, #4]! 
    /*00016c50*/ CMP         R4, R3 
    /*00016c54*/ BEQ         GDC_DrvGetTaskFromFreeList_x16cc0
    /*00016c58*/ CMP         R4, #0 
    /*00016c5c*/ MOV         R5, R0 
    /*00016c60*/ BEQ         GDC_DrvGetTaskFromFreeList_x16ca0
    GDC_DrvGetTaskFromFreeList_x16c64:
    /*00016c64*/ LDR         R1, [R4, #4] 
    /*00016c68*/ MOV         R2, #256                    @ 0x100 
    /*00016c6c*/ LDR         IP, [R4] 
    /*00016c70*/ MOVT        R2, #16 
    /*00016c74*/ MOV         R3, #512                    @ 0x200 
    /*00016c78*/ MOVT        R3, #32 
    /*00016c7c*/ MOV         R0, R4 
    /*00016c80*/ STR         R1, [IP, #4] 
    /*00016c84*/ STR         IP, [R1] 
    /*00016c88*/ STM         R4, {R2, R3} 
    /*00016c8c*/ LDR         R3, [R5, #12] 
    /*00016c90*/ SUB         R3, R3, #1 
    /*00016c94*/ STR         R3, [R5, #12] 
    GDC_DrvGetTaskFromFreeList_x16c98:
    /*00016c98*/ ADD         SP, SP, #12 
    /*00016c9c*/ POP         {R4, R5, PC} 
    GDC_DrvGetTaskFromFreeList_x16ca0:
    /*00016ca0*/ MOVW        R3, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5ee4] 
    /*00016ca4*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e4c] 
    /*00016ca8*/ MOVT        R3, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5ee4] 
    /*00016cac*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e4c] 
    /*00016cb0*/ MOVW        R2, #611                    @ 0x263 
    /*00016cb4*/ LDR         R1, [PC, #44]               @ 0x0000000000016ce8 
    /*00016cb8*/ BL          0x0000000000016CB8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00016cbc*/ B           GDC_DrvGetTaskFromFreeList_x16c64
    GDC_DrvGetTaskFromFreeList_x16cc0:
    /*00016cc0*/ MOVW        R3, #606                    @ 0x25e 
    /*00016cc4*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5f2c] 
    /*00016cc8*/ STR         R3, [SP] 
    /*00016ccc*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5f2c] 
    /*00016cd0*/ LDR         R3, [PC, #16]               @ 0x0000000000016ce8 
    /*00016cd4*/ MOV         R1, #37                     @ 0x25 
    /*00016cd8*/ MOV         R0, #4 
    /*00016cdc*/ BL          0x0000000000016CDC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016ce0*/ MOV         R0, #0 
    /*00016ce4*/ B           GDC_DrvGetTaskFromFreeList_x16c98
    /*00016ce8*/ ANDEQ       R0, R0, IP, LSL PC 
FUNC_END GDC_DrvGetTaskFromFreeList


FUNC_BEGIN GDC_DrvPutTaskToFreeList
    /*00016cec*/ LDR         R3, [R0, #8] 
    /*00016cf0*/ ADD         R2, R0, #4 
    /*00016cf4*/ STR         R1, [R0, #8] 
    /*00016cf8*/ STM         R1, {R2, R3} 
    /*00016cfc*/ STR         R1, [R3] 
    /*00016d00*/ LDR         R3, [R0, #12] 
    /*00016d04*/ ADD         R3, R3, #1 
    /*00016d08*/ STR         R3, [R0, #12] 
    /*00016d0c*/ BX          LR 
FUNC_END GDC_DrvPutTaskToFreeList


FUNC_BEGIN GDC_DrvGetTaskFromJob
    /*00016d10*/ PUSH        {R4, R5, LR} 
    /*00016d14*/ SUBS        R4, R0, #0 
    /*00016d18*/ SUB         SP, SP, #12 
    /*00016d1c*/ MOV         R5, R1 
    /*00016d20*/ BEQ         GDC_DrvGetTaskFromJob_x16d6c
    GDC_DrvGetTaskFromJob_x16d24:
    /*00016d24*/ LDR         R2, [R4, #12] 
    /*00016d28*/ ADD         R3, R4, #12 
    /*00016d2c*/ CMP         R2, R3 
    /*00016d30*/ BEQ         GDC_DrvGetTaskFromJob_x16d8c
    /*00016d34*/ LDR         R1, [R5, #4] 
    /*00016d38*/ MOV         R2, #256                    @ 0x100 
    /*00016d3c*/ LDR         R0, [R5] 
    /*00016d40*/ MOVT        R2, #16 
    /*00016d44*/ MOV         R3, #512                    @ 0x200 
    /*00016d48*/ MOVT        R3, #32 
    /*00016d4c*/ STR         R1, [R0, #4] 
    /*00016d50*/ STR         R0, [R1] 
    /*00016d54*/ STM         R5, {R2, R3} 
    /*00016d58*/ LDR         R3, [R4, #24] 
    /*00016d5c*/ SUB         R3, R3, #1 
    /*00016d60*/ STR         R3, [R4, #24] 
    GDC_DrvGetTaskFromJob_x16d64:
    /*00016d64*/ ADD         SP, SP, #12 
    /*00016d68*/ POP         {R4, R5, PC} 
    GDC_DrvGetTaskFromJob_x16d6c:
    /*00016d6c*/ MOVW        R3, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5f5c] 
    /*00016d70*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e4c] 
    /*00016d74*/ MOVT        R3, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5f5c] 
    /*00016d78*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e4c] 
    /*00016d7c*/ MOV         R2, #632                    @ 0x278 
    /*00016d80*/ LDR         R1, [PC, #44]               @ 0x0000000000016db4 
    /*00016d84*/ BL          0x0000000000016D84          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00016d88*/ B           GDC_DrvGetTaskFromJob_x16d24
    GDC_DrvGetTaskFromJob_x16d8c:
    /*00016d8c*/ MOV         R3, #636                    @ 0x27c 
    /*00016d90*/ STR         R4, [SP, #4] 
    /*00016d94*/ STR         R3, [SP] 
    /*00016d98*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5f6c] 
    /*00016d9c*/ LDR         R3, [PC, #16]               @ 0x0000000000016db4 
    /*00016da0*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5f6c] 
    /*00016da4*/ MOV         R1, #37                     @ 0x25 
    /*00016da8*/ MOV         R0, #4 
    /*00016dac*/ BL          0x0000000000016DAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016db0*/ B           GDC_DrvGetTaskFromJob_x16d64
    /*00016db4*/ ANDEQ       R0, R0, R8, LSR PC 
FUNC_END GDC_DrvGetTaskFromJob


FUNC_BEGIN GDC_DrvPutTaskToJob
    /*00016db8*/ LDR         R3, [R1, #16] 
    /*00016dbc*/ ADD         R2, R1, #12 
    /*00016dc0*/ STR         R0, [R1, #16] 
    /*00016dc4*/ STM         R0, {R2, R3} 
    /*00016dc8*/ STR         R0, [R3] 
    /*00016dcc*/ LDR         R3, [R1, #24] 
    /*00016dd0*/ ADD         R3, R3, #1 
    /*00016dd4*/ STR         R3, [R1, #24] 
    /*00016dd8*/ BX          LR 
FUNC_END GDC_DrvPutTaskToJob


FUNC_BEGIN GDC_DrvQueryFreeJobNum
    /*00016ddc*/ LDR         R0, [R0, #72]               @ 0x48 
    /*00016de0*/ BX          LR 
FUNC_END GDC_DrvQueryFreeJobNum


FUNC_BEGIN GDC_DrvGetJobFromFreeList
    /*00016de4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00016de8*/ ADD         R3, R0, #8 
    /*00016dec*/ LDR         R2, [R0, #8] 
    /*00016df0*/ SUB         SP, SP, #12 
    /*00016df4*/ CMP         R2, R3 
    /*00016df8*/ BEQ         GDC_DrvGetJobFromFreeList_x16e34
    /*00016dfc*/ LDR         IP, [R1, #4] 
    /*00016e00*/ MOV         R2, #256                    @ 0x100 
    /*00016e04*/ LDR         LR, [R1] 
    /*00016e08*/ MOVT        R2, #16 
    /*00016e0c*/ MOV         R3, #512                    @ 0x200 
    /*00016e10*/ MOVT        R3, #32 
    /*00016e14*/ STR         IP, [LR, #4] 
    /*00016e18*/ STR         LR, [IP] 
    /*00016e1c*/ STM         R1, {R2, R3} 
    /*00016e20*/ LDR         R3, [R0, #72]               @ 0x48 
    /*00016e24*/ SUB         R3, R3, #1 
    /*00016e28*/ STR         R3, [R0, #72]               @ 0x48 
    GDC_DrvGetJobFromFreeList_x16e2c:
    /*00016e2c*/ ADD         SP, SP, #12 
    /*00016e30*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    GDC_DrvGetJobFromFreeList_x16e34:
    /*00016e34*/ MOV         R3, #668                    @ 0x29c 
    /*00016e38*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5fa4] 
    /*00016e3c*/ STR         R3, [SP] 
    /*00016e40*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5fa4] 
    /*00016e44*/ LDR         R3, [PC, #12]               @ 0x0000000000016e58 
    /*00016e48*/ MOV         R1, #37                     @ 0x25 
    /*00016e4c*/ MOV         R0, #0 
    /*00016e50*/ BL          0x0000000000016E50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016e54*/ B           GDC_DrvGetJobFromFreeList_x16e2c
    /*00016e58*/ ANDEQ       R0, R0, R0, ASR PC 
FUNC_END GDC_DrvGetJobFromFreeList


FUNC_BEGIN GDC_DrvPutJobToFreeList
    /*00016e5c*/ LDR         R2, [R0, #12] 
    /*00016e60*/ ADD         R3, R0, #8 
    /*00016e64*/ STR         R1, [R0, #12] 
    /*00016e68*/ MVN         IP, #0 
    /*00016e6c*/ STR         R3, [R1] 
    /*00016e70*/ MOV         R3, #0 
    /*00016e74*/ STR         R2, [R1, #4] 
    /*00016e78*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00016e7c*/ MOV         LR, #60                     @ 0x3c 
    /*00016e80*/ STR         R1, [R2] 
    /*00016e84*/ STR         LR, [R1, #28] 
    /*00016e88*/ STR         IP, [R1, #44]               @ 0x2c 
    /*00016e8c*/ STR         R3, [R1, #24] 
    /*00016e90*/ STR         R3, [R1, #20] 
    /*00016e94*/ STR         R3, [R1, #48]               @ 0x30 
    /*00016e98*/ STR         R3, [R1, #60]               @ 0x3c 
    /*00016e9c*/ LDR         R3, [R0, #72]               @ 0x48 
    /*00016ea0*/ ADD         R3, R3, #1 
    /*00016ea4*/ STR         R3, [R0, #72]               @ 0x48 
    /*00016ea8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END GDC_DrvPutJobToFreeList


FUNC_BEGIN GDC_DrvQueryWaitJobNum
    /*00016eac*/ LDR         R0, [R0, #76]               @ 0x4c 
    /*00016eb0*/ BX          LR 
FUNC_END GDC_DrvQueryWaitJobNum


FUNC_BEGIN GDC_DrvGetJobFromWaitList
    /*00016eb4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00016eb8*/ ADD         R3, R0, #16 
    /*00016ebc*/ LDR         R2, [R0, #16] 
    /*00016ec0*/ SUB         SP, SP, #12 
    /*00016ec4*/ CMP         R2, R3 
    /*00016ec8*/ BEQ         GDC_DrvGetJobFromWaitList_x16f04
    /*00016ecc*/ LDR         IP, [R1, #4] 
    /*00016ed0*/ MOV         R2, #256                    @ 0x100 
    /*00016ed4*/ LDR         LR, [R1] 
    /*00016ed8*/ MOVT        R2, #16 
    /*00016edc*/ MOV         R3, #512                    @ 0x200 
    /*00016ee0*/ MOVT        R3, #32 
    /*00016ee4*/ STR         IP, [LR, #4] 
    /*00016ee8*/ STR         LR, [IP] 
    /*00016eec*/ STM         R1, {R2, R3} 
    /*00016ef0*/ LDR         R3, [R0, #76]               @ 0x4c 
    /*00016ef4*/ SUB         R3, R3, #1 
    /*00016ef8*/ STR         R3, [R0, #76]               @ 0x4c 
    GDC_DrvGetJobFromWaitList_x16efc:
    /*00016efc*/ ADD         SP, SP, #12 
    /*00016f00*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    GDC_DrvGetJobFromWaitList_x16f04:
    /*00016f04*/ MOVW        R3, #711                    @ 0x2c7 
    /*00016f08*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5fd8] 
    /*00016f0c*/ STR         R3, [SP] 
    /*00016f10*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5fd8] 
    /*00016f14*/ LDR         R3, [PC, #12]               @ 0x0000000000016f28 
    /*00016f18*/ MOV         R1, #37                     @ 0x25 
    /*00016f1c*/ MOV         R0, #0 
    /*00016f20*/ BL          0x0000000000016F20          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016f24*/ B           GDC_DrvGetJobFromWaitList_x16efc
    /*00016f28*/ ANDEQ       R0, R0, IP, ROR #30 
FUNC_END GDC_DrvGetJobFromWaitList


FUNC_BEGIN GDC_DrvPutJobToWaitList
    /*00016f2c*/ LDR         R3, [R0, #20] 
    /*00016f30*/ ADD         R2, R0, #16 
    /*00016f34*/ STR         R1, [R0, #20] 
    /*00016f38*/ STM         R1, {R2, R3} 
    /*00016f3c*/ STR         R1, [R3] 
    /*00016f40*/ LDR         R3, [R0, #76]               @ 0x4c 
    /*00016f44*/ ADD         R3, R3, #1 
    /*00016f48*/ STR         R3, [R0, #76]               @ 0x4c 
    /*00016f4c*/ BX          LR 
FUNC_END GDC_DrvPutJobToWaitList


FUNC_BEGIN GDC_DrvPutJobToProcFreeList
    /*00016f50*/ LDR         R3, [R0, #36]               @ 0x24 
    /*00016f54*/ ADD         R2, R0, #32 
    /*00016f58*/ STR         R1, [R0, #36]               @ 0x24 
    /*00016f5c*/ STM         R1, {R2, R3} 
    /*00016f60*/ STR         R1, [R3] 
    /*00016f64*/ LDR         R3, [R0, #84]               @ 0x54 
    /*00016f68*/ ADD         R3, R3, #1 
    /*00016f6c*/ STR         R3, [R0, #84]               @ 0x54 
    /*00016f70*/ BX          LR 
FUNC_END GDC_DrvPutJobToProcFreeList


FUNC_BEGIN GDC_DrvGetJobFromBusyList
    /*00016f74*/ PUSH        {R4, R5, LR} 
    /*00016f78*/ LSL         R4, R2, #1 
    /*00016f7c*/ ADD         LR, R4, R3 
    /*00016f80*/ ADD         IP, R3, #5 
    /*00016f84*/ ADD         R5, LR, #5 
    /*00016f88*/ ADD         IP, IP, R4 
    /*00016f8c*/ SUB         SP, SP, #20 
    /*00016f90*/ LDR         R4, [R0, R5, LSL #3] 
    /*00016f94*/ ADD         IP, R0, IP, LSL #3 
    /*00016f98*/ CMP         R4, IP 
    /*00016f9c*/ BEQ         GDC_DrvGetJobFromBusyList_x16fe8
    /*00016fa0*/ LDR         IP, [R1, #4] 
    /*00016fa4*/ ADD         LR, R0, LR, LSL #2 
    /*00016fa8*/ LDR         R4, [R1] 
    /*00016fac*/ MOV         R2, #256                    @ 0x100 
    /*00016fb0*/ MOV         R3, #512                    @ 0x200 
    /*00016fb4*/ MOVT        R2, #16 
    /*00016fb8*/ MOVT        R3, #32 
    /*00016fbc*/ STR         IP, [R4, #4] 
    /*00016fc0*/ STR         R4, [IP] 
    /*00016fc4*/ STM         R1, {R2, R3} 
    /*00016fc8*/ LDR         R3, [LR, #88]               @ 0x58 
    /*00016fcc*/ SUB         R3, R3, #1 
    /*00016fd0*/ STR         R3, [LR, #88]               @ 0x58 
    /*00016fd4*/ LDR         R3, [R0, #104]              @ 0x68 
    /*00016fd8*/ SUB         R3, R3, #1 
    /*00016fdc*/ STR         R3, [R0, #104]              @ 0x68 
    GDC_DrvGetJobFromBusyList_x16fe0:
    /*00016fe0*/ ADD         SP, SP, #20 
    /*00016fe4*/ POP         {R4, R5, PC} 
    GDC_DrvGetJobFromBusyList_x16fe8:
    /*00016fe8*/ STR         R3, [SP, #8] 
    /*00016fec*/ MOV         R1, #37                     @ 0x25 
    /*00016ff0*/ MOVW        R3, #781                    @ 0x30d 
    /*00016ff4*/ STR         R2, [SP, #4] 
    /*00016ff8*/ STR         R3, [SP] 
    /*00016ffc*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6004] 
    /*00017000*/ LDR         R3, [PC, #12]               @ 0x0000000000017014 
    /*00017004*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6004] 
    /*00017008*/ MOV         R0, #0 
    /*0001700c*/ BL          0x000000000001700C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017010*/ B           GDC_DrvGetJobFromBusyList_x16fe0
    /*00017014*/ ANDEQ       R0, R0, R8, LSL #31 
FUNC_END GDC_DrvGetJobFromBusyList


FUNC_BEGIN GDC_DrvPutJobToBusyList
    /*00017018*/ LSL         R2, R2, #1 
    /*0001701c*/ ADD         IP, R3, R2 
    /*00017020*/ ADD         R3, R3, #5 
    /*00017024*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00017028*/ ADD         LR, R0, IP, LSL #3 
    /*0001702c*/ ADD         R3, R3, R2 
    /*00017030*/ ADD         IP, R0, IP, LSL #2 
    /*00017034*/ LDR         R2, [LR, #44]               @ 0x2c 
    /*00017038*/ ADD         R3, R0, R3, LSL #3 
    /*0001703c*/ STR         R1, [LR, #44]               @ 0x2c 
    /*00017040*/ STR         R3, [R1] 
    /*00017044*/ STR         R2, [R1, #4] 
    /*00017048*/ STR         R1, [R2] 
    /*0001704c*/ LDR         R3, [IP, #88]               @ 0x58 
    /*00017050*/ ADD         R3, R3, #1 
    /*00017054*/ STR         R3, [IP, #88]               @ 0x58 
    /*00017058*/ LDR         R3, [R0, #104]              @ 0x68 
    /*0001705c*/ ADD         R3, R3, #1 
    /*00017060*/ STR         R3, [R0, #104]              @ 0x68 
    /*00017064*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END GDC_DrvPutJobToBusyList


FUNC_BEGIN GDC_DrvQueryBusyJobNum
    /*00017068*/ ADD         R2, R2, R1, LSL #1 
    /*0001706c*/ ADD         R2, R2, #22 
    /*00017070*/ LDR         R0, [R0, R2, LSL #2] 
    /*00017074*/ BX          LR 
FUNC_END GDC_DrvQueryBusyJobNum


FUNC_BEGIN GDC_DrvQueryBusyTotalJobNum
    /*00017078*/ LDR         R0, [R0, #104]              @ 0x68 
    /*0001707c*/ BX          LR 
FUNC_END GDC_DrvQueryBusyTotalJobNum


FUNC_BEGIN GetPixFormatInfo.part.0
    /*00017080*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x604c] 
    /*00017084*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xfa4] 
    /*00017088*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6050] 
    /*0001708c*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x604c] 
    /*00017090*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xfa4] 
    /*00017094*/ MOV         R2, #820                    @ 0x334 
    /*00017098*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6050] 
    GetPixFormatInfo.part.0_x1709c:
    /*0001709c*/ B           GetPixFormatInfo.part.0_x1709c@ osal_panic [R_ARM_JUMP24: +0x0] 
FUNC_END GetPixFormatInfo.part.0


FUNC_BEGIN GDC_DRV_RequestIrq
    /*000170a0*/ PUSH        {R4, R5, LR} 
    /*000170a4*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0x154] 
    /*000170a8*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0x154] 
    /*000170ac*/ SUB         SP, SP, #12 
    /*000170b0*/ MOV         R5, R0 
    /*000170b4*/ LDR         R3, [R4] 
    /*000170b8*/ CMP         R3, #0 
    /*000170bc*/ BEQ         GDC_DRV_RequestIrq_x170e4
    /*000170c0*/ LDR         R0, [R4, #4] 
    /*000170c4*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6090] 
    /*000170c8*/ STR         R5, [SP] 
    /*000170cc*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6090] 
    /*000170d0*/ MOV         R2, #0 
    /*000170d4*/ MOV         R1, R5 
    /*000170d8*/ BL          0x00000000000170D8          @ osal_request_irq [R_ARM_CALL: +0x0] 
    /*000170dc*/ CMP         R0, #0 
    /*000170e0*/ BNE         GDC_DRV_RequestIrq_x17110
    GDC_DRV_RequestIrq_x170e4:
    /*000170e4*/ LDR         R0, [R4, #8] 
    /*000170e8*/ MOV         R1, R5 
    /*000170ec*/ STR         R5, [SP] 
    /*000170f0*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x60cc] 
    /*000170f4*/ MOV         R2, #0 
    /*000170f8*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x60cc] 
    /*000170fc*/ BL          0x00000000000170FC          @ osal_request_irq [R_ARM_CALL: +0x0] 
    /*00017100*/ CMP         R0, #0 
    /*00017104*/ BNE         GDC_DRV_RequestIrq_x1713c
    GDC_DRV_RequestIrq_x17108:
    /*00017108*/ ADD         SP, SP, #12 
    /*0001710c*/ POP         {R4, R5, PC} 
    GDC_DRV_RequestIrq_x17110:
    /*00017110*/ MOV         R0, #0 
    /*00017114*/ MOV         R3, #139                    @ 0x8b 
    /*00017118*/ STR         R0, [SP, #4] 
    /*0001711c*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6094] 
    /*00017120*/ STR         R3, [SP] 
    /*00017124*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6094] 
    /*00017128*/ LDR         R3, [PC, #52]               @ 0x0000000000017164 
    /*0001712c*/ MOV         R1, #37                     @ 0x25 
    /*00017130*/ BL          0x0000000000017130          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017134*/ MVN         R0, #0 
    /*00017138*/ B           GDC_DRV_RequestIrq_x17108
    GDC_DRV_RequestIrq_x1713c:
    /*0001713c*/ MOV         R3, #147                    @ 0x93 
    /*00017140*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x60d8] 
    /*00017144*/ STR         R3, [SP] 
    /*00017148*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x60d8] 
    /*0001714c*/ LDR         R3, [PC, #16]               @ 0x0000000000017164 
    /*00017150*/ MOV         R1, #37                     @ 0x25 
    /*00017154*/ MOV         R0, #0 
    /*00017158*/ BL          0x0000000000017158          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001715c*/ MVN         R0, #0 
    /*00017160*/ B           GDC_DRV_RequestIrq_x17108
    /*00017164*/ @           <UNDEFINED> instruction: 0x00000fb8 
FUNC_END GDC_DRV_RequestIrq


FUNC_BEGIN GDC_DRV_FreeInterPoleCoefAddr
    /*00017168*/ PUSH        {R4, LR} 
    /*0001716c*/ BL          0x000000000001716C          @ CMPI_MmzFree [R_ARM_CALL: +0x0] 
    /*00017170*/ MOV         R0, #0 
    /*00017174*/ POP         {R4, PC} 
FUNC_END GDC_DRV_FreeInterPoleCoefAddr


FUNC_BEGIN GDC_DRV_MallocInterPoleCoefAddr
    /*00017178*/ PUSH        {R4, R5, R6, LR} 
    /*0001717c*/ SUB         SP, SP, #8 
    /*00017180*/ MOV         R2, R0 
    /*00017184*/ MOV         R3, R1 
    /*00017188*/ MOV         R5, R1 
    /*0001718c*/ MOV         R6, #4096                   @ 0x1000 
    /*00017190*/ MOVW        R1, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6110] 
    /*00017194*/ STR         R6, [SP] 
    /*00017198*/ MOVT        R1, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6110] 
    /*0001719c*/ MOV         R0, #0 
    /*000171a0*/ BL          0x00000000000171A0          @ CMPI_MmzMallocNocache [R_ARM_CALL: +0x0] 
    /*000171a4*/ SUBS        R4, R0, #0 
    /*000171a8*/ BNE         GDC_DRV_MallocInterPoleCoefAddr_x171c8
    /*000171ac*/ MOV         R2, R6 
    /*000171b0*/ LDR         R0, [R5] 
    /*000171b4*/ MOV         R1, R4 
    /*000171b8*/ BL          0x00000000000171B8          @ osal_memset [R_ARM_CALL: +0x0] 
    GDC_DRV_MallocInterPoleCoefAddr_x171bc:
    /*000171bc*/ MOV         R0, R4 
    /*000171c0*/ ADD         SP, SP, #8 
    /*000171c4*/ POP         {R4, R5, R6, PC} 
    GDC_DRV_MallocInterPoleCoefAddr_x171c8:
    /*000171c8*/ MOV         R3, #170                    @ 0xaa 
    /*000171cc*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6120] 
    /*000171d0*/ STR         R3, [SP] 
    /*000171d4*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6120] 
    /*000171d8*/ LDR         R3, [PC, #16]               @ 0x00000000000171f0 
    /*000171dc*/ MOV         R1, #37                     @ 0x25 
    /*000171e0*/ MOV         R0, #0 
    /*000171e4*/ MVN         R4, #0 
    /*000171e8*/ BL          0x00000000000171E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000171ec*/ B           GDC_DRV_MallocInterPoleCoefAddr_x171bc
    /*000171f0*/ ANDEQ       R0, R0, IP, ASR #31 
FUNC_END GDC_DRV_MallocInterPoleCoefAddr


FUNC_BEGIN GDC_DRV_MallocAngleVelAddr
    /*000171f4*/ PUSH        {R4, R5, R6, LR} 
    /*000171f8*/ SUB         SP, SP, #8 
    /*000171fc*/ MOV         R2, R0 
    /*00017200*/ MOV         R3, R1 
    /*00017204*/ MOV         R5, R1 
    /*00017208*/ MOV         R6, #2304                   @ 0x900 
    /*0001720c*/ MOVW        R1, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x615c] 
    /*00017210*/ STR         R6, [SP] 
    /*00017214*/ MOVT        R1, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x615c] 
    /*00017218*/ MOV         R0, #0 
    /*0001721c*/ BL          0x000000000001721C          @ CMPI_MmzMallocNocache [R_ARM_CALL: +0x0] 
    /*00017220*/ SUBS        R4, R0, #0 
    /*00017224*/ BNE         GDC_DRV_MallocAngleVelAddr_x17244
    /*00017228*/ MOV         R2, R6 
    /*0001722c*/ LDR         R0, [R5] 
    /*00017230*/ MOV         R1, R4 
    /*00017234*/ BL          0x0000000000017234          @ osal_memset [R_ARM_CALL: +0x0] 
    GDC_DRV_MallocAngleVelAddr_x17238:
    /*00017238*/ MOV         R0, R4 
    /*0001723c*/ ADD         SP, SP, #8 
    /*00017240*/ POP         {R4, R5, R6, PC} 
    GDC_DRV_MallocAngleVelAddr_x17244:
    /*00017244*/ MOV         R3, #188                    @ 0xbc 
    /*00017248*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x616c] 
    /*0001724c*/ STR         R3, [SP] 
    /*00017250*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x616c] 
    /*00017254*/ LDR         R3, [PC, #16]               @ 0x000000000001726c 
    /*00017258*/ MOV         R1, #37                     @ 0x25 
    /*0001725c*/ MOV         R0, #0 
    /*00017260*/ MVN         R4, #0 
    /*00017264*/ BL          0x0000000000017264          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017268*/ B           GDC_DRV_MallocAngleVelAddr_x17238
    /*0001726c*/ ANDEQ       R0, R0, IP, ROR #31 
FUNC_END GDC_DRV_MallocAngleVelAddr


FUNC_BEGIN GDC_DRV_FreeAngleVelAddr
    /*00017270*/ PUSH        {R4, LR} 
    /*00017274*/ BL          0x0000000000017274          @ CMPI_MmzFree [R_ARM_CALL: +0x0] 
    /*00017278*/ MOV         R0, #0 
    /*0001727c*/ POP         {R4, PC} 
FUNC_END GDC_DRV_FreeAngleVelAddr


FUNC_BEGIN GDC_DRV_PerformaceLimit
    /*00017280*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00017284*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00017288*/ PUSH        {R4, R5, LR} 
    /*0001728c*/ SUB         SP, SP, #20 
    /*00017290*/ LDR         R3, [R3] 
    /*00017294*/ LDRB        R3, [R3, #40]               @ 0x28 
    /*00017298*/ SUB         R2, R3, #1 
    /*0001729c*/ CMP         R2, #1 
    /*000172a0*/ BLS         GDC_DRV_PerformaceLimit_x172c4
    /*000172a4*/ SUB         R2, R3, #5 
    /*000172a8*/ CMP         R2, #1 
    /*000172ac*/ BLS         GDC_DRV_PerformaceLimit_x173a0
    /*000172b0*/ CMP         R3, #0 
    /*000172b4*/ CMPNE       R3, #9 
    /*000172b8*/ BEQ         GDC_DRV_PerformaceLimit_x17350
    /*000172bc*/ CMP         R3, #12 
    /*000172c0*/ BEQ         GDC_DRV_PerformaceLimit_x173b8
    GDC_DRV_PerformaceLimit_x172c4:
    /*000172c4*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x1fe4] 
    /*000172c8*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x1fe4] 
    /*000172cc*/ MOV         R2, #2304                   @ 0x900 
    /*000172d0*/ STR         R2, [R3] 
    /*000172d4*/ STR         R2, [R3, #4] 
    GDC_DRV_PerformaceLimit_x172d8:
    /*000172d8*/ MOV         R0, #2 
    /*000172dc*/ MOV         R4, #0 
    /*000172e0*/ MOV         R5, #37                     @ 0x25 
    /*000172e4*/ STR         R4, [SP] 
    /*000172e8*/ STR         R4, [SP, #8] 
    /*000172ec*/ STR         R4, [SP, #12] 
    /*000172f0*/ STR         R5, [SP, #4] 
    /*000172f4*/ BL          0x00000000000172F4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000172f8*/ MOV         R2, SP 
    /*000172fc*/ MOV         R1, #206                    @ 0xce 
    /*00017300*/ LDR         R3, [R0, #20] 
    /*00017304*/ ADD         R0, SP, #4 
    /*00017308*/ BLX         R3 
    /*0001730c*/ LDR         R3, [SP] 
    /*00017310*/ CMP         R3, #2 
    /*00017314*/ BHI         GDC_DRV_PerformaceLimit_x17398
    /*00017318*/ MOV         R0, #2 
    /*0001731c*/ MOV         R3, #3 
    /*00017320*/ STR         R5, [SP, #4] 
    /*00017324*/ STR         R3, [SP] 
    /*00017328*/ STR         R4, [SP, #8] 
    /*0001732c*/ STR         R4, [SP, #12] 
    /*00017330*/ BL          0x0000000000017330          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00017334*/ MOV         R2, SP 
    /*00017338*/ MOV         R1, #207                    @ 0xcf 
    /*0001733c*/ LDR         R3, [R0, #20] 
    /*00017340*/ ADD         R0, SP, #4 
    /*00017344*/ BLX         R3 
    /*00017348*/ ADD         SP, SP, #20 
    /*0001734c*/ POP         {R4, R5, PC} 
    GDC_DRV_PerformaceLimit_x17350:
    /*00017350*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x1fe4] 
    /*00017354*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x1fe4] 
    /*00017358*/ MOV         R2, #4608                   @ 0x1200 
    /*0001735c*/ STR         R2, [R3] 
    /*00017360*/ STR         R2, [R3, #4] 
    GDC_DRV_PerformaceLimit_x17364:
    /*00017364*/ MOV         R0, #2 
    /*00017368*/ MOV         R3, #0 
    /*0001736c*/ MOV         R2, #37                     @ 0x25 
    /*00017370*/ STR         R3, [SP] 
    /*00017374*/ STR         R3, [SP, #8] 
    /*00017378*/ STR         R3, [SP, #12] 
    /*0001737c*/ STR         R2, [SP, #4] 
    /*00017380*/ BL          0x0000000000017380          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00017384*/ MOV         R2, SP 
    /*00017388*/ MOV         R1, #206                    @ 0xce 
    /*0001738c*/ LDR         R3, [R0, #20] 
    /*00017390*/ ADD         R0, SP, #4 
    /*00017394*/ BLX         R3 
    GDC_DRV_PerformaceLimit_x17398:
    /*00017398*/ ADD         SP, SP, #20 
    /*0001739c*/ POP         {R4, R5, PC} 
    GDC_DRV_PerformaceLimit_x173a0:
    /*000173a0*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x1fe4] 
    /*000173a4*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x1fe4] 
    /*000173a8*/ MOV         R2, #2688                   @ 0xa80 
    /*000173ac*/ STR         R2, [R3] 
    /*000173b0*/ STR         R2, [R3, #4] 
    /*000173b4*/ B           GDC_DRV_PerformaceLimit_x17364
    GDC_DRV_PerformaceLimit_x173b8:
    /*000173b8*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x1fe4] 
    /*000173bc*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x1fe4] 
    /*000173c0*/ MOV         R2, #4608                   @ 0x1200 
    /*000173c4*/ STR         R2, [R3] 
    /*000173c8*/ STR         R2, [R3, #4] 
    /*000173cc*/ B           GDC_DRV_PerformaceLimit_x172d8
FUNC_END GDC_DRV_PerformaceLimit


FUNC_BEGIN GDC_DRV_SetCmpReg
    /*000173d0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000173d4*/ MOV         R5, R0 
    /*000173d8*/ LDR         R6, [R1, #960]              @ 0x3c0 
    /*000173dc*/ MOV         R4, R1 
    /*000173e0*/ LDR         R8, [R1, #68]               @ 0x44 
    /*000173e4*/ LDR         R7, [R0, #360]              @ 0x168 
    /*000173e8*/ ADD         R0, R8, R6 
    /*000173ec*/ MOV         R1, R6 
    /*000173f0*/ SUB         R0, R0, #1 
    /*000173f4*/ BL          0x00000000000173F4          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*000173f8*/ MOV         R1, R6 
    /*000173fc*/ SUB         R3, R0, #1 
    /*00017400*/ MOV         R0, R8 
    /*00017404*/ BFI         R7, R3, #0, #16 
    /*00017408*/ BL          0x0000000000017408          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*0001740c*/ MOV         R0, #0 
    /*00017410*/ CMP         R1, #0 
    /*00017414*/ SUBNE       R1, R1, #1 
    /*00017418*/ SUBEQ       R6, R6, #1 
    /*0001741c*/ BFINE       R7, R1, #16, #5 
    /*00017420*/ BFIEQ       R7, R6, #16, #5 
    /*00017424*/ STR         R7, [R5, #360]              @ 0x168 
    /*00017428*/ LDR         R3, [R5, #1536]             @ 0x600 
    /*0001742c*/ LDR         IP, [R4, #96]               @ 0x60 
    /*00017430*/ LDR         R1, [R4, #116]              @ 0x74 
    /*00017434*/ LDR         R2, [R4, #100]              @ 0x64 
    /*00017438*/ BFI         R3, IP, #19, #3 
    /*0001743c*/ BFI         R3, R1, #18, #1 
    /*00017440*/ LDR         IP, [R4, #84]               @ 0x54 
    /*00017444*/ LDR         R1, [R4, #292]              @ 0x124 
    /*00017448*/ BFI         R3, R2, #17, #1 
    /*0001744c*/ BFI         R3, IP, #16, #1 
    /*00017450*/ LDR         R2, [R4, #288]              @ 0x120 
    /*00017454*/ LDR         IP, [R4, #112]              @ 0x70 
    /*00017458*/ BFI         R3, R1, #15, #1 
    /*0001745c*/ BFI         R3, R2, #12, #3 
    /*00017460*/ LDR         R1, [R4, #108]              @ 0x6c 
    /*00017464*/ LDR         R2, [R4, #104]              @ 0x68 
    /*00017468*/ BFI         R3, IP, #11, #1 
    /*0001746c*/ BFI         R3, R1, #6, #5 
    /*00017470*/ LDR         IP, [R4, #80]               @ 0x50 
    /*00017474*/ LDR         R1, [R4, #88]               @ 0x58 
    /*00017478*/ BFI         R3, R2, #5, #1 
    /*0001747c*/ BFI         R3, IP, #4, #1 
    /*00017480*/ LDR         R2, [R4, #92]               @ 0x5c 
    /*00017484*/ BFI         R3, R1, #3, #1 
    /*00017488*/ BFI         R3, R2, #1, #2 
    /*0001748c*/ ORR         R3, R3, #1 
    /*00017490*/ STR         R3, [R5, #1536]             @ 0x600 
    /*00017494*/ LDR         R1, [R4, #120]              @ 0x78 
    /*00017498*/ LDR         R3, [R5, #1540]             @ 0x604 
    /*0001749c*/ LDR         R2, [R4, #124]              @ 0x7c 
    /*000174a0*/ SUB         R1, R1, #1 
    /*000174a4*/ BFI         R3, R1, #0, #14 
    /*000174a8*/ SUB         R2, R2, #1 
    /*000174ac*/ BFI         R3, R2, #16, #14 
    /*000174b0*/ STR         R3, [R5, #1540]             @ 0x604 
    /*000174b4*/ LDR         R3, [R5, #1544]             @ 0x608 
    /*000174b8*/ LDR         IP, [R4, #240]              @ 0xf0 
    /*000174bc*/ LDR         R1, [R4, #236]              @ 0xec 
    /*000174c0*/ LDR         R2, [R4, #232]              @ 0xe8 
    /*000174c4*/ BFI         R3, IP, #20, #10 
    /*000174c8*/ BFI         R3, R1, #10, #10 
    /*000174cc*/ BFI         R3, R2, #0, #10 
    /*000174d0*/ STR         R3, [R5, #1544]             @ 0x608 
    /*000174d4*/ LDR         R2, [R4, #224]              @ 0xe0 
    /*000174d8*/ LDR         R3, [R5, #1548]             @ 0x60c 
    /*000174dc*/ LDR         IP, [R4, #220]              @ 0xdc 
    /*000174e0*/ BFI         R3, R2, #24, #4 
    /*000174e4*/ LDR         R1, [R4, #216]              @ 0xd8 
    /*000174e8*/ BFI         R3, IP, #16, #8 
    /*000174ec*/ LDR         R2, [R4, #212]              @ 0xd4 
    /*000174f0*/ BFI         R3, R1, #8, #6 
    /*000174f4*/ BFI         R3, R2, #0, #8 
    /*000174f8*/ STR         R3, [R5, #1548]             @ 0x60c 
    /*000174fc*/ LDR         R3, [R5, #1552]             @ 0x610 
    /*00017500*/ LDR         R2, [R4, #144]              @ 0x90 
    /*00017504*/ LDR         IP, [R4, #140]              @ 0x8c 
    /*00017508*/ LDR         R1, [R4, #136]              @ 0x88 
    /*0001750c*/ BFI         R3, R2, #24, #8 
    /*00017510*/ BFI         R3, IP, #16, #8 
    /*00017514*/ LDR         R2, [R4, #132]              @ 0x84 
    /*00017518*/ BFI         R3, R1, #8, #8 
    /*0001751c*/ BFI         R3, R2, #0, #8 
    /*00017520*/ STR         R3, [R5, #1552]             @ 0x610 
    /*00017524*/ LDR         R3, [R5, #1556]             @ 0x614 
    /*00017528*/ LDR         IP, [R4, #156]              @ 0x9c 
    /*0001752c*/ LDR         R1, [R4, #152]              @ 0x98 
    /*00017530*/ LDR         R2, [R4, #148]              @ 0x94 
    /*00017534*/ BFI         R3, IP, #16, #6 
    /*00017538*/ BFI         R3, R1, #8, #6 
    /*0001753c*/ BFI         R3, R2, #0, #6 
    /*00017540*/ STR         R3, [R5, #1556]             @ 0x614 
    /*00017544*/ LDR         R3, [R5, #1560]             @ 0x618 
    /*00017548*/ LDR         R1, [R4, #164]              @ 0xa4 
    /*0001754c*/ LDR         R2, [R4, #160]              @ 0xa0 
    /*00017550*/ BFI         R3, R1, #8, #8 
    /*00017554*/ BFI         R3, R2, #0, #8 
    /*00017558*/ STR         R3, [R5, #1560]             @ 0x618 
    /*0001755c*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*00017560*/ LDR         R2, [R5, #1564]             @ 0x61c 
    /*00017564*/ STR         R3, [R5, #1564]             @ 0x61c 
    /*00017568*/ LDR         R3, [R4, #172]              @ 0xac 
    /*0001756c*/ LDR         R2, [R5, #1568]             @ 0x620 
    /*00017570*/ STR         R3, [R5, #1568]             @ 0x620 
    /*00017574*/ LDR         R3, [R4, #176]              @ 0xb0 
    /*00017578*/ LDR         R2, [R5, #1572]             @ 0x624 
    /*0001757c*/ STR         R3, [R5, #1572]             @ 0x624 
    /*00017580*/ LDR         R3, [R4, #180]              @ 0xb4 
    /*00017584*/ LDR         R2, [R5, #1576]             @ 0x628 
    /*00017588*/ STR         R3, [R5, #1576]             @ 0x628 
    /*0001758c*/ LDR         R3, [R4, #184]              @ 0xb8 
    /*00017590*/ LDR         R2, [R5, #1580]             @ 0x62c 
    /*00017594*/ STR         R3, [R5, #1580]             @ 0x62c 
    /*00017598*/ LDR         R3, [R4, #188]              @ 0xbc 
    /*0001759c*/ LDR         R2, [R5, #1584]             @ 0x630 
    /*000175a0*/ STR         R3, [R5, #1584]             @ 0x630 
    /*000175a4*/ LDR         R3, [R5, #1588]             @ 0x634 
    /*000175a8*/ LDR         R3, [R4, #192]              @ 0xc0 
    /*000175ac*/ STR         R3, [R5, #1588]             @ 0x634 
    /*000175b0*/ LDR         R3, [R4, #196]              @ 0xc4 
    /*000175b4*/ LDR         R2, [R5, #1592]             @ 0x638 
    /*000175b8*/ STR         R3, [R5, #1592]             @ 0x638 
    /*000175bc*/ LDR         R3, [R4, #200]              @ 0xc8 
    /*000175c0*/ LDR         R2, [R5, #1596]             @ 0x63c 
    /*000175c4*/ STR         R3, [R5, #1596]             @ 0x63c 
    /*000175c8*/ LDR         R3, [R4, #204]              @ 0xcc 
    /*000175cc*/ LDR         R2, [R5, #1600]             @ 0x640 
    /*000175d0*/ STR         R3, [R5, #1600]             @ 0x640 
    /*000175d4*/ LDR         R3, [R5, #1604]             @ 0x644 
    /*000175d8*/ LDR         IP, [R4, #248]              @ 0xf8 
    /*000175dc*/ LDR         R1, [R4, #244]              @ 0xf4 
    /*000175e0*/ LDR         R2, [R4, #208]              @ 0xd0 
    /*000175e4*/ BFI         R3, IP, #19, #3 
    /*000175e8*/ BFI         R3, R1, #16, #3 
    /*000175ec*/ BFI         R3, R2, #0, #16 
    /*000175f0*/ STR         R3, [R5, #1604]             @ 0x644 
    /*000175f4*/ LDR         R3, [R5, #1608]             @ 0x648 
    /*000175f8*/ LDR         R2, [R4, #228]              @ 0xe4 
    /*000175fc*/ BFI         R3, R2, #0, #16 
    /*00017600*/ STR         R3, [R5, #1608]             @ 0x648 
    /*00017604*/ LDR         R3, [R5, #1612]             @ 0x64c 
    /*00017608*/ LDR         R2, [R4, #264]              @ 0x108 
    /*0001760c*/ LDR         IP, [R4, #260]              @ 0x104 
    /*00017610*/ LDR         R1, [R4, #256]              @ 0x100 
    /*00017614*/ BFI         R3, R2, #24, #8 
    /*00017618*/ BFI         R3, IP, #16, #8 
    /*0001761c*/ LDR         R2, [R4, #252]              @ 0xfc 
    /*00017620*/ BFI         R3, R1, #8, #8 
    /*00017624*/ BFI         R3, R2, #0, #8 
    /*00017628*/ STR         R3, [R5, #1612]             @ 0x64c 
    /*0001762c*/ LDR         IP, [R4, #276]              @ 0x114 
    /*00017630*/ LDR         R3, [R5, #1616]             @ 0x650 
    /*00017634*/ LDR         R1, [R4, #272]              @ 0x110 
    /*00017638*/ BFI         R3, IP, #8, #4 
    /*0001763c*/ LDR         R2, [R4, #268]              @ 0x10c 
    /*00017640*/ BFI         R3, R1, #4, #4 
    /*00017644*/ BFI         R3, R2, #0, #4 
    /*00017648*/ STR         R3, [R5, #1616]             @ 0x650 
    /*0001764c*/ LDR         R2, [R4, #280]              @ 0x118 
    /*00017650*/ LDR         R3, [R5, #1620]             @ 0x654 
    /*00017654*/ LSR         IP, R2, #8 
    /*00017658*/ BFI         R3, R2, #24, #8 
    /*0001765c*/ LSR         R1, R2, #16 
    /*00017660*/ BFI         R3, IP, #16, #8 
    /*00017664*/ LSR         R2, R2, #24 
    /*00017668*/ BFI         R3, R1, #8, #8 
    /*0001766c*/ BFI         R3, R2, #0, #8 
    /*00017670*/ STR         R3, [R5, #1620]             @ 0x654 
    /*00017674*/ LDR         R2, [R4, #284]              @ 0x11c 
    /*00017678*/ LDR         R3, [R5, #1624]             @ 0x658 
    /*0001767c*/ LSR         IP, R2, #8 
    /*00017680*/ BFI         R3, R2, #24, #8 
    /*00017684*/ LSR         R1, R2, #16 
    /*00017688*/ BFI         R3, IP, #16, #8 
    /*0001768c*/ LSR         R2, R2, #24 
    /*00017690*/ BFI         R3, R1, #8, #8 
    /*00017694*/ BFI         R3, R2, #0, #8 
    /*00017698*/ STR         R3, [R5, #1624]             @ 0x658 
    /*0001769c*/ LDR         R3, [R5, #1640]             @ 0x668 
    /*000176a0*/ LDR         IP, [R4, #312]              @ 0x138 
    /*000176a4*/ LDR         R1, [R4, #332]              @ 0x14c 
    /*000176a8*/ LDR         R2, [R4, #316]              @ 0x13c 
    /*000176ac*/ BFI         R3, IP, #19, #3 
    /*000176b0*/ BFI         R3, R1, #18, #1 
    /*000176b4*/ LDR         IP, [R4, #300]              @ 0x12c 
    /*000176b8*/ LDR         R1, [R4, #508]              @ 0x1fc 
    /*000176bc*/ BFI         R3, R2, #17, #1 
    /*000176c0*/ BFI         R3, IP, #16, #1 
    /*000176c4*/ LDR         R2, [R4, #504]              @ 0x1f8 
    /*000176c8*/ LDR         IP, [R4, #328]              @ 0x148 
    /*000176cc*/ BFI         R3, R1, #15, #1 
    /*000176d0*/ BFI         R3, R2, #12, #3 
    /*000176d4*/ LDR         R1, [R4, #324]              @ 0x144 
    /*000176d8*/ LDR         R2, [R4, #320]              @ 0x140 
    /*000176dc*/ BFI         R3, IP, #11, #1 
    /*000176e0*/ BFI         R3, R1, #6, #5 
    /*000176e4*/ LDR         IP, [R4, #296]              @ 0x128 
    /*000176e8*/ LDR         R1, [R4, #304]              @ 0x130 
    /*000176ec*/ BFI         R3, R2, #5, #1 
    /*000176f0*/ BFI         R3, IP, #4, #1 
    /*000176f4*/ LDR         R2, [R4, #308]              @ 0x134 
    /*000176f8*/ BFI         R3, R1, #3, #1 
    /*000176fc*/ BFI         R3, R2, #1, #2 
    /*00017700*/ ORR         R3, R3, #1 
    /*00017704*/ STR         R3, [R5, #1640]             @ 0x668 
    /*00017708*/ LDR         R1, [R4, #336]              @ 0x150 
    /*0001770c*/ LDR         R3, [R5, #1644]             @ 0x66c 
    /*00017710*/ LDR         R2, [R4, #340]              @ 0x154 
    /*00017714*/ SUB         R1, R1, #1 
    /*00017718*/ BFI         R3, R1, #0, #14 
    /*0001771c*/ SUB         R2, R2, #1 
    /*00017720*/ BFI         R3, R2, #16, #14 
    /*00017724*/ STR         R3, [R5, #1644]             @ 0x66c 
    /*00017728*/ LDR         R3, [R5, #1648]             @ 0x670 
    /*0001772c*/ LDR         IP, [R4, #456]              @ 0x1c8 
    /*00017730*/ LDR         R1, [R4, #452]              @ 0x1c4 
    /*00017734*/ LDR         R2, [R4, #448]              @ 0x1c0 
    /*00017738*/ BFI         R3, IP, #20, #10 
    /*0001773c*/ BFI         R3, R1, #10, #10 
    /*00017740*/ BFI         R3, R2, #0, #10 
    /*00017744*/ STR         R3, [R5, #1648]             @ 0x670 
    /*00017748*/ LDR         R3, [R5, #1652]             @ 0x674 
    /*0001774c*/ LDR         R2, [R4, #440]              @ 0x1b8 
    /*00017750*/ LDR         IP, [R4, #436]              @ 0x1b4 
    /*00017754*/ LDR         R1, [R4, #432]              @ 0x1b0 
    /*00017758*/ BFI         R3, R2, #24, #4 
    /*0001775c*/ BFI         R3, IP, #16, #8 
    /*00017760*/ LDR         R2, [R4, #428]              @ 0x1ac 
    /*00017764*/ BFI         R3, R1, #8, #6 
    /*00017768*/ BFI         R3, R2, #0, #8 
    /*0001776c*/ STR         R3, [R5, #1652]             @ 0x674 
    /*00017770*/ LDR         R3, [R5, #1656]             @ 0x678 
    /*00017774*/ LDR         R2, [R4, #360]              @ 0x168 
    /*00017778*/ LDR         IP, [R4, #356]              @ 0x164 
    /*0001777c*/ LDR         R1, [R4, #352]              @ 0x160 
    /*00017780*/ BFI         R3, R2, #24, #8 
    /*00017784*/ BFI         R3, IP, #16, #8 
    /*00017788*/ LDR         R2, [R4, #348]              @ 0x15c 
    /*0001778c*/ BFI         R3, R1, #8, #8 
    /*00017790*/ BFI         R3, R2, #0, #8 
    /*00017794*/ STR         R3, [R5, #1656]             @ 0x678 
    /*00017798*/ LDR         R3, [R5, #1660]             @ 0x67c 
    /*0001779c*/ LDR         IP, [R4, #372]              @ 0x174 
    /*000177a0*/ LDR         R1, [R4, #368]              @ 0x170 
    /*000177a4*/ LDR         R2, [R4, #364]              @ 0x16c 
    /*000177a8*/ BFI         R3, IP, #16, #6 
    /*000177ac*/ BFI         R3, R1, #8, #6 
    /*000177b0*/ BFI         R3, R2, #0, #6 
    /*000177b4*/ STR         R3, [R5, #1660]             @ 0x67c 
    /*000177b8*/ LDR         R3, [R5, #1664]             @ 0x680 
    /*000177bc*/ LDR         R1, [R4, #380]              @ 0x17c 
    /*000177c0*/ LDR         R2, [R4, #376]              @ 0x178 
    /*000177c4*/ BFI         R3, R1, #8, #8 
    /*000177c8*/ BFI         R3, R2, #0, #8 
    /*000177cc*/ STR         R3, [R5, #1664]             @ 0x680 
    /*000177d0*/ LDR         R3, [R4, #384]              @ 0x180 
    /*000177d4*/ LDR         R2, [R5, #1668]             @ 0x684 
    /*000177d8*/ STR         R3, [R5, #1668]             @ 0x684 
    /*000177dc*/ LDR         R3, [R4, #388]              @ 0x184 
    /*000177e0*/ LDR         R2, [R5, #1672]             @ 0x688 
    /*000177e4*/ STR         R3, [R5, #1672]             @ 0x688 
    /*000177e8*/ LDR         R3, [R4, #392]              @ 0x188 
    /*000177ec*/ LDR         R2, [R5, #1676]             @ 0x68c 
    /*000177f0*/ STR         R3, [R5, #1676]             @ 0x68c 
    /*000177f4*/ LDR         R3, [R4, #396]              @ 0x18c 
    /*000177f8*/ LDR         R2, [R5, #1680]             @ 0x690 
    /*000177fc*/ STR         R3, [R5, #1680]             @ 0x690 
    /*00017800*/ LDR         R3, [R4, #400]              @ 0x190 
    /*00017804*/ LDR         R2, [R5, #1684]             @ 0x694 
    /*00017808*/ STR         R3, [R5, #1684]             @ 0x694 
    /*0001780c*/ LDR         R3, [R4, #404]              @ 0x194 
    /*00017810*/ LDR         R2, [R5, #1688]             @ 0x698 
    /*00017814*/ STR         R3, [R5, #1688]             @ 0x698 
    /*00017818*/ LDR         R3, [R4, #408]              @ 0x198 
    /*0001781c*/ LDR         R2, [R5, #1692]             @ 0x69c 
    /*00017820*/ STR         R3, [R5, #1692]             @ 0x69c 
    /*00017824*/ LDR         R3, [R4, #412]              @ 0x19c 
    /*00017828*/ LDR         R2, [R5, #1696]             @ 0x6a0 
    /*0001782c*/ STR         R3, [R5, #1696]             @ 0x6a0 
    /*00017830*/ LDR         R3, [R4, #416]              @ 0x1a0 
    /*00017834*/ LDR         R2, [R5, #1700]             @ 0x6a4 
    /*00017838*/ STR         R3, [R5, #1700]             @ 0x6a4 
    /*0001783c*/ LDR         R3, [R4, #420]              @ 0x1a4 
    /*00017840*/ LDR         R2, [R5, #1704]             @ 0x6a8 
    /*00017844*/ STR         R3, [R5, #1704]             @ 0x6a8 
    /*00017848*/ LDR         R3, [R5, #1708]             @ 0x6ac 
    /*0001784c*/ LDR         IP, [R4, #464]              @ 0x1d0 
    /*00017850*/ LDR         R1, [R4, #460]              @ 0x1cc 
    /*00017854*/ LDR         R2, [R4, #424]              @ 0x1a8 
    /*00017858*/ BFI         R3, IP, #19, #3 
    /*0001785c*/ BFI         R3, R1, #16, #3 
    /*00017860*/ BFI         R3, R2, #0, #16 
    /*00017864*/ STR         R3, [R5, #1708]             @ 0x6ac 
    /*00017868*/ LDR         R3, [R5, #1712]             @ 0x6b0 
    /*0001786c*/ LDR         R2, [R4, #444]              @ 0x1bc 
    /*00017870*/ BFI         R3, R2, #0, #16 
    /*00017874*/ STR         R3, [R5, #1712]             @ 0x6b0 
    /*00017878*/ LDR         R2, [R4, #480]              @ 0x1e0 
    /*0001787c*/ LDR         R3, [R5, #1716]             @ 0x6b4 
    /*00017880*/ LDR         IP, [R4, #476]              @ 0x1dc 
    /*00017884*/ LDR         R1, [R4, #472]              @ 0x1d8 
    /*00017888*/ BFI         R3, R2, #24, #8 
    /*0001788c*/ BFI         R3, IP, #16, #8 
    /*00017890*/ LDR         R2, [R4, #468]              @ 0x1d4 
    /*00017894*/ BFI         R3, R1, #8, #8 
    /*00017898*/ BFI         R3, R2, #0, #8 
    /*0001789c*/ STR         R3, [R5, #1716]             @ 0x6b4 
    /*000178a0*/ LDR         R3, [R5, #1720]             @ 0x6b8 
    /*000178a4*/ LDR         IP, [R4, #492]              @ 0x1ec 
    /*000178a8*/ LDR         R1, [R4, #488]              @ 0x1e8 
    /*000178ac*/ LDR         R2, [R4, #484]              @ 0x1e4 
    /*000178b0*/ BFI         R3, IP, #8, #4 
    /*000178b4*/ BFI         R3, R1, #4, #4 
    /*000178b8*/ BFI         R3, R2, #0, #4 
    /*000178bc*/ STR         R3, [R5, #1720]             @ 0x6b8 
    /*000178c0*/ LDR         R2, [R4, #496]              @ 0x1f0 
    /*000178c4*/ LDR         R3, [R5, #1724]             @ 0x6bc 
    /*000178c8*/ LSR         IP, R2, #8 
    /*000178cc*/ BFI         R3, R2, #24, #8 
    /*000178d0*/ LSR         R1, R2, #16 
    /*000178d4*/ BFI         R3, IP, #16, #8 
    /*000178d8*/ LSR         R2, R2, #24 
    /*000178dc*/ BFI         R3, R1, #8, #8 
    /*000178e0*/ BFI         R3, R2, #0, #8 
    /*000178e4*/ STR         R3, [R5, #1724]             @ 0x6bc 
    /*000178e8*/ LDR         R2, [R4, #500]              @ 0x1f4 
    /*000178ec*/ LDR         R3, [R5, #1728]             @ 0x6c0 
    /*000178f0*/ LSR         IP, R2, #8 
    /*000178f4*/ BFI         R3, R2, #24, #8 
    /*000178f8*/ LSR         R1, R2, #16 
    /*000178fc*/ BFI         R3, IP, #16, #8 
    /*00017900*/ LSR         R2, R2, #24 
    /*00017904*/ BFI         R3, R1, #8, #8 
    /*00017908*/ BFI         R3, R2, #0, #8 
    /*0001790c*/ STR         R3, [R5, #1728]             @ 0x6c0 
    /*00017910*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END GDC_DRV_SetCmpReg


FUNC_BEGIN GetPixFormatInfo
    /*00017914*/ SUB         R3, R0, #39                 @ 0x27 
    /*00017918*/ CMP         R0, #26 
    /*0001791c*/ CMPNE       R3, #1 
    /*00017920*/ BLS         GetPixFormatInfo_x17934
    /*00017924*/ PUSH        {R4, LR} 
    /*00017928*/ BL          0x0000000000017080 
    /*0001792c*/ MOV         R0, #0 
    /*00017930*/ POP         {R4, PC} 
    GetPixFormatInfo_x17934:
    /*00017934*/ MOV         R0, #0 
    /*00017938*/ BX          LR 
FUNC_END GetPixFormatInfo


FUNC_BEGIN GDC_DRV_CheckCommWH
    /*0001793c*/ CMP         R2, #0 
    /*00017940*/ CMPEQ       R3, #1 
    /*00017944*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00017948*/ SUB         SP, SP, #36                 @ 0x24 
    /*0001794c*/ BNE         GDC_DRV_CheckCommWH_x179b4
    /*00017950*/ SUB         R2, R0, #360                @ 0x168 
    /*00017954*/ SUB         R3, R1, #360                @ 0x168 
    /*00017958*/ MOVW        IP, #4248                   @ 0x1098 
    /*0001795c*/ CMP         R3, IP 
    /*00017960*/ CMPLS       R2, IP 
    /*00017964*/ BHI         GDC_DRV_CheckCommWH_x17974
    /*00017968*/ ORR         R3, R0, R1 
    /*0001796c*/ ANDS        R3, R3, #1 
    /*00017970*/ BEQ         GDC_DRV_CheckCommWH_x179e8
    GDC_DRV_CheckCommWH_x17974:
    /*00017974*/ MOV         R3, #4608                   @ 0x1200 
    /*00017978*/ STR         R1, [SP, #8] 
    /*0001797c*/ STR         R0, [SP, #4] 
    /*00017980*/ MOVW        R1, #834                    @ 0x342 
    /*00017984*/ STR         R3, [SP, #16] 
    /*00017988*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61a4] 
    /*0001798c*/ STR         R3, [SP, #12] 
    /*00017990*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61a4] 
    /*00017994*/ STR         R1, [SP] 
    /*00017998*/ MOV         R0, #3 
    /*0001799c*/ MOV         R1, #37                     @ 0x25 
    /*000179a0*/ LDR         R3, [PC, #148]              @ 0x0000000000017a3c 
    /*000179a4*/ BL          0x00000000000179A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000179a8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000179ac*/ MOVT        R0, #40997                  @ 0xa025 
    /*000179b0*/ B           GDC_DRV_CheckCommWH_x179ec
    GDC_DRV_CheckCommWH_x179b4:
    /*000179b4*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x1fe4] 
    /*000179b8*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x1fe4] 
    /*000179bc*/ LDM         R3, {R2, IP} 
    /*000179c0*/ CMP         R0, R2 
    /*000179c4*/ BHI         GDC_DRV_CheckCommWH_x179f4
    /*000179c8*/ CMP         R1, IP 
    /*000179cc*/ BHI         GDC_DRV_CheckCommWH_x179f4
    /*000179d0*/ CMP         R1, #360                    @ 0x168 
    /*000179d4*/ CMPCS       R0, #360                    @ 0x168 
    /*000179d8*/ BCC         GDC_DRV_CheckCommWH_x179f4
    /*000179dc*/ ORR         R3, R0, R1 
    /*000179e0*/ ANDS        R3, R3, #1 
    /*000179e4*/ BNE         GDC_DRV_CheckCommWH_x179f4
    GDC_DRV_CheckCommWH_x179e8:
    /*000179e8*/ MOV         R0, R3 
    GDC_DRV_CheckCommWH_x179ec:
    /*000179ec*/ ADD         SP, SP, #36                 @ 0x24 
    /*000179f0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    GDC_DRV_CheckCommWH_x179f4:
    /*000179f4*/ MOV         R3, #360                    @ 0x168 
    /*000179f8*/ STR         IP, [SP, #24] 
    /*000179fc*/ STR         R2, [SP, #16] 
    /*00017a00*/ MOVW        IP, #846                    @ 0x34e 
    /*00017a04*/ STR         R1, [SP, #8] 
    /*00017a08*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61ec] 
    /*00017a0c*/ STR         R0, [SP, #4] 
    /*00017a10*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61ec] 
    /*00017a14*/ STR         R3, [SP, #20] 
    /*00017a18*/ MOV         R1, #37                     @ 0x25 
    /*00017a1c*/ STR         R3, [SP, #12] 
    /*00017a20*/ MOV         R0, #3 
    /*00017a24*/ STR         IP, [SP] 
    /*00017a28*/ LDR         R3, [PC, #12]               @ 0x0000000000017a3c 
    /*00017a2c*/ BL          0x0000000000017A2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017a30*/ MOVW        R0, #32771                  @ 0x8003 
    /*00017a34*/ MOVT        R0, #40997                  @ 0xa025 
    /*00017a38*/ B           GDC_DRV_CheckCommWH_x179ec
    /*00017a3c*/ ANDEQ       R1, R0, R8 
FUNC_END GDC_DRV_CheckCommWH


FUNC_BEGIN GDC_DRV_CheckChipFisheyeAttr
    /*00017a40*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00017a44*/ SUB         SP, SP, #12 
    /*00017a48*/ LDR         R3, [R0, #4] 
    /*00017a4c*/ CMP         R3, #0 
    /*00017a50*/ BNE         GDC_DRV_CheckChipFisheyeAttr_x17a9c
    /*00017a54*/ LDR         R2, [R0, #32] 
    /*00017a58*/ CMP         R2, #2 
    /*00017a5c*/ MOVEQ       R0, R3 
    /*00017a60*/ BNE         GDC_DRV_CheckChipFisheyeAttr_x17a6c
    GDC_DRV_CheckChipFisheyeAttr_x17a64:
    /*00017a64*/ ADD         SP, SP, #12 
    /*00017a68*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    GDC_DRV_CheckChipFisheyeAttr_x17a6c:
    /*00017a6c*/ STR         R2, [SP, #4] 
    /*00017a70*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6280] 
    /*00017a74*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6280] 
    /*00017a78*/ MOV         R3, #864                    @ 0x360 
    /*00017a7c*/ STR         R3, [SP] 
    GDC_DRV_CheckChipFisheyeAttr_x17a80:
    /*00017a80*/ LDR         R3, [PC, #44]               @ 0x0000000000017ab4 
    /*00017a84*/ MOV         R1, #37                     @ 0x25 
    /*00017a88*/ MOV         R0, #3 
    /*00017a8c*/ BL          0x0000000000017A8C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017a90*/ MOVW        R0, #32771                  @ 0x8003 
    /*00017a94*/ MOVT        R0, #40997                  @ 0xa025 
    /*00017a98*/ B           GDC_DRV_CheckChipFisheyeAttr_x17a64
    GDC_DRV_CheckChipFisheyeAttr_x17a9c:
    /*00017a9c*/ STR         R3, [SP, #4] 
    /*00017aa0*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x623c] 
    /*00017aa4*/ MOVW        R3, #858                    @ 0x35a 
    /*00017aa8*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x623c] 
    /*00017aac*/ STR         R3, [SP] 
    /*00017ab0*/ B           GDC_DRV_CheckChipFisheyeAttr_x17a80
    /*00017ab4*/ ANDEQ       R1, R0, IP, LSL R0 
FUNC_END GDC_DRV_CheckChipFisheyeAttr


FUNC_BEGIN GDC_DRV_CheckChipFisheyeRegionAttr
    /*00017ab8*/ LDR         R3, [R1] 
    /*00017abc*/ SUB         R2, R3, #2 
    /*00017ac0*/ CMP         R2, #1 
    /*00017ac4*/ BHI         GDC_DRV_CheckChipFisheyeRegionAttr_x17ad0
    /*00017ac8*/ MOV         R0, #0 
    /*00017acc*/ BX          LR 
    GDC_DRV_CheckChipFisheyeRegionAttr_x17ad0:
    /*00017ad0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00017ad4*/ SUB         SP, SP, #20 
    /*00017ad8*/ MOV         R1, #37                     @ 0x25 
    /*00017adc*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x62c8] 
    /*00017ae0*/ STR         R3, [SP, #8] 
    /*00017ae4*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x62c8] 
    /*00017ae8*/ STR         R0, [SP, #4] 
    /*00017aec*/ MOVW        R3, #875                    @ 0x36b 
    /*00017af0*/ MOV         R0, #3 
    /*00017af4*/ STR         R3, [SP] 
    /*00017af8*/ LDR         R3, [PC, #16]               @ 0x0000000000017b10 
    /*00017afc*/ BL          0x0000000000017AFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017b00*/ MOVW        R0, #32771                  @ 0x8003 
    /*00017b04*/ MOVT        R0, #40997                  @ 0xa025 
    /*00017b08*/ ADD         SP, SP, #20 
    /*00017b0c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00017b10*/ ANDEQ       R1, R0, IP, LSR R0 
FUNC_END GDC_DRV_CheckChipFisheyeRegionAttr


FUNC_BEGIN GDC_DRV_SetReg_Gyro
    /*00017b14*/ LDR         R3, [R1, #1504]             @ 0x5e0 
    /*00017b18*/ CMP         R3, #0 
    /*00017b1c*/ BXEQ        LR 
    /*00017b20*/ LDR         R3, [R0, #660]              @ 0x294 
    /*00017b24*/ ADD         IP, R1, #1520               @ 0x5f0 
    /*00017b28*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00017b2c*/ LDR         R2, [R1, #1888]             @ 0x760 
    /*00017b30*/ LDR         LR, [R1, #1884]             @ 0x75c 
    /*00017b34*/ BFI         R3, R2, #0, #1 
    /*00017b38*/ LDR         R2, [R1, #1880]             @ 0x758 
    /*00017b3c*/ BFI         R3, LR, #1, #1 
    /*00017b40*/ LDRB        LR, [R1, #1592]             @ 0x638 
    /*00017b44*/ BFI         R3, R2, #2, #1 
    /*00017b48*/ LDR         R2, [R1, #1840]             @ 0x730 
    /*00017b4c*/ BFI         R3, LR, #3, #8 
    /*00017b50*/ LDRD        R4, [IP, #-8] 
    /*00017b54*/ BFI         R3, R2, #11, #1 
    /*00017b58*/ STR         R3, [R0, #660]              @ 0x294 
    /*00017b5c*/ LDR         R3, [R0, #664]              @ 0x298 
    /*00017b60*/ ADDS        R6, R4, #144                @ 0x90 
    /*00017b64*/ LDR         LR, [R1, #1832]             @ 0x728 
    /*00017b68*/ ADD         R2, R4, #144                @ 0x90 
    /*00017b6c*/ LDR         IP, [R1, #1836]             @ 0x72c 
    /*00017b70*/ ADC         R7, R5, #0 
    /*00017b74*/ BFI         R3, LR, #0, #14 
    /*00017b78*/ BFI         R3, IP, #14, #14 
    /*00017b7c*/ STR         R3, [R0, #664]              @ 0x298 
    /*00017b80*/ LDR         R3, [R0, #668]              @ 0x29c 
    /*00017b84*/ LDR         IP, [R1, #1728]             @ 0x6c0 
    /*00017b88*/ BFI         R3, IP, #0, #20 
    /*00017b8c*/ STR         R3, [R0, #668]              @ 0x29c 
    /*00017b90*/ LDR         R3, [R0, #672]              @ 0x2a0 
    /*00017b94*/ LDR         IP, [R1, #1732]             @ 0x6c4 
    /*00017b98*/ BFI         R3, IP, #0, #20 
    /*00017b9c*/ STR         R3, [R0, #672]              @ 0x2a0 
    /*00017ba0*/ LDR         R3, [R0, #676]              @ 0x2a4 
    /*00017ba4*/ LDR         IP, [R1, #1736]             @ 0x6c8 
    /*00017ba8*/ BFI         R3, IP, #0, #30 
    /*00017bac*/ STR         R3, [R0, #676]              @ 0x2a4 
    /*00017bb0*/ LDR         R3, [R0, #680]              @ 0x2a8 
    /*00017bb4*/ LDR         IP, [R1, #1740]             @ 0x6cc 
    /*00017bb8*/ BFI         R3, IP, #0, #30 
    /*00017bbc*/ STR         R3, [R0, #680]              @ 0x2a8 
    /*00017bc0*/ LDR         R3, [R0, #684]              @ 0x2ac 
    /*00017bc4*/ LDR         IP, [R1, #1756]             @ 0x6dc 
    /*00017bc8*/ BFI         R3, IP, #0, #18 
    /*00017bcc*/ STR         R3, [R0, #684]              @ 0x2ac 
    /*00017bd0*/ LDR         R3, [R0, #688]              @ 0x2b0 
    /*00017bd4*/ LDR         IP, [R1, #1760]             @ 0x6e0 
    /*00017bd8*/ BFI         R3, IP, #0, #18 
    /*00017bdc*/ STR         R3, [R0, #688]              @ 0x2b0 
    /*00017be0*/ LDR         R3, [R0, #692]              @ 0x2b4 
    /*00017be4*/ LDR         IP, [R1, #1764]             @ 0x6e4 
    /*00017be8*/ BFI         R3, IP, #0, #18 
    /*00017bec*/ STR         R3, [R0, #692]              @ 0x2b4 
    /*00017bf0*/ LDR         R3, [R0, #696]              @ 0x2b8 
    /*00017bf4*/ LDR         IP, [R1, #1768]             @ 0x6e8 
    /*00017bf8*/ BFI         R3, IP, #0, #18 
    /*00017bfc*/ STR         R3, [R0, #696]              @ 0x2b8 
    /*00017c00*/ LDR         R3, [R0, #700]              @ 0x2bc 
    /*00017c04*/ LDR         IP, [R1, #1772]             @ 0x6ec 
    /*00017c08*/ BFI         R3, IP, #0, #18 
    /*00017c0c*/ STR         R3, [R0, #700]              @ 0x2bc 
    /*00017c10*/ LDR         R3, [R0, #704]              @ 0x2c0 
    /*00017c14*/ LDR         IP, [R1, #1776]             @ 0x6f0 
    /*00017c18*/ BFI         R3, IP, #0, #18 
    /*00017c1c*/ STR         R3, [R0, #704]              @ 0x2c0 
    /*00017c20*/ LDR         R3, [R0, #708]              @ 0x2c4 
    /*00017c24*/ LDR         IP, [R1, #1780]             @ 0x6f4 
    /*00017c28*/ BFI         R3, IP, #0, #18 
    /*00017c2c*/ STR         R3, [R0, #708]              @ 0x2c4 
    /*00017c30*/ LDR         R3, [R0, #712]              @ 0x2c8 
    /*00017c34*/ LDR         IP, [R1, #1784]             @ 0x6f8 
    /*00017c38*/ BFI         R3, IP, #0, #18 
    /*00017c3c*/ STR         R3, [R0, #712]              @ 0x2c8 
    /*00017c40*/ LDR         R3, [R0, #716]              @ 0x2cc 
    /*00017c44*/ LDR         IP, [R1, #1788]             @ 0x6fc 
    /*00017c48*/ BFI         R3, IP, #0, #18 
    /*00017c4c*/ STR         R3, [R0, #716]              @ 0x2cc 
    /*00017c50*/ LDR         R3, [R0, #720]              @ 0x2d0 
    /*00017c54*/ LDR         IP, [R1, #1792]             @ 0x700 
    /*00017c58*/ BFI         R3, IP, #0, #18 
    /*00017c5c*/ STR         R3, [R0, #720]              @ 0x2d0 
    /*00017c60*/ LDR         R3, [R0, #724]              @ 0x2d4 
    /*00017c64*/ LDR         IP, [R1, #1796]             @ 0x704 
    /*00017c68*/ BFI         R3, IP, #0, #18 
    /*00017c6c*/ STR         R3, [R0, #724]              @ 0x2d4 
    /*00017c70*/ LDR         IP, [R1, #1800]             @ 0x708 
    /*00017c74*/ LDR         R3, [R0, #728]              @ 0x2d8 
    /*00017c78*/ BFI         R3, IP, #0, #18 
    /*00017c7c*/ STR         R3, [R0, #728]              @ 0x2d8 
    /*00017c80*/ LDR         IP, [R1, #1804]             @ 0x70c 
    /*00017c84*/ LDR         R3, [R0, #732]              @ 0x2dc 
    /*00017c88*/ BFI         R3, IP, #0, #24 
    /*00017c8c*/ STR         R3, [R0, #732]              @ 0x2dc 
    /*00017c90*/ LDR         R3, [R0, #736]              @ 0x2e0 
    /*00017c94*/ LDR         IP, [R1, #1808]             @ 0x710 
    /*00017c98*/ BFI         R3, IP, #0, #24 
    /*00017c9c*/ STR         R3, [R0, #736]              @ 0x2e0 
    /*00017ca0*/ LDR         R3, [R0, #884]              @ 0x374 
    /*00017ca4*/ LDR         IP, [R1, #1744]             @ 0x6d0 
    /*00017ca8*/ BFI         R3, IP, #0, #18 
    /*00017cac*/ STR         R3, [R0, #884]              @ 0x374 
    /*00017cb0*/ LDR         R3, [R0, #888]              @ 0x378 
    /*00017cb4*/ LDR         IP, [R1, #1748]             @ 0x6d4 
    /*00017cb8*/ BFI         R3, IP, #0, #18 
    /*00017cbc*/ STR         R3, [R0, #888]              @ 0x378 
    /*00017cc0*/ LDR         R3, [R0, #892]              @ 0x37c 
    /*00017cc4*/ LDR         IP, [R1, #1752]             @ 0x6d8 
    /*00017cc8*/ BFI         R3, IP, #0, #18 
    /*00017ccc*/ STR         R3, [R0, #892]              @ 0x37c 
    /*00017cd0*/ LDR         R3, [R0, #748]              @ 0x2ec 
    /*00017cd4*/ LDR         IP, [R1, #1812]             @ 0x714 
    /*00017cd8*/ BFI         R3, IP, #0, #18 
    /*00017cdc*/ STR         R3, [R0, #748]              @ 0x2ec 
    /*00017ce0*/ LDR         R3, [R0, #752]              @ 0x2f0 
    /*00017ce4*/ LDR         IP, [R1, #1816]             @ 0x718 
    /*00017ce8*/ BFI         R3, IP, #0, #18 
    /*00017cec*/ STR         R3, [R0, #752]              @ 0x2f0 
    /*00017cf0*/ LDR         R3, [R0, #756]              @ 0x2f4 
    /*00017cf4*/ LDR         IP, [R1, #1820]             @ 0x71c 
    /*00017cf8*/ BFI         R3, IP, #0, #18 
    /*00017cfc*/ STR         R3, [R0, #756]              @ 0x2f4 
    /*00017d00*/ LDR         R3, [R0, #760]              @ 0x2f8 
    /*00017d04*/ LDR         IP, [R1, #1824]             @ 0x720 
    /*00017d08*/ BFI         R3, IP, #0, #18 
    /*00017d0c*/ STR         R3, [R0, #760]              @ 0x2f8 
    /*00017d10*/ LDR         R3, [R0, #764]              @ 0x2fc 
    /*00017d14*/ LDR         IP, [R1, #1828]             @ 0x724 
    /*00017d18*/ BFI         R3, IP, #0, #23 
    /*00017d1c*/ STR         R3, [R0, #764]              @ 0x2fc 
    /*00017d20*/ LDR         IP, [R1, #1844]             @ 0x734 
    /*00017d24*/ LDR         R3, [R0, #848]              @ 0x350 
    /*00017d28*/ BFI         R3, IP, #0, #22 
    /*00017d2c*/ STR         R3, [R0, #848]              @ 0x350 
    /*00017d30*/ LDR         IP, [R1, #1848]             @ 0x738 
    /*00017d34*/ LDR         R3, [R0, #852]              @ 0x354 
    /*00017d38*/ BFI         R3, IP, #0, #22 
    /*00017d3c*/ STR         R3, [R0, #852]              @ 0x354 
    /*00017d40*/ LDR         R3, [R0, #856]              @ 0x358 
    /*00017d44*/ LDR         IP, [R1, #1852]             @ 0x73c 
    /*00017d48*/ BFI         R3, IP, #0, #22 
    /*00017d4c*/ STR         R3, [R0, #856]              @ 0x358 
    /*00017d50*/ LDR         R3, [R0, #860]              @ 0x35c 
    /*00017d54*/ LDR         IP, [R1, #1856]             @ 0x740 
    /*00017d58*/ BFI         R3, IP, #0, #22 
    /*00017d5c*/ STR         R3, [R0, #860]              @ 0x35c 
    /*00017d60*/ LDR         R3, [R0, #864]              @ 0x360 
    /*00017d64*/ LDR         IP, [R1, #1860]             @ 0x744 
    /*00017d68*/ BFI         R3, IP, #0, #22 
    /*00017d6c*/ STR         R3, [R0, #864]              @ 0x360 
    /*00017d70*/ LDR         R3, [R0, #868]              @ 0x364 
    /*00017d74*/ LDR         IP, [R1, #1864]             @ 0x748 
    /*00017d78*/ BFI         R3, IP, #0, #22 
    /*00017d7c*/ STR         R3, [R0, #868]              @ 0x364 
    /*00017d80*/ LDR         R3, [R0, #872]              @ 0x368 
    /*00017d84*/ LDR         IP, [R1, #1868]             @ 0x74c 
    /*00017d88*/ BFI         R3, IP, #0, #22 
    /*00017d8c*/ STR         R3, [R0, #872]              @ 0x368 
    /*00017d90*/ LDR         R3, [R0, #876]              @ 0x36c 
    /*00017d94*/ LDR         IP, [R1, #1872]             @ 0x750 
    /*00017d98*/ BFI         R3, IP, #0, #22 
    /*00017d9c*/ STR         R3, [R0, #876]              @ 0x36c 
    /*00017da0*/ LDR         R3, [R0, #880]              @ 0x370 
    /*00017da4*/ LDR         IP, [R1, #1876]             @ 0x754 
    /*00017da8*/ BFI         R3, IP, #0, #22 
    /*00017dac*/ STR         R3, [R0, #880]              @ 0x370 
    /*00017db0*/ LDR         R3, [R0, #768]              @ 0x300 
    /*00017db4*/ LDR         IP, [R1, #1712]             @ 0x6b0 
    /*00017db8*/ BFI         R3, IP, #0, #17 
    /*00017dbc*/ STR         R3, [R0, #768]              @ 0x300 
    /*00017dc0*/ LDR         R3, [R0, #772]              @ 0x304 
    /*00017dc4*/ LDR         IP, [R1, #1716]             @ 0x6b4 
    /*00017dc8*/ BFI         R3, IP, #0, #17 
    /*00017dcc*/ STR         R3, [R0, #772]              @ 0x304 
    /*00017dd0*/ LDR         IP, [R1, #1720]             @ 0x6b8 
    /*00017dd4*/ LDR         R3, [R0, #776]              @ 0x308 
    /*00017dd8*/ BFI         R3, IP, #0, #30 
    /*00017ddc*/ STR         R3, [R0, #776]              @ 0x308 
    /*00017de0*/ LDR         IP, [R1, #1724]             @ 0x6bc 
    /*00017de4*/ LDR         R3, [R0, #780]              @ 0x30c 
    /*00017de8*/ BFI         R3, IP, #0, #30 
    /*00017dec*/ STR         R3, [R0, #780]              @ 0x30c 
    /*00017df0*/ LDR         R3, [R1, #1600]             @ 0x640 
    /*00017df4*/ LDR         IP, [R0, #784]              @ 0x310 
    /*00017df8*/ STR         R3, [R0, #784]              @ 0x310 
    /*00017dfc*/ LDR         R3, [R0, #788]              @ 0x314 
    /*00017e00*/ LDR         IP, [R1, #1608]             @ 0x648 
    /*00017e04*/ BFI         R3, IP, #0, #19 
    /*00017e08*/ LDR         IP, [R1, #1604]             @ 0x644 
    /*00017e0c*/ BFI         R3, IP, #30, #2 
    /*00017e10*/ STR         R3, [R0, #788]              @ 0x314 
    /*00017e14*/ LDR         R3, [R0, #792]              @ 0x318 
    /*00017e18*/ LDR         IP, [R1, #1696]             @ 0x6a0 
    /*00017e1c*/ BFI         R3, IP, #0, #22 
    /*00017e20*/ STR         R3, [R0, #792]              @ 0x318 
    /*00017e24*/ LDR         R3, [R0, #796]              @ 0x31c 
    /*00017e28*/ LDR         IP, [R1, #1700]             @ 0x6a4 
    /*00017e2c*/ BFI         R3, IP, #0, #22 
    /*00017e30*/ STR         R3, [R0, #796]              @ 0x31c 
    /*00017e34*/ LDR         R3, [R0, #800]              @ 0x320 
    /*00017e38*/ LDR         IP, [R1, #1704]             @ 0x6a8 
    /*00017e3c*/ BFI         R3, IP, #0, #22 
    /*00017e40*/ STR         R3, [R0, #800]              @ 0x320 
    /*00017e44*/ LDR         R3, [R0, #804]              @ 0x324 
    /*00017e48*/ LDR         IP, [R1, #1708]             @ 0x6ac 
    /*00017e4c*/ BFI         R3, IP, #0, #22 
    /*00017e50*/ STR         R3, [R0, #804]              @ 0x324 
    /*00017e54*/ LDR         IP, [R1, #1660]             @ 0x67c 
    /*00017e58*/ LDR         R3, [R0, #808]              @ 0x328 
    /*00017e5c*/ BFI         R3, IP, #0, #2 
    /*00017e60*/ LDR         IP, [R1, #1664]             @ 0x680 
    /*00017e64*/ BFI         R3, IP, #2, #2 
    /*00017e68*/ LDR         IP, [R1, #1668]             @ 0x684 
    /*00017e6c*/ BFI         R3, IP, #4, #2 
    /*00017e70*/ LDR         IP, [R1, #1672]             @ 0x688 
    /*00017e74*/ BFI         R3, IP, #6, #2 
    /*00017e78*/ LDR         IP, [R1, #1676]             @ 0x68c 
    /*00017e7c*/ BFI         R3, IP, #8, #2 
    /*00017e80*/ LDR         IP, [R1, #1680]             @ 0x690 
    /*00017e84*/ BFI         R3, IP, #10, #2 
    /*00017e88*/ LDR         IP, [R1, #1684]             @ 0x694 
    /*00017e8c*/ BFI         R3, IP, #12, #2 
    /*00017e90*/ LDR         IP, [R1, #1688]             @ 0x698 
    /*00017e94*/ BFI         R3, IP, #14, #2 
    /*00017e98*/ LDR         IP, [R1, #1692]             @ 0x69c 
    /*00017e9c*/ BFI         R3, IP, #16, #2 
    /*00017ea0*/ STR         R3, [R0, #808]              @ 0x328 
    /*00017ea4*/ LDR         IP, [R1, #1624]             @ 0x658 
    /*00017ea8*/ LDR         R3, [R0, #812]              @ 0x32c 
    /*00017eac*/ BFI         R3, IP, #0, #22 
    /*00017eb0*/ STR         R3, [R0, #812]              @ 0x32c 
    /*00017eb4*/ LDR         R3, [R0, #816]              @ 0x330 
    /*00017eb8*/ LDR         IP, [R1, #1628]             @ 0x65c 
    /*00017ebc*/ BFI         R3, IP, #0, #22 
    /*00017ec0*/ STR         R3, [R0, #816]              @ 0x330 
    /*00017ec4*/ LDR         R3, [R0, #820]              @ 0x334 
    /*00017ec8*/ LDR         IP, [R1, #1632]             @ 0x660 
    /*00017ecc*/ BFI         R3, IP, #0, #22 
    /*00017ed0*/ STR         R3, [R0, #820]              @ 0x334 
    /*00017ed4*/ LDR         R3, [R0, #824]              @ 0x338 
    /*00017ed8*/ LDR         IP, [R1, #1636]             @ 0x664 
    /*00017edc*/ BFI         R3, IP, #0, #22 
    /*00017ee0*/ STR         R3, [R0, #824]              @ 0x338 
    /*00017ee4*/ LDR         R3, [R0, #828]              @ 0x33c 
    /*00017ee8*/ LDR         IP, [R1, #1640]             @ 0x668 
    /*00017eec*/ BFI         R3, IP, #0, #22 
    /*00017ef0*/ STR         R3, [R0, #828]              @ 0x33c 
    /*00017ef4*/ LDR         R3, [R0, #832]              @ 0x340 
    /*00017ef8*/ LDR         IP, [R1, #1644]             @ 0x66c 
    /*00017efc*/ BFI         R3, IP, #0, #22 
    /*00017f00*/ STR         R3, [R0, #832]              @ 0x340 
    /*00017f04*/ LDR         R3, [R0, #836]              @ 0x344 
    /*00017f08*/ LDR         IP, [R1, #1648]             @ 0x670 
    /*00017f0c*/ BFI         R3, IP, #0, #22 
    /*00017f10*/ STR         R3, [R0, #836]              @ 0x344 
    /*00017f14*/ LDR         R3, [R0, #840]              @ 0x348 
    /*00017f18*/ LDR         IP, [R1, #1652]             @ 0x674 
    /*00017f1c*/ BFI         R3, IP, #0, #22 
    /*00017f20*/ STR         R3, [R0, #840]              @ 0x348 
    /*00017f24*/ LDR         R3, [R0, #844]              @ 0x34c 
    /*00017f28*/ LDR         R1, [R1, #1656]             @ 0x678 
    /*00017f2c*/ BFI         R3, R1, #0, #22 
    /*00017f30*/ STR         R3, [R0, #844]              @ 0x34c 
    /*00017f34*/ LDR         R3, [R0, #48]               @ 0x30 
    /*00017f38*/ STR         R5, [R0, #48]               @ 0x30 
    /*00017f3c*/ LDR         R3, [R0, #52]               @ 0x34 
    /*00017f40*/ STR         R4, [R0, #52]               @ 0x34 
    /*00017f44*/ LDR         R3, [R0, #56]               @ 0x38 
    /*00017f48*/ STR         R7, [R0, #56]               @ 0x38 
    /*00017f4c*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*00017f50*/ STR         R2, [R0, #60]               @ 0x3c 
    /*00017f54*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END GDC_DRV_SetReg_Gyro


FUNC_BEGIN GDC_DRV_SetReg
    /*00017f58*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00017f5c*/ MOV         R5, R1 
    /*00017f60*/ LDR         R1, [R0] 
    /*00017f64*/ MOV         R8, R2 
    /*00017f68*/ LDR         R9, [R5, #68]               @ 0x44 
    /*00017f6c*/ MOV         R4, R0 
    /*00017f70*/ ORR         R1, R1, #1 
    /*00017f74*/ LDR         R7, [R5, #960]              @ 0x3c0 
    /*00017f78*/ BFI         R1, R3, #1, #1 
    /*00017f7c*/ BFC         R1, #2, #1 
    /*00017f80*/ STR         R1, [R0] 
    /*00017f84*/ LDR         R3, [R5] 
    /*00017f88*/ LDR         R6, [R0, #4] 
    /*00017f8c*/ LDR         R3, [R3, #12] 
    /*00017f90*/ ORR         R6, R6, #8 
    /*00017f94*/ SUB         R2, R3, #39                 @ 0x27 
    /*00017f98*/ CMP         R3, #26 
    /*00017f9c*/ CMPNE       R2, #1 
    /*00017fa0*/ BLS         GDC_DRV_SetReg_x17fa8
    /*00017fa4*/ BL          0x0000000000017080 
    GDC_DRV_SetReg_x17fa8:
    /*00017fa8*/ LDR         R3, [R5, #4] 
    /*00017fac*/ BFC         R6, #19, #1 
    /*00017fb0*/ LDR         R3, [R3, #12] 
    /*00017fb4*/ SUB         R2, R3, #39                 @ 0x27 
    /*00017fb8*/ CMP         R3, #26 
    /*00017fbc*/ CMPNE       R2, #1 
    /*00017fc0*/ BLS         GDC_DRV_SetReg_x17fc8
    /*00017fc4*/ BL          0x0000000000017080 
    GDC_DRV_SetReg_x17fc8:
    /*00017fc8*/ BFC         R6, #20, #1 
    /*00017fcc*/ STR         R6, [R4, #4] 
    /*00017fd0*/ LDR         R2, [R5, #512]              @ 0x200 
    /*00017fd4*/ LDR         R3, [R4, #8] 
    /*00017fd8*/ CMP         R2, #0 
    /*00017fdc*/ BFC         R3, #0, #1 
    /*00017fe0*/ MOVEQ       R2, #1 
    /*00017fe4*/ BFCNE       R3, #1, #2 
    /*00017fe8*/ BFIEQ       R3, R2, #1, #2 
    /*00017fec*/ STR         R3, [R4, #8] 
    /*00017ff0*/ LDR         R1, [R5, #72]               @ 0x48 
    /*00017ff4*/ LDR         R3, [R4, #256]              @ 0x100 
    /*00017ff8*/ LDR         R2, [R5, #76]               @ 0x4c 
    /*00017ffc*/ SUB         R1, R1, #1 
    /*00018000*/ BFI         R3, R1, #0, #16 
    /*00018004*/ SUB         R2, R2, #1 
    /*00018008*/ BFI         R3, R2, #16, #16 
    /*0001800c*/ STR         R3, [R4, #256]              @ 0x100 
    /*00018010*/ LDR         R1, [R5, #64]               @ 0x40 
    /*00018014*/ LDR         R3, [R4, #260]              @ 0x104 
    /*00018018*/ LDR         R2, [R5, #68]               @ 0x44 
    /*0001801c*/ SUB         R1, R1, #1 
    /*00018020*/ BFI         R3, R1, #0, #16 
    /*00018024*/ SUB         R2, R2, #1 
    /*00018028*/ BFI         R3, R2, #16, #16 
    /*0001802c*/ STR         R3, [R4, #260]              @ 0x104 
    /*00018030*/ LDR         R3, [R4, #264]              @ 0x108 
    /*00018034*/ LDR         R1, [R5, #56]               @ 0x38 
    /*00018038*/ LDR         R2, [R5, #60]               @ 0x3c 
    /*0001803c*/ BFI         R3, R1, #0, #16 
    /*00018040*/ BFI         R3, R2, #16, #16 
    /*00018044*/ STR         R3, [R4, #264]              @ 0x108 
    /*00018048*/ LDR         R3, [R5] 
    /*0001804c*/ LDR         R2, [R4, #268]              @ 0x10c 
    /*00018050*/ LDR         R3, [R3, #124]              @ 0x7c 
    /*00018054*/ STR         R3, [R4, #268]              @ 0x10c 
    /*00018058*/ LDR         R3, [R5] 
    /*0001805c*/ LDR         R2, [R4, #272]              @ 0x110 
    /*00018060*/ LDR         R3, [R3, #120]              @ 0x78 
    /*00018064*/ STR         R3, [R4, #272]              @ 0x110 
    /*00018068*/ LDR         R2, [R5] 
    /*0001806c*/ LDR         R3, [R4, #276]              @ 0x114 
    /*00018070*/ LDR         R2, [R2, #44]               @ 0x2c 
    /*00018074*/ BFI         R3, R2, #0, #16 
    /*00018078*/ STR         R3, [R4, #276]              @ 0x114 
    /*0001807c*/ LDR         R3, [R5] 
    /*00018080*/ LDR         R2, [R4, #280]              @ 0x118 
    /*00018084*/ LDR         R3, [R3, #132]              @ 0x84 
    /*00018088*/ STR         R3, [R4, #280]              @ 0x118 
    /*0001808c*/ LDR         R3, [R5] 
    /*00018090*/ LDR         R2, [R4, #284]              @ 0x11c 
    /*00018094*/ LDR         R3, [R3, #128]              @ 0x80 
    /*00018098*/ STR         R3, [R4, #284]              @ 0x11c 
    /*0001809c*/ LDR         R2, [R5] 
    /*000180a0*/ LDR         R3, [R4, #288]              @ 0x120 
    /*000180a4*/ LDR         R2, [R2, #48]               @ 0x30 
    /*000180a8*/ BFI         R3, R2, #0, #16 
    /*000180ac*/ STR         R3, [R4, #288]              @ 0x120 
    /*000180b0*/ LDR         R1, [R5, #4] 
    /*000180b4*/ LDR         R3, [R4, #292]              @ 0x124 
    /*000180b8*/ LDR         R2, [R1, #20] 
    /*000180bc*/ LDR         R1, [R1, #32] 
    /*000180c0*/ ADDS        R2, R2, #0 
    /*000180c4*/ MOVNE       R2, #1 
    /*000180c8*/ CMP         R1, #64                     @ 0x40 
    /*000180cc*/ BFI         R3, R2, #0, #1 
    /*000180d0*/ ORR         R3, R3, #2 
    /*000180d4*/ MOVEQ       R2, #2 
    /*000180d8*/ BFIEQ       R3, R2, #2, #2 
    /*000180dc*/ BFIEQ       R3, R2, #4, #2 
    /*000180e0*/ BEQ         GDC_DRV_SetReg_x180fc
    /*000180e4*/ CMP         R1, #32 
    /*000180e8*/ BFCNE       R3, #2, #2 
    /*000180ec*/ MOVEQ       R2, #1 
    /*000180f0*/ BFIEQ       R3, R2, #2, #2 
    /*000180f4*/ BFIEQ       R3, R2, #4, #2 
    /*000180f8*/ BFCNE       R3, #4, #2 
    GDC_DRV_SetReg_x180fc:
    /*000180fc*/ BFC         R3, #6, #1 
    /*00018100*/ ADD         R0, R9, R7 
    /*00018104*/ BFC         R3, #7, #16 
    /*00018108*/ STR         R3, [R4, #292]              @ 0x124 
    /*0001810c*/ LDR         R3, [R5, #28] 
    /*00018110*/ MOV         R1, R7 
    /*00018114*/ LDR         R2, [R4, #296]              @ 0x128 
    /*00018118*/ SUB         R0, R0, #1 
    /*0001811c*/ STR         R3, [R4, #296]              @ 0x128 
    /*00018120*/ LDR         R3, [R5, #24] 
    /*00018124*/ LDR         R2, [R4, #300]              @ 0x12c 
    /*00018128*/ STR         R3, [R4, #300]              @ 0x12c 
    /*0001812c*/ LDR         R3, [R5, #36]               @ 0x24 
    /*00018130*/ LDR         R2, [R4, #304]              @ 0x130 
    /*00018134*/ STR         R3, [R4, #304]              @ 0x130 
    /*00018138*/ LDR         R3, [R5, #32] 
    /*0001813c*/ LDR         R2, [R4, #308]              @ 0x134 
    /*00018140*/ STR         R3, [R4, #308]              @ 0x134 
    /*00018144*/ LDR         R3, [R5, #12] 
    /*00018148*/ LDR         R2, [R4, #312]              @ 0x138 
    /*0001814c*/ STR         R3, [R4, #312]              @ 0x138 
    /*00018150*/ LDR         R3, [R5, #8] 
    /*00018154*/ LDR         R2, [R4, #316]              @ 0x13c 
    /*00018158*/ STR         R3, [R4, #316]              @ 0x13c 
    /*0001815c*/ LDR         R3, [R5, #20] 
    /*00018160*/ LDR         R2, [R4, #320]              @ 0x140 
    /*00018164*/ STR         R3, [R4, #320]              @ 0x140 
    /*00018168*/ LDR         R3, [R5, #16] 
    /*0001816c*/ LDR         R2, [R4, #324]              @ 0x144 
    /*00018170*/ STR         R3, [R4, #324]              @ 0x144 
    /*00018174*/ LDR         R3, [R5, #44]               @ 0x2c 
    /*00018178*/ LDR         R2, [R4, #328]              @ 0x148 
    /*0001817c*/ STR         R3, [R4, #328]              @ 0x148 
    /*00018180*/ LDR         R3, [R5, #40]               @ 0x28 
    /*00018184*/ LDR         R2, [R4, #332]              @ 0x14c 
    /*00018188*/ STR         R3, [R4, #332]              @ 0x14c 
    /*0001818c*/ LDR         R3, [R4, #336]              @ 0x150 
    /*00018190*/ LDR         R3, [R5, #52]               @ 0x34 
    /*00018194*/ STR         R3, [R4, #328]              @ 0x148 
    /*00018198*/ LDR         R3, [R5, #48]               @ 0x30 
    /*0001819c*/ LDR         R2, [R4, #340]              @ 0x154 
    /*000181a0*/ STR         R3, [R4, #340]              @ 0x154 
    /*000181a4*/ LDR         R2, [R5, #4] 
    /*000181a8*/ LDR         R3, [R4, #344]              @ 0x158 
    /*000181ac*/ LDR         IP, [R2, #44]               @ 0x2c 
    /*000181b0*/ LDR         R2, [R2, #48]               @ 0x30 
    /*000181b4*/ BFI         R3, IP, #0, #16 
    /*000181b8*/ BFI         R3, R2, #16, #16 
    /*000181bc*/ STR         R3, [R4, #344]              @ 0x158 
    /*000181c0*/ LDR         R2, [R5, #4] 
    /*000181c4*/ LDR         R3, [R4, #348]              @ 0x15c 
    /*000181c8*/ LDR         IP, [R2, #56]               @ 0x38 
    /*000181cc*/ LDR         R2, [R2, #60]               @ 0x3c 
    /*000181d0*/ BFI         R3, IP, #0, #16 
    /*000181d4*/ BFI         R3, R2, #16, #16 
    /*000181d8*/ STR         R3, [R4, #348]              @ 0x15c 
    /*000181dc*/ BL          0x00000000000181DC          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*000181e0*/ LDR         R6, [R4, #360]              @ 0x168 
    /*000181e4*/ MOV         R1, R7 
    /*000181e8*/ SUB         R3, R0, #1 
    /*000181ec*/ MOV         R0, R9 
    /*000181f0*/ BFI         R6, R3, #0, #16 
    /*000181f4*/ BL          0x00000000000181F4          @ __aeabi_uidivmod [R_ARM_CALL: +0x0] 
    /*000181f8*/ MOV         R2, #0 
    /*000181fc*/ CMP         R1, #0 
    /*00018200*/ SUBNE       R1, R1, #1 
    /*00018204*/ SUBEQ       R7, R7, #1 
    /*00018208*/ BFINE       R6, R1, #16, #5 
    /*0001820c*/ BFIEQ       R6, R7, #16, #5 
    /*00018210*/ STR         R6, [R4, #360]              @ 0x168 
    /*00018214*/ LDR         R3, [R4, #364]              @ 0x16c 
    /*00018218*/ STR         R2, [R4, #364]              @ 0x16c 
    /*0001821c*/ LDR         R3, [R4, #368]              @ 0x170 
    /*00018220*/ STR         R2, [R4, #368]              @ 0x170 
    /*00018224*/ LDR         R3, [R4, #244]              @ 0xf4 
    /*00018228*/ STR         R8, [R4, #244]              @ 0xf4 
    /*0001822c*/ LDR         R3, [R4, #512]              @ 0x200 
    /*00018230*/ LDR         R1, [R5, #588]              @ 0x24c 
    /*00018234*/ LDR         IP, [R5, #984]              @ 0x3d8 
    /*00018238*/ BFI         R3, R1, #0, #2 
    /*0001823c*/ LDR         R0, [R5, #964]              @ 0x3c4 
    /*00018240*/ BFI         R3, R2, #2, #1 
    /*00018244*/ LDR         R1, [R5, #968]              @ 0x3c8 
    /*00018248*/ BFI         R3, IP, #3, #1 
    /*0001824c*/ LDR         IP, [R5, #972]              @ 0x3cc 
    /*00018250*/ BFI         R3, R0, #6, #4 
    /*00018254*/ LDR         R0, [R5, #976]              @ 0x3d0 
    /*00018258*/ BFI         R3, R1, #10, #4 
    /*0001825c*/ LDR         R1, [R5, #516]              @ 0x204 
    /*00018260*/ BFI         R3, IP, #14, #4 
    /*00018264*/ BFI         R3, R0, #18, #4 
    /*00018268*/ BFI         R3, R1, #22, #4 
    /*0001826c*/ STR         R3, [R4, #512]              @ 0x200 
    /*00018270*/ LDR         R3, [R4, #516]              @ 0x204 
    /*00018274*/ LDR         R0, [R5, #956]              @ 0x3bc 
    /*00018278*/ LDR         R1, [R5, #960]              @ 0x3c0 
    /*0001827c*/ MOVT        R3, #1024                   @ 0x400 
    /*00018280*/ SUB         R0, R0, #1 
    /*00018284*/ BFI         R3, R0, #0, #8 
    /*00018288*/ SUB         R1, R1, #1 
    /*0001828c*/ BFI         R3, R1, #8, #8 
    /*00018290*/ STR         R3, [R4, #516]              @ 0x204 
    /*00018294*/ LDR         R1, [R5, #1424]             @ 0x590 
    /*00018298*/ MOV         R0, #0 
    /*0001829c*/ LDR         R3, [R4, #520]              @ 0x208 
    /*000182a0*/ CMP         R1, #1 
    /*000182a4*/ LDREQ       R2, [R5, #1432]             @ 0x598 
    /*000182a8*/ BFI         R3, R2, #0, #24 
    /*000182ac*/ BFI         R3, R1, #31, #1 
    /*000182b0*/ STR         R3, [R4, #520]              @ 0x208 
    /*000182b4*/ LDR         R2, [R5, #1424]             @ 0x590 
    /*000182b8*/ LDR         R3, [R4, #524]              @ 0x20c 
    /*000182bc*/ CMP         R2, #1 
    /*000182c0*/ BFCNE       R3, #0, #24 
    /*000182c4*/ LDREQ       R1, [R5, #1440]             @ 0x5a0 
    /*000182c8*/ MOVNE       R2, #0 
    /*000182cc*/ LDREQ       R2, [R5, #1452]             @ 0x5ac 
    /*000182d0*/ BFIEQ       R3, R1, #0, #24 
    /*000182d4*/ ANDEQ       R2, R2, #3 
    /*000182d8*/ BFI         R3, R2, #24, #2 
    /*000182dc*/ STR         R3, [R4, #524]              @ 0x20c 
    /*000182e0*/ LDR         R3, [R5, #1424]             @ 0x590 
    /*000182e4*/ LDR         R2, [R4, #528]              @ 0x210 
    /*000182e8*/ CMP         R3, #1 
    /*000182ec*/ LDREQ       R3, [R5, #1448]             @ 0x5a8 
    /*000182f0*/ MOVNE       R3, #0 
    /*000182f4*/ STR         R3, [R4, #528]              @ 0x210 
    /*000182f8*/ LDR         R2, [R5, #1424]             @ 0x590 
    /*000182fc*/ LDR         R3, [R4, #532]              @ 0x214 
    /*00018300*/ CMP         R2, #1 
    /*00018304*/ LDREQ       R2, [R5, #1456]             @ 0x5b0 
    /*00018308*/ MOVNE       R2, #0 
    /*0001830c*/ BFI         R3, R2, #0, #24 
    /*00018310*/ STR         R3, [R4, #532]              @ 0x214 
    /*00018314*/ LDR         R2, [R5, #1424]             @ 0x590 
    /*00018318*/ LDR         R3, [R4, #536]              @ 0x218 
    /*0001831c*/ CMP         R2, #1 
    /*00018320*/ BFCNE       R3, #0, #24 
    /*00018324*/ LDREQ       R1, [R5, #1464]             @ 0x5b8 
    /*00018328*/ MOVNE       R2, #0 
    /*0001832c*/ LDREQ       R2, [R5, #1476]             @ 0x5c4 
    /*00018330*/ BFIEQ       R3, R1, #0, #24 
    /*00018334*/ ANDEQ       R2, R2, #3 
    /*00018338*/ BFI         R3, R2, #24, #2 
    /*0001833c*/ STR         R3, [R4, #536]              @ 0x218 
    /*00018340*/ LDR         R3, [R5, #1424]             @ 0x590 
    /*00018344*/ LDR         R2, [R4, #540]              @ 0x21c 
    /*00018348*/ CMP         R3, #1 
    /*0001834c*/ LDREQ       R3, [R5, #1472]             @ 0x5c0 
    /*00018350*/ MOVNE       R3, #0 
    /*00018354*/ STR         R3, [R4, #540]              @ 0x21c 
    /*00018358*/ LDR         R2, [R5, #1424]             @ 0x590 
    /*0001835c*/ LDR         R3, [R4, #544]              @ 0x220 
    /*00018360*/ CMP         R2, #1 
    /*00018364*/ LDREQ       R2, [R5, #1480]             @ 0x5c8 
    /*00018368*/ MOVNE       R2, #0 
    /*0001836c*/ BFI         R3, R2, #0, #24 
    /*00018370*/ STR         R3, [R4, #544]              @ 0x220 
    /*00018374*/ LDR         R2, [R5, #1424]             @ 0x590 
    /*00018378*/ LDR         R3, [R4, #548]              @ 0x224 
    /*0001837c*/ CMP         R2, #1 
    /*00018380*/ BFCNE       R3, #0, #24 
    /*00018384*/ LDREQ       R2, [R5, #1500]             @ 0x5dc 
    /*00018388*/ MOVNE       R2, #0 
    /*0001838c*/ LDREQ       R1, [R5, #1488]             @ 0x5d0 
    /*00018390*/ ANDEQ       R2, R2, #3 
    /*00018394*/ BFIEQ       R3, R1, #0, #24 
    /*00018398*/ BFI         R3, R2, #24, #2 
    /*0001839c*/ STR         R3, [R4, #548]              @ 0x224 
    /*000183a0*/ LDR         R3, [R5, #1424]             @ 0x590 
    /*000183a4*/ LDR         R2, [R4, #552]              @ 0x228 
    /*000183a8*/ CMP         R3, #1 
    /*000183ac*/ LDREQ       R3, [R5, #1496]             @ 0x5d8 
    /*000183b0*/ MOVNE       R3, #0 
    /*000183b4*/ STR         R3, [R4, #552]              @ 0x228 
    /*000183b8*/ LDR         R3, [R4, #556]              @ 0x22c 
    /*000183bc*/ LDR         R2, [R5, #880]              @ 0x370 
    /*000183c0*/ LDR         R1, [R5, #612]              @ 0x264 
    /*000183c4*/ BFI         R3, R2, #0, #14 
    /*000183c8*/ LDR         R2, [R5, #608]              @ 0x260 
    /*000183cc*/ BFI         R3, R1, #31, #1 
    /*000183d0*/ BFI         R3, R2, #14, #15 
    /*000183d4*/ STR         R3, [R4, #556]              @ 0x22c 
    /*000183d8*/ LDR         R3, [R4, #560]              @ 0x230 
    /*000183dc*/ LDR         R2, [R5, #604]              @ 0x25c 
    /*000183e0*/ BFI         R3, R2, #0, #20 
    /*000183e4*/ STR         R3, [R4, #560]              @ 0x230 
    /*000183e8*/ LDR         R3, [R4, #564]              @ 0x234 
    /*000183ec*/ LDR         R1, [R5, #544]              @ 0x220 
    /*000183f0*/ LDR         R2, [R5, #548]              @ 0x224 
    /*000183f4*/ BFI         R3, R1, #0, #14 
    /*000183f8*/ BFI         R3, R2, #14, #14 
    /*000183fc*/ STR         R3, [R4, #564]              @ 0x234 
    /*00018400*/ LDR         R3, [R4, #568]              @ 0x238 
    /*00018404*/ LDR         R1, [R5, #552]              @ 0x228 
    /*00018408*/ LDR         R2, [R5, #556]              @ 0x22c 
    /*0001840c*/ BFI         R3, R1, #0, #14 
    /*00018410*/ BFI         R3, R2, #14, #14 
    /*00018414*/ STR         R3, [R4, #568]              @ 0x238 
    /*00018418*/ LDR         R3, [R4, #572]              @ 0x23c 
    /*0001841c*/ LDR         R1, [R5, #876]              @ 0x36c 
    /*00018420*/ LDR         R2, [R5, #596]              @ 0x254 
    /*00018424*/ BFI         R3, R1, #0, #14 
    /*00018428*/ BFI         R3, R2, #14, #18 
    /*0001842c*/ STR         R3, [R4, #572]              @ 0x23c 
    /*00018430*/ LDR         R2, [R5, #592]              @ 0x250 
    /*00018434*/ LDR         R3, [R4, #576]              @ 0x240 
    /*00018438*/ BFI         R3, R2, #0, #18 
    /*0001843c*/ STR         R3, [R4, #576]              @ 0x240 
    /*00018440*/ LDR         R3, [R4, #580]              @ 0x244 
    /*00018444*/ LDR         R1, [R5, #900]              @ 0x384 
    /*00018448*/ LDR         R2, [R5, #892]              @ 0x37c 
    /*0001844c*/ BFI         R3, R1, #0, #11 
    /*00018450*/ BFI         R3, R2, #12, #20 
    /*00018454*/ STR         R3, [R4, #580]              @ 0x244 
    /*00018458*/ LDR         R3, [R4, #584]              @ 0x248 
    /*0001845c*/ LDR         R2, [R5, #896]              @ 0x380 
    /*00018460*/ BFI         R3, R2, #0, #18 
    /*00018464*/ STR         R3, [R4, #584]              @ 0x248 
    /*00018468*/ LDR         R3, [R4, #588]              @ 0x24c 
    /*0001846c*/ LDR         R1, [R5, #932]              @ 0x3a4 
    /*00018470*/ LDR         R2, [R5, #904]              @ 0x388 
    /*00018474*/ BFI         R3, R1, #0, #21 
    /*00018478*/ BFI         R3, R2, #21, #1 
    /*0001847c*/ STR         R3, [R4, #588]              @ 0x24c 
    /*00018480*/ LDR         R3, [R4, #592]              @ 0x250 
    /*00018484*/ LDR         R2, [R5, #936]              @ 0x3a8 
    /*00018488*/ BFI         R3, R2, #0, #23 
    /*0001848c*/ STR         R3, [R4, #592]              @ 0x250 
    /*00018490*/ LDR         R3, [R4, #596]              @ 0x254 
    /*00018494*/ LDR         R2, [R5, #940]              @ 0x3ac 
    /*00018498*/ BFI         R3, R2, #0, #21 
    /*0001849c*/ STR         R3, [R4, #596]              @ 0x254 
    /*000184a0*/ LDR         R3, [R4, #600]              @ 0x258 
    /*000184a4*/ LDR         R2, [R5, #908]              @ 0x38c 
    /*000184a8*/ BFI         R3, R2, #0, #17 
    /*000184ac*/ STR         R3, [R4, #600]              @ 0x258 
    /*000184b0*/ LDR         R3, [R4, #604]              @ 0x25c 
    /*000184b4*/ LDR         R2, [R5, #912]              @ 0x390 
    /*000184b8*/ BFI         R3, R2, #0, #17 
    /*000184bc*/ STR         R3, [R4, #604]              @ 0x25c 
    /*000184c0*/ LDR         R3, [R4, #608]              @ 0x260 
    /*000184c4*/ LDR         R2, [R5, #916]              @ 0x394 
    /*000184c8*/ BFI         R3, R2, #0, #17 
    /*000184cc*/ STR         R3, [R4, #608]              @ 0x260 
    /*000184d0*/ LDR         R3, [R4, #612]              @ 0x264 
    /*000184d4*/ LDR         R2, [R5, #920]              @ 0x398 
    /*000184d8*/ BFI         R3, R2, #0, #17 
    /*000184dc*/ STR         R3, [R4, #612]              @ 0x264 
    /*000184e0*/ LDR         R2, [R5, #924]              @ 0x39c 
    /*000184e4*/ LDR         R3, [R4, #616]              @ 0x268 
    /*000184e8*/ BFI         R3, R2, #0, #17 
    /*000184ec*/ STR         R3, [R4, #616]              @ 0x268 
    /*000184f0*/ LDR         R3, [R4, #620]              @ 0x26c 
    /*000184f4*/ LDR         R2, [R5, #928]              @ 0x3a0 
    /*000184f8*/ BFI         R3, R2, #0, #17 
    /*000184fc*/ STR         R3, [R4, #620]              @ 0x26c 
    /*00018500*/ LDR         R3, [R4, #624]              @ 0x270 
    /*00018504*/ LDR         R1, [R5, #884]              @ 0x374 
    /*00018508*/ LDR         R2, [R5, #888]              @ 0x378 
    /*0001850c*/ BFI         R3, R1, #0, #12 
    /*00018510*/ BFI         R3, R2, #12, #12 
    /*00018514*/ STR         R3, [R4, #624]              @ 0x270 
    /*00018518*/ LDR         R1, [R5, #536]              @ 0x218 
    /*0001851c*/ LDR         R3, [R4, #652]              @ 0x28c 
    /*00018520*/ LDR         R2, [R5, #540]              @ 0x21c 
    /*00018524*/ SUB         R1, R1, #1 
    /*00018528*/ BFI         R3, R1, #0, #14 
    /*0001852c*/ SUB         R2, R2, #1 
    /*00018530*/ BFI         R3, R2, #16, #14 
    /*00018534*/ STR         R3, [R4, #652]              @ 0x28c 
    /*00018538*/ LDR         R3, [R4, #656]              @ 0x290 
    /*0001853c*/ LDR         R2, [R5, #584]              @ 0x248 
    /*00018540*/ LDRB        R1, [R5, #580]              @ 0x244 
    /*00018544*/ BFI         R3, R2, #0, #1 
    /*00018548*/ LDRB        R2, [R5, #581]              @ 0x245 
    /*0001854c*/ BFI         R3, R1, #1, #3 
    /*00018550*/ BFI         R3, R2, #4, #4 
    /*00018554*/ BFC         R3, #8, #1 
    /*00018558*/ BFC         R3, #9, #6 
    /*0001855c*/ STR         R3, [R4, #656]              @ 0x290 
    /*00018560*/ LDR         R3, [R5, #1004]             @ 0x3ec 
    /*00018564*/ LDR         R2, [R4, #40]               @ 0x28 
    /*00018568*/ STR         R3, [R4, #40]               @ 0x28 
    /*0001856c*/ LDR         R3, [R5, #1000]             @ 0x3e8 
    /*00018570*/ LDR         R2, [R4, #44]               @ 0x2c 
    /*00018574*/ STR         R3, [R4, #44]               @ 0x2c 
    /*00018578*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END GDC_DRV_SetReg


FUNC_BEGIN GDC_DRV_CovertCmpInfo
    /*0001857c*/ MOV         R3, R0 
    /*00018580*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00018584*/ MOV         R4, R1 
    /*00018588*/ LDR         R2, [R3, #24] 
    /*0001858c*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00018590*/ LDR         LR, [R3, #4] 
    /*00018594*/ MOV         R1, #0 
    /*00018598*/ LDR         R7, [R0, #332]              @ 0x14c 
    /*0001859c*/ MOV         R0, #2 
    /*000185a0*/ LDR         R6, [R3, #12] 
    /*000185a4*/ LDR         R5, [R3] 
    /*000185a8*/ SUBS        R3, R2, R1 
    /*000185ac*/ LDR         IP, [R4, #960]              @ 0x3c0 
    /*000185b0*/ MOVNE       R3, #1 
    /*000185b4*/ STR         LR, [SP, #24] 
    /*000185b8*/ STR         R3, [SP, #12] 
    /*000185bc*/ MOV         R3, #1 
    /*000185c0*/ STR         IP, [SP, #36]               @ 0x24 
    /*000185c4*/ STR         R1, [SP, #28] 
    /*000185c8*/ STR         R3, [SP, #32] 
    /*000185cc*/ STR         R3, [SP, #8] 
    /*000185d0*/ STR         R7, [SP] 
    /*000185d4*/ STR         R6, [SP, #4] 
    /*000185d8*/ STR         R5, [SP, #20] 
    /*000185dc*/ BL          0x00000000000185DC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000185e0*/ ADD         R2, R4, #296                @ 0x128 
    /*000185e4*/ ADD         R1, R4, #80                 @ 0x50 
    /*000185e8*/ LDR         R3, [R0, #128]              @ 0x80 
    /*000185ec*/ MOV         R0, SP 
    /*000185f0*/ BLX         R3 
    /*000185f4*/ ADD         SP, SP, #44                 @ 0x2c 
    /*000185f8*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END GDC_DRV_CovertCmpInfo


FUNC_BEGIN GDC_DRV_Conver_ScaleCoef_8bit
    /*000185fc*/ CMP         R0, #0 
    /*00018600*/ UXTBLT      R0, R0 
    /*00018604*/ BX          LR 
FUNC_END GDC_DRV_Conver_ScaleCoef_8bit


FUNC_BEGIN GDC_DRV_Conver_ScaleCoef_11bit
    /*00018608*/ CMP         R0, #0 
    /*0001860c*/ UBFXLT      R0, R0, #0, #11 
    /*00018610*/ BX          LR 
FUNC_END GDC_DRV_Conver_ScaleCoef_11bit


FUNC_BEGIN GDC_COEF_TAP6_TO_DUT
    /*00018614*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00018618*/ SUB         SP, SP, #36                 @ 0x24 
    /*0001861c*/ MOV         R5, R1 
    /*00018620*/ MOV         R4, R0 
    /*00018624*/ MOV         R1, #0 
    /*00018628*/ MOV         R2, #32 
    /*0001862c*/ MOV         R0, SP 
    /*00018630*/ BL          0x0000000000018630          @ memset [R_ARM_CALL: +0x0] 
    /*00018634*/ MOV         R1, R5 
    /*00018638*/ ADD         R6, R1, #54                 @ 0x36 
    /*0001863c*/ MOV         R5, #0 
    GDC_COEF_TAP6_TO_DUT_x18640:
    /*00018640*/ SUB         LR, SP, #4 
    /*00018644*/ MOV         IP, R1 
    /*00018648*/ MOV         R0, #1 
    /*0001864c*/ MOV         R3, #0 
    GDC_COEF_TAP6_TO_DUT_x18650:
    /*00018650*/ LDRSB       R2, [IP], #1 
    /*00018654*/ CMP         R2, #0 
    /*00018658*/ MOV         R7, R2 
    /*0001865c*/ UXTBLT      R7, R2 
    /*00018660*/ CMP         R3, #3 
    /*00018664*/ STR         R7, [LR, #4]! 
    /*00018668*/ BEQ         GDC_COEF_TAP6_TO_DUT_x18688
    /*0001866c*/ CMP         R3, #5 
    /*00018670*/ BEQ         GDC_COEF_TAP6_TO_DUT_x186b4
    /*00018674*/ CMP         R0, #6 
    /*00018678*/ BEQ         GDC_COEF_TAP6_TO_DUT_x186c8
    GDC_COEF_TAP6_TO_DUT_x1867c:
    /*0001867c*/ ADD         R3, R3, #1 
    /*00018680*/ ADD         R0, R0, #1 
    /*00018684*/ B           GDC_COEF_TAP6_TO_DUT_x18650
    GDC_COEF_TAP6_TO_DUT_x18688:
    /*00018688*/ LDR         R2, [SP, #8] 
    /*0001868c*/ LDR         R9, [SP, #12] 
    /*00018690*/ LDR         R8, [SP] 
    /*00018694*/ LSL         R2, R2, #16 
    /*00018698*/ LDR         R7, [SP, #4] 
    /*0001869c*/ ADD         R2, R2, R9, LSL #24 
    /*000186a0*/ ADD         R2, R2, R8 
    /*000186a4*/ ADD         R2, R2, R7, LSL #8 
    /*000186a8*/ STR         R2, [R4, R5, LSL #2] 
    /*000186ac*/ ADD         R5, R5, #1 
    /*000186b0*/ B           GDC_COEF_TAP6_TO_DUT_x1867c
    GDC_COEF_TAP6_TO_DUT_x186b4:
    /*000186b4*/ LDR         R2, [SP, #20] 
    /*000186b8*/ LDR         R3, [SP, #16] 
    /*000186bc*/ ADD         R3, R3, R2, LSL #8 
    /*000186c0*/ STR         R3, [R4, R5, LSL #2] 
    /*000186c4*/ ADD         R5, R5, #1 
    GDC_COEF_TAP6_TO_DUT_x186c8:
    /*000186c8*/ ADD         R1, R1, #6 
    /*000186cc*/ CMP         R1, R6 
    /*000186d0*/ BNE         GDC_COEF_TAP6_TO_DUT_x18640
    /*000186d4*/ ADD         SP, SP, #36                 @ 0x24 
    /*000186d8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
FUNC_END GDC_COEF_TAP6_TO_DUT


FUNC_BEGIN GDC_COEF_TAP4_TO_DUT
    /*000186dc*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000186e0*/ SUB         SP, SP, #36                 @ 0x24 
    /*000186e4*/ MOV         R4, R1 
    /*000186e8*/ MOV         R6, R0 
    /*000186ec*/ MOV         R1, #0 
    /*000186f0*/ MOV         R2, #32 
    /*000186f4*/ MOV         R0, SP 
    /*000186f8*/ ADD         R7, R4, #36                 @ 0x24 
    /*000186fc*/ BL          0x00000000000186FC          @ memset [R_ARM_CALL: +0x0] 
    /*00018700*/ MOV         R5, #0 
    /*00018704*/ MOV         R1, R4 
    GDC_COEF_TAP4_TO_DUT_x18708:
    /*00018708*/ MOV         R4, SP 
    /*0001870c*/ MOV         LR, R1 
    /*00018710*/ MOV         IP, #1 
    /*00018714*/ MOV         R3, #0 
    GDC_COEF_TAP4_TO_DUT_x18718:
    /*00018718*/ LDRSB       R2, [LR], #1 
    /*0001871c*/ CMP         R2, #0 
    /*00018720*/ MOV         R0, R2 
    /*00018724*/ UBFXLT      R0, R2, #0, #11 
    /*00018728*/ CMP         R3, #1 
    /*0001872c*/ STR         R0, [R4], #4 
    /*00018730*/ BEQ         GDC_COEF_TAP4_TO_DUT_x18750
    /*00018734*/ CMP         R3, #3 
    /*00018738*/ BEQ         GDC_COEF_TAP4_TO_DUT_x18768
    /*0001873c*/ CMP         IP, #4 
    /*00018740*/ BEQ         GDC_COEF_TAP4_TO_DUT_x1877c
    GDC_COEF_TAP4_TO_DUT_x18744:
    /*00018744*/ ADD         R3, R3, #1 
    /*00018748*/ ADD         IP, IP, #1 
    /*0001874c*/ B           GDC_COEF_TAP4_TO_DUT_x18718
    GDC_COEF_TAP4_TO_DUT_x18750:
    /*00018750*/ LDR         R0, [SP, #4] 
    /*00018754*/ LDR         R2, [SP] 
    /*00018758*/ ADD         R2, R2, R0, LSL #16 
    /*0001875c*/ STR         R2, [R6, R5, LSL #2] 
    /*00018760*/ ADD         R5, R5, #1 
    /*00018764*/ B           GDC_COEF_TAP4_TO_DUT_x18744
    GDC_COEF_TAP4_TO_DUT_x18768:
    /*00018768*/ LDR         R2, [SP, #12] 
    /*0001876c*/ LDR         R3, [SP, #8] 
    /*00018770*/ ADD         R3, R3, R2, LSL #16 
    /*00018774*/ STR         R3, [R6, R5, LSL #2] 
    /*00018778*/ ADD         R5, R5, #1 
    GDC_COEF_TAP4_TO_DUT_x1877c:
    /*0001877c*/ ADD         R1, R1, #4 
    /*00018780*/ CMP         R1, R7 
    /*00018784*/ BNE         GDC_COEF_TAP4_TO_DUT_x18708
    /*00018788*/ ADD         SP, SP, #36                 @ 0x24 
    /*0001878c*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END GDC_COEF_TAP4_TO_DUT


FUNC_BEGIN GDC_DRV_SetIntpCoef
    /*00018790*/ PUSH        {R4, R5, R6, LR} 
    /*00018794*/ MOV         R5, R0 
    /*00018798*/ MOV         R4, R1 
    /*0001879c*/ MOV         R0, R1 
    /*000187a0*/ LDR         R1, [R5, #48]               @ 0x30 
    /*000187a4*/ BL          0x00000000000187A4          @ GDC_COEF_TAP6_TO_DUT [R_ARM_CALL: .text+0x18614] 
    /*000187a8*/ LDR         R1, [R5, #56]               @ 0x38 
    /*000187ac*/ ADD         R0, R4, #256                @ 0x100 
    /*000187b0*/ BL          0x00000000000187B0          @ GDC_COEF_TAP6_TO_DUT [R_ARM_CALL: .text+0x18614] 
    /*000187b4*/ LDR         R1, [R5, #52]               @ 0x34 
    /*000187b8*/ ADD         R0, R4, #512                @ 0x200 
    /*000187bc*/ BL          0x00000000000187BC          @ GDC_COEF_TAP4_TO_DUT [R_ARM_CALL: .text+0x186dc] 
    /*000187c0*/ LDR         R1, [R5, #60]               @ 0x3c 
    /*000187c4*/ ADD         R0, R4, #768                @ 0x300 
    /*000187c8*/ POP         {R4, R5, R6, LR} 
    GDC_DRV_SetIntpCoef_x187cc:
    /*000187cc*/ B           GDC_DRV_SetIntpCoef_x187cc  @ GDC_COEF_TAP4_TO_DUT [R_ARM_JUMP24: .text+0x186dc] 
FUNC_END GDC_DRV_SetIntpCoef


FUNC_BEGIN GDC_DRV_CovertIntPCoef
    /*000187d0*/ PUSH        {R4, R6, R7, LR} 
    /*000187d4*/ MOV         R4, R1 
    /*000187d8*/ LDR         R1, [SP, #16] 
    /*000187dc*/ MOV         R6, R2 
    /*000187e0*/ MOV         R7, R3 
    /*000187e4*/ BL          0x00000000000187E4          @ GDC_DRV_SetIntpCoef [R_ARM_CALL: .text+0x18790] 
    /*000187e8*/ STRD        R6, [R4, #8] 
    /*000187ec*/ POP         {R4, R6, R7, PC} 
FUNC_END GDC_DRV_CovertIntPCoef


FUNC_BEGIN GDC_DRV_IsWrongInt
    /*000187f0*/ PUSH        {R4, LR} 
    /*000187f4*/ ANDS        R4, R0, #255                @ 0xff 
    /*000187f8*/ SUB         SP, SP, #8 
    /*000187fc*/ BEQ         GDC_DRV_IsWrongInt_x18878
    /*00018800*/ CMP         R4, #64                     @ 0x40 
    /*00018804*/ BEQ         GDC_DRV_IsWrongInt_x188d8
    /*00018808*/ CMP         R4, #128                    @ 0x80 
    /*0001880c*/ BEQ         GDC_DRV_IsWrongInt_x188a8
    /*00018810*/ CMP         R4, #16 
    /*00018814*/ BEQ         GDC_DRV_IsWrongInt_x188f0
    /*00018818*/ CMP         R4, #32 
    /*0001881c*/ BEQ         GDC_DRV_IsWrongInt_x18920
    /*00018820*/ CMP         R4, #8 
    /*00018824*/ BEQ         GDC_DRV_IsWrongInt_x188c0
    /*00018828*/ CMP         R4, #2 
    /*0001882c*/ BEQ         GDC_DRV_IsWrongInt_x1889c
    /*00018830*/ CMP         R4, #4 
    /*00018834*/ BEQ         GDC_DRV_IsWrongInt_x1889c
    /*00018838*/ CMP         R4, #6 
    /*0001883c*/ BEQ         GDC_DRV_IsWrongInt_x1889c
    /*00018840*/ CMP         R4, #1 
    /*00018844*/ MOVEQ       R0, #1 
    /*00018848*/ BEQ         GDC_DRV_IsWrongInt_x188a0
    /*0001884c*/ STR         R0, [SP, #4] 
    /*00018850*/ MOVW        R3, #2735                   @ 0xaaf 
    /*00018854*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x64dc] 
    /*00018858*/ STR         R3, [SP] 
    /*0001885c*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x64dc] 
    /*00018860*/ LDR         R3, [PC, #208]              @ 0x0000000000018938 
    /*00018864*/ MOV         R1, #37                     @ 0x25 
    /*00018868*/ MOV         R0, #0 
    /*0001886c*/ BL          0x000000000001886C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018870*/ MOV         R0, #0 
    /*00018874*/ B           GDC_DRV_IsWrongInt_x188a0
    GDC_DRV_IsWrongInt_x18878:
    /*00018878*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6318] 
    /*0001887c*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6318] 
    /*00018880*/ MOVW        R3, #2667                   @ 0xa6b 
    /*00018884*/ STR         R0, [SP, #4] 
    /*00018888*/ STR         R3, [SP] 
    GDC_DRV_IsWrongInt_x1888c:
    /*0001888c*/ LDR         R3, [PC, #164]              @ 0x0000000000018938 
    /*00018890*/ MOV         R1, #37                     @ 0x25 
    /*00018894*/ MOV         R0, #0 
    /*00018898*/ BL          0x0000000000018898          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_DRV_IsWrongInt_x1889c:
    /*0001889c*/ MOV         R0, R4 
    GDC_DRV_IsWrongInt_x188a0:
    /*000188a0*/ ADD         SP, SP, #8 
    /*000188a4*/ POP         {R4, PC} 
    GDC_DRV_IsWrongInt_x188a8:
    /*000188a8*/ MOVW        R3, #2683                   @ 0xa7b 
    /*000188ac*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x63b0] 
    /*000188b0*/ STR         R0, [SP, #4] 
    /*000188b4*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x63b0] 
    /*000188b8*/ STR         R3, [SP] 
    /*000188bc*/ B           GDC_DRV_IsWrongInt_x1888c
    GDC_DRV_IsWrongInt_x188c0:
    /*000188c0*/ MOVW        R3, #2706                   @ 0xa92 
    /*000188c4*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6490] 
    /*000188c8*/ STR         R0, [SP, #4] 
    /*000188cc*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6490] 
    /*000188d0*/ STR         R3, [SP] 
    /*000188d4*/ B           GDC_DRV_IsWrongInt_x1888c
    GDC_DRV_IsWrongInt_x188d8:
    /*000188d8*/ MOVW        R3, #2675                   @ 0xa73 
    /*000188dc*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6368] 
    /*000188e0*/ STR         R0, [SP, #4] 
    /*000188e4*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6368] 
    /*000188e8*/ STR         R3, [SP] 
    /*000188ec*/ B           GDC_DRV_IsWrongInt_x1888c
    GDC_DRV_IsWrongInt_x188f0:
    /*000188f0*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6400] 
    /*000188f4*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6400] 
    /*000188f8*/ MOVW        R3, #2691                   @ 0xa83 
    /*000188fc*/ STR         R0, [SP, #4] 
    /*00018900*/ STR         R3, [SP] 
    GDC_DRV_IsWrongInt_x18904:
    /*00018904*/ LDR         R3, [PC, #44]               @ 0x0000000000018938 
    /*00018908*/ MOV         R1, #37                     @ 0x25 
    /*0001890c*/ MOV         R0, #0 
    /*00018910*/ BL          0x0000000000018910          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018914*/ MOV         R0, #48                     @ 0x30 
    /*00018918*/ ADD         SP, SP, #8 
    /*0001891c*/ POP         {R4, PC} 
    GDC_DRV_IsWrongInt_x18920:
    /*00018920*/ MOVW        R3, #2697                   @ 0xa89 
    /*00018924*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6448] 
    /*00018928*/ STR         R0, [SP, #4] 
    /*0001892c*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6448] 
    /*00018930*/ STR         R3, [SP] 
    /*00018934*/ B           GDC_DRV_IsWrongInt_x18904
    /*00018938*/ ANDEQ       R1, R0, R0, RRX 
FUNC_END GDC_DRV_IsWrongInt


FUNC_BEGIN GDC_DRV_ClkEnable
    /*0001893c*/ PUSH        {R4, R5, R6, LR} 
    /*00018940*/ SUB         SP, SP, #16 
    /*00018944*/ ADD         R4, SP, #16 
    /*00018948*/ MOV         R6, R0 
    /*0001894c*/ MOV         R0, #2 
    /*00018950*/ MOV         R5, #0 
    /*00018954*/ MOV         R2, #1 
    /*00018958*/ MOV         R3, #37                     @ 0x25 
    /*0001895c*/ STR         R2, [R4, #-16]! 
    /*00018960*/ STR         R3, [SP, #4] 
    /*00018964*/ STR         R6, [SP, #8] 
    /*00018968*/ STR         R5, [SP, #12] 
    /*0001896c*/ BL          0x000000000001896C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018970*/ MOV         R2, R4 
    /*00018974*/ MOV         R1, #203                    @ 0xcb 
    /*00018978*/ LDR         R3, [R0, #20] 
    /*0001897c*/ ADD         R0, SP, #4 
    /*00018980*/ BLX         R3 
    /*00018984*/ MOV         R0, #2 
    /*00018988*/ STR         R5, [SP] 
    /*0001898c*/ BL          0x000000000001898C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018990*/ MOV         R2, R4 
    /*00018994*/ MOV         R1, #202                    @ 0xca 
    /*00018998*/ LDR         R3, [R0, #20] 
    /*0001899c*/ ADD         R0, SP, #4 
    /*000189a0*/ BLX         R3 
    /*000189a4*/ MOV         R0, R6 
    /*000189a8*/ MOVW        R1, #37343                  @ 0x91df 
    /*000189ac*/ MOVT        R1, #1025                   @ 0x401 
    /*000189b0*/ BL          0x00000000000189B0          @ GDC_HAL_SetOutstanding [R_ARM_CALL: .text+0x19498] 
    /*000189b4*/ MOV         R0, R5 
    /*000189b8*/ ADD         SP, SP, #16 
    /*000189bc*/ POP         {R4, R5, R6, PC} 
FUNC_END GDC_DRV_ClkEnable


FUNC_BEGIN GDC_DRV_ClkDisable
    /*000189c0*/ PUSH        {R4, R5, LR} 
    /*000189c4*/ SUB         SP, SP, #20 
    /*000189c8*/ ADD         R4, SP, #16 
    /*000189cc*/ MOV         R5, #0 
    /*000189d0*/ STR         R0, [SP, #8] 
    /*000189d4*/ MOV         R0, #2 
    /*000189d8*/ MOV         R2, #1 
    /*000189dc*/ MOV         R3, #37                     @ 0x25 
    /*000189e0*/ STR         R2, [R4, #-16]! 
    /*000189e4*/ STR         R3, [SP, #4] 
    /*000189e8*/ STR         R5, [SP, #12] 
    /*000189ec*/ BL          0x00000000000189EC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000189f0*/ MOV         R2, R4 
    /*000189f4*/ MOV         R1, #202                    @ 0xca 
    /*000189f8*/ LDR         R3, [R0, #20] 
    /*000189fc*/ ADD         R0, SP, #4 
    /*00018a00*/ BLX         R3 
    /*00018a04*/ MOV         R0, #2 
    /*00018a08*/ STR         R5, [SP] 
    /*00018a0c*/ BL          0x0000000000018A0C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018a10*/ MOV         R2, R4 
    /*00018a14*/ MOV         R1, #203                    @ 0xcb 
    /*00018a18*/ LDR         R3, [R0, #20] 
    /*00018a1c*/ ADD         R0, SP, #4 
    /*00018a20*/ BLX         R3 
    /*00018a24*/ MOV         R0, R5 
    /*00018a28*/ ADD         SP, SP, #20 
    /*00018a2c*/ POP         {R4, R5, PC} 
FUNC_END GDC_DRV_ClkDisable


FUNC_BEGIN GDC_DRV_GetNNIEClkStatus
    /*00018a30*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00018a34*/ SUB         SP, SP, #20 
    /*00018a38*/ MOV         R0, #2 
    /*00018a3c*/ MOV         R3, #0 
    /*00018a40*/ MOV         R2, #37                     @ 0x25 
    /*00018a44*/ STR         R3, [SP] 
    /*00018a48*/ STR         R3, [SP, #8] 
    /*00018a4c*/ STR         R3, [SP, #12] 
    /*00018a50*/ STR         R2, [SP, #4] 
    /*00018a54*/ BL          0x0000000000018A54          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018a58*/ MOV         R2, SP 
    /*00018a5c*/ MOV         R1, #178                    @ 0xb2 
    /*00018a60*/ LDR         R3, [R0, #20] 
    /*00018a64*/ ADD         R0, SP, #4 
    /*00018a68*/ BLX         R3 
    /*00018a6c*/ LDR         R0, [SP] 
    /*00018a70*/ ADD         SP, SP, #20 
    /*00018a74*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END GDC_DRV_GetNNIEClkStatus


FUNC_BEGIN GDC_DRV_NNIEClkEnable
    /*00018a78*/ PUSH        {R4, R5, LR} 
    /*00018a7c*/ SUB         SP, SP, #20 
    /*00018a80*/ ADD         R4, SP, #16 
    /*00018a84*/ MOV         R2, #1 
    /*00018a88*/ STR         R0, [SP, #8] 
    /*00018a8c*/ MOV         R0, #2 
    /*00018a90*/ MOV         R3, #37                     @ 0x25 
    /*00018a94*/ STR         R2, [R4, #-16]! 
    /*00018a98*/ STR         R3, [SP, #4] 
    /*00018a9c*/ MOV         R5, #0 
    /*00018aa0*/ STR         R5, [SP, #12] 
    /*00018aa4*/ BL          0x0000000000018AA4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018aa8*/ MOV         R2, R4 
    /*00018aac*/ MOV         R1, #177                    @ 0xb1 
    /*00018ab0*/ LDR         R3, [R0, #20] 
    /*00018ab4*/ ADD         R0, SP, #4 
    /*00018ab8*/ BLX         R3 
    /*00018abc*/ MOV         R0, R5 
    /*00018ac0*/ ADD         SP, SP, #20 
    /*00018ac4*/ POP         {R4, R5, PC} 
FUNC_END GDC_DRV_NNIEClkEnable


FUNC_BEGIN GDC_DRV_NNIEClkDisable
    /*00018ac8*/ PUSH        {R4, LR} 
    /*00018acc*/ SUB         SP, SP, #16 
    /*00018ad0*/ MOV         R4, #0 
    /*00018ad4*/ MOV         R3, #37                     @ 0x25 
    /*00018ad8*/ STR         R0, [SP, #8] 
    /*00018adc*/ MOV         R0, #2 
    /*00018ae0*/ STR         R3, [SP, #4] 
    /*00018ae4*/ STR         R4, [SP] 
    /*00018ae8*/ STR         R4, [SP, #12] 
    /*00018aec*/ BL          0x0000000000018AEC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018af0*/ MOV         R2, SP 
    /*00018af4*/ MOV         R1, #177                    @ 0xb1 
    /*00018af8*/ LDR         R3, [R0, #20] 
    /*00018afc*/ ADD         R0, SP, #4 
    /*00018b00*/ BLX         R3 
    /*00018b04*/ MOV         R0, R4 
    /*00018b08*/ ADD         SP, SP, #16 
    /*00018b0c*/ POP         {R4, PC} 
FUNC_END GDC_DRV_NNIEClkDisable


FUNC_BEGIN GDC_DRV_Reset
    /*00018b10*/ PUSH        {R4, LR} 
    /*00018b14*/ MOV         R0, #0 
    /*00018b18*/ BL          0x0000000000018B18          @ GDC_DRV_ClkEnable [R_ARM_CALL: .text+0x1893c] 
    /*00018b1c*/ MOV         R0, #0 
    /*00018b20*/ BL          0x0000000000018B20          @ GDC_DRV_ClkDisable [R_ARM_CALL: .text+0x189c0] 
    /*00018b24*/ MOV         R0, #0 
    /*00018b28*/ POP         {R4, PC} 
FUNC_END GDC_DRV_Reset


FUNC_BEGIN GDC_DRV_AbolishReset
    GDC_DRV_AbolishReset_x18b2c:
    /*00018b2c*/ B           GDC_DRV_AbolishReset_x18b2c @ GDC_DRV_Reset [R_ARM_JUMP24: .text+0x18b10] 
FUNC_END GDC_DRV_AbolishReset


FUNC_BEGIN GDC_DRV_FreetIrq
    /*00018b30*/ PUSH        {R4, R5, R6, LR} 
    /*00018b34*/ MOVW        R5, #0                      @ GDC_DrvCommIrqProc [R_ARM_MOVW_ABS_NC: .text+0x15b1c] 
    /*00018b38*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0x154] 
    /*00018b3c*/ MOVT        R5, #0                      @ GDC_DrvCommIrqProc [R_ARM_MOVT_ABS: .text+0x15b1c] 
    /*00018b40*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0x154] 
    /*00018b44*/ MOV         R1, R5 
    /*00018b48*/ LDR         R0, [R4, #4] 
    /*00018b4c*/ BL          0x0000000000018B4C          @ osal_free_irq [R_ARM_CALL: +0x0] 
    /*00018b50*/ LDR         R0, [R4, #8] 
    /*00018b54*/ MOV         R1, R5 
    /*00018b58*/ BL          0x0000000000018B58          @ osal_free_irq [R_ARM_CALL: +0x0] 
    /*00018b5c*/ MOV         R0, #0 
    /*00018b60*/ POP         {R4, R5, R6, PC} 
FUNC_END GDC_DRV_FreetIrq


FUNC_BEGIN GDC_DRV_ConvertCorrectionInfo
    /*00018b64*/ LDR         R3, [R0] 
    /*00018b68*/ CMP         R3, #0 
    /*00018b6c*/ STR         R3, [R1, #1024]             @ 0x400 
    /*00018b70*/ BNE         GDC_DRV_ConvertCorrectionInfo_x18b7c
    /*00018b74*/ MOV         R0, R3 
    /*00018b78*/ BX          LR 
    GDC_DRV_ConvertCorrectionInfo_x18b7c:
    /*00018b7c*/ PUSH        {R4, R5, LR} 
    /*00018b80*/ MOV         R5, R0 
    /*00018b84*/ ADD         R0, R1, #1024               @ 0x400 
    /*00018b88*/ SUB         SP, SP, #20 
    /*00018b8c*/ MOV         R4, R1 
    /*00018b90*/ MOV         R2, #312                    @ 0x138 
    /*00018b94*/ ADD         R1, R5, #8 
    /*00018b98*/ ADD         R0, R0, #8 
    /*00018b9c*/ BL          0x0000000000018B9C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018ba0*/ MOV         R2, #44                     @ 0x2c 
    /*00018ba4*/ ADD         R1, R5, #904                @ 0x388 
    /*00018ba8*/ ADD         R0, R4, #1344               @ 0x540 
    /*00018bac*/ BL          0x0000000000018BAC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018bb0*/ MOV         R2, #72                     @ 0x48 
    /*00018bb4*/ ADD         R1, R5, #344                @ 0x158 
    /*00018bb8*/ ADD         R0, R4, #516                @ 0x204 
    /*00018bbc*/ BL          0x0000000000018BBC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018bc0*/ MOV         R2, #368                    @ 0x170 
    /*00018bc4*/ ADD         R1, R5, #504                @ 0x1f8 
    /*00018bc8*/ ADD         R0, R4, #588                @ 0x24c 
    /*00018bcc*/ BL          0x0000000000018BCC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018bd0*/ MOV         R2, #32 
    /*00018bd4*/ ADD         R1, R5, #872                @ 0x368 
    /*00018bd8*/ ADD         R0, R4, #956                @ 0x3bc 
    /*00018bdc*/ BL          0x0000000000018BDC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018be0*/ MOV         R2, #24 
    /*00018be4*/ ADD         R1, R5, #320                @ 0x140 
    /*00018be8*/ ADD         R0, R4, #992                @ 0x3e0 
    /*00018bec*/ BL          0x0000000000018BEC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018bf0*/ LDR         R3, [R5, #312]              @ 0x138 
    /*00018bf4*/ CMP         R3, #2 
    /*00018bf8*/ BEQ         GDC_DRV_ConvertCorrectionInfo_x18cb0
    GDC_DRV_ConvertCorrectionInfo_x18bfc:
    /*00018bfc*/ LDR         R2, [R4, #1380]             @ 0x564 
    /*00018c00*/ MOV         R1, #2 
    /*00018c04*/ LDR         R3, [R4, #1384]             @ 0x568 
    /*00018c08*/ STR         R1, [R4, #1016]             @ 0x3f8 
    /*00018c0c*/ STR         R2, [R4, #64]               @ 0x40 
    /*00018c10*/ STR         R3, [R4, #68]               @ 0x44 
    /*00018c14*/ LDR         R3, [R4, #4] 
    /*00018c18*/ LDR         R2, [R5, #312]              @ 0x138 
    /*00018c1c*/ STR         R2, [R4, #1020]             @ 0x3fc 
    /*00018c20*/ LDR         R0, [R3, #20] 
    /*00018c24*/ CMP         R0, #0 
    /*00018c28*/ BEQ         GDC_DRV_ConvertCorrectionInfo_x18c98
    /*00018c2c*/ CMP         R0, #1 
    /*00018c30*/ BNE         GDC_DRV_ConvertCorrectionInfo_x18cdc
    /*00018c34*/ LDRD        R2, [R3, #120]              @ 0x78 
    /*00018c38*/ MOV         R1, #0 
    /*00018c3c*/ AND         R0, R2, #15 
    /*00018c40*/ ORRS        R1, R0, R1 
    /*00018c44*/ BNE         GDC_DRV_ConvertCorrectionInfo_x18d0c
    /*00018c48*/ LDR         R3, [R4, #1372]             @ 0x55c 
    /*00018c4c*/ CMP         R3, #0 
    /*00018c50*/ ADD         R2, R3, #255                @ 0xff 
    /*00018c54*/ MOVGE       R2, R3 
    /*00018c58*/ RSBS        R1, R3, #0 
    /*00018c5c*/ UXTB        R3, R3 
    /*00018c60*/ ASR         R2, R2, #8 
    /*00018c64*/ UXTB        R1, R1 
    /*00018c68*/ RSBPL       R3, R1, #0 
    /*00018c6c*/ CMP         R3, #0 
    /*00018c70*/ LDR         R3, [R4, #1376]             @ 0x560 
    /*00018c74*/ ADDGT       R2, R2, #1 
    /*00018c78*/ LSLLE       R2, R2, #8 
    /*00018c7c*/ MOVGT       R0, #0 
    /*00018c80*/ MOVLE       R0, #0 
    /*00018c84*/ LSLGT       R2, R2, #8 
    /*00018c88*/ STR         R3, [R4, #60]               @ 0x3c 
    /*00018c8c*/ STR         R2, [R4, #56]               @ 0x38 
    GDC_DRV_ConvertCorrectionInfo_x18c90:
    /*00018c90*/ ADD         SP, SP, #20 
    /*00018c94*/ POP         {R4, R5, PC} 
    GDC_DRV_ConvertCorrectionInfo_x18c98:
    /*00018c98*/ LDR         R2, [R4, #1372]             @ 0x55c 
    /*00018c9c*/ LDR         R3, [R4, #1376]             @ 0x560 
    /*00018ca0*/ STR         R2, [R4, #56]               @ 0x38 
    /*00018ca4*/ STR         R3, [R4, #60]               @ 0x3c 
    /*00018ca8*/ ADD         SP, SP, #20 
    /*00018cac*/ POP         {R4, R5, PC} 
    GDC_DRV_ConvertCorrectionInfo_x18cb0:
    /*00018cb0*/ LDR         R3, [R5, #304]              @ 0x130 
    /*00018cb4*/ CMP         R3, #0 
    /*00018cb8*/ BEQ         GDC_DRV_ConvertCorrectionInfo_x18bfc
    /*00018cbc*/ ADD         R0, R4, #1424               @ 0x590 
    /*00018cc0*/ MOV         R3, #1 
    /*00018cc4*/ MOV         R2, #72                     @ 0x48 
    /*00018cc8*/ STR         R3, [R4, #1424]             @ 0x590 
    /*00018ccc*/ ADD         R1, R5, #424                @ 0x1a8 
    /*00018cd0*/ ADD         R0, R0, #8 
    /*00018cd4*/ BL          0x0000000000018CD4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018cd8*/ B           GDC_DRV_ConvertCorrectionInfo_x18bfc
    GDC_DRV_ConvertCorrectionInfo_x18cdc:
    /*00018cdc*/ STR         R0, [SP, #4] 
    /*00018ce0*/ MOVW        R3, #3029                   @ 0xbd5 
    /*00018ce4*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x656c] 
    /*00018ce8*/ STR         R3, [SP] 
    /*00018cec*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x656c] 
    /*00018cf0*/ LDR         R3, [PC, #68]               @ 0x0000000000018d3c 
    /*00018cf4*/ MOV         R1, #37                     @ 0x25 
    /*00018cf8*/ MOV         R0, #3 
    /*00018cfc*/ BL          0x0000000000018CFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018d00*/ MOVW        R0, #32776                  @ 0x8008 
    /*00018d04*/ MOVT        R0, #40997                  @ 0xa025 
    /*00018d08*/ B           GDC_DRV_ConvertCorrectionInfo_x18c90
    GDC_DRV_ConvertCorrectionInfo_x18d0c:
    /*00018d0c*/ STRD        R2, [SP, #8] 
    /*00018d10*/ MOV         R1, #37                     @ 0x25 
    /*00018d14*/ MOVW        R3, #3002                   @ 0xbba 
    /*00018d18*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x652c] 
    /*00018d1c*/ STR         R3, [SP] 
    /*00018d20*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x652c] 
    /*00018d24*/ LDR         R3, [PC, #16]               @ 0x0000000000018d3c 
    /*00018d28*/ MOV         R0, #3 
    /*00018d2c*/ BL          0x0000000000018D2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018d30*/ MOVW        R0, #32776                  @ 0x8008 
    /*00018d34*/ MOVT        R0, #40997                  @ 0xa025 
    /*00018d38*/ B           GDC_DRV_ConvertCorrectionInfo_x18c90
    /*00018d3c*/ ANDEQ       R1, R0, R4, ROR R0 
FUNC_END GDC_DRV_ConvertCorrectionInfo


FUNC_BEGIN GDC_DRV_ConvertTRIGtLDCInfo
    /*00018d40*/ PUSH        {R4, R5, R6, LR} 
    /*00018d44*/ LDR         IP, [R0] 
    /*00018d48*/ STR         IP, [R1, #1392]             @ 0x570 
    /*00018d4c*/ LDR         R4, [R0, #12] 
    /*00018d50*/ CMP         R4, #1 
    /*00018d54*/ BEQ         GDC_DRV_ConvertTRIGtLDCInfo_x18dc4
    GDC_DRV_ConvertTRIGtLDCInfo_x18d58:
    /*00018d58*/ CMP         IP, #0 
    /*00018d5c*/ BEQ         GDC_DRV_ConvertTRIGtLDCInfo_x18dbc
    /*00018d60*/ MOV         R5, R1 
    /*00018d64*/ MOV         R4, R0 
    /*00018d68*/ MOV         R3, #3 
    /*00018d6c*/ MOV         R2, #2 
    /*00018d70*/ STR         R3, [R1, #1016]             @ 0x3f8 
    /*00018d74*/ STR         R2, [R1, #1020]             @ 0x3fc 
    /*00018d78*/ ADD         R1, R0, #248                @ 0xf8 
    /*00018d7c*/ MOV         R2, #72                     @ 0x48 
    /*00018d80*/ ADD         R0, R5, #516                @ 0x204 
    /*00018d84*/ BL          0x0000000000018D84          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018d88*/ MOV         R2, #368                    @ 0x170 
    /*00018d8c*/ ADD         R1, R4, #320                @ 0x140 
    /*00018d90*/ ADD         R0, R5, #588                @ 0x24c 
    /*00018d94*/ BL          0x0000000000018D94          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018d98*/ MOV         R2, #32 
    /*00018d9c*/ ADD         R1, R4, #688                @ 0x2b0 
    /*00018da0*/ ADD         R0, R5, #956                @ 0x3bc 
    /*00018da4*/ BL          0x0000000000018DA4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018da8*/ ADD         R0, R5, #1392               @ 0x570 
    /*00018dac*/ ADD         R0, R0, #4 
    /*00018db0*/ ADD         R1, R4, #16 
    /*00018db4*/ MOV         R2, #28 
    /*00018db8*/ BL          0x0000000000018DB8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    GDC_DRV_ConvertTRIGtLDCInfo_x18dbc:
    /*00018dbc*/ MOV         R0, #0 
    /*00018dc0*/ POP         {R4, R5, R6, PC} 
    GDC_DRV_ConvertTRIGtLDCInfo_x18dc4:
    /*00018dc4*/ ADD         R3, R0, #160                @ 0xa0 
    /*00018dc8*/ ADD         LR, R0, #232                @ 0xe8 
    /*00018dcc*/ MOV         R2, R1 
    /*00018dd0*/ STR         R4, [R2, #1424]!            @ 0x590 
    GDC_DRV_ConvertTRIGtLDCInfo_x18dd4:
    /*00018dd4*/ LDRD        R4, [R3, #8]! 
    /*00018dd8*/ CMP         R3, LR 
    /*00018ddc*/ STRD        R4, [R2, #8]! 
    /*00018de0*/ BNE         GDC_DRV_ConvertTRIGtLDCInfo_x18dd4
    /*00018de4*/ B           GDC_DRV_ConvertTRIGtLDCInfo_x18d58
FUNC_END GDC_DRV_ConvertTRIGtLDCInfo


FUNC_BEGIN GDC_DRV_ConvertPMFInfo
    /*00018de8*/ LDR         R3, [R0] 
    /*00018dec*/ CMP         R3, #0 
    /*00018df0*/ STR         R3, [R1, #1424]             @ 0x590 
    /*00018df4*/ BEQ         GDC_DRV_ConvertPMFInfo_x18e58
    /*00018df8*/ ADD         R3, R0, #16 
    /*00018dfc*/ ADD         R2, R1, #1424               @ 0x590 
    /*00018e00*/ ADD         IP, R0, #88                 @ 0x58 
    /*00018e04*/ PUSH        {R4, R5, R6, LR} 
    /*00018e08*/ MOV         R4, #4 
    /*00018e0c*/ MOV         LR, #2 
    /*00018e10*/ STR         R4, [R1, #1016]             @ 0x3f8 
    /*00018e14*/ STR         LR, [R1, #1020]             @ 0x3fc 
    GDC_DRV_ConvertPMFInfo_x18e18:
    /*00018e18*/ LDRD        R4, [R3, #8]! 
    /*00018e1c*/ CMP         R3, IP 
    /*00018e20*/ STRD        R4, [R2, #8]! 
    /*00018e24*/ BNE         GDC_DRV_ConvertPMFInfo_x18e18
    /*00018e28*/ MOV         R4, R1 
    /*00018e2c*/ MOV         R5, R0 
    /*00018e30*/ ADD         R1, R0, #104                @ 0x68 
    /*00018e34*/ MOV         R2, #72                     @ 0x48 
    /*00018e38*/ ADD         R0, R4, #516                @ 0x204 
    /*00018e3c*/ BL          0x0000000000018E3C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018e40*/ ADD         R1, R5, #176                @ 0xb0 
    /*00018e44*/ ADD         R0, R4, #956                @ 0x3bc 
    /*00018e48*/ MOV         R2, #32 
    /*00018e4c*/ BL          0x0000000000018E4C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018e50*/ MOV         R0, #0 
    /*00018e54*/ POP         {R4, R5, R6, PC} 
    GDC_DRV_ConvertPMFInfo_x18e58:
    /*00018e58*/ MOV         R0, #0 
    /*00018e5c*/ BX          LR 
FUNC_END GDC_DRV_ConvertPMFInfo


FUNC_BEGIN GDC_DRV_ConvertGyroInfo
    /*00018e60*/ LDR         R3, [R0] 
    /*00018e64*/ CMP         R3, #0 
    /*00018e68*/ STR         R3, [R1, #1504]             @ 0x5e0 
    /*00018e6c*/ BNE         GDC_DRV_ConvertGyroInfo_x18e78
    /*00018e70*/ MOV         R0, #0 
    /*00018e74*/ BX          LR 
    GDC_DRV_ConvertGyroInfo_x18e78:
    /*00018e78*/ PUSH        {R4, R5, R6, LR} 
    /*00018e7c*/ MOV         R3, #2 
    /*00018e80*/ MOV         R4, R1 
    /*00018e84*/ STR         R3, [R1, #1020]             @ 0x3fc 
    /*00018e88*/ MOV         R5, R0 
    /*00018e8c*/ MOV         R2, #8 
    /*00018e90*/ STR         R2, [R1, #1016]             @ 0x3f8 
    /*00018e94*/ ADD         R1, R0, #16 
    /*00018e98*/ MOV         R2, #72                     @ 0x48 
    /*00018e9c*/ ADD         R0, R4, #516                @ 0x204 
    /*00018ea0*/ BL          0x0000000000018EA0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018ea4*/ ADD         R1, R5, #392                @ 0x188 
    /*00018ea8*/ MOV         R2, #32 
    /*00018eac*/ ADD         R0, R4, #956                @ 0x3bc 
    /*00018eb0*/ BL          0x0000000000018EB0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018eb4*/ ADD         R0, R4, #1504               @ 0x5e0 
    /*00018eb8*/ ADD         R1, R5, #8 
    /*00018ebc*/ MOV         R2, #416                    @ 0x1a0 
    /*00018ec0*/ ADD         R0, R0, #8 
    /*00018ec4*/ BL          0x0000000000018EC4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00018ec8*/ MOV         R0, #0 
    /*00018ecc*/ POP         {R4, R5, R6, PC} 
FUNC_END GDC_DRV_ConvertGyroInfo


FUNC_BEGIN GDC_DRV_UpdateImgInfo
    /*00018ed0*/ MOV         R0, #0 
    /*00018ed4*/ BX          LR 
FUNC_END GDC_DRV_UpdateImgInfo


FUNC_BEGIN GDC_DRV_CheckPixelFormatConsistence
    /*00018ed8*/ LDR         R3, [R0, #12] 
    /*00018edc*/ CMP         R3, #39                     @ 0x27 
    /*00018ee0*/ BEQ         GDC_DRV_CheckPixelFormatConsistence_x18eec
    /*00018ee4*/ MOV         R0, #0 
    /*00018ee8*/ BX          LR 
    GDC_DRV_CheckPixelFormatConsistence_x18eec:
    /*00018eec*/ LDR         R0, [R1, #12] 
    /*00018ef0*/ CMP         R0, #26 
    /*00018ef4*/ MOVNE       R0, #0 
    /*00018ef8*/ MVNEQ       R0, #0 
    /*00018efc*/ BX          LR 
FUNC_END GDC_DRV_CheckPixelFormatConsistence


FUNC_BEGIN GDC_DRV_CheckPixelFormat
    /*00018f00*/ SUB         R3, R0, #39                 @ 0x27 
    /*00018f04*/ CMP         R0, #26 
    /*00018f08*/ CMPNE       R3, #1 
    /*00018f0c*/ MOVLS       R0, #1 
    /*00018f10*/ MOVHI       R0, #0 
    /*00018f14*/ SUB         R0, R0, #1 
    /*00018f18*/ BX          LR 
FUNC_END GDC_DRV_CheckPixelFormat


FUNC_BEGIN GDC_DRV_CheckCompressFormat
    /*00018f1c*/ CMP         R0, #1 
    /*00018f20*/ MOVLS       R0, #0 
    /*00018f24*/ MVNHI       R0, #0 
    /*00018f28*/ BX          LR 
FUNC_END GDC_DRV_CheckCompressFormat


FUNC_BEGIN GDC_DRV_CheckConfig
    /*00018f2c*/ CMP         R0, #1 
    /*00018f30*/ LDRNE       R0, [R1, #56]               @ 0x38 
    /*00018f34*/ CLZNE       R0, R0 
    /*00018f38*/ LSRNE       R0, R0, #5 
    /*00018f3c*/ BX          LR 
FUNC_END GDC_DRV_CheckConfig


FUNC_BEGIN GDC_DRV_CheckLDCV2Info
    /*00018f40*/ PUSH        {R4, R5, R6, LR} 
    /*00018f44*/ MOV         R6, #54272                  @ 0xd400 
    /*00018f48*/ MOVW        R5, #34464                  @ 0x86a0 
    /*00018f4c*/ SUB         SP, SP, #24 
    /*00018f50*/ ADD         R4, R1, #16 
    /*00018f54*/ MOVT        R6, #48                     @ 0x30 
    /*00018f58*/ MOVT        R5, #1 
    /*00018f5c*/ MOV         IP, #0 
    GDC_DRV_CheckLDCV2Info_x18f60:
    /*00018f60*/ MOV         R2, R4 
    /*00018f64*/ MOV         R3, #0 
    GDC_DRV_CheckLDCV2Info_x18f68:
    /*00018f68*/ ORRS        R0, IP, R3 
    /*00018f6c*/ BNE         GDC_DRV_CheckLDCV2Info_x1901c
    /*00018f70*/ LDR         R0, [R1, #16] 
    /*00018f74*/ CMP         R0, R5 
    /*00018f78*/ BNE         GDC_DRV_CheckLDCV2Info_x190c0
    GDC_DRV_CheckLDCV2Info_x18f7c:
    /*00018f7c*/ ADD         R3, R3, #1 
    /*00018f80*/ ADD         R2, R2, #4 
    /*00018f84*/ CMP         R3, #4 
    /*00018f88*/ BNE         GDC_DRV_CheckLDCV2Info_x18f68
    /*00018f8c*/ ADD         IP, IP, #1 
    /*00018f90*/ ADD         R4, R4, #16 
    /*00018f94*/ CMP         IP, #2 
    /*00018f98*/ BNE         GDC_DRV_CheckLDCV2Info_x18f60
    /*00018f9c*/ LDR         R3, [R1, #48]               @ 0x30 
    /*00018fa0*/ MOV         LR, #54272                  @ 0xd400 
    /*00018fa4*/ MOVT        LR, #48                     @ 0x30 
    /*00018fa8*/ CMP         R3, LR 
    /*00018fac*/ BHI         GDC_DRV_CheckLDCV2Info_x19134
    /*00018fb0*/ ADD         R5, R1, #52                 @ 0x34 
    /*00018fb4*/ MOV         R4, #0 
    GDC_DRV_CheckLDCV2Info_x18fb8:
    /*00018fb8*/ MOV         R0, R5 
    /*00018fbc*/ MOV         R2, #0 
    GDC_DRV_CheckLDCV2Info_x18fc0:
    /*00018fc0*/ LDR         IP, [R0], #4 
    /*00018fc4*/ ADD         R3, IP, #1589248            @ 0x184000 
    /*00018fc8*/ ADD         R3, R3, #10752              @ 0x2a00 
    /*00018fcc*/ CMP         R3, LR 
    /*00018fd0*/ BHI         GDC_DRV_CheckLDCV2Info_x1906c
    /*00018fd4*/ ADD         R2, R2, #1 
    /*00018fd8*/ CMP         R2, #4 
    /*00018fdc*/ BNE         GDC_DRV_CheckLDCV2Info_x18fc0
    /*00018fe0*/ ADD         R4, R4, #1 
    /*00018fe4*/ ADD         R5, R5, #16 
    /*00018fe8*/ CMP         R4, #3 
    /*00018fec*/ BNE         GDC_DRV_CheckLDCV2Info_x18fb8
    /*00018ff0*/ LDR         R3, [R1, #100]              @ 0x64 
    /*00018ff4*/ MOV         R2, #27136                  @ 0x6a00 
    /*00018ff8*/ MOVT        R2, #24 
    /*00018ffc*/ CMP         R3, R2 
    /*00019000*/ BHI         GDC_DRV_CheckLDCV2Info_x190f0
    /*00019004*/ LDR         R3, [R1, #104]              @ 0x68 
    /*00019008*/ CMP         R3, R2 
    /*0001900c*/ MOVLS       R0, #0 
    /*00019010*/ BHI         GDC_DRV_CheckLDCV2Info_x190f0
    GDC_DRV_CheckLDCV2Info_x19014:
    /*00019014*/ ADD         SP, SP, #24 
    /*00019018*/ POP         {R4, R5, R6, PC} 
    GDC_DRV_CheckLDCV2Info_x1901c:
    /*0001901c*/ LDR         LR, [R2] 
    /*00019020*/ ADD         R0, LR, #1589248            @ 0x184000 
    /*00019024*/ ADD         R0, R0, #10752              @ 0x2a00 
    /*00019028*/ CMP         R0, R6 
    /*0001902c*/ BLS         GDC_DRV_CheckLDCV2Info_x18f7c
    /*00019030*/ MOV         R2, #27136                  @ 0x6a00 
    /*00019034*/ STR         R3, [SP, #8] 
    /*00019038*/ MOVT        R2, #24 
    /*0001903c*/ MOV         R3, #38400                  @ 0x9600 
    /*00019040*/ STR         R2, [SP, #20] 
    /*00019044*/ MOVT        R3, #65511                  @ 0xffe7 
    /*00019048*/ MOVW        R2, #3182                   @ 0xc6e 
    /*0001904c*/ STR         R3, [SP, #16] 
    /*00019050*/ STR         R2, [SP] 
    /*00019054*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6600] 
    /*00019058*/ STR         LR, [SP, #12] 
    /*0001905c*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6600] 
    /*00019060*/ STR         IP, [SP, #4] 
    /*00019064*/ LDR         R3, [PC, #236]              @ 0x0000000000019158 
    /*00019068*/ B           GDC_DRV_CheckLDCV2Info_x190a4
    GDC_DRV_CheckLDCV2Info_x1906c:
    /*0001906c*/ MOV         R3, #38400                  @ 0x9600 
    /*00019070*/ MOVT        R3, #65511                  @ 0xffe7 
    /*00019074*/ STR         R3, [SP, #16] 
    /*00019078*/ MOV         R1, #27136                  @ 0x6a00 
    /*0001907c*/ LDR         R3, [PC, #212]              @ 0x0000000000019158 
    /*00019080*/ MOVT        R1, #24 
    /*00019084*/ STR         R2, [SP, #8] 
    /*00019088*/ MOVW        R2, #3202                   @ 0xc82 
    /*0001908c*/ STR         R2, [SP] 
    /*00019090*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x668c] 
    /*00019094*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x668c] 
    /*00019098*/ STR         IP, [SP, #12] 
    /*0001909c*/ STR         R4, [SP, #4] 
    /*000190a0*/ STR         R1, [SP, #20] 
    GDC_DRV_CheckLDCV2Info_x190a4:
    /*000190a4*/ MOV         R1, #37                     @ 0x25 
    /*000190a8*/ MOV         R0, #3 
    /*000190ac*/ BL          0x00000000000190AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000190b0*/ MOVW        R0, #32771                  @ 0x8003 
    /*000190b4*/ MOVT        R0, #40997                  @ 0xa025 
    /*000190b8*/ ADD         SP, SP, #24 
    /*000190bc*/ POP         {R4, R5, R6, PC} 
    GDC_DRV_CheckLDCV2Info_x190c0:
    /*000190c0*/ STR         R0, [SP, #4] 
    /*000190c4*/ MOVW        R3, #3173                   @ 0xc65 
    /*000190c8*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x65b8] 
    /*000190cc*/ STR         R3, [SP] 
    /*000190d0*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x65b8] 
    /*000190d4*/ LDR         R3, [PC, #124]              @ 0x0000000000019158 
    /*000190d8*/ MOV         R1, #37                     @ 0x25 
    /*000190dc*/ MOV         R0, #3 
    /*000190e0*/ BL          0x00000000000190E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000190e4*/ MOVW        R0, #32771                  @ 0x8003 
    /*000190e8*/ MOVT        R0, #40997                  @ 0xa025 
    /*000190ec*/ B           GDC_DRV_CheckLDCV2Info_x19014
    GDC_DRV_CheckLDCV2Info_x190f0:
    /*000190f0*/ MOV         R2, #0 
    /*000190f4*/ STR         R2, [SP, #8] 
    /*000190f8*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x66d8] 
    /*000190fc*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x66d8] 
    /*00019100*/ STR         R3, [SP, #4] 
    /*00019104*/ MOVW        R1, #3212                   @ 0xc8c 
    /*00019108*/ MOV         R3, #27136                  @ 0x6a00 
    /*0001910c*/ STR         R1, [SP] 
    /*00019110*/ MOVT        R3, #24 
    /*00019114*/ STR         R3, [SP, #12] 
    GDC_DRV_CheckLDCV2Info_x19118:
    /*00019118*/ LDR         R3, [PC, #56]               @ 0x0000000000019158 
    /*0001911c*/ MOV         R1, #37                     @ 0x25 
    /*00019120*/ MOV         R0, #3 
    /*00019124*/ BL          0x0000000000019124          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019128*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001912c*/ MOVT        R0, #40997                  @ 0xa025 
    /*00019130*/ B           GDC_DRV_CheckLDCV2Info_x19014
    GDC_DRV_CheckLDCV2Info_x19134:
    /*00019134*/ MOV         R2, #0 
    /*00019138*/ STR         R3, [SP, #4] 
    /*0001913c*/ STR         R2, [SP, #8] 
    /*00019140*/ MOVW        R3, #3191                   @ 0xc77 
    /*00019144*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x664c] 
    /*00019148*/ STR         LR, [SP, #12] 
    /*0001914c*/ STR         R3, [SP] 
    /*00019150*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x664c] 
    /*00019154*/ B           GDC_DRV_CheckLDCV2Info_x19118
    /*00019158*/ MULEQ       R0, R4, R0 
FUNC_END GDC_DRV_CheckLDCV2Info


FUNC_BEGIN GDC_DRV_SetRamStatus
    /*0001915c*/ CMP         R0, #0 
    /*00019160*/ MOVWEQ      R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x1fe4] 
    /*00019164*/ MOVTEQ      R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x1fe4] 
    /*00019168*/ MVNNE       R0, #0 
    /*0001916c*/ STREQ       R1, [R3, #8] 
    /*00019170*/ BX          LR 
FUNC_END GDC_DRV_SetRamStatus


FUNC_BEGIN GDC_DRV_GetRamStatus
    /*00019174*/ CMP         R0, #0 
    /*00019178*/ MOVWEQ      R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x1fe4] 
    /*0001917c*/ MOVTEQ      R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x1fe4] 
    /*00019180*/ MVNNE       R0, #0 
    /*00019184*/ LDREQ       R3, [R3, #8] 
    /*00019188*/ STREQ       R3, [R1] 
    /*0001918c*/ BX          LR 
FUNC_END GDC_DRV_GetRamStatus


FUNC_BEGIN GDC_DRV_SetRamSelectRegFlag
    /*00019190*/ BX          LR 
FUNC_END GDC_DRV_SetRamSelectRegFlag


FUNC_BEGIN GDC_DRV_RamStatusInit
    /*00019194*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x1fe4] 
    /*00019198*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x1fe4] 
    /*0001919c*/ MOV         R2, #0 
    /*000191a0*/ STR         R2, [R3, #8] 
    /*000191a4*/ BX          LR 
FUNC_END GDC_DRV_RamStatusInit


FUNC_BEGIN GDC_DRV_RamStatusExit
    /*000191a8*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .bss+0x1fe4] 
    /*000191ac*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .bss+0x1fe4] 
    /*000191b0*/ LDR         R2, [R3, #8] 
    /*000191b4*/ CMP         R2, #2 
    /*000191b8*/ MOVEQ       R2, #0 
    /*000191bc*/ STREQ       R2, [R3, #8] 
    /*000191c0*/ BX          LR 
FUNC_END GDC_DRV_RamStatusExit


FUNC_BEGIN GDC_DRV_SetRamUser
    /*000191c4*/ PUSH        {R4, LR} 
    /*000191c8*/ CMP         R0, #2 
    /*000191cc*/ SUB         SP, SP, #16 
    /*000191d0*/ MOV         R0, #2 
    /*000191d4*/ MOVNE       R3, #0 
    /*000191d8*/ MOVEQ       R3, #1 
    /*000191dc*/ MOV         R4, #0 
    /*000191e0*/ STR         R3, [SP] 
    /*000191e4*/ STR         R4, [SP, #12] 
    /*000191e8*/ MOV         R3, #37                     @ 0x25 
    /*000191ec*/ STMIB       SP, {R3, R4} 
    /*000191f0*/ BL          0x00000000000191F0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000191f4*/ MOV         R2, SP 
    /*000191f8*/ MOV         R1, #205                    @ 0xcd 
    /*000191fc*/ LDR         R3, [R0, #20] 
    /*00019200*/ ADD         R0, SP, #4 
    /*00019204*/ BLX         R3 
    /*00019208*/ MOV         R0, R4 
    /*0001920c*/ ADD         SP, SP, #16 
    /*00019210*/ POP         {R4, PC} 
FUNC_END GDC_DRV_SetRamUser


FUNC_BEGIN GDC_DRV_SetRamUserSafety
    /*00019214*/ PUSH        {R4, R5, R6, LR} 
    /*00019218*/ MOV         R4, R0 
    /*0001921c*/ MOV         R0, #0 
    /*00019220*/ BL          0x0000000000019220          @ GDC_DRV_ClkEnable [R_ARM_CALL: .text+0x1893c] 
    /*00019224*/ BL          0x0000000000019224          @ GDC_DRV_GetNNIEClkStatus [R_ARM_CALL: .text+0x18a30] 
    /*00019228*/ SUBS        R5, R0, #0 
    /*0001922c*/ BEQ         GDC_DRV_SetRamUserSafety_x19248
    /*00019230*/ MOV         R0, R4 
    /*00019234*/ BL          0x0000000000019234          @ GDC_DRV_SetRamUser [R_ARM_CALL: .text+0x191c4] 
    GDC_DRV_SetRamUserSafety_x19238:
    /*00019238*/ MOV         R0, #0 
    /*0001923c*/ BL          0x000000000001923C          @ GDC_DRV_ClkDisable [R_ARM_CALL: .text+0x189c0] 
    /*00019240*/ MOV         R0, #0 
    /*00019244*/ POP         {R4, R5, R6, PC} 
    GDC_DRV_SetRamUserSafety_x19248:
    /*00019248*/ BL          0x0000000000019248          @ GDC_DRV_NNIEClkEnable [R_ARM_CALL: .text+0x18a78] 
    /*0001924c*/ MOV         R0, R4 
    /*00019250*/ BL          0x0000000000019250          @ GDC_DRV_SetRamUser [R_ARM_CALL: .text+0x191c4] 
    /*00019254*/ MOV         R0, R5 
    /*00019258*/ BL          0x0000000000019258          @ GDC_DRV_NNIEClkDisable [R_ARM_CALL: .text+0x18ac8] 
    /*0001925c*/ B           GDC_DRV_SetRamUserSafety_x19238
FUNC_END GDC_DRV_SetRamUserSafety


FUNC_BEGIN GDC_DRV_RamSpinLock
    /*00019260*/ MOV         R1, R0 
    /*00019264*/ MOVW        R0, #0                      @ g_stGdcNnieLock [R_ARM_MOVW_ABS_NC: .bss+0x424] 
    /*00019268*/ MOVT        R0, #0                      @ g_stGdcNnieLock [R_ARM_MOVT_ABS: .bss+0x424] 
    GDC_DRV_RamSpinLock_x1926c:
    /*0001926c*/ B           GDC_DRV_RamSpinLock_x1926c  @ osal_spin_lock_irqsave [R_ARM_JUMP24: +0x0] 
FUNC_END GDC_DRV_RamSpinLock


FUNC_BEGIN GDC_DRV_RamSpinUnlock
    /*00019270*/ MOV         R1, R0 
    /*00019274*/ MOVW        R0, #0                      @ g_stGdcNnieLock [R_ARM_MOVW_ABS_NC: .bss+0x424] 
    /*00019278*/ MOVT        R0, #0                      @ g_stGdcNnieLock [R_ARM_MOVT_ABS: .bss+0x424] 
    GDC_DRV_RamSpinUnlock_x1927c:
    /*0001927c*/ B           GDC_DRV_RamSpinUnlock_x1927c@ osal_spin_unlock_irqrestore [R_ARM_JUMP24: +0x0] 
FUNC_END GDC_DRV_RamSpinUnlock


FUNC_BEGIN GDC_DRV_PowerOn
    /*00019280*/ MOV         R0, #0 
    /*00019284*/ BX          LR 
FUNC_END GDC_DRV_PowerOn


FUNC_BEGIN GDC_DRV_SetProcOkState
    /*00019288*/ BX          LR 
FUNC_END GDC_DRV_SetProcOkState


FUNC_BEGIN GDC_DrvGyro_FIFO_CFG
    /*0001928c*/ MOV         R2, R1 
    /*00019290*/ ADD         R3, R1, #376                @ 0x178 
    /*00019294*/ ADD         R1, R1, #72                 @ 0x48 
    GDC_DrvGyro_FIFO_CFG_x19298:
    /*00019298*/ B           GDC_DrvGyro_FIFO_CFG_x19298 @ GDC_GYRO_DIS_FIFO_CFG [R_ARM_JUMP24: .text+0x1bddc] 
FUNC_END GDC_DrvGyro_FIFO_CFG


FUNC_BEGIN GDC_HAL_Open
    /*0001929c*/ PUSH        {R4, R5, R6, LR} 
    /*000192a0*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1ff0] 
    /*000192a4*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1ff0] 
    /*000192a8*/ MOV         R0, #0 
    /*000192ac*/ LDR         R5, [R4] 
    /*000192b0*/ CMP         R5, #0 
    /*000192b4*/ BEQ         GDC_HAL_Open_x192bc
    /*000192b8*/ POP         {R4, R5, R6, PC} 
    GDC_HAL_Open_x192bc:
    /*000192bc*/ MOV         R1, #65536                  @ 0x10000 
    /*000192c0*/ MOVT        R0, #4369                   @ 0x1111 
    /*000192c4*/ BL          0x00000000000192C4          @ osal_ioremap [R_ARM_CALL: +0x0] 
    /*000192c8*/ CMP         R0, #0 
    /*000192cc*/ STR         R0, [R4] 
    /*000192d0*/ BEQ         GDC_HAL_Open_x192e8
    /*000192d4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0x160] 
    /*000192d8*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0x160] 
    /*000192dc*/ MOV         R0, R5 
    /*000192e0*/ STR         R5, [R3] 
    /*000192e4*/ POP         {R4, R5, R6, PC} 
    GDC_HAL_Open_x192e8:
    /*000192e8*/ MVN         R0, #0 
    /*000192ec*/ POP         {R4, R5, R6, PC} 
FUNC_END GDC_HAL_Open


FUNC_BEGIN GDC_HAL_Close
    /*000192f0*/ MOVW        R3, #0                      @ gdc_en [R_ARM_MOVW_ABS_NC: .data+0x154] 
    /*000192f4*/ MOVT        R3, #0                      @ gdc_en [R_ARM_MOVT_ABS: .data+0x154] 
    /*000192f8*/ LDR         R3, [R3] 
    /*000192fc*/ CMP         R3, #0 
    /*00019300*/ BEQ         GDC_HAL_Close_x19340
    /*00019304*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0x160] 
    /*00019308*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0x160] 
    /*0001930c*/ PUSH        {R4, R5, R6, LR} 
    /*00019310*/ LDR         R4, [R3] 
    /*00019314*/ CMP         R4, #0 
    /*00019318*/ BEQ         GDC_HAL_Close_x19324
    /*0001931c*/ MOV         R0, #0 
    /*00019320*/ POP         {R4, R5, R6, PC} 
    GDC_HAL_Close_x19324:
    /*00019324*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1ff0] 
    /*00019328*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1ff0] 
    /*0001932c*/ LDR         R0, [R5] 
    /*00019330*/ BL          0x0000000000019330          @ osal_iounmap [R_ARM_CALL: +0x0] 
    /*00019334*/ STR         R4, [R5] 
    /*00019338*/ MOV         R0, #0 
    /*0001933c*/ POP         {R4, R5, R6, PC} 
    GDC_HAL_Close_x19340:
    /*00019340*/ MOV         R0, #0 
    /*00019344*/ BX          LR 
FUNC_END GDC_HAL_Close


FUNC_BEGIN GDC_HAL_SetNodeID
    /*00019348*/ LDR         R3, [R0, #244]              @ 0xf4 
    /*0001934c*/ STR         R1, [R0, #244]              @ 0xf4 
    /*00019350*/ BX          LR 
FUNC_END GDC_HAL_SetNodeID


FUNC_BEGIN GDC_HAL_SetMask
    /*00019354*/ STR         R1, [R0, #240]              @ 0xf0 
    /*00019358*/ BX          LR 
FUNC_END GDC_HAL_SetMask


FUNC_BEGIN GDC_HAL_SetLowDelay
    /*0001935c*/ LDR         IP, [R0, #292]              @ 0x124 
    /*00019360*/ BFI         IP, R1, #7, #16 
    /*00019364*/ ORR         IP, IP, #64                 @ 0x40 
    /*00019368*/ STR         IP, [R0, #292]              @ 0x124 
    /*0001936c*/ LDR         R1, [R0, #364]              @ 0x16c 
    /*00019370*/ STR         R3, [R0, #364]              @ 0x16c 
    /*00019374*/ LDR         R3, [R0, #368]              @ 0x170 
    /*00019378*/ STR         R2, [R0, #368]              @ 0x170 
    /*0001937c*/ BX          LR 
FUNC_END GDC_HAL_SetLowDelay


FUNC_BEGIN GDC_HAL_SetNext
    /*00019380*/ LDR         R1, [R0, #252]              @ 0xfc 
    /*00019384*/ STR         R3, [R0, #252]              @ 0xfc 
    /*00019388*/ LDR         R3, [R0, #248]              @ 0xf8 
    /*0001938c*/ STR         R2, [R0, #248]              @ 0xf8 
    /*00019390*/ BX          LR 
FUNC_END GDC_HAL_SetNext


FUNC_BEGIN GDC_HAL_Start
    /*00019394*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00019398*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1ff0] 
    /*0001939c*/ SUB         SP, SP, #8 
    /*000193a0*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1ff0] 
    /*000193a4*/ MOVW        R8, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6718] 
    /*000193a8*/ MOV         R6, R2 
    /*000193ac*/ LDR         R9, [SP, #40]               @ 0x28 
    /*000193b0*/ MOVT        R8, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6718] 
    /*000193b4*/ LDR         R4, [R1, R0, LSL #2] 
    /*000193b8*/ MOV         R5, R3 
    /*000193bc*/ LDR         R7, [SP, #44]               @ 0x2c 
    /*000193c0*/ MOV         SL, #16 
    /*000193c4*/ B           GDC_HAL_Start_x193fc
    GDC_HAL_Start_x193c8:
    /*000193c8*/ LDR         R1, [R4, #252]              @ 0xfc 
    /*000193cc*/ LDR         R2, [R4, #248]              @ 0xf8 
    /*000193d0*/ STR         R6, [SP] 
    /*000193d4*/ STR         R5, [SP, #4] 
    /*000193d8*/ BL          0x00000000000193D8          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000193dc*/ LDR         R2, [R7] 
    /*000193e0*/ ADD         R2, R2, #1 
    /*000193e4*/ STR         R2, [R7] 
    /*000193e8*/ BL          0x00000000000193E8          @ osal_isb [R_ARM_CALL: +0x0] 
    /*000193ec*/ BL          0x00000000000193EC          @ osal_dsb [R_ARM_CALL: +0x0] 
    /*000193f0*/ BL          0x00000000000193F0          @ osal_dmb [R_ARM_CALL: +0x0] 
    /*000193f4*/ SUBS        SL, SL, #1 
    /*000193f8*/ BEQ         GDC_HAL_Start_x19420
    GDC_HAL_Start_x193fc:
    /*000193fc*/ STR         R5, [R4, #252]              @ 0xfc 
    /*00019400*/ MOV         R0, R8 
    /*00019404*/ STR         R6, [R4, #248]              @ 0xf8 
    /*00019408*/ LDR         R3, [R4, #252]              @ 0xfc 
    /*0001940c*/ CMP         R3, R5 
    /*00019410*/ BNE         GDC_HAL_Start_x193c8
    /*00019414*/ LDR         R3, [R4, #248]              @ 0xf8 
    /*00019418*/ CMP         R3, R6 
    /*0001941c*/ BNE         GDC_HAL_Start_x193c8
    GDC_HAL_Start_x19420:
    /*00019420*/ BL          0x0000000000019420          @ osal_isb [R_ARM_CALL: +0x0] 
    /*00019424*/ BL          0x0000000000019424          @ osal_dsb [R_ARM_CALL: +0x0] 
    /*00019428*/ BL          0x0000000000019428          @ osal_dmb [R_ARM_CALL: +0x0] 
    /*0001942c*/ CMP         R9, #0 
    /*00019430*/ MOVEQ       R3, #1 
    /*00019434*/ STREQ       R3, [R4, #1280]             @ 0x500 
    /*00019438*/ MOVNE       R3, #3 
    /*0001943c*/ STRNE       R3, [R4, #1280]             @ 0x500 
    /*00019440*/ ADD         SP, SP, #8 
    /*00019444*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END GDC_HAL_Start


FUNC_BEGIN GDC_HAL_GetIntStatus
    /*00019448*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1ff0] 
    /*0001944c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1ff0] 
    /*00019450*/ LDR         R3, [R3, R0, LSL #2] 
    /*00019454*/ LDR         R3, [R3, #1300]             @ 0x514 
    /*00019458*/ STR         R3, [R1] 
    /*0001945c*/ BX          LR 
FUNC_END GDC_HAL_GetIntStatus


FUNC_BEGIN GDC_HAL_ClrIntStatus
    /*00019460*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1ff0] 
    /*00019464*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1ff0] 
    /*00019468*/ CMP         R1, #0 
    /*0001946c*/ LDR         R3, [R3, R0, LSL #2] 
    /*00019470*/ MOVEQ       R2, #2 
    /*00019474*/ STRNE       R1, [R3, #1296]             @ 0x510 
    /*00019478*/ STREQ       R2, [R3, #1296]             @ 0x510 
    /*0001947c*/ BX          LR 
FUNC_END GDC_HAL_ClrIntStatus


FUNC_BEGIN GDC_HAL_GetNodeID
    /*00019480*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1ff0] 
    /*00019484*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1ff0] 
    /*00019488*/ LDR         R3, [R3, R0, LSL #2] 
    /*0001948c*/ LDR         R3, [R3, #244]              @ 0xf4 
    /*00019490*/ STR         R3, [R1] 
    /*00019494*/ BX          LR 
FUNC_END GDC_HAL_GetNodeID


FUNC_BEGIN GDC_HAL_SetOutstanding
    /*00019498*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x1ff0] 
    /*0001949c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x1ff0] 
    /*000194a0*/ LDR         R3, [R3, R0, LSL #2] 
    /*000194a4*/ STR         R1, [R3, #1328]             @ 0x530 
    /*000194a8*/ BX          LR 
FUNC_END GDC_HAL_SetOutstanding


FUNC_BEGIN expandFifoWinSize
    /*000194b0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000194b4*/ LDR         R3, [R2, #16] 
    /*000194b8*/ LDR         LR, [R2, #12] 
    /*000194bc*/ LDR         IP, [R0] 
    /*000194c0*/ ADD         R3, R3, LR 
    /*000194c4*/ ADD         R3, R3, #31 
    /*000194c8*/ ADD         R3, R3, IP 
    /*000194cc*/ BIC         R3, R3, #31 
    /*000194d0*/ ADD         R3, R3, #64                 @ 0x40 
    /*000194d4*/ STR         R3, [R0] 
    /*000194d8*/ LDR         R3, [R2, #20] 
    /*000194dc*/ LDR         IP, [R2, #12] 
    /*000194e0*/ LDR         R2, [R1] 
    /*000194e4*/ ADD         R3, R3, IP 
    /*000194e8*/ ADD         R3, R3, R2 
    /*000194ec*/ BIC         R3, R3, #1 
    /*000194f0*/ ADD         R3, R3, #11 
    /*000194f4*/ BIC         R3, R3, #7 
    /*000194f8*/ STR         R3, [R1] 
    /*000194fc*/ LDR         R3, [R0] 
    /*00019500*/ ADD         R3, R3, #10 
    /*00019504*/ STR         R3, [R0] 
    /*00019508*/ LDR         R3, [R1] 
    /*0001950c*/ ADD         R3, R3, #10 
    /*00019510*/ STR         R3, [R1] 
    /*00019514*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END expandFifoWinSize


FUNC_BEGIN GDC_FIFO_COMM_CFG
    /*00019518*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0001951c*/ MOVW        IP, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x10b0] 
    /*00019520*/ SUB         SP, SP, #12 
    /*00019524*/ MOVT        IP, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x10b0] 
    /*00019528*/ ADD         R5, IP, #56                 @ 0x38 
    /*0001952c*/ MOV         R4, #1 
    /*00019530*/ MOV         R3, #0 
    /*00019534*/ MOV         LR, IP 
    /*00019538*/ STR         IP, [R1, #48]               @ 0x30 
    /*0001953c*/ ADD         R7, IP, #48                 @ 0x30 
    /*00019540*/ STR         R4, [R1, #68]               @ 0x44 
    /*00019544*/ MOV         R4, IP 
    /*00019548*/ STR         IP, [R1, #56]               @ 0x38 
    /*0001954c*/ MOV         IP, #6 
    /*00019550*/ STR         R5, [R1, #52]               @ 0x34 
    /*00019554*/ STR         R5, [R1, #60]               @ 0x3c 
    /*00019558*/ STR         R3, [R1, #44]               @ 0x2c 
    /*0001955c*/ STRB        IP, [R1, #64]               @ 0x40 
    /*00019560*/ STRB        IP, [R1, #65]               @ 0x41 
    GDC_FIFO_COMM_CFG_x19564:
    /*00019564*/ ADD         R6, R4, #5 
    /*00019568*/ MOV         R1, R4 
    /*0001956c*/ MOV         IP, #0 
    GDC_FIFO_COMM_CFG_x19570:
    /*00019570*/ EOR         R5, R3, R3, ASR #31 
    /*00019574*/ ADD         IP, IP, R3 
    /*00019578*/ SUB         R5, R5, R3, ASR #31 
    /*0001957c*/ CMP         R5, #64                     @ 0x40 
    /*00019580*/ BGT         GDC_FIFO_COMM_CFG_x19594
    /*00019584*/ CMP         R1, R6 
    /*00019588*/ BEQ         GDC_FIFO_COMM_CFG_x195c4
    /*0001958c*/ LDRSB       R3, [R1, #1]! 
    /*00019590*/ B           GDC_FIFO_COMM_CFG_x19570
    GDC_FIFO_COMM_CFG_x19594:
    /*00019594*/ MOV         R3, #508                    @ 0x1fc 
    /*00019598*/ MOV         R1, #37                     @ 0x25 
    /*0001959c*/ STR         R3, [SP] 
    /*000195a0*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6760] 
    /*000195a4*/ LDR         R3, [PC, #460]              @ 0x0000000000019778 
    /*000195a8*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6760] 
    /*000195ac*/ MOV         R0, #3 
    /*000195b0*/ BL          0x00000000000195B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000195b4*/ MVN         R1, #0 
    /*000195b8*/ MOV         R0, R1 
    /*000195bc*/ ADD         SP, SP, #12 
    /*000195c0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    GDC_FIFO_COMM_CFG_x195c4:
    /*000195c4*/ CMP         IP, #64                     @ 0x40 
    /*000195c8*/ BNE         GDC_FIFO_COMM_CFG_x19594
    /*000195cc*/ CMP         R7, R4 
    /*000195d0*/ LDRSBNE     R3, [R4, #6]! 
    /*000195d4*/ BNE         GDC_FIFO_COMM_CFG_x19564
    /*000195d8*/ LDR         R6, [PC, #412]              @ 0x000000000001977c 
    /*000195dc*/ MOV         R3, #0 
    /*000195e0*/ ADD         R9, R6, #32 
    /*000195e4*/ MOV         R5, R6 
    GDC_FIFO_COMM_CFG_x195e8:
    /*000195e8*/ ADD         R8, R5, #3 
    /*000195ec*/ MOV         R1, R5 
    /*000195f0*/ MOV         IP, #0 
    GDC_FIFO_COMM_CFG_x195f4:
    /*000195f4*/ EOR         R7, R3, R3, ASR #31 
    /*000195f8*/ ADD         IP, IP, R3 
    /*000195fc*/ SUB         R7, R7, R3, ASR #31 
    /*00019600*/ CMP         R7, #64                     @ 0x40 
    /*00019604*/ BGT         GDC_FIFO_COMM_CFG_x19594
    /*00019608*/ CMP         R8, R1 
    /*0001960c*/ LDRSBNE     R3, [R1, #1]! 
    /*00019610*/ BNE         GDC_FIFO_COMM_CFG_x195f4
    /*00019614*/ CMP         IP, #64                     @ 0x40 
    /*00019618*/ BNE         GDC_FIFO_COMM_CFG_x19594
    /*0001961c*/ CMP         R9, R5 
    /*00019620*/ LDRSBNE     R3, [R5, #4]! 
    /*00019624*/ BNE         GDC_FIFO_COMM_CFG_x195e8
    /*00019628*/ MOV         R3, #0 
    GDC_FIFO_COMM_CFG_x1962c:
    /*0001962c*/ ADD         R8, LR, #5 
    /*00019630*/ MOV         R1, LR 
    /*00019634*/ MOV         IP, #0 
    GDC_FIFO_COMM_CFG_x19638:
    /*00019638*/ EOR         R7, R3, R3, ASR #31 
    /*0001963c*/ ADD         IP, IP, R3 
    /*00019640*/ SUB         R7, R7, R3, ASR #31 
    /*00019644*/ CMP         R7, #64                     @ 0x40 
    /*00019648*/ BGT         GDC_FIFO_COMM_CFG_x19594
    /*0001964c*/ CMP         R8, R1 
    /*00019650*/ LDRSBNE     R3, [R1, #1]! 
    /*00019654*/ BNE         GDC_FIFO_COMM_CFG_x19638
    /*00019658*/ CMP         IP, #64                     @ 0x40 
    /*0001965c*/ BNE         GDC_FIFO_COMM_CFG_x19594
    /*00019660*/ CMP         LR, R4 
    /*00019664*/ LDRSBNE     R3, [LR, #6]! 
    /*00019668*/ BNE         GDC_FIFO_COMM_CFG_x1962c
    /*0001966c*/ MOV         R3, #0 
    GDC_FIFO_COMM_CFG_x19670:
    /*00019670*/ ADD         R4, R6, #3 
    /*00019674*/ MOV         R1, R6 
    /*00019678*/ MOV         IP, #0 
    GDC_FIFO_COMM_CFG_x1967c:
    /*0001967c*/ EOR         LR, R3, R3, ASR #31 
    /*00019680*/ ADD         IP, IP, R3 
    /*00019684*/ SUB         LR, LR, R3, ASR #31 
    /*00019688*/ CMP         LR, #64                     @ 0x40 
    /*0001968c*/ BGT         GDC_FIFO_COMM_CFG_x19594
    /*00019690*/ CMP         R4, R1 
    /*00019694*/ LDRSBNE     R3, [R1, #1]! 
    /*00019698*/ BNE         GDC_FIFO_COMM_CFG_x1967c
    /*0001969c*/ CMP         IP, #64                     @ 0x40 
    /*000196a0*/ BNE         GDC_FIFO_COMM_CFG_x19594
    /*000196a4*/ CMP         R5, R6 
    /*000196a8*/ LDRSBNE     R3, [R6, #4]! 
    /*000196ac*/ BNE         GDC_FIFO_COMM_CFG_x19670
    /*000196b0*/ LDM         R2, {R1, R3} 
    /*000196b4*/ CMP         R1, #2 
    /*000196b8*/ LSRLS       R3, R3, #1 
    /*000196bc*/ STRLS       R3, [R2, #4] 
    /*000196c0*/ LDR         IP, [R0, #8] 
    /*000196c4*/ CMP         IP, #10 
    /*000196c8*/ BEQ         GDC_FIFO_COMM_CFG_x1975c
    GDC_FIFO_COMM_CFG_x196cc:
    /*000196cc*/ CMP         R1, #255                    @ 0xff 
    /*000196d0*/ MOVHI       R1, #256                    @ 0x100 
    /*000196d4*/ STRHI       R1, [R2] 
    /*000196d8*/ BHI         GDC_FIFO_COMM_CFG_x1972c
    /*000196dc*/ CMP         R1, #127                    @ 0x7f 
    /*000196e0*/ MOVHI       R1, #128                    @ 0x80 
    /*000196e4*/ STRHI       R1, [R2] 
    /*000196e8*/ BHI         GDC_FIFO_COMM_CFG_x1972c
    /*000196ec*/ CMP         R1, #63                     @ 0x3f 
    /*000196f0*/ MOVHI       R1, #64                     @ 0x40 
    /*000196f4*/ STRHI       R1, [R2] 
    /*000196f8*/ BHI         GDC_FIFO_COMM_CFG_x1972c
    /*000196fc*/ CMP         R1, #31 
    /*00019700*/ MOVHI       R1, #32 
    /*00019704*/ STRHI       R1, [R2] 
    /*00019708*/ BHI         GDC_FIFO_COMM_CFG_x1972c
    /*0001970c*/ CMP         R1, #15 
    /*00019710*/ MOVHI       R1, #16 
    /*00019714*/ STRHI       R1, [R2] 
    /*00019718*/ BHI         GDC_FIFO_COMM_CFG_x1972c
    /*0001971c*/ CMP         R1, #7 
    /*00019720*/ MOVHI       R1, #8 
    /*00019724*/ MOVLS       R1, #4 
    /*00019728*/ STR         R1, [R2] 
    GDC_FIFO_COMM_CFG_x1972c:
    /*0001972c*/ BIC         R3, R3, #1 
    /*00019730*/ MOV         R1, #0 
    /*00019734*/ CMP         R3, #32 
    /*00019738*/ MOVCS       R3, #32 
    /*0001973c*/ CMP         R3, #2 
    /*00019740*/ MOVCC       R3, #2 
    /*00019744*/ STR         R3, [R2, #4] 
    /*00019748*/ LDR         R3, [R0, #8] 
    /*0001974c*/ MOV         R0, R1 
    /*00019750*/ STR         R3, [R2, #24] 
    /*00019754*/ ADD         SP, SP, #12 
    /*00019758*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    GDC_FIFO_COMM_CFG_x1975c:
    /*0001975c*/ LSL         R1, R1, #3 
    /*00019760*/ MOVW        R4, #52429                  @ 0xcccd 
    /*00019764*/ MOVT        R4, #52428                  @ 0xcccc 
    /*00019768*/ UMULL       R4, R5, R1, R4 
    /*0001976c*/ LSR         R1, R5, #3 
    /*00019770*/ STR         R1, [R2] 
    /*00019774*/ B           GDC_FIFO_COMM_CFG_x196cc
    /*00019778*/ ANDEQ       R1, R0, IP, LSL #2 
    /*0001977c*/ ANDEQ       R1, R0, R8, ROR #1 
FUNC_END GDC_FIFO_COMM_CFG


FUNC_BEGIN calWinSzOfBlkAfterHomo
    /*00019780*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00019784*/ SUB         SP, SP, #156                @ 0x9c 
    /*00019788*/ ADD         IP, SP, #72                 @ 0x48 
    /*0001978c*/ MOV         R8, #0 
    /*00019790*/ LDR         FP, [SP, #192]              @ 0xc0 
    /*00019794*/ MOV         SL, R0 
    /*00019798*/ STM         IP, {R0, R1, R2, R3} 
    /*0001979c*/ LDR         R1, [SP, #76]               @ 0x4c 
    /*000197a0*/ LDR         R2, [SP, #84]               @ 0x54 
    /*000197a4*/ LDR         R3, [SP, #80]               @ 0x50 
    /*000197a8*/ ADD         R2, R1, R2 
    /*000197ac*/ MOV         R7, R1 
    /*000197b0*/ ADD         R3, R0, R3 
    /*000197b4*/ SUB         R2, R2, #1 
    /*000197b8*/ SUB         R3, R3, #1 
    /*000197bc*/ STR         R1, [SP, #92]               @ 0x5c 
    /*000197c0*/ STR         R1, [SP, #100]              @ 0x64 
    /*000197c4*/ STR         R2, [SP, #108]              @ 0x6c 
    /*000197c8*/ STR         R2, [SP, #116]              @ 0x74 
    /*000197cc*/ STR         R3, [SP, #96]               @ 0x60 
    /*000197d0*/ STR         R3, [SP, #104]              @ 0x68 
    /*000197d4*/ STR         R0, [SP, #88]               @ 0x58 
    /*000197d8*/ STR         R0, [SP, #112]              @ 0x70 
    calWinSzOfBlkAfterHomo_x197dc:
    /*000197dc*/ LDR         R0, [FP, #52]               @ 0x34 
    /*000197e0*/ ASR         R3, SL, #31 
    /*000197e4*/ LDR         IP, [FP, #48]               @ 0x30 
    /*000197e8*/ MOV         R2, R7 
    /*000197ec*/ MOV         R5, R3 
    /*000197f0*/ ASR         R3, R7, #31 
    /*000197f4*/ STRD        R2, [SP, #40]               @ 0x28 
    /*000197f8*/ MOV         R4, SL 
    /*000197fc*/ MUL         R3, SL, R0 
    /*00019800*/ LDR         LR, [FP, #60]               @ 0x3c 
    /*00019804*/ MLA         R3, IP, R5, R3 
    /*00019808*/ STRD        R4, [SP, #48]               @ 0x30 
    /*0001980c*/ UMULL       R4, R5, SL, IP 
    /*00019810*/ LDR         R1, [FP, #56]               @ 0x38 
    /*00019814*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*00019818*/ ADD         R9, SP, #120                @ 0x78 
    /*0001981c*/ MUL         R6, R7, LR 
    /*00019820*/ ADD         R5, R3, R5 
    /*00019824*/ MLA         R6, R1, R2, R6 
    /*00019828*/ UMULL       R2, R3, R7, R1 
    /*0001982c*/ STRD        R2, [SP, #32] 
    /*00019830*/ LDRD        R2, [FP, #64]               @ 0x40 
    /*00019834*/ STRD        R2, [SP, #56]               @ 0x38 
    /*00019838*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0001983c*/ ADD         R3, R6, R3 
    /*00019840*/ STR         R3, [SP, #36]               @ 0x24 
    /*00019844*/ LDRD        R2, [SP, #32] 
    /*00019848*/ ADDS        R2, R2, R4 
    /*0001984c*/ ADC         R3, R3, R5 
    /*00019850*/ LDRD        R4, [SP, #56]               @ 0x38 
    /*00019854*/ ADDS        R4, R4, R2 
    /*00019858*/ ADC         R5, R5, R3 
    /*0001985c*/ STRD        R4, [SP, #64]               @ 0x40 
    /*00019860*/ MOV         R2, R4 
    /*00019864*/ ORRS        R4, R4, R5 
    /*00019868*/ MOV         R3, R5 
    /*0001986c*/ BEQ         calWinSzOfBlkAfterHomo_x19a3c
    /*00019870*/ LDR         R1, [FP, #4] 
    /*00019874*/ LDR         R4, [FP] 
    /*00019878*/ LDR         LR, [SP, #52]               @ 0x34 
    /*0001987c*/ MUL         R1, SL, R1 
    /*00019880*/ LDR         IP, [FP, #12] 
    /*00019884*/ MLA         R1, R4, LR, R1 
    /*00019888*/ LDR         R0, [FP, #8] 
    /*0001988c*/ UMULL       R4, R5, R4, SL 
    /*00019890*/ LDR         LR, [SP, #44]               @ 0x2c 
    /*00019894*/ MUL         IP, R7, IP 
    /*00019898*/ ADD         R5, R1, R5 
    /*0001989c*/ MLA         IP, R0, LR, IP 
    /*000198a0*/ UMULL       R0, R1, R0, R7 
    /*000198a4*/ STRD        R0, [SP, #32] 
    /*000198a8*/ ADD         R1, IP, R1 
    /*000198ac*/ STR         R1, [SP, #36]               @ 0x24 
    /*000198b0*/ LDRD        R0, [SP, #32] 
    /*000198b4*/ ADDS        R0, R0, R4 
    /*000198b8*/ ADC         R1, R1, R5 
    /*000198bc*/ LDRD        R4, [FP, #16] 
    /*000198c0*/ ADDS        R4, R4, R0 
    /*000198c4*/ ADC         R5, R5, R1 
    /*000198c8*/ MOV         R0, R4 
    /*000198cc*/ MOV         R1, R5 
    /*000198d0*/ BL          0x00000000000198D0          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*000198d4*/ LDR         IP, [FP, #28] 
    /*000198d8*/ LDR         R4, [FP, #24] 
    /*000198dc*/ LDR         LR, [SP, #52]               @ 0x34 
    /*000198e0*/ LDR         R1, [FP, #36]               @ 0x24 
    /*000198e4*/ MUL         IP, SL, IP 
    /*000198e8*/ LDR         R6, [FP, #32] 
    /*000198ec*/ MLA         IP, R4, LR, IP 
    /*000198f0*/ LDR         LR, [SP, #44]               @ 0x2c 
    /*000198f4*/ MUL         R1, R7, R1 
    /*000198f8*/ LDRD        R2, [SP, #64]               @ 0x40 
    /*000198fc*/ MLA         R1, R6, LR, R1 
    /*00019900*/ UMULL       R6, R7, R6, R7 
    /*00019904*/ UMULL       R4, R5, R4, SL 
    /*00019908*/ ADD         R7, R1, R7 
    /*0001990c*/ ADD         IP, IP, R5 
    /*00019910*/ ADDS        R4, R4, R6 
    /*00019914*/ ADC         R5, IP, R7 
    /*00019918*/ STR         R0, [R9, R8]! 
    /*0001991c*/ ADD         R8, R8, #8 
    /*00019920*/ LDRD        R0, [FP, #40]               @ 0x28 
    /*00019924*/ ADDS        R0, R0, R4 
    /*00019928*/ ADC         R1, R1, R5 
    /*0001992c*/ BL          0x000000000001992C          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*00019930*/ CMP         R8, #32 
    /*00019934*/ ADD         R3, SP, #88                 @ 0x58 
    /*00019938*/ ADD         R3, R3, R8 
    /*0001993c*/ STR         R0, [R9, #4] 
    /*00019940*/ LDRNE       R7, [R3, #4] 
    /*00019944*/ ADDNE       R3, SP, #88                 @ 0x58 
    /*00019948*/ LDRNE       SL, [R3, R8] 
    /*0001994c*/ BNE         calWinSzOfBlkAfterHomo_x197dc
    /*00019950*/ LDR         R0, [SP, #128]              @ 0x80 
    /*00019954*/ LDR         R1, [SP, #136]              @ 0x88 
    /*00019958*/ LDR         R2, [SP, #120]              @ 0x78 
    /*0001995c*/ CMP         R0, R1 
    /*00019960*/ LDR         R3, [SP, #144]              @ 0x90 
    /*00019964*/ BLT         calWinSzOfBlkAfterHomo_x199f8
    /*00019968*/ CMP         R1, R3 
    /*0001996c*/ MOVGE       IP, R3 
    /*00019970*/ MOVLT       IP, R1 
    /*00019974*/ CMP         IP, R2 
    /*00019978*/ MOVGE       IP, R2 
    /*0001997c*/ CMP         R0, R1 
    /*00019980*/ BLE         calWinSzOfBlkAfterHomo_x19a14
    calWinSzOfBlkAfterHomo_x19984:
    /*00019984*/ CMP         R0, R3 
    /*00019988*/ MOVGE       R3, R0 
    calWinSzOfBlkAfterHomo_x1998c:
    /*0001998c*/ CMP         R3, R2 
    /*00019990*/ LDR         LR, [SP, #132]              @ 0x84 
    /*00019994*/ LDR         R0, [SP, #140]              @ 0x8c 
    /*00019998*/ MOVLT       R3, R2 
    /*0001999c*/ LDR         R4, [SP, #124]              @ 0x7c 
    /*000199a0*/ CMP         LR, R0 
    /*000199a4*/ LDR         R1, [SP, #148]              @ 0x94 
    /*000199a8*/ BGE         calWinSzOfBlkAfterHomo_x19a2c
    /*000199ac*/ CMP         LR, R1 
    /*000199b0*/ MOVLT       R2, LR 
    /*000199b4*/ MOVGE       R2, R1 
    calWinSzOfBlkAfterHomo_x199b8:
    /*000199b8*/ CMP         R2, R4 
    /*000199bc*/ MOVGE       R2, R4 
    /*000199c0*/ CMP         LR, R0 
    /*000199c4*/ BLE         calWinSzOfBlkAfterHomo_x19a20
    /*000199c8*/ CMP         LR, R1 
    /*000199cc*/ MOVGE       R1, LR 
    calWinSzOfBlkAfterHomo_x199d0:
    /*000199d0*/ CMP         R1, R4 
    /*000199d4*/ RSBGE       R2, R2, R1 
    /*000199d8*/ RSBLT       R2, R2, R4 
    /*000199dc*/ LDR         R1, [SP, #196]              @ 0xc4 
    /*000199e0*/ MOV         R0, #0 
    /*000199e4*/ SUB         R3, R3, IP 
    /*000199e8*/ STR         R3, [R1] 
    /*000199ec*/ STR         R2, [R1, #4] 
    /*000199f0*/ ADD         SP, SP, #156                @ 0x9c 
    /*000199f4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    calWinSzOfBlkAfterHomo_x199f8:
    /*000199f8*/ CMP         R0, R3 
    /*000199fc*/ MOVGE       IP, R3 
    /*00019a00*/ MOVLT       IP, R0 
    /*00019a04*/ CMP         IP, R2 
    /*00019a08*/ MOVGE       IP, R2 
    /*00019a0c*/ CMP         R0, R1 
    /*00019a10*/ BGT         calWinSzOfBlkAfterHomo_x19984
    calWinSzOfBlkAfterHomo_x19a14:
    /*00019a14*/ CMP         R1, R3 
    /*00019a18*/ MOVGE       R3, R1 
    /*00019a1c*/ B           calWinSzOfBlkAfterHomo_x1998c
    calWinSzOfBlkAfterHomo_x19a20:
    /*00019a20*/ CMP         R0, R1 
    /*00019a24*/ MOVGE       R1, R0 
    /*00019a28*/ B           calWinSzOfBlkAfterHomo_x199d0
    calWinSzOfBlkAfterHomo_x19a2c:
    /*00019a2c*/ CMP         R0, R1 
    /*00019a30*/ MOVLT       R2, R0 
    /*00019a34*/ MOVGE       R2, R1 
    /*00019a38*/ B           calWinSzOfBlkAfterHomo_x199b8
    calWinSzOfBlkAfterHomo_x19a3c:
    /*00019a3c*/ LDRD        R2, [SP, #56]               @ 0x38 
    /*00019a40*/ STR         R1, [SP, #16] 
    /*00019a44*/ MOV         R1, #37                     @ 0x25 
    /*00019a48*/ STR         R0, [SP, #12] 
    /*00019a4c*/ MOV         R0, #3 
    /*00019a50*/ STRD        R2, [SP, #24] 
    /*00019a54*/ MOVW        R3, #1699                   @ 0x6a3 
    /*00019a58*/ STR         LR, [SP, #20] 
    /*00019a5c*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x67b0] 
    /*00019a60*/ STR         R3, [SP] 
    /*00019a64*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x67b0] 
    /*00019a68*/ STR         IP, [SP, #8] 
    /*00019a6c*/ LDR         R3, [PC, #12]               @ 0x0000000000019a80 
    /*00019a70*/ BL          0x0000000000019A70          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019a74*/ MVN         R0, #0 
    /*00019a78*/ ADD         SP, SP, #156                @ 0x9c 
    /*00019a7c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*00019a80*/ ANDEQ       R1, R0, R0, LSR #2 
FUNC_END calWinSzOfBlkAfterHomo


FUNC_BEGIN calWinSzAfterHomo
    /*00019a84*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00019a88*/ SUB         SP, SP, #156                @ 0x9c 
    /*00019a8c*/ MOV         R8, R2 
    /*00019a90*/ MOV         R9, R0 
    /*00019a94*/ LDR         R2, [SP, #192]              @ 0xc0 
    /*00019a98*/ MOV         FP, R1 
    /*00019a9c*/ LDR         LR, [R8, #48]               @ 0x30 
    /*00019aa0*/ LDRD        R0, [R8, #64]               @ 0x40 
    /*00019aa4*/ LDR         SL, [R8, #52]               @ 0x34 
    /*00019aa8*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00019aac*/ MOV         R4, R0 
    /*00019ab0*/ MOV         R5, R1 
    /*00019ab4*/ UMULL       R0, R1, R2, LR 
    /*00019ab8*/ STRD        R4, [SP, #32] 
    /*00019abc*/ RSBS        R4, R4, #0 
    /*00019ac0*/ LDR         IP, [SP, #196]              @ 0xc4 
    /*00019ac4*/ RSC         R5, R5, #0 
    /*00019ac8*/ CMP         R4, R0 
    /*00019acc*/ LDR         R7, [R8, #56]               @ 0x38 
    /*00019ad0*/ LDR         R6, [R8, #60]               @ 0x3c 
    /*00019ad4*/ MLA         R1, R2, SL, R1 
    /*00019ad8*/ SBCS        R1, R5, R1 
    /*00019adc*/ BGE         calWinSzAfterHomo_x19bc0
    /*00019ae0*/ UMULL       R0, R1, IP, R7 
    /*00019ae4*/ CMP         R4, R0 
    /*00019ae8*/ MLA         R1, IP, R6, R1 
    /*00019aec*/ SBCS        R1, R5, R1 
    /*00019af0*/ BGE         calWinSzAfterHomo_x19bc0
    /*00019af4*/ ADD         SL, SP, #56                 @ 0x38 
    /*00019af8*/ MOV         R3, #0 
    /*00019afc*/ ADD         R5, SP, #88                 @ 0x58 
    /*00019b00*/ MOV         R4, R3 
    /*00019b04*/ MOV         R7, R3 
    /*00019b08*/ MOV         R6, SL 
    /*00019b0c*/ SUB         R2, R2, R9 
    /*00019b10*/ SUB         IP, IP, FP 
    /*00019b14*/ STR         R2, [SP, #104]              @ 0x68 
    /*00019b18*/ STR         R2, [SP, #120]              @ 0x78 
    /*00019b1c*/ STR         IP, [SP, #124]              @ 0x7c 
    /*00019b20*/ STR         IP, [SP, #140]              @ 0x8c 
    /*00019b24*/ STR         R3, [SP, #88]               @ 0x58 
    /*00019b28*/ STR         R3, [SP, #92]               @ 0x5c 
    /*00019b2c*/ STR         R3, [SP, #108]              @ 0x6c 
    /*00019b30*/ STR         R3, [SP, #136]              @ 0x88 
    calWinSzAfterHomo_x19b34:
    /*00019b34*/ ADD         R3, SP, #152                @ 0x98 
    /*00019b38*/ STR         R9, [R5, #8] 
    /*00019b3c*/ ADD         R3, R3, R4, LSL #4 
    /*00019b40*/ STR         FP, [R5, #12] 
    /*00019b44*/ SUB         R3, R3, #64                 @ 0x40 
    /*00019b48*/ STR         R6, [SP, #4] 
    /*00019b4c*/ STR         R8, [SP] 
    /*00019b50*/ ADD         R5, R5, #16 
    /*00019b54*/ LDM         R3, {R0, R1, R2, R3} 
    /*00019b58*/ BL          0x0000000000019780 
    /*00019b5c*/ ADD         R1, SP, #52                 @ 0x34 
    /*00019b60*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*00019b64*/ SUBS        R3, R0, #0 
    /*00019b68*/ ADD         R0, SP, #48                 @ 0x30 
    /*00019b6c*/ STR         R3, [SP, #32] 
    /*00019b70*/ BNE         calWinSzAfterHomo_x19bb4
    /*00019b74*/ LDR         R3, [R6, #4] 
    /*00019b78*/ ADD         R6, R6, #8 
    /*00019b7c*/ LDR         IP, [SL, R4, LSL #3] 
    /*00019b80*/ ADD         R4, R4, #1 
    /*00019b84*/ STR         R3, [SP, #52]               @ 0x34 
    /*00019b88*/ STR         IP, [SP, #48]               @ 0x30 
    /*00019b8c*/ BL          0x00000000000194B0 
    /*00019b90*/ LDR         R2, [SP, #48]               @ 0x30 
    /*00019b94*/ LDR         R3, [SP, #52]               @ 0x34 
    /*00019b98*/ MUL         R3, R3, R2 
    /*00019b9c*/ CMP         R7, R3 
    /*00019ba0*/ MOVCC       R7, R3 
    /*00019ba4*/ CMP         R4, #4 
    /*00019ba8*/ BNE         calWinSzAfterHomo_x19b34
    /*00019bac*/ LDR         R3, [SP, #200]              @ 0xc8 
    /*00019bb0*/ STR         R7, [R3] 
    calWinSzAfterHomo_x19bb4:
    /*00019bb4*/ LDR         R0, [SP, #32] 
    /*00019bb8*/ ADD         SP, SP, #156                @ 0x9c 
    /*00019bbc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    calWinSzAfterHomo_x19bc0:
    /*00019bc0*/ LDRD        R2, [SP, #32] 
    /*00019bc4*/ MOV         R1, #37                     @ 0x25 
    /*00019bc8*/ STR         R7, [SP, #16] 
    /*00019bcc*/ MOV         R0, #3 
    /*00019bd0*/ STR         R6, [SP, #20] 
    /*00019bd4*/ STRD        R2, [SP, #24] 
    /*00019bd8*/ MOVW        R3, #1772                   @ 0x6ec 
    /*00019bdc*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x67b0] 
    /*00019be0*/ STR         R3, [SP] 
    /*00019be4*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x67b0] 
    /*00019be8*/ MVN         R3, #0 
    /*00019bec*/ STR         LR, [SP, #8] 
    /*00019bf0*/ STR         R3, [SP, #32] 
    /*00019bf4*/ STR         SL, [SP, #12] 
    /*00019bf8*/ LDR         R3, [PC, #4]                @ 0x0000000000019c04 
    /*00019bfc*/ BL          0x0000000000019BFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019c00*/ B           calWinSzAfterHomo_x19bb4
    /*00019c04*/ ANDEQ       R1, R0, IP, LSR #2 
FUNC_END calWinSzAfterHomo


FUNC_BEGIN expandFIFO.part.0
    /*00019c08*/ ADD         R1, R0, #12 
    /*00019c0c*/ LDM         R1, {R1, R2, R3} 
    /*00019c10*/ ADD         R1, R1, #4 
    /*00019c14*/ ADD         R2, R2, #4 
    /*00019c18*/ ADD         R3, R3, #2 
    /*00019c1c*/ STR         R1, [R0, #12] 
    /*00019c20*/ STR         R2, [R0, #16] 
    /*00019c24*/ STR         R3, [R0, #20] 
    /*00019c28*/ BX          LR 
FUNC_END expandFIFO.part.0


FUNC_BEGIN GDCPolar2Cartesian.constprop.5
    /*00019c2c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00019c30*/ SUB         SP, SP, #348                @ 0x15c 
    /*00019c34*/ ADD         R5, SP, #272                @ 0x110 
    /*00019c38*/ MOV         R6, R1 
    /*00019c3c*/ STR         R0, [SP, #16] 
    /*00019c40*/ MOV         R2, #72                     @ 0x48 
    /*00019c44*/ MOV         R1, #0 
    /*00019c48*/ ADD         R0, SP, #200                @ 0xc8 
    /*00019c4c*/ ADD         R4, SP, #64                 @ 0x40 
    /*00019c50*/ BL          0x0000000000019C50          @ memset [R_ARM_CALL: +0x0] 
    /*00019c54*/ MOV         R2, #72                     @ 0x48 
    /*00019c58*/ MOV         R1, #0 
    /*00019c5c*/ MOV         R0, R5 
    /*00019c60*/ ADD         R9, SP, #24 
    /*00019c64*/ BL          0x0000000000019C64          @ memset [R_ARM_CALL: +0x0] 
    /*00019c68*/ MOV         R2, #68                     @ 0x44 
    /*00019c6c*/ LDR         R1, [PC, #804]              @ 0x0000000000019f98 
    /*00019c70*/ MOV         R0, R4 
    /*00019c74*/ BL          0x0000000000019C74          @ memcpy [R_ARM_CALL: +0x0] 
    /*00019c78*/ MOV         R2, #68                     @ 0x44 
    /*00019c7c*/ LDR         R1, [PC, #792]              @ 0x0000000000019f9c 
    /*00019c80*/ ADD         R0, SP, #132                @ 0x84 
    /*00019c84*/ BL          0x0000000000019C84          @ memcpy [R_ARM_CALL: +0x0] 
    /*00019c88*/ LDR         LR, [PC, #784]              @ 0x0000000000019fa0 
    /*00019c8c*/ LDR         R7, [R6] 
    /*00019c90*/ ADD         R8, SP, #44                 @ 0x2c 
    /*00019c94*/ LDM         LR!, {R0, R1, R2, R3} 
    /*00019c98*/ CMP         R7, #0 
    /*00019c9c*/ MOV         IP, LR 
    /*00019ca0*/ LDR         SL, [IP], #4 
    /*00019ca4*/ STMIA       R9!, {R0, R1, R2, R3} 
    /*00019ca8*/ LDM         IP!, {R0, R1, R2, R3} 
    /*00019cac*/ STR         SL, [R9] 
    /*00019cb0*/ LDR         IP, [IP] 
    /*00019cb4*/ STMIA       R8!, {R0, R1, R2, R3} 
    /*00019cb8*/ STR         IP, [R8] 
    /*00019cbc*/ BLT         GDCPolar2Cartesian.constprop.5_x19f70
    /*00019cc0*/ LDR         R1, [SP, #16] 
    /*00019cc4*/ BICS        R3, R7, #262144             @ 0x40000 
    /*00019cc8*/ LDR         R9, [R6, #4] 
    /*00019ccc*/ MOV         R0, #0 
    /*00019cd0*/ UBFX        R2, R7, #16, #2 
    /*00019cd4*/ STR         R2, [SP, #20] 
    /*00019cd8*/ STR         R0, [R1] 
    /*00019cdc*/ STR         R0, [R1, #4] 
    /*00019ce0*/ STR         R2, [R6, #8] 
    /*00019ce4*/ BEQ         GDCPolar2Cartesian.constprop.5_x19dec
    /*00019ce8*/ CMP         R7, #65536                  @ 0x10000 
    /*00019cec*/ BEQ         GDCPolar2Cartesian.constprop.5_x19ea4
    /*00019cf0*/ CMP         R7, #131072                 @ 0x20000 
    /*00019cf4*/ BEQ         GDCPolar2Cartesian.constprop.5_x19ee4
    /*00019cf8*/ CMP         R7, #196608                 @ 0x30000 
    /*00019cfc*/ BEQ         GDCPolar2Cartesian.constprop.5_x19ea0
    /*00019d00*/ CMP         R7, #65536                  @ 0x10000 
    /*00019d04*/ BHI         GDCPolar2Cartesian.constprop.5_x19e84
    GDCPolar2Cartesian.constprop.5_x19d08:
    /*00019d08*/ MOV         LR, #0 
    /*00019d0c*/ MOV         R2, #16 
    /*00019d10*/ STR         R9, [SP, #200]              @ 0xc8 
    /*00019d14*/ ADD         R8, SP, #200                @ 0xc8 
    /*00019d18*/ MOV         R0, LR 
    /*00019d1c*/ MOV         SL, LR 
    /*00019d20*/ STR         LR, [SP, #12] 
    /*00019d24*/ MOV         R3, LR 
    /*00019d28*/ MVN         FP, #0 
    /*00019d2c*/ STR         R2, [SP, #8] 
    /*00019d30*/ B           GDCPolar2Cartesian.constprop.5_x19dc0
    GDCPolar2Cartesian.constprop.5_x19d34:
    /*00019d34*/ MOVLT       R1, #1 
    /*00019d38*/ MVNGE       R1, #0 
    GDCPolar2Cartesian.constprop.5_x19d3c:
    /*00019d3c*/ LDR         R2, [R4, LR, LSL #2] 
    /*00019d40*/ CMP         R0, #0 
    /*00019d44*/ ADD         IP, R3, #1 
    /*00019d48*/ MLS         SL, R2, R1, SL 
    /*00019d4c*/ MOVEQ       R2, R0 
    /*00019d50*/ BEQ         GDCPolar2Cartesian.constprop.5_x19d68
    /*00019d54*/ BLE         GDCPolar2Cartesian.constprop.5_x19eb4
    /*00019d58*/ CMP         LR, #0 
    /*00019d5c*/ BEQ         GDCPolar2Cartesian.constprop.5_x19f08
    /*00019d60*/ MOV         R2, #1 
    /*00019d64*/ LSL         R2, R2, FP 
    GDCPolar2Cartesian.constprop.5_x19d68:
    /*00019d68*/ ADD         R2, R2, R0 
    /*00019d6c*/ ASR         R2, R2, R3 
    /*00019d70*/ MLA         R9, R1, R2, R9 
    /*00019d74*/ STR         R9, [R8, #4] 
    /*00019d78*/ LDR         R6, [R8], #4 
    /*00019d7c*/ CMP         R6, #0 
    /*00019d80*/ MOVEQ       R2, R6 
    /*00019d84*/ BEQ         GDCPolar2Cartesian.constprop.5_x19d9c
    /*00019d88*/ BLE         GDCPolar2Cartesian.constprop.5_x19ecc
    /*00019d8c*/ CMP         LR, #0 
    /*00019d90*/ BEQ         GDCPolar2Cartesian.constprop.5_x19ef8
    /*00019d94*/ MOV         R2, #1 
    /*00019d98*/ LSL         R2, R2, FP 
    GDCPolar2Cartesian.constprop.5_x19d9c:
    /*00019d9c*/ ADD         R2, R6, R2 
    /*00019da0*/ CMP         IP, #17 
    /*00019da4*/ ASR         R2, R2, R3 
    /*00019da8*/ MLS         R0, R1, R2, R0 
    /*00019dac*/ STR         R0, [R5, IP, LSL #2] 
    /*00019db0*/ BEQ         GDCPolar2Cartesian.constprop.5_x19e00
    GDCPolar2Cartesian.constprop.5_x19db4:
    /*00019db4*/ ADD         LR, LR, #1 
    /*00019db8*/ ADD         FP, FP, #1 
    /*00019dbc*/ MOV         R3, IP 
    GDCPolar2Cartesian.constprop.5_x19dc0:
    /*00019dc0*/ CMP         R7, SL 
    /*00019dc4*/ BNE         GDCPolar2Cartesian.constprop.5_x19d34
    /*00019dc8*/ LDR         R2, [SP, #12] 
    /*00019dcc*/ MOV         R1, #0 
    /*00019dd0*/ LDR         IP, [SP, #8] 
    /*00019dd4*/ ADD         R2, R2, #1 
    /*00019dd8*/ STR         R2, [SP, #12] 
    /*00019ddc*/ CMP         R2, #1 
    /*00019de0*/ MOVEQ       IP, R3 
    /*00019de4*/ STR         IP, [SP, #8] 
    /*00019de8*/ B           GDCPolar2Cartesian.constprop.5_x19d3c
    GDCPolar2Cartesian.constprop.5_x19dec:
    /*00019dec*/ MOV         R0, R3 
    /*00019df0*/ STR         R9, [R1] 
    /*00019df4*/ STR         R3, [R1, #4] 
    GDCPolar2Cartesian.constprop.5_x19df8:
    /*00019df8*/ ADD         SP, SP, #348                @ 0x15c 
    /*00019dfc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDCPolar2Cartesian.constprop.5_x19e00:
    /*00019e00*/ LDR         R2, [SP, #20] 
    /*00019e04*/ ADD         R3, SP, #344                @ 0x158 
    /*00019e08*/ ADD         R3, R3, R2, LSL #2 
    /*00019e0c*/ LDR         R1, [R3, #-320]             @ 0xfffffec0 
    /*00019e10*/ EOR         R2, R1, R1, ASR #31 
    /*00019e14*/ SUB         R2, R2, R1, ASR #31 
    /*00019e18*/ CMP         R2, #1 
    /*00019e1c*/ BNE         GDCPolar2Cartesian.constprop.5_x19f10
    /*00019e20*/ LDR         IP, [R3, #-300]             @ 0xfffffed4 
    /*00019e24*/ EOR         R3, IP, IP, ASR #31 
    /*00019e28*/ SUB         R3, R3, IP, ASR #31 
    /*00019e2c*/ CMP         R3, #1 
    /*00019e30*/ BNE         GDCPolar2Cartesian.constprop.5_x19f40
    /*00019e34*/ LDR         R2, [SP, #8] 
    /*00019e38*/ ADD         R3, SP, #344                @ 0x158 
    /*00019e3c*/ LDR         R6, [SP, #340]              @ 0x154 
    /*00019e40*/ MOV         R0, #0 
    /*00019e44*/ ADD         R3, R3, R2, LSL #2 
    /*00019e48*/ LDR         R2, [SP, #268]              @ 0x10c 
    /*00019e4c*/ LDR         R4, [R3, #-212]             @ 0xffffff2c 
    /*00019e50*/ SMULL       R6, R7, R4, R6 
    /*00019e54*/ SMULL       R4, R5, R4, R2 
    /*00019e58*/ LSR         R2, R6, #15 
    /*00019e5c*/ ORR         R2, R2, R7, LSL #17 
    /*00019e60*/ LSR         R3, R4, #15 
    /*00019e64*/ ORR         R3, R3, R5, LSL #17 
    /*00019e68*/ MUL         R2, R2, IP 
    /*00019e6c*/ MUL         R3, R3, R1 
    /*00019e70*/ LDR         R1, [SP, #16] 
    /*00019e74*/ STR         R2, [R1, #4] 
    /*00019e78*/ STR         R3, [R1] 
    /*00019e7c*/ ADD         SP, SP, #348                @ 0x15c 
    /*00019e80*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDCPolar2Cartesian.constprop.5_x19e84:
    /*00019e84*/ CMP         R7, #131072                 @ 0x20000 
    /*00019e88*/ RSBCC       R7, R7, #131072             @ 0x20000 
    /*00019e8c*/ BCC         GDCPolar2Cartesian.constprop.5_x19d08
    /*00019e90*/ CMP         R7, #196608                 @ 0x30000 
    /*00019e94*/ SUBCC       R7, R7, #131072             @ 0x20000 
    /*00019e98*/ RSBCS       R7, R7, #262144             @ 0x40000 
    /*00019e9c*/ B           GDCPolar2Cartesian.constprop.5_x19d08
    GDCPolar2Cartesian.constprop.5_x19ea0:
    /*00019ea0*/ RSB         R9, R9, #0 
    GDCPolar2Cartesian.constprop.5_x19ea4:
    /*00019ea4*/ LDR         R3, [SP, #16] 
    /*00019ea8*/ STM         R3, {R0, R9} 
    /*00019eac*/ ADD         SP, SP, #348                @ 0x15c 
    /*00019eb0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDCPolar2Cartesian.constprop.5_x19eb4:
    /*00019eb4*/ CMP         LR, #0 
    /*00019eb8*/ BEQ         GDCPolar2Cartesian.constprop.5_x19f08
    /*00019ebc*/ MOV         R2, #1 
    /*00019ec0*/ LSL         R2, R2, FP 
    /*00019ec4*/ RSB         R2, R2, #0 
    /*00019ec8*/ B           GDCPolar2Cartesian.constprop.5_x19d68
    GDCPolar2Cartesian.constprop.5_x19ecc:
    /*00019ecc*/ CMP         LR, #0 
    /*00019ed0*/ BEQ         GDCPolar2Cartesian.constprop.5_x19ef8
    /*00019ed4*/ MOV         R2, #1 
    /*00019ed8*/ LSL         R2, R2, FP 
    /*00019edc*/ RSB         R2, R2, #0 
    /*00019ee0*/ B           GDCPolar2Cartesian.constprop.5_x19d9c
    GDCPolar2Cartesian.constprop.5_x19ee4:
    /*00019ee4*/ LDR         R3, [SP, #16] 
    /*00019ee8*/ RSB         R9, R9, #0 
    /*00019eec*/ STR         R0, [R3, #4] 
    /*00019ef0*/ STR         R9, [R3] 
    /*00019ef4*/ B           GDCPolar2Cartesian.constprop.5_x19df8
    GDCPolar2Cartesian.constprop.5_x19ef8:
    /*00019ef8*/ ASR         R3, R6, R3 
    /*00019efc*/ MLS         R0, R1, R3, R0 
    /*00019f00*/ STR         R0, [R5, IP, LSL #2] 
    /*00019f04*/ B           GDCPolar2Cartesian.constprop.5_x19db4
    GDCPolar2Cartesian.constprop.5_x19f08:
    /*00019f08*/ MOV         R2, LR 
    /*00019f0c*/ B           GDCPolar2Cartesian.constprop.5_x19d68
    GDCPolar2Cartesian.constprop.5_x19f10:
    /*00019f10*/ MOVW        R3, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6938] 
    /*00019f14*/ MOVW        R1, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6864] 
    /*00019f18*/ MOVT        R3, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6938] 
    /*00019f1c*/ MOVT        R1, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6864] 
    /*00019f20*/ STR         R3, [SP] 
    /*00019f24*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68e0] 
    /*00019f28*/ MOV         R3, #360                    @ 0x168 
    /*00019f2c*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68e0] 
    /*00019f30*/ LDR         R2, [PC, #108]              @ 0x0000000000019fa4 
    /*00019f34*/ BL          0x0000000000019F34          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00019f38*/ MVN         R0, #0 
    /*00019f3c*/ B           GDCPolar2Cartesian.constprop.5_x19df8
    GDCPolar2Cartesian.constprop.5_x19f40:
    /*00019f40*/ MOVW        R3, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6954] 
    /*00019f44*/ MOVW        R1, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6864] 
    /*00019f48*/ MOVT        R3, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6954] 
    /*00019f4c*/ MOVT        R1, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6864] 
    /*00019f50*/ STR         R3, [SP] 
    /*00019f54*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68e0] 
    /*00019f58*/ MOVW        R3, #361                    @ 0x169 
    /*00019f5c*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68e0] 
    /*00019f60*/ LDR         R2, [PC, #60]               @ 0x0000000000019fa4 
    /*00019f64*/ BL          0x0000000000019F64          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00019f68*/ MVN         R0, #0 
    /*00019f6c*/ B           GDCPolar2Cartesian.constprop.5_x19df8
    GDCPolar2Cartesian.constprop.5_x19f70:
    /*00019f70*/ MOV         R1, #239                    @ 0xef 
    /*00019f74*/ ADD         R3, LR, #24 
    /*00019f78*/ STR         R1, [SP] 
    /*00019f7c*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6820] 
    /*00019f80*/ MOV         R1, #37                     @ 0x25 
    /*00019f84*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6820] 
    /*00019f88*/ MOV         R0, #3 
    /*00019f8c*/ BL          0x0000000000019F8C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019f90*/ MVN         R0, #0 
    /*00019f94*/ B           GDCPolar2Cartesian.constprop.5_x19df8
    /*00019f98*/ ANDEQ       R1, R0, R0, ASR #2 
    /*00019f9c*/ ANDEQ       R1, R0, R4, LSL #3 
    /*00019fa0*/ ANDEQ       R1, R0, R8, ASR #3 
    /*00019fa4*/ STRDEQ      R1, [R0], -R0 
FUNC_END GDCPolar2Cartesian.constprop.5


FUNC_BEGIN GDC_Fisheye_MPI_LMF_Check
    /*00019fa8*/ PUSH        {R4, LR} 
    /*00019fac*/ MOV         IP, #0 
    /*00019fb0*/ SUB         SP, SP, #24 
    /*00019fb4*/ MOV         R3, R0 
    /*00019fb8*/ B           GDC_Fisheye_MPI_LMF_Check_x19fd0
    GDC_Fisheye_MPI_LMF_Check_x19fbc:
    /*00019fbc*/ CMP         R1, R4 
    /*00019fc0*/ BGT         GDC_Fisheye_MPI_LMF_Check_x19fec
    /*00019fc4*/ ADD         IP, IP, #1 
    /*00019fc8*/ CMP         IP, #127                    @ 0x7f 
    /*00019fcc*/ BEQ         GDC_Fisheye_MPI_LMF_Check_x1a02c
    GDC_Fisheye_MPI_LMF_Check_x19fd0:
    /*00019fd0*/ MOV         R2, R3 
    /*00019fd4*/ LDRH        R1, [R3, #2]! 
    /*00019fd8*/ LDRH        R2, [R2] 
    /*00019fdc*/ ADD         LR, R2, #5 
    /*00019fe0*/ ADD         R4, R2, #31 
    /*00019fe4*/ CMP         R1, LR 
    /*00019fe8*/ BGE         GDC_Fisheye_MPI_LMF_Check_x19fbc
    GDC_Fisheye_MPI_LMF_Check_x19fec:
    /*00019fec*/ STR         R2, [SP, #16] 
    /*00019ff0*/ MOV         R3, #183                    @ 0xb7 
    /*00019ff4*/ ADD         R2, IP, #1 
    /*00019ff8*/ STR         R1, [SP, #8] 
    /*00019ffc*/ STR         R2, [SP, #4] 
    /*0001a000*/ MOV         R1, #37                     @ 0x25 
    /*0001a004*/ STR         R3, [SP] 
    /*0001a008*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6970] 
    /*0001a00c*/ STR         IP, [SP, #12] 
    /*0001a010*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6970] 
    /*0001a014*/ LDR         R3, [PC, #160]              @ 0x000000000001a0bc 
    /*0001a018*/ MOV         R0, #3 
    /*0001a01c*/ BL          0x000000000001A01C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a020*/ MOV         R0, #1 
    GDC_Fisheye_MPI_LMF_Check_x1a024:
    /*0001a024*/ ADD         SP, SP, #24 
    /*0001a028*/ POP         {R4, PC} 
    GDC_Fisheye_MPI_LMF_Check_x1a02c:
    /*0001a02c*/ LDRH        R3, [R0, #114]              @ 0x72 
    /*0001a030*/ LDRH        R2, [R0, #170]              @ 0xaa 
    /*0001a034*/ CMP         R3, #1024                   @ 0x400 
    /*0001a038*/ BCS         GDC_Fisheye_MPI_LMF_Check_x1a084
    /*0001a03c*/ CMP         R2, #1024                   @ 0x400 
    /*0001a040*/ BLS         GDC_Fisheye_MPI_LMF_Check_x1a084
    /*0001a044*/ LDRH        R0, [R0] 
    /*0001a048*/ CMP         R0, #0 
    /*0001a04c*/ BEQ         GDC_Fisheye_MPI_LMF_Check_x1a024
    /*0001a050*/ STR         R0, [SP, #12] 
    /*0001a054*/ MOV         R1, #198                    @ 0xc6 
    /*0001a058*/ STR         R2, [SP, #8] 
    /*0001a05c*/ MOV         R0, #3 
    /*0001a060*/ STR         R3, [SP, #4] 
    /*0001a064*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6a08] 
    /*0001a068*/ STR         R1, [SP] 
    /*0001a06c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6a08] 
    /*0001a070*/ MOV         R1, #37                     @ 0x25 
    /*0001a074*/ LDR         R3, [PC, #64]               @ 0x000000000001a0bc 
    /*0001a078*/ BL          0x000000000001A078          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a07c*/ MOV         R0, #1 
    /*0001a080*/ B           GDC_Fisheye_MPI_LMF_Check_x1a024
    GDC_Fisheye_MPI_LMF_Check_x1a084:
    /*0001a084*/ LDRH        R1, [R0] 
    /*0001a088*/ MOV         R0, #191                    @ 0xbf 
    /*0001a08c*/ STR         R2, [SP, #8] 
    /*0001a090*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6a08] 
    /*0001a094*/ STR         R3, [SP, #4] 
    /*0001a098*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6a08] 
    /*0001a09c*/ STR         R1, [SP, #12] 
    /*0001a0a0*/ MOV         R1, #37                     @ 0x25 
    /*0001a0a4*/ STR         R0, [SP] 
    /*0001a0a8*/ MOV         R0, #3 
    /*0001a0ac*/ LDR         R3, [PC, #8]                @ 0x000000000001a0bc 
    /*0001a0b0*/ BL          0x000000000001A0B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a0b4*/ MOV         R0, #1 
    /*0001a0b8*/ B           GDC_Fisheye_MPI_LMF_Check_x1a024
    /*0001a0bc*/ ANDEQ       R1, R0, R4, LSL #4 
FUNC_END GDC_Fisheye_MPI_LMF_Check


FUNC_BEGIN GDC_LDCRatio0_CFG
    /*0001a0c0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001a0c4*/ SUB         SP, SP, #100                @ 0x64 
    /*0001a0c8*/ MOV         R7, R0 
    /*0001a0cc*/ MOV         R6, R2 
    /*0001a0d0*/ MOV         R9, R1 
    /*0001a0d4*/ MOV         R2, #72                     @ 0x48 
    /*0001a0d8*/ MOV         R1, #0 
    /*0001a0dc*/ ADD         R0, SP, #24 
    /*0001a0e0*/ MOV         R4, R3 
    /*0001a0e4*/ LDR         R5, [SP, #136]              @ 0x88 
    /*0001a0e8*/ BL          0x000000000001A0E8          @ memset [R_ARM_CALL: +0x0] 
    /*0001a0ec*/ LDR         R2, [R7, #4] 
    /*0001a0f0*/ MOV         R1, #4 
    /*0001a0f4*/ ADD         R8, R6, #8 
    /*0001a0f8*/ STR         R2, [R4, #8] 
    /*0001a0fc*/ LDR         R3, [R7] 
    /*0001a100*/ STR         R2, [R4, #16] 
    /*0001a104*/ STM         R4, {R1, R3} 
    /*0001a108*/ STR         R3, [R4, #12] 
    /*0001a10c*/ LDR         R1, [R6] 
    /*0001a110*/ CMP         R1, #0 
    /*0001a114*/ BEQ         GDC_LDCRatio0_CFG_x1a488
    GDC_LDCRatio0_CFG_x1a118:
    /*0001a118*/ MOV         R3, #1 
    /*0001a11c*/ STR         R3, [R5] 
    /*0001a120*/ LDR         R3, [R9] 
    /*0001a124*/ CMP         R3, #1 
    /*0001a128*/ BEQ         GDC_LDCRatio0_CFG_x1a4ac
    /*0001a12c*/ LDR         R0, [R9, #4] 
    /*0001a130*/ MOVW        SL, #21846                  @ 0x5556 
    /*0001a134*/ MOVT        SL, #5 
    /*0001a138*/ MOV         R2, #100                    @ 0x64 
    /*0001a13c*/ ADD         R7, PC, #924                @ 0x39c 
    /*0001a140*/ LDRD        R6, [R7] 
    /*0001a144*/ SMULL       R0, R1, R0, SL 
    /*0001a148*/ BL          0x000000000001A148          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0001a14c*/ LDR         R3, [R9, #8] 
    /*0001a150*/ MOV         R2, #100                    @ 0x64 
    /*0001a154*/ ADDS        R6, R6, R0 
    /*0001a158*/ ADC         R7, R7, R1 
    /*0001a15c*/ SMULL       R0, R1, R3, SL 
    /*0001a160*/ BL          0x000000000001A160          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0001a164*/ ADD         R3, PC, #884                @ 0x374 
    /*0001a168*/ LDRD        R2, [R3] 
    /*0001a16c*/ ADDS        R2, R2, R0 
    /*0001a170*/ ADC         R3, R3, R1 
    /*0001a174*/ STRD        R2, [SP] 
    GDC_LDCRatio0_CFG_x1a178:
    /*0001a178*/ LDR         R3, [R4, #12] 
    /*0001a17c*/ MOV         SL, #1048576                @ 0x100000 
    /*0001a180*/ SUBS        SL, SL, R6 
    /*0001a184*/ MOV         FP, #0 
    /*0001a188*/ SBC         FP, FP, R7 
    /*0001a18c*/ MOV         R2, #2 
    /*0001a190*/ UMULL       R0, R1, SL, R3 
    /*0001a194*/ MLA         R1, R3, FP, R1 
    /*0001a198*/ BL          0x000000000001A198          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0001a19c*/ LDRD        SL, [SP] 
    /*0001a1a0*/ LDR         R3, [R4, #16] 
    /*0001a1a4*/ MOV         R2, #2 
    /*0001a1a8*/ MOV         R9, R0 
    /*0001a1ac*/ MOV         R0, #1048576                @ 0x100000 
    /*0001a1b0*/ SUBS        R0, R0, SL 
    /*0001a1b4*/ STR         R1, [SP, #8] 
    /*0001a1b8*/ MOV         R1, #0 
    /*0001a1bc*/ SBC         R1, R1, FP 
    /*0001a1c0*/ MOV         FP, R1 
    /*0001a1c4*/ UMULL       R0, R1, R0, R3 
    /*0001a1c8*/ MLA         R1, R3, FP, R1 
    /*0001a1cc*/ BL          0x000000000001A1CC          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0001a1d0*/ MOV         R2, #72                     @ 0x48 
    /*0001a1d4*/ STR         R1, [SP, #12] 
    /*0001a1d8*/ MOV         R4, R0 
    /*0001a1dc*/ MOV         R1, R8 
    /*0001a1e0*/ ADD         R0, SP, #24 
    /*0001a1e4*/ BL          0x000000000001A1E4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001a1e8*/ LDR         R3, [SP, #76]               @ 0x4c 
    /*0001a1ec*/ LDR         FP, [SP, #72]               @ 0x48 
    /*0001a1f0*/ LDR         R1, [SP, #8] 
    /*0001a1f4*/ STR         R3, [SP, #16] 
    /*0001a1f8*/ MUL         R3, R9, R3 
    /*0001a1fc*/ LDR         IP, [SP, #28] 
    /*0001a200*/ MLA         R3, FP, R1, R3 
    /*0001a204*/ LDR         R2, [SP, #24] 
    /*0001a208*/ UMULL       R0, R1, R9, FP 
    /*0001a20c*/ MUL         IP, R6, IP 
    /*0001a210*/ ADD         R1, R3, R1 
    /*0001a214*/ MLA         IP, R2, R7, IP 
    /*0001a218*/ UMULL       R2, R3, R2, R6 
    /*0001a21c*/ ADDS        R2, R2, R0 
    /*0001a220*/ ADD         R3, IP, R3 
    /*0001a224*/ ADC         R3, R3, R1 
    /*0001a228*/ CMP         R2, #0 
    /*0001a22c*/ SBCS        R1, R3, #0 
    /*0001a230*/ BLT         GDC_LDCRatio0_CFG_x1a588
    /*0001a234*/ ADDS        R2, R2, #524288             @ 0x80000 
    /*0001a238*/ ADC         R3, R3, #0 
    /*0001a23c*/ LSR         R0, R2, #20 
    /*0001a240*/ ORR         R0, R0, R3, LSL #12 
    /*0001a244*/ ASR         R1, R3, #20 
    GDC_LDCRatio0_CFG_x1a248:
    /*0001a248*/ LDR         R3, [SP, #84]               @ 0x54 
    /*0001a24c*/ LDR         R8, [SP, #80]               @ 0x50 
    /*0001a250*/ STRD        R0, [R5, #8] 
    /*0001a254*/ LDR         R1, [SP, #8] 
    /*0001a258*/ STR         R3, [SP, #20] 
    /*0001a25c*/ MUL         R3, R9, R3 
    /*0001a260*/ LDR         IP, [SP, #36]               @ 0x24 
    /*0001a264*/ MLA         R3, R8, R1, R3 
    /*0001a268*/ LDR         R2, [SP, #32] 
    /*0001a26c*/ UMULL       R0, R1, R9, R8 
    /*0001a270*/ MUL         IP, R6, IP 
    /*0001a274*/ ADD         R1, R3, R1 
    /*0001a278*/ MLA         IP, R2, R7, IP 
    /*0001a27c*/ UMULL       R2, R3, R2, R6 
    /*0001a280*/ ADDS        R2, R2, R0 
    /*0001a284*/ ADD         R3, IP, R3 
    /*0001a288*/ ADC         R3, R3, R1 
    /*0001a28c*/ CMP         R2, #0 
    /*0001a290*/ SBCS        R1, R3, #0 
    /*0001a294*/ BLT         GDC_LDCRatio0_CFG_x1a560
    /*0001a298*/ ADDS        R2, R2, #524288             @ 0x80000 
    /*0001a29c*/ ADC         R3, R3, #0 
    /*0001a2a0*/ LSR         R0, R2, #20 
    /*0001a2a4*/ ORR         R0, R0, R3, LSL #12 
    /*0001a2a8*/ ASR         R1, R3, #20 
    GDC_LDCRatio0_CFG_x1a2ac:
    /*0001a2ac*/ LDR         LR, [SP, #92]               @ 0x5c 
    /*0001a2b0*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0001a2b4*/ LDR         IP, [SP, #88]               @ 0x58 
    /*0001a2b8*/ LDR         R2, [SP, #40]               @ 0x28 
    /*0001a2bc*/ STRD        R0, [R5, #16] 
    /*0001a2c0*/ LDR         R0, [SP, #8] 
    /*0001a2c4*/ MUL         R3, R6, R3 
    /*0001a2c8*/ MUL         R1, R9, LR 
    /*0001a2cc*/ MLA         SL, IP, R0, R1 
    /*0001a2d0*/ MLA         R7, R2, R7, R3 
    /*0001a2d4*/ UMULL       R0, R1, R9, IP 
    /*0001a2d8*/ UMULL       R2, R3, R2, R6 
    /*0001a2dc*/ ADD         R1, SL, R1 
    /*0001a2e0*/ ADDS        R2, R2, R0 
    /*0001a2e4*/ ADD         R3, R7, R3 
    /*0001a2e8*/ ADC         R3, R3, R1 
    /*0001a2ec*/ CMP         R2, #0 
    /*0001a2f0*/ SBCS        R1, R3, #0 
    /*0001a2f4*/ BLT         GDC_LDCRatio0_CFG_x1a538
    /*0001a2f8*/ ADDS        R2, R2, #524288             @ 0x80000 
    /*0001a2fc*/ ADC         R3, R3, #0 
    /*0001a300*/ LSR         R6, R2, #20 
    /*0001a304*/ ORR         R6, R6, R3, LSL #12 
    /*0001a308*/ ASR         R7, R3, #20 
    GDC_LDCRatio0_CFG_x1a30c:
    /*0001a30c*/ LDR         R1, [SP, #52]               @ 0x34 
    /*0001a310*/ STRD        R6, [R5, #24] 
    /*0001a314*/ LDR         R6, [SP] 
    /*0001a318*/ LDR         R2, [SP, #48]               @ 0x30 
    /*0001a31c*/ LDR         R3, [SP, #16] 
    /*0001a320*/ MUL         R7, R6, R1 
    /*0001a324*/ LDRD        R0, [SP] 
    /*0001a328*/ MUL         R3, R4, R3 
    /*0001a32c*/ MLA         R7, R2, R1, R7 
    /*0001a330*/ UMULL       R0, R1, R2, R0 
    /*0001a334*/ LDR         R2, [SP, #12] 
    /*0001a338*/ ADD         R1, R7, R1 
    /*0001a33c*/ MLA         R6, FP, R2, R3 
    /*0001a340*/ UMULL       R2, R3, R4, FP 
    /*0001a344*/ ADDS        R2, R2, R0 
    /*0001a348*/ ADD         R3, R6, R3 
    /*0001a34c*/ ADC         R3, R3, R1 
    /*0001a350*/ CMP         R2, #0 
    /*0001a354*/ SBCS        R1, R3, #0 
    /*0001a358*/ BLT         GDC_LDCRatio0_CFG_x1a510
    /*0001a35c*/ ADDS        R2, R2, #524288             @ 0x80000 
    /*0001a360*/ ADC         R3, R3, #0 
    /*0001a364*/ LSR         R6, R2, #20 
    /*0001a368*/ ORR         R6, R6, R3, LSL #12 
    /*0001a36c*/ ASR         R7, R3, #20 
    GDC_LDCRatio0_CFG_x1a370:
    /*0001a370*/ LDR         R1, [SP, #60]               @ 0x3c 
    /*0001a374*/ STRD        R6, [R5, #32] 
    /*0001a378*/ LDR         R6, [SP] 
    /*0001a37c*/ LDR         R2, [SP, #56]               @ 0x38 
    /*0001a380*/ LDR         R3, [SP, #20] 
    /*0001a384*/ MUL         R7, R6, R1 
    /*0001a388*/ LDRD        R0, [SP] 
    /*0001a38c*/ MUL         R3, R4, R3 
    /*0001a390*/ MLA         R7, R2, R1, R7 
    /*0001a394*/ UMULL       R0, R1, R2, R0 
    /*0001a398*/ LDR         R2, [SP, #12] 
    /*0001a39c*/ ADD         R1, R7, R1 
    /*0001a3a0*/ MLA         R6, R8, R2, R3 
    /*0001a3a4*/ UMULL       R2, R3, R4, R8 
    /*0001a3a8*/ ADDS        R2, R2, R0 
    /*0001a3ac*/ ADD         R3, R6, R3 
    /*0001a3b0*/ ADC         R3, R3, R1 
    /*0001a3b4*/ CMP         R2, #0 
    /*0001a3b8*/ SBCS        R1, R3, #0 
    /*0001a3bc*/ BLT         GDC_LDCRatio0_CFG_x1a4e8
    /*0001a3c0*/ ADDS        R2, R2, #524288             @ 0x80000 
    /*0001a3c4*/ ADC         R3, R3, #0 
    /*0001a3c8*/ LSR         R0, R2, #20 
    /*0001a3cc*/ ORR         R0, R0, R3, LSL #12 
    /*0001a3d0*/ ASR         R1, R3, #20 
    GDC_LDCRatio0_CFG_x1a3d4:
    /*0001a3d4*/ LDRD        R6, [SP] 
    /*0001a3d8*/ LDR         R3, [SP, #68]               @ 0x44 
    /*0001a3dc*/ LDR         R2, [SP, #64]               @ 0x40 
    /*0001a3e0*/ STRD        R0, [R5, #40]               @ 0x28 
    /*0001a3e4*/ MUL         R1, R6, R3 
    /*0001a3e8*/ MLA         R1, R2, R7, R1 
    /*0001a3ec*/ UMULL       R2, R3, R2, R6 
    /*0001a3f0*/ LDR         R6, [SP, #12] 
    /*0001a3f4*/ MUL         R0, R4, LR 
    /*0001a3f8*/ ADD         R3, R1, R3 
    /*0001a3fc*/ MLA         R6, IP, R6, R0 
    /*0001a400*/ UMULL       R0, R1, R4, IP 
    /*0001a404*/ ADD         R1, R6, R1 
    /*0001a408*/ ADDS        R2, R2, R0 
    /*0001a40c*/ ADC         R3, R3, R1 
    /*0001a410*/ CMP         R2, #0 
    /*0001a414*/ SBCS        R1, R3, #0 
    /*0001a418*/ BLT         GDC_LDCRatio0_CFG_x1a460
    /*0001a41c*/ ADDS        R2, R2, #524288             @ 0x80000 
    /*0001a420*/ ADC         R3, R3, #0 
    /*0001a424*/ LSR         R0, R2, #20 
    /*0001a428*/ ORR         R0, R0, R3, LSL #12 
    /*0001a42c*/ ASR         R1, R3, #20 
    GDC_LDCRatio0_CFG_x1a430:
    /*0001a430*/ LDR         R3, [SP, #16] 
    /*0001a434*/ STRD        R0, [R5, #48]               @ 0x30 
    /*0001a438*/ MOV         R0, #0 
    /*0001a43c*/ STR         FP, [R5, #56]               @ 0x38 
    /*0001a440*/ STR         R3, [R5, #60]               @ 0x3c 
    /*0001a444*/ LDR         R3, [SP, #20] 
    /*0001a448*/ STR         R8, [R5, #64]               @ 0x40 
    /*0001a44c*/ STR         IP, [R5, #72]               @ 0x48 
    /*0001a450*/ STR         R3, [R5, #68]               @ 0x44 
    /*0001a454*/ STR         LR, [R5, #76]               @ 0x4c 
    /*0001a458*/ ADD         SP, SP, #100                @ 0x64 
    /*0001a45c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_LDCRatio0_CFG_x1a460:
    /*0001a460*/ MOV         R0, #524288                 @ 0x80000 
    /*0001a464*/ SUBS        R2, R0, R2 
    /*0001a468*/ MOV         R1, #0 
    /*0001a46c*/ SBC         R3, R1, R3 
    /*0001a470*/ LSR         R0, R2, #20 
    /*0001a474*/ ORR         R0, R0, R3, LSL #12 
    /*0001a478*/ ASR         R1, R3, #20 
    /*0001a47c*/ RSBS        R0, R0, #0 
    /*0001a480*/ RSC         R1, R1, #0 
    /*0001a484*/ B           GDC_LDCRatio0_CFG_x1a430
    GDC_LDCRatio0_CFG_x1a488:
    /*0001a488*/ MOV         R2, #72                     @ 0x48 
    /*0001a48c*/ MOV         R0, R8 
    /*0001a490*/ BL          0x000000000001A490          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0001a494*/ MOV         R2, #1048576                @ 0x100000 
    /*0001a498*/ MOV         R3, #0 
    /*0001a49c*/ STRD        R2, [R6, #8] 
    /*0001a4a0*/ STRD        R2, [R6, #40]               @ 0x28 
    /*0001a4a4*/ STRD        R2, [R6, #72]               @ 0x48 
    /*0001a4a8*/ B           GDC_LDCRatio0_CFG_x1a118
    GDC_LDCRatio0_CFG_x1a4ac:
    /*0001a4ac*/ LDR         R0, [R9, #12] 
    /*0001a4b0*/ MOVW        R3, #21846                  @ 0x5556 
    /*0001a4b4*/ MOVT        R3, #5 
    /*0001a4b8*/ MOV         R2, #100                    @ 0x64 
    /*0001a4bc*/ ADD         R7, PC, #28 
    /*0001a4c0*/ LDRD        R6, [R7] 
    /*0001a4c4*/ SMULL       R0, R1, R0, R3 
    /*0001a4c8*/ BL          0x000000000001A4C8          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0001a4cc*/ ADDS        R6, R6, R0 
    /*0001a4d0*/ ADC         R7, R7, R1 
    /*0001a4d4*/ STRD        R6, [SP] 
    /*0001a4d8*/ B           GDC_LDCRatio0_CFG_x1a178
    /*0001a4dc*/ NOP         {0} 
    /*0001a4e0*/ ANDEQ       SL, SL, SL, LSR #21 
    /*0001a4e4*/ ANDEQ       R0, R0, R0 
    GDC_LDCRatio0_CFG_x1a4e8:
    /*0001a4e8*/ MOV         R0, #524288                 @ 0x80000 
    /*0001a4ec*/ SUBS        R2, R0, R2 
    /*0001a4f0*/ MOV         R1, #0 
    /*0001a4f4*/ SBC         R3, R1, R3 
    /*0001a4f8*/ LSR         R0, R2, #20 
    /*0001a4fc*/ ORR         R0, R0, R3, LSL #12 
    /*0001a500*/ ASR         R1, R3, #20 
    /*0001a504*/ RSBS        R0, R0, #0 
    /*0001a508*/ RSC         R1, R1, #0 
    /*0001a50c*/ B           GDC_LDCRatio0_CFG_x1a3d4
    GDC_LDCRatio0_CFG_x1a510:
    /*0001a510*/ MOV         R0, #524288                 @ 0x80000 
    /*0001a514*/ SUBS        R2, R0, R2 
    /*0001a518*/ MOV         R1, #0 
    /*0001a51c*/ SBC         R3, R1, R3 
    /*0001a520*/ LSR         R6, R2, #20 
    /*0001a524*/ ORR         R6, R6, R3, LSL #12 
    /*0001a528*/ ASR         R7, R3, #20 
    /*0001a52c*/ RSBS        R6, R6, #0 
    /*0001a530*/ RSC         R7, R7, #0 
    /*0001a534*/ B           GDC_LDCRatio0_CFG_x1a370
    GDC_LDCRatio0_CFG_x1a538:
    /*0001a538*/ MOV         R0, #524288                 @ 0x80000 
    /*0001a53c*/ SUBS        R2, R0, R2 
    /*0001a540*/ MOV         R1, #0 
    /*0001a544*/ SBC         R3, R1, R3 
    /*0001a548*/ LSR         R6, R2, #20 
    /*0001a54c*/ ORR         R6, R6, R3, LSL #12 
    /*0001a550*/ ASR         R7, R3, #20 
    /*0001a554*/ RSBS        R6, R6, #0 
    /*0001a558*/ RSC         R7, R7, #0 
    /*0001a55c*/ B           GDC_LDCRatio0_CFG_x1a30c
    GDC_LDCRatio0_CFG_x1a560:
    /*0001a560*/ MOV         R0, #524288                 @ 0x80000 
    /*0001a564*/ SUBS        R2, R0, R2 
    /*0001a568*/ MOV         R1, #0 
    /*0001a56c*/ SBC         R3, R1, R3 
    /*0001a570*/ LSR         R0, R2, #20 
    /*0001a574*/ ORR         R0, R0, R3, LSL #12 
    /*0001a578*/ ASR         R1, R3, #20 
    /*0001a57c*/ RSBS        R0, R0, #0 
    /*0001a580*/ RSC         R1, R1, #0 
    /*0001a584*/ B           GDC_LDCRatio0_CFG_x1a2ac
    GDC_LDCRatio0_CFG_x1a588:
    /*0001a588*/ MOV         R0, #524288                 @ 0x80000 
    /*0001a58c*/ SUBS        R2, R0, R2 
    /*0001a590*/ MOV         R1, #0 
    /*0001a594*/ SBC         R3, R1, R3 
    /*0001a598*/ LSR         R0, R2, #20 
    /*0001a59c*/ ORR         R0, R0, R3, LSL #12 
    /*0001a5a0*/ ASR         R1, R3, #20 
    /*0001a5a4*/ RSBS        R0, R0, #0 
    /*0001a5a8*/ RSC         R1, R1, #0 
    /*0001a5ac*/ B           GDC_LDCRatio0_CFG_x1a248
FUNC_END GDC_LDCRatio0_CFG


FUNC_BEGIN GDC_PMF_And_Rotation_CFG
    /*0001a5b0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001a5b4*/ SUB         SP, SP, #252                @ 0xfc 
    /*0001a5b8*/ MOV         R7, R0 
    /*0001a5bc*/ MOV         R4, R2 
    /*0001a5c0*/ MOV         R6, R1 
    /*0001a5c4*/ MOV         R2, #72                     @ 0x48 
    /*0001a5c8*/ LDR         R1, [PC, #1276]             @ 0x000000000001aacc 
    /*0001a5cc*/ ADD         R0, SP, #32 
    /*0001a5d0*/ MOV         R5, R3 
    /*0001a5d4*/ BL          0x000000000001A5D4          @ memcpy [R_ARM_CALL: +0x0] 
    /*0001a5d8*/ MOV         R2, #72                     @ 0x48 
    /*0001a5dc*/ LDR         R1, [PC, #1256]             @ 0x000000000001aacc 
    /*0001a5e0*/ ADD         R0, SP, #104                @ 0x68 
    /*0001a5e4*/ BL          0x000000000001A5E4          @ memcpy [R_ARM_CALL: +0x0] 
    /*0001a5e8*/ ADD         R0, SP, #176                @ 0xb0 
    /*0001a5ec*/ MOV         R2, #72                     @ 0x48 
    /*0001a5f0*/ LDR         R1, [PC, #1236]             @ 0x000000000001aacc 
    /*0001a5f4*/ BL          0x000000000001A5F4          @ memcpy [R_ARM_CALL: +0x0] 
    /*0001a5f8*/ MOV         R3, #4 
    /*0001a5fc*/ STR         R3, [R5] 
    /*0001a600*/ CMP         R4, #0 
    /*0001a604*/ LDR         R3, [R7] 
    /*0001a608*/ STR         R3, [R5, #4] 
    /*0001a60c*/ LDR         R3, [R7, #4] 
    /*0001a610*/ STR         R3, [R5, #8] 
    /*0001a614*/ LDR         R3, [R7, #4] 
    /*0001a618*/ STR         R3, [R5, #16] 
    /*0001a61c*/ LDR         R3, [R7] 
    /*0001a620*/ STR         R3, [R5, #12] 
    /*0001a624*/ BEQ         GDC_PMF_And_Rotation_CFG_x1a9dc
    /*0001a628*/ LDR         R3, [R6] 
    /*0001a62c*/ CMP         R3, #0 
    /*0001a630*/ BEQ         GDC_PMF_And_Rotation_CFG_x1a750
    /*0001a634*/ ADD         R1, R6, #8 
    /*0001a638*/ ADD         LR, SP, #24 
    /*0001a63c*/ ADD         R7, R6, #80                 @ 0x50 
    GDC_PMF_And_Rotation_CFG_x1a640:
    /*0001a640*/ ADD         R2, R1, #24 
    /*0001a644*/ MOV         R3, LR 
    GDC_PMF_And_Rotation_CFG_x1a648:
    /*0001a648*/ LDRD        R8, [R1], #8 
    /*0001a64c*/ CMP         R1, R2 
    /*0001a650*/ STRD        R8, [R3, #8]! 
    /*0001a654*/ BNE         GDC_PMF_And_Rotation_CFG_x1a648
    /*0001a658*/ CMP         R7, R1 
    /*0001a65c*/ ADD         LR, LR, #24 
    /*0001a660*/ BNE         GDC_PMF_And_Rotation_CFG_x1a640
    /*0001a664*/ LDR         R3, [R6, #84]               @ 0x54 
    /*0001a668*/ CMP         R4, #2 
    /*0001a66c*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0001a670*/ LDR         R8, [SP, #32] 
    /*0001a674*/ STR         R3, [R5, #16] 
    /*0001a678*/ LDR         R3, [R6, #80]               @ 0x50 
    /*0001a67c*/ STR         R2, [SP, #16] 
    /*0001a680*/ STR         R3, [R5, #12] 
    /*0001a684*/ BEQ         GDC_PMF_And_Rotation_CFG_x1a774
    GDC_PMF_And_Rotation_CFG_x1a688:
    /*0001a688*/ CMP         R4, #3 
    /*0001a68c*/ BEQ         GDC_PMF_And_Rotation_CFG_x1aa64
    /*0001a690*/ CMP         R4, #1 
    /*0001a694*/ BEQ         GDC_PMF_And_Rotation_CFG_x1a9fc
    /*0001a698*/ LDR         R3, [SP, #104]              @ 0x68 
    /*0001a69c*/ STR         R3, [SP, #24] 
    /*0001a6a0*/ LDR         R3, [SP, #108]              @ 0x6c 
    /*0001a6a4*/ STR         R3, [SP, #28] 
    GDC_PMF_And_Rotation_CFG_x1a6a8:
    /*0001a6a8*/ ADD         FP, SP, #168                @ 0xa8 
    /*0001a6ac*/ ADD         R7, SP, #32 
    GDC_PMF_And_Rotation_CFG_x1a6b0:
    /*0001a6b0*/ ADD         R3, FP, #24 
    /*0001a6b4*/ LDR         R9, [R7, #8] 
    /*0001a6b8*/ STR         R3, [SP] 
    /*0001a6bc*/ ADD         IP, SP, #112                @ 0x70 
    /*0001a6c0*/ LDR         R3, [R7, #12] 
    /*0001a6c4*/ LDR         R0, [SP, #24] 
    /*0001a6c8*/ LDR         R5, [SP, #28] 
    /*0001a6cc*/ LDR         LR, [R7, #16] 
    /*0001a6d0*/ LDR         SL, [R7, #20] 
    /*0001a6d4*/ STR         R3, [SP, #12] 
    /*0001a6d8*/ STR         R7, [SP, #20] 
    GDC_PMF_And_Rotation_CFG_x1a6dc:
    /*0001a6dc*/ LDR         R1, [SP, #16] 
    /*0001a6e0*/ MUL         R5, R8, R5 
    /*0001a6e4*/ LDR         R3, [IP, #20] 
    /*0001a6e8*/ MLA         R5, R0, R1, R5 
    /*0001a6ec*/ LDR         R4, [IP, #16] 
    /*0001a6f0*/ UMULL       R0, R1, R8, R0 
    /*0001a6f4*/ LDR         R7, [SP, #12] 
    /*0001a6f8*/ MUL         R3, R9, R3 
    /*0001a6fc*/ LDR         R6, [IP, #44]               @ 0x2c 
    /*0001a700*/ MLA         R3, R7, R4, R3 
    /*0001a704*/ ADD         R1, R5, R1 
    /*0001a708*/ UMULL       R4, R5, R4, R9 
    /*0001a70c*/ LDR         R2, [IP, #40]               @ 0x28 
    /*0001a710*/ MUL         R6, LR, R6 
    /*0001a714*/ ADD         R5, R3, R5 
    /*0001a718*/ MLA         R6, SL, R2, R6 
    /*0001a71c*/ ADDS        R4, R4, R0 
    /*0001a720*/ UMULL       R2, R3, R2, LR 
    /*0001a724*/ ADC         R5, R5, R1 
    /*0001a728*/ ADD         R3, R6, R3 
    /*0001a72c*/ ADDS        R2, R2, R4 
    /*0001a730*/ ADC         R3, R3, R5 
    /*0001a734*/ STRD        R2, [FP, #8]! 
    /*0001a738*/ LDR         R3, [SP] 
    /*0001a73c*/ CMP         FP, R3 
    /*0001a740*/ BEQ         GDC_PMF_And_Rotation_CFG_x1a7e0
    /*0001a744*/ LDM         IP, {R0, R5} 
    /*0001a748*/ ADD         IP, IP, #8 
    /*0001a74c*/ B           GDC_PMF_And_Rotation_CFG_x1a6dc
    GDC_PMF_And_Rotation_CFG_x1a750:
    /*0001a750*/ CMP         R4, #2 
    /*0001a754*/ MOV         R2, #524288                 @ 0x80000 
    /*0001a758*/ STR         R3, [SP, #16] 
    /*0001a75c*/ MOV         R8, #524288                 @ 0x80000 
    /*0001a760*/ MOV         R3, #0 
    /*0001a764*/ STRD        R2, [SP, #32] 
    /*0001a768*/ STRD        R2, [SP, #64]               @ 0x40 
    /*0001a76c*/ STRD        R2, [SP, #96]               @ 0x60 
    /*0001a770*/ BNE         GDC_PMF_And_Rotation_CFG_x1a688
    GDC_PMF_And_Rotation_CFG_x1a774:
    /*0001a774*/ LDR         R0, [R5, #12] 
    /*0001a778*/ MVN         R2, #0 
    /*0001a77c*/ LDR         R3, [R5, #16] 
    /*0001a780*/ MOV         R1, R2 
    /*0001a784*/ ADD         R0, R0, R2 
    /*0001a788*/ STR         R2, [SP, #104]              @ 0x68 
    /*0001a78c*/ ADD         R3, R3, R2 
    /*0001a790*/ STR         R2, [SP, #136]              @ 0x88 
    /*0001a794*/ STR         R2, [SP, #24] 
    /*0001a798*/ STR         R3, [SP, #144]              @ 0x90 
    /*0001a79c*/ MOV         R3, #0 
    /*0001a7a0*/ STR         R2, [SP, #28] 
    /*0001a7a4*/ STR         R2, [SP, #108]              @ 0x6c 
    /*0001a7a8*/ MOV         R2, #0 
    /*0001a7ac*/ STR         R1, [SP, #140]              @ 0x8c 
    /*0001a7b0*/ MOV         R1, #0 
    /*0001a7b4*/ STRD        R2, [SP, #112]              @ 0x70 
    /*0001a7b8*/ STRD        R2, [SP, #128]              @ 0x80 
    /*0001a7bc*/ STRD        R2, [SP, #152]              @ 0x98 
    /*0001a7c0*/ STRD        R2, [SP, #160]              @ 0xa0 
    /*0001a7c4*/ MOV         R2, #1 
    /*0001a7c8*/ MOV         R3, #0 
    /*0001a7cc*/ STR         R0, [SP, #120]              @ 0x78 
    /*0001a7d0*/ STR         R1, [SP, #124]              @ 0x7c 
    /*0001a7d4*/ STR         R1, [SP, #148]              @ 0x94 
    /*0001a7d8*/ STRD        R2, [SP, #168]              @ 0xa8 
    /*0001a7dc*/ B           GDC_PMF_And_Rotation_CFG_x1a6a8
    GDC_PMF_And_Rotation_CFG_x1a7e0:
    /*0001a7e0*/ LDR         R7, [SP, #20] 
    /*0001a7e4*/ ADD         R3, SP, #104                @ 0x68 
    /*0001a7e8*/ ADD         R7, R7, #24 
    /*0001a7ec*/ CMP         R7, R3 
    /*0001a7f0*/ LDRNE       R3, [R7, #4] 
    /*0001a7f4*/ LDRNE       R8, [R7] 
    /*0001a7f8*/ STRNE       R3, [SP, #16] 
    /*0001a7fc*/ BNE         GDC_PMF_And_Rotation_CFG_x1a6b0
    /*0001a800*/ LDR         R2, [SP, #196]              @ 0xc4 
    /*0001a804*/ LDR         R3, [SP, #220]              @ 0xdc 
    /*0001a808*/ LDRD        R6, [SP, #192]              @ 0xc0 
    /*0001a80c*/ ASR         SL, R2, #31 
    /*0001a810*/ ASR         R0, R3, #31 
    /*0001a814*/ LDRD        R2, [SP, #216]              @ 0xd8 
    /*0001a818*/ EOR         R6, R6, SL 
    /*0001a81c*/ MOV         FP, SL 
    /*0001a820*/ EOR         R7, R7, SL 
    /*0001a824*/ EOR         R2, R2, R0 
    /*0001a828*/ SUBS        SL, R6, SL 
    /*0001a82c*/ EOR         R3, R3, R0 
    /*0001a830*/ SBC         FP, R7, FP 
    /*0001a834*/ SUBS        R2, R2, R0 
    /*0001a838*/ SBC         R3, R3, R0 
    /*0001a83c*/ CMP         SL, R2 
    /*0001a840*/ SBCS        R1, FP, R3 
    /*0001a844*/ MOVLT       FP, R3 
    /*0001a848*/ MOVLT       SL, R2 
    /*0001a84c*/ MVN         R2, #-2147483647            @ 0x80000001 
    /*0001a850*/ CMP         R2, SL 
    /*0001a854*/ MOV         R3, #0 
    /*0001a858*/ SBCS        R3, R3, FP 
    /*0001a85c*/ BLT         GDC_PMF_And_Rotation_CFG_x1a918
    /*0001a860*/ LDR         R7, [SP, #288]              @ 0x120 
    /*0001a864*/ MOV         R5, #0 
    GDC_PMF_And_Rotation_CFG_x1a868:
    /*0001a868*/ ADD         R6, R5, #72                 @ 0x48 
    /*0001a86c*/ MOV         R4, R5 
    GDC_PMF_And_Rotation_CFG_x1a870:
    /*0001a870*/ ADD         R0, SP, #176                @ 0xb0 
    /*0001a874*/ LDRD        R2, [SP, #240]              @ 0xf0 
    /*0001a878*/ LDR         IP, [R0, R4]! 
    /*0001a87c*/ LDR         R1, [R0, #4] 
    /*0001a880*/ LSL         R0, IP, #19 
    /*0001a884*/ LSL         R1, R1, #19 
    /*0001a888*/ ORR         R1, R1, IP, LSR #13 
    /*0001a88c*/ BL          0x000000000001A88C          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0001a890*/ ADD         R2, SP, #176                @ 0xb0 
    /*0001a894*/ ADD         R3, R7, R4 
    /*0001a898*/ STRD        R0, [R2, R4] 
    /*0001a89c*/ ADD         R4, R4, #24 
    /*0001a8a0*/ CMP         R4, R6 
    /*0001a8a4*/ STRD        R0, [R3, #8] 
    /*0001a8a8*/ BNE         GDC_PMF_And_Rotation_CFG_x1a870
    /*0001a8ac*/ ADD         R5, R5, #8 
    /*0001a8b0*/ CMP         R5, #24 
    /*0001a8b4*/ BNE         GDC_PMF_And_Rotation_CFG_x1a868
    GDC_PMF_And_Rotation_CFG_x1a8b8:
    /*0001a8b8*/ LDR         LR, [SP, #288]              @ 0x120 
    /*0001a8bc*/ MOV         IP, #1 
    /*0001a8c0*/ LDRD        R0, [SP, #176]              @ 0xb0 
    /*0001a8c4*/ LDRD        R2, [SP, #184]              @ 0xb8 
    /*0001a8c8*/ LDRD        R4, [SP, #192]              @ 0xc0 
    /*0001a8cc*/ STRD        R0, [LR, #8] 
    /*0001a8d0*/ STRD        R2, [LR, #16] 
    /*0001a8d4*/ LDRD        R0, [SP, #200]              @ 0xc8 
    /*0001a8d8*/ LDRD        R2, [SP, #208]              @ 0xd0 
    /*0001a8dc*/ STRD        R4, [LR, #24] 
    /*0001a8e0*/ LDRD        R4, [SP, #216]              @ 0xd8 
    /*0001a8e4*/ STRD        R0, [LR, #32] 
    /*0001a8e8*/ STRD        R2, [LR, #40]               @ 0x28 
    /*0001a8ec*/ LDRD        R0, [SP, #224]              @ 0xe0 
    /*0001a8f0*/ LDRD        R2, [SP, #232]              @ 0xe8 
    /*0001a8f4*/ STRD        R4, [LR, #48]               @ 0x30 
    /*0001a8f8*/ LDRD        R4, [SP, #240]              @ 0xf0 
    /*0001a8fc*/ STRD        R0, [LR, #56]               @ 0x38 
    /*0001a900*/ MOV         R0, #0 
    /*0001a904*/ STRD        R2, [LR, #64]               @ 0x40 
    /*0001a908*/ STRD        R4, [LR, #72]               @ 0x48 
    /*0001a90c*/ STR         IP, [LR] 
    /*0001a910*/ ADD         SP, SP, #252                @ 0xfc 
    /*0001a914*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_PMF_And_Rotation_CFG_x1a918:
    /*0001a918*/ MOV         R3, #0 
    /*0001a91c*/ STRD        SL, [SP] 
    /*0001a920*/ MOV         FP, R3 
    GDC_PMF_And_Rotation_CFG_x1a924:
    /*0001a924*/ ADD         R3, SP, #176                @ 0xb0 
    /*0001a928*/ MOV         R7, #0 
    /*0001a92c*/ ADD         R6, R3, FP 
    /*0001a930*/ STR         FP, [SP, #12] 
    GDC_PMF_And_Rotation_CFG_x1a934:
    /*0001a934*/ LDRD        R4, [R6] 
    /*0001a938*/ MVN         SL, #-2147483648            @ 0x80000000 
    /*0001a93c*/ MOV         FP, #0 
    /*0001a940*/ MOV         R2, #4 
    /*0001a944*/ CMP         SL, R4 
    /*0001a948*/ SBCS        R3, FP, R5 
    /*0001a94c*/ LSL         R3, R5, #31 
    /*0001a950*/ LSL         R8, R4, #31 
    /*0001a954*/ MOV         R0, R4 
    /*0001a958*/ MOV         R1, R5 
    /*0001a95c*/ ORR         R9, R3, R4, LSR #1 
    /*0001a960*/ BGE         GDC_PMF_And_Rotation_CFG_x1a9c4
    /*0001a964*/ BL          0x000000000001A964          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0001a968*/ MOV         R2, #4 
    /*0001a96c*/ MOV         R4, R0 
    /*0001a970*/ MOV         R5, R1 
    /*0001a974*/ LDRD        R0, [SP] 
    /*0001a978*/ LSL         R8, R4, #31 
    /*0001a97c*/ BL          0x000000000001A97C          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0001a980*/ LSL         R3, R5, #31 
    /*0001a984*/ ORR         R9, R3, R4, LSR #1 
    /*0001a988*/ MOV         R2, R0 
    /*0001a98c*/ SUBS        R0, R8, R4 
    /*0001a990*/ MOV         R3, R1 
    /*0001a994*/ SBC         R1, R9, R5 
    /*0001a998*/ BL          0x000000000001A998          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0001a99c*/ STRD        R0, [R6] 
    GDC_PMF_And_Rotation_CFG_x1a9a0:
    /*0001a9a0*/ ADD         R7, R7, #1 
    /*0001a9a4*/ ADD         R6, R6, #24 
    /*0001a9a8*/ CMP         R7, #3 
    /*0001a9ac*/ BNE         GDC_PMF_And_Rotation_CFG_x1a934
    /*0001a9b0*/ LDR         FP, [SP, #12] 
    /*0001a9b4*/ ADD         FP, FP, #8 
    /*0001a9b8*/ CMP         FP, #24 
    /*0001a9bc*/ BNE         GDC_PMF_And_Rotation_CFG_x1a924
    /*0001a9c0*/ B           GDC_PMF_And_Rotation_CFG_x1a8b8
    GDC_PMF_And_Rotation_CFG_x1a9c4:
    /*0001a9c4*/ SUBS        R0, R8, R4 
    /*0001a9c8*/ LDRD        R2, [SP] 
    /*0001a9cc*/ SBC         R1, R9, R5 
    /*0001a9d0*/ BL          0x000000000001A9D0          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0001a9d4*/ STRD        R0, [R6] 
    /*0001a9d8*/ B           GDC_PMF_And_Rotation_CFG_x1a9a0
    GDC_PMF_And_Rotation_CFG_x1a9dc:
    /*0001a9dc*/ LDR         R3, [SP, #288]              @ 0x120 
    /*0001a9e0*/ ADD         R1, R6, #8 
    /*0001a9e4*/ MOV         R2, #72                     @ 0x48 
    /*0001a9e8*/ ADD         R0, R3, #8 
    /*0001a9ec*/ BL          0x000000000001A9EC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001a9f0*/ MOV         R0, #0 
    /*0001a9f4*/ ADD         SP, SP, #252                @ 0xfc 
    /*0001a9f8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_PMF_And_Rotation_CFG_x1a9fc:
    /*0001a9fc*/ LDR         R1, [R5, #16] 
    /*0001aa00*/ MOV         R2, #0 
    /*0001aa04*/ MOV         R3, #0 
    /*0001aa08*/ STR         R2, [SP, #104]              @ 0x68 
    /*0001aa0c*/ SUB         R1, R1, #1 
    /*0001aa10*/ STR         R2, [SP, #120]              @ 0x78 
    /*0001aa14*/ STR         R1, [SP, #144]              @ 0x90 
    /*0001aa18*/ MOV         R1, R2 
    /*0001aa1c*/ STR         R2, [SP, #24] 
    /*0001aa20*/ STR         R2, [SP, #136]              @ 0x88 
    /*0001aa24*/ STR         R2, [SP, #28] 
    /*0001aa28*/ STR         R2, [SP, #152]              @ 0x98 
    /*0001aa2c*/ STR         R2, [SP, #160]              @ 0xa0 
    /*0001aa30*/ STR         R2, [SP, #108]              @ 0x6c 
    /*0001aa34*/ STR         R2, [SP, #124]              @ 0x7c 
    /*0001aa38*/ STR         R2, [SP, #140]              @ 0x8c 
    /*0001aa3c*/ STR         R2, [SP, #156]              @ 0x9c 
    /*0001aa40*/ STR         R2, [SP, #164]              @ 0xa4 
    /*0001aa44*/ MOV         R2, #1 
    /*0001aa48*/ STR         R1, [SP, #148]              @ 0x94 
    /*0001aa4c*/ STRD        R2, [SP, #112]              @ 0x70 
    /*0001aa50*/ STRD        R2, [SP, #168]              @ 0xa8 
    /*0001aa54*/ MVN         R2, #0 
    /*0001aa58*/ MVN         R3, #0 
    /*0001aa5c*/ STRD        R2, [SP, #128]              @ 0x80 
    /*0001aa60*/ B           GDC_PMF_And_Rotation_CFG_x1a6a8
    GDC_PMF_And_Rotation_CFG_x1aa64:
    /*0001aa64*/ LDR         R1, [R5, #12] 
    /*0001aa68*/ MOV         R2, #0 
    /*0001aa6c*/ MVN         R3, #0 
    /*0001aa70*/ STR         R2, [SP, #104]              @ 0x68 
    /*0001aa74*/ SUB         R1, R1, #1 
    /*0001aa78*/ STR         R2, [SP, #136]              @ 0x88 
    /*0001aa7c*/ STR         R1, [SP, #120]              @ 0x78 
    /*0001aa80*/ MOV         R1, R2 
    /*0001aa84*/ STR         R2, [SP, #24] 
    /*0001aa88*/ STR         R2, [SP, #144]              @ 0x90 
    /*0001aa8c*/ STR         R2, [SP, #28] 
    /*0001aa90*/ STR         R2, [SP, #152]              @ 0x98 
    /*0001aa94*/ STR         R2, [SP, #160]              @ 0xa0 
    /*0001aa98*/ STR         R2, [SP, #108]              @ 0x6c 
    /*0001aa9c*/ STR         R2, [SP, #140]              @ 0x8c 
    /*0001aaa0*/ STR         R2, [SP, #148]              @ 0x94 
    /*0001aaa4*/ STR         R2, [SP, #156]              @ 0x9c 
    /*0001aaa8*/ STR         R2, [SP, #164]              @ 0xa4 
    /*0001aaac*/ MVN         R2, #0 
    /*0001aab0*/ STR         R1, [SP, #124]              @ 0x7c 
    /*0001aab4*/ STRD        R2, [SP, #112]              @ 0x70 
    /*0001aab8*/ MOV         R2, #1 
    /*0001aabc*/ MOV         R3, #0 
    /*0001aac0*/ STRD        R2, [SP, #128]              @ 0x80 
    /*0001aac4*/ STRD        R2, [SP, #168]              @ 0xa8 
    /*0001aac8*/ B           GDC_PMF_And_Rotation_CFG_x1a6a8
    /*0001aacc*/ ANDEQ       R1, R0, R0, LSR #4 
FUNC_END GDC_PMF_And_Rotation_CFG


FUNC_BEGIN GDC_PMF_ConfigExt
    /*0001aad0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001aad4*/ SUB         SP, SP, #28 
    /*0001aad8*/ LDRD        R4, [R1, #72]               @ 0x48 
    /*0001aadc*/ STR         R2, [SP, #20] 
    /*0001aae0*/ CMP         R5, #0 
    /*0001aae4*/ CMPEQ       R4, #524288                 @ 0x80000 
    /*0001aae8*/ BNE         GDC_PMF_ConfigExt_x1ad0c
    /*0001aaec*/ ADD         FP, PC, #740                @ 0x2e4 
    /*0001aaf0*/ LDRD        SL, [FP] 
    /*0001aaf4*/ MOV         LR, R3 
    /*0001aaf8*/ LDRD        R2, [R1, #8] 
    /*0001aafc*/ ADD         R9, PC, #732                @ 0x2dc 
    /*0001ab00*/ LDRD        R8, [R9] 
    /*0001ab04*/ ADDS        R4, R2, SL 
    /*0001ab08*/ ADC         R5, R3, FP 
    /*0001ab0c*/ CMP         R5, R9 
    /*0001ab10*/ CMPEQ       R4, R8 
    /*0001ab14*/ BHI         GDC_PMF_ConfigExt_x1ac40
    /*0001ab18*/ LDRD        R4, [R1, #16] 
    /*0001ab1c*/ ADD         R7, PC, #708                @ 0x2c4 
    /*0001ab20*/ LDRD        R6, [R7] 
    /*0001ab24*/ ADD         R3, PC, #708                @ 0x2c4 
    /*0001ab28*/ LDRD        R2, [R3] 
    /*0001ab2c*/ ADDS        R6, R6, R4 
    /*0001ab30*/ ADC         R7, R7, R5 
    /*0001ab34*/ CMP         R7, R3 
    /*0001ab38*/ CMPEQ       R6, R2 
    /*0001ab3c*/ BHI         GDC_PMF_ConfigExt_x1ac94
    /*0001ab40*/ LDRD        R4, [R1, #24] 
    /*0001ab44*/ MOV         R3, #0 
    /*0001ab48*/ MVN         R2, #-2147483648            @ 0x80000000 
    /*0001ab4c*/ ADDS        R6, R4, #1073741824         @ 0x40000000 
    /*0001ab50*/ ADC         R7, R5, #0 
    /*0001ab54*/ CMP         R7, R3 
    /*0001ab58*/ CMPEQ       R6, R2 
    /*0001ab5c*/ BHI         GDC_PMF_ConfigExt_x1ad84
    /*0001ab60*/ LDRD        R4, [R1, #32] 
    /*0001ab64*/ ADD         R3, PC, #636                @ 0x27c 
    /*0001ab68*/ LDRD        R2, [R3] 
    /*0001ab6c*/ ADD         R7, PC, #636                @ 0x27c 
    /*0001ab70*/ LDRD        R6, [R7] 
    /*0001ab74*/ ADDS        R2, R2, R4 
    /*0001ab78*/ ADC         R3, R3, R5 
    /*0001ab7c*/ CMP         R3, R7 
    /*0001ab80*/ CMPEQ       R2, R6 
    /*0001ab84*/ BHI         GDC_PMF_ConfigExt_x1acbc
    /*0001ab88*/ LDRD        R4, [R1, #40]               @ 0x28 
    /*0001ab8c*/ ADDS        R2, R4, SL 
    /*0001ab90*/ ADC         R3, R5, FP 
    /*0001ab94*/ CMP         R3, R9 
    /*0001ab98*/ CMPEQ       R2, R8 
    /*0001ab9c*/ BHI         GDC_PMF_ConfigExt_x1ace4
    /*0001aba0*/ LDRD        R2, [R1, #48]               @ 0x30 
    /*0001aba4*/ MOV         R7, #0 
    /*0001aba8*/ MVN         R6, #-2147483648            @ 0x80000000 
    /*0001abac*/ ADDS        R4, R2, #1073741824         @ 0x40000000 
    /*0001abb0*/ ADC         R5, R3, #0 
    /*0001abb4*/ CMP         R5, R7 
    /*0001abb8*/ CMPEQ       R4, R6 
    /*0001abbc*/ BHI         GDC_PMF_ConfigExt_x1adac
    /*0001abc0*/ LDRD        R2, [R1, #56]               @ 0x38 
    /*0001abc4*/ ADDS        R4, R2, #26 
    /*0001abc8*/ ADC         R5, R3, #0 
    /*0001abcc*/ CMP         R5, #0 
    /*0001abd0*/ CMPEQ       R4, #130                    @ 0x82 
    /*0001abd4*/ BHI         GDC_PMF_ConfigExt_x1ad34
    /*0001abd8*/ LDRD        R2, [R1, #64]               @ 0x40 
    /*0001abdc*/ ADDS        R4, R2, #26 
    /*0001abe0*/ ADC         R5, R3, #0 
    /*0001abe4*/ CMP         R5, #0 
    /*0001abe8*/ CMPEQ       R4, #130                    @ 0x82 
    /*0001abec*/ BHI         GDC_PMF_ConfigExt_x1ad5c
    /*0001abf0*/ STR         LR, [SP] 
    /*0001abf4*/ MOV         R2, #0 
    /*0001abf8*/ LDR         R3, [SP, #20] 
    /*0001abfc*/ BL          0x000000000001ABFC          @ GDC_PMF_And_Rotation_CFG [R_ARM_CALL: .text+0x1a5b0] 
    /*0001ac00*/ SUBS        R4, R0, #0 
    /*0001ac04*/ BNE         GDC_PMF_ConfigExt_x1ac14
    /*0001ac08*/ MOV         R0, R4 
    /*0001ac0c*/ ADD         SP, SP, #28 
    /*0001ac10*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_PMF_ConfigExt_x1ac14:
    /*0001ac14*/ MOVW        R3, #1038                   @ 0x40e 
    /*0001ac18*/ MOV         R1, #37                     @ 0x25 
    /*0001ac1c*/ STR         R3, [SP] 
    /*0001ac20*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6df4] 
    /*0001ac24*/ LDR         R3, [PC, #460]              @ 0x000000000001adf8 
    /*0001ac28*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6df4] 
    /*0001ac2c*/ MOV         R0, #3 
    /*0001ac30*/ BL          0x000000000001AC30          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ac34*/ MOV         R0, R4 
    /*0001ac38*/ ADD         SP, SP, #28 
    /*0001ac3c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_PMF_ConfigExt_x1ac40:
    /*0001ac40*/ STRD        R2, [SP, #8] 
    /*0001ac44*/ MOV         R1, #37                     @ 0x25 
    /*0001ac48*/ MOVW        R3, #759                    @ 0x2f7 
    /*0001ac4c*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6ac0] 
    /*0001ac50*/ STR         R3, [SP] 
    /*0001ac54*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6ac0] 
    /*0001ac58*/ LDR         R3, [PC, #412]              @ 0x000000000001adfc 
    /*0001ac5c*/ MOV         R0, #3 
    /*0001ac60*/ BL          0x000000000001AC60          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_PMF_ConfigExt_x1ac64:
    /*0001ac64*/ MOVW        R3, #1031                   @ 0x407 
    /*0001ac68*/ MOV         R1, #37                     @ 0x25 
    /*0001ac6c*/ STR         R3, [SP] 
    /*0001ac70*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e38] 
    /*0001ac74*/ LDR         R3, [PC, #380]              @ 0x000000000001adf8 
    /*0001ac78*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e38] 
    /*0001ac7c*/ MOV         R0, #3 
    /*0001ac80*/ MVN         R4, #0 
    /*0001ac84*/ BL          0x000000000001AC84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ac88*/ MOV         R0, R4 
    /*0001ac8c*/ ADD         SP, SP, #28 
    /*0001ac90*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_PMF_ConfigExt_x1ac94:
    /*0001ac94*/ MOVW        R3, #765                    @ 0x2fd 
    /*0001ac98*/ STRD        R4, [SP, #8] 
    /*0001ac9c*/ STR         R3, [SP] 
    /*0001aca0*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b24] 
    /*0001aca4*/ LDR         R3, [PC, #336]              @ 0x000000000001adfc 
    /*0001aca8*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b24] 
    /*0001acac*/ MOV         R1, #37                     @ 0x25 
    /*0001acb0*/ MOV         R0, #3 
    /*0001acb4*/ BL          0x000000000001ACB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001acb8*/ B           GDC_PMF_ConfigExt_x1ac64
    GDC_PMF_ConfigExt_x1acbc:
    /*0001acbc*/ MOVW        R3, #777                    @ 0x309 
    /*0001acc0*/ STRD        R4, [SP, #8] 
    /*0001acc4*/ STR         R3, [SP] 
    /*0001acc8*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6bf0] 
    /*0001accc*/ LDR         R3, [PC, #296]              @ 0x000000000001adfc 
    /*0001acd0*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6bf0] 
    /*0001acd4*/ MOV         R1, #37                     @ 0x25 
    /*0001acd8*/ MOV         R0, #3 
    /*0001acdc*/ BL          0x000000000001ACDC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ace0*/ B           GDC_PMF_ConfigExt_x1ac64
    GDC_PMF_ConfigExt_x1ace4:
    /*0001ace4*/ MOVW        R3, #783                    @ 0x30f 
    /*0001ace8*/ STRD        R4, [SP, #8] 
    /*0001acec*/ STR         R3, [SP] 
    /*0001acf0*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6c54] 
    /*0001acf4*/ LDR         R3, [PC, #256]              @ 0x000000000001adfc 
    /*0001acf8*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6c54] 
    /*0001acfc*/ MOV         R1, #37                     @ 0x25 
    /*0001ad00*/ MOV         R0, #3 
    /*0001ad04*/ BL          0x000000000001AD04          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ad08*/ B           GDC_PMF_ConfigExt_x1ac64
    GDC_PMF_ConfigExt_x1ad0c:
    /*0001ad0c*/ MOVW        R3, #753                    @ 0x2f1 
    /*0001ad10*/ STRD        R4, [SP, #8] 
    /*0001ad14*/ STR         R3, [SP] 
    /*0001ad18*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6a70] 
    /*0001ad1c*/ LDR         R3, [PC, #216]              @ 0x000000000001adfc 
    /*0001ad20*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6a70] 
    /*0001ad24*/ MOV         R1, #37                     @ 0x25 
    /*0001ad28*/ MOV         R0, #3 
    /*0001ad2c*/ BL          0x000000000001AD2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ad30*/ B           GDC_PMF_ConfigExt_x1ac64
    GDC_PMF_ConfigExt_x1ad34:
    /*0001ad34*/ STRD        R2, [SP, #8] 
    /*0001ad38*/ MOV         R1, #37                     @ 0x25 
    /*0001ad3c*/ MOVW        R3, #795                    @ 0x31b 
    /*0001ad40*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d1c] 
    /*0001ad44*/ STR         R3, [SP] 
    /*0001ad48*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d1c] 
    /*0001ad4c*/ LDR         R3, [PC, #168]              @ 0x000000000001adfc 
    /*0001ad50*/ MOV         R0, #3 
    /*0001ad54*/ BL          0x000000000001AD54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ad58*/ B           GDC_PMF_ConfigExt_x1ac64
    GDC_PMF_ConfigExt_x1ad5c:
    /*0001ad5c*/ STRD        R2, [SP, #8] 
    /*0001ad60*/ MOV         R1, #37                     @ 0x25 
    /*0001ad64*/ MOVW        R3, #801                    @ 0x321 
    /*0001ad68*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d88] 
    /*0001ad6c*/ STR         R3, [SP] 
    /*0001ad70*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d88] 
    /*0001ad74*/ LDR         R3, [PC, #128]              @ 0x000000000001adfc 
    /*0001ad78*/ MOV         R0, #3 
    /*0001ad7c*/ BL          0x000000000001AD7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ad80*/ B           GDC_PMF_ConfigExt_x1ac64
    GDC_PMF_ConfigExt_x1ad84:
    /*0001ad84*/ MOVW        R3, #771                    @ 0x303 
    /*0001ad88*/ STRD        R4, [SP, #8] 
    /*0001ad8c*/ STR         R3, [SP] 
    /*0001ad90*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b8c] 
    /*0001ad94*/ LDR         R3, [PC, #96]               @ 0x000000000001adfc 
    /*0001ad98*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b8c] 
    /*0001ad9c*/ MOV         R1, #37                     @ 0x25 
    /*0001ada0*/ MOV         R0, #3 
    /*0001ada4*/ BL          0x000000000001ADA4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001ada8*/ B           GDC_PMF_ConfigExt_x1ac64
    GDC_PMF_ConfigExt_x1adac:
    /*0001adac*/ STRD        R2, [SP, #8] 
    /*0001adb0*/ MOV         R1, #37                     @ 0x25 
    /*0001adb4*/ MOVW        R3, #789                    @ 0x315 
    /*0001adb8*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6cb8] 
    /*0001adbc*/ STR         R3, [SP] 
    /*0001adc0*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6cb8] 
    /*0001adc4*/ LDR         R3, [PC, #48]               @ 0x000000000001adfc 
    /*0001adc8*/ MOV         R0, #3 
    /*0001adcc*/ BL          0x000000000001ADCC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001add0*/ B           GDC_PMF_ConfigExt_x1ac64
    /*0001add4*/ NOP         {0} 
    /*0001add8*/ @           <UNDEFINED> instruction: 0xfffd999a 
    /*0001addc*/ @           <UNDEFINED> instruction: 0xffffffff 
    /*0001ade0*/ ANDEQ       R3, FP, R3, LSR R3 
    /*0001ade4*/ ANDEQ       R0, R0, R0 
    /*0001ade8*/ MULEQ       R5, R9, R9 
    /*0001adec*/ ANDEQ       R0, R0, R0 
    /*0001adf0*/ ANDEQ       R3, FP, R2, LSR R3 
    /*0001adf4*/ ANDEQ       R0, R0, R0 
    /*0001adf8*/ ANDEQ       R1, R0, IP, ROR R2 
    /*0001adfc*/ ANDEQ       R1, R0, R8, ROR #4 
FUNC_END GDC_PMF_ConfigExt


FUNC_BEGIN GDC_DstSize_CFG
    /*0001ae00*/ LDR         R3, [R1] 
    /*0001ae04*/ BIC         R0, R0, #2 
    /*0001ae08*/ CMP         R3, #1 
    /*0001ae0c*/ LDREQ       R3, [R1, #80]               @ 0x50 
    /*0001ae10*/ LDRNE       R3, [R2, #12] 
    /*0001ae14*/ LDREQ       R1, [R1, #84]               @ 0x54 
    /*0001ae18*/ LDRNE       R1, [R2, #16] 
    /*0001ae1c*/ CMP         R0, #1 
    /*0001ae20*/ MOV         R0, #0 
    /*0001ae24*/ STREQ       R3, [R2, #16] 
    /*0001ae28*/ STREQ       R1, [R2, #12] 
    /*0001ae2c*/ STRNE       R1, [R2, #16] 
    /*0001ae30*/ STRNE       R3, [R2, #12] 
    /*0001ae34*/ BX          LR 
FUNC_END GDC_DstSize_CFG


FUNC_BEGIN GDC_Fisheye_FIFO_CFG
    /*0001ae38*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001ae3c*/ SUB         SP, SP, #44                 @ 0x2c 
    /*0001ae40*/ MOV         R6, R0 
    /*0001ae44*/ LDR         R4, [SP, #80]               @ 0x50 
    /*0001ae48*/ LDR         R5, [SP, #84]               @ 0x54 
    /*0001ae4c*/ LDR         R2, [R4] 
    /*0001ae50*/ CMP         R2, #0 
    /*0001ae54*/ BEQ         GDC_Fisheye_FIFO_CFG_x1b11c
    /*0001ae58*/ CMP         R2, #1 
    /*0001ae5c*/ BEQ         GDC_Fisheye_FIFO_CFG_x1afe8
    /*0001ae60*/ CMP         R2, #2 
    /*0001ae64*/ BNE         GDC_Fisheye_FIFO_CFG_x1b2c4
    /*0001ae68*/ LDR         R3, [R4, #428]              @ 0x1ac 
    /*0001ae6c*/ ADD         R1, SP, #40                 @ 0x28 
    /*0001ae70*/ ADD         R0, SP, #20 
    /*0001ae74*/ MOV         R2, #1048576                @ 0x100000 
    /*0001ae78*/ STR         R2, [SP, #32] 
    /*0001ae7c*/ ADD         R3, R3, R3, LSR #31 
    /*0001ae80*/ ASR         R3, R3, #1 
    /*0001ae84*/ STR         R3, [R1, #-12]! 
    /*0001ae88*/ BL          0x0000000000019C2C 
    /*0001ae8c*/ CMN         R0, #1 
    /*0001ae90*/ MOV         R7, R0 
    /*0001ae94*/ BEQ         GDC_Fisheye_FIFO_CFG_x1b1f0
    /*0001ae98*/ LDR         R1, [SP, #24] 
    /*0001ae9c*/ LDR         R2, [SP, #20] 
    /*0001aea0*/ ASR         R9, R1, #31 
    /*0001aea4*/ LSL         R0, R1, #20 
    /*0001aea8*/ ASR         R3, R2, #31 
    /*0001aeac*/ LSL         IP, R9, #20 
    /*0001aeb0*/ ORR         R1, IP, R1, LSR #12 
    /*0001aeb4*/ BL          0x000000000001AEB4          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0001aeb8*/ LDR         R2, [SP, #20] 
    /*0001aebc*/ CMP         R0, #0 
    /*0001aec0*/ SBCS        R3, R1, #0 
    /*0001aec4*/ LDR         R1, [SP, #24] 
    /*0001aec8*/ ASR         R3, R2, #31 
    /*0001aecc*/ ASR         R9, R1, #31 
    /*0001aed0*/ LSL         R0, R1, #20 
    /*0001aed4*/ LSL         IP, R9, #20 
    /*0001aed8*/ ORR         R1, IP, R1, LSR #12 
    /*0001aedc*/ BLT         GDC_Fisheye_FIFO_CFG_x1b270
    /*0001aee0*/ BL          0x000000000001AEE0          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0001aee4*/ MOV         R8, R0 
    GDC_Fisheye_FIFO_CFG_x1aee8:
    /*0001aee8*/ LDR         R3, [R4, #72]               @ 0x48 
    /*0001aeec*/ CMP         R3, #2 
    /*0001aef0*/ LDR         R3, [R4, #76]               @ 0x4c 
    /*0001aef4*/ BEQ         GDC_Fisheye_FIFO_CFG_x1b244
    /*0001aef8*/ UMULL       R8, R9, R8, R3 
    /*0001aefc*/ LDR         SL, [R4, #12] 
    /*0001af00*/ LDR         FP, [R4, #16] 
    /*0001af04*/ MOV         R0, #20 
    /*0001af08*/ MOV         R2, #0 
    GDC_Fisheye_FIFO_CFG_x1af0c:
    /*0001af0c*/ MUL         R2, R8, R2 
    /*0001af10*/ LSL         R3, FP, #1 
    /*0001af14*/ MLA         R2, R0, R9, R2 
    /*0001af18*/ CMP         R3, SL 
    /*0001af1c*/ UMULL       R0, R1, R8, R0 
    /*0001af20*/ MOVCS       R3, SL 
    /*0001af24*/ LSL         SL, SL, #1 
    /*0001af28*/ ADD         R1, R2, R1 
    /*0001af2c*/ LSR         R9, R1, #20 
    /*0001af30*/ LSR         R8, R0, #20 
    /*0001af34*/ MOVW        R0, #34464                  @ 0x86a0 
    /*0001af38*/ ORR         R8, R8, R1, LSL #12 
    /*0001af3c*/ MOVT        R0, #1 
    /*0001af40*/ ORRS        R2, R8, R9 
    /*0001af44*/ MUL         R0, R0, R3 
    /*0001af48*/ MOVEQ       R8, #1 
    /*0001af4c*/ MOV         R1, R8 
    /*0001af50*/ BL          0x000000000001AF50          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0001af54*/ CMP         SL, FP 
    /*0001af58*/ MOVW        R3, #34464                  @ 0x86a0 
    /*0001af5c*/ MOVT        R3, #1 
    /*0001af60*/ MOVCS       SL, FP 
    /*0001af64*/ MOV         R1, R8 
    /*0001af68*/ MOVW        FP, #5977                   @ 0x1759 
    /*0001af6c*/ MOVT        FP, #53687                  @ 0xd1b7 
    /*0001af70*/ LSL         R8, R0, #6 
    /*0001af74*/ MUL         R0, R3, SL 
    /*0001af78*/ BL          0x000000000001AF78          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0001af7c*/ LDR         IP, [R4, #96]               @ 0x60 
    /*0001af80*/ UMULL       R8, R9, R8, FP 
    /*0001af84*/ LSR         R2, R9, #13 
    /*0001af88*/ LSL         R0, R0, #6 
    /*0001af8c*/ UMULL       R0, R1, R0, FP 
    /*0001af90*/ LSR         R3, R1, #13 
    /*0001af94*/ CMP         R3, #32 
    /*0001af98*/ MOVCS       R3, #32 
    /*0001af9c*/ CMP         R3, #2 
    /*0001afa0*/ MOVCC       R3, #2 
    /*0001afa4*/ CMP         IP, #1 
    /*0001afa8*/ BEQ         GDC_Fisheye_FIFO_CFG_x1b220
    GDC_Fisheye_FIFO_CFG_x1afac:
    /*0001afac*/ CMP         R2, #0 
    /*0001afb0*/ BEQ         GDC_Fisheye_FIFO_CFG_x1b348
    /*0001afb4*/ CMP         R7, #0 
    /*0001afb8*/ STM         R5, {R2, R3} 
    /*0001afbc*/ MOV         R3, #1 
    /*0001afc0*/ MOV         R2, #0 
    /*0001afc4*/ STR         R3, [R5, #12] 
    /*0001afc8*/ MOV         R3, #3 
    /*0001afcc*/ STR         R2, [R5, #8] 
    /*0001afd0*/ STR         R3, [R5, #16] 
    /*0001afd4*/ STR         R3, [R5, #20] 
    /*0001afd8*/ BEQ         GDC_Fisheye_FIFO_CFG_x1b0e8
    GDC_Fisheye_FIFO_CFG_x1afdc:
    /*0001afdc*/ MOV         R0, R7 
    /*0001afe0*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0001afe4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_Fisheye_FIFO_CFG_x1afe8:
    /*0001afe8*/ LDR         R0, [R4, #16] 
    /*0001afec*/ MOVW        R7, #34464                  @ 0x86a0 
    /*0001aff0*/ LDR         R1, [R4, #12] 
    /*0001aff4*/ MOVT        R7, #1 
    /*0001aff8*/ LDR         R2, [R4, #76]               @ 0x4c 
    /*0001affc*/ LSL         R0, R0, #1 
    /*0001b000*/ STR         R3, [SP, #12] 
    /*0001b004*/ CMP         R0, R1 
    /*0001b008*/ MOVCS       R0, R1 
    /*0001b00c*/ UMULL       R0, R1, R0, R7 
    /*0001b010*/ BL          0x000000000001B010          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0001b014*/ MOV         R2, R7 
    /*0001b018*/ MOV         IP, R0 
    /*0001b01c*/ LSL         R1, R1, #5 
    /*0001b020*/ ORR         R1, R1, IP, LSR #27 
    /*0001b024*/ LSL         R0, R0, #5 
    /*0001b028*/ BL          0x000000000001B028          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0001b02c*/ LDR         R1, [R4, #12] 
    /*0001b030*/ LDR         SL, [R4, #384]              @ 0x180 
    /*0001b034*/ LDR         IP, [R4, #16] 
    /*0001b038*/ LSL         R1, R1, #1 
    /*0001b03c*/ CMP         SL, #0 
    /*0001b040*/ RSBLT       SL, SL, #0 
    /*0001b044*/ CMP         R1, IP 
    /*0001b048*/ LDR         R2, [R4, #76]               @ 0x4c 
    /*0001b04c*/ MOVCS       R1, IP 
    /*0001b050*/ SUB         SL, R0, SL, ASR #5 
    /*0001b054*/ UMULL       R0, R1, R1, R7 
    /*0001b058*/ BL          0x000000000001B058          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0001b05c*/ MOV         R2, R7 
    /*0001b060*/ ADDS        R8, R0, R0 
    /*0001b064*/ ADC         R9, R1, R1 
    /*0001b068*/ ADDS        R0, R0, R8 
    /*0001b06c*/ ADC         R1, R1, R9 
    /*0001b070*/ LSL         R8, R0, #4 
    /*0001b074*/ LSL         R9, R1, #4 
    /*0001b078*/ ORR         R9, R9, R0, LSR #28 
    /*0001b07c*/ SUBS        R0, R8, R0 
    /*0001b080*/ SBC         R1, R9, R1 
    /*0001b084*/ BL          0x000000000001B084          @ osal_div_s64 [R_ARM_CALL: +0x0] 
    /*0001b088*/ LDR         R2, [R4, #96]               @ 0x60 
    /*0001b08c*/ LDR         R3, [SP, #12] 
    /*0001b090*/ CMP         R2, #1 
    /*0001b094*/ BEQ         GDC_Fisheye_FIFO_CFG_x1b2ec
    GDC_Fisheye_FIFO_CFG_x1b098:
    /*0001b098*/ CMP         SL, #4 
    /*0001b09c*/ MOV         R2, #1 
    /*0001b0a0*/ STR         R2, [R5, #12] 
    /*0001b0a4*/ MOVLT       SL, #4 
    /*0001b0a8*/ CMP         R0, #2 
    /*0001b0ac*/ MOVLT       R0, #2 
    /*0001b0b0*/ CMP         R0, #32 
    /*0001b0b4*/ STR         R0, [R5, #4] 
    /*0001b0b8*/ MOVGT       R3, #1 
    /*0001b0bc*/ MOVLE       R3, #0 
    /*0001b0c0*/ CMP         SL, #63                     @ 0x3f 
    /*0001b0c4*/ MOVGT       R3, #0 
    /*0001b0c8*/ CMP         R3, #0 
    /*0001b0cc*/ ADDNE       SL, SL, R0, ASR #5 
    /*0001b0d0*/ MOV         R3, #0 
    /*0001b0d4*/ STR         SL, [R5] 
    /*0001b0d8*/ STR         R3, [R5, #8] 
    /*0001b0dc*/ MOV         R3, #3 
    /*0001b0e0*/ STR         R3, [R5, #16] 
    /*0001b0e4*/ STR         R3, [R5, #20] 
    GDC_Fisheye_FIFO_CFG_x1b0e8:
    /*0001b0e8*/ MOV         R3, #0 
    /*0001b0ec*/ MOV         R0, R5 
    /*0001b0f0*/ STR         R3, [R5, #28] 
    /*0001b0f4*/ MOV         R7, R3 
    /*0001b0f8*/ STR         R3, [R4, #44]               @ 0x2c 
    /*0001b0fc*/ BL          0x0000000000019C08 
    /*0001b100*/ MOV         R2, R5 
    /*0001b104*/ MOV         R1, R4 
    /*0001b108*/ MOV         R0, R6 
    /*0001b10c*/ BL          0x0000000000019518 
    /*0001b110*/ MOV         R0, R7 
    /*0001b114*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0001b118*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_Fisheye_FIFO_CFG_x1b11c:
    /*0001b11c*/ LDR         R3, [R4, #4] 
    /*0001b120*/ MOVW        R0, #34464                  @ 0x86a0 
    /*0001b124*/ LDR         R2, [R4, #8] 
    /*0001b128*/ MOVT        R0, #1 
    /*0001b12c*/ LDR         R7, [R4, #76]               @ 0x4c 
    /*0001b130*/ CMP         R3, R2 
    /*0001b134*/ LDR         R1, [R4, #360]              @ 0x168 
    /*0001b138*/ MOVCC       R3, R2 
    /*0001b13c*/ ADD         R1, R7, R1 
    /*0001b140*/ LSR         R3, R3, #1 
    /*0001b144*/ LDR         R2, [R4, #428]              @ 0x1ac 
    /*0001b148*/ CMP         R3, R1 
    /*0001b14c*/ MOVCC       R1, R3 
    /*0001b150*/ CMP         R1, #0 
    /*0001b154*/ LSR         R2, R2, #6 
    /*0001b158*/ LDR         R3, [R4, #12] 
    /*0001b15c*/ MOVEQ       R1, #1 
    /*0001b160*/ MUL         R1, R1, R2 
    /*0001b164*/ MUL         R0, R0, R3 
    /*0001b168*/ CMP         R1, #0 
    /*0001b16c*/ MOVEQ       R1, #1 
    /*0001b170*/ BL          0x000000000001B170          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0001b174*/ MOVW        R3, #23237                  @ 0x5ac5 
    /*0001b178*/ MOVT        R3, #2684                   @ 0xa7c 
    /*0001b17c*/ LDR         IP, [R4, #16] 
    /*0001b180*/ MOVW        LR, #10000                  @ 0x2710 
    /*0001b184*/ MOV         R1, R7 
    /*0001b188*/ ADD         R2, R0, #1 
    /*0001b18c*/ MUL         R0, LR, IP 
    /*0001b190*/ LSL         R2, R2, #15 
    /*0001b194*/ LSR         R2, R2, #5 
    /*0001b198*/ UMULL       R2, R3, R2, R3 
    /*0001b19c*/ LSR         R7, R3, #7 
    /*0001b1a0*/ BL          0x000000000001B1A0          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0001b1a4*/ MOVW        R3, #5977                   @ 0x1759 
    /*0001b1a8*/ MOVT        R3, #53687                  @ 0xd1b7 
    /*0001b1ac*/ LSL         R0, R0, #6 
    /*0001b1b0*/ UMULL       R0, R1, R0, R3 
    /*0001b1b4*/ LSR         R3, R1, #13 
    /*0001b1b8*/ CMP         R3, #0 
    /*0001b1bc*/ CMPNE       R7, #0 
    /*0001b1c0*/ MOVEQ       R2, #1 
    /*0001b1c4*/ MOVNE       R2, #0 
    /*0001b1c8*/ BEQ         GDC_Fisheye_FIFO_CFG_x1b36c
    /*0001b1cc*/ MOV         R1, #1 
    /*0001b1d0*/ STR         R3, [R5, #4] 
    /*0001b1d4*/ STR         R7, [R5] 
    /*0001b1d8*/ MOV         R3, #3 
    /*0001b1dc*/ STR         R2, [R5, #8] 
    /*0001b1e0*/ STR         R1, [R5, #12] 
    /*0001b1e4*/ STR         R3, [R5, #16] 
    /*0001b1e8*/ STR         R3, [R5, #20] 
    /*0001b1ec*/ B           GDC_Fisheye_FIFO_CFG_x1b0e8
    GDC_Fisheye_FIFO_CFG_x1b1f0:
    /*0001b1f0*/ MOVW        R3, #1222                   @ 0x4c6 
    /*0001b1f4*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6ec8] 
    /*0001b1f8*/ STR         R3, [SP] 
    /*0001b1fc*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6ec8] 
    /*0001b200*/ LDR         R3, [PC, #396]              @ 0x000000000001b394 
    /*0001b204*/ MOV         R1, #37                     @ 0x25 
    /*0001b208*/ MOV         R0, #3 
    /*0001b20c*/ BL          0x000000000001B20C          @ HI_LOG [R_ARM_CALL: +0x0] 
    GDC_Fisheye_FIFO_CFG_x1b210:
    /*0001b210*/ MVN         R7, #0 
    /*0001b214*/ MOV         R0, R7 
    /*0001b218*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0001b21c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_Fisheye_FIFO_CFG_x1b220:
    /*0001b220*/ LDRH        R1, [R4, #140]              @ 0x8c 
    /*0001b224*/ SUB         R1, R1, #150                @ 0x96 
    /*0001b228*/ CMP         R1, #250                    @ 0xfa 
    /*0001b22c*/ BLS         GDC_Fisheye_FIFO_CFG_x1afac
    /*0001b230*/ LDRSH       R1, [R4, #180]              @ 0xb4 
    /*0001b234*/ LSR         R3, R3, #1 
    /*0001b238*/ CMP         R1, #400                    @ 0x190 
    /*0001b23c*/ LSRLT       R2, R9, #14 
    /*0001b240*/ B           GDC_Fisheye_FIFO_CFG_x1afac
    GDC_Fisheye_FIFO_CFG_x1b244:
    /*0001b244*/ LDR         SL, [R4, #12] 
    /*0001b248*/ MOV         R2, #0 
    /*0001b24c*/ UMULL       R8, R9, R8, R3 
    /*0001b250*/ LSR         R1, SL, #12 
    /*0001b254*/ LSL         R0, SL, #20 
    /*0001b258*/ CMP         R9, R1 
    /*0001b25c*/ CMPEQ       R8, R0 
    /*0001b260*/ BHI         GDC_Fisheye_FIFO_CFG_x1b27c
    /*0001b264*/ LDR         FP, [R4, #16] 
    /*0001b268*/ MOV         R0, #10 
    /*0001b26c*/ B           GDC_Fisheye_FIFO_CFG_x1af0c
    GDC_Fisheye_FIFO_CFG_x1b270:
    /*0001b270*/ BL          0x000000000001B270          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0001b274*/ RSB         R8, R0, #0 
    /*0001b278*/ B           GDC_Fisheye_FIFO_CFG_x1aee8
    GDC_Fisheye_FIFO_CFG_x1b27c:
    /*0001b27c*/ ADDS        R0, R8, R8 
    /*0001b280*/ LDR         FP, [R4, #16] 
    /*0001b284*/ ADC         R1, R9, R9 
    /*0001b288*/ ADDS        R0, R0, R0 
    /*0001b28c*/ ADC         R1, R1, R1 
    /*0001b290*/ ADDS        R0, R0, R8 
    /*0001b294*/ ADC         R1, R1, R9 
    /*0001b298*/ ADDS        R0, R0, R0 
    /*0001b29c*/ ADC         R1, R1, R1 
    /*0001b2a0*/ CMP         SL, FP 
    /*0001b2a4*/ LSR         R0, R0, #20 
    /*0001b2a8*/ STR         R2, [SP, #12] 
    /*0001b2ac*/ ORR         R0, R0, R1, LSL #12 
    /*0001b2b0*/ MOVCC       R1, SL 
    /*0001b2b4*/ MOVCS       R1, FP 
    /*0001b2b8*/ BL          0x000000000001B2B8          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0001b2bc*/ LDR         R2, [SP, #12] 
    /*0001b2c0*/ B           GDC_Fisheye_FIFO_CFG_x1af0c
    GDC_Fisheye_FIFO_CFG_x1b2c4:
    /*0001b2c4*/ MOVW        R3, #1320                   @ 0x528 
    /*0001b2c8*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6f54] 
    /*0001b2cc*/ STR         R3, [SP] 
    /*0001b2d0*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6f54] 
    /*0001b2d4*/ LDR         R3, [PC, #188]              @ 0x000000000001b398 
    /*0001b2d8*/ MOV         R1, #37                     @ 0x25 
    /*0001b2dc*/ MOV         R0, #3 
    /*0001b2e0*/ MVN         R7, #0 
    /*0001b2e4*/ BL          0x000000000001B2E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b2e8*/ B           GDC_Fisheye_FIFO_CFG_x1afdc
    GDC_Fisheye_FIFO_CFG_x1b2ec:
    /*0001b2ec*/ LDR         R1, [R4, #84]               @ 0x54 
    /*0001b2f0*/ ADDS        R2, R1, R1, LSL #1 
    /*0001b2f4*/ BMI         GDC_Fisheye_FIFO_CFG_x1b328
    /*0001b2f8*/ ASR         R2, R2, #14 
    /*0001b2fc*/ CMP         R2, #4 
    /*0001b300*/ BLE         GDC_Fisheye_FIFO_CFG_x1b338
    GDC_Fisheye_FIFO_CFG_x1b304:
    /*0001b304*/ MOV         R1, #4 
    GDC_Fisheye_FIFO_CFG_x1b308:
    /*0001b308*/ STR         R3, [SP, #12] 
    /*0001b30c*/ BL          0x000000000001B30C          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0001b310*/ LDR         R3, [SP, #12] 
    /*0001b314*/ BIC         R3, R3, #2 
    /*0001b318*/ CMP         R3, #1 
    /*0001b31c*/ ASREQ       SL, SL, #1 
    /*0001b320*/ ASRNE       R0, R0, #1 
    /*0001b324*/ B           GDC_Fisheye_FIFO_CFG_x1b098
    GDC_Fisheye_FIFO_CFG_x1b328:
    /*0001b328*/ SUB         R1, R1, R1, LSL #2 
    /*0001b32c*/ ASR         R2, R1, #14 
    /*0001b330*/ CMP         R2, #4 
    /*0001b334*/ BGT         GDC_Fisheye_FIFO_CFG_x1b304
    GDC_Fisheye_FIFO_CFG_x1b338:
    /*0001b338*/ CMP         R2, #1 
    /*0001b33c*/ MOVGE       R1, R2 
    /*0001b340*/ MOVLT       R1, #1 
    /*0001b344*/ B           GDC_Fisheye_FIFO_CFG_x1b308
    GDC_Fisheye_FIFO_CFG_x1b348:
    /*0001b348*/ MOVW        R3, #1269                   @ 0x4f5 
    /*0001b34c*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6f00] 
    /*0001b350*/ STR         R3, [SP] 
    /*0001b354*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6f00] 
    /*0001b358*/ LDR         R3, [PC, #52]               @ 0x000000000001b394 
    /*0001b35c*/ MOV         R1, #37                     @ 0x25 
    /*0001b360*/ MOV         R0, #3 
    /*0001b364*/ BL          0x000000000001B364          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b368*/ B           GDC_Fisheye_FIFO_CFG_x1b210
    GDC_Fisheye_FIFO_CFG_x1b36c:
    /*0001b36c*/ MOVW        R3, #1111                   @ 0x457 
    /*0001b370*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e74] 
    /*0001b374*/ STR         R3, [SP] 
    /*0001b378*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e74] 
    /*0001b37c*/ LDR         R3, [PC, #24]               @ 0x000000000001b39c 
    /*0001b380*/ MOV         R1, #37                     @ 0x25 
    /*0001b384*/ MOV         R0, #3 
    /*0001b388*/ MVN         R7, #0 
    /*0001b38c*/ BL          0x000000000001B38C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001b390*/ B           GDC_Fisheye_FIFO_CFG_x1afdc
    /*0001b394*/ ANDEQ       R1, R0, IP, LSR #5 
    /*0001b398*/ ANDEQ       R1, R0, IP, ASR #5 
    /*0001b39c*/ MULEQ       R0, R0, R2 
FUNC_END GDC_Fisheye_FIFO_CFG


FUNC_BEGIN GDC_LDC_FIFO_CFG
    /*0001b3a0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001b3a4*/ SUB         SP, SP, #44                 @ 0x2c 
    /*0001b3a8*/ MOV         R8, R1 
    /*0001b3ac*/ MOV         FP, R2 
    /*0001b3b0*/ LDR         R9, [SP, #84]               @ 0x54 
    /*0001b3b4*/ STR         R0, [SP, #12] 
    /*0001b3b8*/ LDR         R6, [R9, #436]              @ 0x1b4 
    /*0001b3bc*/ ASR         R7, R6, #31 
    /*0001b3c0*/ ASR         R4, R7, #31 
    /*0001b3c4*/ EOR         R0, R4, R6 
    /*0001b3c8*/ EOR         R1, R4, R7 
    /*0001b3cc*/ SUBS        R0, R0, R4 
    /*0001b3d0*/ SBC         R1, R1, R4 
    /*0001b3d4*/ LDR         R4, [SP, #88]               @ 0x58 
    /*0001b3d8*/ LSR         R2, R0, #5 
    /*0001b3dc*/ ORR         R2, R2, R1, LSL #27 
    /*0001b3e0*/ LSR         R3, R1, #5 
    /*0001b3e4*/ ORRS        R1, R2, R3 
    /*0001b3e8*/ MOVEQ       SL, #0 
    /*0001b3ec*/ STREQ       SL, [SP, #28] 
    /*0001b3f0*/ BEQ         GDC_LDC_FIFO_CFG_x1b408
    /*0001b3f4*/ CMP         R6, #0 
    /*0001b3f8*/ SBCS        R1, R7, #0 
    /*0001b3fc*/ STRGE       R2, [SP, #28] 
    /*0001b400*/ MOVGE       SL, R2 
    /*0001b404*/ BLT         GDC_LDC_FIFO_CFG_x1b9e4
    GDC_LDC_FIFO_CFG_x1b408:
    /*0001b408*/ LDR         R3, [R8, #16] 
    /*0001b40c*/ LDMIB       R9, {R5, R6} 
    /*0001b410*/ STR         R3, [SP, #24] 
    /*0001b414*/ CMP         R5, R6 
    /*0001b418*/ LDR         R3, [FP, #4] 
    /*0001b41c*/ STR         R3, [SP, #16] 
    /*0001b420*/ BLS         GDC_LDC_FIFO_CFG_x1b674
    /*0001b424*/ CMP         R6, #0 
    /*0001b428*/ LSL         R0, R5, #10 
    /*0001b42c*/ MOVNE       R1, R6 
    /*0001b430*/ MOVEQ       R1, #1 
    /*0001b434*/ BL          0x000000000001B434          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0001b438*/ LDR         R3, [R9, #388]              @ 0x184 
    /*0001b43c*/ CMP         R3, #0 
    /*0001b440*/ STR         R3, [SP, #20] 
    /*0001b444*/ MOV         R7, R0 
    /*0001b448*/ BNE         GDC_LDC_FIFO_CFG_x1b69c
    GDC_LDC_FIFO_CFG_x1b44c:
    /*0001b44c*/ SUB         R8, R7, #1024               @ 0x400 
    /*0001b450*/ MOVW        R1, #65196                  @ 0xfeac 
    /*0001b454*/ MOVT        R1, #65535                  @ 0xffff 
    /*0001b458*/ MOVW        R2, #59279                  @ 0xe78f 
    /*0001b45c*/ MOVT        R2, #21076                  @ 0x5254 
    /*0001b460*/ MOVW        IP, #2300                   @ 0x8fc 
    /*0001b464*/ MUL         R1, R1, R8 
    /*0001b468*/ MOVW        LR, #1960                   @ 0x7a8 
    /*0001b46c*/ MOVW        R0, #1364                   @ 0x554 
    /*0001b470*/ SMULL       R2, R3, R1, R2 
    /*0001b474*/ ASR         R1, R1, #31 
    /*0001b478*/ RSB         R1, R1, R3, ASR #8 
    /*0001b47c*/ ADD         R1, R1, IP 
    /*0001b480*/ CMP         R1, IP 
    /*0001b484*/ MOVGE       R1, IP 
    /*0001b488*/ CMP         R1, LR 
    /*0001b48c*/ MOVLT       R1, LR 
    /*0001b490*/ CMP         R7, R0 
    /*0001b494*/ MOVLE       R7, #8 
    /*0001b498*/ MOVGT       R7, #10 
    /*0001b49c*/ CMP         SL, R1 
    /*0001b4a0*/ MOVGE       R0, #32 
    /*0001b4a4*/ BLT         GDC_LDC_FIFO_CFG_x1b8c4
    GDC_LDC_FIFO_CFG_x1b4a8:
    /*0001b4a8*/ LSL         R8, R8, #5 
    /*0001b4ac*/ MOVW        R2, #59279                  @ 0xe78f 
    /*0001b4b0*/ MOVT        R2, #21076                  @ 0x5254 
    /*0001b4b4*/ MOVW        IP, #8209                   @ 0x2011 
    /*0001b4b8*/ ASR         R1, R8, #31 
    /*0001b4bc*/ MOVT        IP, #32832                  @ 0x8040 
    /*0001b4c0*/ SMULL       R2, R3, R8, R2 
    /*0001b4c4*/ MOV         R7, #128                    @ 0x80 
    /*0001b4c8*/ RSB         R1, R1, R3, ASR #8 
    /*0001b4cc*/ ADD         R3, R1, #16 
    /*0001b4d0*/ LDR         R1, [SP, #24] 
    /*0001b4d4*/ CMP         R3, #48                     @ 0x30 
    /*0001b4d8*/ MOVGE       R3, #48                     @ 0x30 
    /*0001b4dc*/ CMP         R3, #16 
    /*0001b4e0*/ MOVLT       R3, #16 
    /*0001b4e4*/ CMP         R1, #0 
    /*0001b4e8*/ RSBLT       R1, R1, #0 
    /*0001b4ec*/ MUL         R1, R0, R1 
    /*0001b4f0*/ MUL         R1, R1, R3 
    /*0001b4f4*/ SMULL       R2, R3, R1, IP 
    /*0001b4f8*/ ASR         R8, R1, #31 
    /*0001b4fc*/ ADD         R1, R1, R3 
    /*0001b500*/ RSB         R8, R8, R1, ASR #13 
    /*0001b504*/ ADD         R8, R8, R0 
    /*0001b508*/ CMP         R8, #32 
    /*0001b50c*/ MOVGE       R8, #32 
    /*0001b510*/ BIC         R8, R8, R8, ASR #31 
    GDC_LDC_FIFO_CFG_x1b514:
    /*0001b514*/ LDR         R3, [SP, #16] 
    /*0001b518*/ LDR         R2, [FP] 
    /*0001b51c*/ ADDS        R3, R3, #0 
    /*0001b520*/ MOVNE       R3, #1 
    /*0001b524*/ CMP         R2, #1 
    /*0001b528*/ ORREQ       R3, R3, #1 
    /*0001b52c*/ CMP         R3, #0 
    /*0001b530*/ BEQ         GDC_LDC_FIFO_CFG_x1b564
    /*0001b534*/ ADD         R8, R8, R8, LSL #3 
    /*0001b538*/ MOVW        R3, #36409                  @ 0x8e39 
    /*0001b53c*/ MOVT        R3, #14563                  @ 0x38e3 
    /*0001b540*/ ASR         R0, R8, #31 
    /*0001b544*/ SMULL       R2, R3, R8, R3 
    /*0001b548*/ RSB         R8, R0, R3, ASR #2 
    /*0001b54c*/ CMP         R8, #3 
    /*0001b550*/ BGT         GDC_LDC_FIFO_CFG_x1b564
    GDC_LDC_FIFO_CFG_x1b554:
    /*0001b554*/ LSL         R8, R8, #1 
    /*0001b558*/ ASR         R7, R7, #1 
    /*0001b55c*/ CMP         R8, #3 
    /*0001b560*/ BLE         GDC_LDC_FIFO_CFG_x1b554
    GDC_LDC_FIFO_CFG_x1b564:
    /*0001b564*/ LDR         R3, [SP, #80]               @ 0x50 
    /*0001b568*/ BIC         R3, R3, #2 
    /*0001b56c*/ CMP         R3, #1 
    /*0001b570*/ BNE         GDC_LDC_FIFO_CFG_x1b5b0
    GDC_LDC_FIFO_CFG_x1b574:
    /*0001b574*/ CMP         R7, R8 
    /*0001b578*/ BGT         GDC_LDC_FIFO_CFG_x1b93c
    /*0001b57c*/ CMP         R8, #10 
    /*0001b580*/ MOVLE       R3, #0 
    /*0001b584*/ MOVGT       R3, #1 
    GDC_LDC_FIFO_CFG_x1b588:
    /*0001b588*/ CMP         R7, #128                    @ 0x80 
    /*0001b58c*/ MOVNE       R3, #0 
    /*0001b590*/ ANDEQ       R3, R3, #1 
    /*0001b594*/ CMP         R3, #0 
    /*0001b598*/ BEQ         GDC_LDC_FIFO_CFG_x1b8ec
    /*0001b59c*/ MOVW        R3, #2999                   @ 0xbb7 
    /*0001b5a0*/ CMP         SL, R3 
    /*0001b5a4*/ SUB         R8, R8, #4 
    /*0001b5a8*/ MOVGT       R7, #128                    @ 0x80 
    /*0001b5ac*/ BLE         GDC_LDC_FIFO_CFG_x1b8e4
    GDC_LDC_FIFO_CFG_x1b5b0:
    /*0001b5b0*/ CMP         R8, #15 
    /*0001b5b4*/ BLE         GDC_LDC_FIFO_CFG_x1b5cc
    /*0001b5b8*/ B           GDC_LDC_FIFO_CFG_x1b5d4
    GDC_LDC_FIFO_CFG_x1b5bc:
    /*0001b5bc*/ LSL         R8, R8, #1 
    /*0001b5c0*/ ASR         R7, R7, #1 
    /*0001b5c4*/ CMP         R8, #15 
    /*0001b5c8*/ BGT         GDC_LDC_FIFO_CFG_x1b5d4
    GDC_LDC_FIFO_CFG_x1b5cc:
    /*0001b5cc*/ CMP         R7, R8, LSL #2 
    /*0001b5d0*/ BGT         GDC_LDC_FIFO_CFG_x1b5bc
    GDC_LDC_FIFO_CFG_x1b5d4:
    /*0001b5d4*/ CMP         R7, #128                    @ 0x80 
    /*0001b5d8*/ LDR         R0, [R9, #20] 
    /*0001b5dc*/ MOVGE       R7, #128                    @ 0x80 
    /*0001b5e0*/ CMP         R5, #0 
    /*0001b5e4*/ BIC         R7, R7, R7, ASR #31 
    /*0001b5e8*/ MOVNE       R1, R5 
    /*0001b5ec*/ MOVEQ       R1, #1 
    /*0001b5f0*/ MUL         R0, R0, R7 
    /*0001b5f4*/ BL          0x000000000001B5F4          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0001b5f8*/ LDR         R3, [R9, #24] 
    /*0001b5fc*/ CMP         R6, #0 
    /*0001b600*/ MOVNE       R1, R6 
    /*0001b604*/ MOVEQ       R1, #1 
    /*0001b608*/ STR         R0, [R4] 
    /*0001b60c*/ MUL         R0, R3, R8 
    /*0001b610*/ BL          0x000000000001B610          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0001b614*/ MOVW        R3, #7000                   @ 0x1b58 
    /*0001b618*/ STR         R0, [R4, #4] 
    /*0001b61c*/ LDR         R2, [R9, #436]              @ 0x1b4 
    /*0001b620*/ CMP         R2, R3 
    /*0001b624*/ BGT         GDC_LDC_FIFO_CFG_x1b898
    GDC_LDC_FIFO_CFG_x1b628:
    /*0001b628*/ MOV         R3, #0 
    /*0001b62c*/ MOV         R2, #1 
    GDC_LDC_FIFO_CFG_x1b630:
    /*0001b630*/ STR         R3, [R4, #8] 
    /*0001b634*/ MOV         R3, #3 
    /*0001b638*/ STR         R2, [R4, #12] 
    /*0001b63c*/ STR         R3, [R4, #16] 
    /*0001b640*/ STR         R3, [R4, #20] 
    GDC_LDC_FIFO_CFG_x1b644:
    /*0001b644*/ MOV         R5, #0 
    /*0001b648*/ MOV         R0, R4 
    /*0001b64c*/ STR         R5, [R4, #28] 
    /*0001b650*/ STR         R5, [R9, #44]               @ 0x2c 
    /*0001b654*/ BL          0x0000000000019C08 
    /*0001b658*/ MOV         R2, R4 
    /*0001b65c*/ MOV         R1, R9 
    /*0001b660*/ LDR         R0, [SP, #12] 
    /*0001b664*/ BL          0x0000000000019518 
    /*0001b668*/ MOV         R0, R5 
    GDC_LDC_FIFO_CFG_x1b66c:
    /*0001b66c*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0001b670*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_LDC_FIFO_CFG_x1b674:
    /*0001b674*/ CMP         R5, #0 
    /*0001b678*/ LSL         R0, R6, #10 
    /*0001b67c*/ MOVNE       R1, R5 
    /*0001b680*/ MOVEQ       R1, #1 
    /*0001b684*/ BL          0x000000000001B684          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0001b688*/ LDR         R3, [R9, #388]              @ 0x184 
    /*0001b68c*/ CMP         R3, #0 
    /*0001b690*/ STR         R3, [SP, #20] 
    /*0001b694*/ MOV         R7, R0 
    /*0001b698*/ BEQ         GDC_LDC_FIFO_CFG_x1b44c
    GDC_LDC_FIFO_CFG_x1b69c:
    /*0001b69c*/ LDR         R3, [SP, #20] 
    /*0001b6a0*/ CMP         R3, #1 
    /*0001b6a4*/ BNE         GDC_LDC_FIFO_CFG_x1b958
    /*0001b6a8*/ SUB         R1, R7, #1024               @ 0x400 
    /*0001b6ac*/ MOVW        R3, #64686                  @ 0xfcae 
    /*0001b6b0*/ MOVT        R3, #65535                  @ 0xffff 
    /*0001b6b4*/ MOVW        IP, #65016                  @ 0xfdf8 
    /*0001b6b8*/ MOVT        IP, #65535                  @ 0xffff 
    /*0001b6bc*/ MOVW        R2, #59279                  @ 0xe78f 
    /*0001b6c0*/ MUL         R3, R3, R1 
    /*0001b6c4*/ MOVT        R2, #21076                  @ 0x5254 
    /*0001b6c8*/ MUL         IP, IP, R1 
    /*0001b6cc*/ LDR         R1, [R8, #20] 
    /*0001b6d0*/ MOVW        LR, #3350                   @ 0xd16 
    /*0001b6d4*/ MOVW        R8, #2500                   @ 0x9c4 
    /*0001b6d8*/ STR         R1, [SP, #32] 
    /*0001b6dc*/ SMULL       R0, R1, R3, R2 
    /*0001b6e0*/ ASR         R0, R3, #31 
    /*0001b6e4*/ SMULL       R2, R3, IP, R2 
    /*0001b6e8*/ ASR         IP, IP, #31 
    /*0001b6ec*/ RSB         R1, R0, R1, ASR #8 
    /*0001b6f0*/ ADD         R1, R1, LR 
    /*0001b6f4*/ CMP         R1, LR 
    /*0001b6f8*/ RSB         IP, IP, R3, ASR #8 
    /*0001b6fc*/ MOVW        R3, #2279                   @ 0x8e7 
    /*0001b700*/ MOVGE       R1, LR 
    /*0001b704*/ CMP         R1, R8 
    /*0001b708*/ ADD         IP, IP, #2800               @ 0xaf0 
    /*0001b70c*/ MOVLT       R1, R8 
    /*0001b710*/ CMP         IP, R3 
    /*0001b714*/ BGT         GDC_LDC_FIFO_CFG_x1b994
    /*0001b718*/ CMP         SL, R1 
    /*0001b71c*/ MOVGE       R2, #0 
    /*0001b720*/ MOVLT       R2, #1 
    /*0001b724*/ CMP         SL, R3 
    /*0001b728*/ MOVLE       R2, #0 
    /*0001b72c*/ CMP         R2, #0 
    /*0001b730*/ MOVW        R2, #2280                   @ 0x8e8 
    /*0001b734*/ BEQ         GDC_LDC_FIFO_CFG_x1ba10
    GDC_LDC_FIFO_CFG_x1b738:
    /*0001b738*/ SUB         R0, R1, SL 
    /*0001b73c*/ SUB         R1, R1, R2 
    /*0001b740*/ STR         R2, [SP, #36]               @ 0x24 
    /*0001b744*/ LSL         R0, R0, #4 
    /*0001b748*/ BL          0x000000000001B748          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0001b74c*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0001b750*/ RSB         R8, R0, #32 
    GDC_LDC_FIFO_CFG_x1b754:
    /*0001b754*/ CMP         SL, R2 
    /*0001b758*/ BGE         GDC_LDC_FIFO_CFG_x1b9f4
    /*0001b75c*/ MOVW        R8, #1819                   @ 0x71b 
    /*0001b760*/ SUB         R3, R7, #1360               @ 0x550 
    /*0001b764*/ CMP         R7, R8 
    /*0001b768*/ SUB         R3, R3, #5 
    /*0001b76c*/ MOVW        R1, #454                    @ 0x1c6 
    /*0001b770*/ MOVGT       R8, #28 
    /*0001b774*/ MOVLE       R8, #48                     @ 0x30 
    /*0001b778*/ CMP         R3, R1 
    /*0001b77c*/ BHI         GDC_LDC_FIFO_CFG_x1ba18
    /*0001b780*/ SUB         R3, R2, SL 
    /*0001b784*/ SUB         R1, R2, #1888               @ 0x760 
    /*0001b788*/ MOV         R0, #34                     @ 0x22 
    /*0001b78c*/ SUB         R1, R1, #12 
    /*0001b790*/ MUL         R0, R0, R3 
    /*0001b794*/ BL          0x000000000001B794          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0001b798*/ MOV         R7, #64                     @ 0x40 
    /*0001b79c*/ MOVW        R3, #3500                   @ 0xdac 
    /*0001b7a0*/ RSB         R8, R0, #48                 @ 0x30 
    GDC_LDC_FIFO_CFG_x1b7a4:
    /*0001b7a4*/ CMP         SL, R3 
    /*0001b7a8*/ BGT         GDC_LDC_FIFO_CFG_x1b514
    GDC_LDC_FIFO_CFG_x1b7ac:
    /*0001b7ac*/ SUB         R2, R3, #1888               @ 0x760 
    /*0001b7b0*/ SUB         R3, R3, SL 
    /*0001b7b4*/ SUB         R2, R2, #12 
    /*0001b7b8*/ STR         R3, [SP, #36]               @ 0x24 
    /*0001b7bc*/ LSL         R0, R3, #1 
    /*0001b7c0*/ STR         R2, [SP, #28] 
    /*0001b7c4*/ MOV         R1, R2 
    /*0001b7c8*/ BL          0x000000000001B7C8          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0001b7cc*/ LDR         R2, [SP, #28] 
    /*0001b7d0*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0001b7d4*/ MOVW        IP, #737                    @ 0x2e1 
    /*0001b7d8*/ MOV         R1, R2 
    /*0001b7dc*/ RSB         R2, R0, #8 
    /*0001b7e0*/ CMP         R2, #8 
    /*0001b7e4*/ MUL         R0, IP, R3 
    /*0001b7e8*/ MOVGE       R2, #8 
    /*0001b7ec*/ CMP         R2, #6 
    /*0001b7f0*/ LDR         IP, [SP, #24] 
    /*0001b7f4*/ MOVGE       R3, R2 
    /*0001b7f8*/ MOVLT       R3, #6 
    /*0001b7fc*/ MUL         R3, R8, R3 
    /*0001b800*/ LDR         R2, [SP, #32] 
    /*0001b804*/ CMP         IP, #0 
    /*0001b808*/ RSBLT       IP, IP, #0 
    /*0001b80c*/ CMP         R2, #0 
    /*0001b810*/ RSBLT       R2, R2, #0 
    /*0001b814*/ ADD         R2, IP, R2 
    /*0001b818*/ STR         R2, [SP, #28] 
    /*0001b81c*/ ASR         R3, R3, #5 
    /*0001b820*/ STR         R3, [SP, #24] 
    /*0001b824*/ BL          0x000000000001B824          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0001b828*/ LDR         R2, [SP, #28] 
    /*0001b82c*/ LDR         R3, [SP, #24] 
    /*0001b830*/ SUB         IP, R8, R3 
    /*0001b834*/ RSB         R1, R0, #800                @ 0x320 
    /*0001b838*/ CMP         R2, R1 
    /*0001b83c*/ MOVGE       R2, R1 
    /*0001b840*/ CMP         R1, #0 
    /*0001b844*/ MUL         R0, IP, R2 
    /*0001b848*/ MOVEQ       R1, #1 
    /*0001b84c*/ BL          0x000000000001B84C          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0001b850*/ LDR         R3, [SP, #24] 
    /*0001b854*/ SUB         R8, R8, R0 
    /*0001b858*/ CMP         R8, #32 
    /*0001b85c*/ MOVGE       R8, #32 
    /*0001b860*/ CMP         R3, R8 
    /*0001b864*/ MOVGE       R8, R3 
    /*0001b868*/ LSL         R3, R8, #1 
    /*0001b86c*/ CMP         R3, R7 
    /*0001b870*/ BGE         GDC_LDC_FIFO_CFG_x1b514
    /*0001b874*/ CMP         R8, #20 
    /*0001b878*/ MOVLE       R2, #1 
    /*0001b87c*/ MOVGT       R2, #0 
    /*0001b880*/ CMP         R7, #127                    @ 0x7f 
    /*0001b884*/ MOVLE       R2, #0 
    /*0001b888*/ CMP         R2, #0 
    /*0001b88c*/ MOVNE       R8, R3 
    /*0001b890*/ MOVNE       R7, #64                     @ 0x40 
    /*0001b894*/ B           GDC_LDC_FIFO_CFG_x1b514
    GDC_LDC_FIFO_CFG_x1b898:
    /*0001b898*/ LDR         R3, [R9, #12] 
    /*0001b89c*/ CMP         R3, #4000                   @ 0xfa0 
    /*0001b8a0*/ BLS         GDC_LDC_FIFO_CFG_x1b924
    /*0001b8a4*/ MOV         R3, #0 
    /*0001b8a8*/ MOV         R2, #2 
    /*0001b8ac*/ STR         R3, [R4, #8] 
    /*0001b8b0*/ MOV         R3, #4 
    /*0001b8b4*/ STR         R2, [R4, #12] 
    /*0001b8b8*/ STR         R3, [R4, #16] 
    /*0001b8bc*/ STR         R3, [R4, #20] 
    /*0001b8c0*/ B           GDC_LDC_FIFO_CFG_x1b644
    GDC_LDC_FIFO_CFG_x1b8c4:
    /*0001b8c4*/ SUB         R0, R1, SL 
    /*0001b8c8*/ RSB         R7, R7, #32 
    /*0001b8cc*/ SUB         R1, R1, #1648               @ 0x670 
    /*0001b8d0*/ MUL         R0, R7, R0 
    /*0001b8d4*/ SUB         R1, R1, #2 
    /*0001b8d8*/ BL          0x000000000001B8D8          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0001b8dc*/ RSB         R0, R0, #32 
    /*0001b8e0*/ B           GDC_LDC_FIFO_CFG_x1b4a8
    GDC_LDC_FIFO_CFG_x1b8e4:
    /*0001b8e4*/ LSL         R8, R8, #1 
    /*0001b8e8*/ MOV         R7, #64                     @ 0x40 
    GDC_LDC_FIFO_CFG_x1b8ec:
    /*0001b8ec*/ LDR         R3, [SP, #20] 
    /*0001b8f0*/ CMP         R3, #1 
    /*0001b8f4*/ BNE         GDC_LDC_FIFO_CFG_x1b5b0
    /*0001b8f8*/ SUB         R3, R7, #64                 @ 0x40 
    /*0001b8fc*/ CMP         R8, #10 
    /*0001b900*/ CLZ         R3, R3 
    /*0001b904*/ LSR         R3, R3, #5 
    /*0001b908*/ MOVLE       R3, #0 
    /*0001b90c*/ CMP         R3, #0 
    /*0001b910*/ BEQ         GDC_LDC_FIFO_CFG_x1b5b0
    /*0001b914*/ CMP         SL, #2000                   @ 0x7d0 
    /*0001b918*/ MOV         R7, #64                     @ 0x40 
    /*0001b91c*/ SUBLT       R8, R8, #4 
    /*0001b920*/ B           GDC_LDC_FIFO_CFG_x1b5b0
    GDC_LDC_FIFO_CFG_x1b924:
    /*0001b924*/ MOVW        R2, #3500                   @ 0xdac 
    /*0001b928*/ CMP         R3, R2 
    /*0001b92c*/ MOVHI       R3, #0 
    /*0001b930*/ MOVHI       R2, #2 
    /*0001b934*/ BHI         GDC_LDC_FIFO_CFG_x1b630
    /*0001b938*/ B           GDC_LDC_FIFO_CFG_x1b628
    GDC_LDC_FIFO_CFG_x1b93c:
    /*0001b93c*/ MUL         R7, R8, R7 
    /*0001b940*/ MOV         R8, #32 
    /*0001b944*/ ADD         R2, R7, #31 
    /*0001b948*/ CMP         R7, #0 
    /*0001b94c*/ MOVLT       R7, R2 
    /*0001b950*/ ASR         R7, R7, #5 
    /*0001b954*/ B           GDC_LDC_FIFO_CFG_x1b588
    GDC_LDC_FIFO_CFG_x1b958:
    /*0001b958*/ LDR         R3, [SP, #16] 
    /*0001b95c*/ MOV         R7, #128                    @ 0x80 
    /*0001b960*/ LDR         R2, [FP] 
    /*0001b964*/ ADDS        R3, R3, #0 
    /*0001b968*/ MOVNE       R3, #1 
    /*0001b96c*/ CMP         R2, #1 
    /*0001b970*/ ORREQ       R3, R3, #1 
    /*0001b974*/ CMP         R3, #0 
    /*0001b978*/ LDR         R3, [SP, #80]               @ 0x50 
    /*0001b97c*/ BIC         R3, R3, #2 
    /*0001b980*/ MOVNE       R8, #16 
    /*0001b984*/ MOVEQ       R8, #32 
    /*0001b988*/ CMP         R3, #1 
    /*0001b98c*/ BNE         GDC_LDC_FIFO_CFG_x1b5b0
    /*0001b990*/ B           GDC_LDC_FIFO_CFG_x1b574
    GDC_LDC_FIFO_CFG_x1b994:
    /*0001b994*/ CMP         IP, #2800                   @ 0xaf0 
    /*0001b998*/ MOVLT       R2, IP 
    /*0001b99c*/ MOVGE       R2, #2800                   @ 0xaf0 
    /*0001b9a0*/ CMP         R2, SL 
    /*0001b9a4*/ CMPLE       SL, R1 
    /*0001b9a8*/ BGE         GDC_LDC_FIFO_CFG_x1ba10
    /*0001b9ac*/ CMP         R2, R1 
    /*0001b9b0*/ BLT         GDC_LDC_FIFO_CFG_x1b738
    /*0001b9b4*/ MOVW        R3, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6fa8] 
    /*0001b9b8*/ MOVW        R1, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6864] 
    /*0001b9bc*/ MOVT        R3, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6fa8] 
    /*0001b9c0*/ MOVT        R1, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6864] 
    /*0001b9c4*/ STR         R3, [SP] 
    /*0001b9c8*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68e0] 
    /*0001b9cc*/ MOVW        R3, #1433                   @ 0x599 
    /*0001b9d0*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68e0] 
    /*0001b9d4*/ LDR         R2, [PC, #172]              @ 0x000000000001ba88 
    /*0001b9d8*/ BL          0x000000000001B9D8          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0001b9dc*/ MVN         R0, #0 
    /*0001b9e0*/ B           GDC_LDC_FIFO_CFG_x1b66c
    GDC_LDC_FIFO_CFG_x1b9e4:
    /*0001b9e4*/ RSBS        R2, R2, #0 
    /*0001b9e8*/ STR         R2, [SP, #28] 
    /*0001b9ec*/ MOV         SL, R2 
    /*0001b9f0*/ B           GDC_LDC_FIFO_CFG_x1b408
    GDC_LDC_FIFO_CFG_x1b9f4:
    /*0001b9f4*/ MOVW        R1, #1364                   @ 0x554 
    /*0001b9f8*/ CMP         R7, R1 
    /*0001b9fc*/ MOVW        R2, #3500                   @ 0xdac 
    /*0001ba00*/ MOVW        R3, #4500                   @ 0x1194 
    /*0001ba04*/ MOV         R7, #128                    @ 0x80 
    /*0001ba08*/ MOVGT       R3, R2 
    /*0001ba0c*/ B           GDC_LDC_FIFO_CFG_x1b7a4
    GDC_LDC_FIFO_CFG_x1ba10:
    /*0001ba10*/ MOV         R8, #32 
    /*0001ba14*/ B           GDC_LDC_FIFO_CFG_x1b754
    GDC_LDC_FIFO_CFG_x1ba18:
    /*0001ba18*/ MOVW        R3, #1364                   @ 0x554 
    /*0001ba1c*/ CMP         R7, R3 
    /*0001ba20*/ MOVGT       R7, #64                     @ 0x40 
    /*0001ba24*/ MOVWGT      R3, #3500                   @ 0xdac 
    /*0001ba28*/ BGT         GDC_LDC_FIFO_CFG_x1b7ac
    /*0001ba2c*/ LDR         R3, [SP, #28] 
    /*0001ba30*/ SUB         R3, R3, #2000               @ 0x7d0 
    /*0001ba34*/ CMP         R3, #180                    @ 0xb4 
    /*0001ba38*/ MOVCC       R7, #32 
    /*0001ba3c*/ MOVCS       R7, #64                     @ 0x40 
    /*0001ba40*/ CMP         SL, #2000                   @ 0x7d0 
    /*0001ba44*/ ASRLT       R7, R7, #2 
    /*0001ba48*/ MOVLT       R8, #6 
    /*0001ba4c*/ BLT         GDC_LDC_FIFO_CFG_x1ba80
    /*0001ba50*/ SUB         R3, R2, SL 
    /*0001ba54*/ SUB         R1, R2, #2176               @ 0x880 
    /*0001ba58*/ MOV         R0, #34                     @ 0x22 
    /*0001ba5c*/ SUB         R1, R1, #4 
    /*0001ba60*/ MUL         R0, R0, R3 
    /*0001ba64*/ BL          0x000000000001BA64          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    /*0001ba68*/ RSB         R0, R0, #48                 @ 0x30 
    /*0001ba6c*/ CMP         R0, #48                     @ 0x30 
    /*0001ba70*/ MOVGE       R0, #48                     @ 0x30 
    /*0001ba74*/ CMP         R0, #14 
    /*0001ba78*/ MOVGE       R8, R0 
    /*0001ba7c*/ MOVLT       R8, #14 
    GDC_LDC_FIFO_CFG_x1ba80:
    /*0001ba80*/ MOVW        R3, #4500                   @ 0x1194 
    /*0001ba84*/ B           GDC_LDC_FIFO_CFG_x1b7ac
    /*0001ba88*/ ANDEQ       R1, R0, R4, ROR #5 
FUNC_END GDC_LDC_FIFO_CFG


FUNC_BEGIN GDC_PMF_FIFO_CFG
    /*0001ba8c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001ba90*/ SUB         SP, SP, #172                @ 0xac 
    /*0001ba94*/ MOV         SL, R3 
    /*0001ba98*/ MOV         R6, R2 
    /*0001ba9c*/ MOV         R5, #0 
    /*0001baa0*/ STR         R2, [SP, #68]               @ 0x44 
    /*0001baa4*/ STR         R0, [SP, #64]               @ 0x40 
    /*0001baa8*/ MOV         R2, #1 
    /*0001baac*/ MOV         R3, #3 
    /*0001bab0*/ STR         R2, [SL, #28] 
    /*0001bab4*/ STR         R3, [SL, #16] 
    /*0001bab8*/ MOV         R0, SL 
    /*0001babc*/ MOV         R3, #2 
    /*0001bac0*/ STR         R5, [SL, #8] 
    /*0001bac4*/ STR         R3, [SL, #20] 
    /*0001bac8*/ MOV         R4, R1 
    /*0001bacc*/ STR         R5, [SL, #12] 
    /*0001bad0*/ STR         R5, [R6, #44]               @ 0x2c 
    /*0001bad4*/ BL          0x0000000000019C08 
    /*0001bad8*/ LDR         R3, [R6, #12] 
    /*0001badc*/ LDR         IP, [R6, #16] 
    /*0001bae0*/ MOV         R2, #72                     @ 0x48 
    /*0001bae4*/ MOV         R1, R5 
    /*0001bae8*/ ADD         R0, SP, #96                 @ 0x60 
    /*0001baec*/ STR         R3, [SP, #88]               @ 0x58 
    /*0001baf0*/ STR         IP, [SP, #92]               @ 0x5c 
    /*0001baf4*/ BL          0x000000000001BAF4          @ memset [R_ARM_CALL: +0x0] 
    /*0001baf8*/ LDRD        R2, [R4, #56]               @ 0x38 
    /*0001bafc*/ STR         R5, [SP, #76]               @ 0x4c 
    /*0001bb00*/ ORRS        R3, R2, R3 
    /*0001bb04*/ BNE         GDC_PMF_FIFO_CFG_x1bb50
    /*0001bb08*/ LDRD        R2, [R4, #64]               @ 0x40 
    /*0001bb0c*/ ORRS        R3, R2, R3 
    /*0001bb10*/ BNE         GDC_PMF_FIFO_CFG_x1bb50
    /*0001bb14*/ ADD         R7, R4, #48                 @ 0x30 
    /*0001bb18*/ ADD         R6, SP, #96                 @ 0x60 
    /*0001bb1c*/ MOV         R5, R4 
    GDC_PMF_FIFO_CFG_x1bb20:
    /*0001bb20*/ LDR         IP, [R5, #8]! 
    /*0001bb24*/ LDRD        R2, [R4, #72]               @ 0x48 
    /*0001bb28*/ LDR         R1, [R5, #4] 
    /*0001bb2c*/ LSL         R0, IP, #15 
    /*0001bb30*/ LSL         R1, R1, #15 
    /*0001bb34*/ ORR         R1, R1, IP, LSR #17 
    /*0001bb38*/ BL          0x000000000001BB38          @ osal_div64_s64 [R_ARM_CALL: +0x0] 
    /*0001bb3c*/ CMP         R5, R7 
    /*0001bb40*/ STRD        R0, [R6], #8 
    /*0001bb44*/ BNE         GDC_PMF_FIFO_CFG_x1bb20
    /*0001bb48*/ MOV         FP, #1 
    /*0001bb4c*/ B           GDC_PMF_FIFO_CFG_x1bb6c
    GDC_PMF_FIFO_CFG_x1bb50:
    /*0001bb50*/ ADD         R1, SP, #88                 @ 0x58 
    /*0001bb54*/ ADD         R0, R4, #72                 @ 0x48 
    GDC_PMF_FIFO_CFG_x1bb58:
    /*0001bb58*/ LDRD        R2, [R4, #8]! 
    /*0001bb5c*/ CMP         R4, R0 
    /*0001bb60*/ STRD        R2, [R1, #8]! 
    /*0001bb64*/ BNE         GDC_PMF_FIFO_CFG_x1bb58
    /*0001bb68*/ MOV         FP, #0 
    GDC_PMF_FIFO_CFG_x1bb6c:
    /*0001bb6c*/ MOV         R4, #32 
    /*0001bb70*/ MOV         R5, #256                    @ 0x100 
    /*0001bb74*/ B           GDC_PMF_FIFO_CFG_x1bbd0
    GDC_PMF_FIFO_CFG_x1bb78:
    /*0001bb78*/ ADD         R3, SP, #88                 @ 0x58 
    /*0001bb7c*/ ADD         R2, SP, #76                 @ 0x4c 
    /*0001bb80*/ LDM         R3, {R0, R1} 
    /*0001bb84*/ MOV         R3, SL 
    /*0001bb88*/ STR         R2, [SP, #8] 
    /*0001bb8c*/ ADD         R2, SP, #96                 @ 0x60 
    /*0001bb90*/ STM         SP, {R0, R1} 
    /*0001bb94*/ MOV         R1, R4 
    /*0001bb98*/ MOV         R0, R5 
    /*0001bb9c*/ BL          0x0000000000019A84 
    /*0001bba0*/ CMP         R0, #0 
    /*0001bba4*/ BNE         GDC_PMF_FIFO_CFG_x1bdd0
    /*0001bba8*/ LDR         R3, [SP, #76]               @ 0x4c 
    /*0001bbac*/ CMP         R3, #16384                  @ 0x4000 
    /*0001bbb0*/ BCC         GDC_PMF_FIFO_CFG_x1bdac
    GDC_PMF_FIFO_CFG_x1bbb4:
    /*0001bbb4*/ SUB         R4, R4, #2 
    /*0001bbb8*/ CMP         R5, R4, LSL #2 
    /*0001bbbc*/ LSRCS       R5, R5, #1 
    /*0001bbc0*/ LSLCS       R4, R4, #1 
    /*0001bbc4*/ CMP         R4, #0 
    /*0001bbc8*/ CMPNE       R5, #0 
    /*0001bbcc*/ BEQ         GDC_PMF_FIFO_CFG_x1bdd0
    GDC_PMF_FIFO_CFG_x1bbd0:
    /*0001bbd0*/ CMP         FP, #1 
    /*0001bbd4*/ BNE         GDC_PMF_FIFO_CFG_x1bb78
    /*0001bbd8*/ LDR         R2, [SP, #100]              @ 0x64 
    /*0001bbdc*/ LDR         R3, [SP, #108]              @ 0x6c 
    /*0001bbe0*/ LDRD        R0, [SP, #96]               @ 0x60 
    /*0001bbe4*/ ASR         R2, R2, #31 
    /*0001bbe8*/ STR         R2, [SP, #32] 
    /*0001bbec*/ STR         R2, [SP, #36]               @ 0x24 
    /*0001bbf0*/ ASR         R3, R3, #31 
    /*0001bbf4*/ STR         R3, [SP, #40]               @ 0x28 
    /*0001bbf8*/ LDRD        R2, [SP, #32] 
    /*0001bbfc*/ LDRD        R6, [SP, #104]              @ 0x68 
    /*0001bc00*/ EOR         R3, R3, R1 
    /*0001bc04*/ EOR         R2, R2, R0 
    /*0001bc08*/ MOV         R1, R3 
    /*0001bc0c*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0001bc10*/ MOV         R0, R2 
    /*0001bc14*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0001bc18*/ LDRD        R8, [SP, #40]               @ 0x28 
    /*0001bc1c*/ LDRD        R2, [SP, #32] 
    /*0001bc20*/ EOR         R8, R8, R6 
    /*0001bc24*/ EOR         R9, R9, R7 
    /*0001bc28*/ SUBS        R2, R0, R2 
    /*0001bc2c*/ MOV         R7, R9 
    /*0001bc30*/ MOV         R6, R8 
    /*0001bc34*/ LDRD        R8, [SP, #40]               @ 0x28 
    /*0001bc38*/ SBC         R3, R1, R3 
    /*0001bc3c*/ SUBS        R8, R6, R8 
    /*0001bc40*/ MOV         R1, R3 
    /*0001bc44*/ SBC         R9, R7, R9 
    /*0001bc48*/ UMULL       R2, R3, R2, R5 
    /*0001bc4c*/ MOV         R7, R9 
    /*0001bc50*/ UMULL       R8, R9, R8, R4 
    /*0001bc54*/ MLA         R3, R5, R1, R3 
    /*0001bc58*/ ADDS        R2, R2, R8 
    /*0001bc5c*/ MLA         R9, R4, R7, R9 
    /*0001bc60*/ ADC         R3, R3, R9 
    /*0001bc64*/ ADDS        R2, R2, #16384              @ 0x4000 
    /*0001bc68*/ ADC         R3, R3, #0 
    /*0001bc6c*/ LSR         R1, R2, #15 
    /*0001bc70*/ ORR         R1, R1, R3, LSL #17 
    /*0001bc74*/ ASR         R3, R3, #15 
    /*0001bc78*/ STR         R1, [SP, #16] 
    /*0001bc7c*/ STR         R3, [SP, #20] 
    /*0001bc80*/ LDRD        R2, [SP, #16] 
    /*0001bc84*/ CMP         R2, #0 
    /*0001bc88*/ SBCS        R1, R3, #0 
    /*0001bc8c*/ MOVLT       R2, #0 
    /*0001bc90*/ BLT         GDC_PMF_FIFO_CFG_x1bca8
    /*0001bc94*/ MVN         R0, #0 
    /*0001bc98*/ CMP         R0, R2 
    /*0001bc9c*/ MOV         R1, #0 
    /*0001bca0*/ SBCS        R1, R1, R3 
    /*0001bca4*/ MVNLT       R2, #0 
    GDC_PMF_FIFO_CFG_x1bca8:
    /*0001bca8*/ LDR         IP, [SP, #124]              @ 0x7c 
    /*0001bcac*/ LDR         R3, [SP, #132]              @ 0x84 
    /*0001bcb0*/ LDRD        R0, [SP, #120]              @ 0x78 
    /*0001bcb4*/ ASR         IP, IP, #31 
    /*0001bcb8*/ STR         IP, [SP, #48]               @ 0x30 
    /*0001bcbc*/ STR         IP, [SP, #52]               @ 0x34 
    /*0001bcc0*/ ASR         R3, R3, #31 
    /*0001bcc4*/ STR         R2, [SP, #80]               @ 0x50 
    /*0001bcc8*/ STR         R3, [SP, #56]               @ 0x38 
    /*0001bccc*/ LDRD        R2, [SP, #48]               @ 0x30 
    /*0001bcd0*/ LDRD        R6, [SP, #128]              @ 0x80 
    /*0001bcd4*/ EOR         R3, R3, R1 
    /*0001bcd8*/ EOR         R2, R2, R0 
    /*0001bcdc*/ MOV         R1, R3 
    /*0001bce0*/ LDR         R3, [SP, #56]               @ 0x38 
    /*0001bce4*/ MOV         R0, R2 
    /*0001bce8*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0001bcec*/ LDRD        R8, [SP, #56]               @ 0x38 
    /*0001bcf0*/ LDRD        R2, [SP, #48]               @ 0x30 
    /*0001bcf4*/ EOR         R8, R8, R6 
    /*0001bcf8*/ EOR         R9, R9, R7 
    /*0001bcfc*/ SUBS        R2, R0, R2 
    /*0001bd00*/ MOV         R7, R9 
    /*0001bd04*/ MOV         R6, R8 
    /*0001bd08*/ LDRD        R8, [SP, #56]               @ 0x38 
    /*0001bd0c*/ SBC         R3, R1, R3 
    /*0001bd10*/ SUBS        R8, R6, R8 
    /*0001bd14*/ MOV         R1, R3 
    /*0001bd18*/ SBC         R9, R7, R9 
    /*0001bd1c*/ UMULL       R2, R3, R2, R5 
    /*0001bd20*/ MOV         R7, R9 
    /*0001bd24*/ UMULL       R8, R9, R8, R4 
    /*0001bd28*/ MLA         R3, R5, R1, R3 
    /*0001bd2c*/ ADDS        R2, R2, R8 
    /*0001bd30*/ MLA         R9, R4, R7, R9 
    /*0001bd34*/ ADC         R3, R3, R9 
    /*0001bd38*/ ADDS        R2, R2, #16384              @ 0x4000 
    /*0001bd3c*/ ADC         R3, R3, #0 
    /*0001bd40*/ LSR         R1, R2, #15 
    /*0001bd44*/ ORR         R1, R1, R3, LSL #17 
    /*0001bd48*/ ASR         R3, R3, #15 
    /*0001bd4c*/ STR         R1, [SP, #24] 
    /*0001bd50*/ STR         R3, [SP, #28] 
    /*0001bd54*/ LDRD        R2, [SP, #24] 
    /*0001bd58*/ CMP         R2, #0 
    /*0001bd5c*/ SBCS        R1, R3, #0 
    /*0001bd60*/ MOVLT       R3, #0 
    /*0001bd64*/ BLT         GDC_PMF_FIFO_CFG_x1bd80
    /*0001bd68*/ MVN         R0, #0 
    /*0001bd6c*/ CMP         R0, R2 
    /*0001bd70*/ MOV         R1, #0 
    /*0001bd74*/ SBCS        R1, R1, R3 
    /*0001bd78*/ MOV         R3, R2 
    /*0001bd7c*/ MVNLT       R3, #0 
    GDC_PMF_FIFO_CFG_x1bd80:
    /*0001bd80*/ ADD         R1, SP, #168                @ 0xa8 
    /*0001bd84*/ MOV         R2, SL 
    /*0001bd88*/ ADD         R0, SP, #80                 @ 0x50 
    /*0001bd8c*/ STR         R3, [R1, #-84]!             @ 0xffffffac 
    /*0001bd90*/ BL          0x00000000000194B0 
    /*0001bd94*/ LDR         R2, [SP, #80]               @ 0x50 
    /*0001bd98*/ LDR         R3, [SP, #84]               @ 0x54 
    /*0001bd9c*/ MUL         R3, R3, R2 
    /*0001bda0*/ CMP         R3, #16384                  @ 0x4000 
    /*0001bda4*/ STR         R3, [SP, #76]               @ 0x4c 
    /*0001bda8*/ BCS         GDC_PMF_FIFO_CFG_x1bbb4
    GDC_PMF_FIFO_CFG_x1bdac:
    /*0001bdac*/ STR         R4, [SL, #4] 
    /*0001bdb0*/ MOV         R2, SL 
    /*0001bdb4*/ STR         R5, [SL] 
    /*0001bdb8*/ LDR         R1, [SP, #68]               @ 0x44 
    /*0001bdbc*/ LDR         R0, [SP, #64]               @ 0x40 
    /*0001bdc0*/ BL          0x0000000000019518 
    /*0001bdc4*/ MOV         R0, #0 
    /*0001bdc8*/ ADD         SP, SP, #172                @ 0xac 
    /*0001bdcc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GDC_PMF_FIFO_CFG_x1bdd0:
    /*0001bdd0*/ MVN         R0, #0 
    /*0001bdd4*/ ADD         SP, SP, #172                @ 0xac 
    /*0001bdd8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END GDC_PMF_FIFO_CFG


FUNC_BEGIN GDC_GYRO_DIS_FIFO_CFG
    /*0001bddc*/ PUSH        {R4, R5, R6, LR} 
    /*0001bde0*/ MOV         R4, R3 
    /*0001bde4*/ MOV         R5, R2 
    /*0001bde8*/ MOV         R3, #1 
    /*0001bdec*/ MOV         R2, #0 
    /*0001bdf0*/ MOV         R1, #32 
    /*0001bdf4*/ STR         R3, [R4, #12] 
    /*0001bdf8*/ MOV         R3, #3 
    /*0001bdfc*/ STR         R1, [R4] 
    /*0001be00*/ MOV         R6, R0 
    /*0001be04*/ STR         R1, [R4, #4] 
    /*0001be08*/ STR         R2, [R4, #8] 
    /*0001be0c*/ STR         R2, [R4, #28] 
    /*0001be10*/ STR         R3, [R4, #16] 
    /*0001be14*/ STR         R3, [R4, #20] 
    /*0001be18*/ LDR         R3, [R5, #44]               @ 0x2c 
    /*0001be1c*/ CMP         R3, R2 
    /*0001be20*/ BNE         GDC_GYRO_DIS_FIFO_CFG_x1be2c
    /*0001be24*/ MOV         R0, R4 
    /*0001be28*/ BL          0x0000000000019C08 
    GDC_GYRO_DIS_FIFO_CFG_x1be2c:
    /*0001be2c*/ MOV         R2, R4 
    /*0001be30*/ MOV         R1, R5 
    /*0001be34*/ MOV         R0, R6 
    /*0001be38*/ BL          0x0000000000019518 
    /*0001be3c*/ MOV         R0, #0 
    /*0001be40*/ POP         {R4, R5, R6, PC} 
FUNC_END GDC_GYRO_DIS_FIFO_CFG


FUNC_BEGIN hi35xx_gdc_remove
    /*0001be44*/ PUSH        {R4, LR} 
    /*0001be48*/ BL          0x000000000001BE48          @ GDC_ModExit [R_ARM_CALL: .text+0x5cb4] 
    /*0001be4c*/ MOVW        R3, #0                      @ pGdcReg [R_ARM_MOVW_ABS_NC: .bss+0x1ff0] 
    /*0001be50*/ MOVT        R3, #0                      @ pGdcReg [R_ARM_MOVT_ABS: .bss+0x1ff0] 
    /*0001be54*/ MOV         R2, #0 
    /*0001be58*/ MOV         R0, R2 
    /*0001be5c*/ STR         R2, [R3] 
    /*0001be60*/ POP         {R4, PC} 
FUNC_END hi35xx_gdc_remove


FUNC_BEGIN hi35xx_gdc_probe
    /*0001be64*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x12f8] 
    /*0001be68*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x12f8] 
    /*0001be6c*/ PUSH        {R4, R5, LR} 
    /*0001be70*/ MOV         R4, R0 
    /*0001be74*/ LDR         R0, [R3] 
    /*0001be78*/ SUB         SP, SP, #28 
    /*0001be7c*/ LDRH        R3, [R3, #4] 
    /*0001be80*/ ADD         R2, SP, #4 
    /*0001be84*/ MOV         R1, #512                    @ 0x200 
    /*0001be88*/ ADD         R5, R4, #16 
    /*0001be8c*/ STR         R0, [SP, #14] 
    /*0001be90*/ MOV         R0, R4 
    /*0001be94*/ STRH        R3, [SP, #18] 
    /*0001be98*/ MOVW        R3, #25703                  @ 0x6467 
    /*0001be9c*/ MOVT        R3, #99                     @ 0x63 
    /*0001bea0*/ STR         R3, [SP, #4] 
    /*0001bea4*/ MOV         R3, #0 
    /*0001bea8*/ STRH        R3, [SP, #12] 
    /*0001beac*/ STR         R3, [SP, #8] 
    /*0001beb0*/ STR         R3, [SP, #20] 
    /*0001beb4*/ BL          0x000000000001BEB4          @ osal_platform_get_resource_byname [R_ARM_CALL: +0x0] 
    /*0001beb8*/ MOV         R1, R0 
    /*0001bebc*/ MOV         R0, R5 
    /*0001bec0*/ BL          0x000000000001BEC0          @ devm_ioremap_resource [R_ARM_CALL: +0x0] 
    /*0001bec4*/ MOVW        R3, #0                      @ pGdcReg [R_ARM_MOVW_ABS_NC: .bss+0x1ff0] 
    /*0001bec8*/ MOVT        R3, #0                      @ pGdcReg [R_ARM_MOVT_ABS: .bss+0x1ff0] 
    /*0001becc*/ CMN         R0, #4096                   @ 0x1000 
    /*0001bed0*/ STR         R0, [R3] 
    /*0001bed4*/ BHI         hi35xx_gdc_probe_x1bf20
    /*0001bed8*/ ADD         R1, SP, #4 
    /*0001bedc*/ MOV         R0, R4 
    /*0001bee0*/ BL          0x000000000001BEE0          @ osal_platform_get_irq_byname [R_ARM_CALL: +0x0] 
    /*0001bee4*/ MOVW        R3, #0                      @ gdc_irq [R_ARM_MOVW_ABS_NC: .data+0x158] 
    /*0001bee8*/ MOVT        R3, #0                      @ gdc_irq [R_ARM_MOVT_ABS: .data+0x158] 
    /*0001beec*/ CMP         R0, #0 
    /*0001bef0*/ STR         R0, [R3] 
    /*0001bef4*/ BEQ         hi35xx_gdc_probe_x1bf3c
    hi35xx_gdc_probe_x1bef8:
    /*0001bef8*/ ADD         R1, SP, #14 
    /*0001befc*/ MOV         R0, R4 
    /*0001bf00*/ BL          0x000000000001BF00          @ osal_platform_get_irq_byname [R_ARM_CALL: +0x0] 
    /*0001bf04*/ MOVW        R3, #0                      @ nnie_irq [R_ARM_MOVW_ABS_NC: .data+0x15c] 
    /*0001bf08*/ MOVT        R3, #0                      @ nnie_irq [R_ARM_MOVT_ABS: .data+0x15c] 
    /*0001bf0c*/ CMP         R0, #0 
    /*0001bf10*/ STR         R0, [R3] 
    /*0001bf14*/ BEQ         hi35xx_gdc_probe_x1bf28
    hi35xx_gdc_probe_x1bf18:
    /*0001bf18*/ BL          0x000000000001BF18          @ GDC_ModInit [R_ARM_CALL: .text+0x5a1c] 
    /*0001bf1c*/ MOV         R0, #0 
    hi35xx_gdc_probe_x1bf20:
    /*0001bf20*/ ADD         SP, SP, #28 
    /*0001bf24*/ POP         {R4, R5, PC} 
    hi35xx_gdc_probe_x1bf28:
    /*0001bf28*/ MOV         R0, R5 
    /*0001bf2c*/ MOVW        R1, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6fe4] 
    /*0001bf30*/ MOVT        R1, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6fe4] 
    /*0001bf34*/ BL          0x000000000001BF34          @ dev_err [R_ARM_CALL: +0x0] 
    /*0001bf38*/ B           hi35xx_gdc_probe_x1bf18
    hi35xx_gdc_probe_x1bf3c:
    /*0001bf3c*/ MOV         R2, R0 
    /*0001bf40*/ MOVW        R1, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6fcc] 
    /*0001bf44*/ MOV         R0, R5 
    /*0001bf48*/ MOVT        R1, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6fcc] 
    /*0001bf4c*/ BL          0x000000000001BF4C          @ dev_err [R_ARM_CALL: +0x0] 
    /*0001bf50*/ B           hi35xx_gdc_probe_x1bef8
FUNC_END hi35xx_gdc_probe


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .init.text
@ Size: 0xc
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN hi35xx_gdc_driver_init
    /*00000000*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0x164] 
    /*00000004*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0x164] 
    hi35xx_gdc_driver_init_x8:
    /*00000008*/ B           hi35xx_gdc_driver_init_x8   @ osal_platform_driver_register [R_ARM_JUMP24: +0x0] 
FUNC_END hi35xx_gdc_driver_init


FUNC_BEGIN init_module
    /*00000000*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0x164] 
    /*00000004*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0x164] 
    init_module_x8:
    /*00000008*/ B           init_module_x8              @ osal_platform_driver_register [R_ARM_JUMP24: +0x0] 
FUNC_END init_module


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .exit.text
@ Size: 0xc
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN hi35xx_gdc_driver_exit
    /*00000000*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0x164] 
    /*00000004*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0x164] 
    hi35xx_gdc_driver_exit_x8:
    /*00000008*/ B           hi35xx_gdc_driver_exit_x8   @ osal_platform_driver_unregister [R_ARM_JUMP24: +0x0] 
FUNC_END hi35xx_gdc_driver_exit


FUNC_BEGIN cleanup_module
    /*00000000*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .data+0x164] 
    /*00000004*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .data+0x164] 
    cleanup_module_x8:
    /*00000008*/ B           cleanup_module_x8           @ osal_platform_driver_unregister [R_ARM_JUMP24: +0x0] 
FUNC_END cleanup_module



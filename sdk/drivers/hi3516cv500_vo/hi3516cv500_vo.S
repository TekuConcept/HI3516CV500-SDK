@
@ -- FILES --
@

@ vou.c
@ vou_buf.c
@ vou_chn.c
@ vou_disp.c
@ vou_graphics.c
@ vou_uflist.c
@ vou_drv.c
@ vou_hal.c
@ graphic_drv.c
@ vou_coef_org.c
@ vo_init.c
@ hi3516cv500_vo.mod.c


unsigned char rodata[6024] = {
    /*0000*/ "VouPrintMux\0",
    /*000c*/ "\xcc\x17\0\0",
    /*0010*/ "\xd0\x17\0\0",
    /*0014*/ "\xd8\x17\0\0",
    /*0018*/ "\xe4\x17\0\0",
    /*001c*/ "\xf0\x17\0\0",
    /*0020*/ "\xfc\x17\0\0",
    /*0024*/ "\x04\x18\0\0",
    /*0028*/ "\x0c\x18\0\0",
    /*002c*/ "\x14\x18\0\0",
    /*0030*/ "\x1c\x18\0\0",
    /*0034*/ "(\x18\0\0",
    /*0038*/ "4\x18\0\0",
    /*003c*/ "<\x18\0\0",
    /*0040*/ "D\x18\0\0",
    /*0044*/ "P\x18\0\0",
    /*0048*/ "\\x18\0\0",
    /*004c*/ "l\x18\0\0",
    /*0050*/ "x\x18\0\0",
    /*0054*/ "\x84\x18\0\0",
    /*0058*/ "\x90\x18\0\0",
    /*005c*/ "\xa0\x18\0\0",
    /*0060*/ "\xb0\x18\0\0",
    /*0064*/ "\xc0\x18\0\0",
    /*0068*/ "\xcc\x18\0\0",
    /*006c*/ "\xd8\x18\0\0",
    /*0070*/ "\xe4\x18\0\0",
    /*0074*/ "\xf4\x18\0\0",
    /*0078*/ "\x04\x19\0\0",
    /*007c*/ "\x14\x19\0\0",
    /*0080*/ "$\x19\0\0",
    /*0084*/ "4\x19\0\0",
    /*0088*/ "D\x19\0\0",
    /*008c*/ "T\x19\0\0",
    /*0090*/ "d\x19\0\0",
    /*0094*/ "t\x19\0\0",
    /*0098*/ "\x84\x19\0\0",
    /*009c*/ "\x94\x19\0\0",
    /*00a0*/ "\xa4\x19\0\0",
    /*00a4*/ "\xb4\x19\0\0",
    /*00a8*/ "\xc4\x19\0\0",
    /*00ac*/ "\xd0\x19\0\0",
    /*00b0*/ "\xdc\x19\0\0",
    /*00b4*/ "\xe8\x19\0\0",
    /*00b8*/ "\xf4\x19\0\0",
    /*00bc*/ "\0\x1a\0\0",
    /*00c0*/ "\x0c\x1a\0\0",
    /*00c4*/ "\x1c\x1a\0\0",
    /*00c8*/ ",\x1a\0\0",
    /*00cc*/ "d\x17\0\0",
    /*00d0*/ "l\x17\0\0",
    /*00d4*/ "\x18\0\0\0",
    /*00d8*/ "\x18\0\0\0",
    /*00dc*/ "\x18\0\0\0",
    /*00e0*/ "\x18\0\0\0",
    /*00e4*/ "\x18\0\0\0",
    /*00e8*/ "\x18\0\0\0",
    /*00ec*/ "\x18\0\0\0",
    /*00f0*/ "\x18\0\0\0",
    /*00f4*/ "\x18\0\0\0",
    /*00f8*/ "\x18\0\0\0",
    /*00fc*/ "\x18\0\0\0",
    /*0100*/ "\x18\0\0\0",
    /*0104*/ "t\x17\0\0",
    /*0108*/ "D\x17\0\0",
    /*010c*/ "L\x17\0\0",
    /*0110*/ "T\x17\0\0",
    /*0114*/ "\\x17\0\0",
    /*0118*/ "`\x17\0\0",
    /*011c*/ "|\x17\0\0",
    /*0120*/ "\x98\x17\0\0",
    /*0124*/ "\xa0\x17\0\0",
    /*0128*/ "\xb8\x17\0\0",
    /*012c*/ "\xbc\x17\0\0",
    /*0130*/ "\xc4\x17\0\0",
    /*0134*/ "\xa8\x17\0\0",
    /*0138*/ "\xac\x17\0\0",
    /*013c*/ "\xb0\x17\0\0",
    /*0140*/ "\xb4\x17\0\0",
    /*0144*/ "|\x17\0\0",
    /*0148*/ "\x84\x17\0\0",
    /*014c*/ "\x18\0\0\0",
    /*0150*/ "\x88\x17\0\0",
    /*0154*/ "\x90\x17\0\0",
    /*0158*/ "VouInterruptRoute\0\0\0",
    /*016c*/ "VoDefCheckNullPtr\0\0\0",
    /*0180*/ "VouDevIoctl\0",
    /*018c*/ "VoDefCheckDevId\0",
    /*019c*/ "VOU_SetDitherOutBitWidth\0\0\0\0",
    /*01b8*/ "VoDefCheckLayerId\0\0\0",
    /*01cc*/ "VouReceiveSysCallBack\0\0\0",
    /*01e4*/ "VO_Init\0",
    /*01ec*/ "VOU_Exit\0\0\0\0",
    /*01f8*/ "VOU_ModInit\0",
    /*0204*/ "VouBufGetBusy\0\0\0",
    /*0214*/ "VouBufGetFree\0\0\0",
    /*0224*/ "VouBufGetFreeByNode\0",
    /*0238*/ "VouBufGetUser\0\0\0",
    /*0248*/ "VouBufQueryBusy\0",
    /*0258*/ "VouBufQueryFree\0",
    /*0268*/ "VouBufQueryFreeNth\0\0",
    /*027c*/ "VouBufGetBusyLen\0\0\0\0",
    /*0290*/ "VouBufAddBlkVb\0\0",
    /*02a0*/ "VouBufSubBlkVb\0\0",
    /*02b0*/ "VouBufMallocSdTde\0\0\0",
    /*02c4*/ "VouBufFreeSdTde\0",
    /*02d4*/ "VouBufFillDispNode\0\0",
    /*02e8*/ "VouBufClearDispNode\0",
    /*02fc*/ "VouBufFreeChnBusyList\0\0\0",
    /*0314*/ "VouBufFreeDispBusyList\0\0",
    /*032c*/ "VouBufFreeDispUsrList\0\0\0",
    /*0344*/ "VouCalcZoomRectByVideoFrame\0",
    /*0360*/ "VoAddClearScreenTask\0\0\0\0",
    /*0378*/ "VouVgsJobDone\0\0\0",
    /*0388*/ "VO_WaitGetSreenFrameCallBack\0\0\0\0",
    /*03a8*/ "VO_WaitGetChnFrameCallBack\0\0",
    /*03c4*/ "VouCheckVb\0\0",
    /*03d0*/ "VouInitChnCtx\0\0\0",
    /*03e0*/ "VO_WaitGetWbcFrameCallBack\0\0",
    /*03fc*/ "VO_WaitWbcBgBlackCallBack\0\0\0",
    /*0418*/ "VouSetPubAttr\0\0\0",
    /*0428*/ "VouSetDevFrameRate\0\0",
    /*043c*/ "VouSetVtth\0\0",
    /*0448*/ "VouGetVtth\0\0",
    /*0454*/ "VouSetUserIntfSyncInfo\0\0",
    /*046c*/ "VouEnable\0\0\0",
    /*0478*/ "VouLoadDetectInit\0\0\0",
    /*048c*/ "VouDisable\0\0",
    /*0498*/ "VouSetVideoCSC\0\0",
    /*04a8*/ "VouSetVideoPartitionMode\0\0\0\0",
    /*04c4*/ "VouGetVideoPartitionMode\0\0\0\0",
    /*04e0*/ "VouSetLayerAttr\0",
    /*04f0*/ "VouEnableLayer\0\0",
    /*0500*/ "VouDisableLayer\0",
    /*0510*/ "VouSetVideoPriority\0",
    /*0524*/ "VouGetVideoPriority\0",
    /*0538*/ "VouVideoBindDev\0",
    /*0548*/ "VouVideoUnBindDev\0\0\0",
    /*055c*/ "VouCheckChnAttr\0",
    /*056c*/ "VouSetChnAttrBatch\0\0",
    /*0580*/ "VouCheckChnParam\0\0\0\0",
    /*0594*/ "VouSetChnParamBatch\0",
    /*05a8*/ "VouGetChnParam\0\0",
    /*05b8*/ "VoSetLayerParam\0",
    /*05c8*/ "VoGetLayerParam\0",
    /*05d8*/ "VoSetVideoLayerDecompress\0\0\0",
    /*05f4*/ "VoGetVideoLayerDecompress\0\0\0",
    /*0610*/ "VouCheckLayerCrop\0\0\0",
    /*0624*/ "VouSetVideoLayerCrop\0\0\0\0",
    /*063c*/ "VouGetVideoLayerCrop\0\0\0\0",
    /*0654*/ "VouSetChnDispPos\0\0\0\0",
    /*0668*/ "VouGetChnDispPos\0\0\0\0",
    /*067c*/ "VouEnableChnBatch\0\0\0",
    /*0690*/ "VouDisableChnBatch\0\0",
    /*06a4*/ "VouSetChnFrameRate\0\0",
    /*06b8*/ "VouGetChnFrame\0\0",
    /*06c8*/ "VouReleaseChnFrame\0\0",
    /*06dc*/ "VouSetChnPause\0\0",
    /*06ec*/ "VouSetChnStep\0\0\0",
    /*06fc*/ "VouSetChnResume\0",
    /*070c*/ "VouSetChnRefresh\0\0\0\0",
    /*0720*/ "VouShowChnBatch\0",
    /*0730*/ "VouHideChnBatch\0",
    /*0740*/ "VouSetZoomInWindow\0\0",
    /*0754*/ "VouGetChnPts\0\0\0\0",
    /*0764*/ "VouQueryChn\0",
    /*0770*/ "VouGetScreenFrame\0\0\0",
    /*0784*/ "VouReleaseScreenFrame\0\0\0",
    /*079c*/ "VouSetDispBufLen\0\0\0\0",
    /*07b0*/ "VouSetPlayToleration\0\0\0\0",
    /*07c8*/ "VouGetPlayToleration\0\0\0\0",
    /*07e0*/ "VouChnClearBuf\0\0",
    /*07f0*/ "VouSetChnBorder\0",
    /*0800*/ "VouGetChnBorder\0",
    /*0810*/ "VouSetVideoLayerBoundary\0\0\0\0",
    /*082c*/ "VouGetVideoLayerBoundary\0\0\0\0",
    /*0848*/ "VouSetChnBoundary\0\0\0",
    /*085c*/ "VouGetChnBoundary\0\0\0",
    /*0870*/ "VouSetChnReceiveThreshold\0\0\0",
    /*088c*/ "VouSetChnRotation\0\0\0",
    /*08a0*/ "VouGetChnRotation\0\0\0",
    /*08b4*/ "VouChnCalTotalLeaveDisplay\0\0",
    /*08d0*/ "VouChnResetScalePts\0",
    /*08e4*/ "VouChnPlayFrmRtControl\0\0",
    /*08fc*/ "VouGetInstInfo\0\0",
    /*090c*/ "VouChnDealPause\0",
    /*091c*/ "VouChnCheckPTS\0\0",
    /*092c*/ "VouChnCheckPTSWithPreVoBlk\0\0",
    /*0948*/ "VouChnPreViewQuery\0\0",
    /*095c*/ "VouChnVdecQuery\0",
    /*096c*/ "VouChnVpssQuery\0",
    /*097c*/ "VoGetFrmVbBlk\0\0\0",
    /*098c*/ "VouChnDoRotationByVgs\0\0\0",
    /*09a4*/ "VouChnSdViSendWithRot\0\0\0",
    /*09bc*/ "VouChnSdViSend\0\0",
    /*09cc*/ "VoRotationTaskCallback\0\0",
    /*09e4*/ "VouChnSdVdecSend\0\0\0\0",
    /*09f8*/ "VouChnVpssSend\0\0",
    /*0a08*/ "VouUsrSendFrameTimeOut\0\0",
    /*0a20*/ "VouCheckFrame\0\0\0",
    /*0a30*/ "VouChnSdVdecSendNoQuery\0",
    /*0a48*/ "VouGetChnValidData\0\0",
    /*0a5c*/ "VouGetOsd\0\0\0",
    /*0a68*/ "VouPutOsd\0\0\0",
    /*0a74*/ "VouGetCover\0",
    /*0a80*/ "VouPutCover\0",
    /*0a8c*/ "VouChnVgs\0\0\0",
    /*0a98*/ "VouGetOsdEnableFlag\0",
    /*0aac*/ "VouGetCoverEnableFlag\0\0\0",
    /*0ac4*/ "VouChnVgsProcess\0\0\0\0",
    /*0ad8*/ "VouChnVgsBypassProcess\0\0",
    /*0af0*/ "VouGetRegionLumaTimeout\0",
    /*0b08*/ "VouChnGetLuma\0\0\0",
    /*0b18*/ "VoSetModParam\0\0\0",
    /*0b28*/ "VouDispGetValidData\0",
    /*0b3c*/ "VouDispSetLayerDataFmt\0\0",
    /*0b54*/ "VouDispLayerConfig\0\0",
    /*0b68*/ "VouDispLayerDisplay\0",
    /*0b7c*/ "VouCheckAspectRatio\0",
    /*0b90*/ "VouCalcAspectRatio\0\0",
    /*0ba4*/ "VouDispChnDisplay\0\0\0",
    /*0bb8*/ "VouCmpImageResAndChnRect\0\0\0\0",
    /*0bd4*/ "VouIsImagePixelFormatConsistent\0",
    /*0bf4*/ "VouIsOnlyOneChnShow\0",
    /*0c08*/ "VouGetVgsBypassMode\0",
    /*0c1c*/ "VouDispProcess\0\0",
    /*0c2c*/ "VOU_GetGfxDcmpPixel\0",
    /*0c40*/ "VO_GraphicsWbcIntProcess\0\0\0\0",
    /*0c5c*/ "VOU_GraphicsSetCSC\0\0",
    /*0c70*/ "VOU_GraphicsGetCSC\0\0",
    /*0c84*/ "VOU_UF_AllocNode\0\0\0\0",
    /*0c98*/ "VOU_UF_BUF_Deinit\0\0\0",
    /*0cac*/ "VOU_UF_PutVb\0\0\0\0",
    /*0cbc*/ "VOU_UF_GetVb\0\0\0\0",
    /*0ccc*/ "VOU_UF_RlsBusy\0\0",
    /*0cdc*/ "VO_DRV_CheckRgnAttr\0",
    /*0cf0*/ "VO_DRV_GetChannelHalId\0\0",
    /*0d08*/ "\0\0\0\0",
    /*0d0c*/ "?\0\0\0",
    /*0d10*/ "\0\0\0\0",
    /*0d14*/ "\0\0\0\0",
    /*0d18*/ "\xfa\xff\xff\xff\x0c\0\0\0",
    /*0d20*/ "3\0\0\0",
    /*0d24*/ "\x07\0\0\0",
    /*0d28*/ "VO_DRV_SetLayerBitWidth\0",
    /*0d40*/ "VOU_DRV_CheckVideoCsc\0\0\0",
    /*0d58*/ "\x04\0\0\0",
    /*0d5c*/ "\x05\0\0\0",
    /*0d60*/ "\x06\0\0\0",
    /*0d64*/ "\x07\0\0\0",
    /*0d68*/ "\t\0\0\0",
    /*0d6c*/ "\n\0\0\0",
    /*0d70*/ "\x0b\0\0\0",
    /*0d74*/ "\x08\0\0\0",
    /*0d78*/ "VO_VID_SetZmeEnable\0",
    /*0d8c*/ "VOU_DRV_CheckUsrSyncTiming\0\0",
    /*0da8*/ "VO_DRV_CheckDevUserSyncInfo\0",
    /*0dc4*/ "VO_DRV_SetDevUserIntfSyncAttr\0\0\0",
    /*0de4*/ "VOU_DRV_ClrIntStatus\0\0\0\0",
    /*0dfc*/ "VOU_DRV_CheckDevIntf\0\0\0\0",
    /*0e14*/ "VOU_DRV_CheckDevPubAttr\0",
    /*0e2c*/ "\x01\0\0\0",
    /*0e30*/ "\x02\0\0\0",
    /*0e34*/ "\x03\0\0\0",
    /*0e38*/ "VOU_DRV_GetLayerDataFmt\0",
    /*0e50*/ "VOU_DRV_GetDisplayRect\0\0",
    /*0e68*/ "VOU_DRV_IsVDcmpStateOK\0\0",
    /*0e80*/ "L\0C\0",
    /*0e84*/ "VO_DRV_GetVDcmpState\0\0\0\0",
    /*0e9c*/ "VOU_DRV_ZoomConfig\0\0",
    /*0eb0*/ "VOU_DRV_CheckVideoBindSupport\0\0\0",
    /*0ed0*/ "VO_DRV_GetDevHalId\0\0",
    /*0ee4*/ "*\0\0\0",
    /*0ee8*/ "\xf6\xff\xff\xff\xec\xff\xff\xff\x1c\0\0\0",
    /*0ef4*/ "\xd8\xff\xff\xff=\0\0\0",
    /*0efc*/ "\x95\xff\xff\xffJ\x01\0\0",
    /*0f04*/ "VOU_DRV_CheckChnId\0\0",
    /*0f18*/ "VO_DRV_DevCapabilityInit\0\0\0\0",
    /*0f34*/ "VOU_DRV_GetInterruptDev\0",
    /*0f4c*/ "VOU_DRV_CheckLayerAttr\0\0",
    /*0f64*/ "VO_DRV_CheckLayerSupportFrame\0\0\0",
    /*0f84*/ "VOU_DRV_IsChipSupportBorder\0",
    /*0fa0*/ "VOU_DRV_CheckBorderParam\0\0\0\0",
    /*0fbc*/ "VOU_DRV_IsLayerCompressModeSupport\0\0",
    /*0fe0*/ "VOU_DRV_CheckLayerParam\0",
    /*0ff8*/ "VOU_DRV_CheckBufLen\0",
    /*100c*/ "VOU_DRV_GetRgnCapacity\0\0",
    /*1024*/ "VOU_DRV_SetDevDitherMode\0\0\0\0",
    /*1040*/ "\x10\0\x10\0",
    /*1044*/ "\x10\0\xff\x03\xff\x03\xff\x03@\0@\0",
    /*1050*/ "@\0\xac\x03\xac\x03\xac\x03VO_DRV_Open\0",
    /*1064*/ "VOU_DRV_LowBandwidth\0\0\0\0",
    /*107c*/ "VO_DRV_BusErr\0\0\0",
    /*108c*/ "HAL_LAYER_SetLayerSrcCropXY\0",
    /*10a8*/ "GRAPHIC_DRV_CheckGraphicBindSupport\0",
    /*10cc*/ "GRAPHIC_DRV_CheckCscCoef\0\0\0\0",
    /*10e8*/ "GRAPHIC_DRV_SetCscCoef\0\0",
    /*1100*/ "b\x03\0\0",
    /*1104*/ "k\x03\0\0",
    /*1108*/ "s\x03\0\0",
    /*110c*/ "{\x03\0\0",
    /*1110*/ "\x83\x03\0\0",
    /*1114*/ "\x8a\x03\0\0",
    /*1118*/ "\x92\x03\0\0",
    /*111c*/ "\x99\x03\0\0",
    /*1120*/ "\x9f\x03\0\0",
    /*1124*/ "\xa6\x03\0\0",
    /*1128*/ "\xac\x03\0\0",
    /*112c*/ "\xb2\x03\0\0",
    /*1130*/ "\xb7\x03\0\0",
    /*1134*/ "\xbc\x03\0\0",
    /*1138*/ "\xc1\x03\0\0",
    /*113c*/ "\xc6\x03\0\0",
    /*1140*/ "\xca\x03\0\0",
    /*1144*/ "\xce\x03\0\0",
    /*1148*/ "\xd2\x03\0\0",
    /*114c*/ "\xd6\x03\0\0",
    /*1150*/ "\xd9\x03\0\0",
    /*1154*/ "\xdc\x03\0\0",
    /*1158*/ "\xde\x03\0\0",
    /*115c*/ "\xe1\x03\0\0",
    /*1160*/ "\xe3\x03\0\0",
    /*1164*/ "\xe4\x03\0\0",
    /*1168*/ "\xe6\x03\0\0",
    /*116c*/ "\xe7\x03\0\0",
    /*1170*/ "\xe7\x03\0\0",
    /*1174*/ "\xe8\x03\0\0",
    /*1178*/ "\xe8\x03\0\0",
    /*117c*/ "\xe8\x03\0\0",
    /*1180*/ "\xe7\x03\0\0",
    /*1184*/ "\xe7\x03\0\0",
    /*1188*/ "\xe6\x03\0\0",
    /*118c*/ "\xe4\x03\0\0",
    /*1190*/ "\xe3\x03\0\0",
    /*1194*/ "\xe1\x03\0\0",
    /*1198*/ "\xde\x03\0\0",
    /*119c*/ "\xdc\x03\0\0",
    /*11a0*/ "\xd9\x03\0\0",
    /*11a4*/ "\xd6\x03\0\0",
    /*11a8*/ "\xd2\x03\0\0",
    /*11ac*/ "\xce\x03\0\0",
    /*11b0*/ "\xca\x03\0\0",
    /*11b4*/ "\xc6\x03\0\0",
    /*11b8*/ "\xc1\x03\0\0",
    /*11bc*/ "\xbc\x03\0\0",
    /*11c0*/ "\xb7\x03\0\0",
    /*11c4*/ "\xb2\x03\0\0",
    /*11c8*/ "\xac\x03\0\0",
    /*11cc*/ "\xa6\x03\0\0",
    /*11d0*/ "\x9f\x03\0\0",
    /*11d4*/ "\x99\x03\0\0",
    /*11d8*/ "\x92\x03\0\0",
    /*11dc*/ "\x8a\x03\0\0",
    /*11e0*/ "\x83\x03\0\0",
    /*11e4*/ "{\x03\0\0",
    /*11e8*/ "s\x03\0\0",
    /*11ec*/ "k\x03\0\0",
    /*11f0*/ "b\x03\0\0",
    /*11f4*/ "\x0c\xfe\xff\xff\x1b\xfe\xff\xff+\xfe\xff\xff:\xfe\xff\xffJ\xfe\xff\xffZ\xfe\xff\xffi\xfe\xff\xffy\xfe\xff\xff\x8a\xfe\xff\xff\x9a\xfe\xff\xff\xaa\xfe\xff\xff\xbb\xfe\xff\xff\xcb\xfe\xff\xff\xdc\xfe\xff\xff\xec\xfe\xff\xff\xfd\xfe\xff\xff\x0e\xff\xff\xff\x1f\xff\xff\xff0\xff\xff\xffA\xff\xff\xffR\xff\xff\xffd\xff\xff\xffu\xff\xff\xff\x86\xff\xff\xff\x98\xff\xff\xff\xa9\xff\xff\xff\xba\xff\xff\xff\xcc\xff\xff\xff\xdd\xff\xff\xff\xef\xff\xff\xff\0\0\0\0",
    /*1270*/ "\x11\0\0\0",
    /*1274*/ "#\0\0\0",
    /*1278*/ "4\0\0\0",
    /*127c*/ "F\0\0\0",
    /*1280*/ "W\0\0\0",
    /*1284*/ "h\0\0\0",
    /*1288*/ "z\0\0\0",
    /*128c*/ "\x8b\0\0\0",
    /*1290*/ "\x9c\0\0\0",
    /*1294*/ "\xae\0\0\0",
    /*1298*/ "\xbf\0\0\0",
    /*129c*/ "\xd0\0\0\0",
    /*12a0*/ "\xe1\0\0\0",
    /*12a4*/ "\xf2\0\0\0",
    /*12a8*/ "\x03\x01\0\0",
    /*12ac*/ "\x14\x01\0\0",
    /*12b0*/ "$\x01\0\0",
    /*12b4*/ "5\x01\0\0",
    /*12b8*/ "E\x01\0\0",
    /*12bc*/ "V\x01\0\0",
    /*12c0*/ "f\x01\0\0",
    /*12c4*/ "v\x01\0\0",
    /*12c8*/ "\x87\x01\0\0",
    /*12cc*/ "\x97\x01\0\0",
    /*12d0*/ "\xa6\x01\0\0",
    /*12d4*/ "\xb6\x01\0\0",
    /*12d8*/ "\xc6\x01\0\0",
    /*12dc*/ "\xd5\x01\0\0",
    /*12e0*/ "\xe5\x01\0\0",
    /*12e4*/ "\xf4\x01\0\0",
    /*12e8*/ "\xe8\x03\0\0",
    /*12ec*/ "\0\0\0\0",
    /*12f0*/ "\0\0\0\0",
    /*12f4*/ "\0\0\0\0",
    /*12f8*/ "\xe8\x03\0\0",
    /*12fc*/ "\0\0\0\0",
    /*1300*/ "\0\0\0\0",
    /*1304*/ "\0\0\0\0",
    /*1308*/ "\xe8\x03\0\0",
    /*130c*/ "\xf0\xff\xff\xff\x80\xff\xff\xff\x80\xff\xff\xff\x10\0\0\0",
    /*131c*/ "\x80\0\0\0",
    /*1320*/ "\x80\0\0\0",
    /*1324*/ "\0\0\0\0",
    /*1328*/ "\0\0\0\0",
    /*132c*/ "\0\0\0\0",
    /*1330*/ "\xe8\x03\0\0",
    /*1334*/ "c\0\0\0",
    /*1338*/ "\xc0\0\0\0",
    /*133c*/ "\0\0\0\0",
    /*1340*/ "\xde\x03\0\0",
    /*1344*/ "\x91\xff\xff\xff\0\0\0\0",
    /*134c*/ "\xb8\xff\xff\xff\xd7\x03\0\0",
    /*1354*/ "\xf0\xff\xff\xff\x80\xff\xff\xff\x80\xff\xff\xff\x10\0\0\0",
    /*1364*/ "\x80\0\0\0",
    /*1368*/ "\x80\0\0\0",
    /*136c*/ "\0\0\0\0",
    /*1370*/ "\0\0\0\0",
    /*1374*/ "\0\0\0\0",
    /*1378*/ "\xe8\x03\0\0",
    /*137c*/ "\x8c\xff\xff\xff\xd0\0\0\0",
    /*1384*/ "\0\0\0\0",
    /*1388*/ "\xf9\x03\0\0",
    /*138c*/ "r\0\0\0",
    /*1390*/ "\0\0\0\0",
    /*1394*/ "K\0\0\0",
    /*1398*/ "\x01\x04\0\0",
    /*139c*/ "\xf0\xff\xff\xff\x80\xff\xff\xff\x80\xff\xff\xff\x10\0\0\0",
    /*13ac*/ "\x80\0\0\0",
    /*13b0*/ "\x80\0\0\0",
    /*13b4*/ "\0\0\0\0",
    /*13b8*/ "\0\0\0\0",
    /*13bc*/ "\0\0\0\0",
    /*13c0*/ "\xe8\x03\0\0",
    /*13c4*/ "\0\0\0\0",
    /*13c8*/ "\xa2\x05\0\0",
    /*13cc*/ "\xe8\x03\0\0",
    /*13d0*/ "`\xff\xff\xff\xd0\xfd\xff\xff\xe8\x03\0\0",
    /*13dc*/ "1\x07\0\0",
    /*13e0*/ "\0\0\0\0",
    /*13e4*/ "\0\0\0\0",
    /*13e8*/ "\x80\xff\xff\xff\x80\xff\xff\xff\0\0\0\0",
    /*13f4*/ "\0\0\0\0",
    /*13f8*/ "\0\0\0\0",
    /*13fc*/ "\0\0\0\0",
    /*1400*/ "\0\0\0\0",
    /*1404*/ "\0\0\0\0",
    /*1408*/ "\x8c\x04\0\0",
    /*140c*/ "\0\0\0\0",
    /*1410*/ "\x01\x07\0\0",
    /*1414*/ "\x8c\x04\0\0",
    /*1418*/ "+\xff\xff\xff\xea\xfd\xff\xff\x8c\x04\0\0",
    /*1424*/ "C\x08\0\0",
    /*1428*/ "\0\0\0\0",
    /*142c*/ "\xf0\xff\xff\xff\x80\xff\xff\xff\x80\xff\xff\xff\0\0\0\0",
    /*143c*/ "\0\0\0\0",
    /*1440*/ "\0\0\0\0",
    /*1444*/ "\0\0\0\0",
    /*1448*/ "\0\0\0\0",
    /*144c*/ "\0\0\0\0",
    /*1450*/ "\x8c\x04\0\0",
    /*1454*/ "\0\0\0\0",
    /*1458*/ "<\x06\0\0",
    /*145c*/ "\x8c\x04\0\0",
    /*1460*/ "y\xfe\xff\xff\xd3\xfc\xff\xff\x8c\x04\0\0",
    /*146c*/ "\xe2\x07\0\0",
    /*1470*/ "\0\0\0\0",
    /*1474*/ "\xf0\xff\xff\xff\x80\xff\xff\xff\x80\xff\xff\xff\0\0\0\0",
    /*1484*/ "\0\0\0\0",
    /*1488*/ "\0\0\0\0",
    /*148c*/ "\0\0\0\0",
    /*1490*/ "\0\0\0\0",
    /*1494*/ "\0\0\0\0",
    /*1498*/ "\x07\x01\0\0",
    /*149c*/ "\xa6\x02\0\0",
    /*14a0*/ ";\0\0\0",
    /*14a4*/ "q\xff\xff\xff\x90\xfe\xff\xff\xff\x01\0\0",
    /*14b0*/ "\xff\x01\0\0",
    /*14b4*/ "*\xfe\xff\xff\xd7\xff\xff\xff\0\0\0\0",
    /*14c0*/ "\0\0\0\0",
    /*14c4*/ "\0\0\0\0",
    /*14c8*/ "\0\0\0\0",
    /*14cc*/ "\x80\0\0\0",
    /*14d0*/ "\x80\0\0\0",
    /*14d4*/ "\0\0\0\0",
    /*14d8*/ "\0\0\0\0",
    /*14dc*/ "\0\0\0\0",
    /*14e0*/ "\xd5\0\0\0",
    /*14e4*/ "\xcb\x02\0\0",
    /*14e8*/ "H\0\0\0",
    /*14ec*/ "\x8b\xff\xff\xffv\xfe\xff\xff\xff\x01\0\0",
    /*14f8*/ "\xff\x01\0\0",
    /*14fc*/ "0\xfe\xff\xff\xd1\xff\xff\xff\0\0\0\0",
    /*1508*/ "\0\0\0\0",
    /*150c*/ "\0\0\0\0",
    /*1510*/ "\0\0\0\0",
    /*1514*/ "\x80\0\0\0",
    /*1518*/ "\x80\0\0\0",
    /*151c*/ "\0\0\0\0",
    /*1520*/ "\0\0\0\0",
    /*1524*/ "\0\0\0\0",
    /*1528*/ "\xb8\0\0\0",
    /*152c*/ "f\x02\0\0",
    /*1530*/ ">\0\0\0",
    /*1534*/ "\x9b\xff\xff\xff\xae\xfe\xff\xff\xb7\x01\0\0",
    /*1540*/ "\xb7\x01\0\0",
    /*1544*/ "q\xfe\xff\xff\xd8\xff\xff\xff\0\0\0\0",
    /*1550*/ "\0\0\0\0",
    /*1554*/ "\0\0\0\0",
    /*1558*/ "\x10\0\0\0",
    /*155c*/ "\x80\0\0\0",
    /*1560*/ "\x80\0\0\0",
    /*1564*/ "\0\0\0\0",
    /*1568*/ "\0\0\0\0",
    /*156c*/ "\0\0\0\0",
    /*1570*/ "+\x01\0\0",
    /*1574*/ "K\x02\0\0",
    /*1578*/ "r\0\0\0",
    /*157c*/ "T\xff\xff\xff\xad\xfe\xff\xff\xff\x01\0\0",
    /*1588*/ "\xff\x01\0\0",
    /*158c*/ "T\xfe\xff\xff\xad\xff\xff\xff\0\0\0\0",
    /*1598*/ "\0\0\0\0",
    /*159c*/ "\0\0\0\0",
    /*15a0*/ "\0\0\0\0",
    /*15a4*/ "\x80\0\0\0",
    /*15a8*/ "\x80\0\0\0",
    /*15ac*/ "\0\0\0\0",
    /*15b0*/ "\0\0\0\0",
    /*15b4*/ "\0\0\0\0",
    /*15b8*/ "\x02\x01\0\0",
    /*15bc*/ "\xf8\x01\0\0",
    /*15c0*/ "b\0\0\0",
    /*15c4*/ "l\xff\xff\xff\xdd\xfe\xff\xff\xb7\x01\0\0",
    /*15d0*/ "\xb7\x01\0\0",
    /*15d4*/ "\x90\xfe\xff\xff\xb9\xff\xff\xff\0\0\0\0",
    /*15e0*/ "\0\0\0\0",
    /*15e4*/ "\0\0\0\0",
    /*15e8*/ "\x10\0\0\0",
    /*15ec*/ "\x80\0\0\0",
    /*15f0*/ "\x80\0\0\0",
    /*15f4*/ "\0\0\0\0",
    /*15f8*/ "\0\0\0\0",
    /*15fc*/ "\0\0\0\0",
    /*1600*/ "\0\0\0\0",
    /*1604*/ "\0\0\0\0",
    /*1608*/ "\0\0\0\0",
    /*160c*/ "\0\0\0\0",
    /*1610*/ "\0\0\0\0",
    /*1614*/ "\0\0\0\0",
    /*1618*/ "\0\0\0\0",
    /*161c*/ "\0\0\0\0",
    /*1620*/ "\0\0\0\0",
    /*1624*/ "\0\0\0\0",
    /*1628*/ "\0\0\0\0",
    /*162c*/ "\0\0\0\0",
    /*1630*/ "\0\0\0\0",
    /*1634*/ "\0\0\0\0",
    /*1638*/ "\0\0\0\0",
    /*163c*/ "\0\0\0\0",
    /*1640*/ "hisilicon,hisi-vo\0\0\0",
    /*1654*/ "\0\0\0\0",
    /*1658*/ "\0\0\0\0",
    /*165c*/ "\0\0\0\0",
    /*1660*/ "\0\0\0\0",
    /*1664*/ "\0\0\0\0",
    /*1668*/ "\0\0\0\0",
    /*166c*/ "\0\0\0\0",
    /*1670*/ "\0\0\0\0",
    /*1674*/ "\0\0\0\0",
    /*1678*/ "\0\0\0\0",
    /*167c*/ "\0\0\0\0",
    /*1680*/ "\0\0\0\0",
    /*1684*/ "\0\0\0\0",
    /*1688*/ "\0\0\0\0",
    /*168c*/ "\0\0\0\0",
    /*1690*/ "\0\0\0\0",
    /*1694*/ "\0\0\0\0",
    /*1698*/ "\0\0\0\0",
    /*169c*/ "\0\0\0\0",
    /*16a0*/ "\0\0\0\0",
    /*16a4*/ "\0\0\0\0",
    /*16a8*/ "\0\0\0\0",
    /*16ac*/ "\0\0\0\0",
    /*16b0*/ "\0\0\0\0",
    /*16b4*/ "\0\0\0\0",
    /*16b8*/ "\0\0\0\0",
    /*16bc*/ "\0\0\0\0",
    /*16c0*/ "\0\0\0\0",
    /*16c4*/ "\0\0\0\0",
    /*16c8*/ "\0\0\0\0",
    /*16cc*/ "\0\0\0\0",
    /*16d0*/ "\0\0\0\0",
    /*16d4*/ "\0\0\0\0",
    /*16d8*/ "\0\0\0\0",
    /*16dc*/ "\0\0\0\0",
    /*16e0*/ "\0\0\0\0",
    /*16e4*/ "\0\0\0\0",
    /*16e8*/ "\0\0\0\0",
    /*16ec*/ "\0\0\0\0",
    /*16f0*/ "\0\0\0\0",
    /*16f4*/ "\0\0\0\0",
    /*16f8*/ "\0\0\0\0",
    /*16fc*/ "\0\0\0\0",
    /*1700*/ "\0\0\0\0",
    /*1704*/ "\0\0\0\0",
    /*1708*/ "\0\0\0\0",
    /*170c*/ "\0\0\0\0",
    /*1710*/ "\0\0\0\0",
    /*1714*/ "\0\0\0\0",
    /*1718*/ "\0\0\0\0",
    /*171c*/ "\0\0\0\0",
    /*1720*/ "\0\0\0\0",
    /*1724*/ "\0\0\0\0",
    /*1728*/ "\0\0\0\0",
    /*172c*/ "\0\0\0\0",
    /*1730*/ "\0\0\0\0",
    /*1734*/ "\0\0\0\0",
    /*1738*/ "\0\0\0\0",
    /*173c*/ "\0\0\0\0",
    /*1740*/ "\0\0\0\0",
    /*1744*/ "\0\0\0\0",
    /*1748*/ "\0\0\0\0",
    /*174c*/ "\0\0\0\0",
    /*1750*/ "\0\0\0\0",
    /*1754*/ "\0\0\0\0",
    /*1758*/ "\0\0\0\0",
    /*175c*/ "\0\0\0\0",
    /*1760*/ "\0\0\0\0",
    /*1764*/ "\0\0\0\0",
    /*1768*/ "\0\0\0\0",
    /*176c*/ "\0\0\0\0",
    /*1770*/ "\0\0\0\0",
    /*1774*/ "\0\0\0\0",
    /*1778*/ "\0\0\0\0",
    /*177c*/ "\0\0\0\0",
    /*1780*/ "\0\0\0\0",
    /*1784*/ "\0\0\0\0",
    /*1788*/ ""
};

unsigned char rel.rodata[664] = {
    /*0000*/ "\x0c\0\0\0",
    /*0004*/ "\x02\x07\0\0",
    /*0008*/ "\x10\0\0\0",
    /*000c*/ "\x02\x07\0\0",
    /*0010*/ "\x14\0\0\0",
    /*0014*/ "\x02\x07\0\0",
    /*0018*/ "\x18\0\0\0",
    /*001c*/ "\x02\x07\0\0",
    /*0020*/ "\x1c\0\0\0",
    /*0024*/ "\x02\x07\0\0",
    /*0028*/ " \0\0\0",
    /*002c*/ "\x02\x07\0\0",
    /*0030*/ "$\0\0\0",
    /*0034*/ "\x02\x07\0\0",
    /*0038*/ "(\0\0\0",
    /*003c*/ "\x02\x07\0\0",
    /*0040*/ ",\0\0\0",
    /*0044*/ "\x02\x07\0\0",
    /*0048*/ "0\0\0\0",
    /*004c*/ "\x02\x07\0\0",
    /*0050*/ "4\0\0\0",
    /*0054*/ "\x02\x07\0\0",
    /*0058*/ "8\0\0\0",
    /*005c*/ "\x02\x07\0\0",
    /*0060*/ "<\0\0\0",
    /*0064*/ "\x02\x07\0\0",
    /*0068*/ "@\0\0\0",
    /*006c*/ "\x02\x07\0\0",
    /*0070*/ "D\0\0\0",
    /*0074*/ "\x02\x07\0\0",
    /*0078*/ "H\0\0\0",
    /*007c*/ "\x02\x07\0\0",
    /*0080*/ "L\0\0\0",
    /*0084*/ "\x02\x07\0\0",
    /*0088*/ "P\0\0\0",
    /*008c*/ "\x02\x07\0\0",
    /*0090*/ "T\0\0\0",
    /*0094*/ "\x02\x07\0\0",
    /*0098*/ "X\0\0\0",
    /*009c*/ "\x02\x07\0\0",
    /*00a0*/ "\\0\0\0",
    /*00a4*/ "\x02\x07\0\0",
    /*00a8*/ "`\0\0\0",
    /*00ac*/ "\x02\x07\0\0",
    /*00b0*/ "d\0\0\0",
    /*00b4*/ "\x02\x07\0\0",
    /*00b8*/ "h\0\0\0",
    /*00bc*/ "\x02\x07\0\0",
    /*00c0*/ "l\0\0\0",
    /*00c4*/ "\x02\x07\0\0",
    /*00c8*/ "p\0\0\0",
    /*00cc*/ "\x02\x07\0\0",
    /*00d0*/ "t\0\0\0",
    /*00d4*/ "\x02\x07\0\0",
    /*00d8*/ "x\0\0\0",
    /*00dc*/ "\x02\x07\0\0",
    /*00e0*/ "|\0\0\0",
    /*00e4*/ "\x02\x07\0\0",
    /*00e8*/ "\x80\0\0\0",
    /*00ec*/ "\x02\x07\0\0",
    /*00f0*/ "\x84\0\0\0",
    /*00f4*/ "\x02\x07\0\0",
    /*00f8*/ "\x88\0\0\0",
    /*00fc*/ "\x02\x07\0\0",
    /*0100*/ "\x8c\0\0\0",
    /*0104*/ "\x02\x07\0\0",
    /*0108*/ "\x90\0\0\0",
    /*010c*/ "\x02\x07\0\0",
    /*0110*/ "\x94\0\0\0",
    /*0114*/ "\x02\x07\0\0",
    /*0118*/ "\x98\0\0\0",
    /*011c*/ "\x02\x07\0\0",
    /*0120*/ "\x9c\0\0\0",
    /*0124*/ "\x02\x07\0\0",
    /*0128*/ "\xa0\0\0\0",
    /*012c*/ "\x02\x07\0\0",
    /*0130*/ "\xa4\0\0\0",
    /*0134*/ "\x02\x07\0\0",
    /*0138*/ "\xa8\0\0\0",
    /*013c*/ "\x02\x07\0\0",
    /*0140*/ "\xac\0\0\0",
    /*0144*/ "\x02\x07\0\0",
    /*0148*/ "\xb0\0\0\0",
    /*014c*/ "\x02\x07\0\0",
    /*0150*/ "\xb4\0\0\0",
    /*0154*/ "\x02\x07\0\0",
    /*0158*/ "\xb8\0\0\0",
    /*015c*/ "\x02\x07\0\0",
    /*0160*/ "\xbc\0\0\0",
    /*0164*/ "\x02\x07\0\0",
    /*0168*/ "\xc0\0\0\0",
    /*016c*/ "\x02\x07\0\0",
    /*0170*/ "\xc4\0\0\0",
    /*0174*/ "\x02\x07\0\0",
    /*0178*/ "\xc8\0\0\0",
    /*017c*/ "\x02\x07\0\0",
    /*0180*/ "\xcc\0\0\0",
    /*0184*/ "\x02\x07\0\0",
    /*0188*/ "\xd0\0\0\0",
    /*018c*/ "\x02\x07\0\0",
    /*0190*/ "\xd4\0\0\0",
    /*0194*/ "\x02\x07\0\0",
    /*0198*/ "\xd8\0\0\0",
    /*019c*/ "\x02\x07\0\0",
    /*01a0*/ "\xdc\0\0\0",
    /*01a4*/ "\x02\x07\0\0",
    /*01a8*/ "\xe0\0\0\0",
    /*01ac*/ "\x02\x07\0\0",
    /*01b0*/ "\xe4\0\0\0",
    /*01b4*/ "\x02\x07\0\0",
    /*01b8*/ "\xe8\0\0\0",
    /*01bc*/ "\x02\x07\0\0",
    /*01c0*/ "\xec\0\0\0",
    /*01c4*/ "\x02\x07\0\0",
    /*01c8*/ "\xf0\0\0\0",
    /*01cc*/ "\x02\x07\0\0",
    /*01d0*/ "\xf4\0\0\0",
    /*01d4*/ "\x02\x07\0\0",
    /*01d8*/ "\xf8\0\0\0",
    /*01dc*/ "\x02\x07\0\0",
    /*01e0*/ "\xfc\0\0\0",
    /*01e4*/ "\x02\x07\0\0",
    /*01e8*/ "\0\x01\0\0",
    /*01ec*/ "\x02\x07\0\0",
    /*01f0*/ "\x04\x01\0\0",
    /*01f4*/ "\x02\x07\0\0",
    /*01f8*/ "\x08\x01\0\0",
    /*01fc*/ "\x02\x07\0\0",
    /*0200*/ "\x0c\x01\0\0",
    /*0204*/ "\x02\x07\0\0",
    /*0208*/ "\x10\x01\0\0",
    /*020c*/ "\x02\x07\0\0",
    /*0210*/ "\x14\x01\0\0",
    /*0214*/ "\x02\x07\0\0",
    /*0218*/ "\x18\x01\0\0",
    /*021c*/ "\x02\x07\0\0",
    /*0220*/ "\x1c\x01\0\0",
    /*0224*/ "\x02\x07\0\0",
    /*0228*/ " \x01\0\0",
    /*022c*/ "\x02\x07\0\0",
    /*0230*/ "$\x01\0\0",
    /*0234*/ "\x02\x07\0\0",
    /*0238*/ "(\x01\0\0",
    /*023c*/ "\x02\x07\0\0",
    /*0240*/ ",\x01\0\0",
    /*0244*/ "\x02\x07\0\0",
    /*0248*/ "0\x01\0\0",
    /*024c*/ "\x02\x07\0\0",
    /*0250*/ "4\x01\0\0",
    /*0254*/ "\x02\x07\0\0",
    /*0258*/ "8\x01\0\0",
    /*025c*/ "\x02\x07\0\0",
    /*0260*/ "<\x01\0\0",
    /*0264*/ "\x02\x07\0\0",
    /*0268*/ "@\x01\0\0",
    /*026c*/ "\x02\x07\0\0",
    /*0270*/ "D\x01\0\0",
    /*0274*/ "\x02\x07\0\0",
    /*0278*/ "H\x01\0\0",
    /*027c*/ "\x02\x07\0\0",
    /*0280*/ "L\x01\0\0",
    /*0284*/ "\x02\x07\0\0",
    /*0288*/ "P\x01\0\0",
    /*028c*/ "\x02\x07\0\0",
    /*0290*/ "T\x01\0\0",
    /*0294*/ "\x02\x07\0\0",
    /*0298*/ ""
};

unsigned char rodata.str1.4[36702] = {
    /*0000*/ "-\0\0\0",
    /*0004*/ "PLL\0",
    /*0008*/ "LCDMCLK\0",
    /*0010*/ "Y\0\0\0",
    /*0014*/ "N\0\0\0",
    /*0018*/ "\0\0\0\0",
    /*001c*/ "Single\0\0",
    /*0024*/ "Multi\0\0\0",
    /*002c*/ "\n[VO] Version: [Hi3516CV500_MPP_V2.0.1.0 B090 Release], Build Time[Jan 14 2019, 20:23:45]\n\0\0",
    /*0088*/ "\n\0\0\0",
    /*008c*/ "-----DEVICE CONFIG-------------------------------------------------------------------\n\0\0",
    /*00e4*/ "DevEn\0\0\0",
    /*00ec*/ "DevId\0\0\0",
    /*00f4*/ "%8s%8s%11s%11s%11s%14s%13s%8s\n\0\0",
    /*0114*/ "DevFrt\0\0",
    /*011c*/ "BkClr\0\0\0",
    /*0124*/ "IntfSync\0\0\0\0",
    /*0130*/ "Mux3\0\0\0\0",
    /*0138*/ "Mux2\0\0\0\0",
    /*0140*/ "Mux1\0\0\0\0",
    /*0148*/ "     CVBS\0\0\0",
    /*0154*/ "    YPbPr\0\0\0",
    /*0160*/ "      VGA\0\0\0",
    /*016c*/ "    BT656\0\0\0",
    /*0178*/ "   BT1120\0\0\0",
    /*0184*/ "     HDMI\0\0\0",
    /*0190*/ "      LCD\0\0\0",
    /*019c*/ "   BT656H\0\0\0",
    /*01a8*/ "   BT656L\0\0\0",
    /*01b4*/ " LCD_6BIT\0\0\0",
    /*01c0*/ " LCD_8BIT\0\0\0",
    /*01cc*/ "LCD_16BIT\0\0\0",
    /*01d8*/ "LCD_18BIT\0\0\0",
    /*01e4*/ "LCD_24BIT\0\0\0",
    /*01f0*/ "     MIPI\0\0\0",
    /*01fc*/ "   MIPI_S\0\0\0",
    /*0208*/ "i <= 3\0\0",
    /*0210*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*0250*/ "%8u%8s%11s%11s%11s%14s%#13x%8u\n\0",
    /*0270*/ "\r\n\0\0",
    /*0274*/ "-----DEVICE CLOCK INFO-------------------------------------------------------------------\n\0\0",
    /*02d0*/ "%8s%8s%11s%8s%8s%11s%11s%10s%10s%10s%10s%11s\n\0\0\0",
    /*0300*/ "ClkReverse\0\0",
    /*030c*/ "VoPreDiv\0\0\0\0",
    /*0318*/ "VoDevDiv\0\0\0\0",
    /*0324*/ "PostDiv2\0\0\0\0",
    /*0330*/ "PostDiv1\0\0\0\0",
    /*033c*/ "RefDiv\0\0",
    /*0344*/ "Frac\0\0\0\0",
    /*034c*/ "FbDiv\0\0\0",
    /*0354*/ "ClkSource\0\0\0",
    /*0360*/ "%8u%8s%11s\0\0",
    /*036c*/ "%8u%8u%11u%11u%10u\0\0",
    /*0380*/ "%20u\0\0\0\0",
    /*0388*/ "%10u\0\0\0\0",
    /*0390*/ "%58u\0\0\0\0",
    /*0398*/ "%11s\n\0\0\0",
    /*03a0*/ "-----MODULE PARAM-----------------------------\n\0",
    /*03d0*/ "ExitDev\0",
    /*03d8*/ "transparentTransmit\0",
    /*03ec*/ "%20s%11s%14s%12s\n\0\0\0",
    /*0400*/ "DevClkExtEn\0",
    /*040c*/ "WbcBgBlackEn\0\0\0\0",
    /*041c*/ "-----VIDEO LAYER STATUS 1----------------------------------------------------------------------------------------\n\0\0",
    /*0490*/ "VideoEn\0",
    /*0498*/ "LayerId\0",
    /*04a0*/ "%8s%8s%10s%8s%8s%8s%8s%8s%8s%8s%8s%8s%10s%11s\n\0\0",
    /*04d0*/ "Decompress\0\0",
    /*04dc*/ "DstDyRg\0",
    /*04e4*/ "DoubFrm\0",
    /*04ec*/ "DispFrt\0",
    /*04f4*/ "DispH\0\0\0",
    /*04fc*/ "DispW\0\0\0",
    /*0504*/ "DispY\0\0\0",
    /*050c*/ "DispX\0\0\0",
    /*0514*/ "ImgH\0\0\0\0",
    /*051c*/ "ImgW\0\0\0\0",
    /*0524*/ "PixFmt\0\0",
    /*052c*/ "ClustMode\0\0\0",
    /*0538*/ "%8u%8s%10s%8s%8u%8u%8u%8u%8u%8u%8u%8s%10s%11s\n\0\0",
    /*0568*/ "-----VIDEO LAYER STATUS 2(continue)------------------------------------------------------------------------------\n\0\0",
    /*05dc*/ "%8s%8s%12s%10s%8s%8s%8s%8s%8s%8s\n\0\0\0",
    /*0600*/ "Satu\0\0\0\0",
    /*0608*/ "Hue\0",
    /*060c*/ "Cont\0\0\0\0",
    /*0614*/ "Luma\0\0\0\0",
    /*061c*/ "Matrix\0\0",
    /*0624*/ "EnChNum\0",
    /*062c*/ "Priority\0\0\0\0",
    /*0638*/ "Toleration\0\0",
    /*0644*/ "%8u%8s%12u%10u%8u%8u%8u%8u%8u%8u\n\0\0\0",
    /*0668*/ "-----VIDEO LAYER STATUS 3(continue)------------------------------------------------------------------------------\n\0\0",
    /*06dc*/ "%8s%8s%8s%8s%14s%13s%12s\n\0\0\0",
    /*06f8*/ "u32BufLen\0\0\0",
    /*0704*/ "bSDVgsBypass\0\0\0\0",
    /*0714*/ "PartitionMode\0\0\0",
    /*0724*/ "SetEnd\0\0",
    /*072c*/ "SetBeg\0\0",
    /*0734*/ "%8u%8u%8s%8s%14s%13s%12u\n\0\0\0",
    /*0750*/ "-----VIDEO LAYER STATUS 4(continue)------------------------------------------------------------------------------\n\0\0",
    /*07c4*/ " AspectRatioMode\0\0\0\0",
    /*07d8*/ " LayerId\0\0\0\0",
    /*07e4*/ "%s%s%s%s%s%s%s\n\0",
    /*07f4*/ "     BgColor\0\0\0\0",
    /*0804*/ "     Height\0",
    /*0810*/ "     Width\0\0",
    /*081c*/ "     Y\0\0",
    /*0824*/ "     X\0\0",
    /*082c*/ "%8u%16s%6u%6u%10u%11u%#12x\n\0",
    /*0848*/ "-----VIDEO LAYER STATUS 5(continue)------------------------------------------------------------------------------\n\0\0",
    /*08bc*/ " BoundaryWidth\0\0",
    /*08cc*/ "%s%16s%16s%16s\n\0",
    /*08dc*/ " Color1\0",
    /*08e4*/ " Color0\0",
    /*08ec*/ "%8u%16u%#16x%#16x\n\0\0",
    /*0900*/ "-----VIDEO LAYER STATUS 6(continue)------------------------------------------------------------------------------\n\0\0",
    /*0974*/ "CropEn\0\0",
    /*097c*/ "%8s%10s%8s%8s%8s%8s\n\0\0\0\0",
    /*0994*/ "Height\0\0",
    /*099c*/ "Width\0\0\0",
    /*09a4*/ "X\0\0\0",
    /*09a8*/ "%8u%10s\0",
    /*09b0*/ "%8d%8d%8u%8u\n\0\0\0",
    /*09c0*/ "-----CHN BASIC INFO ---------------------------------------------------------------\n\0\0\0\0",
    /*0a18*/ "ChnId\0\0\0",
    /*0a20*/ "%8s%8s%6s%6s%6s%6s%6s%6s%6s%6s%6s%6s%6s%9s\n\0",
    /*0a4c*/ "RotAngle\0\0\0\0",
    /*0a58*/ "Field\0\0\0",
    /*0a60*/ "bSnap\0\0\0",
    /*0a68*/ "ChnH\0\0\0\0",
    /*0a70*/ "ChnW\0\0\0\0",
    /*0a78*/ "ChnY\0\0\0\0",
    /*0a80*/ "ChnX\0\0\0\0",
    /*0a88*/ "DeFlk\0\0\0",
    /*0a90*/ "Prio\0\0\0\0",
    /*0a98*/ "ChnEn\0\0\0",
    /*0aa0*/ "-----CHN PLAY INFO 1---------------------------------------------------------------------------------------------------------------------\n\0\0",
    /*0b2c*/ "%8s%8s%8s%6s%6s%6s%6s%6s%7s%7s%9s\n\0\0",
    /*0b50*/ "ChnGap\0\0",
    /*0b58*/ "ChnFrt\0\0",
    /*0b60*/ "Thrshd\0\0",
    /*0b68*/ "Refsh\0\0\0",
    /*0b70*/ "Revrs\0\0\0",
    /*0b78*/ "Step\0\0\0\0",
    /*0b80*/ "Pause\0\0\0",
    /*0b88*/ "Show\0\0\0\0",
    /*0b90*/ "Batch\0\0\0",
    /*0b98*/ "%8u%8u%6s%6u%6s%6d%6d%6u%6u%6d%6d%6s%6s%9s\n\0",
    /*0bc4*/ "-----CHN PLAY INFO 2(continue)-----------------------------------------------------------------------------------------------------------\n\0\0",
    /*0c50*/ "%8s%8s%21s%21s%21s%21s%21s%21s\n\0",
    /*0c70*/ "RecvCurPts\0\0",
    /*0c7c*/ "SetPts\0\0",
    /*0c84*/ "ScalePts\0\0\0\0",
    /*0c90*/ "CurrPts\0",
    /*0c98*/ "PrePts\0\0",
    /*0ca0*/ "DisplayPts\0\0",
    /*0cac*/ "%8u%8u%8s%6s%6s%6s%6s%6s%7u%7u%9u\n\0\0",
    /*0cd0*/ "-----BySingle CHN STATUS 1----------------------------------------------------------------------------------------------------------------\n\0",
    /*0d5c*/ "%8s%8s%6s%9s%10s%9s%9s%9s%9s%9s%6s%6s%6s %12s %12s\n\0",
    /*0d90*/ "DispAddr\0\0\0\0",
    /*0d9c*/ "ChnAddr\0",
    /*0da4*/ "b2Scl\0\0\0",
    /*0dac*/ "Dsped\0\0\0",
    /*0db4*/ "ShouD\0\0\0",
    /*0dbc*/ "DRpt\0\0\0\0",
    /*0dc4*/ "ChRpt\0\0\0",
    /*0dcc*/ "SCnt\0\0\0\0",
    /*0dd4*/ "QCnt\0\0\0\0",
    /*0ddc*/ "SendLCnt\0\0\0\0",
    /*0de8*/ "QueryLCnt\0\0\0",
    /*0df4*/ "Task\0\0\0\0",
    /*0dfc*/ "Job\0",
    /*0e00*/ "%8u%8u%21llu%21llu%21llu%21llu%21lld%21llu\n\0",
    /*0e2c*/ "-----BySingle CHN STATUS 2(continue)------------------------------------------------------------------------------------------------------\n\0",
    /*0eb8*/ "%8s%8s%8s%12s%8s%12s%12s%12s%12s\n\0\0\0",
    /*0edc*/ "DispBusyNum\0",
    /*0ee8*/ "DispFreeNum\0",
    /*0ef4*/ "ChnBusyNum\0\0",
    /*0f00*/ "ChnFreeNum\0\0",
    /*0f0c*/ "Color\0\0\0",
    /*0f14*/ "BorderWidth\0",
    /*0f20*/ "bBorder\0",
    /*0f28*/ "%8u%8u%6u%9u%10u%9u%9u%9u%9u%9u%6d%6d%6s %#12llx %#12llx\n\0\0\0",
    /*0f64*/ "-----BySingle CHN STATUS 3(continue)--------------------------------------------------------\n\0\0\0",
    /*0fc4*/ " ChnId\0\0",
    /*0fcc*/ "%s%s%s%s%s%s%s%s%s\n\0",
    /*0fe0*/ "     CompressMode\0\0\0",
    /*0ff4*/ "%8u%8u%8s%12u%8x%12u%12u%12u%12u\n\0\0\0",
    /*1018*/ "-----CHN OTHER INFO--------------------------------------------------------------\n\0\0",
    /*106c*/ "%8s%8s%8s%8s%8s%8s%8s%8s%8s%8s\n\0",
    /*108c*/ "SrcH\0\0\0\0",
    /*1094*/ "SrcW\0\0\0\0",
    /*109c*/ "ZoomH\0\0\0",
    /*10a4*/ "ZoomW\0\0\0",
    /*10ac*/ "ZoomY\0\0\0",
    /*10b4*/ "ZoomX\0\0\0",
    /*10bc*/ "ZmTyp\0\0\0",
    /*10c4*/ "bZoom\0\0\0",
    /*10cc*/ "%8u%6u%16s%6u%6u%10u%11u%#12x%17s\n\0\0",
    /*10f0*/ "%8u%8u%8s%8u%8u%8u%8u%8u%8u%8u\n\0",
    /*1110*/ "[Func]:%s [Line]:%d [Info]:unknow dev:%d \n\0\0",
    /*113c*/ "[Func]:%s [Line]:%d [Info]:Null ptr!\n\0\0\0",
    /*1164*/ "[Func]:%s [Line]:%d [Info]:cmd: %#x, dev: %d, layer: %d, chn: %d\n\0\0\0",
    /*11a8*/ "[Func]:%s [Line]:%d [Info]:ERR IOCTL CMD %#x!\n\0\0",
    /*11d8*/ "[Func]:%s [Line]:%d [Info]:Vo device ID %d invalid!\n\0\0\0\0",
    /*1210*/ "[Func]:%s [Line]:%d [Info]:input illegal param: mod id %d\n\0\0",
    /*124c*/ "[Func]:%s [Line]:%d [Info]:not support bitwidth %d\n\0",
    /*1280*/ "[Func]:%s [Line]:%d [Info]:Vo Layer ID %d invalid!\n\0",
    /*12b4*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d, %d) hasn't been enabled!\n\0\0\0\0",
    /*12f8*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d, %d) has been disabled!\n\0\0",
    /*1338*/ "[Func]:%s [Line]:%d [Info]:[VoLayer%d}:can't use sys,please check bind relationship!\n\0\0\0",
    /*1390*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d) does not support dynamic range %d frame\0",
    /*13e0*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d) does not support XDR frame\0\0",
    /*1424*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d) do not support SDR(SDR8,SDR10) to HDR(HDR10,HLG,SLF)!\n\0\0",
    /*1484*/ "[Func]:%s [Line]:%d [Info]:Layer(%d) do not support this frame\n\0",
    /*14c4*/ "VO Int\0\0",
    /*14cc*/ "[Func]:%s [Line]:%d [Info]:request_irq for VOU failure!\n\0\0\0\0",
    /*1508*/ "HI_SUCCESS == s32Ret\0\0\0\0",
    /*1520*/ "[Func]:%s [Line]:%d [Info]:VOU exit!\0\0\0\0",
    /*1548*/ "module param transparentTransmit(%d) should be 0 or 1, it will be set to 1\n\0",
    /*1594*/ "module param lowPowerMode(%d) should be 0 or 1, it will be set to 1\n\0\0\0\0",
    /*15dc*/ "vo\0\0",
    /*15e0*/ "%s\0\0",
    /*15e4*/ "[Func]:%s [Line]:%d [Info]:VO create dev failed\n\0\0\0\0",
    /*1618*/ "[Func]:%s [Line]:%d [Info]:VO register failed\n\0\0",
    /*1648*/ "[Func]:%s [Line]:%d [Info]:VO create proc fail!\n\0\0\0\0",
    /*167c*/ "[Func]:%s [Line]:%d [Info]:VO Mod register failed\n\0\0",
    /*16b0*/ "[Func]:%s [Line]:%d [Info]:VO Mod atomic failed\n\0\0\0\0",
    /*16e4*/ "Hi3516CV500\0",
    /*16f0*/ "load vo.ko for %s...OK!\n\0\0\0\0",
    /*170c*/ "load vo.ko for %s...FAILURE!\n\0\0\0",
    /*172c*/ "unload vo.ko ....OK!\n\0\0\0",
    /*1744*/ "SDR8\0\0\0\0",
    /*174c*/ "SDR10\0\0\0",
    /*1754*/ "HDR10\0\0\0",
    /*175c*/ "HLG\0",
    /*1760*/ "SLF\0",
    /*1764*/ "SP422\0\0\0",
    /*176c*/ "SP420\0\0\0",
    /*1774*/ "YUV400\0\0",
    /*177c*/ "NONE\0\0\0\0",
    /*1784*/ "SEG\0",
    /*1788*/ "LINE\0\0\0\0",
    /*1790*/ "FRAME\0\0\0",
    /*1798*/ "AUTO\0\0\0\0",
    /*17a0*/ "MANUAL\0\0",
    /*17a8*/ "0\0\0\0",
    /*17ac*/ "90\0\0",
    /*17b0*/ "180\0",
    /*17b4*/ "270\0",
    /*17b8*/ "top\0",
    /*17bc*/ "botm\0\0\0\0",
    /*17c4*/ "both\0\0\0\0",
    /*17cc*/ "PAL\0",
    /*17d0*/ "NTSC\0\0\0\0",
    /*17d8*/ "1080P@24\0\0\0\0",
    /*17e4*/ "1080P@25\0\0\0\0",
    /*17f0*/ "1080P@30\0\0\0\0",
    /*17fc*/ "720P@50\0",
    /*1804*/ "720P@60\0",
    /*180c*/ "1080I50\0",
    /*1814*/ "1080I60\0",
    /*181c*/ "1080P@50\0\0\0\0",
    /*1828*/ "1080P@60\0\0\0\0",
    /*1834*/ "576p@50\0",
    /*183c*/ "480p@60\0",
    /*1844*/ "800x600@60\0\0",
    /*1850*/ "1024x768@60\0",
    /*185c*/ "1280x1024@60\0\0\0\0",
    /*186c*/ "1366x768@60\0",
    /*1878*/ "1440x900@60\0",
    /*1884*/ "1280x800@60\0",
    /*1890*/ "1600x1200@60\0\0\0\0",
    /*18a0*/ "1680x1050@60\0\0\0\0",
    /*18b0*/ "1920x1200@60\0\0\0\0",
    /*18c0*/ "640x480@60\0\0",
    /*18cc*/ "960H_PAL\0\0\0\0",
    /*18d8*/ "960H_NTSC\0\0\0",
    /*18e4*/ "1920x2160@30\0\0\0\0",
    /*18f4*/ "2560x1440@30\0\0\0\0",
    /*1904*/ "2560x1440@60\0\0\0\0",
    /*1914*/ "2560x1600@60\0\0\0\0",
    /*1924*/ "3840x2160@24\0\0\0\0",
    /*1934*/ "3840x2160@25\0\0\0\0",
    /*1944*/ "3840x2160@30\0\0\0\0",
    /*1954*/ "3840x2160@50\0\0\0\0",
    /*1964*/ "3840x2160@60\0\0\0\0",
    /*1974*/ "4096x2160@24\0\0\0\0",
    /*1984*/ "4096x2160@25\0\0\0\0",
    /*1994*/ "4096x2160@30\0\0\0\0",
    /*19a4*/ "4096x2160@50\0\0\0\0",
    /*19b4*/ "4096x2160@60\0\0\0\0",
    /*19c4*/ "320x240@60\0\0",
    /*19d0*/ "320x240@50\0\0",
    /*19dc*/ "240x320@50\0\0",
    /*19e8*/ "240x320@60\0\0",
    /*19f4*/ "800x600@50\0\0",
    /*1a00*/ "720x1280@60\0",
    /*1a0c*/ "1080x1920@60\0\0\0\0",
    /*1a1c*/ "7680x4320@30\0\0\0\0",
    /*1a2c*/ "USER\0\0\0\0",
    /*1a34*/ "[Func]:%s [Line]:%d [Info]:busy list empty\n\0",
    /*1a60*/ "plist != HI_NULL\0\0\0\0",
    /*1a74*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*1ab4*/ "[Func]:%s [Line]:%d [Info]:free list empty\n\0",
    /*1ae0*/ "[Func]:%s [Line]:%d [Info]:user list empty\n\0",
    /*1b0c*/ "pLen != NULL\0\0\0\0",
    /*1b1c*/ "Vo add vb 0x%llx fail, line is %d, func is %s, 0x%x\n\0\0\0\0",
    /*1b54*/ "Vou add vb 0x%llx fail, line is %d, func is %s, 0x%x\n\0\0\0",
    /*1b8c*/ "Vou sub vb 0x%llx fail, line is %d, func is %s,s32Ret=0x%x\n\0",
    /*1bc8*/ "Vou sub vb 0x%llx fail, line is %d, fouc is %s\n\0",
    /*1bf8*/ "[Func]:%s [Line]:%d [Info]:Vo layer %d has create VB pool!\n\0",
    /*1c34*/ "VO(%d)_DispBuf\0\0",
    /*1c44*/ "[Func]:%s [Line]:%d [Info]:VoLayer %d create VB pool failed!\n\0\0\0",
    /*1c84*/ "[Func]:%s [Line]:%d [Info]:Vo layer %d has destoried VB pool!\n\0\0",
    /*1cc4*/ "[Func]:%s [Line]:%d [Info]:Someone(%d) occupies this module(vou)'s vb %d!\n\0\0",
    /*1d10*/ "[Func]:%s [Line]:%d [Info]:Vo layer %d destory vb pool failed!\n\0",
    /*1d50*/ "[Func]:%s [Line]:%d [Info]:Vo layer %d hasn't create vb pool!\n\0\0",
    /*1d90*/ "[Func]:%s [Line]:%d [Info]:Vo layer %d get vb block failed!\n\0\0\0\0",
    /*1dd0*/ "[Func]:%s [Line]:%d [Info]:Vo sub vb 0x%llx fail, err code 0x%x\n\0\0\0\0",
    /*1e14*/ "NULL != pstChnCtx\0\0\0",
    /*1e28*/ "NULL != pstLayerCtx\0",
    /*1e3c*/ "[Func]:%s [Line]:%d [Info]:input illegal Param: rect(%d, %d, %d, %d) pic(w %d, h %d)\n\0\0\0",
    /*1e94*/ "[Func]:%s [Line]:%d [Info]:The zoomrect go beyond the input pic: rect(%d, %d, %d, %d) pic(w %d, h %d)\n\0\0",
    /*1efc*/ "[Func]:%s [Line]:%d [Info]:the ZoomRect.u32Width(%u) or ZoomRect.u32Height(%u) is samller than %d, there will be no zoom effective\n\0",
    /*1f80*/ "[Func]:%s [Line]:%d [Info]:VoLayer %d: g_astModules[HI_ID_VGS].pstExportFuncs is NULL!\n\0",
    /*1fd8*/ "[Func]:%s [Line]:%d [Info]:VoLayer %d: get vgs free task fail!\n\0",
    /*2018*/ "[Func]:%s [Line]:%d [Info]:Add VoLayer(%d) clear screen task failed!\n\0\0\0",
    /*2060*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d) job finish state is FAILED or CANCELED, u32VgsJobCnt = %u.\n\0",
    /*20c4*/ "NULL != pstNode\0",
    /*20d4*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*2114*/ "[Func]:%s [Line]:%d [Info]:Get screen frame callback err: vo does not be in STARTED state.\n\0",
    /*2170*/ "[Func]:%s [Line]:%d [Info]:Get chn frame err.\n\0\0",
    /*21a0*/ "[Func]:%s [Line]:%d [Info]:Get chn frame callback err: vo does not be in STARTED state.\n\0\0\0\0",
    /*21fc*/ "[Func]:%s [Line]:%d [Info]:Invalid VB, pool %d, addr 0x%llx!\n\0\0\0",
    /*223c*/ "[Func]:%s [Line]:%d [Info]:Unsupport input pixel format %d!\n\0\0\0\0",
    /*227c*/ "[Func]:%s [Line]:%d [Info]:Alloc channel ctx failed!\n\0\0\0",
    /*22b4*/ "[Func]:%s [Line]:%d [Info]:Get wbc frame callback err: vo does not be in STARTED state.\n\0\0\0\0",
    /*2310*/ "[Func]:%s [Line]:%d [Info]:wbc bg black callback err: vo does not be in STARTED state.\n\0",
    /*2368*/ "[Func]:%s [Line]:%d [Info]:Vo %d doesn't disabled!\n\0",
    /*239c*/ "[Func]:%s [Line]:%d [Info]:Vo%d's pub attr is illegal!\n\0",
    /*23d4*/ "[Func]:%s [Line]:%d [Info]:Vo%d's Usr SyncTiming is illegal!\n\0\0\0",
    /*2414*/ "[Func]:%s [Line]:%d [Info]:Vo %d only support 24/25/30/50/60 framerate which is %u!\n\0\0\0\0",
    /*246c*/ "[Func]:%s [Line]:%d [Info]:Vo %d doesn't set pub attr!\n\0",
    /*24a4*/ "[Func]:%s [Line]:%d [Info]:Vo %d doesn't set user IntfSync!\n\0\0\0\0",
    /*24e4*/ "[Func]:%s [Line]:%d [Info]:Can't set dev(%d)'s vtth after vo enabled!\n\0\0",
    /*252c*/ "[Func]:%s [Line]:%d [Info]:VoDev(%d) vtth %u illegal\n\0\0\0",
    /*2564*/ "[Func]:%s [Line]:%d [Info]:Invalid dev id %d! only physic vo dev support vtth\n\0\0",
    /*25b4*/ "[Func]:%s [Line]:%d [Info]:Vo device %d doesn't configured!\n\0\0\0\0",
    /*25f4*/ "[Func]:%s [Line]:%d [Info]:Vo device %d only support this in user sync.\n\0\0\0\0",
    /*2640*/ "[Func]:%s [Line]:%d [Info]:Vo device %d has enabled!\n\0\0\0",
    /*2678*/ "[Func]:%s [Line]:%d [Info]:VO%d's user sync info is illegal!\n\0\0\0",
    /*26b8*/ "[Func]:%s [Line]:%d [Info]:Vo device %d has enabled in uboot!\n\0\0",
    /*26f8*/ "[Func]:%s [Line]:%d [Info]:detectCycle (%u) is less than %u,set it to default (%u) !\n\0\0\0",
    /*2750*/ "[Func]:%s [Line]:%d [Info]:Vo %d's video layer %d doesn't disable!\n\0",
    /*2794*/ "[Func]:%s [Line]:%d [Info]:Vo Layer %d has not been binded!\n\0\0\0\0",
    /*27d4*/ "[Func]:%s [Line]:%d [Info]:HI_MPI_VO_SetVideoLayerPartitionMode is not supported!\n\0\0",
    /*2828*/ "[Func]:%s [Line]:%d [Info]:HI_MPI_VO_GetVideoLayerPartitionMode is not supported!\n\0\0",
    /*287c*/ "[Func]:%s [Line]:%d [Info]:Vo Layer %d can't set layer attr when the  layer has not been binded!\n\0\0\0",
    /*28e0*/ "[Func]:%s [Line]:%d [Info]:VoLayer%d's video attr is illegal!\n\0\0",
    /*2920*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d): change layer attr(not x or y in single mode), but layer doesn't disabled!\n\0\0",
    /*2994*/ "[Func]:%s [Line]:%d [Info]:VoDev %d  doesn't enable!\n\0\0\0",
    /*29cc*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d)'s FpsCtl info:Tfps=%d,FrmKey=%d,Ffps=%d\n\0",
    /*2a1c*/ "[Func]:%s [Line]:%d [Info]:VoLayer%d's video layer has been enabled!\n\0\0\0",
    /*2a64*/ "[Func]:%s [Line]:%d [Info]:VoLayer%d's video layer hasn't configured!\n\0\0",
    /*2aac*/ "[Func]:%s [Line]:%d [Info]:VoLayer %d does not support dynamic range %d when partition mode is multi(multi just support SDR8)\n\0\0",
    /*2b2c*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) is not bind any Dev!\n\0\0\0\0",
    /*2b6c*/ "[Func]:%s [Line]:%d [Info]:Vo device %d not open!\n\0\0",
    /*2ba0*/ "[Func]:%s [Line]:%d [Info]:VoLayer %d init pool failed!\n\0\0\0\0",
    /*2bdc*/ "[Func]:%s [Line]:%d [Info]:VoLayer%d 's video layer has not been enable!\n\0\0\0",
    /*2c28*/ "[Func]:%s [Line]:%d [Info]:VoLayer%d 's some chns(%d channels) is enabled!\n\0",
    /*2c74*/ "[Func]:%s [Line]:%d [Info]:Disable layer, VGS task time out!\n\0\0\0",
    /*2cb4*/ "[Func]:%s [Line]:%d [Info]:Disable layer(%d), buf free failed in SINGLE mode.\n\0\0",
    /*2d04*/ "[Func]:%s [Line]:%d [Info]:HI_MPI_VO_SetVideoLayerPriority is not supported!\n\0\0\0",
    /*2d54*/ "[Func]:%s [Line]:%d [Info]:HI_MPI_VO_GetVideoLayerPriority is not supported!\n\0\0\0",
    /*2da4*/ "[Func]:%s [Line]:%d [Info]:Vo Layer %d can't bind when the  layer has  been enable!\n\0\0\0\0",
    /*2dfc*/ "[Func]:%s [Line]:%d [Info]:Vo Layer %d can't bind when the  layer has  been binded dev %d!\n\0",
    /*2e58*/ "[Func]:%s [Line]:%d [Info]:VoLayer%d has binded to dev%d!\n\0\0",
    /*2e94*/ "[Func]:%s [Line]:%d [Info]:VoLayer%d's bind failed!\n\0\0\0\0",
    /*2ecc*/ "[Func]:%s [Line]:%d [Info]:Vo Layer %d can't unbind when the  layer has  been enable!\n\0\0",
    /*2f24*/ "[Func]:%s [Line]:%d [Info]:Vo Layer %d is not need to unbind when the layer has not be binded!\n\0",
    /*2f84*/ "[Func]:%s [Line]:%d [Info]:Set channel priority %d error!\n\0\0",
    /*2fc0*/ "[Func]:%s [Line]:%d [Info]:Channel rect(%d,%d,%d,%d) doesn't aligned!\n\0\0",
    /*3008*/ "[Func]:%s [Line]:%d [Info]:Channel rect(%d,%d,%d,%d) smaller than mix value (0,0,32,32) or exceed image size(%d,%d)!\n\0\0\0",
    /*3080*/ "[Func]:%s [Line]:%d [Info]:Set channel bDeflicker %d failed!\n\0\0\0",
    /*30c0*/ "[Func]:%s [Line]:%d [Info]:%d,%d,%d,(%d,%d,%d,%d),%d,%d\n\0\0\0\0",
    /*30fc*/ "[Func]:%s [Line]:%d [Info]:Vou layer(%d) hasn't configed!\n\0\0",
    /*3138*/ "[Func]:%s [Line]:%d [Info]:Vou channel(%d, %d) don't need set!\n\0",
    /*3178*/ "[Func]:%s [Line]:%d [Info]:Vou channel(%d, %d) parameter illegal!\n\0\0",
    /*31bc*/ "[Func]:%s [Line]:%d [Info]:Vou channel(%d, %d) aspect ratio mode(%d) illegal!\n\0\0",
    /*320c*/ "[Func]:%s [Line]:%d [Info]:Vou channel(%d, %d) aspect ratio (x:%d,y:%d,W:%d,H:%d) illegal!\n\0",
    /*3268*/ "[Func]:%s [Line]:%d [Info]:VO chn(%d, %d) aspect ratio bgcolor(0x%x) illegal!\n\0\0",
    /*32b8*/ "[Func]:%s [Line]:%d [Info]:VO layer(%d) does not support chn param in SINGLE mode\n\0\0",
    /*330c*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d, %d) hasn't been configed!\n\0",
    /*334c*/ "[Func]:%s [Line]:%d [Info]:Vou channel(%d, %d) don't need set aspect ratio !\n\0\0\0",
    /*339c*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) has not bind any dev!\n\0\0\0",
    /*33dc*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d), VoLayer can not set layer param by multi mode or on virt dev!\n\0\0",
    /*3444*/ "[Func]:%s [Line]:%d [Info]:VoLayer%d's video layer doesn't support layer param setting in multi mode !\n\0",
    /*34ac*/ "[Func]:%s [Line]:%d [Info]:VoLayer%d's video layer doesn't support layer param getting in multi mode or on virt dev !\n\0\0",
    /*3524*/ "[Func]:%s [Line]:%d [Info]:HI_MPI_VO_SetVideoLayerDecompress is not supported!\n\0",
    /*3574*/ "[Func]:%s [Line]:%d [Info]:HI_MPI_VO_GetVideoLayerDecompress is not supported!\n\0",
    /*35c4*/ "[Func]:%s [Line]:%d [Info]:bEnable should be HI_TRUE or HI_FALSE which is %d!\n\0\0",
    /*3614*/ "[Func]:%s [Line]:%d [Info]:crop rect (%d, %d, %u, %u) should align to 2!\n\0\0\0",
    /*3660*/ "[Func]:%s [Line]:%d [Info]:rect w(%u) should not be samller than %d, rect h(%u) should not be smaller than %d!\n\0",
    /*36d0*/ "[Func]:%s [Line]:%d [Info]:crop rect(%d, %d, %u, %u) is out of image(%u, %u)!\n\0\0",
    /*3720*/ "[Func]:%s [Line]:%d [Info]:Current chip doesn't support video layer crop!\n\0\0",
    /*376c*/ "[Func]:%s [Line]:%d [Info]:VoLayer%d set crop info err!\n\0\0\0\0",
    /*37a8*/ "[Func]:%s [Line]:%d [Info]:HI_MPI_VO_SetChnDispPos is not supported!\n\0\0\0",
    /*37f0*/ "[Func]:%s [Line]:%d [Info]:HI_MPI_VO_GetChnDispPos is not supported!\n\0\0\0",
    /*3838*/ "[Func]:%s [Line]:%d [Info]:Vo Layer %d can't enable chn when the  layer has not binded!\n\0\0\0\0",
    /*3894*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d, %d) video layer has not been enabled!\n\0",
    /*38e0*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d, %d) has been enabled!\n\0",
    /*391c*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d, %d) has been disabled!\n\0\0\0\0",
    /*395c*/ "[Func]:%s [Line]:%d [Info]:Channel(%d,%d) wait vpss send after query or vgs jobs time out!\n\0",
    /*39b8*/ "NULL != pstChnCtx->pstLastNode->pValue\0\0",
    /*39e0*/ "[Func]:%s [Line]:%d [Info]:vou chn(%d,%d)'s %d frame not released yet!\n\0",
    /*3a28*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d, %d) hasn't been binded!\n\0\0\0",
    /*3a68*/ "[Func]:%s [Line]:%d [Info]:Set framerate(%d) > full framerate %d *64!\n\0\0",
    /*3ab0*/ "[Func]:%s [Line]:%d [Info]:VO frame rate is equal to your setting!\n\0",
    /*3af4*/ "[Func]:%s [Line]:%d [Info]:Vo channel %d not enable!\n\0\0\0",
    /*3b2c*/ "[Func]:%s [Line]:%d [Info]:Channel(%d,%d) ,GetChnFrame timeout param can not be <-1  !\n\0",
    /*3b84*/ "[Func]:%s [Line]:%d [Info]:Get chn frame err: vo does not be in STARTED state.\n\0",
    /*3bd4*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d)  get chn LastNode time out\n\0",
    /*3c18*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d)  get chn lastNode is interrupted by signal!\n\0\0\0\0",
    /*3c70*/ "[Func]:%s [Line]:%d [Info]:Vo channel %d add vb(pool %d, phyaddr 0x%llx) failed!\n\0\0\0",
    /*3cc4*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d), user has released all frame, no frame need to release\n\0",
    /*3d24*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d), invalid VFrame block, pool %d, addr 0x%llx!\n\0\0\0",
    /*3d7c*/ "[Func]:%s [Line]:%d [Info]:VO chn(%d,%d):vo release chn Frame fail!Can't release again!(or user didn't get frame ever)\n\0",
    /*3df4*/ "[Func]:%s [Line]:%d [Info]:HI_MPI_VO_PauseChn is not supported!\n\0\0\0\0",
    /*3e38*/ "[Func]:%s [Line]:%d [Info]:HI_MPI_VO_StepChn is not supported!\n\0",
    /*3e78*/ "[Func]:%s [Line]:%d [Info]:HI_MPI_VO_ResumeChn is not supported!\n\0\0\0",
    /*3ebc*/ "[Func]:%s [Line]:%d [Info]:HI_MPI_VO_RefreshChn is not supported!\n\0\0",
    /*3f00*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d, %d) video layer has not been enabled!\n\0\0\0",
    /*3f50*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d, %d) video layer has been showed!\n\0\0",
    /*3f98*/ "[Func]:%s [Line]:%d [Info]:Channel(%d,%d) wait vpss send after query time out!\n\0",
    /*3fe8*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d, %d) video layer has been hided!\n\0\0\0",
    /*4030*/ "[Func]:%s [Line]:%d [Info]:Vo(%d)'s video layer has not configure!\n\0",
    /*4074*/ "[Func]:%s [Line]:%d [Info]:Vo(%d)'s video layer DispBufLen is 0, should between 3 and 15!\n\0\0",
    /*40d0*/ "[Func]:%s [Line]:%d [Info]:Vo(%d,%d) zoom in window rect(%d,%d,%d,%d) invalid, should align 2 and larger than (0,0,32,32)!\n\0",
    /*414c*/ "[Func]:%s [Line]:%d [Info]:Vo(%d,%d) zoom ratio(%d,%d,%d,%d) should smaller than 1000!\n\0",
    /*41a4*/ "[Func]:%s [Line]:%d [Info]:Vo(%d,%d) zoom in type %d invalid!\n\0\0",
    /*41e4*/ "[Func]:%s [Line]:%d [Info]:HI_MPI_VO_GetChnPts is not supported!\n\0\0\0",
    /*4228*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d) has not been enabled!\n\0\0",
    /*4268*/ "[Func]:%s [Line]:%d [Info]:Vo dev %d hasn't enable video layer!\n\0\0\0\0",
    /*42ac*/ "[Func]:%s [Line]:%d [Info]:Vo Layer(%d), this Layer do not support to get screen frame!\n\0\0\0\0",
    /*4308*/ "[Func]:%s [Line]:%d [Info]:Vo Layer %d, GetScreenFrame's timeout param can not be <-1  !\n\0\0\0",
    /*4364*/ "[Func]:%s [Line]:%d [Info]:Get screen frame err: vo does not be in STARTED state.\n\0\0",
    /*43b8*/ "[Func]:%s [Line]:%d [Info]:VoLayer %d  get Layer LastNode time out!\n\0\0\0\0",
    /*4400*/ "[Func]:%s [Line]:%d [Info]:VoLayer %d  get Layer LastNode is interrupted by signal!\n\0\0\0\0",
    /*4458*/ "pVoScrBlk != HI_NULL\0\0\0\0",
    /*4470*/ "HI_TRUE == s32Ret\0\0\0",
    /*4484*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d),VB_UserAdd err!\n\0",
    /*44bc*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d),HD  VoLayer  can't get&release screen frame!\n\0\0\0\0",
    /*4514*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d), invalid VFrame block, pool %d, phyaddr 0x%llx!\n\0",
    /*456c*/ "[Func]:%s [Line]:%d [Info]:VO Layer(%d):vo release screen Frame fail!\n\0\0",
    /*45b4*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d), display buffer len should be set before VoLayer enabled!\n\0\0\0",
    /*4618*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d), display buffer len %d out of range [%d, 15]!\n\0\0\0",
    /*4670*/ "[Func]:%s [Line]:%d [Info]:HI_MPI_VO_SetPlayToleration is not supported!\n\0\0\0",
    /*46bc*/ "[Func]:%s [Line]:%d [Info]:HI_MPI_VO_GetPlayToleration is not supported!\n\0\0\0",
    /*4708*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d), VoLayer has not bind!\n\0\0",
    /*4748*/ "[Func]:%s [Line]:%d [Info]:Vo(%d, %d), bClrAll flag  %d err!\n\0\0\0",
    /*4788*/ "[Func]:%s [Line]:%d [Info]:Channel(%d,%d) wait vgs finish job time out\n\0",
    /*47d0*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d), VoLayer can not take Border by using not vgs way!\n\0\0",
    /*482c*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d), VoLayer can not take Border in this block!\n\0",
    /*4880*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) HI_MPI_VO_SetVideoLayerBoundary is not supported!\n\0\0\0",
    /*48dc*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) HI_MPI_VO_GetVideoLayerBoundary is not supported!\n\0\0\0",
    /*4938*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d) HI_MPI_VO_SetChnBoundary is not supported!\n\0",
    /*498c*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d) HI_MPI_VO_GetChnBoundary is not supported!\n\0",
    /*49e0*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) has not been enable!\n\0\0\0\0",
    /*4a20*/ "[Func]:%s [Line]:%d [Info]:Vo(%d, %d), u32Threshold %d should be in [%d, %d] range!\n\0\0\0\0",
    /*4a78*/ "[Func]:%s [Line]:%d [Info]:VO layer(%d) do not support rotation in multi partition mode.\n\0\0\0",
    /*4ad4*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d), Angle of chn rot %d is wrong!It should be in[%d,%d)\n\0\0\0\0",
    /*4b34*/ "NULL != pstChnCtx\0\0\0",
    /*4b48*/ "NULL != pstChnNode\0\0",
    /*4b5c*/ "[Func]:%s [Line]:%d [Info]:chn(%d, %d),has query not send, can not reset pts, querycnt: %u!\n\0\0\0\0",
    /*4bbc*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d) , pVFrame->u64PTS = %llu,pstChnPtsInfo->u64PtsScale=%llu\n\0\0\0",
    /*4c20*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d, %d) new + do!\n\0",
    /*4c54*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d, %d) old + undo!\n\0\0\0",
    /*4c8c*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d) , Frame->PTS = %llu,ChnPtsInfo->PtsScale=%llu,u64PtsPreQuery=%llu\n\0\0",
    /*4cf8*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d, %d) pause, old + undo!\n\0\0\0\0",
    /*4d38*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d, %d) total leave disp %d < disp threshold 3!\n\0\0\0",
    /*4d8c*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d, %d) total leave disp %d >= disp threshold 3, old + undo!\n\0\0",
    /*4dec*/ "[Func]:%s [Line]:%d [Info]:Channel(%d,%d) reject dummy frame(pts=-1), new+undo+notupdate!\n\0\0",
    /*4e48*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d, %d) invalid picture!\n\0\0",
    /*4e84*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d, %d) new + undo + notupdate!\n\0\0\0",
    /*4ec8*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d, %d) hasn't been enabled!\n\0\0",
    /*4f08*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d, %d) bWaitQrySnd, don't answer query now!\n\0\0",
    /*4f58*/ "[Func]:%s [Line]:%d [Info]:[Layer%d chn%d]:Dest VB Width:%d  Height:%d is illegal!\n\0",
    /*4fac*/ "[Func]:%s [Line]:%d [Info]:SYS_GetVBCfg is NULL!\n\0\0\0",
    /*4fe0*/ "[Func]:%s [Line]:%d [Info]:get mmz name fail!\n\0\0",
    /*5010*/ "[Func]:%s [Line]:%d [Info]:[Layer%d chn%d]:get buffer fail,size %d !\n\0\0\0",
    /*5058*/ "[Func]:%s [Line]:%d [Info]:can't get VGS export function, it may be VGS module has not been loaded\n\0",
    /*50bc*/ "[Func]:%s [Line]:%d [Info]:VoLayer %d Chn: %d get vgs free task fail!\n\0\0",
    /*5104*/ "[Func]:%s [Line]:%d [Info]:Layer: %d, Chn %d ROTATE task get vb fail, w:%u, h:%u\n\0\0\0",
    /*5158*/ "[Func]:%s [Line]:%d [Info]:Chn(%d, %d) add vb fail!\n\0\0\0\0",
    /*5190*/ "[Func]:%s [Line]:%d [Info]:VGS job start fail!\n\0",
    /*51c0*/ "[Func]:%s [Line]:%d [Info]:VO(%d,%d):Vgs cancel job fail with 0x%x!\n\0\0\0\0",
    /*5208*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d) VgsEndJob failed\n\0\0\0",
    /*5244*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d) VgsCancelJob failed\n\0\0\0\0",
    /*5284*/ "[Func]:%s [Line]:%d [Info]:Chn(%d, %d) sub vb fail!\n\0\0\0\0",
    /*52bc*/ "[Func]:%s [Line]:%d [Info]:Send pic to voChn(%d, %d) failed!\n\0\0\0",
    /*52fc*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d, %d) is exiting, will not add rotation task!\n\0\0\0",
    /*5350*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d, %d) rotation task is too many!\n\0\0\0\0",
    /*5398*/ "[Func]:%s [Line]:%d [Info]:Channel(%d,%d) received bad video buf!\n\0\0",
    /*53dc*/ "[Func]:%s [Line]:%d [Info]:Channel(%d,%d) do rotate failed.\n\0\0\0\0",
    /*541c*/ "[Func]:%s [Line]:%d [Info]:Channel(%d,%d) Buffer Overflow with busy(%u) waterline(%u)!\n\0",
    /*5474*/ "[Func]:%s [Line]:%d [Info]:Channel(%d,%d) doesn't have free node!\n\0\0",
    /*54b8*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d) not exist\n\0\0",
    /*54ec*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d) is not enable\n\0\0",
    /*5524*/ "[Func]:%s [Line]:%d [Info]:chn (%d %d) vgs task finish status is not ok!\n\0\0\0",
    /*5570*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) chn(%d) pstChnNode=0x%p free node num: %u\n\0\0\0",
    /*55c4*/ "[Func]:%s [Line]:%d [Info]:Vo(%d,%d) send invalid picture!\n\0",
    /*5600*/ "TRUE\0\0\0\0",
    /*5608*/ "FALSE\0\0\0",
    /*5610*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d, %d) hasn't been enabled!\n\0\0\0\0",
    /*5654*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d, %d) has been disabled!\n\0\0",
    /*5694*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d) does not support dynamic range %d frame!\n\0\0\0",
    /*56e8*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d) does not support XDR frame!\n\0\0\0\0",
    /*5730*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d) do not support SDR(SDR8,SDR10) to HDR(HDR10,HLG,SLF)!\n\0\0",
    /*5790*/ "[Func]:%s [Line]:%d [Info]:Layer(%d) do not support this frame\n\0",
    /*57d0*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d, %d) receive dest pic is null!\n\0\0\0",
    /*5818*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) VoChn(%d) enter sd vdec send, bBlock = %s\n\0\0\0",
    /*586c*/ "[Func]:%s [Line]:%d [Info]:Invalid VB\n\0\0",
    /*5894*/ "[Func]:%s [Line]:%d [Info]:pic width(%d) is smaller than min width(%d) or pic height(%d) is smaller than min height(%d)!!\n\0\0",
    /*5910*/ "[Func]:%s [Line]:%d [Info]:pic width(%d) and pic height(%d) should be aligned to 2!!\n\0\0\0",
    /*5968*/ "[Func]:%s [Line]:%d [Info]:illegal param: in img CompressMode %d\n\0\0\0",
    /*59ac*/ "[Func]:%s [Line]:%d [Info]:illegal param: in img VideoFormat %d\n\0\0\0\0",
    /*59f0*/ "[Func]:%s [Line]:%d [Info]:illegal param: in img Frame Field %d\n\0\0\0\0",
    /*5a34*/ "[Func]:%s [Line]:%d [Info]:illegal param: err inimg head addr(Y:%llX,C:%llX)\n\0\0\0",
    /*5a84*/ "[Func]:%s [Line]:%d [Info]:illegal param: image dynamic range %d\n\0\0\0",
    /*5ac8*/ "[Func]:%s [Line]:%d [Info]:Channel(%d,%d) ,UsrSendFrame timeout param can not be <-1  !\n\0\0\0\0",
    /*5b24*/ "[Func]:%s [Line]:%d [Info]:Channel(%d,%d) received user frame time out!\n\0\0\0\0",
    /*5b70*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d, %d) maybe receive sys_send frame while receiving user frame!\n\0\0",
    /*5bd4*/ "[Func]:%s [Line]:%d [Info]:Channel(%d,%d) reject dummy frame(pts=-1)!\n\0\0",
    /*5c1c*/ "[Func]:%s [Line]:%d [Info]:Channel(%d,%d) gap is 0!\n\0\0\0\0",
    /*5c54*/ "[Func]:%s [Line]:%d [Info]:Channel(%d,%d) doesn't receive this frame, pls check pts!\n\0\0\0",
    /*5cac*/ "[Func]:%s [Line]:%d [Info]:Vo(%d,%d) fist show!\n\0\0\0\0",
    /*5ce0*/ "[Func]:%s [Line]:%d [Info]:Vo(%d,%d) return last!\n\0\0",
    /*5d14*/ "[Func]:%s [Line]:%d [Info]:Vo(%d,%d) pstLastImage->u32Displayed=%d,pstLastImage->u32ShouldDisp=%d\n\0\0",
    /*5d78*/ "[Func]:%s [Line]:%d [Info]:Vo(%d,%d) return last, get busy failed!\n\0",
    /*5dbc*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d)----------sub blk vb-----------\n\0",
    /*5e04*/ "[Func]:%s [Line]:%d [Info]:Vo(%d,%d) return last, shoulddisp > disped!\n\0",
    /*5e4c*/ "[Func]:%s [Line]:%d [Info]:Vo(%d,%d) return last, lastnode still need to show!\n\0",
    /*5e9c*/ "pstChnCtx\0\0\0",
    /*5ea8*/ "[Func]:%s [Line]:%d [Info]:chn(%d,%d) Get osd err.\n\0",
    /*5edc*/ "HI_SUCCESS == s32Ret\0\0\0\0",
    /*5ef4*/ "[Func]:%s [Line]:%d [Info]:chn(%d,%d) Get Cover err.\n\0\0\0",
    /*5f2c*/ "[Func]:%s [Line]:%d [Info]:Get channel valid data failed!\n\0\0",
    /*5f68*/ "[Func]:%s [Line]:%d [Info]:VoLayer %d get vgs free task fail!\n\0\0",
    /*5fa8*/ "[Func]:%s [Line]:%d [Info]:chn(%d,%d) add task fail 0x%x!\n\0\0",
    /*5fe4*/ "[Func]:%s [Line]:%d [Info]:Osd enable or not %d\n\0\0\0\0",
    /*6018*/ "[Func]:%s [Line]:%d [Info]:Cover enable or not %d\n\0\0",
    /*604c*/ "VoChn >= 0 && VoChn < VO_MAX_CHN_NUM\0\0\0\0",
    /*6074*/ "[Func]:%s [Line]:%d [Info]:Layer(%d) chn(%d) discards data!\n\0\0\0\0",
    /*60b4*/ "[Func]:%s [Line]:%d [Info]:VoLayer %d can't add vgs job again, there is %u processing vgs job now!\n\0",
    /*6118*/ "NULL != pstDispNode\0",
    /*612c*/ "[Func]:%s [Line]:%d [Info]:Vo(%d) query free node index %u in display list failed!\n\0",
    /*6180*/ "[Func]:%s [Line]:%d [Info]:VIRT Vo(%d) get disp vb failed!Please set bigger display buflen.\n\0\0\0\0",
    /*61e0*/ "[Func]:%s [Line]:%d [Info]:Vo(%d) get disp vb failed! Please set bigger display buflen.\n\0\0\0\0",
    /*623c*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d),pVgsExportFunc->pfnVgsBeginJob called failed, s32Ret = 0x%x\n\0",
    /*62a0*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) vgs job(%d) vgs task count = %d.\n\0\0\0\0",
    /*62ec*/ "[Func]:%s [Line]:%d [Info]: VoLayer(%d) VgsEndJob failed\n\0\0\0",
    /*6328*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) u32VgsTaskCnt == 0.\n\0",
    /*6364*/ "[Func]:%s [Line]:%d [Info]:VoLayer %d can't process vouchnvgsbypass, there is a processing vgs job now!\n\0\0\0\0",
    /*63d0*/ "[Func]:%s [Line]:%d [Info]:Vo(%d) get free display list failed!\n\0\0\0\0",
    /*6414*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d)+++++++++++add blk vb+++++++++++\n\0",
    /*645c*/ "[Func]:%s [Line]:%d [Info]:HI_MPI_VO_GetChnRegionLuma is not supported!\n\0\0\0\0",
    /*64a8*/ "[Func]:%s [Line]:%d [Info]:allocate region buffer failed!\n\0\0",
    /*64e4*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d):u32RegionNum %d err!,should be [1,%d]\n\0\0",
    /*6534*/ "[Func]:%s [Line]:%d [Info]:VO get region Luma osal_copy_from_user fail!!!\n\0\0",
    /*6580*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d):copy luma region config,pstRegion is invalid!\n\0\0",
    /*65d8*/ "[Func]:%s [Line]:%d [Info]:The bTransparentTransmit %d is illegal!\n\0",
    /*661c*/ "[Func]:%s [Line]:%d [Info]:The bExitDev %d is illegal!\n\0",
    /*6654*/ "[Func]:%s [Line]:%d [Info]:The bWbcBgBlackEn %d is illegal!\n\0\0\0\0",
    /*6694*/ "[Func]:%s [Line]:%d [Info]:The bDevClkExtEn %d is illegal!\n\0",
    /*66d0*/ "[Func]:%s [Line]:%d [Info]:[Func:%s][Line:%d] Display busy buffer empty!\n\0\0\0",
    /*671c*/ "[Func]:%s [Line]:%d [Info]:[Func:%s][Line:%d] VoLayer(%d) last node is not NULL!\n\0\0\0",
    /*6770*/ "NULL != *ppstBufBlk\0",
    /*6784*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*67c4*/ "[Func]:%s [Line]:%d [Info]:Unsupport pixel format!\n\0",
    /*67f8*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) is not bind any Dev!\n\0\0\0\0",
    /*6838*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) addr error\n\0\0",
    /*686c*/ "[Func]:%s [Line]:%d [Info]:Aspect Ratio Mode is error,  which is %d!\n\0\0\0",
    /*68b4*/ "[Func]:%s [Line]:%d [Info]:Aspect Ratio (X=%d, Y=%d, Width=%d, Height=%d) is error!\n\0\0\0\0",
    /*690c*/ "[Func]:%s [Line]:%d [Info]:Aspect Ratio Color 0x%x is error!\n\0\0\0",
    /*694c*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) unkown aspect ratio mode %d\n\0",
    /*6990*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) aspect ratio AUTO mode x:%d,y:%d,w:%u,h:%u\n\0\0",
    /*69e4*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) aspect ratio MANUAL mode only support position settings\n\0",
    /*6a44*/ "HI_INVALID_DEV != VoHwDev\0\0\0",
    /*6a60*/ "HI_INVALID_LAYER != VoHwLayer\0\0\0",
    /*6a80*/ "[Func]:%s [Line]:%d [Info]:VoLyaer(%d) calculate aspect ratio failed, set to none aspect\n\0\0\0",
    /*6adc*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d),stRect.w = %d,h=%d\n\0",
    /*6b18*/ "[Func]:%s [Line]:%d [Info]:VoChn(%d,%d),stVideoRect.w = %d,h=%d\n\0\0\0\0",
    /*6b5c*/ "[Func]:%s [Line]:%d [Info]:Unknown AspectRatio Mode : %d\n\0\0\0",
    /*6b98*/ "[Func]:%s [Line]:%d [Info]:Frame resolution is not equal to channel rect or image size, BufLen is %d!\n\0\0",
    /*6c00*/ "[Func]:%s [Line]:%d [Info]:Frame resolution is equal to channel rect and image size!\n\0\0\0",
    /*6c58*/ "[Func]:%s [Line]:%d [Info]:Received unmatched PixFormat video buf, expectd %d, received %d!\n\0\0\0\0",
    /*6cb8*/ "[Func]:%s [Line]:%d [Info]:Received unmatched VideoFormat video buf, expectd linear, received %d!\n\0\0",
    /*6d1c*/ "NULL != pstChnCtx->pstLastNode->pValue\0\0",
    /*6d44*/ "[Func]:%s [Line]:%d [Info]:Pixel format equal or not %d\n\0\0\0\0",
    /*6d80*/ "[Func]:%s [Line]:%d [Info]:Channel node is NULL! \n\0\0",
    /*6db4*/ "[Func]:%s [Line]:%d [Info]:Enable and show channel num %d\n\0\0",
    /*6df0*/ "TRUE\0\0\0\0",
    /*6df8*/ "FALSE\0\0\0",
    /*6e00*/ "[Func]:%s [Line]:%d [Info]:Vo(%d) bDisp = %s\n\0\0\0",
    /*6e30*/ "[Func]:%s [Line]:%d [Info]:Vou video layer(%d) decompress err!\n\0",
    /*6e70*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) VgsBypass = %s\n\0\0",
    /*6ea8*/ "[Func]:%s [Line]:%d [Info]:VGS is not bypass, DispBufLen can not be zero!\n\0\0",
    /*6ef4*/ "[Func]:%s [Line]:%d [Info]:VouDispProcess the valid data!\n\0\0",
    /*6f30*/ "[Func]:%s [Line]:%d [Info]:VouDispProcess no data!\n\0",
    /*6f64*/ "[Func]:%s [Line]:%d [Info]:\0",
    /*6f80*/ "pixel format(%d) is invalid!\n\0\0\0",
    /*6fa0*/ "HI_SUCCESS == s32Ret\0\0\0\0",
    /*6fb8*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*6ff8*/ "graphics layer %d is not support to adjust csc!\n\0\0\0\0",
    /*702c*/ "Null ptr!\n\0\0",
    /*7038*/ "graphics layer %d is illegal!\n\0\0",
    /*7058*/ "graphics layer %d is not support to get csc!\n\0\0\0",
    /*7088*/ "\r\n\0\0",
    /*708c*/ "-----GRAPHIC LAYER CSC PARAM-----------------------------\n\0\0",
    /*70c8*/ "  Matrix\0\0\0\0",
    /*70d4*/ " LAYERID\0\0\0\0",
    /*70e0*/ "%s%s%s%s%s%s\n\0\0\0",
    /*70f0*/ "    Satu\0\0\0\0",
    /*70fc*/ "     Hue\0\0\0\0",
    /*7108*/ "    Cont\0\0\0\0",
    /*7114*/ "    Luma\0\0\0\0",
    /*7120*/ "%8u%8u%8u%8u%8u%8u\n\0",
    /*7134*/ "[Func]:%s [Line]:%d [Info]:vo alloc node failed!\r\n\0\0",
    /*7168*/ "NULL != pstNode\0",
    /*7178*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*71b8*/ "[Func]:%s [Line]:%d [Info]:vo release free node;0x%p!\r\n\0",
    /*71f0*/ "0 == s32Ret\0",
    /*71fc*/ "HI_SUCCESS == s32Ret\0\0\0\0",
    /*7214*/ "[Func]:%s [Line]:%d [Info]:The four points of the coverex ([%d, %d], [%d, %d], [%d, %d], [%d, %d]) is on vertical or horizental line\n\0\0\0",
    /*729c*/ "[Func]:%s [Line]:%d [Info]:VoDev %d is illegal.\n\0\0\0\0",
    /*72d0*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) not support bit width %d\n\0\0\0\0",
    /*7314*/ "[Func]:%s [Line]:%d [Info]:Vo VoLayer(%d) CSC matrix type(%d) should be [0, %d]!\n\0\0\0",
    /*7368*/ "[Func]:%s [Line]:%d [Info]:Vo VoLayer(%d) CSC contrast value %d out of range!\n\0\0",
    /*73b8*/ "[Func]:%s [Line]:%d [Info]:Vo VoLayer(%d) CSC hue value %d out of range!\n\0\0\0",
    /*7404*/ "[Func]:%s [Line]:%d [Info]:Vo VoLayer(%d) CSC luma value %d out of range!\n\0\0",
    /*7450*/ "[Func]:%s [Line]:%d [Info]:Vo VoLayer(%d) CSC satuature value %d out of range!\n\0",
    /*74a0*/ "0 != pst_vid_cfg->vid_iw\0\0\0\0",
    /*74bc*/ "\nASSERT at:\n  >Function : %s\n  >Line No. : %d\n  >Condition: %s\n\0",
    /*74fc*/ "0 != pst_vid_cfg->vid_ih\0\0\0\0",
    /*7518*/ "0 != pst_vid_cfg->vid_ow\0\0\0\0",
    /*7534*/ "0 != pst_vid_cfg->vid_oh\0\0\0\0",
    /*7550*/ "[Func]:%s [Line]:%d [Info]:Usr SyncTime Hact(%u) Hbb(%u) Hfb(%u) can't be 0!\n\0\0\0",
    /*75a0*/ "[Func]:%s [Line]:%d [Info]:Usr SyncTime Vact(%u) can't be smaller than 100 and Vbb(%u) Vfb(%u) can't be 0!\n\0",
    /*760c*/ "[Func]:%s [Line]:%d [Info]:Usr SyncTime Hpw(%u) Vpw(%u) can't be 0!\n\0\0\0\0",
    /*7654*/ "[Func]:%s [Line]:%d [Info]:Usr SyncTime BVact(%u) BVbb(%u) BVfb(%u) can't be 0 when interlaced timing !\n\0\0\0\0",
    /*76c0*/ "[Func]:%s [Line]:%d [Info]:VoDev(%d) pll value (Fbdiv,Frac,Refdiv,Postdiv1,Postdiv2)=(0x%x,0x%x,0x%x,0x%x,0x%x) illegal .\n\0\0",
    /*773c*/ "[Func]:%s [Line]:%d [Info]:VoDev(%d) lcd_mclk value %d illegal.\n\0\0\0\0",
    /*7780*/ "[Func]:%s [Line]:%d [Info]:VoDev(%d) clk source %d illegal.\n\0\0\0\0",
    /*77c0*/ "[Func]:%s [Line]:%d [Info]:VoDev(%d) is illegal.\n\0\0\0",
    /*77f4*/ "[Func]:%s [Line]:%d [Info]:VO(%d) div mode %d is illegal,it must be in [%d,%d].\n\0\0\0\0",
    /*7848*/ "[Func]:%s [Line]:%d [Info]:VO(%d) pre div %d is illegal,it must be in [%d,%d].\n\0",
    /*7898*/ "[Func]:%s [Line]:%d [Info]:VO(%d) bClkReverse:%d is illegal, it must be HI_TRUE or HI_FALSE.\n\0\0\0",
    /*78f8*/ "[Func]:%s [Line]:%d [Info]:VO dev %d is illegal.\n\0\0\0",
    /*792c*/ "[Func]:%s [Line]:%d [Info]:DHD0 INTTERUPT\n\0\0",
    /*7958*/ "[Func]:%s [Line]:%d [Info]:DHD1 INTTERUPT\n\0\0",
    /*7984*/ "[Func]:%s [Line]:%d [Info]:WBC DHDOVER INTTERUPT\n\0\0\0",
    /*79b8*/ "(VO_DEV_DHD0 == VoDev)\0\0",
    /*79d0*/ "[Func]:%s [Line]:%d [Info]:Device HD%d does not support intf(%d) !\n\0",
    /*7a14*/ "[Func]:%s [Line]:%d [Info]:Hdmi is not support!\0",
    /*7a44*/ "[Func]:%s [Line]:%d [Info]:Vo%d's intfsync %d illegal, vo doesn't support interlace sync %d!\n\0\0\0",
    /*7aa4*/ "[Func]:%s [Line]:%d [Info]:For HDMI intface, Vo%d's intfsync %d illegal!\n\0\0\0",
    /*7af0*/ "[Func]:%s [Line]:%d [Info]:The IntfSync is not support!\0",
    /*7b28*/ "[Func]:%s [Line]:%d [Info]:For MIPI OR MIPI_SLAVE intface, Vo%d's intfsync %d illegal!\n\0",
    /*7b80*/ "[Func]:%s [Line]:%d [Info]:For BT1120 intface, Vo%d's intfsync %d illegal!\n\0",
    /*7bcc*/ "[Func]:%s [Line]:%d [Info]:For BT656 intface,Vo%d's intfsync %d illegal!\n\0\0\0",
    /*7c18*/ "[Func]:%s [Line]:%d [Info]:For LCD 8bit intface,Vo%d's intfsync %d illegal!\n\0\0\0\0",
    /*7c68*/ "[Func]:%s [Line]:%d [Info]:For LCD 6bit intface,Vo%d's intfsync %d illegal!\n\0\0\0\0",
    /*7cb8*/ "[Func]:%s [Line]:%d [Info]:For LCD 16bit intface,Vo%d's intfsync %d illegal!\n\0\0\0",
    /*7d08*/ "[Func]:%s [Line]:%d [Info]:For LCD 24bit intface,Vo%d's intfsync %d illegal!\n\0\0\0",
    /*7d58*/ "[Func]:%s [Line]:%d [Info]:Vo%d check device's interface %d illegal!\n\0\0\0",
    /*7da0*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) get hal data format %d\n\0\0",
    /*7de0*/ "[Func]:%s [Line]:%d [Info]:Channel rect(x:%d,y:%d) is illegal, should smaller than display rect(w:%d,h:%d).\n\0\0\0\0",
    /*7e50*/ "[Func]:%s [Line]:%d [Info]:Display frame size(w:%d,h:%d) is illegal, should not bigger than channel rect(w:%d,h:%d).\n\0\0\0",
    /*7ec8*/ "[Func]:%s [Line]:%d [Info]:Display frame size(w:%d,h:%d) is illegal, should be bigger than min frame(w:%d,h:%d).\n\0\0\0",
    /*7f3c*/ "[Func]:%s [Line]:%d [Info]:Vo Luma dcmp err!\n\0\0\0",
    /*7f6c*/ "[Func]:%s [Line]:%d [Info]:Vo Chroma dcmp err!\n\0",
    /*7f9c*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) ICE(%d) dcmp %s bitstream is not enough!\n\0\0\0\0",
    /*7ff0*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) ICE(%d) dcmp %s bitstream is too much!\n\0\0",
    /*8040*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d) ICE(%d) dcmp %s bus err\n\0",
    /*8080*/ "enHCoef <= VOU_ZOOM_COEF_BUTT\0\0\0",
    /*80a0*/ "enVCoef <= VOU_ZOOM_COEF_BUTT\0\0\0",
    /*80c0*/ "[Func]:%s [Line]:%d [Info]:Vo Layer not support bind VoDev!\n\0\0\0\0",
    /*8100*/ "[Func]:%s [Line]:%d [Info]:layer: %d, invalid chn id: %d!\n\0\0",
    /*813c*/ "[Func]:%s [Line]:%d [Info]:Unknow Dev %d!!\n\0",
    /*8168*/ "[Func]:%s [Line]:%d [Info]:DHD0 INTTERRUPT\n\0",
    /*8194*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d), display area Rect(%d, %d, %d,%d) is illegaled, should between (32, 32) and (%d, %d)\n\0\0\0\0",
    /*8214*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d), image size(%d, %d) is illegaled, should biger than (32,32)!\n\0\0\0\0",
    /*827c*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d), image size(%d, %d) or disp rect (%d, %d, %d, %d) dosen't aligned by 2 pixels!\n\0\0",
    /*82f4*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d), stImageSize.u32Height (%u) do not aligned by 4 pixels when the pix format is 420, may display wrong!\n\0\0\0",
    /*8384*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d)'s pixel format %d doesn't support!\n\0\0",
    /*83d0*/ "[Func]:%s [Line]:%d [Info]:HD (%d)layer disp rect width(%d) height(%d) can't be larger than 1920x1920!\n\0",
    /*8438*/ "[Func]:%s [Line]:%d [Info]:HD (%d)layer disp rect width(%d) height(%d) can't be larger than 3840x3840!\n\0",
    /*84a0*/ "[Func]:%s [Line]:%d [Info]:VoLayer(%d)'s display frame rate %d exceeds normal range[1~%d]!\n\0",
    /*84fc*/ "[Func]:%s [Line]:%d [Info]:VoLayer%d's bDoubleFrame can only to be setted HI_FALSE!\n\0\0\0\0",
    /*8554*/ "[Func]:%s [Line]:%d [Info]:VoLayer%d's bClusterMode %d illegal!\n\0\0\0\0",
    /*8598*/ "[Func]:%s [Line]:%d [Info]:VoLayer%d's enDstDynamicRange %d is illegal!\n\0\0\0\0",
    /*85e4*/ "[Func]:%s [Line]:%d [Info]:only supports receiving 8bit data(DYANMIC RANGE:SDR8)\n\0\0\0",
    /*8638*/ "[Func]:%s [Line]:%d [Info]:only supports receiving BT601 BT709 and USER COLOR GAMUT!\n\0\0\0",
    /*8690*/ "[Func]:%s [Line]:%d [Info]:only supports receiving VIDEO_FORMAT_LINEAR!\n\0\0\0\0",
    /*86dc*/ "[Func]:%s [Line]:%d [Info]:not supports receiving compress mode && low delay!\n\0\0",
    /*872c*/ "[Func]:%s [Line]:%d [Info]:Vo(%d)'s video layer DispBufLen is 0, should between 3 and 15!\n\0\0",
    /*8788*/ "[Func]:%s [Line]:%d [Info]:The chn(%d,%d)pstBorder->bEnable %d is illegal!\n\0",
    /*87d4*/ "[Func]:%s [Line]:%d [Info]:The chn(%d,%d) pstBorder->stBorder.u32TopWidth %d is illegal!\n\0\0\0",
    /*8830*/ "[Func]:%s [Line]:%d [Info]:The BottomWidth(%u) or LeftWidth(%u) or RightWidth(%u) is not the same with the TopWidth(%u) of the border, they will be set to TopWidth!\n\0\0\0",
    /*88d8*/ "[Func]:%s [Line]:%d [Info]:The chn(%d,%d) border color %#x is wrong, should be [0, 0xFFFFFF]\n\0\0\0",
    /*8938*/ "[Func]:%s [Line]:%d [Info]:VoLayer %d not support the decompress mode [%d]!\n\0\0\0\0",
    /*8988*/ "[Func]:%s [Line]:%d [Info]:Vou Layer(%d) aspect ratio mode(%d) illegal!\n\0\0\0\0",
    /*89d4*/ "[Func]:%s [Line]:%d [Info]:Vou Layer(%d) aspect ratio size(%d,%d) should be equal to the layer image size(%d,%d) illegal!\n\0\0",
    /*8a50*/ "[Func]:%s [Line]:%d [Info]:VO Layer(%d) aspect ratio (x:%d,y:%d,W:%d,H:%d) illegal!\n\0\0\0\0",
    /*8aa8*/ "[Func]:%s [Line]:%d [Info]:VO Layer(%d) aspect ratio bgcolor(0x%x) illegal!\n\0\0\0\0",
    /*8af8*/ "[Func]:%s [Line]:%d [Info]:Display buffer length %d is illegal!\n\0\0\0\0",
    /*8b3c*/ "HI_NULL != pstCapacity\0\0",
    /*8b54*/ "0\0\0\0",
    /*8b58*/ "%s does not support rand mode\n\0\0",
    /*8b78*/ "[Func]:%s [Line]:%d [Info]:VO device %d vtthd : %d is not in logic [%d,%d], set to default minimum: %d\n\0",
    /*8be0*/ "[Func]:%s [Line]:%d [Info]:VOU Dev(%d) low band width! %d\n\0\0",
    /*8c1c*/ "[Func]:%s [Line]:%d [Info]:VO Dev(%d) BUS ERROR! %lld\n\0\0",
    /*8c54*/ "\n-----DEV LowBandwidth Info----------------------------------------------------------------\n\0\0\0\0",
    /*8cb4*/ "LowBandwidth\0\0\0\0",
    /*8cc4*/ "DevId\0\0\0",
    /*8ccc*/ "%8s%15s\n\0\0\0\0",
    /*8cd8*/ "%8d%15d\n\0\0\0\0",
    /*8ce4*/ "\r\n\0\0",
    /*8ce8*/ "ioremap_nocache failed\n\0",
    /*8d00*/ "Error,HAL_DISP_SetRegUp Select Wrong CHANNEL ID\n\0\0\0\0",
    /*8d34*/ "/home/pub/himpp_git_hi3516cv500/himpp/board/mpp/cbb/vo/arch/hi3516cv500/hal/vou_hal.c\0\0\0",
    /*8d8c*/ "Error layer id found in %s,%s,%d\n\0\0\0",
    /*8db0*/ "[Func]:%s [Line]:%d [Info]:\0",
    /*8dcc*/ "graphics layer not support bind dev!\n\0\0\0",
    /*8df4*/ "Vo CSC matrix type(%d) should be rgb to bt601/bt709 only!\n\0\0",
    /*8e30*/ "Vo device CSC contrast value %d out of range!\n\0\0",
    /*8e60*/ "Vo device CSC hue value %d out of range!\n\0\0\0",
    /*8e8c*/ "Vo device CSC luma value %d out of range!\n\0\0",
    /*8eb8*/ "Vo device CSC satuature value %d out of range!\n\0",
    /*8ee8*/ "enCscMatrix %d err, should only be RGB to YUV matrix\n\0\0\0",
    /*8f20*/ "gfxLayer(%u) is invalid!\n\0\0\0",
    /*8f3c*/ "cannot find vou IRQ\n\0\0\0\0",
    /*8f54*/ "hi35xx_vo\0"
};

unsigned char data[3192] = {
    /*0000*/ 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0010*/ 0x02, 0x00, 0x00, 0x00, 0x5a, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0020*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0030*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0040*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0050*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0060*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0070*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0080*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0090*/ 0x00, 0x00, 0x00, 0x00, 0x76, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00a0*/ 0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00b0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00c0*/ 0xcc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00d0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00e0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00f0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0100*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0110*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0120*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0130*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0140*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0150*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0160*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0170*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0180*/ 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0190*/ 0x00, 0x00, 0x20, 0x01, 0x16, 0x00, 0x02, 0x00, 0xd0, 0x02, 0x84, 0x00, 0x0c, 0x00, 0x01, 0x00, 
    /*01a0*/ 0x20, 0x01, 0x17, 0x00, 0x02, 0x00, 0x7e, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*01b0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*01c0*/ 0x00, 0x00, 0xf0, 0x00, 0x12, 0x00, 0x04, 0x00, 0xd0, 0x02, 0x77, 0x00, 0x13, 0x00, 0x01, 0x00, 
    /*01d0*/ 0xf0, 0x00, 0x13, 0x00, 0x04, 0x00, 0x7c, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*01e0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*01f0*/ 0x01, 0x00, 0x38, 0x04, 0x29, 0x00, 0x04, 0x00, 0x80, 0x07, 0xc0, 0x00, 0x7e, 0x02, 0x01, 0x00, 
    /*0200*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x2c, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0210*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0220*/ 0x01, 0x00, 0x38, 0x04, 0x29, 0x00, 0x04, 0x00, 0x80, 0x07, 0xc0, 0x00, 0x10, 0x02, 0x01, 0x00, 
    /*0230*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x2c, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0240*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0250*/ 0x01, 0x00, 0x38, 0x04, 0x29, 0x00, 0x04, 0x00, 0x80, 0x07, 0xc0, 0x00, 0x58, 0x00, 0x01, 0x00, 
    /*0260*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x2c, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0270*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0280*/ 0x01, 0x00, 0xd0, 0x02, 0x19, 0x00, 0x05, 0x00, 0x00, 0x05, 0x04, 0x01, 0xb8, 0x01, 0x01, 0x00, 
    /*0290*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x28, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*02a0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*02b0*/ 0x01, 0x00, 0xd0, 0x02, 0x19, 0x00, 0x05, 0x00, 0x00, 0x05, 0x04, 0x01, 0x6e, 0x00, 0x01, 0x00, 
    /*02c0*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x28, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*02d0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*02e0*/ 0x01, 0x00, 0x1c, 0x02, 0x14, 0x00, 0x02, 0x00, 0x80, 0x07, 0xc0, 0x00, 0x10, 0x02, 0x68, 0x04, 
    /*02f0*/ 0x1c, 0x02, 0x15, 0x00, 0x02, 0x00, 0x2c, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0300*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0310*/ 0x01, 0x00, 0x1c, 0x02, 0x14, 0x00, 0x02, 0x00, 0x80, 0x07, 0xc0, 0x00, 0x58, 0x00, 0x8c, 0x03, 
    /*0320*/ 0x1c, 0x02, 0x15, 0x00, 0x02, 0x00, 0x2c, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0330*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0340*/ 0x01, 0x00, 0x38, 0x04, 0x29, 0x00, 0x04, 0x00, 0x80, 0x07, 0xc0, 0x00, 0x10, 0x02, 0x01, 0x00, 
    /*0350*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x2c, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0360*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0370*/ 0x01, 0x00, 0x38, 0x04, 0x29, 0x00, 0x04, 0x00, 0x80, 0x07, 0xc0, 0x00, 0x58, 0x00, 0x01, 0x00, 
    /*0380*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x2c, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0390*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*03a0*/ 0x01, 0x00, 0x40, 0x02, 0x2c, 0x00, 0x05, 0x00, 0xd0, 0x02, 0x84, 0x00, 0x0c, 0x00, 0x01, 0x00, 
    /*03b0*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x40, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*03c0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*03d0*/ 0x01, 0x00, 0xe0, 0x01, 0x24, 0x00, 0x09, 0x00, 0xd0, 0x02, 0x7a, 0x00, 0x10, 0x00, 0x01, 0x00, 
    /*03e0*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x3e, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*03f0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0400*/ 0x02, 0x00, 0x58, 0x02, 0x1b, 0x00, 0x01, 0x00, 0x20, 0x03, 0xd8, 0x00, 0x28, 0x00, 0x01, 0x00, 
    /*0410*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x80, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0420*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0430*/ 0x02, 0x00, 0x00, 0x03, 0x23, 0x00, 0x03, 0x00, 0x00, 0x04, 0x28, 0x01, 0x18, 0x00, 0x01, 0x00, 
    /*0440*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x88, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0450*/ 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0460*/ 0x02, 0x00, 0x00, 0x04, 0x29, 0x00, 0x01, 0x00, 0x00, 0x05, 0x68, 0x01, 0x30, 0x00, 0x01, 0x00, 
    /*0470*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x70, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0480*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0490*/ 0x02, 0x00, 0x00, 0x03, 0x1b, 0x00, 0x03, 0x00, 0x56, 0x05, 0x64, 0x01, 0x46, 0x00, 0x01, 0x00, 
    /*04a0*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x8f, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*04b0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*04c0*/ 0x02, 0x00, 0x84, 0x03, 0x1f, 0x00, 0x03, 0x00, 0xa0, 0x05, 0x80, 0x01, 0x50, 0x00, 0x01, 0x00, 
    /*04d0*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x98, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*04e0*/ 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*04f0*/ 0x02, 0x00, 0x20, 0x03, 0x1c, 0x00, 0x03, 0x00, 0x00, 0x05, 0x48, 0x01, 0x48, 0x00, 0x01, 0x00, 
    /*0500*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x80, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0510*/ 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0520*/ 0x02, 0x00, 0xb0, 0x04, 0x31, 0x00, 0x01, 0x00, 0x40, 0x06, 0xf0, 0x01, 0x40, 0x00, 0x01, 0x00, 
    /*0530*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0xc0, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0540*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0550*/ 0x02, 0x00, 0x1a, 0x04, 0x24, 0x00, 0x03, 0x00, 0x90, 0x06, 0xc8, 0x01, 0x68, 0x00, 0x01, 0x00, 
    /*0560*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0xb0, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0570*/ 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0580*/ 0x02, 0x00, 0xb0, 0x04, 0x20, 0x00, 0x03, 0x00, 0x80, 0x07, 0x70, 0x00, 0x30, 0x00, 0x01, 0x00, 
    /*0590*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*05a0*/ 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*05b0*/ 0x02, 0x00, 0xe0, 0x01, 0x23, 0x00, 0x0a, 0x00, 0x80, 0x02, 0x90, 0x00, 0x10, 0x00, 0x01, 0x00, 
    /*05c0*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x60, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*05d0*/ 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*05e0*/ 0x00, 0x00, 0x20, 0x01, 0x16, 0x00, 0x02, 0x00, 0xc0, 0x03, 0xb0, 0x00, 0x10, 0x00, 0x01, 0x00, 
    /*05f0*/ 0x20, 0x01, 0x17, 0x00, 0x02, 0x00, 0xa8, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0600*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0610*/ 0x00, 0x00, 0xf0, 0x00, 0x12, 0x00, 0x04, 0x00, 0xc0, 0x03, 0xa3, 0x00, 0x15, 0x00, 0x01, 0x00, 
    /*0620*/ 0xf0, 0x00, 0x13, 0x00, 0x04, 0x00, 0xa8, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0630*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0640*/ 0x01, 0x00, 0x70, 0x08, 0x48, 0x00, 0x08, 0x00, 0x80, 0x07, 0xc0, 0x00, 0x58, 0x00, 0x01, 0x00, 
    /*0650*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x2c, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0660*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0670*/ 0x02, 0x00, 0xa0, 0x05, 0x27, 0x00, 0x02, 0x00, 0x00, 0x0a, 0x70, 0x00, 0x30, 0x00, 0x01, 0x00, 
    /*0680*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x20, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0690*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*06a0*/ 0x02, 0x00, 0xa0, 0x05, 0x27, 0x00, 0x02, 0x00, 0x00, 0x0a, 0x70, 0x00, 0x30, 0x00, 0x01, 0x00, 
    /*06b0*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x20, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*06c0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*06d0*/ 0x02, 0x00, 0x40, 0x06, 0x2b, 0x00, 0x03, 0x00, 0x00, 0x0a, 0x70, 0x00, 0x30, 0x00, 0x01, 0x00, 
    /*06e0*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x20, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*06f0*/ 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0700*/ 0x01, 0x00, 0x70, 0x08, 0x52, 0x00, 0x08, 0x00, 0x00, 0x0f, 0x80, 0x01, 0xfc, 0x04, 0x01, 0x00, 
    /*0710*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x58, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0720*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0730*/ 0x01, 0x00, 0x70, 0x08, 0x52, 0x00, 0x08, 0x00, 0x00, 0x0f, 0x80, 0x01, 0x20, 0x04, 0x01, 0x00, 
    /*0740*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x58, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0750*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0760*/ 0x01, 0x00, 0x70, 0x08, 0x52, 0x00, 0x08, 0x00, 0x00, 0x0f, 0x80, 0x01, 0xb0, 0x00, 0x01, 0x00, 
    /*0770*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x58, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0780*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0790*/ 0x01, 0x00, 0x70, 0x08, 0x52, 0x00, 0x08, 0x00, 0x00, 0x0f, 0x80, 0x01, 0x20, 0x04, 0x01, 0x00, 
    /*07a0*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x58, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*07b0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*07c0*/ 0x01, 0x00, 0x70, 0x08, 0x52, 0x00, 0x08, 0x00, 0x00, 0x0f, 0x80, 0x01, 0xb0, 0x00, 0x01, 0x00, 
    /*07d0*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x58, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*07e0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*07f0*/ 0x01, 0x00, 0x70, 0x08, 0x52, 0x00, 0x08, 0x00, 0x00, 0x10, 0x80, 0x01, 0xfc, 0x03, 0x01, 0x00, 
    /*0800*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x58, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0810*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0820*/ 0x01, 0x00, 0x70, 0x08, 0x52, 0x00, 0x08, 0x00, 0x00, 0x10, 0xd8, 0x00, 0xc8, 0x03, 0x01, 0x00, 
    /*0830*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x58, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0840*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0850*/ 0x01, 0x00, 0x70, 0x08, 0x52, 0x00, 0x08, 0x00, 0x00, 0x10, 0xd8, 0x00, 0x58, 0x00, 0x01, 0x00, 
    /*0860*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x58, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0870*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0880*/ 0x01, 0x00, 0x70, 0x08, 0x52, 0x00, 0x08, 0x00, 0x00, 0x10, 0xd8, 0x00, 0xc8, 0x03, 0x01, 0x00, 
    /*0890*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x58, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*08a0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*08b0*/ 0x01, 0x00, 0x70, 0x08, 0x52, 0x00, 0x08, 0x00, 0x00, 0x10, 0xd8, 0x00, 0x58, 0x00, 0x01, 0x00, 
    /*08c0*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x58, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*08d0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*08e0*/ 0x01, 0x00, 0xf0, 0x00, 0x0f, 0x00, 0x09, 0x00, 0x40, 0x01, 0x41, 0x00, 0x07, 0x00, 0x01, 0x00, 
    /*08f0*/ 0xf0, 0x00, 0x0e, 0x00, 0x09, 0x00, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0900*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0910*/ 0x01, 0x00, 0xf0, 0x00, 0x02, 0x00, 0x02, 0x00, 0x40, 0x01, 0x05, 0x00, 0x0a, 0x00, 0x01, 0x00, 
    /*0920*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0930*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0940*/ 0x01, 0x00, 0x40, 0x01, 0x0a, 0x00, 0x04, 0x00, 0xf0, 0x00, 0x1e, 0x00, 0x0a, 0x00, 0x01, 0x00, 
    /*0950*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x0a, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0960*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0970*/ 0x01, 0x00, 0x40, 0x01, 0x02, 0x00, 0x02, 0x00, 0xf0, 0x00, 0x14, 0x00, 0x0a, 0x00, 0x01, 0x00, 
    /*0980*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0990*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*09a0*/ 0x01, 0x00, 0x58, 0x02, 0x17, 0x00, 0x0c, 0x00, 0x20, 0x03, 0xd2, 0x00, 0x2e, 0x00, 0x01, 0x00, 
    /*09b0*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x02, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*09c0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*09d0*/ 0x01, 0x00, 0x00, 0x05, 0x18, 0x00, 0x08, 0x00, 0xd0, 0x02, 0x7b, 0x00, 0x63, 0x00, 0x01, 0x00, 
    /*09e0*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x18, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*09f0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0a00*/ 0x01, 0x00, 0x80, 0x07, 0x24, 0x00, 0x10, 0x00, 0x38, 0x04, 0x1c, 0x00, 0x82, 0x00, 0x01, 0x00, 
    /*0a10*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0x18, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0a20*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 
    /*0a30*/ 0x01, 0x00, 0xe0, 0x10, 0x40, 0x00, 0x10, 0x00, 0x00, 0x1e, 0x00, 0x03, 0x28, 0x02, 0x01, 0x00, 
    /*0a40*/ 0x01, 0x00, 0x01, 0x00, 0x01, 0x00, 0xb0, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0a50*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0a60*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0a70*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0a80*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x42, 0x3a, 0x4d, 0x80, 
    /*0a90*/ 0x78, 0xc0, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0aa0*/ 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0ab0*/ 0xfc, 0xff, 0x04, 0x00, 0x34, 0x00, 0x10, 0x00, 0xfa, 0xff, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0ac0*/ 0xfe, 0xff, 0xff, 0xff, 0x30, 0x00, 0x18, 0x00, 0xf9, 0xff, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0ad0*/ 0xff, 0xff, 0xfc, 0xff, 0x2c, 0x00, 0x1f, 0x00, 0xf9, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0ae0*/ 0x01, 0x00, 0xf9, 0xff, 0x26, 0x00, 0x26, 0x00, 0xf9, 0xff, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0af0*/ 0x01, 0x00, 0xf9, 0xff, 0x1f, 0x00, 0x2c, 0x00, 0xfc, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 
    /*0b00*/ 0x02, 0x00, 0xf9, 0xff, 0x18, 0x00, 0x30, 0x00, 0xff, 0xff, 0xfe, 0xff, 0x00, 0x00, 0x00, 0x00, 
    /*0b10*/ 0x02, 0x00, 0xfa, 0xff, 0x10, 0x00, 0x34, 0x00, 0x04, 0x00, 0xfc, 0xff, 0x00, 0x00, 0x00, 0x00, 
    /*0b20*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0b30*/ 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x33, 0x00, 0x0d, 0x00, 0xfa, 0xff, 0x00, 0x00, 0x00, 0x00, 
    /*0b40*/ 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x33, 0x00, 0x10, 0x00, 0xf9, 0xff, 0x00, 0x00, 0x00, 0x00, 
    /*0b50*/ 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x32, 0x00, 0x14, 0x00, 0xf9, 0xff, 0x00, 0x00, 0x00, 0x00, 
    /*0b60*/ 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x31, 0x00, 0x18, 0x00, 0xf8, 0xff, 0x00, 0x00, 0x00, 0x00, 
    /*0b70*/ 0x00, 0x00, 0x00, 0x00, 0xfd, 0xff, 0x2f, 0x00, 0x1c, 0x00, 0xf8, 0xff, 0x00, 0x00, 0x00, 0x00, 
    /*0b80*/ 0x00, 0x00, 0x00, 0x00, 0xfc, 0xff, 0x2d, 0x00, 0x1f, 0x00, 0xf8, 0xff, 0x00, 0x00, 0x00, 0x00, 
    /*0b90*/ 0x00, 0x00, 0x00, 0x00, 0xfa, 0xff, 0x2a, 0x00, 0x23, 0x00, 0xf9, 0xff, 0x00, 0x00, 0x00, 0x00, 
    /*0ba0*/ 0x00, 0x00, 0x00, 0x00, 0xf9, 0xff, 0x27, 0x00, 0x27, 0x00, 0xf9, 0xff, 0x00, 0x00, 0x00, 0x00, 
    /*0bb0*/ 0x00, 0x00, 0x00, 0x00, 0xf9, 0xff, 0x23, 0x00, 0x2a, 0x00, 0xfa, 0xff, 0x00, 0x00, 0x00, 0x00, 
    /*0bc0*/ 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x1f, 0x00, 0x2d, 0x00, 0xfc, 0xff, 0x00, 0x00, 0x00, 0x00, 
    /*0bd0*/ 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x1c, 0x00, 0x2f, 0x00, 0xfd, 0xff, 0x00, 0x00, 0x00, 0x00, 
    /*0be0*/ 0x00, 0x00, 0x00, 0x00, 0xf8, 0xff, 0x18, 0x00, 0x31, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 
    /*0bf0*/ 0x00, 0x00, 0x00, 0x00, 0xf9, 0xff, 0x14, 0x00, 0x32, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0c00*/ 0x00, 0x00, 0x00, 0x00, 0xf9, 0xff, 0x10, 0x00, 0x33, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0c10*/ 0x00, 0x00, 0x00, 0x00, 0xfa, 0xff, 0x0d, 0x00, 0x33, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0c20*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0c30*/ 0x54, 0x8f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0c40*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0c50*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0c60*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0c70*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
};

unsigned char rel.data[136] = {
    /*0000*/ 0x1c, 0x00, 0x00, 0x00, 0x02, 0x19, 0x01, 0x00, 0x2c, 0x00, 0x00, 0x00, 0x02, 0x17, 0x01, 0x00, 
    /*0010*/ 0x30, 0x00, 0x00, 0x00, 0x02, 0xf9, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x02, 0x18, 0x00, 0x00, 
    /*0020*/ 0x4c, 0x00, 0x00, 0x00, 0x02, 0x18, 0x01, 0x00, 0x58, 0x00, 0x00, 0x00, 0x02, 0x1a, 0x00, 0x00, 
    /*0030*/ 0xa8, 0x00, 0x00, 0x00, 0x02, 0x2a, 0x06, 0x00, 0xac, 0x00, 0x00, 0x00, 0x02, 0x16, 0x06, 0x00, 
    /*0040*/ 0xb0, 0x00, 0x00, 0x00, 0x02, 0xef, 0x00, 0x00, 0xb4, 0x00, 0x00, 0x00, 0x02, 0xf2, 0x00, 0x00, 
    /*0050*/ 0xb8, 0x00, 0x00, 0x00, 0x02, 0x1b, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x02, 0x0f, 0x00, 0x00, 
    /*0060*/ 0xe4, 0x00, 0x00, 0x00, 0x02, 0xc4, 0x05, 0x00, 0x1c, 0x0c, 0x00, 0x00, 0x02, 0x8b, 0x05, 0x00, 
    /*0070*/ 0x20, 0x0c, 0x00, 0x00, 0x02, 0x89, 0x05, 0x00, 0x30, 0x0c, 0x00, 0x00, 0x02, 0x07, 0x00, 0x00, 
    /*0080*/ 0x48, 0x0c, 0x00, 0x00, 0x02, 0x06, 0x00, 0x00, 
};

unsigned char bss[25148];

@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text
@ Size: 0x1fad4
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN VouPoll
    /*00000000*/ MOV         R0, #0 
    /*00000004*/ BX          LR 
FUNC_END VouPoll


FUNC_BEGIN Vou_Restore
    /*00000008*/ MOV         R0, #0 
    /*0000000c*/ BX          LR 
FUNC_END Vou_Restore


FUNC_BEGIN VOU_GetVerMagic
    /*00000010*/ MOVW        R0, #61479                  @ 0xf027 
    /*00000014*/ MOVT        R0, #307                    @ 0x133 
    /*00000018*/ BX          LR 
FUNC_END VOU_GetVerMagic


FUNC_BEGIN VOU_RegisterExternCallBack
    /*0000001c*/ LDR         R2, [R0] 
    /*00000020*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00000024*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000028*/ MOV         R0, #0 
    /*0000002c*/ STR         R2, [R3] 
    /*00000030*/ BX          LR 
FUNC_END VOU_RegisterExternCallBack


FUNC_BEGIN VouProcShow
    /*00000034*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00000038*/ MOVW        R1, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c] 
    /*0000003c*/ SUB         SP, SP, #164                @ 0xa4 
    /*00000040*/ MOV         FP, R0 
    /*00000044*/ MOVT        R1, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c] 
    /*00000048*/ MOVW        R9, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000004c*/ BL          0x000000000000004C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000050*/ MOV         R0, FP 
    /*00000054*/ MOVW        R1, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x88] 
    /*00000058*/ MOVT        R1, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x88] 
    /*0000005c*/ BL          0x000000000000005C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000060*/ MOV         R0, FP 
    /*00000064*/ MOVW        R1, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c] 
    /*00000068*/ MOVT        R1, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c] 
    /*0000006c*/ BL          0x000000000000006C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000070*/ MOVT        R9, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00000074*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x114] 
    /*00000078*/ MOVW        R3, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11c] 
    /*0000007c*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x114] 
    /*00000080*/ MOVT        R3, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11c] 
    /*00000084*/ STR         R2, [SP, #20] 
    /*00000088*/ MOV         R0, FP 
    /*0000008c*/ STR         R3, [SP, #16] 
    /*00000090*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x124] 
    /*00000094*/ MOVW        R3, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x130] 
    /*00000098*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x124] 
    /*0000009c*/ MOVT        R3, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x130] 
    /*000000a0*/ STR         R2, [SP, #12] 
    /*000000a4*/ STR         R3, [SP, #8] 
    /*000000a8*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x138] 
    /*000000ac*/ MOVW        R3, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x140] 
    /*000000b0*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x138] 
    /*000000b4*/ MOVT        R3, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x140] 
    /*000000b8*/ STR         R2, [SP, #4] 
    /*000000bc*/ STR         R3, [SP] 
    /*000000c0*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xec] 
    /*000000c4*/ MOVW        R3, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe4] 
    /*000000c8*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0xec] 
    /*000000cc*/ MOVT        R3, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe4] 
    /*000000d0*/ MOVW        R1, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf4] 
    /*000000d4*/ MOVT        R1, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf4] 
    /*000000d8*/ MOVW        SL, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x208] 
    /*000000dc*/ BL          0x00000000000000DC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000000e0*/ MOV         R2, #9 
    /*000000e4*/ ADD         R0, SP, #130                @ 0x82 
    /*000000e8*/ MOVW        R1, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x18] 
    /*000000ec*/ MOVT        R1, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x18] 
    /*000000f0*/ LDR         R6, [R9, #28] 
    /*000000f4*/ BL          0x00000000000000F4          @ osal_strncpy [R_ARM_CALL: +0x0] 
    /*000000f8*/ MOV         R2, #9 
    /*000000fc*/ ADD         R0, SP, #140                @ 0x8c 
    /*00000100*/ MOVW        R1, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x18] 
    /*00000104*/ MOVT        R1, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x18] 
    /*00000108*/ MOVW        R8, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*0000010c*/ BL          0x000000000000010C          @ osal_strncpy [R_ARM_CALL: +0x0] 
    /*00000110*/ ADD         R0, SP, #150                @ 0x96 
    /*00000114*/ MOVW        R1, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x18] 
    /*00000118*/ MOV         R2, #9 
    /*0000011c*/ MOVT        R1, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x18] 
    /*00000120*/ MOVW        R7, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x210] 
    /*00000124*/ BL          0x0000000000000124          @ osal_strncpy [R_ARM_CALL: +0x0] 
    /*00000128*/ MOVT        SL, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x208] 
    /*0000012c*/ MOVT        R8, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00000130*/ MOVT        R7, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x210] 
    /*00000134*/ MOV         R4, #1 
    /*00000138*/ MOV         R5, #0 
    VouProcShow_x13c:
    /*0000013c*/ SUB         R3, R4, #1 
    /*00000140*/ LSR         R2, R6, R3 
    /*00000144*/ TST         R2, #1 
    /*00000148*/ BEQ         VouProcShow_x1d0
    /*0000014c*/ SUB         R3, R4, #2 
    /*00000150*/ MOV         R2, #10 
    /*00000154*/ CMP         R3, #14 
    /*00000158*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*0000015c*/ B           VouProcShow_x19c
    /*00000160*/ ANDEQ       R0, R0, R8, ROR #31 
    /*00000164*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
    /*00000168*/ @           <UNDEFINED> instruction: 0x00000fb8 
    /*0000016c*/ ANDEQ       R0, R0, R0, LSR #31 
    /*00000170*/ ANDEQ       R0, R0, R8, LSL #31 
    /*00000174*/ ANDEQ       R0, R0, R0, ROR PC 
    /*00000178*/ ANDEQ       R0, R0, R8, ASR PC 
    /*0000017c*/ ANDEQ       R0, R0, R0, ASR #30 
    /*00000180*/ ANDEQ       R0, R0, R8, LSR #30 
    /*00000184*/ ANDEQ       R0, R0, R0, LSL PC 
    /*00000188*/ STRDEQ      R0, [R0], -R8 
    /*0000018c*/ ANDEQ       R0, R0, R0, ROR #29 
    /*00000190*/ ANDEQ       R0, R0, R8, ASR #29 
    /*00000194*/ ANDEQ       R0, R0, R4, LSR #29 
    /*00000198*/ ANDEQ       R0, R0, R0, ROR #3 
    VouProcShow_x19c:
    /*0000019c*/ ADD         R3, SP, #130                @ 0x82 
    /*000001a0*/ MOVW        R1, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x148] 
    /*000001a4*/ MOVT        R1, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x148] 
    /*000001a8*/ MLA         R0, R2, R5, R3 
    /*000001ac*/ ADD         R5, R5, #1 
    /*000001b0*/ BL          0x00000000000001B0          @ osal_strncpy [R_ARM_CALL: +0x0] 
    /*000001b4*/ CMP         R5, #3 
    /*000001b8*/ BLE         VouProcShow_x1d0
    VouProcShow_x1bc:
    /*000001bc*/ MOV         R3, SL 
    /*000001c0*/ MOVW        R2, #610                    @ 0x262 
    /*000001c4*/ MOV         R1, R8 
    /*000001c8*/ MOV         R0, R7 
    /*000001cc*/ BL          0x00000000000001CC          @ osal_panic [R_ARM_CALL: +0x0] 
    VouProcShow_x1d0:
    /*000001d0*/ CMP         R4, #16 
    /*000001d4*/ BEQ         VouProcShow_x200
    VouProcShow_x1d8:
    /*000001d8*/ ADD         R4, R4, #1 
    /*000001dc*/ B           VouProcShow_x13c
    /*000001e0*/ ADD         R3, SP, #130                @ 0x82 
    /*000001e4*/ MOVW        R1, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fc] 
    /*000001e8*/ MOVT        R1, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fc] 
    /*000001ec*/ MLA         R0, R2, R5, R3 
    /*000001f0*/ ADD         R5, R5, #1 
    /*000001f4*/ BL          0x00000000000001F4          @ osal_strncpy [R_ARM_CALL: +0x0] 
    /*000001f8*/ CMP         R5, #3 
    /*000001fc*/ BGT         VouProcShow_x1bc
    VouProcShow_x200:
    /*00000200*/ LDR         R2, [R9, #8] 
    /*00000204*/ MOV         R3, #0 
    /*00000208*/ STRB        R3, [SP, #139]              @ 0x8b 
    /*0000020c*/ CMP         R2, #1 
    /*00000210*/ STRB        R3, [SP, #149]              @ 0x95 
    /*00000214*/ STRB        R3, [SP, #159]              @ 0x9f 
    /*00000218*/ BEQ         VouProcShow_x1758
    VouProcShow_x21c:
    /*0000021c*/ MOVW        R1, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x270] 
    /*00000220*/ MOV         R0, FP 
    /*00000224*/ MOVT        R1, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x270] 
    /*00000228*/ MOVW        R4, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8] 
    /*0000022c*/ BL          0x000000000000022C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000230*/ MOVW        R1, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x274] 
    /*00000234*/ MOV         R0, FP 
    /*00000238*/ MOVT        R1, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x274] 
    /*0000023c*/ BL          0x000000000000023C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000240*/ MOVT        R4, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8] 
    /*00000244*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x300] 
    /*00000248*/ MOVW        R3, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30c] 
    /*0000024c*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x300] 
    /*00000250*/ MOVT        R3, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30c] 
    /*00000254*/ STR         R2, [SP, #36]               @ 0x24 
    /*00000258*/ MOVW        R1, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d0] 
    /*0000025c*/ STR         R3, [SP, #32] 
    /*00000260*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x318] 
    /*00000264*/ STR         R4, [SP, #24] 
    /*00000268*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x318] 
    /*0000026c*/ MOVW        R3, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x324] 
    /*00000270*/ STR         R2, [SP, #28] 
    /*00000274*/ MOVT        R3, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x324] 
    /*00000278*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x330] 
    /*0000027c*/ STR         R3, [SP, #20] 
    /*00000280*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x330] 
    /*00000284*/ MOVW        R3, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33c] 
    /*00000288*/ STR         R2, [SP, #16] 
    /*0000028c*/ MOVT        R3, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33c] 
    /*00000290*/ MOVW        R2, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x344] 
    /*00000294*/ STR         R3, [SP, #12] 
    /*00000298*/ MOVT        R2, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x344] 
    /*0000029c*/ MOVW        R3, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34c] 
    /*000002a0*/ STR         R2, [SP, #8] 
    /*000002a4*/ MOVT        R3, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34c] 
    /*000002a8*/ MOVW        R2, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x354] 
    /*000002ac*/ STR         R3, [SP, #4] 
    /*000002b0*/ MOVT        R2, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x354] 
    /*000002b4*/ MOVW        R3, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe4] 
    /*000002b8*/ STR         R2, [SP] 
    /*000002bc*/ MOVT        R3, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe4] 
    /*000002c0*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xec] 
    /*000002c4*/ MOVT        R1, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d0] 
    /*000002c8*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0xec] 
    /*000002cc*/ MOV         R0, FP 
    /*000002d0*/ BL          0x00000000000002D0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000002d4*/ LDR         R3, [R9, #8] 
    /*000002d8*/ CMP         R3, #1 
    /*000002dc*/ BEQ         VouProcShow_x1690
    VouProcShow_x2e0:
    /*000002e0*/ MOVW        R8, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10] 
    /*000002e4*/ MOVT        R8, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10] 
    VouProcShow_x2e8:
    /*000002e8*/ MOVW        R1, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x270] 
    /*000002ec*/ MOV         R0, FP 
    /*000002f0*/ MOVT        R1, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x270] 
    /*000002f4*/ MOVW        R7, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10] 
    /*000002f8*/ BL          0x00000000000002F8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000002fc*/ MOVW        R1, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a0] 
    /*00000300*/ MOV         R0, FP 
    /*00000304*/ MOVT        R1, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a0] 
    /*00000308*/ BL          0x0000000000000308          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000030c*/ MOVW        R2, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x400] 
    /*00000310*/ MOVW        R3, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x40c] 
    /*00000314*/ MOVT        R2, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x400] 
    /*00000318*/ MOVT        R3, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x40c] 
    /*0000031c*/ STR         R2, [SP, #4] 
    /*00000320*/ STR         R3, [SP] 
    /*00000324*/ MOVW        R2, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d8] 
    /*00000328*/ MOVW        R3, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d0] 
    /*0000032c*/ MOVT        R2, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d8] 
    /*00000330*/ MOVT        R3, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d0] 
    /*00000334*/ MOVW        R1, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ec] 
    /*00000338*/ MOV         R0, FP 
    /*0000033c*/ MOVT        R1, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ec] 
    /*00000340*/ BL          0x0000000000000340          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000344*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00000348*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000034c*/ MOVT        R7, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10] 
    /*00000350*/ MOVW        R6, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14] 
    /*00000354*/ MOVT        R6, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14] 
    /*00000358*/ LDR         IP, [R3, #8] 
    /*0000035c*/ MOVW        R1, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ec] 
    /*00000360*/ LDR         R0, [R3, #12] 
    /*00000364*/ MOVT        R1, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ec] 
    /*00000368*/ CMP         IP, #0 
    /*0000036c*/ LDR         R2, [R3] 
    /*00000370*/ LDR         R3, [R3, #4] 
    /*00000374*/ MOVW        R5, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x504] 
    /*00000378*/ MOVNE       IP, R7 
    /*0000037c*/ MOVEQ       IP, R6 
    /*00000380*/ CMP         R0, #0 
    /*00000384*/ STR         IP, [SP] 
    /*00000388*/ MOVT        R5, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x504] 
    /*0000038c*/ MOVW        R4, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x50c] 
    /*00000390*/ MOVNE       R0, R7 
    /*00000394*/ MOVEQ       R0, R6 
    /*00000398*/ CMP         R2, #0 
    /*0000039c*/ STR         R0, [SP, #4] 
    /*000003a0*/ MOV         R0, FP 
    /*000003a4*/ MOVT        R4, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x50c] 
    /*000003a8*/ MOVNE       R2, R7 
    /*000003ac*/ MOVEQ       R2, R6 
    /*000003b0*/ CMP         R3, #0 
    /*000003b4*/ MOVNE       R3, R7 
    /*000003b8*/ MOVEQ       R3, R6 
    /*000003bc*/ BL          0x00000000000003BC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000003c0*/ MOVW        R1, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x270] 
    /*000003c4*/ MOV         R0, FP 
    /*000003c8*/ MOVT        R1, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x270] 
    /*000003cc*/ BL          0x00000000000003CC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000003d0*/ MOVW        R1, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x41c] 
    /*000003d4*/ MOV         R0, FP 
    /*000003d8*/ MOVT        R1, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x41c] 
    /*000003dc*/ BL          0x00000000000003DC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000003e0*/ MOVW        R2, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4d0] 
    /*000003e4*/ MOVW        R3, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4dc] 
    /*000003e8*/ MOVT        R2, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4d0] 
    /*000003ec*/ MOVT        R3, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4dc] 
    /*000003f0*/ STR         R2, [SP, #44]               @ 0x2c 
    /*000003f4*/ STR         R3, [SP, #40]               @ 0x28 
    /*000003f8*/ MOVW        R2, #0                      @ .LC69 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4e4] 
    /*000003fc*/ MOVW        R3, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ec] 
    /*00000400*/ MOVT        R2, #0                      @ .LC69 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4e4] 
    /*00000404*/ MOVT        R3, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ec] 
    /*00000408*/ STR         R2, [SP, #36]               @ 0x24 
    /*0000040c*/ STR         R3, [SP, #32] 
    /*00000410*/ MOVW        R2, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4f4] 
    /*00000414*/ MOVW        R3, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4fc] 
    /*00000418*/ MOVT        R2, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4f4] 
    /*0000041c*/ MOVT        R3, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4fc] 
    /*00000420*/ STR         R2, [SP, #28] 
    /*00000424*/ STR         R3, [SP, #24] 
    /*00000428*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x51c] 
    /*0000042c*/ STR         R5, [SP, #20] 
    /*00000430*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x51c] 
    /*00000434*/ MOVW        R3, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x514] 
    /*00000438*/ STR         R2, [SP, #8] 
    /*0000043c*/ MOVT        R3, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x514] 
    /*00000440*/ STR         R4, [SP, #16] 
    /*00000444*/ STR         R3, [SP, #12] 
    /*00000448*/ MOVW        R2, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x52c] 
    /*0000044c*/ MOVW        R3, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x524] 
    /*00000450*/ MOVT        R2, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x52c] 
    /*00000454*/ MOVT        R3, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x524] 
    /*00000458*/ STR         R2, [SP] 
    /*0000045c*/ STR         R3, [SP, #4] 
    /*00000460*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x498] 
    /*00000464*/ MOVW        R3, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x490] 
    /*00000468*/ MOVW        R1, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4a0] 
    /*0000046c*/ MOVT        R3, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x490] 
    /*00000470*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x498] 
    /*00000474*/ MOVT        R1, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4a0] 
    /*00000478*/ MOV         R0, FP 
    /*0000047c*/ BL          0x000000000000047C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000480*/ LDR         R3, [R9, #240]              @ 0xf0 
    /*00000484*/ CMP         R3, #1 
    /*00000488*/ BEQ         VouProcShow_x157c
    VouProcShow_x48c:
    /*0000048c*/ MOVW        R1, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x270] 
    /*00000490*/ MOV         R0, FP 
    /*00000494*/ MOVT        R1, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x270] 
    /*00000498*/ BL          0x0000000000000498          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000049c*/ MOVW        R1, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x568] 
    /*000004a0*/ MOV         R0, FP 
    /*000004a4*/ MOVT        R1, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x568] 
    /*000004a8*/ BL          0x00000000000004A8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000004ac*/ MOVW        R2, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x600] 
    /*000004b0*/ MOVW        R3, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x608] 
    /*000004b4*/ MOVT        R2, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0x600] 
    /*000004b8*/ MOVT        R3, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x608] 
    /*000004bc*/ STR         R2, [SP, #28] 
    /*000004c0*/ STR         R3, [SP, #24] 
    /*000004c4*/ MOVW        R2, #0                      @ .LC84 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x60c] 
    /*000004c8*/ MOVW        R3, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x614] 
    /*000004cc*/ MOVT        R2, #0                      @ .LC84 [R_ARM_MOVT_ABS: .rodata.str1.4+0x60c] 
    /*000004d0*/ MOVT        R3, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x614] 
    /*000004d4*/ STR         R2, [SP, #20] 
    /*000004d8*/ STR         R3, [SP, #16] 
    /*000004dc*/ MOVW        R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61c] 
    /*000004e0*/ MOVW        R3, #0                      @ .LC87 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x624] 
    /*000004e4*/ MOVT        R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61c] 
    /*000004e8*/ MOVT        R3, #0                      @ .LC87 [R_ARM_MOVT_ABS: .rodata.str1.4+0x624] 
    /*000004ec*/ STR         R2, [SP, #12] 
    /*000004f0*/ STR         R3, [SP, #8] 
    /*000004f4*/ MOVW        R2, #0                      @ .LC88 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x62c] 
    /*000004f8*/ MOVW        R3, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x638] 
    /*000004fc*/ MOVT        R2, #0                      @ .LC88 [R_ARM_MOVT_ABS: .rodata.str1.4+0x62c] 
    /*00000500*/ MOVT        R3, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x638] 
    /*00000504*/ STR         R2, [SP, #4] 
    /*00000508*/ STR         R3, [SP] 
    /*0000050c*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x498] 
    /*00000510*/ MOVW        R3, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x490] 
    /*00000514*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x498] 
    /*00000518*/ MOVT        R3, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x490] 
    /*0000051c*/ MOVW        R1, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5dc] 
    /*00000520*/ MOV         R0, FP 
    /*00000524*/ MOVT        R1, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5dc] 
    /*00000528*/ BL          0x0000000000000528          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000052c*/ LDR         R3, [R9, #240]              @ 0xf0 
    /*00000530*/ CMP         R3, #1 
    /*00000534*/ BEQ         VouProcShow_x151c
    VouProcShow_x538:
    /*00000538*/ MOVW        R1, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x270] 
    /*0000053c*/ MOV         R0, FP 
    /*00000540*/ MOVT        R1, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x270] 
    /*00000544*/ BL          0x0000000000000544          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000548*/ MOVW        R1, #0                      @ .LC91 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x668] 
    /*0000054c*/ MOV         R0, FP 
    /*00000550*/ MOVT        R1, #0                      @ .LC91 [R_ARM_MOVT_ABS: .rodata.str1.4+0x668] 
    /*00000554*/ BL          0x0000000000000554          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000558*/ MOVW        R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6f8] 
    /*0000055c*/ MOVW        R3, #0                      @ .LC94 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x704] 
    /*00000560*/ MOVT        R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6f8] 
    /*00000564*/ MOVT        R3, #0                      @ .LC94 [R_ARM_MOVT_ABS: .rodata.str1.4+0x704] 
    /*00000568*/ STR         R2, [SP, #16] 
    /*0000056c*/ STR         R3, [SP, #12] 
    /*00000570*/ MOVW        R2, #0                      @ .LC95 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x714] 
    /*00000574*/ MOVW        R3, #0                      @ .LC96 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x724] 
    /*00000578*/ MOVT        R2, #0                      @ .LC95 [R_ARM_MOVT_ABS: .rodata.str1.4+0x714] 
    /*0000057c*/ MOVT        R3, #0                      @ .LC96 [R_ARM_MOVT_ABS: .rodata.str1.4+0x724] 
    /*00000580*/ STR         R2, [SP, #8] 
    /*00000584*/ STR         R3, [SP, #4] 
    /*00000588*/ MOVW        R2, #0                      @ .LC97 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x72c] 
    /*0000058c*/ MOVW        R3, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xec] 
    /*00000590*/ MOVT        R2, #0                      @ .LC97 [R_ARM_MOVT_ABS: .rodata.str1.4+0x72c] 
    /*00000594*/ MOVT        R3, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0xec] 
    /*00000598*/ STR         R2, [SP] 
    /*0000059c*/ MOVW        R1, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6dc] 
    /*000005a0*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x498] 
    /*000005a4*/ MOVT        R1, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6dc] 
    /*000005a8*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x498] 
    /*000005ac*/ MOV         R0, FP 
    /*000005b0*/ BL          0x00000000000005B0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000005b4*/ LDR         R3, [R9, #240]              @ 0xf0 
    /*000005b8*/ CMP         R3, #1 
    /*000005bc*/ BEQ         VouProcShow_x182c
    VouProcShow_x5c0:
    /*000005c0*/ MOVW        R3, #0                      @ .LC103 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f4] 
    /*000005c4*/ MOVW        R1, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x270] 
    /*000005c8*/ MOV         R0, FP 
    /*000005cc*/ MOVT        R1, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x270] 
    /*000005d0*/ MOV         R6, R3 
    /*000005d4*/ BL          0x00000000000005D4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000005d8*/ MOVW        R1, #0                      @ .LC99 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x750] 
    /*000005dc*/ MOV         R0, FP 
    /*000005e0*/ MOVT        R1, #0                      @ .LC99 [R_ARM_MOVT_ABS: .rodata.str1.4+0x750] 
    /*000005e4*/ BL          0x00000000000005E4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000005e8*/ MOV         R3, R6 
    /*000005ec*/ MOVT        R3, #0                      @ .LC103 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f4] 
    /*000005f0*/ STR         R3, [SP, #68]               @ 0x44 
    /*000005f4*/ STR         R3, [SP, #16] 
    /*000005f8*/ MOVW        R3, #0                      @ .LC105 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x810] 
    /*000005fc*/ MOVT        R3, #0                      @ .LC105 [R_ARM_MOVT_ABS: .rodata.str1.4+0x810] 
    /*00000600*/ STR         R3, [SP, #76]               @ 0x4c 
    /*00000604*/ STR         R3, [SP, #8] 
    /*00000608*/ MOVW        R3, #0                      @ .LC107 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x824] 
    /*0000060c*/ MOVT        R3, #0                      @ .LC107 [R_ARM_MOVT_ABS: .rodata.str1.4+0x824] 
    /*00000610*/ MOVW        R2, #0                      @ .LC104 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x804] 
    /*00000614*/ STR         R3, [SP, #84]               @ 0x54 
    /*00000618*/ MOVT        R2, #0                      @ .LC104 [R_ARM_MOVT_ABS: .rodata.str1.4+0x804] 
    /*0000061c*/ MOVW        R1, #0                      @ .LC102 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7e4] 
    /*00000620*/ STR         R2, [SP, #72]               @ 0x48 
    /*00000624*/ STR         R2, [SP, #12] 
    /*00000628*/ MOVT        R1, #0                      @ .LC102 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7e4] 
    /*0000062c*/ MOVW        R2, #0                      @ .LC106 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x81c] 
    /*00000630*/ MOV         R0, FP 
    /*00000634*/ MOVT        R2, #0                      @ .LC106 [R_ARM_MOVT_ABS: .rodata.str1.4+0x81c] 
    /*00000638*/ STR         R2, [SP, #80]               @ 0x50 
    /*0000063c*/ STR         R2, [SP, #4] 
    /*00000640*/ MOV         R2, R3 
    /*00000644*/ MOVW        R3, #0                      @ .LC100 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7c4] 
    /*00000648*/ STR         R2, [SP] 
    /*0000064c*/ MOVT        R3, #0                      @ .LC100 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7c4] 
    /*00000650*/ MOVW        R2, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7d8] 
    /*00000654*/ MOVT        R2, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7d8] 
    /*00000658*/ BL          0x0000000000000658          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000065c*/ LDR         R3, [R9, #420]              @ 0x1a4 
    /*00000660*/ CMP         R3, #1 
    /*00000664*/ BEQ         VouProcShow_x674
    /*00000668*/ LDR         R3, [R9, #240]              @ 0xf0 
    /*0000066c*/ CMP         R3, #0 
    /*00000670*/ BNE         VouProcShow_x1038
    VouProcShow_x674:
    /*00000674*/ MOVW        R1, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x270] 
    /*00000678*/ MOV         R0, FP 
    /*0000067c*/ MOVT        R1, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x270] 
    /*00000680*/ BL          0x0000000000000680          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000684*/ MOVW        R1, #0                      @ .LC109 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x848] 
    /*00000688*/ MOV         R0, FP 
    /*0000068c*/ MOVT        R1, #0                      @ .LC109 [R_ARM_MOVT_ABS: .rodata.str1.4+0x848] 
    /*00000690*/ BL          0x0000000000000690          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000694*/ MOVW        R2, #0                      @ .LC112 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8dc] 
    /*00000698*/ MOVW        R3, #0                      @ .LC113 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8e4] 
    /*0000069c*/ MOVT        R2, #0                      @ .LC112 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8dc] 
    /*000006a0*/ MOVT        R3, #0                      @ .LC113 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8e4] 
    /*000006a4*/ STR         R2, [SP, #4] 
    /*000006a8*/ STR         R3, [SP] 
    /*000006ac*/ MOVW        R2, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7d8] 
    /*000006b0*/ MOVW        R3, #0                      @ .LC110 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8bc] 
    /*000006b4*/ MOVT        R2, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7d8] 
    /*000006b8*/ MOVT        R3, #0                      @ .LC110 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8bc] 
    /*000006bc*/ MOVW        R1, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8cc] 
    /*000006c0*/ MOV         R0, FP 
    /*000006c4*/ MOVT        R1, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8cc] 
    /*000006c8*/ BL          0x00000000000006C8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000006cc*/ LDR         R3, [R9, #420]              @ 0x1a4 
    /*000006d0*/ CMP         R3, #0 
    /*000006d4*/ BNE         VouProcShow_x1000
    VouProcShow_x6d8:
    /*000006d8*/ MOVW        R1, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x270] 
    /*000006dc*/ MOV         R0, FP 
    /*000006e0*/ MOVT        R1, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x270] 
    /*000006e4*/ BL          0x00000000000006E4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000006e8*/ MOVW        R1, #0                      @ .LC115 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x900] 
    /*000006ec*/ MOV         R0, FP 
    /*000006f0*/ MOVT        R1, #0                      @ .LC115 [R_ARM_MOVT_ABS: .rodata.str1.4+0x900] 
    /*000006f4*/ BL          0x00000000000006F4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000006f8*/ STR         R8, [SP, #4] 
    /*000006fc*/ MOVW        R2, #0                      @ .LC118 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x994] 
    /*00000700*/ MOVW        R3, #0                      @ .LC119 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x99c] 
    /*00000704*/ MOVT        R2, #0                      @ .LC118 [R_ARM_MOVT_ABS: .rodata.str1.4+0x994] 
    /*00000708*/ MOVT        R3, #0                      @ .LC119 [R_ARM_MOVT_ABS: .rodata.str1.4+0x99c] 
    /*0000070c*/ STR         R2, [SP, #12] 
    /*00000710*/ MOVW        R1, #0                      @ .LC117 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x97c] 
    /*00000714*/ STR         R3, [SP, #8] 
    /*00000718*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9a4] 
    /*0000071c*/ MOVW        R3, #0                      @ .LC116 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x974] 
    /*00000720*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9a4] 
    /*00000724*/ MOVT        R3, #0                      @ .LC116 [R_ARM_MOVT_ABS: .rodata.str1.4+0x974] 
    /*00000728*/ STR         R2, [SP] 
    /*0000072c*/ MOVT        R1, #0                      @ .LC117 [R_ARM_MOVT_ABS: .rodata.str1.4+0x97c] 
    /*00000730*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x498] 
    /*00000734*/ MOV         R0, FP 
    /*00000738*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x498] 
    /*0000073c*/ BL          0x000000000000073C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000740*/ LDR         R2, [R9, #420]              @ 0x1a4 
    /*00000744*/ CMP         R2, #0 
    /*00000748*/ BNE         VouProcShow_x7b4
    /*0000074c*/ LDR         R3, [R9, #240]              @ 0xf0 
    /*00000750*/ CMP         R3, #0 
    /*00000754*/ BEQ         VouProcShow_x7b4
    /*00000758*/ LDR         R0, [R9, #396]              @ 0x18c 
    /*0000075c*/ MOVW        R1, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14] 
    /*00000760*/ MOVT        R1, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14] 
    /*00000764*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10] 
    /*00000768*/ CMP         R0, #0 
    /*0000076c*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10] 
    /*00000770*/ MOV         R0, FP 
    /*00000774*/ MOVEQ       R3, R1 
    /*00000778*/ MOVW        R1, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9a8] 
    /*0000077c*/ MOVT        R1, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9a8] 
    /*00000780*/ BL          0x0000000000000780          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000784*/ LDR         R3, [R9, #396]              @ 0x18c 
    /*00000788*/ CMP         R3, #0 
    /*0000078c*/ BEQ         VouProcShow_x1810
    /*00000790*/ LDR         LR, [R9, #412]              @ 0x19c 
    /*00000794*/ MOVW        R1, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9b0] 
    /*00000798*/ LDR         IP, [R9, #408]              @ 0x198 
    /*0000079c*/ MOVT        R1, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9b0] 
    /*000007a0*/ LDR         R3, [R9, #404]              @ 0x194 
    /*000007a4*/ MOV         R0, FP 
    /*000007a8*/ LDR         R2, [R9, #400]              @ 0x190 
    /*000007ac*/ STM         SP, {IP, LR} 
    /*000007b0*/ BL          0x00000000000007B0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    VouProcShow_x7b4:
    /*000007b4*/ MOVW        R1, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x270] 
    /*000007b8*/ MOV         R0, FP 
    /*000007bc*/ MOVT        R1, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x270] 
    /*000007c0*/ BL          0x00000000000007C0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000007c4*/ MOVW        R1, #0                      @ .LC123 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x9c0] 
    /*000007c8*/ MOV         R0, FP 
    /*000007cc*/ MOVT        R1, #0                      @ .LC123 [R_ARM_MOVT_ABS: .rodata.str1.4+0x9c0] 
    /*000007d0*/ BL          0x00000000000007D0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000007d4*/ STR         R5, [SP, #32] 
    /*000007d8*/ STR         R4, [SP, #28] 
    /*000007dc*/ MOVW        R2, #0                      @ .LC126 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa4c] 
    /*000007e0*/ MOVW        R3, #0                      @ .LC127 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa58] 
    /*000007e4*/ MOVT        R2, #0                      @ .LC126 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa4c] 
    /*000007e8*/ MOVT        R3, #0                      @ .LC127 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa58] 
    /*000007ec*/ STR         R2, [SP, #44]               @ 0x2c 
    /*000007f0*/ STR         R3, [SP, #40]               @ 0x28 
    /*000007f4*/ MOVW        R2, #0                      @ .LC128 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa60] 
    /*000007f8*/ MOVW        R3, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa68] 
    /*000007fc*/ MOVT        R2, #0                      @ .LC128 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa60] 
    /*00000800*/ MOVT        R3, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa68] 
    /*00000804*/ STR         R2, [SP, #36]               @ 0x24 
    /*00000808*/ STR         R3, [SP, #24] 
    /*0000080c*/ MOVW        R2, #0                      @ .LC130 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa70] 
    /*00000810*/ MOVW        R3, #0                      @ .LC131 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa78] 
    /*00000814*/ MOVT        R2, #0                      @ .LC130 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa70] 
    /*00000818*/ MOVT        R3, #0                      @ .LC131 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa78] 
    /*0000081c*/ STR         R2, [SP, #20] 
    /*00000820*/ STR         R3, [SP, #16] 
    /*00000824*/ MOVW        R2, #0                      @ .LC132 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa80] 
    /*00000828*/ MOVW        R3, #0                      @ .LC133 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa88] 
    /*0000082c*/ MOVT        R2, #0                      @ .LC132 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa80] 
    /*00000830*/ MOVT        R3, #0                      @ .LC133 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa88] 
    /*00000834*/ STR         R2, [SP, #12] 
    /*00000838*/ STR         R3, [SP, #8] 
    /*0000083c*/ MOVW        R2, #0                      @ .LC134 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa90] 
    /*00000840*/ MOVW        R3, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa98] 
    /*00000844*/ MOVT        R2, #0                      @ .LC134 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa90] 
    /*00000848*/ MOVT        R3, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa98] 
    /*0000084c*/ STR         R2, [SP, #4] 
    /*00000850*/ STR         R3, [SP] 
    /*00000854*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x498] 
    /*00000858*/ MOVW        R3, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa18] 
    /*0000085c*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x498] 
    /*00000860*/ MOVT        R3, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa18] 
    /*00000864*/ MOVW        R1, #0                      @ .LC125 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa20] 
    /*00000868*/ MOV         R0, FP 
    /*0000086c*/ MOVT        R1, #0                      @ .LC125 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa20] 
    /*00000870*/ BL          0x0000000000000870          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000874*/ LDR         R3, [R9, #240]              @ 0xf0 
    /*00000878*/ CMP         R3, #0 
    /*0000087c*/ BEQ         VouProcShow_x8c4
    /*00000880*/ LDR         R7, [PC, #3996]             @ 0x0000000000001824 
    /*00000884*/ MOVW        R6, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10] 
    /*00000888*/ MOVW        R5, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14] 
    /*0000088c*/ MOVW        R4, #0                      @ .LC147 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb98] 
    /*00000890*/ MOVT        R6, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10] 
    /*00000894*/ MOVT        R5, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14] 
    /*00000898*/ MOVT        R4, #0                      @ .LC147 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb98] 
    /*0000089c*/ MOV         SL, #0 
    VouProcShow_x8a0:
    /*000008a0*/ LDR         R3, [R7], #4 
    /*000008a4*/ CMP         R3, #0 
    /*000008a8*/ BEQ         VouProcShow_x8b8
    /*000008ac*/ LDR         R2, [R3, #4] 
    /*000008b0*/ CMP         R2, #1 
    /*000008b4*/ BEQ         VouProcShow_x10a4
    VouProcShow_x8b8:
    /*000008b8*/ ADD         SL, SL, #1 
    /*000008bc*/ CMP         SL, #4 
    /*000008c0*/ BNE         VouProcShow_x8a0
    VouProcShow_x8c4:
    /*000008c4*/ MOVW        R1, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x270] 
    /*000008c8*/ MOV         R0, FP 
    /*000008cc*/ MOVT        R1, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x270] 
    /*000008d0*/ BL          0x00000000000008D0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000008d4*/ MOVW        R1, #0                      @ .LC136 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xaa0] 
    /*000008d8*/ MOV         R0, FP 
    /*000008dc*/ MOVT        R1, #0                      @ .LC136 [R_ARM_MOVT_ABS: .rodata.str1.4+0xaa0] 
    /*000008e0*/ BL          0x00000000000008E0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000008e4*/ MOVW        R2, #0                      @ .LC138 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb50] 
    /*000008e8*/ MOVW        R3, #0                      @ .LC139 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb58] 
    /*000008ec*/ MOVT        R2, #0                      @ .LC138 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb50] 
    /*000008f0*/ MOVT        R3, #0                      @ .LC139 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb58] 
    /*000008f4*/ STR         R2, [SP, #32] 
    /*000008f8*/ STR         R3, [SP, #28] 
    /*000008fc*/ MOVW        R2, #0                      @ .LC140 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb60] 
    /*00000900*/ MOVW        R3, #0                      @ .LC141 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb68] 
    /*00000904*/ MOVT        R2, #0                      @ .LC140 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb60] 
    /*00000908*/ MOVT        R3, #0                      @ .LC141 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb68] 
    /*0000090c*/ STR         R2, [SP, #24] 
    /*00000910*/ STR         R3, [SP, #20] 
    /*00000914*/ MOVW        R2, #0                      @ .LC142 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb70] 
    /*00000918*/ MOVW        R3, #0                      @ .LC143 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb78] 
    /*0000091c*/ MOVT        R2, #0                      @ .LC142 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb70] 
    /*00000920*/ MOVT        R3, #0                      @ .LC143 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb78] 
    /*00000924*/ STR         R2, [SP, #16] 
    /*00000928*/ STR         R3, [SP, #12] 
    /*0000092c*/ MOVW        R2, #0                      @ .LC144 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb80] 
    /*00000930*/ MOVW        R3, #0                      @ .LC145 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb88] 
    /*00000934*/ MOVT        R2, #0                      @ .LC144 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb80] 
    /*00000938*/ MOVT        R3, #0                      @ .LC145 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb88] 
    /*0000093c*/ STR         R2, [SP, #8] 
    /*00000940*/ STR         R3, [SP, #4] 
    /*00000944*/ MOVW        R2, #0                      @ .LC146 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb90] 
    /*00000948*/ MOVW        R3, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa18] 
    /*0000094c*/ MOVT        R2, #0                      @ .LC146 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb90] 
    /*00000950*/ MOVT        R3, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa18] 
    /*00000954*/ STR         R2, [SP] 
    /*00000958*/ MOVW        R1, #0                      @ .LC137 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xb2c] 
    /*0000095c*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x498] 
    /*00000960*/ MOVT        R1, #0                      @ .LC137 [R_ARM_MOVT_ABS: .rodata.str1.4+0xb2c] 
    /*00000964*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x498] 
    /*00000968*/ MOV         R0, FP 
    /*0000096c*/ BL          0x000000000000096C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000970*/ LDR         R3, [R9, #240]              @ 0xf0 
    /*00000974*/ CMP         R3, #0 
    /*00000978*/ BEQ         VouProcShow_x9c4
    /*0000097c*/ MOVW        R8, #0                      @ .LC156 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcac] 
    /*00000980*/ LDR         R5, [PC, #3740]             @ 0x0000000000001824 
    /*00000984*/ MOVT        R8, #0                      @ .LC156 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcac] 
    /*00000988*/ MOVW        R6, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10] 
    /*0000098c*/ MOVW        SL, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14] 
    /*00000990*/ MOVT        R6, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10] 
    /*00000994*/ MOVT        SL, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14] 
    /*00000998*/ MOV         R4, #0 
    /*0000099c*/ MOV         R7, R8 
    VouProcShow_x9a0:
    /*000009a0*/ LDR         R1, [R5], #4 
    /*000009a4*/ CMP         R1, #0 
    /*000009a8*/ BEQ         VouProcShow_x9b8
    /*000009ac*/ LDR         R3, [R1, #4] 
    /*000009b0*/ CMP         R3, #1 
    /*000009b4*/ BEQ         VouProcShow_x11a8
    VouProcShow_x9b8:
    /*000009b8*/ ADD         R4, R4, #1 
    /*000009bc*/ CMP         R4, #4 
    /*000009c0*/ BNE         VouProcShow_x9a0
    VouProcShow_x9c4:
    /*000009c4*/ MOVW        R1, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x270] 
    /*000009c8*/ MOV         R0, FP 
    /*000009cc*/ MOVT        R1, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x270] 
    /*000009d0*/ BL          0x00000000000009D0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000009d4*/ MOVW        R1, #0                      @ .LC148 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xbc4] 
    /*000009d8*/ MOV         R0, FP 
    /*000009dc*/ MOVT        R1, #0                      @ .LC148 [R_ARM_MOVT_ABS: .rodata.str1.4+0xbc4] 
    /*000009e0*/ BL          0x00000000000009E0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000009e4*/ MOVW        R2, #0                      @ .LC150 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc70] 
    /*000009e8*/ MOVW        R3, #0                      @ .LC151 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc7c] 
    /*000009ec*/ MOVT        R2, #0                      @ .LC150 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc70] 
    /*000009f0*/ MOVT        R3, #0                      @ .LC151 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc7c] 
    /*000009f4*/ STR         R2, [SP, #20] 
    /*000009f8*/ STR         R3, [SP, #16] 
    /*000009fc*/ MOVW        R2, #0                      @ .LC152 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc84] 
    /*00000a00*/ MOVW        R3, #0                      @ .LC153 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc90] 
    /*00000a04*/ MOVT        R2, #0                      @ .LC152 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc84] 
    /*00000a08*/ MOVT        R3, #0                      @ .LC153 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc90] 
    /*00000a0c*/ STR         R2, [SP, #12] 
    /*00000a10*/ STR         R3, [SP, #8] 
    /*00000a14*/ MOVW        R2, #0                      @ .LC154 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc98] 
    /*00000a18*/ MOVW        R3, #0                      @ .LC155 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xca0] 
    /*00000a1c*/ MOVT        R2, #0                      @ .LC154 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc98] 
    /*00000a20*/ MOVT        R3, #0                      @ .LC155 [R_ARM_MOVT_ABS: .rodata.str1.4+0xca0] 
    /*00000a24*/ STR         R2, [SP, #4] 
    /*00000a28*/ STR         R3, [SP] 
    /*00000a2c*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x498] 
    /*00000a30*/ MOVW        R3, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa18] 
    /*00000a34*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x498] 
    /*00000a38*/ MOVT        R3, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa18] 
    /*00000a3c*/ MOVW        R1, #0                      @ .LC149 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xc50] 
    /*00000a40*/ MOV         R0, FP 
    /*00000a44*/ MOVT        R1, #0                      @ .LC149 [R_ARM_MOVT_ABS: .rodata.str1.4+0xc50] 
    /*00000a48*/ BL          0x0000000000000A48          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000a4c*/ LDR         R3, [R9, #240]              @ 0xf0 
    /*00000a50*/ CMP         R3, #0 
    /*00000a54*/ BEQ         VouProcShow_xa98
    /*00000a58*/ LDR         R7, [PC, #3524]             @ 0x0000000000001824 
    /*00000a5c*/ MOVW        R8, #0                      @ .LC172 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe00] 
    /*00000a60*/ MOVT        R8, #0                      @ .LC172 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe00] 
    /*00000a64*/ MOV         R6, #0 
    VouProcShow_xa68:
    /*00000a68*/ LDR         LR, [R7], #4 
    /*00000a6c*/ CMP         LR, #0 
    /*00000a70*/ BEQ         VouProcShow_xa8c
    /*00000a74*/ LDR         R3, [LR, #24] 
    /*00000a78*/ CMP         R3, #0 
    /*00000a7c*/ BEQ         VouProcShow_x17c4
    /*00000a80*/ LDR         R2, [LR, #4] 
    /*00000a84*/ CMP         R2, #1 
    /*00000a88*/ BEQ         VouProcShow_x12dc
    VouProcShow_xa8c:
    /*00000a8c*/ ADD         R6, R6, #1 
    /*00000a90*/ CMP         R6, #4 
    /*00000a94*/ BNE         VouProcShow_xa68
    VouProcShow_xa98:
    /*00000a98*/ MOVW        R1, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x270] 
    /*00000a9c*/ MOV         R0, FP 
    /*00000aa0*/ MOVT        R1, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x270] 
    /*00000aa4*/ BL          0x0000000000000AA4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000aa8*/ MOVW        R1, #0                      @ .LC157 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xcd0] 
    /*00000aac*/ MOV         R0, FP 
    /*00000ab0*/ MOVT        R1, #0                      @ .LC157 [R_ARM_MOVT_ABS: .rodata.str1.4+0xcd0] 
    /*00000ab4*/ BL          0x0000000000000AB4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000ab8*/ MOVW        R2, #0                      @ .LC159 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd90] 
    /*00000abc*/ MOVW        R3, #0                      @ .LC160 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd9c] 
    /*00000ac0*/ MOVT        R2, #0                      @ .LC159 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd90] 
    /*00000ac4*/ MOVT        R3, #0                      @ .LC160 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd9c] 
    /*00000ac8*/ STR         R2, [SP, #48]               @ 0x30 
    /*00000acc*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00000ad0*/ MOVW        R2, #0                      @ .LC161 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xda4] 
    /*00000ad4*/ MOVW        R3, #0                      @ .LC162 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdac] 
    /*00000ad8*/ MOVT        R2, #0                      @ .LC161 [R_ARM_MOVT_ABS: .rodata.str1.4+0xda4] 
    /*00000adc*/ MOVT        R3, #0                      @ .LC162 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdac] 
    /*00000ae0*/ STR         R2, [SP, #40]               @ 0x28 
    /*00000ae4*/ STR         R3, [SP, #36]               @ 0x24 
    /*00000ae8*/ MOVW        R2, #0                      @ .LC163 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdb4] 
    /*00000aec*/ MOVW        R3, #0                      @ .LC164 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdbc] 
    /*00000af0*/ MOVT        R2, #0                      @ .LC163 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdb4] 
    /*00000af4*/ MOVT        R3, #0                      @ .LC164 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdbc] 
    /*00000af8*/ STR         R2, [SP, #32] 
    /*00000afc*/ STR         R3, [SP, #28] 
    /*00000b00*/ MOVW        R2, #0                      @ .LC165 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdc4] 
    /*00000b04*/ MOVW        R3, #0                      @ .LC166 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdcc] 
    /*00000b08*/ MOVT        R2, #0                      @ .LC165 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdc4] 
    /*00000b0c*/ MOVT        R3, #0                      @ .LC166 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdcc] 
    /*00000b10*/ STR         R2, [SP, #24] 
    /*00000b14*/ STR         R3, [SP, #20] 
    /*00000b18*/ MOVW        R2, #0                      @ .LC167 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdd4] 
    /*00000b1c*/ MOVW        R3, #0                      @ .LC168 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xddc] 
    /*00000b20*/ MOVT        R2, #0                      @ .LC167 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdd4] 
    /*00000b24*/ MOVT        R3, #0                      @ .LC168 [R_ARM_MOVT_ABS: .rodata.str1.4+0xddc] 
    /*00000b28*/ STR         R2, [SP, #16] 
    /*00000b2c*/ STR         R3, [SP, #12] 
    /*00000b30*/ MOVW        R2, #0                      @ .LC169 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xde8] 
    /*00000b34*/ MOVW        R3, #0                      @ .LC170 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdf4] 
    /*00000b38*/ MOVT        R2, #0                      @ .LC169 [R_ARM_MOVT_ABS: .rodata.str1.4+0xde8] 
    /*00000b3c*/ MOVT        R3, #0                      @ .LC170 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdf4] 
    /*00000b40*/ STR         R2, [SP, #8] 
    /*00000b44*/ STR         R3, [SP, #4] 
    /*00000b48*/ MOVW        R2, #0                      @ .LC171 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xdfc] 
    /*00000b4c*/ MOVW        R3, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa18] 
    /*00000b50*/ MOVT        R2, #0                      @ .LC171 [R_ARM_MOVT_ABS: .rodata.str1.4+0xdfc] 
    /*00000b54*/ MOVT        R3, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa18] 
    /*00000b58*/ STR         R2, [SP] 
    /*00000b5c*/ MOVW        R1, #0                      @ .LC158 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xd5c] 
    /*00000b60*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x498] 
    /*00000b64*/ MOVT        R1, #0                      @ .LC158 [R_ARM_MOVT_ABS: .rodata.str1.4+0xd5c] 
    /*00000b68*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x498] 
    /*00000b6c*/ MOV         R0, FP 
    /*00000b70*/ BL          0x0000000000000B70          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000b74*/ LDR         R3, [R9, #420]              @ 0x1a4 
    /*00000b78*/ CMP         R3, #1 
    /*00000b7c*/ BEQ         VouProcShow_xbd0
    /*00000b80*/ LDR         R3, [R9, #504]              @ 0x1f8 
    /*00000b84*/ CMP         R3, #0 
    /*00000b88*/ LDRNE       R7, [R3] 
    /*00000b8c*/ MOVEQ       R7, R3 
    /*00000b90*/ LDR         R3, [R9, #240]              @ 0xf0 
    /*00000b94*/ CMP         R3, #0 
    /*00000b98*/ BEQ         VouProcShow_xbd0
    /*00000b9c*/ LDR         R6, [PC, #3200]             @ 0x0000000000001824 
    /*00000ba0*/ MOVW        R5, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14] 
    /*00000ba4*/ MOVT        R5, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14] 
    /*00000ba8*/ MOV         R4, #0 
    VouProcShow_xbac:
    /*00000bac*/ LDR         IP, [R6], #4 
    /*00000bb0*/ CMP         IP, #0 
    /*00000bb4*/ BEQ         VouProcShow_xbc4
    /*00000bb8*/ LDR         R3, [IP, #4] 
    /*00000bbc*/ CMP         R3, #1 
    /*00000bc0*/ BEQ         VouProcShow_x13bc
    VouProcShow_xbc4:
    /*00000bc4*/ ADD         R4, R4, #1 
    /*00000bc8*/ CMP         R4, #4 
    /*00000bcc*/ BNE         VouProcShow_xbac
    VouProcShow_xbd0:
    /*00000bd0*/ MOVW        R1, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x270] 
    /*00000bd4*/ MOV         R0, FP 
    /*00000bd8*/ MOVT        R1, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x270] 
    /*00000bdc*/ BL          0x0000000000000BDC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000be0*/ MOVW        R1, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xe2c] 
    /*00000be4*/ MOV         R0, FP 
    /*00000be8*/ MOVT        R1, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0xe2c] 
    /*00000bec*/ BL          0x0000000000000BEC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000bf0*/ MOVW        R2, #0                      @ .LC175 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xedc] 
    /*00000bf4*/ MOVW        R3, #0                      @ .LC176 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xee8] 
    /*00000bf8*/ MOVT        R2, #0                      @ .LC175 [R_ARM_MOVT_ABS: .rodata.str1.4+0xedc] 
    /*00000bfc*/ MOVT        R3, #0                      @ .LC176 [R_ARM_MOVT_ABS: .rodata.str1.4+0xee8] 
    /*00000c00*/ STR         R2, [SP, #24] 
    /*00000c04*/ STR         R3, [SP, #20] 
    /*00000c08*/ MOVW        R2, #0                      @ .LC177 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xef4] 
    /*00000c0c*/ MOVW        R3, #0                      @ .LC178 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf00] 
    /*00000c10*/ MOVT        R2, #0                      @ .LC177 [R_ARM_MOVT_ABS: .rodata.str1.4+0xef4] 
    /*00000c14*/ MOVT        R3, #0                      @ .LC178 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf00] 
    /*00000c18*/ STR         R2, [SP, #16] 
    /*00000c1c*/ STR         R3, [SP, #12] 
    /*00000c20*/ MOVW        R2, #0                      @ .LC179 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf0c] 
    /*00000c24*/ MOVW        R3, #0                      @ .LC180 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf14] 
    /*00000c28*/ MOVT        R2, #0                      @ .LC179 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf0c] 
    /*00000c2c*/ MOVT        R3, #0                      @ .LC180 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf14] 
    /*00000c30*/ STR         R2, [SP, #8] 
    /*00000c34*/ STR         R3, [SP, #4] 
    /*00000c38*/ MOVW        R2, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf20] 
    /*00000c3c*/ MOVW        R3, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa18] 
    /*00000c40*/ MOVT        R2, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf20] 
    /*00000c44*/ MOVT        R3, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa18] 
    /*00000c48*/ STR         R2, [SP] 
    /*00000c4c*/ MOVW        R1, #0                      @ .LC174 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xeb8] 
    /*00000c50*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x498] 
    /*00000c54*/ MOVT        R1, #0                      @ .LC174 [R_ARM_MOVT_ABS: .rodata.str1.4+0xeb8] 
    /*00000c58*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x498] 
    /*00000c5c*/ MOV         R0, FP 
    /*00000c60*/ BL          0x0000000000000C60          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000c64*/ LDR         R3, [R9, #420]              @ 0x1a4 
    /*00000c68*/ CMP         R3, #1 
    /*00000c6c*/ BEQ         VouProcShow_xcbc
    /*00000c70*/ LDR         R3, [R9, #240]              @ 0xf0 
    /*00000c74*/ CMP         R3, #0 
    /*00000c78*/ BEQ         VouProcShow_xcbc
    /*00000c7c*/ LDR         R5, [PC, #2976]             @ 0x0000000000001824 
    /*00000c80*/ MOVW        R7, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10] 
    /*00000c84*/ LDR         R8, [PC, #2972]             @ 0x0000000000001828 
    /*00000c88*/ MOVW        R6, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14] 
    /*00000c8c*/ MOVT        R7, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10] 
    /*00000c90*/ MOVT        R6, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14] 
    /*00000c94*/ MOV         R4, #0 
    VouProcShow_xc98:
    /*00000c98*/ LDR         IP, [R5], #4 
    /*00000c9c*/ CMP         IP, #0 
    /*00000ca0*/ BEQ         VouProcShow_xcb0
    /*00000ca4*/ LDR         R3, [IP, #4] 
    /*00000ca8*/ CMP         R3, #1 
    /*00000cac*/ BEQ         VouProcShow_x14b8
    VouProcShow_xcb0:
    /*00000cb0*/ ADD         R4, R4, #1 
    /*00000cb4*/ CMP         R4, #4 
    /*00000cb8*/ BNE         VouProcShow_xc98
    VouProcShow_xcbc:
    /*00000cbc*/ MOVW        R1, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x270] 
    /*00000cc0*/ MOV         R0, FP 
    /*00000cc4*/ MOVT        R1, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x270] 
    /*00000cc8*/ BL          0x0000000000000CC8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000ccc*/ MOVW        R1, #0                      @ .LC183 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf64] 
    /*00000cd0*/ MOV         R0, FP 
    /*00000cd4*/ MOVT        R1, #0                      @ .LC183 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf64] 
    /*00000cd8*/ BL          0x0000000000000CD8          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000cdc*/ LDR         R3, [SP, #68]               @ 0x44 
    /*00000ce0*/ LDR         R2, [SP, #76]               @ 0x4c 
    /*00000ce4*/ MOV         R0, FP 
    /*00000ce8*/ LDR         R1, [SP, #84]               @ 0x54 
    /*00000cec*/ STR         R3, [SP, #20] 
    /*00000cf0*/ STR         R2, [SP, #12] 
    /*00000cf4*/ LDR         R3, [SP, #72]               @ 0x48 
    /*00000cf8*/ LDR         R2, [SP, #80]               @ 0x50 
    /*00000cfc*/ STR         R1, [SP, #4] 
    /*00000d00*/ MOVW        R1, #0                      @ .LC185 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfcc] 
    /*00000d04*/ STR         R3, [SP, #16] 
    /*00000d08*/ MOVT        R1, #0                      @ .LC185 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfcc] 
    /*00000d0c*/ STR         R2, [SP, #8] 
    /*00000d10*/ MOVW        R3, #0                      @ .LC186 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfe0] 
    /*00000d14*/ MOVW        R2, #0                      @ .LC100 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7c4] 
    /*00000d18*/ MOVT        R3, #0                      @ .LC186 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfe0] 
    /*00000d1c*/ MOVT        R2, #0                      @ .LC100 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7c4] 
    /*00000d20*/ STR         R3, [SP, #24] 
    /*00000d24*/ STR         R2, [SP] 
    /*00000d28*/ MOVW        R3, #0                      @ .LC184 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xfc4] 
    /*00000d2c*/ MOVW        R2, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7d8] 
    /*00000d30*/ MOVT        R3, #0                      @ .LC184 [R_ARM_MOVT_ABS: .rodata.str1.4+0xfc4] 
    /*00000d34*/ MOVT        R2, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7d8] 
    /*00000d38*/ BL          0x0000000000000D38          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000d3c*/ LDR         R3, [R9, #420]              @ 0x1a4 
    /*00000d40*/ CMP         R3, #1 
    /*00000d44*/ BEQ         VouProcShow_xd90
    /*00000d48*/ LDR         R3, [R9, #240]              @ 0xf0 
    /*00000d4c*/ CMP         R3, #0 
    /*00000d50*/ BEQ         VouProcShow_xd90
    /*00000d54*/ LDR         R5, [PC, #2760]             @ 0x0000000000001824 
    /*00000d58*/ MOVW        R7, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x18] 
    /*00000d5c*/ MOVW        R6, #0                      @ .LC198 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10cc] 
    /*00000d60*/ MOVT        R7, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x18] 
    /*00000d64*/ MOVT        R6, #0                      @ .LC198 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10cc] 
    /*00000d68*/ MOV         R4, #0 
    VouProcShow_xd6c:
    /*00000d6c*/ LDR         R3, [R5], #4 
    /*00000d70*/ CMP         R3, #0 
    /*00000d74*/ BEQ         VouProcShow_xd84
    /*00000d78*/ LDR         R2, [R3, #4] 
    /*00000d7c*/ CMP         R2, #1 
    /*00000d80*/ BEQ         VouProcShow_x1340
    VouProcShow_xd84:
    /*00000d84*/ ADD         R4, R4, #1 
    /*00000d88*/ CMP         R4, #4 
    /*00000d8c*/ BNE         VouProcShow_xd6c
    VouProcShow_xd90:
    /*00000d90*/ MOVW        R1, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x270] 
    /*00000d94*/ MOV         R0, FP 
    /*00000d98*/ MOVT        R1, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x270] 
    /*00000d9c*/ BL          0x0000000000000D9C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000da0*/ MOVW        R1, #0                      @ .LC188 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1018] 
    /*00000da4*/ MOV         R0, FP 
    /*00000da8*/ MOVT        R1, #0                      @ .LC188 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1018] 
    /*00000dac*/ BL          0x0000000000000DAC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000db0*/ MOVW        R2, #0                      @ .LC190 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x108c] 
    /*00000db4*/ MOVW        R3, #0                      @ .LC191 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1094] 
    /*00000db8*/ MOVT        R2, #0                      @ .LC190 [R_ARM_MOVT_ABS: .rodata.str1.4+0x108c] 
    /*00000dbc*/ MOVT        R3, #0                      @ .LC191 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1094] 
    /*00000dc0*/ STR         R2, [SP, #28] 
    /*00000dc4*/ STR         R3, [SP, #24] 
    /*00000dc8*/ MOVW        R2, #0                      @ .LC192 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x109c] 
    /*00000dcc*/ MOVW        R3, #0                      @ .LC193 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10a4] 
    /*00000dd0*/ MOVT        R2, #0                      @ .LC192 [R_ARM_MOVT_ABS: .rodata.str1.4+0x109c] 
    /*00000dd4*/ MOVT        R3, #0                      @ .LC193 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10a4] 
    /*00000dd8*/ STR         R2, [SP, #20] 
    /*00000ddc*/ STR         R3, [SP, #16] 
    /*00000de0*/ MOVW        R2, #0                      @ .LC194 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10ac] 
    /*00000de4*/ MOVW        R3, #0                      @ .LC195 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10b4] 
    /*00000de8*/ MOVT        R2, #0                      @ .LC194 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10ac] 
    /*00000dec*/ MOVT        R3, #0                      @ .LC195 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10b4] 
    /*00000df0*/ STR         R2, [SP, #12] 
    /*00000df4*/ STR         R3, [SP, #8] 
    /*00000df8*/ MOVW        R2, #0                      @ .LC196 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10bc] 
    /*00000dfc*/ MOVW        R3, #0                      @ .LC197 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10c4] 
    /*00000e00*/ MOVT        R2, #0                      @ .LC196 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10bc] 
    /*00000e04*/ MOVT        R3, #0                      @ .LC197 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10c4] 
    /*00000e08*/ STR         R2, [SP, #4] 
    /*00000e0c*/ STR         R3, [SP] 
    /*00000e10*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x498] 
    /*00000e14*/ MOVW        R3, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xa18] 
    /*00000e18*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x498] 
    /*00000e1c*/ MOVT        R3, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0xa18] 
    /*00000e20*/ MOVW        R1, #0                      @ .LC189 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x106c] 
    /*00000e24*/ MOV         R0, FP 
    /*00000e28*/ MOVT        R1, #0                      @ .LC189 [R_ARM_MOVT_ABS: .rodata.str1.4+0x106c] 
    /*00000e2c*/ BL          0x0000000000000E2C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000e30*/ LDR         R3, [R9, #240]              @ 0xf0 
    /*00000e34*/ CMP         R3, #0 
    /*00000e38*/ BEQ         VouProcShow_xe80
    /*00000e3c*/ LDR         R5, [PC, #2528]             @ 0x0000000000001824 
    /*00000e40*/ MOVW        R8, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10] 
    /*00000e44*/ MOVW        R7, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14] 
    /*00000e48*/ MOVW        R6, #0                      @ .LC199 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10f0] 
    /*00000e4c*/ MOVT        R8, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10] 
    /*00000e50*/ MOVT        R7, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14] 
    /*00000e54*/ MOVT        R6, #0                      @ .LC199 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10f0] 
    /*00000e58*/ MOV         R4, #0 
    VouProcShow_xe5c:
    /*00000e5c*/ LDR         R1, [R5], #4 
    /*00000e60*/ CMP         R1, #0 
    /*00000e64*/ BEQ         VouProcShow_xe74
    /*00000e68*/ LDR         R3, [R1, #4] 
    /*00000e6c*/ CMP         R3, #1 
    /*00000e70*/ BEQ         VouProcShow_x126c
    VouProcShow_xe74:
    /*00000e74*/ ADD         R4, R4, #1 
    /*00000e78*/ CMP         R4, #4 
    /*00000e7c*/ BNE         VouProcShow_xe5c
    VouProcShow_xe80:
    /*00000e80*/ MOV         R0, FP 
    /*00000e84*/ MOVW        R1, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x270] 
    /*00000e88*/ MOVT        R1, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x270] 
    /*00000e8c*/ BL          0x0000000000000E8C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00000e90*/ MOV         R0, FP 
    /*00000e94*/ BL          0x0000000000000E94          @ VOU_GraphicsShowProc [R_ARM_CALL: .text+0x14da4] 
    /*00000e98*/ MOV         R0, #0 
    /*00000e9c*/ ADD         SP, SP, #164                @ 0xa4 
    /*00000ea0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*00000ea4*/ ADD         R3, SP, #130                @ 0x82 
    /*00000ea8*/ MOVW        R1, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f0] 
    /*00000eac*/ MOVT        R1, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f0] 
    /*00000eb0*/ MLA         R0, R2, R5, R3 
    /*00000eb4*/ BL          0x0000000000000EB4          @ osal_strncpy [R_ARM_CALL: +0x0] 
    VouProcShow_xeb8:
    /*00000eb8*/ ADD         R5, R5, #1 
    /*00000ebc*/ CMP         R5, #3 
    /*00000ec0*/ BLE         VouProcShow_x1d8
    /*00000ec4*/ B           VouProcShow_x1bc
    /*00000ec8*/ ADD         R3, SP, #130                @ 0x82 
    /*00000ecc*/ MOVW        R1, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e4] 
    /*00000ed0*/ MOVT        R1, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e4] 
    /*00000ed4*/ MLA         R0, R2, R5, R3 
    /*00000ed8*/ BL          0x0000000000000ED8          @ osal_strncpy [R_ARM_CALL: +0x0] 
    /*00000edc*/ B           VouProcShow_xeb8
    /*00000ee0*/ ADD         R3, SP, #130                @ 0x82 
    /*00000ee4*/ MOVW        R1, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d8] 
    /*00000ee8*/ MOVT        R1, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d8] 
    /*00000eec*/ MLA         R0, R2, R5, R3 
    /*00000ef0*/ BL          0x0000000000000EF0          @ osal_strncpy [R_ARM_CALL: +0x0] 
    /*00000ef4*/ B           VouProcShow_xeb8
    /*00000ef8*/ ADD         R3, SP, #130                @ 0x82 
    /*00000efc*/ MOVW        R1, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cc] 
    /*00000f00*/ MOVT        R1, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cc] 
    /*00000f04*/ MLA         R0, R2, R5, R3 
    /*00000f08*/ BL          0x0000000000000F08          @ osal_strncpy [R_ARM_CALL: +0x0] 
    /*00000f0c*/ B           VouProcShow_xeb8
    /*00000f10*/ ADD         R3, SP, #130                @ 0x82 
    /*00000f14*/ MOVW        R1, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c0] 
    /*00000f18*/ MOVT        R1, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c0] 
    /*00000f1c*/ MLA         R0, R2, R5, R3 
    /*00000f20*/ BL          0x0000000000000F20          @ osal_strncpy [R_ARM_CALL: +0x0] 
    /*00000f24*/ B           VouProcShow_xeb8
    /*00000f28*/ ADD         R3, SP, #130                @ 0x82 
    /*00000f2c*/ MOVW        R1, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b4] 
    /*00000f30*/ MOVT        R1, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b4] 
    /*00000f34*/ MLA         R0, R2, R5, R3 
    /*00000f38*/ BL          0x0000000000000F38          @ osal_strncpy [R_ARM_CALL: +0x0] 
    /*00000f3c*/ B           VouProcShow_xeb8
    /*00000f40*/ ADD         R3, SP, #130                @ 0x82 
    /*00000f44*/ MOVW        R1, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a8] 
    /*00000f48*/ MOVT        R1, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a8] 
    /*00000f4c*/ MLA         R0, R2, R5, R3 
    /*00000f50*/ BL          0x0000000000000F50          @ osal_strncpy [R_ARM_CALL: +0x0] 
    /*00000f54*/ B           VouProcShow_xeb8
    /*00000f58*/ ADD         R3, SP, #130                @ 0x82 
    /*00000f5c*/ MOVW        R1, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x19c] 
    /*00000f60*/ MOVT        R1, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x19c] 
    /*00000f64*/ MLA         R0, R2, R5, R3 
    /*00000f68*/ BL          0x0000000000000F68          @ osal_strncpy [R_ARM_CALL: +0x0] 
    /*00000f6c*/ B           VouProcShow_xeb8
    /*00000f70*/ ADD         R3, SP, #130                @ 0x82 
    /*00000f74*/ MOVW        R1, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x190] 
    /*00000f78*/ MOVT        R1, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x190] 
    /*00000f7c*/ MLA         R0, R2, R5, R3 
    /*00000f80*/ BL          0x0000000000000F80          @ osal_strncpy [R_ARM_CALL: +0x0] 
    /*00000f84*/ B           VouProcShow_xeb8
    /*00000f88*/ ADD         R3, SP, #130                @ 0x82 
    /*00000f8c*/ MOVW        R1, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x184] 
    /*00000f90*/ MOVT        R1, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x184] 
    /*00000f94*/ MLA         R0, R2, R5, R3 
    /*00000f98*/ BL          0x0000000000000F98          @ osal_strncpy [R_ARM_CALL: +0x0] 
    /*00000f9c*/ B           VouProcShow_xeb8
    /*00000fa0*/ ADD         R3, SP, #130                @ 0x82 
    /*00000fa4*/ MOVW        R1, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x178] 
    /*00000fa8*/ MOVT        R1, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x178] 
    /*00000fac*/ MLA         R0, R2, R5, R3 
    /*00000fb0*/ BL          0x0000000000000FB0          @ osal_strncpy [R_ARM_CALL: +0x0] 
    /*00000fb4*/ B           VouProcShow_xeb8
    /*00000fb8*/ ADD         R3, SP, #130                @ 0x82 
    /*00000fbc*/ MOVW        R1, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x16c] 
    /*00000fc0*/ MOVT        R1, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x16c] 
    /*00000fc4*/ MLA         R0, R2, R5, R3 
    /*00000fc8*/ BL          0x0000000000000FC8          @ osal_strncpy [R_ARM_CALL: +0x0] 
    /*00000fcc*/ B           VouProcShow_xeb8
    /*00000fd0*/ ADD         R3, SP, #130                @ 0x82 
    /*00000fd4*/ MOVW        R1, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x160] 
    /*00000fd8*/ MOVT        R1, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x160] 
    /*00000fdc*/ MLA         R0, R2, R5, R3 
    /*00000fe0*/ BL          0x0000000000000FE0          @ osal_strncpy [R_ARM_CALL: +0x0] 
    /*00000fe4*/ B           VouProcShow_xeb8
    /*00000fe8*/ ADD         R3, SP, #130                @ 0x82 
    /*00000fec*/ MOVW        R1, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x154] 
    /*00000ff0*/ MOVT        R1, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x154] 
    /*00000ff4*/ MLA         R0, R2, R5, R3 
    /*00000ff8*/ BL          0x0000000000000FF8          @ osal_strncpy [R_ARM_CALL: +0x0] 
    /*00000ffc*/ B           VouProcShow_xeb8
    VouProcShow_x1000:
    /*00001000*/ LDR         R3, [R9, #240]              @ 0xf0 
    /*00001004*/ CMP         R3, #0 
    /*00001008*/ BEQ         VouProcShow_x6d8
    /*0000100c*/ LDR         R0, [R9, #264]              @ 0x108 
    /*00001010*/ MOVW        R1, #0                      @ .LC114 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8ec] 
    /*00001014*/ LDR         IP, [R9, #260]              @ 0x104 
    /*00001018*/ MOVT        R1, #0                      @ .LC114 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8ec] 
    /*0000101c*/ LDR         R3, [R9, #256]              @ 0x100 
    /*00001020*/ MOV         R2, #0 
    /*00001024*/ STR         R0, [SP, #4] 
    /*00001028*/ MOV         R0, FP 
    /*0000102c*/ STR         IP, [SP] 
    /*00001030*/ BL          0x0000000000001030          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00001034*/ B           VouProcShow_x6d8
    VouProcShow_x1038:
    /*00001038*/ LDR         IP, [PC, #2024]             @ 0x0000000000001828 
    /*0000103c*/ LDR         R3, [IP, #88]               @ 0x58 
    /*00001040*/ CMP         R3, #0 
    /*00001044*/ BEQ         VouProcShow_x674
    /*00001048*/ CMP         R3, #2 
    /*0000104c*/ LDR         R0, [IP, #92]               @ 0x5c 
    /*00001050*/ LDR         LR, [IP, #108]              @ 0x6c 
    /*00001054*/ MOVW        R1, #0                      @ .LC108 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x82c] 
    /*00001058*/ MOVWLS      R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*0000105c*/ MOVTLS      R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00001060*/ ADDLS       R3, R2, R3, LSL #2 
    /*00001064*/ LDR         R2, [IP, #104]              @ 0x68 
    /*00001068*/ STR         R0, [SP, #16] 
    /*0000106c*/ MOVWHI      R3, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x18] 
    /*00001070*/ LDR         R0, [IP, #100]              @ 0x64 
    /*00001074*/ MOVTHI      R3, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x18] 
    /*00001078*/ LDR         IP, [IP, #96]               @ 0x60 
    /*0000107c*/ MOVT        R1, #0                      @ .LC108 [R_ARM_MOVT_ABS: .rodata.str1.4+0x82c] 
    /*00001080*/ STR         R2, [SP, #8] 
    /*00001084*/ MOV         R2, #0 
    /*00001088*/ STR         R0, [SP, #4] 
    /*0000108c*/ MOV         R0, FP 
    /*00001090*/ LDRLS       R3, [R3, #284]              @ 0x11c 
    /*00001094*/ STR         LR, [SP, #12] 
    /*00001098*/ STR         IP, [SP] 
    /*0000109c*/ BL          0x000000000000109C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000010a0*/ B           VouProcShow_x674
    VouProcShow_x10a4:
    /*000010a4*/ LDR         R1, [R3, #84]               @ 0x54 
    /*000010a8*/ LDR         R2, [R3, #12] 
    /*000010ac*/ CMP         R1, #0 
    /*000010b0*/ LDR         LR, [R3, #360]              @ 0x168 
    /*000010b4*/ MOVNE       R1, R6 
    /*000010b8*/ MOVEQ       R1, R5 
    /*000010bc*/ CMP         R2, #0 
    /*000010c0*/ LDR         R2, [R3, #68]               @ 0x44 
    /*000010c4*/ STR         R1, [SP, #116]              @ 0x74 
    /*000010c8*/ LDR         R1, [R3, #64]               @ 0x40 
    /*000010cc*/ MVNEQ       IP, #0 
    /*000010d0*/ STR         R2, [SP, #104]              @ 0x68 
    /*000010d4*/ MOVEQ       R0, IP 
    /*000010d8*/ LDR         R2, [R3, #72]               @ 0x48 
    /*000010dc*/ STR         R1, [SP, #88]               @ 0x58 
    /*000010e0*/ LDR         R1, [R3, #48]               @ 0x30 
    /*000010e4*/ STR         R2, [SP, #96]               @ 0x60 
    /*000010e8*/ LDR         R2, [R3, #76]               @ 0x4c 
    /*000010ec*/ LDRNE       IP, [R3, #116]              @ 0x74 
    /*000010f0*/ LDRNE       R0, [R3, #120]              @ 0x78 
    /*000010f4*/ CMP         R1, #0 
    /*000010f8*/ STR         R2, [SP, #108]              @ 0x6c 
    /*000010fc*/ LDR         R2, [R3, #80]               @ 0x50 
    /*00001100*/ MOVNE       R1, R6 
    /*00001104*/ MOVEQ       R1, R5 
    /*00001108*/ CMP         LR, #2 
    /*0000110c*/ ADD         R3, R3, #8192               @ 0x2000 
    /*00001110*/ STR         R2, [SP, #112]              @ 0x70 
    /*00001114*/ MOVWLS      R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00001118*/ MOVTLS      R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*0000111c*/ MOVWHI      R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x0] 
    /*00001120*/ ADDLS       R2, R2, LR, LSL #2 
    /*00001124*/ LDR         LR, [R3, #1352]             @ 0x548 
    /*00001128*/ STR         IP, [SP, #28] 
    /*0000112c*/ MOVTHI      R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x0] 
    /*00001130*/ LDR         IP, [SP, #112]              @ 0x70 
    /*00001134*/ LDRLS       R2, [R2, #296]              @ 0x128 
    /*00001138*/ CMP         LR, #3 
    /*0000113c*/ STR         R1, [SP, #36]               @ 0x24 
    /*00001140*/ MOV         R1, R4 
    /*00001144*/ STR         IP, [SP, #24] 
    /*00001148*/ MOVWLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*0000114c*/ LDR         IP, [SP, #108]              @ 0x6c 
    /*00001150*/ MOVTLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00001154*/ ADDLS       R3, R3, LR, LSL #2 
    /*00001158*/ MOVWHI      R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x0] 
    /*0000115c*/ STR         R2, [SP, #40]               @ 0x28 
    /*00001160*/ MOVTHI      R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x0] 
    /*00001164*/ STR         IP, [SP, #20] 
    /*00001168*/ MOV         R2, #0 
    /*0000116c*/ LDR         IP, [SP, #96]               @ 0x60 
    /*00001170*/ LDRLS       R3, [R3, #308]              @ 0x134 
    /*00001174*/ STR         R0, [SP, #32] 
    /*00001178*/ MOV         R0, FP 
    /*0000117c*/ STR         IP, [SP, #16] 
    /*00001180*/ LDR         IP, [SP, #104]              @ 0x68 
    /*00001184*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00001188*/ MOV         R3, SL 
    /*0000118c*/ STR         IP, [SP, #12] 
    /*00001190*/ LDR         IP, [SP, #116]              @ 0x74 
    /*00001194*/ STR         IP, [SP, #8] 
    /*00001198*/ LDR         IP, [SP, #88]               @ 0x58 
    /*0000119c*/ STM         SP, {R8, IP} 
    /*000011a0*/ BL          0x00000000000011A0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000011a4*/ B           VouProcShow_x8b8
    VouProcShow_x11a8:
    /*000011a8*/ LDR         R0, [R1, #16] 
    /*000011ac*/ ADD         IP, R1, #8192               @ 0x2000 
    /*000011b0*/ LDR         R2, [R1, #328]              @ 0x148 
    /*000011b4*/ MOV         R3, R4 
    /*000011b8*/ LDR         R8, [IP, #1060]             @ 0x424 
    /*000011bc*/ CMP         R0, #0 
    /*000011c0*/ LDR         IP, [R1, #216]              @ 0xd8 
    /*000011c4*/ MOVNE       R0, R6 
    /*000011c8*/ MOVEQ       R0, SL 
    /*000011cc*/ CMP         R8, #0 
    /*000011d0*/ STR         R0, [SP, #104]              @ 0x68 
    /*000011d4*/ LDR         R8, [R1, #220]              @ 0xdc 
    /*000011d8*/ MOVNE       R0, R6 
    /*000011dc*/ MOVEQ       R0, SL 
    /*000011e0*/ CMP         IP, #0 
    /*000011e4*/ LDR         LR, [R1, #224]              @ 0xe0 
    /*000011e8*/ STR         R0, [SP, #88]               @ 0x58 
    /*000011ec*/ MOVNE       IP, R6 
    /*000011f0*/ MOVEQ       IP, SL 
    /*000011f4*/ CMP         R8, #0 
    /*000011f8*/ LDR         R0, [R1, #232]              @ 0xe8 
    /*000011fc*/ STR         R2, [SP, #32] 
    /*00001200*/ MOVNE       R8, R6 
    /*00001204*/ MOVEQ       R8, SL 
    /*00001208*/ CMP         LR, #0 
    /*0000120c*/ LDR         LR, [R1, #60]               @ 0x3c 
    /*00001210*/ MOVNE       R2, R6 
    /*00001214*/ MOVEQ       R2, SL 
    /*00001218*/ STR         LR, [SP, #28] 
    /*0000121c*/ CMP         R0, #0 
    /*00001220*/ LDR         R1, [R1, #1152]             @ 0x480 
    /*00001224*/ STR         R2, [SP, #96]               @ 0x60 
    /*00001228*/ MOVNE       R0, R6 
    /*0000122c*/ LDR         LR, [SP, #96]               @ 0x60 
    /*00001230*/ MOVEQ       R0, SL 
    /*00001234*/ STR         R1, [SP, #24] 
    /*00001238*/ MOV         R2, #0 
    /*0000123c*/ LDR         R1, [SP, #88]               @ 0x58 
    /*00001240*/ STR         IP, [SP, #8] 
    /*00001244*/ LDR         IP, [SP, #104]              @ 0x68 
    /*00001248*/ STR         R1, [SP] 
    /*0000124c*/ MOV         R1, R7 
    /*00001250*/ STR         R0, [SP, #20] 
    /*00001254*/ MOV         R0, FP 
    /*00001258*/ STR         LR, [SP, #16] 
    /*0000125c*/ STR         R8, [SP, #12] 
    /*00001260*/ STR         IP, [SP, #4] 
    /*00001264*/ BL          0x0000000000001264          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00001268*/ B           VouProcShow_x9b8
    VouProcShow_x126c:
    /*0000126c*/ LDR         R3, [R1, #256]              @ 0x100 
    /*00001270*/ MOV         R2, #0 
    /*00001274*/ LDR         IP, [R1, #236]              @ 0xec 
    /*00001278*/ CMP         R3, #0 
    /*0000127c*/ LDR         R0, [R1, #196]              @ 0xc4 
    /*00001280*/ MOVNE       R3, R8 
    /*00001284*/ MOVEQ       R3, R7 
    /*00001288*/ STR         R3, [SP, #72]               @ 0x48 
    /*0000128c*/ LDR         R3, [R1, #248]              @ 0xf8 
    /*00001290*/ LDR         LR, [R1, #240]              @ 0xf0 
    /*00001294*/ LDR         R9, [R1, #244]              @ 0xf4 
    /*00001298*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000129c*/ MOV         R3, R4 
    /*000012a0*/ LDR         SL, [R1, #252]              @ 0xfc 
    /*000012a4*/ STR         R0, [SP, #28] 
    /*000012a8*/ LDR         R0, [SP, #68]               @ 0x44 
    /*000012ac*/ LDR         R1, [R1, #192]              @ 0xc0 
    /*000012b0*/ STMIB       SP, {IP, LR} 
    /*000012b4*/ LDR         IP, [SP, #72]               @ 0x48 
    /*000012b8*/ STR         R1, [SP, #24] 
    /*000012bc*/ MOV         R1, R6 
    /*000012c0*/ STR         R0, [SP, #16] 
    /*000012c4*/ MOV         R0, FP 
    /*000012c8*/ STR         SL, [SP, #20] 
    /*000012cc*/ STR         R9, [SP, #12] 
    /*000012d0*/ STR         IP, [SP] 
    /*000012d4*/ BL          0x00000000000012D4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000012d8*/ B           VouProcShow_xe74
    VouProcShow_x12dc:
    /*000012dc*/ LDR         R3, [R3] 
    /*000012e0*/ CMP         R3, #0 
    /*000012e4*/ BEQ         VouProcShow_x17d0
    /*000012e8*/ LDRD        R2, [R3, #240]              @ 0xf0 
    /*000012ec*/ STRD        R2, [SP, #88]               @ 0x58 
    VouProcShow_x12f0:
    /*000012f0*/ LDRD        R0, [LR, #208]              @ 0xd0 
    /*000012f4*/ ADD         R2, LR, #336                @ 0x150 
    /*000012f8*/ ADD         IP, LR, #304                @ 0x130 
    /*000012fc*/ MOV         R3, R6 
    /*00001300*/ STRD        R0, [SP, #40]               @ 0x28 
    /*00001304*/ LDRD        R0, [R2] 
    /*00001308*/ MOV         R2, #0 
    /*0000130c*/ STRD        R0, [SP, #32] 
    /*00001310*/ MOV         R1, R8 
    /*00001314*/ LDRD        R4, [IP, #-8] 
    /*00001318*/ MOV         R0, FP 
    /*0000131c*/ STRD        R4, [SP, #24] 
    /*00001320*/ LDRD        R4, [LR, #200]              @ 0xc8 
    /*00001324*/ STRD        R4, [SP, #16] 
    /*00001328*/ LDRD        R4, [IP] 
    /*0000132c*/ STRD        R4, [SP, #8] 
    /*00001330*/ LDRD        R4, [SP, #88]               @ 0x58 
    /*00001334*/ STRD        R4, [SP] 
    /*00001338*/ BL          0x0000000000001338          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000133c*/ B           VouProcShow_xa8c
    VouProcShow_x1340:
    /*00001340*/ LDR         R2, [R3, #24] 
    /*00001344*/ LDR         R0, [R3, #92]               @ 0x5c 
    /*00001348*/ CMP         R2, #0 
    /*0000134c*/ BEQ         VouProcShow_x17e0
    /*00001350*/ CMP         R0, #2 
    /*00001354*/ LDR         R2, [R2] 
    /*00001358*/ MOVHI       LR, R7 
    /*0000135c*/ BLS         VouProcShow_x17e8
    VouProcShow_x1360:
    /*00001360*/ CMP         R2, #0 
    /*00001364*/ LDR         R8, [R3, #100]              @ 0x64 
    /*00001368*/ LDR         IP, [R3, #104]              @ 0x68 
    /*0000136c*/ LDR         R0, [R3, #108]              @ 0x6c 
    /*00001370*/ LDR         R1, [R3, #112]              @ 0x70 
    /*00001374*/ LDR         SL, [R3, #96]               @ 0x60 
    /*00001378*/ BEQ         VouProcShow_x1388
    /*0000137c*/ LDR         R2, [R2, #20] 
    /*00001380*/ CMP         R2, #4 
    /*00001384*/ BLS         VouProcShow_x17fc
    VouProcShow_x1388:
    /*00001388*/ MOV         R2, R7 
    VouProcShow_x138c:
    /*0000138c*/ STR         R2, [SP, #24] 
    /*00001390*/ MOV         R3, R4 
    /*00001394*/ STR         R1, [SP, #16] 
    /*00001398*/ MOV         R2, #0 
    /*0000139c*/ STR         R0, [SP, #12] 
    /*000013a0*/ MOV         R1, R6 
    /*000013a4*/ STR         SL, [SP, #20] 
    /*000013a8*/ MOV         R0, FP 
    /*000013ac*/ STMIB       SP, {R8, IP} 
    /*000013b0*/ STR         LR, [SP] 
    /*000013b4*/ BL          0x00000000000013B4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000013b8*/ B           VouProcShow_xd84
    VouProcShow_x13bc:
    /*000013bc*/ LDR         R3, [IP, #24] 
    /*000013c0*/ CMP         R3, #0 
    /*000013c4*/ BEQ         VouProcShow_x18dc
    /*000013c8*/ LDR         R1, [R3] 
    /*000013cc*/ LDR         R3, [R9, #460]              @ 0x1cc 
    /*000013d0*/ CMP         R1, #0 
    /*000013d4*/ LDR         SL, [IP, #172]              @ 0xac 
    /*000013d8*/ LDR         LR, [IP, #176]              @ 0xb0 
    /*000013dc*/ STR         R3, [SP, #112]              @ 0x70 
    /*000013e0*/ LDR         R3, [IP, #128]              @ 0x80 
    /*000013e4*/ LDR         R8, [R9, #464]              @ 0x1d0 
    /*000013e8*/ STR         R3, [SP, #116]              @ 0x74 
    /*000013ec*/ LDR         R3, [IP, #168]              @ 0xa8 
    /*000013f0*/ STR         R3, [SP, #120]              @ 0x78 
    /*000013f4*/ LDR         R3, [IP, #136]              @ 0x88 
    /*000013f8*/ LDR         IP, [IP, #184]              @ 0xb8 
    /*000013fc*/ STR         R3, [SP, #124]              @ 0x7c 
    /*00001400*/ BEQ         VouProcShow_x19bc
    /*00001404*/ LDR         R2, [R1, #708]              @ 0x2c4 
    /*00001408*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10] 
    /*0000140c*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10] 
    /*00001410*/ LDR         R0, [R1, #676]              @ 0x2a4 
    /*00001414*/ CMP         R2, #0 
    /*00001418*/ MOVEQ       R3, R5 
    /*0000141c*/ STR         R3, [SP, #108]              @ 0x6c 
    /*00001420*/ LDR         R3, [R1, #672]              @ 0x2a0 
    /*00001424*/ STR         R0, [SP, #88]               @ 0x58 
    /*00001428*/ STR         R3, [SP, #104]              @ 0x68 
    /*0000142c*/ LDRD        R2, [R1, #120]              @ 0x78 
    /*00001430*/ STRD        R2, [SP, #96]               @ 0x60 
    VouProcShow_x1434:
    /*00001434*/ CMP         R7, #0 
    /*00001438*/ BEQ         VouProcShow_x1930
    /*0000143c*/ LDRD        R2, [R7, #120]              @ 0x78 
    VouProcShow_x1440:
    /*00001440*/ STR         IP, [SP, #24] 
    /*00001444*/ MOV         R0, R2 
    /*00001448*/ LDR         IP, [SP, #124]              @ 0x7c 
    /*0000144c*/ MOV         R1, R3 
    /*00001450*/ LDRD        R2, [SP, #96]               @ 0x60 
    /*00001454*/ STRD        R0, [SP, #56]               @ 0x38 
    /*00001458*/ MOVW        R1, #0                      @ .LC182 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xf28] 
    /*0000145c*/ STR         IP, [SP, #16] 
    /*00001460*/ MOVT        R1, #0                      @ .LC182 [R_ARM_MOVT_ABS: .rodata.str1.4+0xf28] 
    /*00001464*/ LDR         IP, [SP, #120]              @ 0x78 
    /*00001468*/ STRD        R2, [SP, #48]               @ 0x30 
    /*0000146c*/ LDR         R0, [SP, #88]               @ 0x58 
    /*00001470*/ STR         IP, [SP, #8] 
    /*00001474*/ LDR         IP, [SP, #116]              @ 0x74 
    /*00001478*/ LDR         R3, [SP, #108]              @ 0x6c 
    /*0000147c*/ LDR         R2, [SP, #104]              @ 0x68 
    /*00001480*/ STR         IP, [SP, #4] 
    /*00001484*/ LDR         IP, [SP, #112]              @ 0x70 
    /*00001488*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000148c*/ MOV         R3, R4 
    /*00001490*/ STR         R2, [SP, #36]               @ 0x24 
    /*00001494*/ MOV         R2, #0 
    /*00001498*/ STR         R0, [SP, #32] 
    /*0000149c*/ MOV         R0, FP 
    /*000014a0*/ STR         R8, [SP, #28] 
    /*000014a4*/ STR         LR, [SP, #20] 
    /*000014a8*/ STR         SL, [SP, #12] 
    /*000014ac*/ STR         IP, [SP] 
    /*000014b0*/ BL          0x00000000000014B0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000014b4*/ B           VouProcShow_xbc4
    VouProcShow_x14b8:
    /*000014b8*/ LDR         R1, [R8, #8] 
    /*000014bc*/ ADD         R2, IP, #8192               @ 0x2000 
    /*000014c0*/ LDR         R3, [R8, #12] 
    /*000014c4*/ LDR         LR, [IP, #1120]             @ 0x460 
    /*000014c8*/ STR         R1, [SP, #24] 
    /*000014cc*/ MOVW        R1, #0                      @ .LC187 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0xff4] 
    /*000014d0*/ STR         R3, [SP, #20] 
    /*000014d4*/ CMP         LR, #0 
    /*000014d8*/ LDR         R0, [R2, #1020]             @ 0x3fc 
    /*000014dc*/ MOVT        R1, #0                      @ .LC187 [R_ARM_MOVT_ABS: .rodata.str1.4+0xff4] 
    /*000014e0*/ MOVNE       LR, R7 
    /*000014e4*/ MOVEQ       LR, R6 
    /*000014e8*/ MOV         R3, R4 
    /*000014ec*/ STR         R0, [SP, #16] 
    /*000014f0*/ LDR         R0, [R2, #1024]             @ 0x400 
    /*000014f4*/ MOV         R2, #0 
    /*000014f8*/ STR         R0, [SP, #12] 
    /*000014fc*/ MOV         R0, FP 
    /*00001500*/ LDR         SL, [IP, #1140]             @ 0x474 
    /*00001504*/ STR         SL, [SP, #8] 
    /*00001508*/ LDR         IP, [IP, #1124]             @ 0x464 
    /*0000150c*/ STR         LR, [SP] 
    /*00001510*/ STR         IP, [SP, #4] 
    /*00001514*/ BL          0x0000000000001514          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00001518*/ B           VouProcShow_xcb0
    VouProcShow_x151c:
    /*0000151c*/ LDR         R3, [R9, #324]              @ 0x144 
    /*00001520*/ MOV         R0, #0 
    /*00001524*/ LDR         IP, [R9, #320]              @ 0x140 
    /*00001528*/ MOV         R2, R0 
    /*0000152c*/ LDR         R1, [R9, #316]              @ 0x13c 
    /*00001530*/ LDR         LR, [R9, #312]              @ 0x138 
    /*00001534*/ STR         R3, [SP, #28] 
    /*00001538*/ LDR         R3, [R9, #308]              @ 0x134 
    /*0000153c*/ STR         IP, [SP, #24] 
    /*00001540*/ LDR         IP, [R9, #448]              @ 0x1c0 
    /*00001544*/ STR         R1, [SP, #20] 
    /*00001548*/ LDR         R1, [R9, #280]              @ 0x118 
    /*0000154c*/ STR         R3, [SP, #12] 
    /*00001550*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10] 
    /*00001554*/ STR         R0, [SP, #4] 
    /*00001558*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10] 
    /*0000155c*/ STR         R1, [SP] 
    /*00001560*/ MOV         R0, FP 
    /*00001564*/ STR         LR, [SP, #16] 
    /*00001568*/ MOVW        R1, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x644] 
    /*0000156c*/ STR         IP, [SP, #8] 
    /*00001570*/ MOVT        R1, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0x644] 
    /*00001574*/ BL          0x0000000000001574          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00001578*/ B           VouProcShow_x538
    VouProcShow_x157c:
    /*0000157c*/ LDR         R2, [R9, #388]              @ 0x184 
    /*00001580*/ LDR         R3, [R9, #380]              @ 0x17c 
    /*00001584*/ CMP         R2, #0 
    /*00001588*/ LDR         R0, [R9, #384]              @ 0x180 
    /*0000158c*/ SUB         R3, R3, #25 
    /*00001590*/ LDR         R1, [R9, #392]              @ 0x188 
    /*00001594*/ MOVEQ       R7, R6 
    /*00001598*/ CMP         R3, #14 
    /*0000159c*/ LDR         R6, [PC, #644]              @ 0x0000000000001828 
    /*000015a0*/ MOVWLS      R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*000015a4*/ MOVTLS      R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*000015a8*/ ADDLS       R3, R2, R3, LSL #2 
    /*000015ac*/ MOVWHI      IP, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x18] 
    /*000015b0*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14] 
    /*000015b4*/ MOVTHI      IP, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x18] 
    /*000015b8*/ LDRLS       IP, [R3, #204]              @ 0xcc 
    /*000015bc*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14] 
    /*000015c0*/ CMP         R0, #0 
    /*000015c4*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10] 
    /*000015c8*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10] 
    /*000015cc*/ LDR         LR, [R9, #360]              @ 0x168 
    /*000015d0*/ MOVEQ       R3, R2 
    /*000015d4*/ LDR         R2, [R9, #368]              @ 0x170 
    /*000015d8*/ CMP         R1, #4 
    /*000015dc*/ LDR         SL, [R9, #372]              @ 0x174 
    /*000015e0*/ STR         R2, [SP, #68]               @ 0x44 
    /*000015e4*/ MOVWHI      R1, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x18] 
    /*000015e8*/ LDR         R2, [R9, #352]              @ 0x160 
    /*000015ec*/ MOVTHI      R1, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x18] 
    /*000015f0*/ STR         R2, [SP, #72]               @ 0x48 
    /*000015f4*/ LDR         R2, [R9, #356]              @ 0x164 
    /*000015f8*/ STR         R2, [SP, #76]               @ 0x4c 
    /*000015fc*/ LDR         R2, [R9, #364]              @ 0x16c 
    /*00001600*/ MOV         R0, R2 
    /*00001604*/ LDR         R2, [R9, #376]              @ 0x178 
    /*00001608*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000160c*/ STR         R2, [SP, #80]               @ 0x50 
    /*00001610*/ MOVWLS      R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00001614*/ MOVTLS      R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00001618*/ LDR         R3, [SP, #80]               @ 0x50 
    /*0000161c*/ ADDLS       R2, R2, R1, LSL #2 
    /*00001620*/ LDRLS       R1, [R2, #264]              @ 0x108 
    /*00001624*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10] 
    /*00001628*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10] 
    /*0000162c*/ STR         R1, [SP, #40]               @ 0x28 
    /*00001630*/ MOVW        R1, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14] 
    /*00001634*/ LDR         R6, [R6, #136]              @ 0x88 
    /*00001638*/ MOVT        R1, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14] 
    /*0000163c*/ STR         R3, [SP, #32] 
    /*00001640*/ MOV         R3, R2 
    /*00001644*/ CMP         R6, #0 
    /*00001648*/ STR         LR, [SP, #24] 
    /*0000164c*/ LDR         LR, [SP, #68]               @ 0x44 
    /*00001650*/ MOVNE       R6, R2 
    /*00001654*/ LDR         R2, [SP, #76]               @ 0x4c 
    /*00001658*/ STR         R0, [SP, #28] 
    /*0000165c*/ MOVEQ       R6, R1 
    /*00001660*/ STR         SL, [SP, #12] 
    /*00001664*/ MOVW        R1, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x538] 
    /*00001668*/ STR         R2, [SP, #20] 
    /*0000166c*/ MOVT        R1, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x538] 
    /*00001670*/ LDR         R2, [SP, #72]               @ 0x48 
    /*00001674*/ MOV         R0, FP 
    /*00001678*/ STR         R2, [SP, #16] 
    /*0000167c*/ MOV         R2, #0 
    /*00001680*/ STM         SP, {R7, IP, LR} 
    /*00001684*/ STR         R6, [SP, #44]               @ 0x2c 
    /*00001688*/ BL          0x0000000000001688          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000168c*/ B           VouProcShow_x48c
    VouProcShow_x1690:
    /*00001690*/ LDR         R3, [R9, #32] 
    /*00001694*/ CMP         R3, #47                     @ 0x2f 
    /*00001698*/ BNE         VouProcShow_x2e0
    /*0000169c*/ LDR         R2, [R9, #200]              @ 0xc8 
    /*000016a0*/ CMP         R2, #0 
    /*000016a4*/ BEQ         VouProcShow_x19b0
    /*000016a8*/ MOVW        R3, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x0] 
    /*000016ac*/ CMP         R2, #1 
    /*000016b0*/ MOVT        R3, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x0] 
    /*000016b4*/ MOVNE       R4, R3 
    VouProcShow_x16b8:
    /*000016b8*/ STR         R4, [SP] 
    /*000016bc*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10] 
    /*000016c0*/ MOVW        R1, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x360] 
    /*000016c4*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10] 
    /*000016c8*/ MOVT        R1, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x360] 
    /*000016cc*/ MOV         R2, #0 
    /*000016d0*/ MOV         R0, FP 
    /*000016d4*/ BL          0x00000000000016D4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000016d8*/ LDR         R3, [R9, #200]              @ 0xc8 
    /*000016dc*/ CMP         R3, #0 
    /*000016e0*/ BEQ         VouProcShow_x193c
    /*000016e4*/ LDR         R2, [R9, #204]              @ 0xcc 
    /*000016e8*/ MOVW        R1, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x390] 
    /*000016ec*/ MOV         R0, FP 
    /*000016f0*/ MOVT        R1, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x390] 
    /*000016f4*/ BL          0x00000000000016F4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000016f8*/ LDR         R2, [R9, #228]              @ 0xe4 
    /*000016fc*/ MOVW        R1, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x388] 
    /*00001700*/ MOVT        R1, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x388] 
    VouProcShow_x1704:
    /*00001704*/ MOV         R0, FP 
    /*00001708*/ BL          0x0000000000001708          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0000170c*/ LDR         R2, [R9, #224]              @ 0xe0 
    /*00001710*/ MOV         R0, FP 
    /*00001714*/ MOVW        R1, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x388] 
    /*00001718*/ MOVT        R1, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x388] 
    /*0000171c*/ BL          0x000000000000171C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00001720*/ LDR         R3, [R9, #232]              @ 0xe8 
    /*00001724*/ MOVW        R1, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x398] 
    /*00001728*/ MOV         R0, FP 
    /*0000172c*/ CMP         R3, #0 
    /*00001730*/ MOVT        R1, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x398] 
    /*00001734*/ MOVWNE      R8, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10] 
    /*00001738*/ MOVTNE      R8, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10] 
    /*0000173c*/ MOVWEQ      R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14] 
    /*00001740*/ MOVWEQ      R8, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10] 
    /*00001744*/ MOVNE       R2, R8 
    /*00001748*/ MOVTEQ      R8, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10] 
    /*0000174c*/ MOVTEQ      R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14] 
    /*00001750*/ BL          0x0000000000001750          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00001754*/ B           VouProcShow_x2e8
    VouProcShow_x1758:
    /*00001758*/ LDR         R2, [R9, #32] 
    /*0000175c*/ MOVW        R1, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x250] 
    /*00001760*/ LDR         R0, [R9, #92]               @ 0x5c 
    /*00001764*/ MOVT        R1, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x250] 
    /*00001768*/ CMP         R2, #47                     @ 0x2f 
    /*0000176c*/ LDR         IP, [R9, #24] 
    /*00001770*/ MOVWLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00001774*/ MOVTLS      R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00001778*/ ADDLS       R3, R3, R2, LSL #2 
    /*0000177c*/ MOVWHI      R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x0] 
    /*00001780*/ STR         R0, [SP, #20] 
    /*00001784*/ MOVTHI      R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x0] 
    /*00001788*/ LDRLS       R2, [R3, #12] 
    /*0000178c*/ MOV         R0, FP 
    /*00001790*/ MOVW        R3, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10] 
    /*00001794*/ STR         IP, [SP, #16] 
    /*00001798*/ MOVT        R3, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10] 
    /*0000179c*/ STR         R2, [SP, #12] 
    /*000017a0*/ ADD         R2, SP, #150                @ 0x96 
    /*000017a4*/ STR         R2, [SP, #8] 
    /*000017a8*/ ADD         R2, SP, #140                @ 0x8c 
    /*000017ac*/ STR         R2, [SP, #4] 
    /*000017b0*/ ADD         R2, SP, #130                @ 0x82 
    /*000017b4*/ STR         R2, [SP] 
    /*000017b8*/ MOV         R2, #0 
    /*000017bc*/ BL          0x00000000000017BC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000017c0*/ B           VouProcShow_x21c
    VouProcShow_x17c4:
    /*000017c4*/ LDR         R3, [LR, #4] 
    /*000017c8*/ CMP         R3, #1 
    /*000017cc*/ BNE         VouProcShow_xa8c
    VouProcShow_x17d0:
    /*000017d0*/ MOV         R2, #0 
    /*000017d4*/ MOV         R3, #0 
    /*000017d8*/ STRD        R2, [SP, #88]               @ 0x58 
    /*000017dc*/ B           VouProcShow_x12f0
    VouProcShow_x17e0:
    /*000017e0*/ CMP         R0, #2 
    /*000017e4*/ BHI         VouProcShow_x1978
    VouProcShow_x17e8:
    /*000017e8*/ MOVW        R1, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*000017ec*/ MOVT        R1, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*000017f0*/ ADD         R1, R1, R0, LSL #2 
    /*000017f4*/ LDR         LR, [R1, #284]              @ 0x11c 
    /*000017f8*/ B           VouProcShow_x1360
    VouProcShow_x17fc:
    /*000017fc*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x0] 
    /*00001800*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x0] 
    /*00001804*/ ADD         R3, R3, R2, LSL #2 
    /*00001808*/ LDR         R2, [R3, #324]              @ 0x144 
    /*0000180c*/ B           VouProcShow_x138c
    VouProcShow_x1810:
    /*00001810*/ MOVW        R1, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x88] 
    /*00001814*/ MOV         R0, FP 
    /*00001818*/ MOVT        R1, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x88] 
    /*0000181c*/ BL          0x000000000000181C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00001820*/ B           VouProcShow_x7b4
    /*00001824*/ MULEQ       R0, R0, R0 
    /*00001828*/ ANDEQ       R3, R0, R0 
    VouProcShow_x182c:
    /*0000182c*/ MOV         R0, #0 
    /*00001830*/ BL          0x0000000000001830          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*00001834*/ LDR         LR, [R9, #424]              @ 0x1a8 
    /*00001838*/ MOVW        R1, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10] 
    /*0000183c*/ LDR         IP, [R9, #428]              @ 0x1ac 
    /*00001840*/ CMP         LR, #0 
    /*00001844*/ MOVT        R1, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10] 
    /*00001848*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14] 
    /*0000184c*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14] 
    /*00001850*/ MOVNE       LR, R1 
    /*00001854*/ MOVEQ       LR, R2 
    /*00001858*/ CMP         IP, #0 
    /*0000185c*/ MOVNE       R2, R1 
    /*00001860*/ MOV         R3, R0 
    /*00001864*/ LDR         R0, [R9, #420]              @ 0x1a4 
    /*00001868*/ CMP         R0, #0 
    /*0000186c*/ BEQ         VouProcShow_x19a4
    /*00001870*/ MOVW        R1, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x18] 
    /*00001874*/ CMP         R0, #1 
    /*00001878*/ MOVT        R1, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x18] 
    /*0000187c*/ MOVW        IP, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x24] 
    /*00001880*/ MOVT        IP, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x24] 
    /*00001884*/ MOVNE       IP, R1 
    VouProcShow_x1888:
    /*00001888*/ LDR         R0, [R9, #300]              @ 0x12c 
    /*0000188c*/ CMP         R0, #0 
    /*00001890*/ BEQ         VouProcShow_x1998
    /*00001894*/ MOVW        R6, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x18] 
    /*00001898*/ CMP         R0, #1 
    /*0000189c*/ MOVT        R6, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x18] 
    /*000018a0*/ MOVW        R1, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x10] 
    /*000018a4*/ MOVT        R1, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x10] 
    /*000018a8*/ MOVNE       R1, R6 
    VouProcShow_x18ac:
    /*000018ac*/ LDR         R6, [R9, #268]              @ 0x10c 
    /*000018b0*/ MOV         R0, FP 
    /*000018b4*/ STR         R1, [SP, #12] 
    /*000018b8*/ MOVW        R1, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x734] 
    /*000018bc*/ STR         R2, [SP, #4] 
    /*000018c0*/ MOVT        R1, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0x734] 
    /*000018c4*/ STR         IP, [SP, #8] 
    /*000018c8*/ MOV         R2, #0 
    /*000018cc*/ STR         LR, [SP] 
    /*000018d0*/ STR         R6, [SP, #16] 
    /*000018d4*/ BL          0x00000000000018D4          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*000018d8*/ B           VouProcShow_x5c0
    VouProcShow_x18dc:
    /*000018dc*/ MVN         R3, #0 
    /*000018e0*/ STR         R3, [SP, #104]              @ 0x68 
    /*000018e4*/ MOV         R2, R3 
    /*000018e8*/ LDR         R3, [R9, #460]              @ 0x1cc 
    /*000018ec*/ STR         R2, [SP, #88]               @ 0x58 
    /*000018f0*/ MOV         R2, #0 
    /*000018f4*/ LDR         SL, [IP, #172]              @ 0xac 
    /*000018f8*/ STR         R3, [SP, #112]              @ 0x70 
    /*000018fc*/ LDR         R3, [IP, #128]              @ 0x80 
    /*00001900*/ LDR         LR, [IP, #176]              @ 0xb0 
    /*00001904*/ STR         R5, [SP, #108]              @ 0x6c 
    /*00001908*/ STR         R3, [SP, #116]              @ 0x74 
    /*0000190c*/ LDR         R3, [IP, #168]              @ 0xa8 
    /*00001910*/ LDR         R8, [R9, #464]              @ 0x1d0 
    /*00001914*/ STR         R3, [SP, #120]              @ 0x78 
    /*00001918*/ MOV         R3, #0 
    /*0000191c*/ STRD        R2, [SP, #96]               @ 0x60 
    /*00001920*/ LDR         R3, [IP, #136]              @ 0x88 
    /*00001924*/ LDR         IP, [IP, #184]              @ 0xb8 
    /*00001928*/ STR         R3, [SP, #124]              @ 0x7c 
    /*0000192c*/ B           VouProcShow_x1434
    VouProcShow_x1930:
    /*00001930*/ MOV         R2, #0 
    /*00001934*/ MOV         R3, #0 
    /*00001938*/ B           VouProcShow_x1440
    VouProcShow_x193c:
    /*0000193c*/ LDR         R4, [R9, #220]              @ 0xdc 
    /*00001940*/ MOVW        R1, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x36c] 
    /*00001944*/ LDR         LR, [R9, #216]              @ 0xd8 
    /*00001948*/ MOVT        R1, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x36c] 
    /*0000194c*/ LDR         IP, [R9, #212]              @ 0xd4 
    /*00001950*/ MOV         R0, FP 
    /*00001954*/ LDR         R2, [R9, #204]              @ 0xcc 
    /*00001958*/ LDR         R3, [R9, #208]              @ 0xd0 
    /*0000195c*/ STR         R4, [SP, #8] 
    /*00001960*/ STM         SP, {IP, LR} 
    /*00001964*/ BL          0x0000000000001964          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00001968*/ MOVW        R1, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x380] 
    /*0000196c*/ LDR         R2, [R9, #228]              @ 0xe4 
    /*00001970*/ MOVT        R1, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x380] 
    /*00001974*/ B           VouProcShow_x1704
    VouProcShow_x1978:
    /*00001978*/ LDR         R8, [R3, #100]              @ 0x64 
    /*0000197c*/ MOV         LR, R7 
    /*00001980*/ LDR         IP, [R3, #104]              @ 0x68 
    /*00001984*/ MOV         R2, R7 
    /*00001988*/ LDR         R0, [R3, #108]              @ 0x6c 
    /*0000198c*/ LDR         R1, [R3, #112]              @ 0x70 
    /*00001990*/ LDR         SL, [R3, #96]               @ 0x60 
    /*00001994*/ B           VouProcShow_x138c
    VouProcShow_x1998:
    /*00001998*/ MOVW        R1, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14] 
    /*0000199c*/ MOVT        R1, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14] 
    /*000019a0*/ B           VouProcShow_x18ac
    VouProcShow_x19a4:
    /*000019a4*/ MOVW        IP, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c] 
    /*000019a8*/ MOVT        IP, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c] 
    /*000019ac*/ B           VouProcShow_x1888
    VouProcShow_x19b0:
    /*000019b0*/ MOVW        R4, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4] 
    /*000019b4*/ MOVT        R4, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4] 
    /*000019b8*/ B           VouProcShow_x16b8
    VouProcShow_x19bc:
    /*000019bc*/ MVN         R3, #0 
    /*000019c0*/ MOV         R2, #0 
    /*000019c4*/ MOV         R1, R3 
    /*000019c8*/ STR         R3, [SP, #104]              @ 0x68 
    /*000019cc*/ STR         R1, [SP, #88]               @ 0x58 
    /*000019d0*/ MOV         R3, #0 
    /*000019d4*/ STR         R5, [SP, #108]              @ 0x6c 
    /*000019d8*/ STRD        R2, [SP, #96]               @ 0x60 
    /*000019dc*/ B           VouProcShow_x1434
FUNC_END VouProcShow


FUNC_BEGIN VouResetCallBack
    /*000019e0*/ PUSH        {R4, LR} 
    /*000019e4*/ MOV         R2, #1 
    /*000019e8*/ BL          0x00000000000019E8          @ VouChnClearBuf [R_ARM_CALL: .text+0xca40] 
    /*000019ec*/ MOV         R0, #0 
    /*000019f0*/ POP         {R4, PC} 
FUNC_END VouResetCallBack


FUNC_BEGIN VouInterruptRoute
    /*000019f4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000019f8*/ SUB         SP, SP, #28 
    /*000019fc*/ LDR         R6, [PC, #424]              @ 0x0000000000001bac 
    /*00001a00*/ ADD         R4, SP, #24 
    /*00001a04*/ MOV         R7, #0 
    /*00001a08*/ MVN         FP, #0 
    /*00001a0c*/ SUB         R8, R6, #12 
    /*00001a10*/ STR         R7, [R4, #-4]! 
    /*00001a14*/ SUB         R0, R6, #16 
    /*00001a18*/ MOV         R1, R4 
    /*00001a1c*/ STR         FP, [SP, #16] 
    /*00001a20*/ BL          0x0000000000001A20          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00001a24*/ MOV         R1, R4 
    /*00001a28*/ MOV         R0, R8 
    /*00001a2c*/ LDR         R9, [SP, #20] 
    /*00001a30*/ MOVW        R5, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00001a34*/ STR         R7, [SP, #20] 
    /*00001a38*/ BL          0x0000000000001A38          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00001a3c*/ LDR         SL, [SP, #20] 
    /*00001a40*/ BL          0x0000000000001A40          @ VOU_DRV_IntGetStatus [R_ARM_CALL: .text+0x17064] 
    /*00001a44*/ MOVT        R5, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00001a48*/ MOV         R7, R0 
    /*00001a4c*/ BL          0x0000000000001A4C          @ VOU_DRV_IntGetOriStatus [R_ARM_CALL: .text+0x1706c] 
    /*00001a50*/ LDR         R2, [R5, #16] 
    /*00001a54*/ CMP         R2, #2 
    /*00001a58*/ STR         R0, [SP, #12] 
    /*00001a5c*/ BEQ         VouInterruptRoute_x1b2c
    /*00001a60*/ MOV         R0, R7 
    /*00001a64*/ BL          0x0000000000001A64          @ VO_GraphicsWbcIntProcess [R_ARM_CALL: .text+0x14928] 
    /*00001a68*/ ADD         R1, SP, #16 
    /*00001a6c*/ MOV         R0, R7 
    /*00001a70*/ BL          0x0000000000001A70          @ VOU_DRV_GetInterruptDev [R_ARM_CALL: .text+0x18b70] 
    /*00001a74*/ CMP         R0, #0 
    /*00001a78*/ BNE         VouInterruptRoute_x1b38
    /*00001a7c*/ LDR         R1, [SP, #16] 
    /*00001a80*/ MOV         R0, #15 
    /*00001a84*/ BL          0x0000000000001A84          @ VOU_DRV_NotifyUser [R_ARM_CALL: .text+0x1712c] 
    /*00001a88*/ LDR         R0, [SP, #16] 
    /*00001a8c*/ BL          0x0000000000001A8C          @ VOU_DRV_IsDevSupportLoadDetect [R_ARM_CALL: .text+0x185dc] 
    /*00001a90*/ CMP         R0, #0 
    /*00001a94*/ BEQ         VouInterruptRoute_x1aac
    /*00001a98*/ MOV         R1, R7 
    /*00001a9c*/ LDR         R0, [SP, #16] 
    /*00001aa0*/ BL          0x0000000000001AA0          @ VOU_DRV_CheckDetectInt [R_ARM_CALL: .text+0x185f4] 
    /*00001aa4*/ CMP         R0, #0 
    /*00001aa8*/ BNE         VouInterruptRoute_x1b38
    VouInterruptRoute_x1aac:
    /*00001aac*/ LDR         R1, [SP, #12] 
    /*00001ab0*/ LDR         R0, [SP, #16] 
    /*00001ab4*/ BL          0x0000000000001AB4          @ VOU_DRV_LowBandwidth [R_ARM_CALL: .text+0x1a6e0] 
    /*00001ab8*/ LDR         R0, [SP, #16] 
    /*00001abc*/ LDR         R1, [SP, #12] 
    /*00001ac0*/ BL          0x0000000000001AC0          @ VO_DRV_BusErr [R_ARM_CALL: .text+0x1a754] 
    /*00001ac4*/ LDR         R0, [SP, #16] 
    /*00001ac8*/ CMN         R0, #1 
    /*00001acc*/ BEQ         VouInterruptRoute_x1b64
    /*00001ad0*/ BL          0x0000000000001AD0          @ VouDispProcess [R_ARM_CALL: .text+0x144c8] 
    /*00001ad4*/ SUB         R7, R6, #8 
    /*00001ad8*/ MOV         R1, R4 
    /*00001adc*/ SUB         R0, R6, #12 
    /*00001ae0*/ STR         SL, [SP, #20] 
    /*00001ae4*/ BL          0x0000000000001AE4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001ae8*/ MOV         R1, R4 
    /*00001aec*/ LDR         R0, [PC, #188]              @ 0x0000000000001bb0 
    /*00001af0*/ STR         R9, [SP, #20] 
    /*00001af4*/ BL          0x0000000000001AF4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001af8*/ MOV         R0, R7 
    /*00001afc*/ MOV         R1, R4 
    /*00001b00*/ MOV         R3, #0 
    /*00001b04*/ STR         R3, [SP, #20] 
    /*00001b08*/ BL          0x0000000000001B08          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00001b0c*/ LDR         R2, [SP, #20] 
    /*00001b10*/ MOV         R0, R7 
    /*00001b14*/ MOV         R1, R4 
    /*00001b18*/ STR         R2, [SP, #20] 
    /*00001b1c*/ BL          0x0000000000001B1C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001b20*/ MOV         R0, #1 
    /*00001b24*/ ADD         SP, SP, #28 
    /*00001b28*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouInterruptRoute_x1b2c:
    /*00001b2c*/ MOV         R0, FP 
    /*00001b30*/ MOV         R1, #90                     @ 0x5a 
    /*00001b34*/ BL          0x0000000000001B34          @ VOU_DRV_IntClear [R_ARM_CALL: .text+0x17058] 
    VouInterruptRoute_x1b38:
    /*00001b38*/ MOV         R0, R8 
    /*00001b3c*/ MOV         R1, R4 
    /*00001b40*/ STR         SL, [SP, #20] 
    /*00001b44*/ BL          0x0000000000001B44          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001b48*/ MOV         R1, R4 
    /*00001b4c*/ SUB         R0, R6, #16 
    /*00001b50*/ STR         R9, [SP, #20] 
    /*00001b54*/ BL          0x0000000000001B54          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VouInterruptRoute_x1b58:
    /*00001b58*/ MOV         R0, #1 
    /*00001b5c*/ ADD         SP, SP, #28 
    /*00001b60*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouInterruptRoute_x1b64:
    /*00001b64*/ STR         R0, [SP, #4] 
    /*00001b68*/ MOVW        R3, #2123                   @ 0x84b 
    /*00001b6c*/ MOV         R1, #15 
    /*00001b70*/ STR         R3, [SP] 
    /*00001b74*/ MOVW        R2, #0                      @ .LC200 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1110] 
    /*00001b78*/ LDR         R3, [PC, #52]               @ 0x0000000000001bb4 
    /*00001b7c*/ MOVT        R2, #0                      @ .LC200 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1110] 
    /*00001b80*/ MOV         R0, #3 
    /*00001b84*/ BL          0x0000000000001B84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001b88*/ SUB         R0, R6, #12 
    /*00001b8c*/ MOV         R1, R4 
    /*00001b90*/ STR         SL, [SP, #20] 
    /*00001b94*/ BL          0x0000000000001B94          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001b98*/ MOV         R1, R4 
    /*00001b9c*/ LDR         R0, [PC, #12]               @ 0x0000000000001bb0 
    /*00001ba0*/ STR         R9, [SP, #20] 
    /*00001ba4*/ BL          0x0000000000001BA4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00001ba8*/ B           VouInterruptRoute_x1b58
    /*00001bac*/ STRHEQ      R3, [R0], -R0 
    /*00001bb0*/ ANDEQ       R3, R0, R0, LSR #1 
    /*00001bb4*/ ANDEQ       R0, R0, R8, ASR R1 
FUNC_END VouInterruptRoute


FUNC_BEGIN VOU_QueryState
    /*00001bb8*/ PUSH        {R4, LR} 
    /*00001bbc*/ MOV         R4, R0 
    /*00001bc0*/ LDR         R0, [PC, #20]               @ 0x0000000000001bdc 
    /*00001bc4*/ BL          0x0000000000001BC4          @ osal_atomic_read [R_ARM_CALL: +0x0] 
    /*00001bc8*/ CMP         R0, #0 
    /*00001bcc*/ MOVEQ       R3, #17 
    /*00001bd0*/ MOVNE       R3, #34                     @ 0x22 
    /*00001bd4*/ STR         R3, [R4] 
    /*00001bd8*/ POP         {R4, PC} 
    /*00001bdc*/ ANDEQ       R3, R0, IP, LSR #1 
FUNC_END VOU_QueryState


FUNC_BEGIN VOU_Notify
    /*00001be0*/ CMP         R0, #17 
    /*00001be4*/ BXNE        LR 
    /*00001be8*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00001bec*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00001bf0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00001bf4*/ MOV         R2, #1 
    /*00001bf8*/ LDR         R0, [PC, #156]              @ 0x0000000000001c9c 
    /*00001bfc*/ STR         R2, [R3, #16] 
    /*00001c00*/ BL          0x0000000000001C00          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00001c04*/ CMP         R0, #0 
    /*00001c08*/ BNE         VOU_Notify_x1c98
    /*00001c0c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00001c10*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00001c14*/ LDR         R3, [R3, #240]              @ 0xf0 
    /*00001c18*/ CMP         R3, #0 
    /*00001c1c*/ BNE         VOU_Notify_x1c78
    VOU_Notify_x1c20:
    /*00001c20*/ LDR         R6, [PC, #120]              @ 0x0000000000001ca0 
    /*00001c24*/ SUB         R0, R6, #16 
    /*00001c28*/ BL          0x0000000000001C28          @ osal_up [R_ARM_CALL: +0x0] 
    /*00001c2c*/ SUB         R0, R6, #12 
    /*00001c30*/ BL          0x0000000000001C30          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00001c34*/ CMP         R0, #0 
    /*00001c38*/ POPNE       {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*00001c3c*/ SUB         R4, R6, #48                 @ 0x30 
    /*00001c40*/ SUB         R7, R6, #32 
    /*00001c44*/ MOVW        R9, #9524                   @ 0x2534 
    /*00001c48*/ MOVW        R8, #9528                   @ 0x2538 
    VOU_Notify_x1c4c:
    /*00001c4c*/ LDR         R5, [R4], #4 
    /*00001c50*/ CMP         R5, #0 
    /*00001c54*/ BEQ         VOU_Notify_x1c64
    /*00001c58*/ LDR         R3, [R5, #4] 
    /*00001c5c*/ CMP         R3, #1 
    /*00001c60*/ BEQ         VOU_Notify_x1c84
    VOU_Notify_x1c64:
    /*00001c64*/ CMP         R7, R4 
    /*00001c68*/ BNE         VOU_Notify_x1c4c
    /*00001c6c*/ SUB         R0, R6, #12 
    /*00001c70*/ POP         {R4, R5, R6, R7, R8, R9, SL, LR} 
    VOU_Notify_x1c74:
    /*00001c74*/ B           VOU_Notify_x1c74            @ osal_up [R_ARM_JUMP24: +0x0] 
    VOU_Notify_x1c78:
    /*00001c78*/ LDR         R0, [PC, #36]               @ 0x0000000000001ca4 
    /*00001c7c*/ BL          0x0000000000001C7C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00001c80*/ B           VOU_Notify_x1c20
    VOU_Notify_x1c84:
    /*00001c84*/ ADD         R0, R5, R9 
    /*00001c88*/ BL          0x0000000000001C88          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00001c8c*/ ADD         R0, R5, R8 
    /*00001c90*/ BL          0x0000000000001C90          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00001c94*/ B           VOU_Notify_x1c64
    VOU_Notify_x1c98:
    /*00001c98*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    /*00001c9c*/ STRHEQ      R3, [R0], -R0 
    /*00001ca0*/ ANDEQ       R3, R0, R0, ASR #1 
    /*00001ca4*/ ANDEQ       R3, R0, IP, ASR #32 
FUNC_END VOU_Notify


FUNC_BEGIN VoDefCheckNullPtr.part.1
    /*00001ca8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00001cac*/ SUB         SP, SP, #12 
    /*00001cb0*/ MOV         R3, #149                    @ 0x95 
    /*00001cb4*/ MOV         R1, #15 
    /*00001cb8*/ STR         R3, [SP] 
    /*00001cbc*/ MOVW        R2, #0                      @ .LC201 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x113c] 
    /*00001cc0*/ LDR         R3, [PC, #24]               @ 0x0000000000001ce0 
    /*00001cc4*/ MOVT        R2, #0                      @ .LC201 [R_ARM_MOVT_ABS: .rodata.str1.4+0x113c] 
    /*00001cc8*/ MOV         R0, #4 
    /*00001ccc*/ BL          0x0000000000001CCC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001cd0*/ MOVW        R0, #32774                  @ 0x8006 
    /*00001cd4*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00001cd8*/ ADD         SP, SP, #12 
    /*00001cdc*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00001ce0*/ ANDEQ       R0, R0, IP, ROR #2 
FUNC_END VoDefCheckNullPtr.part.1


FUNC_BEGIN VouIoctl
    /*00001ce4*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00001ce8*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00001cec*/ LDR         R3, [R3, #16] 
    /*00001cf0*/ CMP         R3, #0 
    /*00001cf4*/ BNE         VouIoctl_x2140
    /*00001cf8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00001cfc*/ MOV         R5, R2 
    /*00001d00*/ LDR         R8, [PC, #3244]             @ 0x00000000000029b4 
    /*00001d04*/ SUB         SP, SP, #28 
    /*00001d08*/ MOV         R4, R0 
    /*00001d0c*/ MOV         R7, R1 
    /*00001d10*/ SUB         R0, R8, #4 
    /*00001d14*/ BL          0x0000000000001D14          @ osal_atomic_inc_return [R_ARM_CALL: +0x0] 
    /*00001d18*/ LDR         R6, [R5] 
    /*00001d1c*/ MOVW        R3, #2212                   @ 0x8a4 
    /*00001d20*/ STR         R4, [SP, #4] 
    /*00001d24*/ STR         R3, [SP] 
    /*00001d28*/ UBFX        FP, R6, #16, #8 
    /*00001d2c*/ LDR         R3, [PC, #3204]             @ 0x00000000000029b8 
    /*00001d30*/ UBFX        R9, R6, #8, #8 
    /*00001d34*/ STR         FP, [SP, #8] 
    /*00001d38*/ UXTB        SL, R6 
    /*00001d3c*/ STR         R9, [SP, #12] 
    /*00001d40*/ MOVW        R2, #0                      @ .LC202 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1164] 
    /*00001d44*/ STR         SL, [SP, #16] 
    /*00001d48*/ MOVT        R2, #0                      @ .LC202 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1164] 
    /*00001d4c*/ MOV         R1, #15 
    /*00001d50*/ MOV         R0, #7 
    /*00001d54*/ BL          0x0000000000001D54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00001d58*/ MOVW        R3, #20280                  @ 0x4f38 
    /*00001d5c*/ MOVT        R3, #16408                  @ 0x4018 
    /*00001d60*/ CMP         R4, R3 
    /*00001d64*/ BEQ         VouIoctl_x2900
    /*00001d68*/ BLS         VouIoctl_x1e00
    /*00001d6c*/ MOVW        R3, #20310                  @ 0x4f56 
    /*00001d70*/ MOVT        R3, #32772                  @ 0x8004 
    /*00001d74*/ CMP         R4, R3 
    /*00001d78*/ BEQ         VouIoctl_x25b4
    /*00001d7c*/ BHI         VouIoctl_x1f04
    /*00001d80*/ MOVW        R3, #20231                  @ 0x4f07 
    /*00001d84*/ MOVT        R3, #32772                  @ 0x8004 
    /*00001d88*/ CMP         R4, R3 
    /*00001d8c*/ BEQ         VouIoctl_x28bc
    /*00001d90*/ BLS         VouIoctl_x2000
    /*00001d94*/ MOVW        R3, #20264                  @ 0x4f28 
    /*00001d98*/ MOVT        R3, #32772                  @ 0x8004 
    /*00001d9c*/ CMP         R4, R3 
    /*00001da0*/ BEQ         VouIoctl_x2608
    /*00001da4*/ BLS         VouIoctl_x2230
    /*00001da8*/ MOVW        R3, #20291                  @ 0x4f43 
    /*00001dac*/ MOVT        R3, #32772                  @ 0x8004 
    /*00001db0*/ CMP         R4, R3 
    /*00001db4*/ BEQ         VouIoctl_x2790
    /*00001db8*/ MOVW        R3, #20291                  @ 0x4f43 
    /*00001dbc*/ MOVT        R3, #32772                  @ 0x8004 
    /*00001dc0*/ CMP         R4, R3 
    /*00001dc4*/ BLS         VouIoctl_x238c
    /*00001dc8*/ MOVW        R3, #20302                  @ 0x4f4e 
    /*00001dcc*/ MOVT        R3, #32772                  @ 0x8004 
    /*00001dd0*/ CMP         R4, R3 
    /*00001dd4*/ BEQ         VouIoctl_x2820
    /*00001dd8*/ MOVW        R3, #20307                  @ 0x4f53 
    /*00001ddc*/ MOVT        R3, #32772                  @ 0x8004 
    /*00001de0*/ CMP         R4, R3 
    /*00001de4*/ BNE         VouIoctl_x23cc
    /*00001de8*/ MOV         R2, R7 
    /*00001dec*/ MOV         R1, SL 
    /*00001df0*/ MOV         R0, R9 
    /*00001df4*/ BL          0x0000000000001DF4          @ VouGetChnReceiveThreshold [R_ARM_CALL: .text+0xd778] 
    /*00001df8*/ MOV         R4, R0 
    /*00001dfc*/ B           VouIoctl_x212c
    VouIoctl_x1e00:
    /*00001e00*/ MOVW        R3, #20257                  @ 0x4f21 
    /*00001e04*/ MOVT        R3, #16388                  @ 0x4004 
    /*00001e08*/ CMP         R4, R3 
    /*00001e0c*/ BEQ         VouIoctl_x2918
    /*00001e10*/ BHI         VouIoctl_x1e88
    /*00001e14*/ MOVW        R3, #20293                  @ 0x4f45 
    /*00001e18*/ CMP         R4, R3 
    /*00001e1c*/ BEQ         VouIoctl_x28a8
    /*00001e20*/ BLS         VouIoctl_x2078
    /*00001e24*/ MOVW        R3, #20300                  @ 0x4f4c 
    /*00001e28*/ CMP         R4, R3 
    /*00001e2c*/ BEQ         VouIoctl_x27a8
    /*00001e30*/ BLS         VouIoctl_x21f4
    /*00001e34*/ MOVW        R3, #20230                  @ 0x4f06 
    /*00001e38*/ MOVT        R3, #16388                  @ 0x4004 
    /*00001e3c*/ CMP         R4, R3 
    /*00001e40*/ BEQ         VouIoctl_x2698
    /*00001e44*/ MOVW        R3, #20230                  @ 0x4f06 
    /*00001e48*/ MOVT        R3, #16388                  @ 0x4004 
    /*00001e4c*/ CMP         R4, R3 
    /*00001e50*/ BLS         VouIoctl_x23b0
    /*00001e54*/ MOVW        R3, #20232                  @ 0x4f08 
    /*00001e58*/ MOVT        R3, #16388                  @ 0x4004 
    /*00001e5c*/ CMP         R4, R3 
    /*00001e60*/ BEQ         VouIoctl_x27bc
    /*00001e64*/ MOVW        R3, #20253                  @ 0x4f1d 
    /*00001e68*/ MOVT        R3, #16388                  @ 0x4004 
    /*00001e6c*/ CMP         R4, R3 
    /*00001e70*/ BNE         VouIoctl_x23cc
    /*00001e74*/ MOV         R1, R7 
    /*00001e78*/ MOV         R0, R9 
    /*00001e7c*/ BL          0x0000000000001E7C          @ VouSetVideoPriority [R_ARM_CALL: .text+0x7b74] 
    /*00001e80*/ MOV         R4, R0 
    /*00001e84*/ B           VouIoctl_x212c
    VouIoctl_x1e88:
    /*00001e88*/ MOVW        R3, #20316                  @ 0x4f5c 
    /*00001e8c*/ MOVT        R3, #16388                  @ 0x4004 
    /*00001e90*/ CMP         R4, R3 
    /*00001e94*/ BEQ         VouIoctl_x28d0
    /*00001e98*/ BLS         VouIoctl_x1f90
    /*00001e9c*/ MOVW        R3, #20255                  @ 0x4f1f 
    /*00001ea0*/ MOVT        R3, #16404                  @ 0x4014 
    /*00001ea4*/ CMP         R4, R3 
    /*00001ea8*/ BEQ         VouIoctl_x27d0
    /*00001eac*/ BLS         VouIoctl_x214c
    /*00001eb0*/ MOVW        R3, #20297                  @ 0x4f49 
    /*00001eb4*/ MOVT        R3, #16404                  @ 0x4014 
    /*00001eb8*/ CMP         R4, R3 
    /*00001ebc*/ BEQ         VouIoctl_x2750
    /*00001ec0*/ MOVW        R3, #20297                  @ 0x4f49 
    /*00001ec4*/ MOVT        R3, #16404                  @ 0x4014 
    /*00001ec8*/ CMP         R4, R3 
    /*00001ecc*/ BLS         VouIoctl_x24bc
    /*00001ed0*/ MOVW        R3, #20317                  @ 0x4f5d 
    /*00001ed4*/ MOVT        R3, #16404                  @ 0x4014 
    /*00001ed8*/ CMP         R4, R3 
    /*00001edc*/ BEQ         VouIoctl_x2768
    /*00001ee0*/ MOVW        R3, #20265                  @ 0x4f29 
    /*00001ee4*/ MOVT        R3, #16408                  @ 0x4018 
    /*00001ee8*/ CMP         R4, R3 
    /*00001eec*/ BNE         VouIoctl_x23cc
    /*00001ef0*/ MOV         R1, R7 
    /*00001ef4*/ MOV         R0, R9 
    /*00001ef8*/ BL          0x0000000000001EF8          @ VoSetLayerParam [R_ARM_CALL: .text+0x8d1c] 
    /*00001efc*/ MOV         R4, R0 
    /*00001f00*/ B           VouIoctl_x212c
    VouIoctl_x1f04:
    /*00001f04*/ MOVW        R3, #20318                  @ 0x4f5e 
    /*00001f08*/ MOVT        R3, #32788                  @ 0x8014 
    /*00001f0c*/ CMP         R4, R3 
    /*00001f10*/ BEQ         VouIoctl_x28ec
    /*00001f14*/ BLS         VouIoctl_x20c4
    /*00001f18*/ MOVW        R3, #20250                  @ 0x4f1a 
    /*00001f1c*/ MOVT        R3, #32812                  @ 0x802c 
    /*00001f20*/ CMP         R4, R3 
    /*00001f24*/ BEQ         VouIoctl_x26c0
    /*00001f28*/ BLS         VouIoctl_x219c
    /*00001f2c*/ MOVW        R3, #20308                  @ 0x4f54 
    /*00001f30*/ MOVT        R3, #49168                  @ 0xc010 
    /*00001f34*/ CMP         R4, R3 
    /*00001f38*/ BEQ         VouIoctl_x2700
    /*00001f3c*/ MOVW        R3, #20308                  @ 0x4f54 
    /*00001f40*/ MOVT        R3, #49168                  @ 0xc010 
    /*00001f44*/ CMP         R4, R3 
    /*00001f48*/ BLS         VouIoctl_x2520
    /*00001f4c*/ MOVW        R3, #20261                  @ 0x4f25 
    /*00001f50*/ MOVT        R3, #49496                  @ 0xc158 
    /*00001f54*/ CMP         R4, R3 
    /*00001f58*/ BEQ         VouIoctl_x2718
    /*00001f5c*/ MOVW        R3, #20289                  @ 0x4f41 
    /*00001f60*/ MOVT        R3, #49496                  @ 0xc158 
    /*00001f64*/ CMP         R4, R3 
    /*00001f68*/ BNE         VouIoctl_x23cc
    /*00001f6c*/ CMP         R7, #0 
    /*00001f70*/ BEQ         VouIoctl_x2994
    VouIoctl_x1f74:
    /*00001f74*/ MOV         R1, SL 
    /*00001f78*/ MOV         R0, R9 
    /*00001f7c*/ LDR         R3, [R7, #336]              @ 0x150 
    /*00001f80*/ MOV         R2, R7 
    /*00001f84*/ BL          0x0000000000001F84          @ VouGetChnFrame [R_ARM_CALL: .text+0xa694] 
    /*00001f88*/ MOV         R4, R0 
    /*00001f8c*/ B           VouIoctl_x212c
    VouIoctl_x1f90:
    /*00001f90*/ MOVW        R3, #20292                  @ 0x4f44 
    /*00001f94*/ MOVT        R3, #16388                  @ 0x4004 
    /*00001f98*/ CMP         R4, R3 
    /*00001f9c*/ BEQ         VouIoctl_x2738
    /*00001fa0*/ BLS         VouIoctl_x2284
    /*00001fa4*/ MOVW        R3, #20306                  @ 0x4f52 
    /*00001fa8*/ MOVT        R3, #16388                  @ 0x4004 
    /*00001fac*/ CMP         R4, R3 
    /*00001fb0*/ BEQ         VouIoctl_x2544
    /*00001fb4*/ MOVW        R3, #20306                  @ 0x4f52 
    /*00001fb8*/ MOVT        R3, #16388                  @ 0x4004 
    /*00001fbc*/ CMP         R4, R3 
    /*00001fc0*/ BLS         VouIoctl_x248c
    /*00001fc4*/ MOVW        R3, #20309                  @ 0x4f55 
    /*00001fc8*/ MOVT        R3, #16388                  @ 0x4004 
    /*00001fcc*/ CMP         R4, R3 
    /*00001fd0*/ BEQ         VouIoctl_x284c
    /*00001fd4*/ MOVW        R3, #20315                  @ 0x4f5b 
    /*00001fd8*/ MOVT        R3, #16388                  @ 0x4004 
    /*00001fdc*/ CMP         R4, R3 
    /*00001fe0*/ BNE         VouIoctl_x23cc
    /*00001fe4*/ CMP         R7, #0 
    /*00001fe8*/ BEQ         VouIoctl_x2984
    VouIoctl_x1fec:
    /*00001fec*/ LDR         R1, [R7] 
    /*00001ff0*/ MOV         R0, R6 
    /*00001ff4*/ BL          0x0000000000001FF4          @ VOU_GraphicsBindDev [R_ARM_CALL: .text+0x14abc] 
    /*00001ff8*/ MOV         R4, R0 
    /*00001ffc*/ B           VouIoctl_x212c
    VouIoctl_x2000:
    /*00002000*/ MOVW        R3, #20249                  @ 0x4f19 
    /*00002004*/ MOVT        R3, #16428                  @ 0x402c 
    /*00002008*/ CMP         R4, R3 
    /*0000200c*/ BEQ         VouIoctl_x2670
    /*00002010*/ BLS         VouIoctl_x2344
    /*00002014*/ MOVW        R3, #20262                  @ 0x4f26 
    /*00002018*/ MOVT        R3, #16720                  @ 0x4150 
    /*0000201c*/ CMP         R4, R3 
    /*00002020*/ BEQ         VouIoctl_x287c
    /*00002024*/ MOVW        R3, #20262                  @ 0x4f26 
    /*00002028*/ MOVT        R3, #16720                  @ 0x4150 
    /*0000202c*/ CMP         R4, R3 
    /*00002030*/ BLS         VouIoctl_x2468
    /*00002034*/ MOVW        R3, #20290                  @ 0x4f42 
    /*00002038*/ MOVT        R3, #16720                  @ 0x4150 
    /*0000203c*/ CMP         R4, R3 
    /*00002040*/ BEQ         VouIoctl_x2890
    /*00002044*/ MOVW        R3, #20288                  @ 0x4f40 
    /*00002048*/ MOVT        R3, #16728                  @ 0x4158 
    /*0000204c*/ CMP         R4, R3 
    /*00002050*/ BNE         VouIoctl_x23cc
    /*00002054*/ CMP         R7, #0 
    /*00002058*/ BEQ         VouIoctl_x294c
    VouIoctl_x205c:
    /*0000205c*/ MOV         R1, SL 
    /*00002060*/ MOV         R0, R9 
    /*00002064*/ LDR         R3, [R7, #336]              @ 0x150 
    /*00002068*/ MOV         R2, R7 
    /*0000206c*/ BL          0x000000000000206C          @ VouUsrSendFrameTimeOut [R_ARM_CALL: .text+0x10268] 
    /*00002070*/ MOV         R4, R0 
    /*00002074*/ B           VouIoctl_x212c
    VouIoctl_x2078:
    /*00002078*/ MOVW        R3, #20248                  @ 0x4f18 
    /*0000207c*/ CMP         R4, R3 
    /*00002080*/ BEQ         VouIoctl_x25f8
    /*00002084*/ BLS         VouIoctl_x22c8
    /*00002088*/ MOVW        R3, #20252                  @ 0x4f1c 
    /*0000208c*/ CMP         R4, R3 
    /*00002090*/ BEQ         VouIoctl_x26ec
    /*00002094*/ BLS         VouIoctl_x2500
    /*00002098*/ MOVW        R3, #20278                  @ 0x4f36 
    /*0000209c*/ CMP         R4, R3 
    /*000020a0*/ BEQ         VouIoctl_x277c
    /*000020a4*/ MOVW        R3, #20279                  @ 0x4f37 
    /*000020a8*/ CMP         R4, R3 
    /*000020ac*/ BNE         VouIoctl_x23cc
    /*000020b0*/ MOV         R1, SL 
    /*000020b4*/ MOV         R0, R9 
    /*000020b8*/ BL          0x00000000000020B8          @ VouDisableChn [R_ARM_CALL: .text+0xa0d4] 
    /*000020bc*/ MOV         R4, R0 
    /*000020c0*/ B           VouIoctl_x212c
    VouIoctl_x20c4:
    /*000020c4*/ MOVW        R3, #20312                  @ 0x4f58 
    /*000020c8*/ MOVT        R3, #32780                  @ 0x800c 
    /*000020cc*/ CMP         R4, R3 
    /*000020d0*/ BEQ         VouIoctl_x25a0
    /*000020d4*/ BLS         VouIoctl_x22fc
    /*000020d8*/ MOVW        R3, #20256                  @ 0x4f20 
    /*000020dc*/ MOVT        R3, #32788                  @ 0x8014 
    /*000020e0*/ CMP         R4, R3 
    /*000020e4*/ BEQ         VouIoctl_x255c
    /*000020e8*/ MOVW        R3, #20256                  @ 0x4f20 
    /*000020ec*/ MOVT        R3, #32788                  @ 0x8014 
    /*000020f0*/ CMP         R4, R3 
    /*000020f4*/ BLS         VouIoctl_x24e0
    /*000020f8*/ MOVW        R3, #20270                  @ 0x4f2e 
    /*000020fc*/ MOVT        R3, #32788                  @ 0x8014 
    /*00002100*/ CMP         R4, R3 
    /*00002104*/ BEQ         VouIoctl_x26ac
    /*00002108*/ MOVW        R3, #20298                  @ 0x4f4a 
    /*0000210c*/ MOVT        R3, #32788                  @ 0x8014 
    /*00002110*/ CMP         R4, R3 
    /*00002114*/ BNE         VouIoctl_x23cc
    /*00002118*/ MOV         R2, R7 
    /*0000211c*/ MOV         R1, SL 
    /*00002120*/ MOV         R0, R9 
    /*00002124*/ BL          0x0000000000002124          @ VouGetZoomInWindow [R_ARM_CALL: .text+0xbc18] 
    /*00002128*/ MOV         R4, R0 
    VouIoctl_x212c:
    /*0000212c*/ SUB         R0, R8, #4 
    /*00002130*/ BL          0x0000000000002130          @ osal_atomic_dec_return [R_ARM_CALL: +0x0] 
    /*00002134*/ MOV         R0, R4 
    /*00002138*/ ADD         SP, SP, #28 
    /*0000213c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouIoctl_x2140:
    /*00002140*/ MOVW        R0, #32784                  @ 0x8010 
    /*00002144*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00002148*/ BX          LR 
    VouIoctl_x214c:
    /*0000214c*/ MOVW        R3, #20313                  @ 0x4f59 
    /*00002150*/ MOVT        R3, #16392                  @ 0x4008 
    /*00002154*/ CMP         R4, R3 
    /*00002158*/ BEQ         VouIoctl_x2864
    /*0000215c*/ MOVW        R3, #20313                  @ 0x4f59 
    /*00002160*/ MOVT        R3, #16392                  @ 0x4008 
    /*00002164*/ CMP         R4, R3 
    /*00002168*/ BLS         VouIoctl_x2440
    /*0000216c*/ MOVW        R3, #20311                  @ 0x4f57 
    /*00002170*/ MOVT        R3, #16396                  @ 0x400c 
    /*00002174*/ CMP         R4, R3 
    /*00002178*/ BEQ         VouIoctl_x2838
    /*0000217c*/ MOVW        R3, #20321                  @ 0x4f61 
    /*00002180*/ MOVT        R3, #16400                  @ 0x4010 
    /*00002184*/ CMP         R4, R3 
    /*00002188*/ BNE         VouIoctl_x23cc
    /*0000218c*/ MOV         R0, R7 
    /*00002190*/ BL          0x0000000000002190          @ VoSetModParam [R_ARM_CALL: .text+0x12914] 
    /*00002194*/ MOV         R4, R0 
    /*00002198*/ B           VouIoctl_x212c
    VouIoctl_x219c:
    /*0000219c*/ MOVW        R3, #20281                  @ 0x4f39 
    /*000021a0*/ MOVT        R3, #32792                  @ 0x8018 
    /*000021a4*/ CMP         R4, R3 
    /*000021a8*/ BEQ         VouIoctl_x2644
    /*000021ac*/ MOVW        R3, #20281                  @ 0x4f39 
    /*000021b0*/ MOVT        R3, #32792                  @ 0x8018 
    /*000021b4*/ CMP         R4, R3 
    /*000021b8*/ BLS         VouIoctl_x23f8
    /*000021bc*/ MOVW        R3, #20283                  @ 0x4f3b 
    /*000021c0*/ MOVT        R3, #32792                  @ 0x8018 
    /*000021c4*/ CMP         R4, R3 
    /*000021c8*/ BEQ         VouIoctl_x26d4
    /*000021cc*/ MOVW        R3, #20305                  @ 0x4f51 
    /*000021d0*/ MOVT        R3, #32792                  @ 0x8018 
    /*000021d4*/ CMP         R4, R3 
    /*000021d8*/ BNE         VouIoctl_x23cc
    /*000021dc*/ MOV         R2, R7 
    /*000021e0*/ MOV         R1, SL 
    /*000021e4*/ MOV         R0, R9 
    /*000021e8*/ BL          0x00000000000021E8          @ VouGetChnBorder [R_ARM_CALL: .text+0xd210] 
    /*000021ec*/ MOV         R4, R0 
    /*000021f0*/ B           VouIoctl_x212c
    VouIoctl_x21f4:
    /*000021f4*/ MOVW        R3, #20295                  @ 0x4f47 
    /*000021f8*/ CMP         R4, R3 
    /*000021fc*/ BEQ         VouIoctl_x280c
    /*00002200*/ BCC         VouIoctl_x27f8
    /*00002204*/ MOVW        R3, #20296                  @ 0x4f48 
    /*00002208*/ CMP         R4, R3 
    /*0000220c*/ BEQ         VouIoctl_x27e4
    /*00002210*/ MOVW        R3, #20299                  @ 0x4f4b 
    /*00002214*/ CMP         R4, R3 
    /*00002218*/ BNE         VouIoctl_x23cc
    /*0000221c*/ MOV         R1, SL 
    /*00002220*/ MOV         R0, R9 
    /*00002224*/ BL          0x0000000000002224          @ VouShowChn [R_ARM_CALL: .text+0xb190] 
    /*00002228*/ MOV         R4, R0 
    /*0000222c*/ B           VouIoctl_x212c
    VouIoctl_x2230:
    /*00002230*/ MOVW        R3, #20254                  @ 0x4f1e 
    /*00002234*/ MOVT        R3, #32772                  @ 0x8004 
    /*00002238*/ CMP         R4, R3 
    /*0000223c*/ BEQ         VouIoctl_x265c
    /*00002240*/ MOVW        R3, #20254                  @ 0x4f1e 
    /*00002244*/ MOVT        R3, #32772                  @ 0x8004 
    /*00002248*/ CMP         R4, R3 
    /*0000224c*/ BLS         VouIoctl_x241c
    /*00002250*/ MOVW        R3, #20258                  @ 0x4f22 
    /*00002254*/ MOVT        R3, #32772                  @ 0x8004 
    /*00002258*/ CMP         R4, R3 
    /*0000225c*/ BEQ         VouIoctl_x2684
    /*00002260*/ MOVW        R3, #20260                  @ 0x4f24 
    /*00002264*/ MOVT        R3, #32772                  @ 0x8004 
    /*00002268*/ CMP         R4, R3 
    /*0000226c*/ BNE         VouIoctl_x23cc
    /*00002270*/ MOV         R1, R7 
    /*00002274*/ MOV         R0, R9 
    /*00002278*/ BL          0x0000000000002278          @ VouGetPlayToleration [R_ARM_CALL: .text+0xca04] 
    /*0000227c*/ MOV         R4, R0 
    /*00002280*/ B           VouIoctl_x212c
    VouIoctl_x2284:
    /*00002284*/ MOVW        R3, #20263                  @ 0x4f27 
    /*00002288*/ MOVT        R3, #16388                  @ 0x4004 
    /*0000228c*/ CMP         R4, R3 
    /*00002290*/ BEQ         VouIoctl_x2630
    /*00002294*/ MOVW        R3, #20267                  @ 0x4f2b 
    /*00002298*/ MOVT        R3, #16388                  @ 0x4004 
    /*0000229c*/ CMP         R4, R3 
    /*000022a0*/ BEQ         VouIoctl_x261c
    /*000022a4*/ MOVW        R3, #20259                  @ 0x4f23 
    /*000022a8*/ MOVT        R3, #16388                  @ 0x4004 
    /*000022ac*/ CMP         R4, R3 
    /*000022b0*/ BNE         VouIoctl_x23cc
    /*000022b4*/ MOV         R1, R7 
    /*000022b8*/ MOV         R0, R9 
    /*000022bc*/ BL          0x00000000000022BC          @ VouSetPlayToleration [R_ARM_CALL: .text+0xc9c8] 
    /*000022c0*/ MOV         R4, R0 
    /*000022c4*/ B           VouIoctl_x212c
    VouIoctl_x22c8:
    /*000022c8*/ MOVW        R3, #20227                  @ 0x4f03 
    /*000022cc*/ CMP         R4, R3 
    /*000022d0*/ BEQ         VouIoctl_x293c
    /*000022d4*/ MOVW        R3, #20247                  @ 0x4f17 
    /*000022d8*/ CMP         R4, R3 
    /*000022dc*/ BEQ         VouIoctl_x292c
    /*000022e0*/ MOVW        R3, #20226                  @ 0x4f02 
    /*000022e4*/ CMP         R4, R3 
    /*000022e8*/ BNE         VouIoctl_x23cc
    /*000022ec*/ MOV         R0, FP 
    /*000022f0*/ BL          0x00000000000022F0          @ VouEnable [R_ARM_CALL: .text+0x6494] 
    /*000022f4*/ MOV         R4, R0 
    /*000022f8*/ B           VouIoctl_x212c
    VouIoctl_x22fc:
    /*000022fc*/ MOVW        R3, #20301                  @ 0x4f4d 
    /*00002300*/ MOVT        R3, #32776                  @ 0x8008 
    /*00002304*/ CMP         R4, R3 
    /*00002308*/ BEQ         VouIoctl_x2588
    /*0000230c*/ MOVW        R3, #20314                  @ 0x4f5a 
    /*00002310*/ MOVT        R3, #32776                  @ 0x8008 
    /*00002314*/ CMP         R4, R3 
    /*00002318*/ BEQ         VouIoctl_x2570
    /*0000231c*/ MOVW        R3, #20285                  @ 0x4f3d 
    /*00002320*/ MOVT        R3, #32776                  @ 0x8008 
    /*00002324*/ CMP         R4, R3 
    /*00002328*/ BNE         VouIoctl_x23cc
    /*0000232c*/ MOV         R2, R7 
    /*00002330*/ MOV         R1, SL 
    /*00002334*/ MOV         R0, R9 
    /*00002338*/ BL          0x0000000000002338          @ VouGetChnDispPos [R_ARM_CALL: .text+0x95d8] 
    /*0000233c*/ MOV         R4, R0 
    /*00002340*/ B           VouIoctl_x212c
    VouIoctl_x2344:
    /*00002344*/ MOVW        R3, #20304                  @ 0x4f50 
    /*00002348*/ MOVT        R3, #16408                  @ 0x4018 
    /*0000234c*/ CMP         R4, R3 
    /*00002350*/ BEQ         VouIoctl_x25e0
    /*00002354*/ MOVW        R3, #20234                  @ 0x4f0a 
    /*00002358*/ MOVT        R3, #16420                  @ 0x4024 
    /*0000235c*/ CMP         R4, R3 
    /*00002360*/ BEQ         VouIoctl_x25cc
    /*00002364*/ MOVW        R3, #20282                  @ 0x4f3a 
    /*00002368*/ MOVT        R3, #16408                  @ 0x4018 
    /*0000236c*/ CMP         R4, R3 
    /*00002370*/ BNE         VouIoctl_x23cc
    /*00002374*/ MOV         R2, R7 
    /*00002378*/ MOV         R1, SL 
    /*0000237c*/ MOV         R0, R9 
    /*00002380*/ BL          0x0000000000002380          @ VouSetChnParam [R_ARM_CALL: .text+0x8a9c] 
    /*00002384*/ MOV         R4, R0 
    /*00002388*/ B           VouIoctl_x212c
    VouIoctl_x238c:
    /*0000238c*/ MOVW        R3, #20268                  @ 0x4f2c 
    /*00002390*/ MOVT        R3, #32772                  @ 0x8004 
    /*00002394*/ CMP         R4, R3 
    /*00002398*/ BNE         VouIoctl_x23cc
    /*0000239c*/ MOV         R1, R7 
    /*000023a0*/ MOV         R0, R9 
    /*000023a4*/ BL          0x00000000000023A4          @ VoGetVideoLayerDecompress [R_ARM_CALL: .text+0x90a0] 
    /*000023a8*/ MOV         R4, R0 
    /*000023ac*/ B           VouIoctl_x212c
    VouIoctl_x23b0:
    /*000023b0*/ MOV         R3, #20224                  @ 0x4f00 
    /*000023b4*/ MOVT        R3, #16388                  @ 0x4004 
    /*000023b8*/ CMP         R4, R3 
    /*000023bc*/ LDREQ       R3, [R7] 
    /*000023c0*/ MOVEQ       R4, #0 
    /*000023c4*/ STREQ       R3, [R5] 
    /*000023c8*/ BEQ         VouIoctl_x212c
    VouIoctl_x23cc:
    /*000023cc*/ STR         R4, [SP, #4] 
    /*000023d0*/ MOVW        R3, #2753                   @ 0xac1 
    /*000023d4*/ MOVW        R2, #0                      @ .LC203 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11a8] 
    /*000023d8*/ STR         R3, [SP] 
    /*000023dc*/ MOVT        R2, #0                      @ .LC203 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11a8] 
    /*000023e0*/ LDR         R3, [PC, #1488]             @ 0x00000000000029b8 
    /*000023e4*/ MOV         R1, #15 
    /*000023e8*/ MOV         R0, #4 
    /*000023ec*/ BL          0x00000000000023EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000023f0*/ MVN         R4, #0 
    /*000023f4*/ B           VouIoctl_x212c
    VouIoctl_x23f8:
    /*000023f8*/ MOVW        R3, #20266                  @ 0x4f2a 
    /*000023fc*/ MOVT        R3, #32792                  @ 0x8018 
    /*00002400*/ CMP         R4, R3 
    /*00002404*/ BNE         VouIoctl_x23cc
    /*00002408*/ MOV         R1, R7 
    /*0000240c*/ MOV         R0, R9 
    /*00002410*/ BL          0x0000000000002410          @ VoGetLayerParam [R_ARM_CALL: .text+0x8f18] 
    /*00002414*/ MOV         R4, R0 
    /*00002418*/ B           VouIoctl_x212c
    VouIoctl_x241c:
    /*0000241c*/ MOVW        R3, #20233                  @ 0x4f09 
    /*00002420*/ MOVT        R3, #32772                  @ 0x8004 
    /*00002424*/ CMP         R4, R3 
    /*00002428*/ BNE         VouIoctl_x23cc
    /*0000242c*/ MOV         R1, R7 
    /*00002430*/ MOV         R0, FP 
    /*00002434*/ BL          0x0000000000002434          @ VouGetVtth [R_ARM_CALL: .text+0x6178] 
    /*00002438*/ MOV         R4, R0 
    /*0000243c*/ B           VouIoctl_x212c
    VouIoctl_x2440:
    /*00002440*/ MOVW        R3, #20284                  @ 0x4f3c 
    /*00002444*/ MOVT        R3, #16392                  @ 0x4008 
    /*00002448*/ CMP         R4, R3 
    /*0000244c*/ BNE         VouIoctl_x23cc
    /*00002450*/ MOV         R2, R7 
    /*00002454*/ MOV         R1, SL 
    /*00002458*/ MOV         R0, R9 
    /*0000245c*/ BL          0x000000000000245C          @ VouSetChnDispPos [R_ARM_CALL: .text+0x959c] 
    /*00002460*/ MOV         R4, R0 
    /*00002464*/ B           VouIoctl_x212c
    VouIoctl_x2468:
    /*00002468*/ MOVW        R3, #20228                  @ 0x4f04 
    /*0000246c*/ MOVT        R3, #16444                  @ 0x403c 
    /*00002470*/ CMP         R4, R3 
    /*00002474*/ BNE         VouIoctl_x23cc
    /*00002478*/ MOV         R1, R7 
    /*0000247c*/ MOV         R0, FP 
    /*00002480*/ BL          0x0000000000002480          @ VouSetPubAttr [R_ARM_CALL: .text+0x59b8] 
    /*00002484*/ MOV         R4, R0 
    /*00002488*/ B           VouIoctl_x212c
    VouIoctl_x248c:
    /*0000248c*/ MOVW        R3, #20303                  @ 0x4f4f 
    /*00002490*/ MOVT        R3, #16388                  @ 0x4004 
    /*00002494*/ CMP         R4, R3 
    /*00002498*/ BNE         VouIoctl_x23cc
    /*0000249c*/ CMP         R7, #0 
    /*000024a0*/ BEQ         VouIoctl_x29a4
    VouIoctl_x24a4:
    /*000024a4*/ LDR         R2, [R7] 
    /*000024a8*/ MOV         R1, SL 
    /*000024ac*/ MOV         R0, R9 
    /*000024b0*/ BL          0x00000000000024B0          @ VouChnClearBuf [R_ARM_CALL: .text+0xca40] 
    /*000024b4*/ MOV         R4, R0 
    /*000024b8*/ B           VouIoctl_x212c
    VouIoctl_x24bc:
    /*000024bc*/ MOVW        R3, #20269                  @ 0x4f2d 
    /*000024c0*/ MOVT        R3, #16404                  @ 0x4014 
    /*000024c4*/ CMP         R4, R3 
    /*000024c8*/ BNE         VouIoctl_x23cc
    /*000024cc*/ MOV         R1, R7 
    /*000024d0*/ MOV         R0, R9 
    /*000024d4*/ BL          0x00000000000024D4          @ VouSetVideoLayerCrop [R_ARM_CALL: .text+0x926c] 
    /*000024d8*/ MOV         R4, R0 
    /*000024dc*/ B           VouIoctl_x212c
    VouIoctl_x24e0:
    /*000024e0*/ MOVW        R3, #20322                  @ 0x4f62 
    /*000024e4*/ MOVT        R3, #32784                  @ 0x8010 
    /*000024e8*/ CMP         R4, R3 
    /*000024ec*/ BNE         VouIoctl_x23cc
    /*000024f0*/ MOV         R0, R7 
    /*000024f4*/ BL          0x00000000000024F4          @ VoGetModParam [R_ARM_CALL: .text+0x12a84] 
    /*000024f8*/ MOV         R4, R0 
    /*000024fc*/ B           VouIoctl_x212c
    VouIoctl_x2500:
    /*00002500*/ MOVW        R3, #20251                  @ 0x4f1b 
    /*00002504*/ CMP         R4, R3 
    /*00002508*/ BNE         VouIoctl_x23cc
    /*0000250c*/ MOV         R1, FP 
    /*00002510*/ MOV         R0, R9 
    /*00002514*/ BL          0x0000000000002514          @ VouVideoBindDev [R_ARM_CALL: .text+0x7bec] 
    /*00002518*/ MOV         R4, R0 
    /*0000251c*/ B           VouIoctl_x212c
    VouIoctl_x2520:
    /*00002520*/ MOVW        R3, #20229                  @ 0x4f05 
    /*00002524*/ MOVT        R3, #32828                  @ 0x803c 
    /*00002528*/ CMP         R4, R3 
    /*0000252c*/ BNE         VouIoctl_x23cc
    /*00002530*/ MOV         R1, R7 
    /*00002534*/ MOV         R0, FP 
    /*00002538*/ BL          0x0000000000002538          @ VouGetPubAttr [R_ARM_CALL: .text+0x5d3c] 
    /*0000253c*/ MOV         R4, R0 
    /*00002540*/ B           VouIoctl_x212c
    VouIoctl_x2544:
    /*00002544*/ MOV         R2, R7 
    /*00002548*/ MOV         R1, SL 
    /*0000254c*/ MOV         R0, R9 
    /*00002550*/ BL          0x0000000000002550          @ VouSetChnReceiveThreshold [R_ARM_CALL: .text+0xd4e4] 
    /*00002554*/ MOV         R4, R0 
    /*00002558*/ B           VouIoctl_x212c
    VouIoctl_x255c:
    /*0000255c*/ MOV         R1, R7 
    /*00002560*/ MOV         R0, R9 
    /*00002564*/ BL          0x0000000000002564          @ VouGetVideoCSC [R_ARM_CALL: .text+0x6bf0] 
    /*00002568*/ MOV         R4, R0 
    /*0000256c*/ B           VouIoctl_x212c
    VouIoctl_x2570:
    /*00002570*/ MOV         R2, R7 
    /*00002574*/ MOV         R1, SL 
    /*00002578*/ MOV         R0, R9 
    /*0000257c*/ BL          0x000000000000257C          @ VouGetChnBoundary [R_ARM_CALL: .text+0xd4a0] 
    /*00002580*/ MOV         R4, R0 
    /*00002584*/ B           VouIoctl_x212c
    VouIoctl_x2588:
    /*00002588*/ MOV         R2, R7 
    /*0000258c*/ MOV         R1, SL 
    /*00002590*/ MOV         R0, R9 
    /*00002594*/ BL          0x0000000000002594          @ VouGetChnPts [R_ARM_CALL: .text+0xbd30] 
    /*00002598*/ MOV         R4, R0 
    /*0000259c*/ B           VouIoctl_x212c
    VouIoctl_x25a0:
    /*000025a0*/ MOV         R1, R7 
    /*000025a4*/ MOV         R0, R9 
    /*000025a8*/ BL          0x00000000000025A8          @ VouGetVideoLayerBoundary [R_ARM_CALL: .text+0xd41c] 
    /*000025ac*/ MOV         R4, R0 
    /*000025b0*/ B           VouIoctl_x212c
    VouIoctl_x25b4:
    /*000025b4*/ MOV         R2, R7 
    /*000025b8*/ MOV         R1, SL 
    /*000025bc*/ MOV         R0, R9 
    /*000025c0*/ BL          0x00000000000025C0          @ VouGetChnRotation [R_ARM_CALL: .text+0xda4c] 
    /*000025c4*/ MOV         R4, R0 
    /*000025c8*/ B           VouIoctl_x212c
    VouIoctl_x25cc:
    /*000025cc*/ MOV         R1, R7 
    /*000025d0*/ MOV         R0, FP 
    /*000025d4*/ BL          0x00000000000025D4          @ VouSetUserIntfSyncInfo [R_ARM_CALL: .text+0x6260] 
    /*000025d8*/ MOV         R4, R0 
    /*000025dc*/ B           VouIoctl_x212c
    VouIoctl_x25e0:
    /*000025e0*/ MOV         R2, R7 
    /*000025e4*/ MOV         R1, SL 
    /*000025e8*/ MOV         R0, R9 
    /*000025ec*/ BL          0x00000000000025EC          @ VouSetChnBorder [R_ARM_CALL: .text+0xd004] 
    /*000025f0*/ MOV         R4, R0 
    /*000025f4*/ B           VouIoctl_x212c
    VouIoctl_x25f8:
    /*000025f8*/ MOV         R0, R9 
    /*000025fc*/ BL          0x00000000000025FC          @ VouDisableVideoLayer [R_ARM_CALL: .text+0x7b2c] 
    /*00002600*/ MOV         R4, R0 
    /*00002604*/ B           VouIoctl_x212c
    VouIoctl_x2608:
    /*00002608*/ MOV         R1, R7 
    /*0000260c*/ MOV         R0, R9 
    /*00002610*/ BL          0x0000000000002610          @ VouGetVideoPartitionMode [R_ARM_CALL: .text+0x6d04] 
    /*00002614*/ MOV         R4, R0 
    /*00002618*/ B           VouIoctl_x212c
    VouIoctl_x261c:
    /*0000261c*/ MOV         R1, R7 
    /*00002620*/ MOV         R0, R9 
    /*00002624*/ BL          0x0000000000002624          @ VoSetVideoLayerDecompress [R_ARM_CALL: .text+0x9064] 
    /*00002628*/ MOV         R4, R0 
    /*0000262c*/ B           VouIoctl_x212c
    VouIoctl_x2630:
    /*00002630*/ MOV         R1, R7 
    /*00002634*/ MOV         R0, R9 
    /*00002638*/ BL          0x0000000000002638          @ VouSetVideoPartitionMode [R_ARM_CALL: .text+0x6cc8] 
    /*0000263c*/ MOV         R4, R0 
    /*00002640*/ B           VouIoctl_x212c
    VouIoctl_x2644:
    /*00002644*/ MOV         R2, R7 
    /*00002648*/ MOV         R1, SL 
    /*0000264c*/ MOV         R0, R9 
    /*00002650*/ BL          0x0000000000002650          @ VouGetChnAttr [R_ARM_CALL: .text+0x85a8] 
    /*00002654*/ MOV         R4, R0 
    /*00002658*/ B           VouIoctl_x212c
    VouIoctl_x265c:
    /*0000265c*/ MOV         R1, R7 
    /*00002660*/ MOV         R0, R9 
    /*00002664*/ BL          0x0000000000002664          @ VouGetVideoPriority [R_ARM_CALL: .text+0x7bb0] 
    /*00002668*/ MOV         R4, R0 
    /*0000266c*/ B           VouIoctl_x212c
    VouIoctl_x2670:
    /*00002670*/ MOV         R1, R7 
    /*00002674*/ MOV         R0, R9 
    /*00002678*/ BL          0x0000000000002678          @ VouSetVideoLayerAttr [R_ARM_CALL: .text+0x7104] 
    /*0000267c*/ MOV         R4, R0 
    /*00002680*/ B           VouIoctl_x212c
    VouIoctl_x2684:
    /*00002684*/ MOV         R1, R7 
    /*00002688*/ MOV         R0, R9 
    /*0000268c*/ BL          0x000000000000268C          @ VouGetDispBufLen [R_ARM_CALL: .text+0xc93c] 
    /*00002690*/ MOV         R4, R0 
    /*00002694*/ B           VouIoctl_x212c
    VouIoctl_x2698:
    /*00002698*/ MOV         R1, R7 
    /*0000269c*/ MOV         R0, FP 
    /*000026a0*/ BL          0x00000000000026A0          @ VouSetDevFrameRate [R_ARM_CALL: .text+0x5dcc] 
    /*000026a4*/ MOV         R4, R0 
    /*000026a8*/ B           VouIoctl_x212c
    VouIoctl_x26ac:
    /*000026ac*/ MOV         R1, R7 
    /*000026b0*/ MOV         R0, R9 
    /*000026b4*/ BL          0x00000000000026B4          @ VouGetVideoLayerCrop [R_ARM_CALL: .text+0x94c4] 
    /*000026b8*/ MOV         R4, R0 
    /*000026bc*/ B           VouIoctl_x212c
    VouIoctl_x26c0:
    /*000026c0*/ MOV         R1, R7 
    /*000026c4*/ MOV         R0, R9 
    /*000026c8*/ BL          0x00000000000026C8          @ VouGetVideoLayerAttr [R_ARM_CALL: .text+0x7154] 
    /*000026cc*/ MOV         R4, R0 
    /*000026d0*/ B           VouIoctl_x212c
    VouIoctl_x26d4:
    /*000026d4*/ MOV         R2, R7 
    /*000026d8*/ MOV         R1, SL 
    /*000026dc*/ MOV         R0, R9 
    /*000026e0*/ BL          0x00000000000026E0          @ VouGetChnParam [R_ARM_CALL: .text+0x8b8c] 
    /*000026e4*/ MOV         R4, R0 
    /*000026e8*/ B           VouIoctl_x212c
    VouIoctl_x26ec:
    /*000026ec*/ MOV         R1, FP 
    /*000026f0*/ MOV         R0, R9 
    /*000026f4*/ BL          0x00000000000026F4          @ VouVideoUnBindDev [R_ARM_CALL: .text+0x7db0] 
    /*000026f8*/ MOV         R4, R0 
    /*000026fc*/ B           VouIoctl_x212c
    VouIoctl_x2700:
    /*00002700*/ MOV         R2, R7 
    /*00002704*/ MOV         R1, SL 
    /*00002708*/ MOV         R0, R9 
    /*0000270c*/ BL          0x000000000000270C          @ VouChnGetLuma [R_ARM_CALL: .text+0x126ec] 
    /*00002710*/ MOV         R4, R0 
    /*00002714*/ B           VouIoctl_x212c
    VouIoctl_x2718:
    /*00002718*/ CMP         R7, #0 
    /*0000271c*/ BEQ         VouIoctl_x2974
    VouIoctl_x2720:
    /*00002720*/ MOV         R0, R9 
    /*00002724*/ LDR         R2, [R7, #336]              @ 0x150 
    /*00002728*/ MOV         R1, R7 
    /*0000272c*/ BL          0x000000000000272C          @ VouGetScreenFrame [R_ARM_CALL: .text+0xbf38] 
    /*00002730*/ MOV         R4, R0 
    /*00002734*/ B           VouIoctl_x212c
    VouIoctl_x2738:
    /*00002738*/ MOV         R2, R7 
    /*0000273c*/ MOV         R1, SL 
    /*00002740*/ MOV         R0, R9 
    /*00002744*/ BL          0x0000000000002744          @ VouSetChnFrameRate [R_ARM_CALL: .text+0xa1d4] 
    /*00002748*/ MOV         R4, R0 
    /*0000274c*/ B           VouIoctl_x212c
    VouIoctl_x2750:
    /*00002750*/ MOV         R2, R7 
    /*00002754*/ MOV         R1, SL 
    /*00002758*/ MOV         R0, R9 
    /*0000275c*/ BL          0x000000000000275C          @ VouSetZoomInWindow [R_ARM_CALL: .text+0xb840] 
    /*00002760*/ MOV         R4, R0 
    /*00002764*/ B           VouIoctl_x212c
    VouIoctl_x2768:
    /*00002768*/ MOV         R1, R7 
    /*0000276c*/ MOV         R0, R6 
    /*00002770*/ BL          0x0000000000002770          @ VOU_GraphicsSetCSC [R_ARM_CALL: .text+0x14b0c] 
    /*00002774*/ MOV         R4, R0 
    /*00002778*/ B           VouIoctl_x212c
    VouIoctl_x277c:
    /*0000277c*/ MOV         R1, SL 
    /*00002780*/ MOV         R0, R9 
    /*00002784*/ BL          0x0000000000002784          @ VouEnableChn [R_ARM_CALL: .text+0x9944] 
    /*00002788*/ MOV         R4, R0 
    /*0000278c*/ B           VouIoctl_x212c
    VouIoctl_x2790:
    /*00002790*/ MOV         R2, R7 
    /*00002794*/ MOV         R1, SL 
    /*00002798*/ MOV         R0, R9 
    /*0000279c*/ BL          0x000000000000279C          @ VouGetChnFrameRate [R_ARM_CALL: .text+0xa578] 
    /*000027a0*/ MOV         R4, R0 
    /*000027a4*/ B           VouIoctl_x212c
    VouIoctl_x27a8:
    /*000027a8*/ MOV         R1, SL 
    /*000027ac*/ MOV         R0, R9 
    /*000027b0*/ BL          0x00000000000027B0          @ VouHideChn [R_ARM_CALL: .text+0xb740] 
    /*000027b4*/ MOV         R4, R0 
    /*000027b8*/ B           VouIoctl_x212c
    VouIoctl_x27bc:
    /*000027bc*/ MOV         R1, R7 
    /*000027c0*/ MOV         R0, FP 
    /*000027c4*/ BL          0x00000000000027C4          @ VouSetVtth [R_ARM_CALL: .text+0x6004] 
    /*000027c8*/ MOV         R4, R0 
    /*000027cc*/ B           VouIoctl_x212c
    VouIoctl_x27d0:
    /*000027d0*/ MOV         R1, R7 
    /*000027d4*/ MOV         R0, R9 
    /*000027d8*/ BL          0x00000000000027D8          @ VouSetVideoCSC [R_ARM_CALL: .text+0x6a40] 
    /*000027dc*/ MOV         R4, R0 
    /*000027e0*/ B           VouIoctl_x212c
    VouIoctl_x27e4:
    /*000027e4*/ MOV         R1, SL 
    /*000027e8*/ MOV         R0, R9 
    /*000027ec*/ BL          0x00000000000027EC          @ VouSetChnRefresh [R_ARM_CALL: .text+0xafdc] 
    /*000027f0*/ MOV         R4, R0 
    /*000027f4*/ B           VouIoctl_x212c
    VouIoctl_x27f8:
    /*000027f8*/ MOV         R1, SL 
    /*000027fc*/ MOV         R0, R9 
    /*00002800*/ BL          0x0000000000002800          @ VouSetChnResume [R_ARM_CALL: .text+0xafa0] 
    /*00002804*/ MOV         R4, R0 
    /*00002808*/ B           VouIoctl_x212c
    VouIoctl_x280c:
    /*0000280c*/ MOV         R1, SL 
    /*00002810*/ MOV         R0, R9 
    /*00002814*/ BL          0x0000000000002814          @ VouSetChnStep [R_ARM_CALL: .text+0xaf64] 
    /*00002818*/ MOV         R4, R0 
    /*0000281c*/ B           VouIoctl_x212c
    VouIoctl_x2820:
    /*00002820*/ MOV         R2, R7 
    /*00002824*/ MOV         R1, SL 
    /*00002828*/ MOV         R0, R9 
    /*0000282c*/ BL          0x000000000000282C          @ VouQueryChn [R_ARM_CALL: .text+0xbd6c] 
    /*00002830*/ MOV         R4, R0 
    /*00002834*/ B           VouIoctl_x212c
    VouIoctl_x2838:
    /*00002838*/ MOV         R1, R7 
    /*0000283c*/ MOV         R0, R9 
    /*00002840*/ BL          0x0000000000002840          @ VouSetVideoLayerBoundary [R_ARM_CALL: .text+0xd3dc] 
    /*00002844*/ MOV         R4, R0 
    /*00002848*/ B           VouIoctl_x212c
    VouIoctl_x284c:
    /*0000284c*/ MOV         R2, R7 
    /*00002850*/ MOV         R1, SL 
    /*00002854*/ MOV         R0, R9 
    /*00002858*/ BL          0x0000000000002858          @ VouSetChnRotation [R_ARM_CALL: .text+0xd888] 
    /*0000285c*/ MOV         R4, R0 
    /*00002860*/ B           VouIoctl_x212c
    VouIoctl_x2864:
    /*00002864*/ MOV         R2, R7 
    /*00002868*/ MOV         R1, SL 
    /*0000286c*/ MOV         R0, R9 
    /*00002870*/ BL          0x0000000000002870          @ VouSetChnBoundary [R_ARM_CALL: .text+0xd45c] 
    /*00002874*/ MOV         R4, R0 
    /*00002878*/ B           VouIoctl_x212c
    VouIoctl_x287c:
    /*0000287c*/ MOV         R1, R7 
    /*00002880*/ MOV         R0, R9 
    /*00002884*/ BL          0x0000000000002884          @ VouReleaseScreenFrame [R_ARM_CALL: .text+0xc674] 
    /*00002888*/ MOV         R4, R0 
    /*0000288c*/ B           VouIoctl_x212c
    VouIoctl_x2890:
    /*00002890*/ MOV         R2, R7 
    /*00002894*/ MOV         R1, SL 
    /*00002898*/ MOV         R0, R9 
    /*0000289c*/ BL          0x000000000000289C          @ VouReleaseChnFrame [R_ARM_CALL: .text+0xac90] 
    /*000028a0*/ MOV         R4, R0 
    /*000028a4*/ B           VouIoctl_x212c
    VouIoctl_x28a8:
    /*000028a8*/ MOV         R1, SL 
    /*000028ac*/ MOV         R0, R9 
    /*000028b0*/ BL          0x00000000000028B0          @ VouSetChnPause [R_ARM_CALL: .text+0xaf28] 
    /*000028b4*/ MOV         R4, R0 
    /*000028b8*/ B           VouIoctl_x212c
    VouIoctl_x28bc:
    /*000028bc*/ MOV         R1, R7 
    /*000028c0*/ MOV         R0, FP 
    /*000028c4*/ BL          0x00000000000028C4          @ VouGetDevFrameRate [R_ARM_CALL: .text+0x5f78] 
    /*000028c8*/ MOV         R4, R0 
    /*000028cc*/ B           VouIoctl_x212c
    VouIoctl_x28d0:
    /*000028d0*/ CMP         R7, #0 
    /*000028d4*/ BEQ         VouIoctl_x2964
    VouIoctl_x28d8:
    /*000028d8*/ LDR         R1, [R7] 
    /*000028dc*/ MOV         R0, R6 
    /*000028e0*/ BL          0x00000000000028E0          @ VOU_GraphicsUnBindDev [R_ARM_CALL: .text+0x14ae4] 
    /*000028e4*/ MOV         R4, R0 
    /*000028e8*/ B           VouIoctl_x212c
    VouIoctl_x28ec:
    /*000028ec*/ MOV         R1, R7 
    /*000028f0*/ MOV         R0, R6 
    /*000028f4*/ BL          0x00000000000028F4          @ VOU_GraphicsGetCSC [R_ARM_CALL: .text+0x14c64] 
    /*000028f8*/ MOV         R4, R0 
    /*000028fc*/ B           VouIoctl_x212c
    VouIoctl_x2900:
    /*00002900*/ MOV         R2, R7 
    /*00002904*/ MOV         R1, SL 
    /*00002908*/ MOV         R0, R9 
    /*0000290c*/ BL          0x000000000000290C          @ VouSetChnAttr [R_ARM_CALL: .text+0x84b8] 
    /*00002910*/ MOV         R4, R0 
    /*00002914*/ B           VouIoctl_x212c
    VouIoctl_x2918:
    /*00002918*/ MOV         R1, R7 
    /*0000291c*/ MOV         R0, R9 
    /*00002920*/ BL          0x0000000000002920          @ VouSetDispBufLen [R_ARM_CALL: .text+0xc7f8] 
    /*00002924*/ MOV         R4, R0 
    /*00002928*/ B           VouIoctl_x212c
    VouIoctl_x292c:
    /*0000292c*/ MOV         R0, R9 
    /*00002930*/ BL          0x0000000000002930          @ VouEnableVideoLayer [R_ARM_CALL: .text+0x7ae4] 
    /*00002934*/ MOV         R4, R0 
    /*00002938*/ B           VouIoctl_x212c
    VouIoctl_x293c:
    /*0000293c*/ MOV         R0, FP 
    /*00002940*/ BL          0x0000000000002940          @ VouDisable [R_ARM_CALL: .text+0x6818] 
    /*00002944*/ MOV         R4, R0 
    /*00002948*/ B           VouIoctl_x212c
    VouIoctl_x294c:
    /*0000294c*/ BL          0x0000000000001CA8 
    /*00002950*/ CMP         R0, #0 
    /*00002954*/ BEQ         VouIoctl_x205c
    VouIoctl_x2958:
    /*00002958*/ MOVW        R4, #32774                  @ 0x8006 
    /*0000295c*/ MOVT        R4, #40975                  @ 0xa00f 
    /*00002960*/ B           VouIoctl_x212c
    VouIoctl_x2964:
    /*00002964*/ BL          0x0000000000001CA8 
    /*00002968*/ CMP         R0, #0 
    /*0000296c*/ BNE         VouIoctl_x2958
    /*00002970*/ B           VouIoctl_x28d8
    VouIoctl_x2974:
    /*00002974*/ BL          0x0000000000001CA8 
    /*00002978*/ CMP         R0, #0 
    /*0000297c*/ BNE         VouIoctl_x2958
    /*00002980*/ B           VouIoctl_x2720
    VouIoctl_x2984:
    /*00002984*/ BL          0x0000000000001CA8 
    /*00002988*/ CMP         R0, #0 
    /*0000298c*/ BNE         VouIoctl_x2958
    /*00002990*/ B           VouIoctl_x1fec
    VouIoctl_x2994:
    /*00002994*/ BL          0x0000000000001CA8 
    /*00002998*/ CMP         R0, #0 
    /*0000299c*/ BNE         VouIoctl_x2958
    /*000029a0*/ B           VouIoctl_x1f74
    VouIoctl_x29a4:
    /*000029a4*/ BL          0x0000000000001CA8 
    /*000029a8*/ CMP         R0, #0 
    /*000029ac*/ BNE         VouIoctl_x2958
    /*000029b0*/ B           VouIoctl_x24a4
    /*000029b4*/ STRHEQ      R3, [R0], -R0 
    /*000029b8*/ ANDEQ       R0, R0, R0, LSL #3 
FUNC_END VouIoctl


FUNC_BEGIN VoDefCheckDevId.part.2
    /*000029bc*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000029c0*/ SUB         SP, SP, #12 
    /*000029c4*/ MOV         R3, #160                    @ 0xa0 
    /*000029c8*/ MOV         R1, #15 
    /*000029cc*/ STR         R0, [SP, #4] 
    /*000029d0*/ MOVW        R2, #0                      @ .LC204 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x11d8] 
    /*000029d4*/ STR         R3, [SP] 
    /*000029d8*/ MOVT        R2, #0                      @ .LC204 [R_ARM_MOVT_ABS: .rodata.str1.4+0x11d8] 
    /*000029dc*/ LDR         R3, [PC, #20]               @ 0x00000000000029f8 
    /*000029e0*/ MOV         R0, #3 
    /*000029e4*/ BL          0x00000000000029E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000029e8*/ MOVW        R0, #32769                  @ 0x8001 
    /*000029ec*/ MOVT        R0, #40975                  @ 0xa00f 
    /*000029f0*/ ADD         SP, SP, #12 
    /*000029f4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000029f8*/ ANDEQ       R0, R0, IP, LSL #3 
FUNC_END VoDefCheckDevId.part.2


FUNC_BEGIN VOU_SetDitherOutBitWidth
    /*000029fc*/ PUSH        {R4, R5, R6, LR} 
    /*00002a00*/ SUBS        R6, R1, #0 
    /*00002a04*/ SUB         SP, SP, #8 
    /*00002a08*/ MOV         R5, R0 
    /*00002a0c*/ MOV         R4, R2 
    /*00002a10*/ BNE         VOU_SetDitherOutBitWidth_x2a74
    VOU_SetDitherOutBitWidth_x2a14:
    /*00002a14*/ CMP         R5, #59                     @ 0x3b 
    /*00002a18*/ BHI         VOU_SetDitherOutBitWidth_x2a98
    /*00002a1c*/ CMP         R4, #0 
    /*00002a20*/ BEQ         VOU_SetDitherOutBitWidth_x2a90
    /*00002a24*/ CMP         R4, #1 
    /*00002a28*/ MOVEQ       R1, #10 
    /*00002a2c*/ BNE         VOU_SetDitherOutBitWidth_x2a44
    VOU_SetDitherOutBitWidth_x2a30:
    /*00002a30*/ MOV         R0, R6 
    /*00002a34*/ BL          0x0000000000002A34          @ VOU_DRV_SetDevDitherOut [R_ARM_CALL: .text+0x19c98] 
    /*00002a38*/ MOV         R0, #0 
    VOU_SetDitherOutBitWidth_x2a3c:
    /*00002a3c*/ ADD         SP, SP, #8 
    /*00002a40*/ POP         {R4, R5, R6, PC} 
    VOU_SetDitherOutBitWidth_x2a44:
    /*00002a44*/ STR         R4, [SP, #4] 
    /*00002a48*/ MOVW        R3, #3635                   @ 0xe33 
    /*00002a4c*/ MOV         R1, #15 
    /*00002a50*/ STR         R3, [SP] 
    /*00002a54*/ MOVW        R2, #0                      @ .LC206 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x124c] 
    /*00002a58*/ LDR         R3, [PC, #104]              @ 0x0000000000002ac8 
    /*00002a5c*/ MOVT        R2, #0                      @ .LC206 [R_ARM_MOVT_ABS: .rodata.str1.4+0x124c] 
    /*00002a60*/ MOV         R0, #3 
    /*00002a64*/ BL          0x0000000000002A64          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002a68*/ MOV         R0, #0 
    /*00002a6c*/ ADD         SP, SP, #8 
    /*00002a70*/ POP         {R4, R5, R6, PC} 
    VOU_SetDitherOutBitWidth_x2a74:
    /*00002a74*/ MOV         R0, R6 
    /*00002a78*/ BL          0x00000000000029BC 
    /*00002a7c*/ CMP         R0, #0 
    /*00002a80*/ BEQ         VOU_SetDitherOutBitWidth_x2a14
    /*00002a84*/ MOVW        R0, #32769                  @ 0x8001 
    /*00002a88*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00002a8c*/ B           VOU_SetDitherOutBitWidth_x2a3c
    VOU_SetDitherOutBitWidth_x2a90:
    /*00002a90*/ MOV         R1, #8 
    /*00002a94*/ B           VOU_SetDitherOutBitWidth_x2a30
    VOU_SetDitherOutBitWidth_x2a98:
    /*00002a98*/ MOVW        R3, #3621                   @ 0xe25 
    /*00002a9c*/ STR         R5, [SP, #4] 
    /*00002aa0*/ STR         R3, [SP] 
    /*00002aa4*/ MOVW        R2, #0                      @ .LC205 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1210] 
    /*00002aa8*/ LDR         R3, [PC, #24]               @ 0x0000000000002ac8 
    /*00002aac*/ MOVT        R2, #0                      @ .LC205 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1210] 
    /*00002ab0*/ MOV         R1, #15 
    /*00002ab4*/ MOV         R0, #3 
    /*00002ab8*/ BL          0x0000000000002AB8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002abc*/ MOVW        R0, #32771                  @ 0x8003 
    /*00002ac0*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00002ac4*/ B           VOU_SetDitherOutBitWidth_x2a3c
    /*00002ac8*/ MULEQ       R0, IP, R1 
FUNC_END VOU_SetDitherOutBitWidth


FUNC_BEGIN VouReceiveSysCallBack
    /*00002acc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00002ad0*/ SUB         SP, SP, #404                @ 0x194 
    /*00002ad4*/ MOV         R9, R2 
    /*00002ad8*/ MOV         R5, R0 
    /*00002adc*/ LDR         R2, [SP, #440]              @ 0x1b8 
    /*00002ae0*/ MOV         R7, R1 
    /*00002ae4*/ MOV         SL, R3 
    /*00002ae8*/ CMP         R2, #0 
    /*00002aec*/ BEQ         VouReceiveSysCallBack_x2de4
    VouReceiveSysCallBack_x2af0:
    /*00002af0*/ CMP         R5, #0 
    /*00002af4*/ BNE         VouReceiveSysCallBack_x2c48
    /*00002af8*/ MOV         R1, R7 
    /*00002afc*/ MOV         R0, R5 
    /*00002b00*/ BL          0x0000000000002B00          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*00002b04*/ SUBS        R8, R0, #0 
    /*00002b08*/ BNE         VouReceiveSysCallBack_x2dd8
    /*00002b0c*/ ADD         R4, SP, #400                @ 0x190 
    /*00002b10*/ MOVW        R6, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x3ff0] 
    /*00002b14*/ MOVT        R6, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x3ff0] 
    /*00002b18*/ SUB         FP, R6, #3904               @ 0xf40 
    /*00002b1c*/ SUB         R0, R6, #3920               @ 0xf50 
    /*00002b20*/ STR         R5, [R4, #-336]!            @ 0xfffffeb0 
    /*00002b24*/ MOV         R1, R4 
    /*00002b28*/ SUB         R3, FP, #12 
    /*00002b2c*/ STR         R3, [SP, #16] 
    /*00002b30*/ BL          0x0000000000002B30          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00002b34*/ LDR         R3, [SP, #64]               @ 0x40 
    /*00002b38*/ ADD         R6, R6, R7, LSL #2 
    /*00002b3c*/ SUB         R0, FP, #12 
    /*00002b40*/ MOV         R1, R4 
    /*00002b44*/ STR         R5, [SP, #64]               @ 0x40 
    /*00002b48*/ STR         R3, [SP, #20] 
    /*00002b4c*/ BL          0x0000000000002B4C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00002b50*/ LDR         R6, [R6, #-3936]            @ 0xfffff0a0 
    /*00002b54*/ LDR         R3, [SP, #64]               @ 0x40 
    /*00002b58*/ CMP         R6, #0 
    /*00002b5c*/ STR         R3, [SP, #16] 
    /*00002b60*/ BEQ         VouReceiveSysCallBack_x2e54
    /*00002b64*/ LDR         R3, [R6, #4] 
    /*00002b68*/ CMP         R3, #0 
    /*00002b6c*/ BEQ         VouReceiveSysCallBack_x2d7c
    /*00002b70*/ CMP         SL, #8 
    /*00002b74*/ BHI         VouReceiveSysCallBack_x2dfc
    /*00002b78*/ MOV         R3, #1 
    /*00002b7c*/ MOVW        R2, #331                    @ 0x14b 
    /*00002b80*/ LSL         R3, R3, SL 
    /*00002b84*/ TST         R3, R2 
    /*00002b88*/ BEQ         VouReceiveSysCallBack_x2c24
    /*00002b8c*/ LDR         R3, [SP, #440]              @ 0x1b8 
    /*00002b90*/ MOV         R1, R3 
    /*00002b94*/ STR         R3, [SP, #44]               @ 0x2c 
    VouReceiveSysCallBack_x2b98:
    /*00002b98*/ LDR         R3, [R1, #24] 
    /*00002b9c*/ MOV         R2, #1 
    /*00002ba0*/ MOV         R0, #0 
    /*00002ba4*/ STR         R2, [SP, #32] 
    /*00002ba8*/ CMP         R3, #5 
    /*00002bac*/ STR         R0, [SP, #48]               @ 0x30 
    /*00002bb0*/ BHI         VouReceiveSysCallBack_x2e70
    /*00002bb4*/ BEQ         VouReceiveSysCallBack_x2f10
    /*00002bb8*/ CMP         R3, #1 
    /*00002bbc*/ BLS         VouReceiveSysCallBack_x2ce0
    VouReceiveSysCallBack_x2bc0:
    /*00002bc0*/ MOV         R0, #0 
    /*00002bc4*/ BL          0x0000000000002BC4          @ VO_DRV_CheckLayerSupportFrame [R_ARM_CALL: .text+0x18f7c] 
    /*00002bc8*/ CMP         R0, #0 
    /*00002bcc*/ BNE         VouReceiveSysCallBack_x2ee0
    /*00002bd0*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00002bd4*/ LDR         R1, [R6, #44]               @ 0x2c 
    /*00002bd8*/ LDRD        R2, [R3, #240]              @ 0xf0 
    /*00002bdc*/ CMP         R1, R9 
    /*00002be0*/ STRD        R2, [R6, #208]              @ 0xd0 
    /*00002be4*/ BEQ         VouReceiveSysCallBack_x2bf0
    /*00002be8*/ MOV         R1, R7 
    /*00002bec*/ BL          0x0000000000002BEC          @ VouResetPts [R_ARM_CALL: .text+0x5748] 
    VouReceiveSysCallBack_x2bf0:
    /*00002bf0*/ CMP         R9, #0 
    /*00002bf4*/ STR         R9, [R6, #44]               @ 0x2c 
    /*00002bf8*/ BNE         VouReceiveSysCallBack_x2c80
    /*00002bfc*/ ADD         R3, R6, #8192               @ 0x2000 
    /*00002c00*/ MOV         R1, R7 
    /*00002c04*/ MOV         R0, R9 
    /*00002c08*/ ADD         R2, SP, #32 
    /*00002c0c*/ LDR         R3, [R3, #1352]             @ 0x548 
    /*00002c10*/ CMP         R3, #0 
    /*00002c14*/ BEQ         VouReceiveSysCallBack_x2d64
    /*00002c18*/ BL          0x0000000000002C18          @ VouChnSdViSendWithRot [R_ARM_CALL: .text+0xf5a8] 
    /*00002c1c*/ MOV         R8, R0 
    /*00002c20*/ B           VouReceiveSysCallBack_x2c9c
    VouReceiveSysCallBack_x2c24:
    /*00002c24*/ TST         R3, #4 
    /*00002c28*/ BEQ         VouReceiveSysCallBack_x2dfc
    /*00002c2c*/ LDR         R1, [SP, #440]              @ 0x1b8 
    /*00002c30*/ MOV         R2, #336                    @ 0x150 
    /*00002c34*/ MOV         R0, R4 
    /*00002c38*/ BL          0x0000000000002C38          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00002c3c*/ STR         R4, [SP, #44]               @ 0x2c 
    /*00002c40*/ MOV         R1, R4 
    /*00002c44*/ B           VouReceiveSysCallBack_x2b98
    VouReceiveSysCallBack_x2c48:
    /*00002c48*/ MOV         R3, #171                    @ 0xab 
    /*00002c4c*/ STR         R5, [SP, #4] 
    /*00002c50*/ STR         R3, [SP] 
    /*00002c54*/ MOVW        R2, #0                      @ .LC207 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1280] 
    /*00002c58*/ LDR         R3, [PC, #716]              @ 0x0000000000002f2c 
    /*00002c5c*/ MOVT        R2, #0                      @ .LC207 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1280] 
    /*00002c60*/ MOV         R1, #15 
    /*00002c64*/ MOV         R0, #3 
    /*00002c68*/ BL          0x0000000000002C68          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002c6c*/ MOVW        R8, #32877                  @ 0x806d 
    /*00002c70*/ MOVT        R8, #40975                  @ 0xa00f 
    VouReceiveSysCallBack_x2c74:
    /*00002c74*/ MOV         R0, R8 
    /*00002c78*/ ADD         SP, SP, #404                @ 0x194 
    /*00002c7c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouReceiveSysCallBack_x2c80:
    /*00002c80*/ CMP         SL, #2 
    /*00002c84*/ MOV         R1, R7 
    /*00002c88*/ ADD         R2, SP, #32 
    /*00002c8c*/ MOV         R0, #0 
    /*00002c90*/ BEQ         VouReceiveSysCallBack_x2d70
    /*00002c94*/ BL          0x0000000000002C94          @ VouChnSdVdecSend [R_ARM_CALL: .text+0xfbb0] 
    /*00002c98*/ MOV         R8, R0 
    VouReceiveSysCallBack_x2c9c:
    /*00002c9c*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00002ca0*/ ADD         R4, SP, #400                @ 0x190 
    /*00002ca4*/ SUB         R0, FP, #12 
    /*00002ca8*/ LDRD        R2, [R3, #240]              @ 0xf0 
    /*00002cac*/ STRD        R2, [R6, #200]              @ 0xc8 
    /*00002cb0*/ LDR         R3, [SP, #16] 
    /*00002cb4*/ STR         R3, [R4, #-372]!            @ 0xfffffe8c 
    /*00002cb8*/ MOV         R1, R4 
    /*00002cbc*/ BL          0x0000000000002CBC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002cc0*/ LDR         R3, [SP, #20] 
    /*00002cc4*/ MOV         R1, R4 
    /*00002cc8*/ LDR         R0, [PC, #608]              @ 0x0000000000002f30 
    /*00002ccc*/ STR         R3, [SP, #28] 
    /*00002cd0*/ BL          0x0000000000002CD0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002cd4*/ MOV         R0, R8 
    /*00002cd8*/ ADD         SP, SP, #404                @ 0x194 
    /*00002cdc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouReceiveSysCallBack_x2ce0:
    /*00002ce0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00002ce4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00002ce8*/ LDR         R3, [R3, #392]              @ 0x188 
    /*00002cec*/ SUB         R3, R3, #2 
    /*00002cf0*/ CMP         R3, #2 
    /*00002cf4*/ BHI         VouReceiveSysCallBack_x2bc0
    /*00002cf8*/ MOVW        R2, #0                      @ .LC213 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1424] 
    /*00002cfc*/ MOVT        R2, #0                      @ .LC213 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1424] 
    /*00002d00*/ MOVW        R3, #3090                   @ 0xc12 
    /*00002d04*/ STR         R7, [SP, #8] 
    /*00002d08*/ STR         R0, [SP, #4] 
    /*00002d0c*/ STR         R3, [SP] 
    VouReceiveSysCallBack_x2d10:
    /*00002d10*/ LDR         R3, [PC, #540]              @ 0x0000000000002f34 
    /*00002d14*/ MOV         R1, #15 
    /*00002d18*/ MOV         R0, #3 
    /*00002d1c*/ ADD         R4, SP, #400                @ 0x190 
    /*00002d20*/ BL          0x0000000000002D20          @ HI_LOG [R_ARM_CALL: +0x0] 
    VouReceiveSysCallBack_x2d24:
    /*00002d24*/ LDR         R3, [R6, #180]              @ 0xb4 
    /*00002d28*/ SUB         R0, FP, #12 
    /*00002d2c*/ MOVW        R8, #32776                  @ 0x8008 
    /*00002d30*/ MOVT        R8, #40975                  @ 0xa00f 
    /*00002d34*/ ADD         R3, R3, #1 
    /*00002d38*/ STR         R3, [R6, #180]              @ 0xb4 
    /*00002d3c*/ LDR         R3, [SP, #16] 
    /*00002d40*/ STR         R3, [R4, #-372]!            @ 0xfffffe8c 
    /*00002d44*/ MOV         R1, R4 
    /*00002d48*/ BL          0x0000000000002D48          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002d4c*/ LDR         R3, [SP, #20] 
    /*00002d50*/ MOV         R1, R4 
    /*00002d54*/ LDR         R0, [PC, #468]              @ 0x0000000000002f30 
    /*00002d58*/ STR         R3, [SP, #28] 
    /*00002d5c*/ BL          0x0000000000002D5C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002d60*/ B           VouReceiveSysCallBack_x2c74
    VouReceiveSysCallBack_x2d64:
    /*00002d64*/ BL          0x0000000000002D64          @ VouChnSdViSend [R_ARM_CALL: .text+0xf71c] 
    /*00002d68*/ MOV         R8, R0 
    /*00002d6c*/ B           VouReceiveSysCallBack_x2c9c
    VouReceiveSysCallBack_x2d70:
    /*00002d70*/ BL          0x0000000000002D70          @ VouChnSdVdecSendNoQuery [R_ARM_CALL: .text+0x10acc] 
    /*00002d74*/ MOV         R8, R0 
    /*00002d78*/ B           VouReceiveSysCallBack_x2c9c
    VouReceiveSysCallBack_x2d7c:
    /*00002d7c*/ MOVW        R2, #0                      @ .LC209 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12f8] 
    /*00002d80*/ MOVT        R2, #0                      @ .LC209 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12f8] 
    /*00002d84*/ MOVW        R3, #3027                   @ 0xbd3 
    /*00002d88*/ STR         R7, [SP, #8] 
    /*00002d8c*/ STR         R5, [SP, #4] 
    /*00002d90*/ STR         R3, [SP] 
    VouReceiveSysCallBack_x2d94:
    /*00002d94*/ LDR         R3, [PC, #408]              @ 0x0000000000002f34 
    /*00002d98*/ MOV         R1, #15 
    /*00002d9c*/ MOV         R0, #4 
    /*00002da0*/ BL          0x0000000000002DA0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002da4*/ LDR         R3, [SP, #16] 
    /*00002da8*/ SUB         R0, FP, #12 
    /*00002dac*/ MOV         R1, R4 
    /*00002db0*/ STR         R3, [SP, #64]               @ 0x40 
    /*00002db4*/ BL          0x0000000000002DB4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002db8*/ LDR         R3, [SP, #20] 
    /*00002dbc*/ SUB         R0, FP, #16 
    /*00002dc0*/ MOV         R1, R4 
    /*00002dc4*/ STR         R3, [SP, #64]               @ 0x40 
    /*00002dc8*/ BL          0x0000000000002DC8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002dcc*/ MOV         R0, R8 
    /*00002dd0*/ ADD         SP, SP, #404                @ 0x194 
    /*00002dd4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouReceiveSysCallBack_x2dd8:
    /*00002dd8*/ MOVW        R8, #32770                  @ 0x8002 
    /*00002ddc*/ MOVT        R8, #40975                  @ 0xa00f 
    /*00002de0*/ B           VouReceiveSysCallBack_x2c74
    VouReceiveSysCallBack_x2de4:
    /*00002de4*/ BL          0x0000000000001CA8 
    /*00002de8*/ CMP         R0, #0 
    /*00002dec*/ MOVWNE      R8, #32774                  @ 0x8006 
    /*00002df0*/ MOVTNE      R8, #40975                  @ 0xa00f 
    /*00002df4*/ BNE         VouReceiveSysCallBack_x2c74
    /*00002df8*/ B           VouReceiveSysCallBack_x2af0
    VouReceiveSysCallBack_x2dfc:
    /*00002dfc*/ LDR         R3, [SP, #16] 
    /*00002e00*/ SUB         R0, FP, #12 
    /*00002e04*/ MOV         R1, R4 
    /*00002e08*/ MVN         R8, #0 
    /*00002e0c*/ STR         R3, [SP, #64]               @ 0x40 
    /*00002e10*/ BL          0x0000000000002E10          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002e14*/ LDR         R3, [SP, #20] 
    /*00002e18*/ MOV         R1, R4 
    /*00002e1c*/ LDR         R0, [PC, #268]              @ 0x0000000000002f30 
    /*00002e20*/ STR         R3, [SP, #64]               @ 0x40 
    /*00002e24*/ BL          0x0000000000002E24          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002e28*/ MOV         R2, #0 
    /*00002e2c*/ MOVW        R3, #3055                   @ 0xbef 
    /*00002e30*/ STR         R2, [SP, #4] 
    /*00002e34*/ MOV         R1, #15 
    /*00002e38*/ STR         R3, [SP] 
    /*00002e3c*/ MOVW        R2, #0                      @ .LC210 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1338] 
    /*00002e40*/ LDR         R3, [PC, #236]              @ 0x0000000000002f34 
    /*00002e44*/ MOVT        R2, #0                      @ .LC210 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1338] 
    /*00002e48*/ MOV         R0, #3 
    /*00002e4c*/ BL          0x0000000000002E4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002e50*/ B           VouReceiveSysCallBack_x2c74
    VouReceiveSysCallBack_x2e54:
    /*00002e54*/ MOVW        R3, #3019                   @ 0xbcb 
    /*00002e58*/ MOVW        R2, #0                      @ .LC208 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x12b4] 
    /*00002e5c*/ STR         R7, [SP, #8] 
    /*00002e60*/ MOVT        R2, #0                      @ .LC208 [R_ARM_MOVT_ABS: .rodata.str1.4+0x12b4] 
    /*00002e64*/ STR         R5, [SP, #4] 
    /*00002e68*/ STR         R3, [SP] 
    /*00002e6c*/ B           VouReceiveSysCallBack_x2d94
    VouReceiveSysCallBack_x2e70:
    /*00002e70*/ STR         R3, [SP, #12] 
    /*00002e74*/ MOV         R1, #15 
    /*00002e78*/ STR         R0, [SP, #4] 
    /*00002e7c*/ MOVW        R3, #3067                   @ 0xbfb 
    /*00002e80*/ STR         R7, [SP, #8] 
    /*00002e84*/ MOVW        R2, #0                      @ .LC211 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1390] 
    /*00002e88*/ STR         R3, [SP] 
    /*00002e8c*/ MOVT        R2, #0                      @ .LC211 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1390] 
    /*00002e90*/ LDR         R3, [PC, #156]              @ 0x0000000000002f34 
    /*00002e94*/ MOV         R0, #3 
    /*00002e98*/ BL          0x0000000000002E98          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002e9c*/ LDR         R3, [R6, #180]              @ 0xb4 
    /*00002ea0*/ ADD         R4, SP, #400                @ 0x190 
    /*00002ea4*/ SUB         R0, FP, #12 
    /*00002ea8*/ ADD         R3, R3, #1 
    /*00002eac*/ STR         R3, [R6, #180]              @ 0xb4 
    /*00002eb0*/ LDR         R3, [SP, #16] 
    /*00002eb4*/ MOVW        R8, #32776                  @ 0x8008 
    /*00002eb8*/ MOVT        R8, #40975                  @ 0xa00f 
    /*00002ebc*/ STR         R3, [R4, #-372]!            @ 0xfffffe8c 
    /*00002ec0*/ MOV         R1, R4 
    /*00002ec4*/ BL          0x0000000000002EC4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002ec8*/ LDR         R3, [SP, #20] 
    /*00002ecc*/ MOV         R1, R4 
    /*00002ed0*/ LDR         R0, [PC, #88]               @ 0x0000000000002f30 
    /*00002ed4*/ STR         R3, [SP, #28] 
    /*00002ed8*/ BL          0x0000000000002ED8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002edc*/ B           VouReceiveSysCallBack_x2c74
    VouReceiveSysCallBack_x2ee0:
    /*00002ee0*/ MOV         R2, #0 
    /*00002ee4*/ MOVW        R3, #3102                   @ 0xc1e 
    /*00002ee8*/ STR         R2, [SP, #4] 
    /*00002eec*/ MOV         R1, #15 
    /*00002ef0*/ STR         R3, [SP] 
    /*00002ef4*/ MOVW        R2, #0                      @ .LC214 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1484] 
    /*00002ef8*/ LDR         R3, [PC, #52]               @ 0x0000000000002f34 
    /*00002efc*/ MOVT        R2, #0                      @ .LC214 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1484] 
    /*00002f00*/ MOV         R0, #3 
    /*00002f04*/ ADD         R4, SP, #400                @ 0x190 
    /*00002f08*/ BL          0x0000000000002F08          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00002f0c*/ B           VouReceiveSysCallBack_x2d24
    VouReceiveSysCallBack_x2f10:
    /*00002f10*/ MOVW        R3, #3078                   @ 0xc06 
    /*00002f14*/ MOVW        R2, #0                      @ .LC212 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x13e0] 
    /*00002f18*/ STR         R7, [SP, #8] 
    /*00002f1c*/ MOVT        R2, #0                      @ .LC212 [R_ARM_MOVT_ABS: .rodata.str1.4+0x13e0] 
    /*00002f20*/ STR         R0, [SP, #4] 
    /*00002f24*/ STR         R3, [SP] 
    /*00002f28*/ B           VouReceiveSysCallBack_x2d10
    /*00002f2c*/ @           <UNDEFINED> instruction: 0x000001b8 
    /*00002f30*/ ANDEQ       R3, R0, R0, LSR #1 
    /*00002f34*/ ANDEQ       R0, R0, IP, ASR #3 
FUNC_END VouReceiveSysCallBack


FUNC_BEGIN VO_Init.part.5
    /*00002f38*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00002f3c*/ MOVW        R5, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x3ff0] 
    /*00002f40*/ MOVT        R5, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x3ff0] 
    /*00002f44*/ SUB         SP, SP, #420                @ 0x1a4 
    /*00002f48*/ SUB         R9, R5, #3904               @ 0xf40 
    /*00002f4c*/ ADD         R6, SP, #416                @ 0x1a0 
    /*00002f50*/ SUB         R4, R9, #12 
    /*00002f54*/ MOV         R3, #0 
    /*00002f58*/ STR         R3, [R6, #-328]!            @ 0xfffffeb8 
    /*00002f5c*/ MOV         R1, R6 
    /*00002f60*/ MOV         R0, R4 
    /*00002f64*/ MOVW        R8, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00002f68*/ BL          0x0000000000002F68          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00002f6c*/ LDR         R7, [SP, #88]               @ 0x58 
    /*00002f70*/ MOV         R0, #1 
    /*00002f74*/ MOVT        R8, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00002f78*/ BL          0x0000000000002F78          @ VO_DRV_SetAllCrgClk [R_ARM_CALL: .text+0x19040] 
    /*00002f7c*/ MOV         R0, R4 
    /*00002f80*/ MOV         R1, R6 
    /*00002f84*/ STR         R7, [SP, #88]               @ 0x58 
    /*00002f88*/ BL          0x0000000000002F88          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00002f8c*/ LDR         R3, [R5, #-3896]            @ 0xfffff0c8 
    /*00002f90*/ LDR         R2, [SP, #88]               @ 0x58 
    /*00002f94*/ CMP         R3, #0 
    /*00002f98*/ STR         R2, [SP, #12] 
    /*00002f9c*/ BEQ         VO_Init.part.5_x2fb4
    /*00002fa0*/ LDR         R3, [R8, #4] 
    /*00002fa4*/ CMP         R3, #1 
    /*00002fa8*/ BEQ         VO_Init.part.5_x2fb4
    /*00002fac*/ BL          0x0000000000002FAC          @ VO_DRV_DevInfoPartInit [R_ARM_CALL: .text+0x184e8] 
    /*00002fb0*/ B           VO_Init.part.5_x2fc8
    VO_Init.part.5_x2fb4:
    /*00002fb4*/ BL          0x0000000000002FB4          @ VO_DRV_DevInfoInit [R_ARM_CALL: .text+0x184ac] 
    /*00002fb8*/ MOV         R2, #232                    @ 0xe8 
    /*00002fbc*/ MOV         R1, #0 
    /*00002fc0*/ LDR         R0, [PC, #1144]             @ 0x0000000000003440 
    /*00002fc4*/ BL          0x0000000000002FC4          @ osal_memset [R_ARM_CALL: +0x0] 
    VO_Init.part.5_x2fc8:
    /*00002fc8*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00002fcc*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00002fd0*/ BL          0x0000000000002FD0          @ VO_DRV_LayerInfoInit [R_ARM_CALL: .text+0x18514] 
    /*00002fd4*/ MOVW        R2, #12192                  @ 0x2fa0 
    /*00002fd8*/ MOV         R1, #0 
    /*00002fdc*/ ADD         R0, R4, #240                @ 0xf0 
    /*00002fe0*/ BL          0x0000000000002FE0          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00002fe4*/ MVN         SL, #0 
    /*00002fe8*/ MOV         R0, #0 
    /*00002fec*/ MOVW        R3, #38528                  @ 0x9680 
    /*00002ff0*/ STR         SL, [R4, #508]              @ 0x1fc 
    /*00002ff4*/ MOVT        R3, #152                    @ 0x98 
    /*00002ff8*/ STR         SL, [R4, #520]              @ 0x208 
    /*00002ffc*/ ADD         R7, R4, #240                @ 0xf0 
    /*00003000*/ STR         R3, [R4, #280]              @ 0x118 
    /*00003004*/ ADD         FP, R4, #12288              @ 0x3000 
    /*00003008*/ BL          0x0000000000003008          @ VO_DRV_GetPartitionMode [R_ARM_CALL: .text+0x1941c] 
    /*0000300c*/ STR         R0, [R4, #420]              @ 0x1a4 
    /*00003010*/ MOV         R0, #0 
    /*00003014*/ BL          0x0000000000003014          @ VO_DRV_GetDefDispBlkNum [R_ARM_CALL: .text+0x19424] 
    /*00003018*/ ADD         IP, R4, #11520              @ 0x2d00 
    /*0000301c*/ MOV         R3, R7 
    /*00003020*/ MOV         R1, SL 
    /*00003024*/ MOV         R2, #2 
    /*00003028*/ STR         SL, [FP, #132]              @ 0x84 
    /*0000302c*/ STR         R2, [R4, #492]              @ 0x1ec 
    /*00003030*/ MOV         R2, #3 
    /*00003034*/ STR         R2, [R4, #496]              @ 0x1f0 
    /*00003038*/ MOV         R2, #1920                   @ 0x780 
    /*0000303c*/ STR         R2, [FP, #104]              @ 0x68 
    /*00003040*/ MOVW        R2, #1080                   @ 0x438 
    /*00003044*/ STR         R2, [FP, #108]              @ 0x6c 
    /*00003048*/ MOV         R2, #0 
    /*0000304c*/ STR         R2, [FP, #88]               @ 0x58 
    /*00003050*/ STR         R2, [FP, #96]               @ 0x60 
    /*00003054*/ STR         R2, [FP, #100]              @ 0x64 
    /*00003058*/ STR         R2, [FP, #92]               @ 0x5c 
    /*0000305c*/ STR         R2, [FP, #136]              @ 0x88 
    /*00003060*/ STR         R2, [R4, #484]              @ 0x1e4 
    /*00003064*/ MOV         R2, #1 
    /*00003068*/ STR         R2, [R4, #416]              @ 0x1a0 
    /*0000306c*/ STR         R2, [R4, #488]              @ 0x1e8 
    /*00003070*/ STR         R0, [R4, #268]              @ 0x10c 
    VO_Init.part.5_x3074:
    /*00003074*/ STR         R1, [R3, #1220]             @ 0x4c4 
    /*00003078*/ ADD         R3, R3, #752                @ 0x2f0 
    /*0000307c*/ CMP         R3, IP 
    /*00003080*/ BNE         VO_Init.part.5_x3074
    /*00003084*/ MOV         R0, #0 
    /*00003088*/ STR         R1, [R4, #536]              @ 0x218 
    /*0000308c*/ MOV         SL, R0 
    /*00003090*/ STR         R1, [R4, #592]              @ 0x250 
    /*00003094*/ STR         R1, [R4, #648]              @ 0x288 
    /*00003098*/ SUB         R9, R9, #12 
    /*0000309c*/ STR         R1, [R4, #704]              @ 0x2c0 
    /*000030a0*/ BL          0x00000000000030A0          @ VOU_DRV_InitDefaultCsc [R_ARM_CALL: .text+0x1913c] 
    /*000030a4*/ MOV         R0, SL 
    /*000030a8*/ BL          0x00000000000030A8          @ VOU_DRV_InitDefaultCscParam [R_ARM_CALL: .text+0x1917c] 
    /*000030ac*/ LDR         R1, [PC, #912]              @ 0x0000000000003444 
    /*000030b0*/ MOV         R0, SL 
    /*000030b4*/ BL          0x00000000000030B4          @ VOU_DRV_GetDefaultCsc [R_ARM_CALL: .text+0x191a0] 
    /*000030b8*/ LDR         R1, [PC, #904]              @ 0x0000000000003448 
    /*000030bc*/ MOV         R0, SL 
    /*000030c0*/ BL          0x00000000000030C0          @ VOU_DRV_GetDefaultVHDRCsc [R_ARM_CALL: .text+0x191c0] 
    /*000030c4*/ LDR         IP, [PC, #896]              @ 0x000000000000344c 
    /*000030c8*/ ADD         R3, R7, #12032              @ 0x2f00 
    /*000030cc*/ LDR         R0, [PC, #892]              @ 0x0000000000003450 
    /*000030d0*/ MOV         R1, R3 
    /*000030d4*/ ADD         R3, R3, #40                 @ 0x28 
    /*000030d8*/ STR         R3, [FP, #24] 
    /*000030dc*/ ADD         R1, R1, #48                 @ 0x30 
    /*000030e0*/ STR         R3, [FP, #28] 
    /*000030e4*/ ADD         R3, R7, #12032              @ 0x2f00 
    /*000030e8*/ STR         IP, [R4, #436]              @ 0x1b4 
    /*000030ec*/ ADD         R3, R3, #56                 @ 0x38 
    /*000030f0*/ STR         IP, [R4, #440]              @ 0x1b8 
    /*000030f4*/ STR         R1, [FP, #32] 
    /*000030f8*/ STR         R1, [FP, #36]               @ 0x24 
    /*000030fc*/ STR         R3, [FP, #40]               @ 0x28 
    /*00003100*/ STR         R3, [FP, #44]               @ 0x2c 
    /*00003104*/ BL          0x0000000000003104          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*00003108*/ ADD         R0, R7, #12096              @ 0x2f40 
    /*0000310c*/ ADD         R0, R0, #20 
    /*00003110*/ BL          0x0000000000003110          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*00003114*/ ADD         R0, R7, #12096              @ 0x2f40 
    /*00003118*/ ADD         R0, R0, #24 
    /*0000311c*/ BL          0x000000000000311C          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*00003120*/ ADD         R0, R7, #12096              @ 0x2f40 
    /*00003124*/ ADD         R0, R0, #28 
    /*00003128*/ BL          0x0000000000003128          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*0000312c*/ LDR         R3, [SP, #12] 
    /*00003130*/ MOV         R0, R9 
    /*00003134*/ MOV         R1, R6 
    /*00003138*/ STR         SL, [R5, #-3936]            @ 0xfffff0a0 
    /*0000313c*/ STR         R3, [SP, #88]               @ 0x58 
    /*00003140*/ STR         SL, [R5, #-3932]            @ 0xfffff0a4 
    /*00003144*/ STR         SL, [R5, #-3928]            @ 0xfffff0a8 
    /*00003148*/ STR         SL, [R5, #-3924]            @ 0xfffff0ac 
    /*0000314c*/ BL          0x000000000000314C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00003150*/ LDR         R4, [SP, #88]               @ 0x58 
    /*00003154*/ BL          0x0000000000003154          @ VOU_DRV_DefaultSetting [R_ARM_CALL: .text+0x182d8] 
    /*00003158*/ MOV         R0, R9 
    /*0000315c*/ MOV         R1, R6 
    /*00003160*/ STR         R4, [SP, #88]               @ 0x58 
    /*00003164*/ BL          0x0000000000003164          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003168*/ LDR         R0, [R8, #20] 
    /*0000316c*/ MOVW        R1, #0                      @ VouInterruptRoute [R_ARM_MOVW_ABS_NC: .text+0x19f4] 
    /*00003170*/ MOV         R2, SL 
    /*00003174*/ MOVT        R1, #0                      @ VouInterruptRoute [R_ARM_MOVT_ABS: .text+0x19f4] 
    /*00003178*/ MOVW        R3, #0                      @ .LC215 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14c4] 
    /*0000317c*/ STR         R1, [SP] 
    /*00003180*/ MOVT        R3, #0                      @ .LC215 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14c4] 
    /*00003184*/ BL          0x0000000000003184          @ osal_request_irq [R_ARM_CALL: +0x0] 
    /*00003188*/ CMP         R0, SL 
    /*0000318c*/ BNE         VO_Init.part.5_x3418
    /*00003190*/ MOV         R0, #2 
    /*00003194*/ MOV         R2, #15 
    /*00003198*/ MOVW        R3, #0                      @ VouReceiveSysCallBack [R_ARM_MOVW_ABS_NC: .text+0x2acc] 
    /*0000319c*/ STR         R2, [SP, #64]               @ 0x40 
    /*000031a0*/ MOVT        R3, #0                      @ VouReceiveSysCallBack [R_ARM_MOVT_ABS: .text+0x2acc] 
    /*000031a4*/ MOV         R2, #4 
    /*000031a8*/ STR         R3, [SP, #76]               @ 0x4c 
    /*000031ac*/ MOVW        R4, #0                      @ VouResetCallBack [R_ARM_MOVW_ABS_NC: .text+0x19e0] 
    /*000031b0*/ MOV         R3, #1 
    /*000031b4*/ STR         R2, [SP, #72]               @ 0x48 
    /*000031b8*/ STR         R3, [SP, #68]               @ 0x44 
    /*000031bc*/ MOVT        R4, #0                      @ VouResetCallBack [R_ARM_MOVT_ABS: .text+0x19e0] 
    /*000031c0*/ STR         R3, [SP, #84]               @ 0x54 
    /*000031c4*/ STR         R4, [SP, #80]               @ 0x50 
    /*000031c8*/ BL          0x00000000000031C8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000031cc*/ LDR         R3, [R0, #32] 
    /*000031d0*/ ADD         R0, SP, #64                 @ 0x40 
    /*000031d4*/ BLX         R3 
    /*000031d8*/ CMP         R0, #0 
    /*000031dc*/ BNE         VO_Init.part.5_x3398
    VO_Init.part.5_x31e0:
    /*000031e0*/ MOV         R0, #2 
    /*000031e4*/ MOV         R2, #15 
    /*000031e8*/ MOV         R3, #1 
    /*000031ec*/ STR         R2, [SP, #32] 
    /*000031f0*/ STR         R3, [SP, #36]               @ 0x24 
    /*000031f4*/ MOV         R3, #4 
    /*000031f8*/ STR         R3, [SP, #40]               @ 0x28 
    /*000031fc*/ BL          0x00000000000031FC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00003200*/ LDR         R3, [R0, #24] 
    /*00003204*/ ADD         R0, SP, #32 
    /*00003208*/ BLX         R3 
    /*0000320c*/ CMP         R0, #0 
    /*00003210*/ BNE         VO_Init.part.5_x3378
    VO_Init.part.5_x3214:
    /*00003214*/ MOV         R0, #7 
    /*00003218*/ BL          0x0000000000003218          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000321c*/ CMP         R0, #0 
    /*00003220*/ BEQ         VO_Init.part.5_x3278
    /*00003224*/ MOV         R0, #7 
    /*00003228*/ BL          0x0000000000003228          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000322c*/ LDR         R3, [R0] 
    /*00003230*/ CMP         R3, #0 
    /*00003234*/ BEQ         VO_Init.part.5_x3278
    /*00003238*/ MOV         R0, #7 
    /*0000323c*/ STR         R4, [SP, #28] 
    /*00003240*/ MOVW        R2, #0                      @ VouChnVpssQuery [R_ARM_MOVW_ABS_NC: .text+0xeaec] 
    /*00003244*/ MOVW        R3, #0                      @ VouChnVpssSend [R_ARM_MOVW_ABS_NC: .text+0xfe10] 
    /*00003248*/ MOVT        R2, #0                      @ VouChnVpssQuery [R_ARM_MOVT_ABS: .text+0xeaec] 
    /*0000324c*/ MOVT        R3, #0                      @ VouChnVpssSend [R_ARM_MOVT_ABS: .text+0xfe10] 
    /*00003250*/ STR         R2, [SP, #20] 
    /*00003254*/ MOV         R2, #15 
    /*00003258*/ STR         R3, [SP, #24] 
    /*0000325c*/ STR         R2, [SP, #16] 
    /*00003260*/ BL          0x0000000000003260          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00003264*/ LDR         R3, [R0] 
    /*00003268*/ ADD         R0, SP, #16 
    /*0000326c*/ BLX         R3 
    /*00003270*/ CMP         R0, #0 
    /*00003274*/ BNE         VO_Init.part.5_x33b8
    VO_Init.part.5_x3278:
    /*00003278*/ MOV         R0, #3 
    /*0000327c*/ BL          0x000000000000327C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00003280*/ CMP         R0, #0 
    /*00003284*/ BEQ         VO_Init.part.5_x3328
    /*00003288*/ MOV         R0, #3 
    /*0000328c*/ BL          0x000000000000328C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00003290*/ LDR         R3, [R0] 
    /*00003294*/ CMP         R3, #0 
    /*00003298*/ BEQ         VO_Init.part.5_x3328
    /*0000329c*/ MOV         R0, #3 
    /*000032a0*/ BL          0x00000000000032A0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000032a4*/ LDR         R3, [R0, #4] 
    /*000032a8*/ CMP         R3, #0 
    /*000032ac*/ BEQ         VO_Init.part.5_x3328
    /*000032b0*/ MOV         R1, R6 
    /*000032b4*/ MOV         R0, #3 
    /*000032b8*/ MOV         R2, #1 
    /*000032bc*/ MOV         R3, #15 
    /*000032c0*/ STR         R2, [SP, #52]               @ 0x34 
    /*000032c4*/ STR         R3, [SP, #48]               @ 0x30 
    /*000032c8*/ MOV         R3, #4 
    /*000032cc*/ STR         R3, [SP, #56]               @ 0x38 
    /*000032d0*/ BL          0x00000000000032D0          @ VOU_DRV_GetRgnCapacity [R_ARM_CALL: .text+0x19744] 
    /*000032d4*/ MOV         R0, #3 
    /*000032d8*/ BL          0x00000000000032D8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000032dc*/ ADD         R2, SP, #48                 @ 0x30 
    /*000032e0*/ MOV         R1, R6 
    /*000032e4*/ LDR         R3, [R0] 
    /*000032e8*/ MOV         R0, #3 
    /*000032ec*/ BLX         R3 
    /*000032f0*/ CMP         R0, #0 
    /*000032f4*/ BNE         VO_Init.part.5_x33f8
    VO_Init.part.5_x32f8:
    /*000032f8*/ MOV         R1, R6 
    /*000032fc*/ MOV         R0, #2 
    /*00003300*/ BL          0x0000000000003300          @ VOU_DRV_GetRgnCapacity [R_ARM_CALL: .text+0x19744] 
    /*00003304*/ MOV         R0, #3 
    /*00003308*/ BL          0x0000000000003308          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000330c*/ ADD         R2, SP, #48                 @ 0x30 
    /*00003310*/ MOV         R1, R6 
    /*00003314*/ LDR         R3, [R0] 
    /*00003318*/ MOV         R0, #2 
    /*0000331c*/ BLX         R3 
    /*00003320*/ CMP         R0, #0 
    /*00003324*/ BNE         VO_Init.part.5_x33d8
    VO_Init.part.5_x3328:
    /*00003328*/ MOV         R3, #0 
    /*0000332c*/ STR         R3, [R8, #16] 
    /*00003330*/ BL          0x0000000000003330          @ VO_GraphicsInit [R_ARM_CALL: .text+0x14ab4] 
    /*00003334*/ LDR         R0, [R8, #4] 
    /*00003338*/ MOV         R6, #1 
    /*0000333c*/ STR         R6, [R5, #-3896]            @ 0xfffff0c8 
    /*00003340*/ CMP         R0, #0 
    /*00003344*/ BNE         VO_Init.part.5_x3354
    /*00003348*/ BL          0x0000000000003348          @ VOU_DRV_CheckDevId [R_ARM_CALL: .text+0x183a0] 
    /*0000334c*/ SUBS        R4, R0, #0 
    /*00003350*/ BEQ         VO_Init.part.5_x3364
    VO_Init.part.5_x3354:
    /*00003354*/ MOV         R4, #0 
    VO_Init.part.5_x3358:
    /*00003358*/ MOV         R0, R4 
    /*0000335c*/ ADD         SP, SP, #420                @ 0x1a4 
    /*00003360*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VO_Init.part.5_x3364:
    /*00003364*/ MOV         R1, R6 
    /*00003368*/ BL          0x0000000000003368          @ VO_DRV_DevIntEnable [R_ARM_CALL: .text+0x1701c] 
    /*0000336c*/ MOV         R0, R4 
    /*00003370*/ ADD         SP, SP, #420                @ 0x1a4 
    /*00003374*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VO_Init.part.5_x3378:
    /*00003378*/ MOVW        R3, #0                      @ .LC217 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1508] 
    /*0000337c*/ MOVW        R0, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x210] 
    /*00003380*/ MOVT        R3, #0                      @ .LC217 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1508] 
    /*00003384*/ MOVT        R0, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x210] 
    /*00003388*/ MOVW        R2, #3282                   @ 0xcd2 
    /*0000338c*/ LDR         R1, [PC, #192]              @ 0x0000000000003454 
    /*00003390*/ BL          0x0000000000003390          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00003394*/ B           VO_Init.part.5_x3214
    VO_Init.part.5_x3398:
    /*00003398*/ MOVW        R3, #0                      @ .LC217 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1508] 
    /*0000339c*/ MOVW        R0, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x210] 
    /*000033a0*/ MOVT        R3, #0                      @ .LC217 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1508] 
    /*000033a4*/ MOVT        R0, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x210] 
    /*000033a8*/ MOVW        R2, #3275                   @ 0xccb 
    /*000033ac*/ LDR         R1, [PC, #160]              @ 0x0000000000003454 
    /*000033b0*/ BL          0x00000000000033B0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000033b4*/ B           VO_Init.part.5_x31e0
    VO_Init.part.5_x33b8:
    /*000033b8*/ MOVW        R3, #0                      @ .LC217 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1508] 
    /*000033bc*/ MOVW        R0, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x210] 
    /*000033c0*/ MOVT        R3, #0                      @ .LC217 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1508] 
    /*000033c4*/ MOVT        R0, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x210] 
    /*000033c8*/ MOVW        R2, #3292                   @ 0xcdc 
    /*000033cc*/ LDR         R1, [PC, #128]              @ 0x0000000000003454 
    /*000033d0*/ BL          0x00000000000033D0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000033d4*/ B           VO_Init.part.5_x3278
    VO_Init.part.5_x33d8:
    /*000033d8*/ MOVW        R3, #0                      @ .LC217 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1508] 
    /*000033dc*/ MOVW        R0, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x210] 
    /*000033e0*/ MOVT        R3, #0                      @ .LC217 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1508] 
    /*000033e4*/ MOVT        R0, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x210] 
    /*000033e8*/ MOVW        R2, #3315                   @ 0xcf3 
    /*000033ec*/ LDR         R1, [PC, #96]               @ 0x0000000000003454 
    /*000033f0*/ BL          0x00000000000033F0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000033f4*/ B           VO_Init.part.5_x3328
    VO_Init.part.5_x33f8:
    /*000033f8*/ MOVW        R3, #0                      @ .LC217 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1508] 
    /*000033fc*/ MOVW        R0, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x210] 
    /*00003400*/ MOVT        R3, #0                      @ .LC217 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1508] 
    /*00003404*/ MOVT        R0, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x210] 
    /*00003408*/ MOVW        R2, #3310                   @ 0xcee 
    /*0000340c*/ LDR         R1, [PC, #64]               @ 0x0000000000003454 
    /*00003410*/ BL          0x0000000000003410          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00003414*/ B           VO_Init.part.5_x32f8
    VO_Init.part.5_x3418:
    /*00003418*/ MOVW        R3, #3263                   @ 0xcbf 
    /*0000341c*/ MOVW        R2, #0                      @ .LC216 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x14cc] 
    /*00003420*/ STR         R3, [SP] 
    /*00003424*/ MOVT        R2, #0                      @ .LC216 [R_ARM_MOVT_ABS: .rodata.str1.4+0x14cc] 
    /*00003428*/ LDR         R3, [PC, #36]               @ 0x0000000000003454 
    /*0000342c*/ MOV         R1, #15 
    /*00003430*/ MOV         R0, #1 
    /*00003434*/ MVN         R4, #0 
    /*00003438*/ BL          0x0000000000003438          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000343c*/ B           VO_Init.part.5_x3358
    /*00003440*/ ANDEQ       R0, R0, R8 
    /*00003444*/ ANDEQ       R0, R0, R4, LSR R1 
    /*00003448*/ ANDEQ       R0, R0, IP, ASR #2 
    /*0000344c*/ @           <UNDEFINED> instruction: 0x000001b4 
    /*00003450*/ ANDEQ       R3, R0, R0, ASR #32 
    /*00003454*/ ANDEQ       R0, R0, R4, ROR #3 
FUNC_END VO_Init.part.5


FUNC_BEGIN VO_Init
    /*00003458*/ PUSH        {R4, LR} 
    /*0000345c*/ MOV         R0, #1 
    /*00003460*/ BL          0x0000000000003460          @ VO_SetLowPowerCtrlClkEn [R_ARM_CALL: .text+0x19138] 
    /*00003464*/ MOV         R0, #0 
    /*00003468*/ BL          0x0000000000003468          @ VoLPWBusReset [R_ARM_CALL: .text+0x190f8] 
    /*0000346c*/ MOV         R0, #0 
    /*00003470*/ BL          0x0000000000003470          @ VO_DRV_SetHdClkSel [R_ARM_CALL: .text+0x190f4] 
    /*00003474*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00003478*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000347c*/ LDR         R0, [R3, #16] 
    /*00003480*/ CMP         R0, #0 
    /*00003484*/ POPEQ       {R4, PC} 
    /*00003488*/ POP         {R4, LR} 
    /*0000348c*/ B           0x0000000000002F38 
FUNC_END VO_Init


FUNC_BEGIN VouClose
    /*00003490*/ MOV         R0, #0 
    /*00003494*/ BX          LR 
FUNC_END VouClose


FUNC_BEGIN Vou_Freeze
    /*00003498*/ MOV         R0, #0 
    /*0000349c*/ BX          LR 
FUNC_END Vou_Freeze


FUNC_BEGIN VouOpen
    /*000034a0*/ MOV         R0, #0 
    /*000034a4*/ BX          LR 
FUNC_END VouOpen


FUNC_BEGIN VoDefCheckNullPtr
    /*000034a8*/ CMP         R0, #0 
    /*000034ac*/ BEQ         VoDefCheckNullPtr_x34b8
    /*000034b0*/ MOV         R0, #0 
    /*000034b4*/ BX          LR 
    VoDefCheckNullPtr_x34b8:
    /*000034b8*/ B           0x0000000000001CA8 
FUNC_END VoDefCheckNullPtr


FUNC_BEGIN VoDefCheckDevId
    /*000034bc*/ CMP         R0, #0 
    /*000034c0*/ BXEQ        LR 
    /*000034c4*/ B           0x00000000000029BC 
FUNC_END VoDefCheckDevId


FUNC_BEGIN VoDefCheckLayerId
    /*000034c8*/ CMP         R0, #0 
    /*000034cc*/ BXEQ        LR 
    /*000034d0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000034d4*/ SUB         SP, SP, #12 
    /*000034d8*/ MOV         R3, #171                    @ 0xab 
    /*000034dc*/ MOV         R1, #15 
    /*000034e0*/ STR         R0, [SP, #4] 
    /*000034e4*/ MOVW        R2, #0                      @ .LC207 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1280] 
    /*000034e8*/ STR         R3, [SP] 
    /*000034ec*/ MOVT        R2, #0                      @ .LC207 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1280] 
    /*000034f0*/ LDR         R3, [PC, #20]               @ 0x000000000000350c 
    /*000034f4*/ MOV         R0, #3 
    /*000034f8*/ BL          0x00000000000034F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000034fc*/ MOVW        R0, #32877                  @ 0x806d 
    /*00003500*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00003504*/ ADD         SP, SP, #12 
    /*00003508*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000350c*/ @           <UNDEFINED> instruction: 0x000001b8 
FUNC_END VoDefCheckLayerId


FUNC_BEGIN VouDisableSoft
    /*00003510*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00003514*/ SUBS        R5, R0, #0 
    /*00003518*/ SUB         SP, SP, #12 
    /*0000351c*/ BNE         VouDisableSoft_x3578
    VouDisableSoft_x3520:
    /*00003520*/ ADD         R6, SP, #8 
    /*00003524*/ MOV         R4, #0 
    /*00003528*/ LDR         R0, [PC, #96]               @ 0x0000000000003590 
    /*0000352c*/ STR         R4, [R6, #-4]! 
    /*00003530*/ MOV         R1, R6 
    /*00003534*/ BL          0x0000000000003534          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00003538*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*0000353c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00003540*/ MOV         R2, #232                    @ 0xe8 
    /*00003544*/ MOV         R0, R5 
    /*00003548*/ LDR         R7, [SP, #4] 
    /*0000354c*/ MLA         R5, R2, R5, R3 
    /*00003550*/ STR         R4, [R5, #12] 
    /*00003554*/ STR         R4, [R5, #8] 
    /*00003558*/ BL          0x0000000000003558          @ VO_DRV_Disable [R_ARM_CALL: .text+0x18260] 
    /*0000355c*/ LDR         R0, [PC, #44]               @ 0x0000000000003590 
    /*00003560*/ MOV         R1, R6 
    /*00003564*/ STR         R7, [SP, #4] 
    /*00003568*/ BL          0x0000000000003568          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000356c*/ MOV         R0, R4 
    VouDisableSoft_x3570:
    /*00003570*/ ADD         SP, SP, #12 
    /*00003574*/ POP         {R4, R5, R6, R7, PC} 
    VouDisableSoft_x3578:
    /*00003578*/ BL          0x00000000000029BC 
    /*0000357c*/ CMP         R0, #0 
    /*00003580*/ BEQ         VouDisableSoft_x3520
    /*00003584*/ MOVW        R0, #32769                  @ 0x8001 
    /*00003588*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0000358c*/ B           VouDisableSoft_x3570
    /*00003590*/ ANDEQ       R3, R0, R4, LSR #1 
FUNC_END VouDisableSoft


FUNC_BEGIN VouInitChnResource
    /*00003594*/ MOVW        R3, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x3ff0] 
    /*00003598*/ MOVT        R3, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x3ff0] 
    /*0000359c*/ MOV         R2, #0 
    /*000035a0*/ MOV         R0, R2 
    /*000035a4*/ STR         R2, [R3, #-3936]            @ 0xfffff0a0 
    /*000035a8*/ STR         R2, [R3, #-3932]            @ 0xfffff0a4 
    /*000035ac*/ STR         R2, [R3, #-3928]            @ 0xfffff0a8 
    /*000035b0*/ STR         R2, [R3, #-3924]            @ 0xfffff0ac 
    /*000035b4*/ BX          LR 
FUNC_END VouInitChnResource


FUNC_BEGIN VouFreeChnResource
    /*000035b8*/ PUSH        {R4, R5, R6, LR} 
    /*000035bc*/ MOV         R4, #0 
    /*000035c0*/ LDR         R5, [PC, #40]               @ 0x00000000000035f0 
    VouFreeChnResource_x35c4:
    /*000035c4*/ LDR         R3, [R5], #4 
    /*000035c8*/ MOV         R0, #0 
    /*000035cc*/ MOV         R1, R4 
    /*000035d0*/ ADD         R4, R4, #1 
    /*000035d4*/ CMP         R3, R0 
    /*000035d8*/ BEQ         VouFreeChnResource_x35e0
    /*000035dc*/ BL          0x00000000000035DC          @ VouDeInitChnCtx [R_ARM_CALL: .text+0x56c0] 
    VouFreeChnResource_x35e0:
    /*000035e0*/ CMP         R4, #4 
    /*000035e4*/ BNE         VouFreeChnResource_x35c4
    /*000035e8*/ MOV         R0, #0 
    /*000035ec*/ POP         {R4, R5, R6, PC} 
    /*000035f0*/ MULEQ       R0, R0, R0 
FUNC_END VouFreeChnResource


FUNC_BEGIN VOU_Exit
    /*000035f4*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000035f8*/ MOVW        R4, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*000035fc*/ MOVT        R4, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*00003600*/ SUB         SP, SP, #20 
    /*00003604*/ LDR         R3, [R4, #16] 
    /*00003608*/ CMP         R3, #2 
    /*0000360c*/ BEQ         VOU_Exit_x3808
    /*00003610*/ LDR         R5, [R4, #4] 
    /*00003614*/ CMP         R5, #1 
    /*00003618*/ MOVNE       R6, #0 
    /*0000361c*/ BEQ         VOU_Exit_x390c
    VOU_Exit_x3620:
    /*00003620*/ LDR         R7, [PC, #800]              @ 0x0000000000003948 
    /*00003624*/ MOV         R5, #0 
    VOU_Exit_x3628:
    /*00003628*/ LDR         R3, [R7], #4 
    /*0000362c*/ MOV         R0, #0 
    /*00003630*/ MOV         R1, R5 
    /*00003634*/ ADD         R5, R5, #1 
    /*00003638*/ CMP         R3, R0 
    /*0000363c*/ BEQ         VOU_Exit_x3644
    /*00003640*/ BL          0x0000000000003640          @ VouDisableChn [R_ARM_CALL: .text+0xa0d4] 
    VOU_Exit_x3644:
    /*00003644*/ CMP         R5, #4 
    /*00003648*/ BNE         VOU_Exit_x3628
    /*0000364c*/ MOV         R0, #0 
    /*00003650*/ BL          0x0000000000003650          @ VouDisableVideoLayer [R_ARM_CALL: .text+0x7b2c] 
    /*00003654*/ MOV         R0, #0 
    /*00003658*/ BL          0x0000000000003658          @ VOU_DRV_CheckDevId [R_ARM_CALL: .text+0x183a0] 
    /*0000365c*/ CMP         R0, #0 
    /*00003660*/ BNE         VOU_Exit_x3684
    /*00003664*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00003668*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*0000366c*/ LDR         R3, [R3, #8] 
    /*00003670*/ CMP         R3, #0 
    /*00003674*/ BEQ         VOU_Exit_x3684
    /*00003678*/ LDR         R3, [R4, #4] 
    /*0000367c*/ CMP         R3, #0 
    /*00003680*/ BNE         VOU_Exit_x3818
    VOU_Exit_x3684:
    /*00003684*/ BL          0x0000000000003684          @ VOU_DRV_IntDisableAll [R_ARM_CALL: .text+0x1705c] 
    /*00003688*/ MOV         R1, #90                     @ 0x5a 
    /*0000368c*/ MVN         R0, #0 
    /*00003690*/ BL          0x0000000000003690          @ VOU_DRV_IntClear [R_ARM_CALL: .text+0x17058] 
    /*00003694*/ BL          0x0000000000003694          @ VouFreeChnResource [R_ARM_CALL: .text+0x35b8] 
    /*00003698*/ LDR         R0, [PC, #684]              @ 0x000000000000394c 
    /*0000369c*/ BL          0x000000000000369C          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*000036a0*/ LDR         R0, [PC, #680]              @ 0x0000000000003950 
    /*000036a4*/ BL          0x00000000000036A4          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*000036a8*/ LDR         R0, [PC, #676]              @ 0x0000000000003954 
    /*000036ac*/ BL          0x00000000000036AC          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*000036b0*/ LDR         R0, [PC, #672]              @ 0x0000000000003958 
    /*000036b4*/ BL          0x00000000000036B4          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*000036b8*/ LDR         R3, [R4, #4] 
    /*000036bc*/ CMP         R3, #1 
    /*000036c0*/ BEQ         VOU_Exit_x3894
    /*000036c4*/ BL          0x00000000000036C4          @ VO_DRV_DevInfoDeInit [R_ARM_CALL: .text+0x18438] 
    VOU_Exit_x36c8:
    /*000036c8*/ MOV         R0, #0 
    /*000036cc*/ BL          0x00000000000036CC          @ VOU_DRV_CheckDevId [R_ARM_CALL: .text+0x183a0] 
    /*000036d0*/ CMP         R0, #0 
    /*000036d4*/ BNE         VOU_Exit_x36e4
    /*000036d8*/ LDR         R3, [R4, #4] 
    /*000036dc*/ CMP         R3, #0 
    /*000036e0*/ BNE         VOU_Exit_x3810
    VOU_Exit_x36e4:
    /*000036e4*/ LDR         R0, [R4, #20] 
    /*000036e8*/ MOVW        R1, #0                      @ VouInterruptRoute [R_ARM_MOVW_ABS_NC: .text+0x19f4] 
    /*000036ec*/ MOVT        R1, #0                      @ VouInterruptRoute [R_ARM_MOVT_ABS: .text+0x19f4] 
    /*000036f0*/ BL          0x00000000000036F0          @ osal_free_irq [R_ARM_CALL: +0x0] 
    /*000036f4*/ MOV         R0, #2 
    /*000036f8*/ BL          0x00000000000036F8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000036fc*/ LDR         R3, [R0, #36]               @ 0x24 
    /*00003700*/ MOV         R0, #15 
    /*00003704*/ BLX         R3 
    /*00003708*/ CMP         R0, #0 
    /*0000370c*/ BNE         VOU_Exit_x3840
    VOU_Exit_x3710:
    /*00003710*/ MOV         R0, #2 
    /*00003714*/ BL          0x0000000000003714          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00003718*/ LDR         R3, [R0, #28] 
    /*0000371c*/ MOV         R0, #15 
    /*00003720*/ BLX         R3 
    /*00003724*/ CMP         R0, #0 
    /*00003728*/ BNE         VOU_Exit_x3820
    VOU_Exit_x372c:
    /*0000372c*/ MOV         R0, #7 
    /*00003730*/ BL          0x0000000000003730          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00003734*/ CMP         R0, #0 
    /*00003738*/ BEQ         VOU_Exit_x376c
    /*0000373c*/ MOV         R0, #7 
    /*00003740*/ BL          0x0000000000003740          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00003744*/ LDR         R3, [R0, #4] 
    /*00003748*/ CMP         R3, #0 
    /*0000374c*/ BEQ         VOU_Exit_x376c
    /*00003750*/ MOV         R0, #7 
    /*00003754*/ BL          0x0000000000003754          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00003758*/ LDR         R3, [R0, #4] 
    /*0000375c*/ MOV         R0, #15 
    /*00003760*/ BLX         R3 
    /*00003764*/ CMP         R0, #0 
    /*00003768*/ BNE         VOU_Exit_x38ac
    VOU_Exit_x376c:
    /*0000376c*/ MOV         R0, #3 
    /*00003770*/ BL          0x0000000000003770          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00003774*/ CMP         R0, #0 
    /*00003778*/ BEQ         VOU_Exit_x37d0
    /*0000377c*/ MOV         R0, #3 
    /*00003780*/ BL          0x0000000000003780          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00003784*/ LDR         R3, [R0, #4] 
    /*00003788*/ CMP         R3, #0 
    /*0000378c*/ BEQ         VOU_Exit_x37d0
    /*00003790*/ MOV         R0, #3 
    /*00003794*/ BL          0x0000000000003794          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00003798*/ MOV         R1, #15 
    /*0000379c*/ LDR         R3, [R0, #4] 
    /*000037a0*/ MOV         R0, #3 
    /*000037a4*/ BLX         R3 
    /*000037a8*/ CMP         R0, #0 
    /*000037ac*/ BNE         VOU_Exit_x38ec
    VOU_Exit_x37b0:
    /*000037b0*/ MOV         R0, #3 
    /*000037b4*/ BL          0x00000000000037B4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000037b8*/ MOV         R1, #15 
    /*000037bc*/ LDR         R3, [R0, #4] 
    /*000037c0*/ MOV         R0, #2 
    /*000037c4*/ BLX         R3 
    /*000037c8*/ CMP         R0, #0 
    /*000037cc*/ BNE         VOU_Exit_x38cc
    VOU_Exit_x37d0:
    /*000037d0*/ BL          0x00000000000037D0          @ VO_GraphicsDeInit [R_ARM_CALL: .text+0x14ab8] 
    /*000037d4*/ LDR         R3, [R4, #4] 
    /*000037d8*/ CMP         R3, #0 
    /*000037dc*/ BNE         VOU_Exit_x3860
    VOU_Exit_x37e0:
    /*000037e0*/ MOVW        R3, #3511                   @ 0xdb7 
    /*000037e4*/ MOVW        R2, #0                      @ .LC218 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1520] 
    /*000037e8*/ STR         R3, [SP] 
    /*000037ec*/ MOVT        R2, #0                      @ .LC218 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1520] 
    /*000037f0*/ LDR         R3, [PC, #356]              @ 0x000000000000395c 
    /*000037f4*/ MOV         R1, #15 
    /*000037f8*/ MOV         R0, #7 
    /*000037fc*/ MOV         IP, #2 
    /*00003800*/ STR         IP, [R4, #16] 
    /*00003804*/ BL          0x0000000000003804          @ HI_LOG [R_ARM_CALL: +0x0] 
    VOU_Exit_x3808:
    /*00003808*/ ADD         SP, SP, #20 
    /*0000380c*/ POP         {R4, R5, R6, R7, PC} 
    VOU_Exit_x3810:
    /*00003810*/ BL          0x0000000000003810          @ VouDisableSoft [R_ARM_CALL: .text+0x3510] 
    /*00003814*/ B           VOU_Exit_x36e4
    VOU_Exit_x3818:
    /*00003818*/ BL          0x0000000000003818          @ VouDisable [R_ARM_CALL: .text+0x6818] 
    /*0000381c*/ B           VOU_Exit_x3684
    VOU_Exit_x3820:
    /*00003820*/ MOVW        R3, #0                      @ .LC217 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1508] 
    /*00003824*/ MOVW        R0, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x210] 
    /*00003828*/ MOVT        R3, #0                      @ .LC217 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1508] 
    /*0000382c*/ MOVT        R0, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x210] 
    /*00003830*/ MOVW        R2, #3464                   @ 0xd88 
    /*00003834*/ LDR         R1, [PC, #288]              @ 0x000000000000395c 
    /*00003838*/ BL          0x0000000000003838          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000383c*/ B           VOU_Exit_x372c
    VOU_Exit_x3840:
    /*00003840*/ MOVW        R3, #0                      @ .LC217 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1508] 
    /*00003844*/ MOVW        R0, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x210] 
    /*00003848*/ MOVT        R3, #0                      @ .LC217 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1508] 
    /*0000384c*/ MOVT        R0, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x210] 
    /*00003850*/ MOVW        R2, #3461                   @ 0xd85 
    /*00003854*/ LDR         R1, [PC, #256]              @ 0x000000000000395c 
    /*00003858*/ BL          0x0000000000003858          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000385c*/ B           VOU_Exit_x3710
    VOU_Exit_x3860:
    /*00003860*/ ADD         R5, SP, #16 
    /*00003864*/ LDR         R0, [PC, #244]              @ 0x0000000000003960 
    /*00003868*/ STR         R6, [R5, #-4]! 
    /*0000386c*/ MOV         R1, R5 
    /*00003870*/ BL          0x0000000000003870          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00003874*/ LDR         R6, [SP, #12] 
    /*00003878*/ MOV         R0, #0 
    /*0000387c*/ BL          0x000000000000387C          @ VO_DRV_SetAllCrgClk [R_ARM_CALL: .text+0x19040] 
    /*00003880*/ MOV         R1, R5 
    /*00003884*/ LDR         R0, [PC, #212]              @ 0x0000000000003960 
    /*00003888*/ STR         R6, [SP, #12] 
    /*0000388c*/ BL          0x000000000000388C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003890*/ B           VOU_Exit_x37e0
    VOU_Exit_x3894:
    /*00003894*/ BL          0x0000000000003894          @ VO_DRV_DevInfoDeInit [R_ARM_CALL: .text+0x18438] 
    /*00003898*/ MOV         R2, #232                    @ 0xe8 
    /*0000389c*/ MOV         R1, #0 
    /*000038a0*/ LDR         R0, [PC, #188]              @ 0x0000000000003964 
    /*000038a4*/ BL          0x00000000000038A4          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000038a8*/ B           VOU_Exit_x36c8
    VOU_Exit_x38ac:
    /*000038ac*/ MOVW        R3, #0                      @ .LC217 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1508] 
    /*000038b0*/ MOVW        R0, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x210] 
    /*000038b4*/ MOVT        R3, #0                      @ .LC217 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1508] 
    /*000038b8*/ MOVT        R0, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x210] 
    /*000038bc*/ MOVW        R2, #3469                   @ 0xd8d 
    /*000038c0*/ LDR         R1, [PC, #148]              @ 0x000000000000395c 
    /*000038c4*/ BL          0x00000000000038C4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000038c8*/ B           VOU_Exit_x376c
    VOU_Exit_x38cc:
    /*000038cc*/ MOVW        R3, #0                      @ .LC217 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1508] 
    /*000038d0*/ MOVW        R0, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x210] 
    /*000038d4*/ MOVT        R3, #0                      @ .LC217 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1508] 
    /*000038d8*/ MOVT        R0, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x210] 
    /*000038dc*/ MOVW        R2, #3479                   @ 0xd97 
    /*000038e0*/ LDR         R1, [PC, #116]              @ 0x000000000000395c 
    /*000038e4*/ BL          0x00000000000038E4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000038e8*/ B           VOU_Exit_x37d0
    VOU_Exit_x38ec:
    /*000038ec*/ MOVW        R3, #0                      @ .LC217 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1508] 
    /*000038f0*/ MOVW        R0, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x210] 
    /*000038f4*/ MOVT        R3, #0                      @ .LC217 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1508] 
    /*000038f8*/ MOVT        R0, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x210] 
    /*000038fc*/ MOVW        R2, #3476                   @ 0xd94 
    /*00003900*/ LDR         R1, [PC, #84]               @ 0x000000000000395c 
    /*00003904*/ BL          0x0000000000003904          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00003908*/ B           VOU_Exit_x37b0
    VOU_Exit_x390c:
    /*0000390c*/ ADD         R6, SP, #16 
    /*00003910*/ MOV         R3, #0 
    /*00003914*/ LDR         R0, [PC, #68]               @ 0x0000000000003960 
    /*00003918*/ STR         R3, [R6, #-4]! 
    /*0000391c*/ MOV         R1, R6 
    /*00003920*/ BL          0x0000000000003920          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00003924*/ LDR         R7, [SP, #12] 
    /*00003928*/ MOV         R0, R5 
    /*0000392c*/ BL          0x000000000000392C          @ VO_DRV_SetAllCrgClk [R_ARM_CALL: .text+0x19040] 
    /*00003930*/ MOV         R1, R6 
    /*00003934*/ LDR         R0, [PC, #36]               @ 0x0000000000003960 
    /*00003938*/ STR         R7, [SP, #12] 
    /*0000393c*/ BL          0x000000000000393C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00003940*/ LDR         R6, [SP, #12] 
    /*00003944*/ B           VOU_Exit_x3620
    /*00003948*/ MULEQ       R0, R0, R0 
    /*0000394c*/ ANDEQ       R3, R0, R0, ASR #32 
    /*00003950*/ ANDEQ       R3, R0, R4, ASR #32 
    /*00003954*/ ANDEQ       R3, R0, R8, ASR #32 
    /*00003958*/ ANDEQ       R3, R0, IP, ASR #32 
    /*0000395c*/ ANDEQ       R0, R0, IP, ROR #3 
    /*00003960*/ ANDEQ       R3, R0, R4, LSR #1 
    /*00003964*/ ANDEQ       R0, R0, R8 
FUNC_END VOU_Exit


FUNC_BEGIN VOU_Check_ModuleParam
    /*00003968*/ PUSH        {R4, LR} 
    /*0000396c*/ MOVW        R4, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x3ff0] 
    /*00003970*/ MOVT        R4, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x3ff0] 
    /*00003974*/ LDR         R1, [R4, #-3892]            @ 0xfffff0cc 
    /*00003978*/ CMP         R1, #1 
    /*0000397c*/ BLS         VOU_Check_ModuleParam_x3994
    /*00003980*/ MOVW        R0, #0                      @ .LC219 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1548] 
    /*00003984*/ MOVT        R0, #0                      @ .LC219 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1548] 
    /*00003988*/ BL          0x0000000000003988          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0000398c*/ MOV         R3, #1 
    /*00003990*/ STR         R3, [R4, #-3892]            @ 0xfffff0cc 
    VOU_Check_ModuleParam_x3994:
    /*00003994*/ MOVW        R4, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00003998*/ MOVT        R4, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x0] 
    /*0000399c*/ LDR         R1, [R4, #24] 
    /*000039a0*/ CMP         R1, #1 
    /*000039a4*/ POPLS       {R4, PC} 
    /*000039a8*/ MOVW        R0, #0                      @ .LC220 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1594] 
    /*000039ac*/ MOVT        R0, #0                      @ .LC220 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1594] 
    /*000039b0*/ BL          0x00000000000039B0          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000039b4*/ MOV         R3, #1 
    /*000039b8*/ STR         R3, [R4, #24] 
    /*000039bc*/ POP         {R4, PC} 
FUNC_END VOU_Check_ModuleParam


FUNC_BEGIN VOU_ModInit
    /*000039c0*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000039c4*/ MOVW        R4, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x3ff0] 
    /*000039c8*/ SUB         SP, SP, #36                 @ 0x24 
    /*000039cc*/ MOVT        R4, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x3ff0] 
    /*000039d0*/ BL          0x00000000000039D0          @ VOU_Check_ModuleParam [R_ARM_CALL: .text+0x3968] 
    /*000039d4*/ SUB         R5, R4, #3904               @ 0xf40 
    /*000039d8*/ SUB         R0, R4, #3920               @ 0xf50 
    /*000039dc*/ BL          0x00000000000039DC          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*000039e0*/ SUB         R0, R5, #12 
    /*000039e4*/ BL          0x00000000000039E4          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*000039e8*/ SUB         R0, R5, #8 
    /*000039ec*/ BL          0x00000000000039EC          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*000039f0*/ BL          0x00000000000039F0          @ VOU_GraphicsLockInit [R_ARM_CALL: .text+0x14aac] 
    /*000039f4*/ MOV         R1, #1 
    /*000039f8*/ MOV         R0, R5 
    /*000039fc*/ BL          0x00000000000039FC          @ osal_sema_init [R_ARM_CALL: +0x0] 
    /*00003a00*/ SUB         R0, R4, #3888               @ 0xf30 
    /*00003a04*/ MOV         R1, #1 
    /*00003a08*/ SUB         R0, R0, #12 
    /*00003a0c*/ BL          0x0000000000003A0C          @ osal_sema_init [R_ARM_CALL: +0x0] 
    /*00003a10*/ MOV         R1, #20 
    /*00003a14*/ ADD         R0, SP, #12 
    /*00003a18*/ MOVW        R3, #0                      @ .LC221 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x15dc] 
    /*00003a1c*/ MOVW        R2, #0                      @ .LC222 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x15e0] 
    /*00003a20*/ MOVT        R3, #0                      @ .LC221 [R_ARM_MOVT_ABS: .rodata.str1.4+0x15dc] 
    /*00003a24*/ MOVT        R2, #0                      @ .LC222 [R_ARM_MOVT_ABS: .rodata.str1.4+0x15e0] 
    /*00003a28*/ BL          0x0000000000003A28          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*00003a2c*/ ADD         R0, SP, #12 
    /*00003a30*/ BL          0x0000000000003A30          @ osal_createdev [R_ARM_CALL: +0x0] 
    /*00003a34*/ CMP         R0, #0 
    /*00003a38*/ STR         R0, [R4, #-3888]            @ 0xfffff0d0 
    /*00003a3c*/ BEQ         VOU_ModInit_x3bc8
    /*00003a40*/ LDR         R6, [PC, #456]              @ 0x0000000000003c10 
    /*00003a44*/ MOV         R7, #1 
    /*00003a48*/ STR         R7, [R0, #52]               @ 0x34 
    /*00003a4c*/ ADD         R2, R6, #32 
    /*00003a50*/ STR         R2, [R0, #60]               @ 0x3c 
    /*00003a54*/ STR         R6, [R0, #56]               @ 0x38 
    /*00003a58*/ BL          0x0000000000003A58          @ osal_registerdevice [R_ARM_CALL: +0x0] 
    /*00003a5c*/ CMP         R0, #0 
    /*00003a60*/ BLT         VOU_ModInit_x3ba4
    /*00003a64*/ MOVW        R0, #0                      @ .LC221 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x15dc] 
    /*00003a68*/ MOV         R1, #0 
    /*00003a6c*/ MOVT        R0, #0                      @ .LC221 [R_ARM_MOVT_ABS: .rodata.str1.4+0x15dc] 
    /*00003a70*/ BL          0x0000000000003A70          @ osal_create_proc_entry [R_ARM_CALL: +0x0] 
    /*00003a74*/ CMP         R0, #0 
    /*00003a78*/ BEQ         VOU_ModInit_x3bec
    /*00003a7c*/ MOVW        R3, #0                      @ VouProcShow [R_ARM_MOVW_ABS_NC: .text+0x34] 
    /*00003a80*/ MOVT        R3, #0                      @ VouProcShow [R_ARM_MOVT_ABS: .text+0x34] 
    /*00003a84*/ STR         R3, [R0, #60]               @ 0x3c 
    /*00003a88*/ BL          0x0000000000003A88          @ VOU_DRV_BoardInit [R_ARM_CALL: .text+0x16874] 
    /*00003a8c*/ ADD         R0, R6, #112                @ 0x70 
    /*00003a90*/ BL          0x0000000000003A90          @ CMPI_RegisterModule [R_ARM_CALL: +0x0] 
    /*00003a94*/ CMP         R0, #0 
    /*00003a98*/ BNE         VOU_ModInit_x3b0c
    /*00003a9c*/ SUB         R5, R5, #4 
    /*00003aa0*/ MOV         R0, R5 
    /*00003aa4*/ BL          0x0000000000003AA4          @ osal_atomic_init [R_ARM_CALL: +0x0] 
    /*00003aa8*/ SUBS        R6, R0, #0 
    /*00003aac*/ BNE         VOU_ModInit_x3b78
    /*00003ab0*/ MOV         R0, R5 
    /*00003ab4*/ MOV         R1, R6 
    /*00003ab8*/ BL          0x0000000000003AB8          @ osal_atomic_set [R_ARM_CALL: +0x0] 
    /*00003abc*/ MOV         R1, R6 
    /*00003ac0*/ MOV         R2, #4 
    /*00003ac4*/ LDR         R0, [PC, #328]              @ 0x0000000000003c14 
    /*00003ac8*/ BL          0x0000000000003AC8          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00003acc*/ MOV         R2, #4 
    /*00003ad0*/ MOV         R1, R6 
    /*00003ad4*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00003ad8*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00003adc*/ BL          0x0000000000003ADC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00003ae0*/ MOVW        R1, #0                      @ .LC228 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x16e4] 
    /*00003ae4*/ MOVW        R0, #0                      @ .LC229 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x16f0] 
    /*00003ae8*/ MOVT        R1, #0                      @ .LC228 [R_ARM_MOVT_ABS: .rodata.str1.4+0x16e4] 
    /*00003aec*/ MOVT        R0, #0                      @ .LC229 [R_ARM_MOVT_ABS: .rodata.str1.4+0x16f0] 
    /*00003af0*/ MOVW        R3, #0                      @ VOU_RegisterExternCallBack [R_ARM_MOVW_ABS_NC: .text+0x1c] 
    /*00003af4*/ MOVT        R3, #0                      @ VOU_RegisterExternCallBack [R_ARM_MOVT_ABS: .text+0x1c] 
    /*00003af8*/ STR         R3, [R4, #-3884]            @ 0xfffff0d4 
    /*00003afc*/ BL          0x0000000000003AFC          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00003b00*/ MOV         R0, R6 
    /*00003b04*/ ADD         SP, SP, #36                 @ 0x24 
    /*00003b08*/ POP         {R4, R5, R6, R7, PC} 
    VOU_ModInit_x3b0c:
    /*00003b0c*/ MOVW        R3, #3857                   @ 0xf11 
    /*00003b10*/ MOVW        R2, #0                      @ .LC226 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x167c] 
    /*00003b14*/ STR         R3, [SP] 
    /*00003b18*/ MOV         R0, R7 
    /*00003b1c*/ MOVT        R2, #0                      @ .LC226 [R_ARM_MOVT_ABS: .rodata.str1.4+0x167c] 
    /*00003b20*/ LDR         R3, [PC, #240]              @ 0x0000000000003c18 
    /*00003b24*/ MOV         R1, #15 
    /*00003b28*/ BL          0x0000000000003B28          @ HI_LOG [R_ARM_CALL: +0x0] 
    VOU_ModInit_x3b2c:
    /*00003b2c*/ MOVW        R0, #0                      @ .LC221 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x15dc] 
    /*00003b30*/ MOV         R1, #0 
    /*00003b34*/ MOVT        R0, #0                      @ .LC221 [R_ARM_MOVT_ABS: .rodata.str1.4+0x15dc] 
    /*00003b38*/ BL          0x0000000000003B38          @ osal_remove_proc_entry [R_ARM_CALL: +0x0] 
    VOU_ModInit_x3b3c:
    /*00003b3c*/ LDR         R0, [R4, #-3888]            @ 0xfffff0d0 
    /*00003b40*/ BL          0x0000000000003B40          @ osal_deregisterdevice [R_ARM_CALL: +0x0] 
    VOU_ModInit_x3b44:
    /*00003b44*/ LDR         R0, [R4, #-3888]            @ 0xfffff0d0 
    /*00003b48*/ BL          0x0000000000003B48          @ osal_destroydev [R_ARM_CALL: +0x0] 
    /*00003b4c*/ MOV         R3, #0 
    /*00003b50*/ STR         R3, [R4, #-3888]            @ 0xfffff0d0 
    VOU_ModInit_x3b54:
    /*00003b54*/ MOVW        R1, #0                      @ .LC228 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x16e4] 
    /*00003b58*/ MOVW        R0, #0                      @ .LC230 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x170c] 
    /*00003b5c*/ MOVT        R1, #0                      @ .LC228 [R_ARM_MOVT_ABS: .rodata.str1.4+0x16e4] 
    /*00003b60*/ MOVT        R0, #0                      @ .LC230 [R_ARM_MOVT_ABS: .rodata.str1.4+0x170c] 
    /*00003b64*/ BL          0x0000000000003B64          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00003b68*/ MVN         R6, #0 
    /*00003b6c*/ MOV         R0, R6 
    /*00003b70*/ ADD         SP, SP, #36                 @ 0x24 
    /*00003b74*/ POP         {R4, R5, R6, R7, PC} 
    VOU_ModInit_x3b78:
    /*00003b78*/ MOV         R0, R7 
    /*00003b7c*/ MOVW        R3, #3863                   @ 0xf17 
    /*00003b80*/ MOV         R1, #15 
    /*00003b84*/ STR         R3, [SP] 
    /*00003b88*/ MOVW        R2, #0                      @ .LC227 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x16b0] 
    /*00003b8c*/ LDR         R3, [PC, #132]              @ 0x0000000000003c18 
    /*00003b90*/ MOVT        R2, #0                      @ .LC227 [R_ARM_MOVT_ABS: .rodata.str1.4+0x16b0] 
    /*00003b94*/ BL          0x0000000000003B94          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003b98*/ MOV         R0, #15 
    /*00003b9c*/ BL          0x0000000000003B9C          @ CMPI_UnRegisterModule [R_ARM_CALL: +0x0] 
    /*00003ba0*/ B           VOU_ModInit_x3b2c
    VOU_ModInit_x3ba4:
    /*00003ba4*/ MOVW        R3, #3841                   @ 0xf01 
    /*00003ba8*/ MOV         R0, R7 
    /*00003bac*/ STR         R3, [SP] 
    /*00003bb0*/ MOVW        R2, #0                      @ .LC224 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1618] 
    /*00003bb4*/ LDR         R3, [PC, #92]               @ 0x0000000000003c18 
    /*00003bb8*/ MOVT        R2, #0                      @ .LC224 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1618] 
    /*00003bbc*/ MOV         R1, #15 
    /*00003bc0*/ BL          0x0000000000003BC0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003bc4*/ B           VOU_ModInit_x3b44
    VOU_ModInit_x3bc8:
    /*00003bc8*/ MOVW        R3, #3832                   @ 0xef8 
    /*00003bcc*/ MOVW        R2, #0                      @ .LC223 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x15e4] 
    /*00003bd0*/ STR         R3, [SP] 
    /*00003bd4*/ MOVT        R2, #0                      @ .LC223 [R_ARM_MOVT_ABS: .rodata.str1.4+0x15e4] 
    /*00003bd8*/ LDR         R3, [PC, #56]               @ 0x0000000000003c18 
    /*00003bdc*/ MOV         R1, #15 
    /*00003be0*/ MOV         R0, #1 
    /*00003be4*/ BL          0x0000000000003BE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003be8*/ B           VOU_ModInit_x3b54
    VOU_ModInit_x3bec:
    /*00003bec*/ MOVW        R3, #3848                   @ 0xf08 
    /*00003bf0*/ MOV         R0, R7 
    /*00003bf4*/ STR         R3, [SP] 
    /*00003bf8*/ MOVW        R2, #0                      @ .LC225 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1648] 
    /*00003bfc*/ LDR         R3, [PC, #20]               @ 0x0000000000003c18 
    /*00003c00*/ MOVT        R2, #0                      @ .LC225 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1648] 
    /*00003c04*/ MOV         R1, #15 
    /*00003c08*/ BL          0x0000000000003C08          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003c0c*/ B           VOU_ModInit_x3b3c
    /*00003c10*/ ANDEQ       R0, R0, IP, LSL R0 
    /*00003c14*/ ANDEQ       R3, R0, R4, ASR #1 
    /*00003c18*/ STRDEQ      R0, [R0], -R8 
FUNC_END VOU_ModInit


FUNC_BEGIN VOU_ModExit
    /*00003c1c*/ PUSH        {R4, R5, R6, LR} 
    /*00003c20*/ MOVW        R4, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x3ff0] 
    /*00003c24*/ MOVT        R4, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x3ff0] 
    /*00003c28*/ SUB         R5, R4, #3904               @ 0xf40 
    /*00003c2c*/ SUB         R0, R5, #4 
    /*00003c30*/ BL          0x0000000000003C30          @ osal_atomic_destory [R_ARM_CALL: +0x0] 
    /*00003c34*/ BL          0x0000000000003C34          @ VOU_DRV_BoardDeInit [R_ARM_CALL: .text+0x16878] 
    /*00003c38*/ MOV         R0, #15 
    /*00003c3c*/ BL          0x0000000000003C3C          @ CMPI_UnRegisterModule [R_ARM_CALL: +0x0] 
    /*00003c40*/ MOV         R1, #0 
    /*00003c44*/ MOVW        R0, #0                      @ .LC221 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x15dc] 
    /*00003c48*/ MOVT        R0, #0                      @ .LC221 [R_ARM_MOVT_ABS: .rodata.str1.4+0x15dc] 
    /*00003c4c*/ BL          0x0000000000003C4C          @ osal_remove_proc_entry [R_ARM_CALL: +0x0] 
    /*00003c50*/ LDR         R0, [R4, #-3888]            @ 0xfffff0d0 
    /*00003c54*/ BL          0x0000000000003C54          @ osal_deregisterdevice [R_ARM_CALL: +0x0] 
    /*00003c58*/ LDR         R0, [R4, #-3888]            @ 0xfffff0d0 
    /*00003c5c*/ BL          0x0000000000003C5C          @ osal_destroydev [R_ARM_CALL: +0x0] 
    /*00003c60*/ MOV         R0, #1 
    /*00003c64*/ BL          0x0000000000003C64          @ VO_DRV_SetAllCrgClk [R_ARM_CALL: .text+0x19040] 
    /*00003c68*/ MOV         R0, #1 
    /*00003c6c*/ BL          0x0000000000003C6C          @ VoLPWBusReset [R_ARM_CALL: .text+0x190f8] 
    /*00003c70*/ MOV         R0, #0 
    /*00003c74*/ BL          0x0000000000003C74          @ VO_DRV_SetAllCrgClk [R_ARM_CALL: .text+0x19040] 
    /*00003c78*/ BL          0x0000000000003C78          @ VOU_GraphicsLockDeInit [R_ARM_CALL: .text+0x14ab0] 
    /*00003c7c*/ SUB         R0, R5, #8 
    /*00003c80*/ BL          0x0000000000003C80          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*00003c84*/ SUB         R0, R5, #12 
    /*00003c88*/ BL          0x0000000000003C88          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*00003c8c*/ SUB         R0, R4, #3920               @ 0xf50 
    /*00003c90*/ BL          0x0000000000003C90          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*00003c94*/ MOV         R0, R5 
    /*00003c98*/ BL          0x0000000000003C98          @ osal_sema_destory [R_ARM_CALL: +0x0] 
    /*00003c9c*/ SUB         R0, R4, #3888               @ 0xf30 
    /*00003ca0*/ SUB         R0, R0, #12 
    /*00003ca4*/ BL          0x0000000000003CA4          @ osal_sema_destory [R_ARM_CALL: +0x0] 
    /*00003ca8*/ SUB         R0, R4, #3872               @ 0xf20 
    /*00003cac*/ MOV         R2, #4 
    /*00003cb0*/ MOV         R1, #0 
    /*00003cb4*/ SUB         R0, R0, #12 
    /*00003cb8*/ BL          0x0000000000003CB8          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00003cbc*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00003cc0*/ MOV         R2, #4 
    /*00003cc4*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00003cc8*/ MOV         R1, #0 
    /*00003ccc*/ BL          0x0000000000003CCC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00003cd0*/ MOVW        R0, #0                      @ .LC231 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x172c] 
    /*00003cd4*/ POP         {R4, R5, R6, LR} 
    /*00003cd8*/ MOVT        R0, #0                      @ .LC231 [R_ARM_MOVT_ABS: .rodata.str1.4+0x172c] 
    VOU_ModExit_x3cdc:
    /*00003cdc*/ B           VOU_ModExit_x3cdc           @ osal_printk [R_ARM_JUMP24: +0x0] 
FUNC_END VOU_ModExit


FUNC_BEGIN VouBufInit
    /*00003ce0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00003ce4*/ SUBS        R8, R2, #0 
    /*00003ce8*/ ADD         R9, R0, #212                @ 0xd4 
    /*00003cec*/ MOV         SL, R3 
    /*00003cf0*/ MOV         R7, R0 
    /*00003cf4*/ ADD         R3, R0, #220                @ 0xdc 
    /*00003cf8*/ STR         R9, [R0, #212]              @ 0xd4 
    /*00003cfc*/ STR         R9, [R0, #216]              @ 0xd8 
    /*00003d00*/ STR         R3, [R0, #220]              @ 0xdc 
    /*00003d04*/ STR         R3, [R0, #224]              @ 0xe0 
    /*00003d08*/ BEQ         VouBufInit_x3d54
    /*00003d0c*/ ADD         R4, R0, #4 
    /*00003d10*/ MOV         R5, R1 
    /*00003d14*/ MOV         R6, #0 
    VouBufInit_x3d18:
    /*00003d18*/ STR         R5, [R4, #-4] 
    /*00003d1c*/ MOV         R2, SL 
    /*00003d20*/ MOV         R0, R5 
    /*00003d24*/ MOV         R1, #0 
    /*00003d28*/ BL          0x0000000000003D28          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00003d2c*/ ADD         R6, R6, #1 
    /*00003d30*/ LDR         R2, [R7, #216]              @ 0xd8 
    /*00003d34*/ CMP         R8, R6 
    /*00003d38*/ STR         R4, [R7, #216]              @ 0xd8 
    /*00003d3c*/ ADD         R5, R5, SL 
    /*00003d40*/ STR         R9, [R4] 
    /*00003d44*/ STR         R2, [R4, #4] 
    /*00003d48*/ STR         R4, [R2] 
    /*00003d4c*/ ADD         R4, R4, #12 
    /*00003d50*/ BNE         VouBufInit_x3d18
    VouBufInit_x3d54:
    /*00003d54*/ MOV         R0, #0 
    /*00003d58*/ STR         SL, [R7, #208]              @ 0xd0 
    /*00003d5c*/ STR         R8, [R7, #192]              @ 0xc0 
    /*00003d60*/ STR         R8, [R7, #200]              @ 0xc8 
    /*00003d64*/ STR         R0, [R7, #196]              @ 0xc4 
    /*00003d68*/ STR         R0, [R7, #204]              @ 0xcc 
    /*00003d6c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END VouBufInit


FUNC_BEGIN VouBufResetNode
    /*00003d70*/ PUSH        {R4, LR} 
    /*00003d74*/ LDR         R4, [R0] 
    /*00003d78*/ CMP         R4, #0 
    /*00003d7c*/ BEQ         VouBufResetNode_x3da0
    /*00003d80*/ MOV         R2, #752                    @ 0x2f0 
    /*00003d84*/ MOV         R1, #0 
    /*00003d88*/ MOV         R0, R4 
    /*00003d8c*/ BL          0x0000000000003D8C          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00003d90*/ MVN         R3, #0 
    /*00003d94*/ STR         R3, [R4, #744]              @ 0x2e8 
    /*00003d98*/ STR         R3, [R4, #328]              @ 0x148 
    /*00003d9c*/ STR         R3, [R4, #664]              @ 0x298 
    VouBufResetNode_x3da0:
    /*00003da0*/ MOV         R0, #0 
    /*00003da4*/ POP         {R4, PC} 
FUNC_END VouBufResetNode


FUNC_BEGIN VouBufGetBusy
    /*00003da8*/ MOV         R3, R0 
    /*00003dac*/ PUSH        {R4, R5, LR} 
    /*00003db0*/ SUB         SP, SP, #12 
    /*00003db4*/ LDR         R4, [R3, #220]!             @ 0xdc 
    /*00003db8*/ CMP         R4, R3 
    /*00003dbc*/ BEQ         VouBufGetBusy_x3e2c
    /*00003dc0*/ CMP         R4, #0 
    /*00003dc4*/ MOV         R5, R0 
    /*00003dc8*/ BEQ         VouBufGetBusy_x3e08
    VouBufGetBusy_x3dcc:
    /*00003dcc*/ LDR         R1, [R4, #4] 
    /*00003dd0*/ MOV         R2, #256                    @ 0x100 
    /*00003dd4*/ LDR         IP, [R4] 
    /*00003dd8*/ MOVT        R2, #16 
    /*00003ddc*/ MOV         R3, #512                    @ 0x200 
    /*00003de0*/ SUB         R0, R4, #4 
    /*00003de4*/ MOVT        R3, #32 
    /*00003de8*/ STR         R1, [IP, #4] 
    /*00003dec*/ STR         IP, [R1] 
    /*00003df0*/ STM         R4, {R2, R3} 
    /*00003df4*/ LDR         R3, [R5, #196]              @ 0xc4 
    /*00003df8*/ SUB         R3, R3, #1 
    /*00003dfc*/ STR         R3, [R5, #196]              @ 0xc4 
    VouBufGetBusy_x3e00:
    /*00003e00*/ ADD         SP, SP, #12 
    /*00003e04*/ POP         {R4, R5, PC} 
    VouBufGetBusy_x3e08:
    /*00003e08*/ MOVW        R3, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a60] 
    /*00003e0c*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x204] 
    /*00003e10*/ MOVT        R3, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a60] 
    /*00003e14*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x204] 
    /*00003e18*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a74] 
    /*00003e1c*/ MOV         R2, #149                    @ 0x95 
    /*00003e20*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a74] 
    /*00003e24*/ BL          0x0000000000003E24          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00003e28*/ B           VouBufGetBusy_x3dcc
    VouBufGetBusy_x3e2c:
    /*00003e2c*/ MOV         R2, #144                    @ 0x90 
    /*00003e30*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x204] 
    /*00003e34*/ STR         R2, [SP] 
    /*00003e38*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x204] 
    /*00003e3c*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a34] 
    /*00003e40*/ MOV         R1, #15 
    /*00003e44*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a34] 
    /*00003e48*/ MOV         R0, #4 
    /*00003e4c*/ BL          0x0000000000003E4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003e50*/ MOV         R0, #0 
    /*00003e54*/ B           VouBufGetBusy_x3e00
FUNC_END VouBufGetBusy


FUNC_BEGIN VouBufPutBusy
    /*00003e58*/ LDR         R3, [R0, #224]              @ 0xe0 
    /*00003e5c*/ ADD         R2, R1, #4 
    /*00003e60*/ ADD         IP, R0, #220                @ 0xdc 
    /*00003e64*/ STR         R2, [R0, #224]              @ 0xe0 
    /*00003e68*/ STR         IP, [R1, #4] 
    /*00003e6c*/ STR         R3, [R1, #8] 
    /*00003e70*/ STR         R2, [R3] 
    /*00003e74*/ LDR         R3, [R0, #196]              @ 0xc4 
    /*00003e78*/ ADD         R3, R3, #1 
    /*00003e7c*/ STR         R3, [R0, #196]              @ 0xc4 
    /*00003e80*/ BX          LR 
FUNC_END VouBufPutBusy


FUNC_BEGIN VouBufGetFree
    /*00003e84*/ MOV         R2, R0 
    /*00003e88*/ PUSH        {R4, LR} 
    /*00003e8c*/ SUB         SP, SP, #8 
    /*00003e90*/ LDR         R3, [R2, #212]!             @ 0xd4 
    /*00003e94*/ CMP         R3, R2 
    /*00003e98*/ BEQ         VouBufGetFree_x3ee0
    /*00003e9c*/ LDR         LR, [R3, #4] 
    /*00003ea0*/ MOV         R1, R0 
    /*00003ea4*/ LDR         R4, [R3] 
    /*00003ea8*/ MOV         IP, #256                    @ 0x100 
    /*00003eac*/ MOV         R2, #512                    @ 0x200 
    /*00003eb0*/ MOVT        IP, #16 
    /*00003eb4*/ SUB         R0, R3, #4 
    /*00003eb8*/ MOVT        R2, #32 
    /*00003ebc*/ STR         LR, [R4, #4] 
    /*00003ec0*/ STR         R4, [LR] 
    /*00003ec4*/ STR         IP, [R3] 
    /*00003ec8*/ STR         R2, [R3, #4] 
    /*00003ecc*/ LDR         R3, [R1, #200]              @ 0xc8 
    /*00003ed0*/ SUB         R3, R3, #1 
    /*00003ed4*/ STR         R3, [R1, #200]              @ 0xc8 
    VouBufGetFree_x3ed8:
    /*00003ed8*/ ADD         SP, SP, #8 
    /*00003edc*/ POP         {R4, PC} 
    VouBufGetFree_x3ee0:
    /*00003ee0*/ MOV         R3, #190                    @ 0xbe 
    /*00003ee4*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ab4] 
    /*00003ee8*/ STR         R3, [SP] 
    /*00003eec*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ab4] 
    /*00003ef0*/ LDR         R3, [PC, #16]               @ 0x0000000000003f08 
    /*00003ef4*/ MOV         R1, #15 
    /*00003ef8*/ MOV         R0, #4 
    /*00003efc*/ BL          0x0000000000003EFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003f00*/ MOV         R0, #0 
    /*00003f04*/ B           VouBufGetFree_x3ed8
    /*00003f08*/ ANDEQ       R0, R0, R4, LSL R2 
FUNC_END VouBufGetFree


FUNC_BEGIN VouBufGetFreeByNode
    /*00003f0c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00003f10*/ ADD         LR, R0, #212                @ 0xd4 
    /*00003f14*/ LDR         R1, [R0, #212]              @ 0xd4 
    /*00003f18*/ SUB         SP, SP, #8 
    /*00003f1c*/ CMP         LR, R1 
    /*00003f20*/ BEQ         VouBufGetFreeByNode_x3fa4
    /*00003f24*/ MOV         R7, R3 
    /*00003f28*/ MOV         R8, R0 
    /*00003f2c*/ MOV         R6, R2 
    /*00003f30*/ LDR         R3, [R1] 
    /*00003f34*/ B           VouBufGetFreeByNode_x3f3c
    VouBufGetFreeByNode_x3f38:
    /*00003f38*/ MOV         R3, IP 
    VouBufGetFreeByNode_x3f3c:
    /*00003f3c*/ SUB         R0, R1, #4 
    /*00003f40*/ MOV         R5, #0 
    /*00003f44*/ CMP         R5, R7 
    /*00003f48*/ CMPEQ       R0, R6 
    /*00003f4c*/ BEQ         VouBufGetFreeByNode_x3f6c
    /*00003f50*/ CMP         LR, R3 
    /*00003f54*/ LDR         IP, [R3] 
    /*00003f58*/ MOV         R1, R3 
    /*00003f5c*/ BNE         VouBufGetFreeByNode_x3f38
    /*00003f60*/ MOV         R0, #0 
    VouBufGetFreeByNode_x3f64:
    /*00003f64*/ ADD         SP, SP, #8 
    /*00003f68*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouBufGetFreeByNode_x3f6c:
    /*00003f6c*/ LDR         IP, [R1, #4] 
    /*00003f70*/ MOV         R2, #256                    @ 0x100 
    /*00003f74*/ LDR         LR, [R1] 
    /*00003f78*/ MOVT        R2, #16 
    /*00003f7c*/ MOV         R3, #512                    @ 0x200 
    /*00003f80*/ MOVT        R3, #32 
    /*00003f84*/ STR         IP, [LR, #4] 
    /*00003f88*/ STR         LR, [IP] 
    /*00003f8c*/ STM         R1, {R2, R3} 
    /*00003f90*/ LDR         R3, [R8, #200]              @ 0xc8 
    /*00003f94*/ SUB         R3, R3, #1 
    /*00003f98*/ STR         R3, [R8, #200]              @ 0xc8 
    /*00003f9c*/ ADD         SP, SP, #8 
    /*00003fa0*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouBufGetFreeByNode_x3fa4:
    /*00003fa4*/ MOV         R3, #219                    @ 0xdb 
    /*00003fa8*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ab4] 
    /*00003fac*/ STR         R3, [SP] 
    /*00003fb0*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ab4] 
    /*00003fb4*/ LDR         R3, [PC, #16]               @ 0x0000000000003fcc 
    /*00003fb8*/ MOV         R1, #15 
    /*00003fbc*/ MOV         R0, #4 
    /*00003fc0*/ BL          0x0000000000003FC0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00003fc4*/ MOV         R0, #0 
    /*00003fc8*/ B           VouBufGetFreeByNode_x3f64
    /*00003fcc*/ ANDEQ       R0, R0, R4, LSR #4 
FUNC_END VouBufGetFreeByNode


FUNC_BEGIN VouBufPutFree
    /*00003fd0*/ LDR         R3, [R0, #216]              @ 0xd8 
    /*00003fd4*/ ADD         R2, R1, #4 
    /*00003fd8*/ ADD         IP, R0, #212                @ 0xd4 
    /*00003fdc*/ STR         R2, [R0, #216]              @ 0xd8 
    /*00003fe0*/ STR         IP, [R1, #4] 
    /*00003fe4*/ STR         R3, [R1, #8] 
    /*00003fe8*/ STR         R2, [R3] 
    /*00003fec*/ LDR         R3, [R0, #200]              @ 0xc8 
    /*00003ff0*/ ADD         R3, R3, #1 
    /*00003ff4*/ STR         R3, [R0, #200]              @ 0xc8 
    /*00003ff8*/ BX          LR 
FUNC_END VouBufPutFree


FUNC_BEGIN VouBufGetUser
    /*00003ffc*/ MOV         R2, R0 
    /*00004000*/ PUSH        {R4, LR} 
    /*00004004*/ SUB         SP, SP, #8 
    /*00004008*/ LDR         R3, [R2, #228]!             @ 0xe4 
    /*0000400c*/ CMP         R3, R2 
    /*00004010*/ BEQ         VouBufGetUser_x4058
    /*00004014*/ LDR         LR, [R3, #4] 
    /*00004018*/ MOV         R1, R0 
    /*0000401c*/ LDR         R4, [R3] 
    /*00004020*/ MOV         IP, #256                    @ 0x100 
    /*00004024*/ MOV         R2, #512                    @ 0x200 
    /*00004028*/ MOVT        IP, #16 
    /*0000402c*/ SUB         R0, R3, #4 
    /*00004030*/ MOVT        R2, #32 
    /*00004034*/ STR         LR, [R4, #4] 
    /*00004038*/ STR         R4, [LR] 
    /*0000403c*/ STR         IP, [R3] 
    /*00004040*/ STR         R2, [R3, #4] 
    /*00004044*/ LDR         R3, [R1, #204]              @ 0xcc 
    /*00004048*/ SUB         R3, R3, #1 
    /*0000404c*/ STR         R3, [R1, #204]              @ 0xcc 
    VouBufGetUser_x4050:
    /*00004050*/ ADD         SP, SP, #8 
    /*00004054*/ POP         {R4, PC} 
    VouBufGetUser_x4058:
    /*00004058*/ MOV         R3, #268                    @ 0x10c 
    /*0000405c*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ae0] 
    /*00004060*/ STR         R3, [SP] 
    /*00004064*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ae0] 
    /*00004068*/ LDR         R3, [PC, #16]               @ 0x0000000000004080 
    /*0000406c*/ MOV         R1, #15 
    /*00004070*/ MOV         R0, #4 
    /*00004074*/ BL          0x0000000000004074          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004078*/ MOV         R0, #0 
    /*0000407c*/ B           VouBufGetUser_x4050
    /*00004080*/ ANDEQ       R0, R0, R8, LSR R2 
FUNC_END VouBufGetUser


FUNC_BEGIN VouBufPutUser
    /*00004084*/ LDR         R3, [R0, #232]              @ 0xe8 
    /*00004088*/ ADD         R2, R1, #4 
    /*0000408c*/ ADD         IP, R0, #228                @ 0xe4 
    /*00004090*/ STR         R2, [R0, #232]              @ 0xe8 
    /*00004094*/ STR         IP, [R1, #4] 
    /*00004098*/ STR         R3, [R1, #8] 
    /*0000409c*/ STR         R2, [R3] 
    /*000040a0*/ LDR         R3, [R0, #204]              @ 0xcc 
    /*000040a4*/ ADD         R3, R3, #1 
    /*000040a8*/ STR         R3, [R0, #204]              @ 0xcc 
    /*000040ac*/ BX          LR 
FUNC_END VouBufPutUser


FUNC_BEGIN VouBufQueryBusy
    /*000040b0*/ LDR         R3, [R0, #220]!             @ 0xdc 
    /*000040b4*/ CMP         R3, R0 
    /*000040b8*/ BEQ         VouBufQueryBusy_x40c4
    /*000040bc*/ SUB         R0, R3, #4 
    /*000040c0*/ BX          LR 
    VouBufQueryBusy_x40c4:
    /*000040c4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000040c8*/ SUB         SP, SP, #12 
    /*000040cc*/ MOVW        R3, #311                    @ 0x137 
    /*000040d0*/ MOV         R1, #15 
    /*000040d4*/ STR         R3, [SP] 
    /*000040d8*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a34] 
    /*000040dc*/ LDR         R3, [PC, #20]               @ 0x00000000000040f8 
    /*000040e0*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a34] 
    /*000040e4*/ MOV         R0, #4 
    /*000040e8*/ BL          0x00000000000040E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000040ec*/ MOV         R0, #0 
    /*000040f0*/ ADD         SP, SP, #12 
    /*000040f4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000040f8*/ ANDEQ       R0, R0, R8, ASR #4 
FUNC_END VouBufQueryBusy


FUNC_BEGIN VouBufQueryFree
    /*000040fc*/ LDR         R3, [R0, #212]!             @ 0xd4 
    /*00004100*/ CMP         R3, R0 
    /*00004104*/ BEQ         VouBufQueryFree_x4110
    /*00004108*/ SUB         R0, R3, #4 
    /*0000410c*/ BX          LR 
    VouBufQueryFree_x4110:
    /*00004110*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00004114*/ SUB         SP, SP, #12 
    /*00004118*/ MOV         R3, #340                    @ 0x154 
    /*0000411c*/ MOV         R1, #15 
    /*00004120*/ STR         R3, [SP] 
    /*00004124*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ab4] 
    /*00004128*/ LDR         R3, [PC, #20]               @ 0x0000000000004144 
    /*0000412c*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ab4] 
    /*00004130*/ MOV         R0, #4 
    /*00004134*/ BL          0x0000000000004134          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004138*/ MOV         R0, #0 
    /*0000413c*/ ADD         SP, SP, #12 
    /*00004140*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00004144*/ ANDEQ       R0, R0, R8, ASR R2 
FUNC_END VouBufQueryFree


FUNC_BEGIN VouBufQueryFreeNth
    /*00004148*/ LDR         R3, [R0, #212]!             @ 0xd4 
    /*0000414c*/ CMP         R3, R0 
    /*00004150*/ BEQ         VouBufQueryFreeNth_x4178
    /*00004154*/ CMP         R1, #0 
    /*00004158*/ SUB         R1, R1, #1 
    /*0000415c*/ BEQ         VouBufQueryFreeNth_x4170
    VouBufQueryFreeNth_x4160:
    /*00004160*/ SUB         R1, R1, #1 
    /*00004164*/ LDR         R3, [R3] 
    /*00004168*/ CMN         R1, #1 
    /*0000416c*/ BNE         VouBufQueryFreeNth_x4160
    VouBufQueryFreeNth_x4170:
    /*00004170*/ SUB         R0, R3, #4 
    /*00004174*/ BX          LR 
    VouBufQueryFreeNth_x4178:
    /*00004178*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000417c*/ SUB         SP, SP, #12 
    /*00004180*/ MOVW        R3, #365                    @ 0x16d 
    /*00004184*/ MOV         R1, #15 
    /*00004188*/ STR         R3, [SP] 
    /*0000418c*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1ab4] 
    /*00004190*/ LDR         R3, [PC, #20]               @ 0x00000000000041ac 
    /*00004194*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1ab4] 
    /*00004198*/ MOV         R0, #4 
    /*0000419c*/ BL          0x000000000000419C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000041a0*/ MOV         R0, #0 
    /*000041a4*/ ADD         SP, SP, #12 
    /*000041a8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000041ac*/ ANDEQ       R0, R0, R8, ROR #4 
FUNC_END VouBufQueryFreeNth


FUNC_BEGIN VouBufIsBusyEmpty
    /*000041b0*/ ADD         R3, R0, #220                @ 0xdc 
    /*000041b4*/ LDR         R0, [R0, #220]              @ 0xdc 
    /*000041b8*/ SUB         R0, R0, R3 
    /*000041bc*/ CLZ         R0, R0 
    /*000041c0*/ LSR         R0, R0, #5 
    /*000041c4*/ BX          LR 
FUNC_END VouBufIsBusyEmpty


FUNC_BEGIN VouBufISUsrEmpty
    /*000041c8*/ ADD         R3, R0, #228                @ 0xe4 
    /*000041cc*/ LDR         R0, [R0, #228]              @ 0xe4 
    /*000041d0*/ SUB         R0, R0, R3 
    /*000041d4*/ CLZ         R0, R0 
    /*000041d8*/ LSR         R0, R0, #5 
    /*000041dc*/ BX          LR 
FUNC_END VouBufISUsrEmpty


FUNC_BEGIN VouBufGetBusyLen
    /*000041e0*/ PUSH        {R4, R5, R6, LR} 
    /*000041e4*/ SUBS        R4, R1, #0 
    /*000041e8*/ MOV         R5, R0 
    /*000041ec*/ BEQ         VouBufGetBusyLen_x41fc
    VouBufGetBusyLen_x41f0:
    /*000041f0*/ LDR         R3, [R5, #196]              @ 0xc4 
    /*000041f4*/ STR         R3, [R4] 
    /*000041f8*/ POP         {R4, R5, R6, PC} 
    VouBufGetBusyLen_x41fc:
    /*000041fc*/ MOVW        R3, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b0c] 
    /*00004200*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a74] 
    /*00004204*/ MOVT        R3, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b0c] 
    /*00004208*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a74] 
    /*0000420c*/ MOVW        R2, #414                    @ 0x19e 
    /*00004210*/ LDR         R1, [PC, #4]                @ 0x000000000000421c 
    /*00004214*/ BL          0x0000000000004214          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00004218*/ B           VouBufGetBusyLen_x41f0
    /*0000421c*/ ANDEQ       R0, R0, IP, ROR R2 
FUNC_END VouBufGetBusyLen


FUNC_BEGIN VouBufAddBlkVb
    /*00004220*/ PUSH        {R4, R5, R6, LR} 
    /*00004224*/ MOV         R4, R0 
    /*00004228*/ SUB         SP, SP, #16 
    /*0000422c*/ MOV         R0, #1 
    /*00004230*/ BL          0x0000000000004230          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004234*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*00004238*/ LDR         R1, [R0, #84]               @ 0x54 
    /*0000423c*/ LDR         R0, [R4, #328]              @ 0x148 
    /*00004240*/ BLX         R1 
    /*00004244*/ CMP         R0, #1 
    /*00004248*/ BEQ         VouBufAddBlkVb_x42d4
    VouBufAddBlkVb_x424c:
    /*0000424c*/ LDR         R0, [R4, #684]              @ 0x2ac 
    /*00004250*/ CMP         R0, #1 
    /*00004254*/ BEQ         VouBufAddBlkVb_x4268
    VouBufAddBlkVb_x4258:
    /*00004258*/ MOV         R5, #0 
    VouBufAddBlkVb_x425c:
    /*0000425c*/ MOV         R0, R5 
    /*00004260*/ ADD         SP, SP, #16 
    /*00004264*/ POP         {R4, R5, R6, PC} 
    VouBufAddBlkVb_x4268:
    /*00004268*/ BL          0x0000000000004268          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000426c*/ ADD         R6, R4, #464                @ 0x1d0 
    /*00004270*/ LDRD        R2, [R6, #-8] 
    /*00004274*/ LDR         R1, [R0, #84]               @ 0x54 
    /*00004278*/ LDR         R0, [R4, #664]              @ 0x298 
    /*0000427c*/ BLX         R1 
    /*00004280*/ CMP         R0, #1 
    /*00004284*/ MOV         R5, R0 
    /*00004288*/ BNE         VouBufAddBlkVb_x4258
    /*0000428c*/ BL          0x000000000000428C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004290*/ LDR         IP, [R4, #664]              @ 0x298 
    /*00004294*/ LDRD        R2, [R6, #-8] 
    /*00004298*/ STR         R5, [SP] 
    /*0000429c*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*000042a0*/ MOV         R0, IP 
    /*000042a4*/ BLX         R1 
    /*000042a8*/ SUBS        R5, R0, #0 
    /*000042ac*/ BEQ         VouBufAddBlkVb_x425c
    /*000042b0*/ LDR         IP, [PC, #104]              @ 0x0000000000004320 
    /*000042b4*/ MOVW        R1, #453                    @ 0x1c5 
    /*000042b8*/ LDRD        R2, [R6, #-8] 
    /*000042bc*/ MOVW        R0, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b54] 
    /*000042c0*/ STR         R5, [SP, #8] 
    /*000042c4*/ MOVT        R0, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b54] 
    /*000042c8*/ STM         SP, {R1, IP} 
    /*000042cc*/ BL          0x00000000000042CC          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000042d0*/ B           VouBufAddBlkVb_x425c
    VouBufAddBlkVb_x42d4:
    /*000042d4*/ MOV         R5, R0 
    /*000042d8*/ BL          0x00000000000042D8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000042dc*/ LDR         IP, [R4, #328]              @ 0x148 
    /*000042e0*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*000042e4*/ STR         R5, [SP] 
    /*000042e8*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*000042ec*/ MOV         R0, IP 
    /*000042f0*/ BLX         R1 
    /*000042f4*/ SUBS        R5, R0, #0 
    /*000042f8*/ BEQ         VouBufAddBlkVb_x424c
    /*000042fc*/ LDR         IP, [PC, #28]               @ 0x0000000000004320 
    /*00004300*/ MOVW        R1, #438                    @ 0x1b6 
    /*00004304*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*00004308*/ MOVW        R0, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b1c] 
    /*0000430c*/ STR         R5, [SP, #8] 
    /*00004310*/ MOVT        R0, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b1c] 
    /*00004314*/ STM         SP, {R1, IP} 
    /*00004318*/ BL          0x0000000000004318          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0000431c*/ B           VouBufAddBlkVb_x425c
    /*00004320*/ MULEQ       R0, R0, R2 
FUNC_END VouBufAddBlkVb


FUNC_BEGIN VouBufSubBlkVb
    /*00004324*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00004328*/ MOV         R4, R0 
    /*0000432c*/ SUB         SP, SP, #20 
    /*00004330*/ MOV         R0, #1 
    /*00004334*/ BL          0x0000000000004334          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004338*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*0000433c*/ LDR         R1, [R0, #84]               @ 0x54 
    /*00004340*/ LDR         R0, [R4, #328]              @ 0x148 
    /*00004344*/ BLX         R1 
    /*00004348*/ CMP         R0, #1 
    /*0000434c*/ BEQ         VouBufSubBlkVb_x43d4
    VouBufSubBlkVb_x4350:
    /*00004350*/ LDR         R0, [R4, #684]              @ 0x2ac 
    /*00004354*/ CMP         R0, #1 
    /*00004358*/ BEQ         VouBufSubBlkVb_x4368
    VouBufSubBlkVb_x435c:
    /*0000435c*/ MOV         R0, #0 
    /*00004360*/ ADD         SP, SP, #20 
    /*00004364*/ POP         {R4, R5, R6, R7, PC} 
    VouBufSubBlkVb_x4368:
    /*00004368*/ BL          0x0000000000004368          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000436c*/ ADD         R5, R4, #464                @ 0x1d0 
    /*00004370*/ LDRD        R2, [R5, #-8] 
    /*00004374*/ LDR         R1, [R0, #84]               @ 0x54 
    /*00004378*/ LDR         R0, [R4, #664]              @ 0x298 
    /*0000437c*/ BLX         R1 
    /*00004380*/ CMP         R0, #1 
    /*00004384*/ MOV         R6, R0 
    /*00004388*/ BNE         VouBufSubBlkVb_x435c
    /*0000438c*/ BL          0x000000000000438C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004390*/ LDR         IP, [R4, #664]              @ 0x298 
    /*00004394*/ LDRD        R2, [R5, #-8] 
    /*00004398*/ STR         R6, [SP] 
    /*0000439c*/ LDR         R1, [R0, #64]               @ 0x40 
    /*000043a0*/ MOV         R0, IP 
    /*000043a4*/ BLX         R1 
    /*000043a8*/ CMP         R0, #0 
    /*000043ac*/ BEQ         VouBufSubBlkVb_x435c
    /*000043b0*/ LDR         R1, [PC, #116]              @ 0x000000000000442c 
    /*000043b4*/ MOV         IP, #488                    @ 0x1e8 
    /*000043b8*/ LDRD        R2, [R5, #-8] 
    /*000043bc*/ MOVW        R0, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1bc8] 
    /*000043c0*/ STR         IP, [SP] 
    /*000043c4*/ MOVT        R0, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1bc8] 
    /*000043c8*/ STR         R1, [SP, #4] 
    /*000043cc*/ BL          0x00000000000043CC          @ osal_printk [R_ARM_CALL: +0x0] 
    /*000043d0*/ B           VouBufSubBlkVb_x435c
    VouBufSubBlkVb_x43d4:
    /*000043d4*/ MOV         R5, R0 
    /*000043d8*/ BL          0x00000000000043D8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000043dc*/ LDR         IP, [R4, #328]              @ 0x148 
    /*000043e0*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*000043e4*/ STR         R5, [SP] 
    /*000043e8*/ LDR         R1, [R0, #64]               @ 0x40 
    /*000043ec*/ MOV         R0, IP 
    /*000043f0*/ BLX         R1 
    /*000043f4*/ SUBS        R3, R0, #0 
    /*000043f8*/ BEQ         VouBufSubBlkVb_x4350
    /*000043fc*/ LDRD        R6, [R4, #120]              @ 0x78 
    /*00004400*/ MOVW        R1, #474                    @ 0x1da 
    /*00004404*/ LDR         R2, [PC, #32]               @ 0x000000000000442c 
    /*00004408*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1b8c] 
    /*0000440c*/ STR         R3, [SP, #8] 
    /*00004410*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1b8c] 
    /*00004414*/ MOV         R3, R7 
    /*00004418*/ STR         R1, [SP] 
    /*0000441c*/ STR         R2, [SP, #4] 
    /*00004420*/ MOV         R2, R6 
    /*00004424*/ BL          0x0000000000004424          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00004428*/ B           VouBufSubBlkVb_x4350
    /*0000442c*/ ANDEQ       R0, R0, R0, LSR #5 
FUNC_END VouBufSubBlkVb


FUNC_BEGIN VouBufMallocSdTde
    /*00004430*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00004434*/ MOVW        R5, #12192                  @ 0x2fa0 
    /*00004438*/ MUL         R5, R5, R0 
    /*0000443c*/ MOVW        R6, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00004440*/ MOVT        R6, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00004444*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00004448*/ MOV         R4, #0 
    /*0000444c*/ MOV         R7, R0 
    /*00004450*/ ADD         R8, R6, R5 
    /*00004454*/ STR         R2, [SP, #20] 
    /*00004458*/ STR         R4, [SP, #28] 
    /*0000445c*/ LDR         R9, [R8, #268]              @ 0x10c 
    /*00004460*/ STR         R4, [SP, #24] 
    /*00004464*/ CMN         R9, #1 
    /*00004468*/ STR         R4, [SP, #32] 
    /*0000446c*/ STR         R4, [SP, #36]               @ 0x24 
    /*00004470*/ BEQ         VouBufMallocSdTde_x44a4
    /*00004474*/ STR         R0, [SP, #4] 
    /*00004478*/ MOV         R3, #516                    @ 0x204 
    /*0000447c*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1bf8] 
    /*00004480*/ STR         R3, [SP] 
    /*00004484*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1bf8] 
    /*00004488*/ LDR         R3, [PC, #164]              @ 0x0000000000004534 
    /*0000448c*/ MOV         R1, #15 
    /*00004490*/ MOV         R0, #4 
    /*00004494*/ BL          0x0000000000004494          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004498*/ MOV         R0, R4 
    VouBufMallocSdTde_x449c:
    /*0000449c*/ ADD         SP, SP, #44                 @ 0x2c 
    /*000044a0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouBufMallocSdTde_x44a4:
    /*000044a4*/ MOV         FP, R1 
    /*000044a8*/ MOV         SL, R3 
    /*000044ac*/ MOV         R1, #16 
    /*000044b0*/ MOV         R3, R0 
    /*000044b4*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c34] 
    /*000044b8*/ ADD         R0, SP, #24 
    /*000044bc*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c34] 
    /*000044c0*/ ADD         R5, R5, #268                @ 0x10c 
    /*000044c4*/ BL          0x00000000000044C4          @ osal_snprintf [R_ARM_CALL: +0x0] 
    /*000044c8*/ MOV         R0, #1 
    /*000044cc*/ BL          0x00000000000044CC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000044d0*/ STR         R4, [SP, #8] 
    /*000044d4*/ ADD         R3, SP, #24 
    /*000044d8*/ STR         SL, [SP] 
    /*000044dc*/ STR         R3, [SP, #4] 
    /*000044e0*/ MOV         R2, FP 
    /*000044e4*/ MOV         R3, R4 
    /*000044e8*/ LDR         R1, [SP, #20] 
    /*000044ec*/ LDR         R4, [R0] 
    /*000044f0*/ ADD         R0, R6, R5 
    /*000044f4*/ BLX         R4 
    /*000044f8*/ CMP         R0, #0 
    /*000044fc*/ BEQ         VouBufMallocSdTde_x449c
    /*00004500*/ STR         R7, [SP, #4] 
    /*00004504*/ MOVW        R3, #525                    @ 0x20d 
    /*00004508*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c44] 
    /*0000450c*/ STR         R3, [SP] 
    /*00004510*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c44] 
    /*00004514*/ LDR         R3, [PC, #24]               @ 0x0000000000004534 
    /*00004518*/ MOV         R1, #15 
    /*0000451c*/ MOV         R0, #3 
    /*00004520*/ STR         R9, [R8, #268]              @ 0x10c 
    /*00004524*/ BL          0x0000000000004524          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004528*/ MOVW        R0, #32780                  @ 0x800c 
    /*0000452c*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00004530*/ B           VouBufMallocSdTde_x449c
    /*00004534*/ @           <UNDEFINED> instruction: 0x000002b0 
FUNC_END VouBufMallocSdTde


FUNC_BEGIN VouBufFreeSdTde
    /*00004538*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000453c*/ MOVW        R6, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00004540*/ MOVT        R6, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00004544*/ MOVW        R5, #12192                  @ 0x2fa0 
    /*00004548*/ SUB         SP, SP, #24 
    /*0000454c*/ MOV         R4, #0 
    /*00004550*/ MLA         R5, R5, R0, R6 
    /*00004554*/ MOV         R7, R0 
    /*00004558*/ STR         R4, [SP, #20] 
    /*0000455c*/ LDR         R3, [R5, #268]              @ 0x10c 
    /*00004560*/ CMN         R3, #1 
    /*00004564*/ MOVNE       R8, #21 
    /*00004568*/ BEQ         VouBufFreeSdTde_x4614
    VouBufFreeSdTde_x456c:
    /*0000456c*/ MOV         R4, #0 
    VouBufFreeSdTde_x4570:
    /*00004570*/ MOV         R0, #1 
    /*00004574*/ BL          0x0000000000004574          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004578*/ ADD         R2, SP, #20 
    /*0000457c*/ MOV         R1, R4 
    /*00004580*/ LDR         R3, [R0, #96]               @ 0x60 
    /*00004584*/ LDR         R0, [R5, #268]              @ 0x10c 
    /*00004588*/ BLX         R3 
    /*0000458c*/ CMP         R0, #0 
    /*00004590*/ BNE         VouBufFreeSdTde_x45a0
    /*00004594*/ LDR         R3, [SP, #20] 
    /*00004598*/ CMP         R3, #0 
    /*0000459c*/ BNE         VouBufFreeSdTde_x45d8
    VouBufFreeSdTde_x45a0:
    /*000045a0*/ ADD         R4, R4, #1 
    /*000045a4*/ CMP         R4, #23 
    /*000045a8*/ BNE         VouBufFreeSdTde_x4570
    VouBufFreeSdTde_x45ac:
    /*000045ac*/ MOV         R0, #1 
    /*000045b0*/ BL          0x00000000000045B0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000045b4*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*000045b8*/ MLA         R6, R3, R7, R6 
    /*000045bc*/ LDR         R3, [R0, #4] 
    /*000045c0*/ LDR         R0, [R6, #268]              @ 0x10c 
    /*000045c4*/ BLX         R3 
    /*000045c8*/ CMP         R0, #0 
    /*000045cc*/ BNE         VouBufFreeSdTde_x4644
    VouBufFreeSdTde_x45d0:
    /*000045d0*/ ADD         SP, SP, #24 
    /*000045d4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouBufFreeSdTde_x45d8:
    /*000045d8*/ BL          0x00000000000045D8          @ osal_msleep [R_ARM_CALL: +0x0] 
    /*000045dc*/ SUBS        R8, R8, #1 
    /*000045e0*/ BNE         VouBufFreeSdTde_x456c
    /*000045e4*/ LDR         R3, [SP, #20] 
    /*000045e8*/ MOVW        R1, #579                    @ 0x243 
    /*000045ec*/ STR         R4, [SP, #4] 
    /*000045f0*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1cc4] 
    /*000045f4*/ STR         R1, [SP] 
    /*000045f8*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1cc4] 
    /*000045fc*/ STR         R3, [SP, #8] 
    /*00004600*/ MOV         R1, #15 
    /*00004604*/ LDR         R3, [PC, #104]              @ 0x0000000000004674 
    /*00004608*/ MOV         R0, #3 
    /*0000460c*/ BL          0x000000000000460C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004610*/ B           VouBufFreeSdTde_x45ac
    VouBufFreeSdTde_x4614:
    /*00004614*/ STR         R0, [SP, #4] 
    /*00004618*/ MOV         R3, #548                    @ 0x224 
    /*0000461c*/ MOV         R1, #15 
    /*00004620*/ STR         R3, [SP] 
    /*00004624*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1c84] 
    /*00004628*/ LDR         R3, [PC, #68]               @ 0x0000000000004674 
    /*0000462c*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1c84] 
    /*00004630*/ MOV         R0, #4 
    /*00004634*/ BL          0x0000000000004634          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004638*/ MOV         R0, R4 
    /*0000463c*/ ADD         SP, SP, #24 
    /*00004640*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouBufFreeSdTde_x4644:
    /*00004644*/ MOVW        R3, #586                    @ 0x24a 
    /*00004648*/ STR         R7, [SP, #4] 
    /*0000464c*/ STR         R3, [SP] 
    /*00004650*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d10] 
    /*00004654*/ LDR         R3, [PC, #24]               @ 0x0000000000004674 
    /*00004658*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d10] 
    /*0000465c*/ MOV         R1, #15 
    /*00004660*/ MOV         R0, #3 
    /*00004664*/ BL          0x0000000000004664          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004668*/ MOVW        R0, #32786                  @ 0x8012 
    /*0000466c*/ MOVT        R0, #40961                  @ 0xa001 
    /*00004670*/ B           VouBufFreeSdTde_x45d0
    /*00004674*/ ANDEQ       R0, R0, R4, ASR #5 
FUNC_END VouBufFreeSdTde


FUNC_BEGIN VouBufFillDispNode
    /*00004678*/ MOVW        R3, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000467c*/ MOVT        R3, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00004680*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00004684*/ MOVW        R5, #12192                  @ 0x2fa0 
    /*00004688*/ MLA         R5, R5, R0, R3 
    /*0000468c*/ LDR         R4, [R1] 
    /*00004690*/ SUB         SP, SP, #80                 @ 0x50 
    /*00004694*/ MOV         SL, R0 
    /*00004698*/ MOV         R0, #2 
    /*0000469c*/ MOV         R6, #0 
    /*000046a0*/ STR         R6, [SP, #32] 
    /*000046a4*/ STR         R6, [SP, #36]               @ 0x24 
    /*000046a8*/ LDR         IP, [R5, #128]              @ 0x80 
    /*000046ac*/ LDR         R1, [R5, #132]              @ 0x84 
    /*000046b0*/ LDR         R2, [R5, #152]              @ 0x98 
    /*000046b4*/ LDR         R3, [R5, #140]              @ 0x8c 
    /*000046b8*/ STR         IP, [SP, #12] 
    /*000046bc*/ STR         R1, [SP, #16] 
    /*000046c0*/ STR         R2, [SP, #28] 
    /*000046c4*/ STR         R3, [SP, #8] 
    /*000046c8*/ LDR         R9, [R5, #268]              @ 0x10c 
    /*000046cc*/ STR         R6, [SP, #40]               @ 0x28 
    /*000046d0*/ STR         R6, [SP, #24] 
    /*000046d4*/ STR         R6, [SP, #20] 
    /*000046d8*/ BL          0x00000000000046D8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000046dc*/ ADD         R1, SP, #44                 @ 0x2c 
    /*000046e0*/ LDR         R3, [R0, #120]              @ 0x78 
    /*000046e4*/ ADD         R0, SP, #8 
    /*000046e8*/ BLX         R3 
    /*000046ec*/ CMN         R9, #1 
    /*000046f0*/ LDR         R8, [SP, #60]               @ 0x3c 
    /*000046f4*/ BEQ         VouBufFillDispNode_x47e4
    /*000046f8*/ MOV         R0, #1 
    /*000046fc*/ BL          0x00000000000046FC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004700*/ MOV         R1, #1 
    /*00004704*/ LDR         R3, [R0, #8] 
    /*00004708*/ MOV         R0, R9 
    /*0000470c*/ BLX         R3 
    /*00004710*/ CMN         R0, #1 
    /*00004714*/ MOV         R7, R0 
    /*00004718*/ BEQ         VouBufFillDispNode_x4814
    /*0000471c*/ STR         R9, [R4, #328]              @ 0x148 
    /*00004720*/ MOV         R3, #45                     @ 0x2d 
    /*00004724*/ STR         R3, [R4, #332]              @ 0x14c 
    /*00004728*/ MOV         R0, #1 
    /*0000472c*/ LDR         R3, [R5, #128]              @ 0x80 
    /*00004730*/ STR         R3, [R4, #720]              @ 0x2d0 
    /*00004734*/ LDR         R3, [R5, #132]              @ 0x84 
    /*00004738*/ STR         R3, [R4, #724]              @ 0x2d4 
    /*0000473c*/ BL          0x000000000000473C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004740*/ LDR         R3, [R0, #44]               @ 0x2c 
    /*00004744*/ MOV         R0, R7 
    /*00004748*/ BLX         R3 
    /*0000474c*/ STR         R0, [R4, #700]              @ 0x2bc 
    /*00004750*/ MOV         R0, #1 
    /*00004754*/ BL          0x0000000000004754          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004758*/ LDR         R3, [R0, #52]               @ 0x34 
    /*0000475c*/ MOV         R0, R7 
    /*00004760*/ BLX         R3 
    /*00004764*/ LDR         LR, [SP, #68]               @ 0x44 
    /*00004768*/ STR         R8, [R4, #44]               @ 0x2c 
    /*0000476c*/ MOV         IP, #4 
    /*00004770*/ STR         R8, [R4, #48]               @ 0x30 
    /*00004774*/ ADDS        R2, R0, LR 
    /*00004778*/ STRD        R0, [R4, #120]              @ 0x78 
    /*0000477c*/ ADC         R3, R1, #0 
    /*00004780*/ STRD        R2, [R4, #128]              @ 0x80 
    /*00004784*/ LDR         R1, [R5, #128]              @ 0x80 
    /*00004788*/ MOV         R3, #0 
    /*0000478c*/ MOV         R2, #0 
    /*00004790*/ MOV         R0, R6 
    /*00004794*/ STR         R1, [R4] 
    /*00004798*/ LDR         R1, [R5, #132]              @ 0x84 
    /*0000479c*/ STR         R1, [R4, #4] 
    /*000047a0*/ LDR         R1, [R5, #140]              @ 0x8c 
    /*000047a4*/ STRH        R6, [R4, #216]              @ 0xd8 
    /*000047a8*/ STRH        R6, [R4, #218]              @ 0xda 
    /*000047ac*/ STR         R1, [R4, #12] 
    /*000047b0*/ STRH        R6, [R4, #220]              @ 0xdc 
    /*000047b4*/ STRH        R6, [R4, #222]              @ 0xde 
    /*000047b8*/ STR         R6, [R4, #20] 
    /*000047bc*/ STR         R6, [R4, #16] 
    /*000047c0*/ STR         IP, [R4, #8] 
    /*000047c4*/ STRD        R2, [R4, #240]              @ 0xf0 
    /*000047c8*/ STRD        R2, [R4, #144]              @ 0x90 
    /*000047cc*/ STRD        R2, [R4, #152]              @ 0x98 
    /*000047d0*/ STRD        R2, [R4, #160]              @ 0xa0 
    /*000047d4*/ LDR         R3, [R5, #152]              @ 0x98 
    /*000047d8*/ STR         R3, [R4, #24] 
    VouBufFillDispNode_x47dc:
    /*000047dc*/ ADD         SP, SP, #80                 @ 0x50 
    /*000047e0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouBufFillDispNode_x47e4:
    /*000047e4*/ MOVW        R3, #631                    @ 0x277 
    /*000047e8*/ STR         SL, [SP, #4] 
    /*000047ec*/ STR         R3, [SP] 
    /*000047f0*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d50] 
    /*000047f4*/ LDR         R3, [PC, #72]               @ 0x0000000000004844 
    /*000047f8*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d50] 
    /*000047fc*/ MOV         R1, #15 
    /*00004800*/ MOV         R0, #3 
    /*00004804*/ BL          0x0000000000004804          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004808*/ MOVW        R0, #32780                  @ 0x800c 
    /*0000480c*/ MOVT        R0, #40961                  @ 0xa001 
    /*00004810*/ B           VouBufFillDispNode_x47dc
    VouBufFillDispNode_x4814:
    /*00004814*/ MOVW        R3, #638                    @ 0x27e 
    /*00004818*/ STR         SL, [SP, #4] 
    /*0000481c*/ STR         R3, [SP] 
    /*00004820*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1d90] 
    /*00004824*/ LDR         R3, [PC, #24]               @ 0x0000000000004844 
    /*00004828*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1d90] 
    /*0000482c*/ MOV         R1, #15 
    /*00004830*/ MOV         R0, #6 
    /*00004834*/ BL          0x0000000000004834          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004838*/ MOVW        R0, #32786                  @ 0x8012 
    /*0000483c*/ MOVT        R0, #40961                  @ 0xa001 
    /*00004840*/ B           VouBufFillDispNode_x47dc
    /*00004844*/ LDRDEQ      R0, [R0], -R4 
FUNC_END VouBufFillDispNode


FUNC_BEGIN VouBufClearDispNode
    /*00004848*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000484c*/ SUB         SP, SP, #28 
    /*00004850*/ LDR         R4, [R0] 
    /*00004854*/ MOV         R0, #1 
    /*00004858*/ BL          0x0000000000004858          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000485c*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*00004860*/ LDR         R1, [R0, #84]               @ 0x54 
    /*00004864*/ LDR         R0, [R4, #328]              @ 0x148 
    /*00004868*/ BLX         R1 
    /*0000486c*/ CMP         R0, #1 
    /*00004870*/ BEQ         VouBufClearDispNode_x489c
    VouBufClearDispNode_x4874:
    /*00004874*/ MOV         R2, #752                    @ 0x2f0 
    /*00004878*/ MOV         R1, #0 
    /*0000487c*/ MOV         R0, R4 
    /*00004880*/ BL          0x0000000000004880          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00004884*/ MVN         R3, #0 
    /*00004888*/ MOV         R0, #0 
    /*0000488c*/ STR         R3, [R4, #328]              @ 0x148 
    /*00004890*/ STR         R3, [R4, #700]              @ 0x2bc 
    /*00004894*/ ADD         SP, SP, #28 
    /*00004898*/ POP         {R4, R5, R6, R7, PC} 
    VouBufClearDispNode_x489c:
    /*0000489c*/ MOV         R5, R0 
    /*000048a0*/ BL          0x00000000000048A0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000048a4*/ LDR         IP, [R4, #328]              @ 0x148 
    /*000048a8*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*000048ac*/ STR         R5, [SP] 
    /*000048b0*/ LDR         R1, [R0, #64]               @ 0x40 
    /*000048b4*/ MOV         R0, IP 
    /*000048b8*/ BLX         R1 
    /*000048bc*/ CMP         R0, #0 
    /*000048c0*/ BEQ         VouBufClearDispNode_x4874
    /*000048c4*/ STR         R0, [SP, #16] 
    /*000048c8*/ MOV         R3, #696                    @ 0x2b8 
    /*000048cc*/ LDRD        R6, [R4, #120]              @ 0x78 
    /*000048d0*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1dd0] 
    /*000048d4*/ STR         R3, [SP] 
    /*000048d8*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1dd0] 
    /*000048dc*/ LDR         R3, [PC, #16]               @ 0x00000000000048f4 
    /*000048e0*/ MOV         R1, #15 
    /*000048e4*/ STRD        R6, [SP, #8] 
    /*000048e8*/ MOV         R0, #3 
    /*000048ec*/ BL          0x00000000000048EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000048f0*/ B           VouBufClearDispNode_x4874
    /*000048f4*/ ANDEQ       R0, R0, R8, ROR #5 
FUNC_END VouBufClearDispNode


FUNC_BEGIN VouBufFreeChnBusyList
    /*000048f8*/ ADD         R1, R1, R0, LSL #2 
    /*000048fc*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00004900*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00004904*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00004908*/ LDR         R4, [R3, R1, LSL #2] 
    /*0000490c*/ CMP         R4, #0 
    /*00004910*/ BEQ         VouBufFreeChnBusyList_x498c
    VouBufFreeChnBusyList_x4914:
    /*00004914*/ ADD         R5, R4, #8960               @ 0x2300 
    /*00004918*/ ADD         R4, R4, #8192               @ 0x2000 
    /*0000491c*/ ADD         R5, R5, #56                 @ 0x38 
    /*00004920*/ ADD         R7, R5, #220                @ 0xdc 
    /*00004924*/ ADD         R8, R5, #212                @ 0xd4 
    /*00004928*/ B           VouBufFreeChnBusyList_x4938
    VouBufFreeChnBusyList_x492c:
    /*0000492c*/ BL          0x000000000000492C          @ VouBufGetBusy [R_ARM_CALL: .text+0x3da8] 
    /*00004930*/ SUBS        R6, R0, #0 
    /*00004934*/ BNE         VouBufFreeChnBusyList_x4954
    VouBufFreeChnBusyList_x4938:
    /*00004938*/ LDR         R3, [R4, #1044]             @ 0x414 
    /*0000493c*/ MOV         R0, R5 
    /*00004940*/ CMP         R3, R7 
    /*00004944*/ BNE         VouBufFreeChnBusyList_x492c
    /*00004948*/ STR         R7, [R4, #1048]             @ 0x418 
    /*0000494c*/ MOV         R0, #0 
    /*00004950*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouBufFreeChnBusyList_x4954:
    /*00004954*/ LDR         R0, [R6] 
    /*00004958*/ BL          0x0000000000004958          @ VouBufSubBlkVb [R_ARM_CALL: .text+0x4324] 
    /*0000495c*/ MOV         R0, R6 
    /*00004960*/ BL          0x0000000000004960          @ VouBufResetNode [R_ARM_CALL: .text+0x3d70] 
    /*00004964*/ LDR         R3, [R4, #1040]             @ 0x410 
    /*00004968*/ ADD         R2, R6, #4 
    /*0000496c*/ STR         R2, [R4, #1040]             @ 0x410 
    /*00004970*/ STR         R8, [R6, #4] 
    /*00004974*/ STR         R3, [R6, #8] 
    /*00004978*/ STR         R2, [R3] 
    /*0000497c*/ LDR         R3, [R4, #1024]             @ 0x400 
    /*00004980*/ ADD         R3, R3, #1 
    /*00004984*/ STR         R3, [R4, #1024]             @ 0x400 
    /*00004988*/ B           VouBufFreeChnBusyList_x4938
    VouBufFreeChnBusyList_x498c:
    /*0000498c*/ MOVW        R3, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e14] 
    /*00004990*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a74] 
    /*00004994*/ MOVT        R3, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e14] 
    /*00004998*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a74] 
    /*0000499c*/ MOVW        R2, #1320                   @ 0x528 
    /*000049a0*/ LDR         R1, [PC, #4]                @ 0x00000000000049ac 
    /*000049a4*/ BL          0x00000000000049A4          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000049a8*/ B           VouBufFreeChnBusyList_x4914
    /*000049ac*/ STRDEQ      R0, [R0], -IP 
FUNC_END VouBufFreeChnBusyList


FUNC_BEGIN VouBufFreeDispBusyList
    /*000049b0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000049b4*/ MOVW        R9, #12192                  @ 0x2fa0 
    /*000049b8*/ MUL         R9, R9, R0 
    /*000049bc*/ MOVW        R7, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*000049c0*/ MOVT        R7, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*000049c4*/ MOV         R8, R0 
    /*000049c8*/ CMN         R7, R9 
    /*000049cc*/ BEQ         VouBufFreeDispBusyList_x4a6c
    VouBufFreeDispBusyList_x49d0:
    /*000049d0*/ ADD         R4, R9, #11840              @ 0x2e40 
    /*000049d4*/ ADD         R5, R9, #12032              @ 0x2f00 
    /*000049d8*/ ADD         R4, R4, #20 
    /*000049dc*/ ADD         R5, R5, #48                 @ 0x30 
    /*000049e0*/ MOVW        SL, #12192                  @ 0x2fa0 
    /*000049e4*/ ADD         R4, R7, R4 
    /*000049e8*/ ADD         R5, R7, R5 
    /*000049ec*/ MLA         SL, SL, R8, R7 
    /*000049f0*/ B           VouBufFreeDispBusyList_x4a00
    VouBufFreeDispBusyList_x49f4:
    /*000049f4*/ BL          0x00000000000049F4          @ VouBufGetBusy [R_ARM_CALL: .text+0x3da8] 
    /*000049f8*/ SUBS        R6, R0, #0 
    /*000049fc*/ BNE         VouBufFreeDispBusyList_x4a30
    VouBufFreeDispBusyList_x4a00:
    /*00004a00*/ LDR         R3, [R4, #220]              @ 0xdc 
    /*00004a04*/ MOV         R0, R4 
    /*00004a08*/ CMP         R3, R5 
    /*00004a0c*/ BNE         VouBufFreeDispBusyList_x49f4
    /*00004a10*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00004a14*/ MOVW        R2, #12080                  @ 0x2f30 
    /*00004a18*/ MLA         R7, R3, R8, R7 
    /*00004a1c*/ MOVW        R3, #12084                  @ 0x2f34 
    /*00004a20*/ MOV         R0, #0 
    /*00004a24*/ STR         R5, [R7, R2] 
    /*00004a28*/ STR         R5, [R7, R3] 
    /*00004a2c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouBufFreeDispBusyList_x4a30:
    /*00004a30*/ BL          0x0000000000004A30          @ VouBufClearDispNode [R_ARM_CALL: .text+0x4848] 
    /*00004a34*/ LDR         R1, [R4, #216]              @ 0xd8 
    /*00004a38*/ ADD         R3, R9, #12032              @ 0x2f00 
    /*00004a3c*/ MOVW        R2, #12060                  @ 0x2f1c 
    /*00004a40*/ ADD         R3, R3, #40                 @ 0x28 
    /*00004a44*/ ADD         R0, R6, #4 
    /*00004a48*/ ADD         R3, R7, R3 
    /*00004a4c*/ STR         R0, [R4, #216]              @ 0xd8 
    /*00004a50*/ STR         R3, [R6, #4] 
    /*00004a54*/ STR         R1, [R6, #8] 
    /*00004a58*/ STR         R0, [R1] 
    /*00004a5c*/ LDR         R3, [SL, R2] 
    /*00004a60*/ ADD         R3, R3, #1 
    /*00004a64*/ STR         R3, [SL, R2] 
    /*00004a68*/ B           VouBufFreeDispBusyList_x4a00
    VouBufFreeDispBusyList_x4a6c:
    /*00004a6c*/ MOVW        R3, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e28] 
    /*00004a70*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a74] 
    /*00004a74*/ MOVT        R3, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e28] 
    /*00004a78*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a74] 
    /*00004a7c*/ MOVW        R2, #1369                   @ 0x559 
    /*00004a80*/ LDR         R1, [PC, #4]                @ 0x0000000000004a8c 
    /*00004a84*/ BL          0x0000000000004A84          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00004a88*/ B           VouBufFreeDispBusyList_x49d0
    /*00004a8c*/ ANDEQ       R0, R0, R4, LSL R3 
FUNC_END VouBufFreeDispBusyList


FUNC_BEGIN VouBufFreeDispUsrList
    /*00004a90*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00004a94*/ MOVW        R5, #12192                  @ 0x2fa0 
    /*00004a98*/ MUL         R5, R5, R0 
    /*00004a9c*/ MOVW        R6, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00004aa0*/ MOVT        R6, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00004aa4*/ MOV         R7, R0 
    /*00004aa8*/ CMN         R6, R5 
    /*00004aac*/ BEQ         VouBufFreeDispUsrList_x4b4c
    VouBufFreeDispUsrList_x4ab0:
    /*00004ab0*/ ADD         R3, R5, #12032              @ 0x2f00 
    /*00004ab4*/ ADD         R4, R5, #11840              @ 0x2e40 
    /*00004ab8*/ ADD         R4, R4, #20 
    /*00004abc*/ MOVW        SL, #12192                  @ 0x2fa0 
    /*00004ac0*/ MOV         R5, R3 
    /*00004ac4*/ ADD         R3, R3, #40                 @ 0x28 
    /*00004ac8*/ ADD         R5, R5, #56                 @ 0x38 
    /*00004acc*/ ADD         R4, R6, R4 
    /*00004ad0*/ ADD         R8, R6, R3 
    /*00004ad4*/ ADD         R9, R6, R5 
    /*00004ad8*/ MLA         SL, SL, R7, R6 
    /*00004adc*/ B           VouBufFreeDispUsrList_x4aec
    VouBufFreeDispUsrList_x4ae0:
    /*00004ae0*/ BL          0x0000000000004AE0          @ VouBufGetUser [R_ARM_CALL: .text+0x3ffc] 
    /*00004ae4*/ SUBS        R5, R0, #0 
    /*00004ae8*/ BNE         VouBufFreeDispUsrList_x4b1c
    VouBufFreeDispUsrList_x4aec:
    /*00004aec*/ LDR         R3, [R4, #228]              @ 0xe4 
    /*00004af0*/ MOV         R0, R4 
    /*00004af4*/ CMP         R3, R9 
    /*00004af8*/ BNE         VouBufFreeDispUsrList_x4ae0
    /*00004afc*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00004b00*/ MOVW        R2, #12072                  @ 0x2f28 
    /*00004b04*/ MLA         R6, R3, R7, R6 
    /*00004b08*/ MOVW        R3, #12076                  @ 0x2f2c 
    /*00004b0c*/ MOV         R0, #0 
    /*00004b10*/ STR         R8, [R6, R2] 
    /*00004b14*/ STR         R8, [R6, R3] 
    /*00004b18*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouBufFreeDispUsrList_x4b1c:
    /*00004b1c*/ BL          0x0000000000004B1C          @ VouBufClearDispNode [R_ARM_CALL: .text+0x4848] 
    /*00004b20*/ LDR         R3, [R4, #216]              @ 0xd8 
    /*00004b24*/ MOVW        R2, #12060                  @ 0x2f1c 
    /*00004b28*/ ADD         R1, R5, #4 
    /*00004b2c*/ STR         R1, [R4, #216]              @ 0xd8 
    /*00004b30*/ STR         R3, [R5, #8] 
    /*00004b34*/ STR         R8, [R5, #4] 
    /*00004b38*/ STR         R1, [R3] 
    /*00004b3c*/ LDR         R3, [SL, R2] 
    /*00004b40*/ ADD         R3, R3, #1 
    /*00004b44*/ STR         R3, [SL, R2] 
    /*00004b48*/ B           VouBufFreeDispUsrList_x4aec
    VouBufFreeDispUsrList_x4b4c:
    /*00004b4c*/ MOVW        R3, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e28] 
    /*00004b50*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1a74] 
    /*00004b54*/ MOVT        R3, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e28] 
    /*00004b58*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1a74] 
    /*00004b5c*/ MOVW        R2, #1395                   @ 0x573 
    /*00004b60*/ LDR         R1, [PC, #4]                @ 0x0000000000004b6c 
    /*00004b64*/ BL          0x0000000000004B64          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00004b68*/ B           VouBufFreeDispUsrList_x4ab0
    /*00004b6c*/ ANDEQ       R0, R0, IP, LSR #6 
FUNC_END VouBufFreeDispUsrList


FUNC_BEGIN VO_WaitSdStopCallBack
    /*00004b70*/ LDR         R3, [R0] 
    /*00004b74*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00004b78*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00004b7c*/ MOVW        R1, #12192                  @ 0x2fa0 
    /*00004b80*/ MLA         R3, R1, R3, R2 
    /*00004b84*/ LDR         R0, [R3, #220]              @ 0xdc 
    /*00004b88*/ CLZ         R0, R0 
    /*00004b8c*/ LSR         R0, R0, #5 
    /*00004b90*/ BX          LR 
FUNC_END VO_WaitSdStopCallBack


FUNC_BEGIN VO_WaitChnQryCallBack
    /*00004b94*/ LDR         R1, [R0] 
    /*00004b98*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00004b9c*/ LDR         R2, [R0, #4] 
    /*00004ba0*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00004ba4*/ ADD         R2, R2, R1, LSL #2 
    /*00004ba8*/ LDR         R3, [R3, R2, LSL #2] 
    /*00004bac*/ ADD         R3, R3, #8192               @ 0x2000 
    /*00004bb0*/ LDR         R0, [R3, #1316]             @ 0x524 
    /*00004bb4*/ CMP         R0, #0 
    /*00004bb8*/ BXEQ        LR 
    /*00004bbc*/ LDR         R0, [R3, #1376]             @ 0x560 
    /*00004bc0*/ CMP         R0, #0 
    /*00004bc4*/ BNE         VO_WaitChnQryCallBack_x4be4
    /*00004bc8*/ LDR         R2, [R3, #1380]             @ 0x564 
    /*00004bcc*/ CMP         R2, #0 
    /*00004bd0*/ LDREQ       R0, [R3, #1292]             @ 0x50c 
    /*00004bd4*/ SUBEQ       R0, R0, #1 
    /*00004bd8*/ CLZEQ       R0, R0 
    /*00004bdc*/ LSREQ       R0, R0, #5 
    /*00004be0*/ BX          LR 
    VO_WaitChnQryCallBack_x4be4:
    /*00004be4*/ MOV         R0, #0 
    /*00004be8*/ BX          LR 
FUNC_END VO_WaitChnQryCallBack


FUNC_BEGIN VO_WaitChnSendTimeOutCallBack
    /*00004bec*/ LDR         R1, [R0] 
    /*00004bf0*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00004bf4*/ LDR         R2, [R0, #4] 
    /*00004bf8*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00004bfc*/ ADD         R2, R2, R1, LSL #2 
    /*00004c00*/ LDR         R2, [R3, R2, LSL #2] 
    /*00004c04*/ ADD         R1, R2, #8192               @ 0x2000 
    /*00004c08*/ LDR         R3, [R1, #1024]             @ 0x400 
    /*00004c0c*/ CMP         R3, #0 
    /*00004c10*/ BEQ         VO_WaitChnSendTimeOutCallBack_x4c34
    /*00004c14*/ LDR         R3, [R1, #1020]             @ 0x3fc 
    /*00004c18*/ LDR         R0, [R0, #8] 
    /*00004c1c*/ LDR         R2, [R2, #1152]             @ 0x480 
    /*00004c20*/ ADD         R0, R3, R0 
    /*00004c24*/ CMP         R0, R2 
    /*00004c28*/ MOVCS       R0, #0 
    /*00004c2c*/ MOVCC       R0, #1 
    /*00004c30*/ BX          LR 
    VO_WaitChnSendTimeOutCallBack_x4c34:
    /*00004c34*/ MOV         R0, R3 
    /*00004c38*/ BX          LR 
FUNC_END VO_WaitChnSendTimeOutCallBack


FUNC_BEGIN VO_WaitChnQrySdCallBack
    /*00004c3c*/ LDR         R1, [R0] 
    /*00004c40*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00004c44*/ LDR         R2, [R0, #4] 
    /*00004c48*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00004c4c*/ ADD         R2, R2, R1, LSL #2 
    /*00004c50*/ LDR         R3, [R3, R2, LSL #2] 
    /*00004c54*/ ADD         R3, R3, #8192               @ 0x2000 
    /*00004c58*/ LDR         R0, [R3, #1316]             @ 0x524 
    /*00004c5c*/ CMP         R0, #0 
    /*00004c60*/ LDRNE       R0, [R3, #1376]             @ 0x560 
    /*00004c64*/ CLZNE       R0, R0 
    /*00004c68*/ LSRNE       R0, R0, #5 
    /*00004c6c*/ BX          LR 
FUNC_END VO_WaitChnQrySdCallBack


FUNC_BEGIN VO_WaitChnClearBufCallBack
    /*00004c70*/ LDR         R1, [R0] 
    /*00004c74*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00004c78*/ LDR         R2, [R0, #4] 
    /*00004c7c*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00004c80*/ ADD         R2, R2, R1, LSL #2 
    /*00004c84*/ LDR         R3, [R3, R2, LSL #2] 
    /*00004c88*/ ADD         R3, R3, #8192               @ 0x2000 
    /*00004c8c*/ LDR         R0, [R3, #1300]             @ 0x514 
    /*00004c90*/ SUB         R0, R0, #1 
    /*00004c94*/ CLZ         R0, R0 
    /*00004c98*/ LSR         R0, R0, #5 
    /*00004c9c*/ BX          LR 
FUNC_END VO_WaitChnClearBufCallBack


FUNC_BEGIN VouCalcZoomRectByVideoFrame
    /*00004ca0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00004ca4*/ MOV         R5, R1 
    /*00004ca8*/ LDR         R2, [R5] 
    /*00004cac*/ MOV         R4, R0 
    /*00004cb0*/ LDR         R1, [R0, #4] 
    /*00004cb4*/ SUB         SP, SP, #32 
    /*00004cb8*/ LDR         R0, [R0, #8] 
    /*00004cbc*/ CMP         R1, R2 
    /*00004cc0*/ LDR         R3, [R5, #4] 
    /*00004cc4*/ BCS         VouCalcZoomRectByVideoFrame_x4cd0
    /*00004cc8*/ CMP         R0, R3 
    /*00004ccc*/ BCC         VouCalcZoomRectByVideoFrame_x4d98
    VouCalcZoomRectByVideoFrame_x4cd0:
    /*00004cd0*/ LDR         R6, [R4, #16] 
    /*00004cd4*/ MOVW        IP, #13011                  @ 0x32d3 
    /*00004cd8*/ LDR         LR, [R4, #12] 
    /*00004cdc*/ STR         R3, [SP, #24] 
    /*00004ce0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x344] 
    /*00004ce4*/ STR         R2, [SP, #20] 
    /*00004ce8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x344] 
    /*00004cec*/ STR         R0, [SP, #8] 
    /*00004cf0*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e3c] 
    /*00004cf4*/ STR         R1, [SP, #4] 
    /*00004cf8*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e3c] 
    /*00004cfc*/ STR         R6, [SP, #16] 
    /*00004d00*/ MOV         R1, #15 
    /*00004d04*/ STR         LR, [SP, #12] 
    /*00004d08*/ MOV         R0, #4 
    /*00004d0c*/ STR         IP, [SP] 
    /*00004d10*/ BL          0x0000000000004D10          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004d14*/ MOV         R3, #0 
    /*00004d18*/ STR         R3, [R4, #4] 
    /*00004d1c*/ STR         R3, [R4, #8] 
    /*00004d20*/ LDR         R3, [R5] 
    /*00004d24*/ STR         R3, [R4, #12] 
    /*00004d28*/ LDR         R2, [R5, #4] 
    /*00004d2c*/ STR         R2, [R4, #16] 
    VouCalcZoomRectByVideoFrame_x4d30:
    /*00004d30*/ CMP         R3, #31 
    /*00004d34*/ BLS         VouCalcZoomRectByVideoFrame_x4d40
    /*00004d38*/ CMP         R2, #31 
    /*00004d3c*/ BHI         VouCalcZoomRectByVideoFrame_x4d90
    VouCalcZoomRectByVideoFrame_x4d40:
    /*00004d40*/ STR         R2, [SP, #8] 
    /*00004d44*/ MOV         R1, #32 
    /*00004d48*/ STR         R3, [SP, #4] 
    /*00004d4c*/ MOVW        R2, #13040                  @ 0x32f0 
    /*00004d50*/ STR         R1, [SP, #12] 
    /*00004d54*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x344] 
    /*00004d58*/ STR         R2, [SP] 
    /*00004d5c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x344] 
    /*00004d60*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1efc] 
    /*00004d64*/ MOV         R1, #15 
    /*00004d68*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1efc] 
    /*00004d6c*/ MOV         R0, #4 
    /*00004d70*/ BL          0x0000000000004D70          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004d74*/ MOV         R3, #0 
    /*00004d78*/ STR         R3, [R4, #4] 
    /*00004d7c*/ STR         R3, [R4, #8] 
    /*00004d80*/ LDR         R3, [R5] 
    /*00004d84*/ STR         R3, [R4, #12] 
    /*00004d88*/ LDR         R3, [R5, #4] 
    /*00004d8c*/ STR         R3, [R4, #16] 
    VouCalcZoomRectByVideoFrame_x4d90:
    /*00004d90*/ ADD         SP, SP, #32 
    /*00004d94*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouCalcZoomRectByVideoFrame_x4d98:
    /*00004d98*/ LDR         IP, [R4, #12] 
    /*00004d9c*/ LDR         LR, [R4, #16] 
    /*00004da0*/ ADD         R3, R1, IP 
    /*00004da4*/ CMP         R3, R2 
    /*00004da8*/ RSBLS       R3, R1, R3 
    /*00004dac*/ RSBHI       R3, R1, R2 
    /*00004db0*/ STR         R3, [R4, #12] 
    /*00004db4*/ LDR         R6, [R5, #4] 
    /*00004db8*/ ADD         R2, R0, LR 
    /*00004dbc*/ CMP         R2, R6 
    /*00004dc0*/ RSBLS       R2, R0, R2 
    /*00004dc4*/ RSBHI       R2, R0, R6 
    /*00004dc8*/ STR         R2, [R4, #16] 
    /*00004dcc*/ CMP         LR, R2 
    /*00004dd0*/ CMPEQ       IP, R3 
    /*00004dd4*/ BEQ         VouCalcZoomRectByVideoFrame_x4d30
    /*00004dd8*/ LDR         R8, [R5, #4] 
    /*00004ddc*/ MOVW        R6, #13031                  @ 0x32e7 
    /*00004de0*/ LDR         R7, [R5] 
    /*00004de4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x344] 
    /*00004de8*/ STR         R0, [SP, #8] 
    /*00004dec*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x344] 
    /*00004df0*/ STR         R1, [SP, #4] 
    /*00004df4*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1e94] 
    /*00004df8*/ STR         LR, [SP, #16] 
    /*00004dfc*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1e94] 
    /*00004e00*/ STR         IP, [SP, #12] 
    /*00004e04*/ MOV         R1, #15 
    /*00004e08*/ STR         R8, [SP, #24] 
    /*00004e0c*/ MOV         R0, #4 
    /*00004e10*/ STR         R7, [SP, #20] 
    /*00004e14*/ STR         R6, [SP] 
    /*00004e18*/ BL          0x0000000000004E18          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004e1c*/ LDR         R3, [R4, #12] 
    /*00004e20*/ LDR         R2, [R4, #16] 
    /*00004e24*/ B           VouCalcZoomRectByVideoFrame_x4d30
FUNC_END VouCalcZoomRectByVideoFrame


FUNC_BEGIN VoAddClearScreenTask
    /*00004e28*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00004e2c*/ SUB         SP, SP, #68                 @ 0x44 
    /*00004e30*/ MOV         R4, R1 
    /*00004e34*/ MOV         R5, R0 
    /*00004e38*/ MOV         R1, #0 
    /*00004e3c*/ MOV         R6, R2 
    /*00004e40*/ ADD         R0, SP, #12 
    /*00004e44*/ MOV         R2, #52                     @ 0x34 
    /*00004e48*/ BL          0x0000000000004E48          @ memset [R_ARM_CALL: +0x0] 
    /*00004e4c*/ MOV         R0, R5 
    /*00004e50*/ BL          0x0000000000004E50          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*00004e54*/ LDR         R1, [R4, #700]              @ 0x2bc 
    /*00004e58*/ CMN         R1, #1 
    /*00004e5c*/ MOVEQ       R4, #0 
    /*00004e60*/ BEQ         VoAddClearScreenTask_x4e90
    /*00004e64*/ MOVW        R3, #3048                   @ 0xbe8 
    /*00004e68*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00004e6c*/ MLA         R3, R3, R5, R1 
    /*00004e70*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00004e74*/ MOV         R7, R0 
    /*00004e78*/ ADD         R3, R3, #2944               @ 0xb80 
    /*00004e7c*/ ADD         R3, R3, #6 
    /*00004e80*/ LDR         R0, [R2, R3, LSL #2] 
    /*00004e84*/ CMP         R0, #0 
    /*00004e88*/ MOVEQ       R4, R0 
    /*00004e8c*/ BNE         VoAddClearScreenTask_x4e9c
    VoAddClearScreenTask_x4e90:
    /*00004e90*/ MOV         R0, R4 
    /*00004e94*/ ADD         SP, SP, #68                 @ 0x44 
    /*00004e98*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VoAddClearScreenTask_x4e9c:
    /*00004e9c*/ MOV         R0, #45                     @ 0x2d 
    /*00004ea0*/ BL          0x0000000000004EA0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00004ea4*/ SUBS        R8, R0, #0 
    /*00004ea8*/ BEQ         VoAddClearScreenTask_x4f8c
    /*00004eac*/ LDR         R3, [R8, #16] 
    /*00004eb0*/ CMP         R3, #0 
    /*00004eb4*/ BEQ         VoAddClearScreenTask_x4f8c
    /*00004eb8*/ MOVW        R3, #0                      @ g_astVoDev [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*00004ebc*/ MOVT        R3, #0                      @ g_astVoDev [R_ARM_MOVT_ABS: .bss+0x8] 
    /*00004ec0*/ MOV         R1, #232                    @ 0xe8 
    /*00004ec4*/ MOV         R2, #16 
    /*00004ec8*/ MLA         R7, R1, R7, R3 
    /*00004ecc*/ MOV         R3, #1 
    /*00004ed0*/ STR         R3, [SP, #12] 
    /*00004ed4*/ ADD         R1, R4, #712                @ 0x2c8 
    /*00004ed8*/ ADD         R0, SP, #20 
    /*00004edc*/ LDR         R3, [R7, #16] 
    /*00004ee0*/ BIC         R3, R3, #-16777216          @ 0xff000000 
    /*00004ee4*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00004ee8*/ BL          0x0000000000004EE8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00004eec*/ LDR         R3, [R8, #64]               @ 0x40 
    /*00004ef0*/ BLX         R3 
    /*00004ef4*/ SUBS        R7, R0, #0 
    /*00004ef8*/ BEQ         VoAddClearScreenTask_x4fb8
    /*00004efc*/ MOV         R1, R4 
    /*00004f00*/ MOV         R2, #336                    @ 0x150 
    /*00004f04*/ BL          0x0000000000004F04          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00004f08*/ MOV         R2, #336                    @ 0x150 
    /*00004f0c*/ MOV         R1, R4 
    /*00004f10*/ ADD         R0, R7, R2 
    /*00004f14*/ BL          0x0000000000004F14          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00004f18*/ MOV         R9, #15 
    /*00004f1c*/ STR         R5, [R7, #728]              @ 0x2d8 
    /*00004f20*/ MOV         R3, #0 
    /*00004f24*/ STR         R5, [R7, #732]              @ 0x2dc 
    /*00004f28*/ ADD         R2, SP, #12 
    /*00004f2c*/ STR         R9, [R7, #724]              @ 0x2d4 
    /*00004f30*/ MOV         R1, R7 
    /*00004f34*/ STR         R3, [R7, #720]              @ 0x2d0 
    /*00004f38*/ LDR         R0, [R4, #744]              @ 0x2e8 
    /*00004f3c*/ LDR         R3, [R8, #16] 
    /*00004f40*/ BLX         R3 
    /*00004f44*/ SUBS        R4, R0, #0 
    /*00004f48*/ BNE         VoAddClearScreenTask_x4f64
    /*00004f4c*/ LDR         R3, [R6] 
    /*00004f50*/ MOV         R0, R4 
    /*00004f54*/ ADD         R3, R3, #1 
    /*00004f58*/ STR         R3, [R6] 
    /*00004f5c*/ ADD         SP, SP, #68                 @ 0x44 
    /*00004f60*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VoAddClearScreenTask_x4f64:
    /*00004f64*/ MOVW        R3, #13468                  @ 0x349c 
    /*00004f68*/ STR         R5, [SP, #4] 
    /*00004f6c*/ STR         R3, [SP] 
    /*00004f70*/ MOV         R1, R9 
    /*00004f74*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2018] 
    /*00004f78*/ LDR         R3, [PC, #80]               @ 0x0000000000004fd0 
    /*00004f7c*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2018] 
    /*00004f80*/ MOV         R0, #3 
    /*00004f84*/ BL          0x0000000000004F84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004f88*/ B           VoAddClearScreenTask_x4e90
    VoAddClearScreenTask_x4f8c:
    /*00004f8c*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f80] 
    /*00004f90*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f80] 
    /*00004f94*/ MOV         R3, #13440                  @ 0x3480 
    /*00004f98*/ STR         R5, [SP, #4] 
    /*00004f9c*/ STR         R3, [SP] 
    VoAddClearScreenTask_x4fa0:
    /*00004fa0*/ LDR         R3, [PC, #40]               @ 0x0000000000004fd0 
    /*00004fa4*/ MOV         R1, #15 
    /*00004fa8*/ MOV         R0, #3 
    /*00004fac*/ MVN         R4, #0 
    /*00004fb0*/ BL          0x0000000000004FB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00004fb4*/ B           VoAddClearScreenTask_x4e90
    VoAddClearScreenTask_x4fb8:
    /*00004fb8*/ MOVW        R3, #13452                  @ 0x348c 
    /*00004fbc*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1fd8] 
    /*00004fc0*/ STR         R5, [SP, #4] 
    /*00004fc4*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1fd8] 
    /*00004fc8*/ STR         R3, [SP] 
    /*00004fcc*/ B           VoAddClearScreenTask_x4fa0
    /*00004fd0*/ ANDEQ       R0, R0, R0, ROR #6 
FUNC_END VoAddClearScreenTask


FUNC_BEGIN VouVgsJobDone
    /*00004fd4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00004fd8*/ MOV         R7, R3 
    /*00004fdc*/ LDRB        R5, [R7, #1] 
    /*00004fe0*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00004fe4*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00004fe8*/ SUB         SP, SP, #28 
    /*00004fec*/ MOV         R9, R1 
    /*00004ff0*/ MOV         SL, R2 
    /*00004ff4*/ LSL         R4, R5, #4 
    /*00004ff8*/ MOV         R8, #1 
    /*00004ffc*/ SUB         FP, R4, #4 
    /*00005000*/ ADD         R4, R4, #12 
    /*00005004*/ ADD         FP, FP, R3 
    /*00005008*/ ADD         R4, R4, R3 
    /*0000500c*/ MOVW        R6, #9504                   @ 0x2520 
    VouVgsJobDone_x5010:
    /*00005010*/ LDR         R3, [FP, #4]! 
    /*00005014*/ CMP         R3, #0 
    /*00005018*/ ADD         R2, R3, #8192               @ 0x2000 
    /*0000501c*/ ADD         R0, R3, R6 
    /*00005020*/ BEQ         VouVgsJobDone_x502c
    /*00005024*/ STR         R8, [R2, #1300]             @ 0x514 
    /*00005028*/ BL          0x0000000000005028          @ osal_wakeup [R_ARM_CALL: +0x0] 
    VouVgsJobDone_x502c:
    /*0000502c*/ CMP         FP, R4 
    /*00005030*/ BNE         VouVgsJobDone_x5010
    /*00005034*/ LDR         R3, [R7, #48]               @ 0x30 
    /*00005038*/ CMP         R3, #1 
    /*0000503c*/ BEQ         VouVgsJobDone_x511c
    /*00005040*/ MOVW        R6, #12192                  @ 0x2fa0 
    /*00005044*/ MOVW        R4, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00005048*/ MUL         R6, R6, R5 
    /*0000504c*/ MOVT        R4, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00005050*/ STR         R9, [SP, #4] 
    /*00005054*/ MOVW        R3, #12920                  @ 0x3278 
    /*00005058*/ STR         SL, [SP, #8] 
    /*0000505c*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2060] 
    /*00005060*/ ADD         R1, R4, R6 
    /*00005064*/ STR         R3, [SP] 
    /*00005068*/ ADD         R8, R6, #11840              @ 0x2e40 
    /*0000506c*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2060] 
    /*00005070*/ LDR         IP, [R1, #220]              @ 0xdc 
    /*00005074*/ ADD         R8, R8, #20 
    /*00005078*/ ADD         R8, R4, R8 
    /*0000507c*/ LDR         R3, [PC, #428]              @ 0x0000000000005230 
    /*00005080*/ MOV         R1, #15 
    /*00005084*/ MOV         R0, #4 
    /*00005088*/ STR         IP, [SP, #12] 
    /*0000508c*/ BL          0x000000000000508C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005090*/ LDRD        R2, [R7, #8] 
    /*00005094*/ MOV         R0, R8 
    /*00005098*/ BL          0x0000000000005098          @ VouBufGetFreeByNode [R_ARM_CALL: .text+0x3f0c] 
    /*0000509c*/ SUBS        R9, R0, #0 
    /*000050a0*/ BEQ         VouVgsJobDone_x51f0
    VouVgsJobDone_x50a4:
    /*000050a4*/ LDR         R3, [R7, #48]               @ 0x30 
    /*000050a8*/ CMP         R3, #3 
    /*000050ac*/ BEQ         VouVgsJobDone_x50d0
    /*000050b0*/ LDR         R1, [R9] 
    /*000050b4*/ MOVW        R3, #3048                   @ 0xbe8 
    /*000050b8*/ MOV         R2, #1 
    /*000050bc*/ LDR         R1, [R1, #700]              @ 0x2bc 
    /*000050c0*/ MLA         R3, R3, R5, R1 
    /*000050c4*/ ADD         R3, R3, #2944               @ 0xb80 
    /*000050c8*/ ADD         R3, R3, #6 
    /*000050cc*/ STR         R2, [R4, R3, LSL #2] 
    VouVgsJobDone_x50d0:
    /*000050d0*/ MOV         R0, R9 
    /*000050d4*/ BL          0x00000000000050D4          @ VouBufClearDispNode [R_ARM_CALL: .text+0x4848] 
    /*000050d8*/ MOV         R0, R8 
    /*000050dc*/ MOV         R1, R9 
    /*000050e0*/ BL          0x00000000000050E0          @ VouBufPutFree [R_ARM_CALL: .text+0x3fd0] 
    /*000050e4*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*000050e8*/ MLA         R5, R3, R5, R4 
    /*000050ec*/ MOVW        R0, #12116                  @ 0x2f54 
    /*000050f0*/ LDR         R2, [R5, R0] 
    /*000050f4*/ LDR         R3, [R5, #220]              @ 0xdc 
    /*000050f8*/ CMP         R2, #0 
    /*000050fc*/ SUB         R3, R3, #1 
    /*00005100*/ STR         R3, [R5, #220]              @ 0xdc 
    /*00005104*/ BEQ         VouVgsJobDone_x5114
    /*00005108*/ ADD         R0, R6, R0 
    /*0000510c*/ ADD         R0, R4, R0 
    /*00005110*/ BL          0x0000000000005110          @ osal_wakeup [R_ARM_CALL: +0x0] 
    VouVgsJobDone_x5114:
    /*00005114*/ ADD         SP, SP, #28 
    /*00005118*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouVgsJobDone_x511c:
    /*0000511c*/ MOVW        R7, #12192                  @ 0x2fa0 
    /*00005120*/ ADD         R9, SP, #24 
    /*00005124*/ MUL         R7, R7, R5 
    /*00005128*/ MOV         R3, #0 
    /*0000512c*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00005130*/ STR         R3, [R9, #-4]! 
    /*00005134*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00005138*/ MOV         R1, R9 
    /*0000513c*/ BL          0x000000000000513C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00005140*/ ADD         R0, R7, #11840              @ 0x2e40 
    /*00005144*/ ADD         R0, R0, #20 
    /*00005148*/ MOVW        R4, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000514c*/ MOVT        R4, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00005150*/ LDR         R8, [SP, #20] 
    /*00005154*/ ADD         R6, R4, R0 
    /*00005158*/ MOV         R0, R6 
    /*0000515c*/ BL          0x000000000000515C          @ VouBufGetFree [R_ARM_CALL: .text+0x3e84] 
    /*00005160*/ SUBS        SL, R0, #0 
    /*00005164*/ BEQ         VouVgsJobDone_x5210
    VouVgsJobDone_x5168:
    /*00005168*/ MOV         R0, R6 
    /*0000516c*/ MOV         R1, SL 
    /*00005170*/ LDR         R6, [SL] 
    /*00005174*/ BL          0x0000000000005174          @ VouBufPutBusy [R_ARM_CALL: .text+0x3e58] 
    /*00005178*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000517c*/ MOV         R1, R9 
    /*00005180*/ MLA         R3, R3, R5, R4 
    /*00005184*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00005188*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000518c*/ STR         R8, [SP, #20] 
    /*00005190*/ LDR         R2, [R3, #220]              @ 0xdc 
    /*00005194*/ SUB         R2, R2, #1 
    /*00005198*/ STR         R2, [R3, #220]              @ 0xdc 
    /*0000519c*/ BL          0x000000000000519C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000051a0*/ LDRD        R2, [R6, #240]              @ 0xf0 
    /*000051a4*/ ORRS        R3, R2, R3 
    /*000051a8*/ BEQ         VouVgsJobDone_x51d8
    VouVgsJobDone_x51ac:
    /*000051ac*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*000051b0*/ MOVW        R0, #12116                  @ 0x2f54 
    /*000051b4*/ MLA         R5, R3, R5, R4 
    /*000051b8*/ LDR         R3, [R5, R0] 
    /*000051bc*/ CMP         R3, #0 
    /*000051c0*/ BEQ         VouVgsJobDone_x5114
    /*000051c4*/ ADD         R0, R7, R0 
    /*000051c8*/ ADD         R0, R4, R0 
    /*000051cc*/ BL          0x00000000000051CC          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*000051d0*/ ADD         SP, SP, #28 
    /*000051d4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouVgsJobDone_x51d8:
    /*000051d8*/ MOV         R0, #2 
    /*000051dc*/ BL          0x00000000000051DC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000051e0*/ LDR         R3, [R0] 
    /*000051e4*/ BLX         R3 
    /*000051e8*/ STRD        R0, [R6, #240]              @ 0xf0 
    /*000051ec*/ B           VouVgsJobDone_x51ac
    VouVgsJobDone_x51f0:
    /*000051f0*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20c4] 
    /*000051f4*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*000051f8*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20c4] 
    /*000051fc*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    /*00005200*/ MOVW        R2, #12922                  @ 0x327a 
    /*00005204*/ LDR         R1, [PC, #36]               @ 0x0000000000005230 
    /*00005208*/ BL          0x0000000000005208          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000520c*/ B           VouVgsJobDone_x50a4
    VouVgsJobDone_x5210:
    /*00005210*/ MOVW        R3, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20c4] 
    /*00005214*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*00005218*/ MOVT        R3, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20c4] 
    /*0000521c*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    /*00005220*/ MOVW        R2, #12946                  @ 0x3292 
    /*00005224*/ LDR         R1, [PC, #4]                @ 0x0000000000005230 
    /*00005228*/ BL          0x0000000000005228          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000522c*/ B           VouVgsJobDone_x5168
    /*00005230*/ ANDEQ       R0, R0, R8, ROR R3 
FUNC_END VouVgsJobDone


FUNC_BEGIN VO_WaitGetSreenFrameCallBack.part.0
    /*00005234*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00005238*/ SUB         SP, SP, #12 
    /*0000523c*/ MOV         R3, #292                    @ 0x124 
    /*00005240*/ MOV         R1, #15 
    /*00005244*/ STR         R3, [SP] 
    /*00005248*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2114] 
    /*0000524c*/ LDR         R3, [PC, #20]               @ 0x0000000000005268 
    /*00005250*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2114] 
    /*00005254*/ MOV         R0, #3 
    /*00005258*/ BL          0x0000000000005258          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000525c*/ MOV         R0, #1 
    /*00005260*/ ADD         SP, SP, #12 
    /*00005264*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00005268*/ ANDEQ       R0, R0, R8, LSL #7 
FUNC_END VO_WaitGetSreenFrameCallBack.part.0


FUNC_BEGIN VO_WaitGetSreenFrameCallBack
    /*0000526c*/ MOVW        R3, #0                      @ s_u32VouState [R_ARM_MOVW_ABS_NC: .data+0x10] 
    /*00005270*/ MOVT        R3, #0                      @ s_u32VouState [R_ARM_MOVT_ABS: .data+0x10] 
    /*00005274*/ LDR         R3, [R3] 
    /*00005278*/ CMP         R3, #0 
    /*0000527c*/ BNE         VO_WaitGetSreenFrameCallBack_x52a4
    /*00005280*/ LDR         R3, [R0] 
    /*00005284*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00005288*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000528c*/ MOVW        R1, #12192                  @ 0x2fa0 
    /*00005290*/ MLA         R3, R1, R3, R2 
    /*00005294*/ LDR         R0, [R3, #264]              @ 0x108 
    /*00005298*/ ADDS        R0, R0, #0 
    /*0000529c*/ MOVNE       R0, #1 
    /*000052a0*/ BX          LR 
    VO_WaitGetSreenFrameCallBack_x52a4:
    /*000052a4*/ B           0x0000000000005234 
FUNC_END VO_WaitGetSreenFrameCallBack


FUNC_BEGIN VO_WaitGetChnFrameCallBack
    /*000052a8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000052ac*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*000052b0*/ LDR         R1, [R0] 
    /*000052b4*/ SUB         SP, SP, #20 
    /*000052b8*/ LDR         R2, [R0, #4] 
    /*000052bc*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*000052c0*/ ADD         R5, SP, #16 
    /*000052c4*/ MOV         R6, R0 
    /*000052c8*/ ADD         R2, R2, R1, LSL #2 
    /*000052cc*/ MOV         R4, #0 
    /*000052d0*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*000052d4*/ STR         R4, [R5, #-4]! 
    /*000052d8*/ LDR         R7, [R3, R2, LSL #2] 
    /*000052dc*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*000052e0*/ MOV         R1, R5 
    /*000052e4*/ BL          0x00000000000052E4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000052e8*/ ADD         R3, R7, #8192               @ 0x2000 
    /*000052ec*/ LDR         R2, [R6, #12] 
    /*000052f0*/ LDR         R3, [R3, #1372]             @ 0x55c 
    /*000052f4*/ LDR         R6, [SP, #12] 
    /*000052f8*/ CMP         R2, R3 
    /*000052fc*/ BEQ         VO_WaitGetChnFrameCallBack_x5340
    /*00005300*/ MOV         R3, #254                    @ 0xfe 
    /*00005304*/ MOV         R1, #15 
    /*00005308*/ STR         R3, [SP] 
    /*0000530c*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2170] 
    /*00005310*/ LDR         R3, [PC, #140]              @ 0x00000000000053a4 
    /*00005314*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2170] 
    /*00005318*/ MOV         R0, #3 
    /*0000531c*/ BL          0x000000000000531C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005320*/ MOV         R1, R5 
    /*00005324*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00005328*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000532c*/ STR         R6, [SP, #12] 
    /*00005330*/ BL          0x0000000000005330          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00005334*/ MOV         R0, R4 
    VO_WaitGetChnFrameCallBack_x5338:
    /*00005338*/ ADD         SP, SP, #20 
    /*0000533c*/ POP         {R4, R5, R6, R7, PC} 
    VO_WaitGetChnFrameCallBack_x5340:
    /*00005340*/ MOV         R1, R5 
    /*00005344*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00005348*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000534c*/ STR         R6, [SP, #12] 
    /*00005350*/ BL          0x0000000000005350          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00005354*/ MOVW        R3, #0                      @ s_u32VouState [R_ARM_MOVW_ABS_NC: .data+0x10] 
    /*00005358*/ MOVT        R3, #0                      @ s_u32VouState [R_ARM_MOVT_ABS: .data+0x10] 
    /*0000535c*/ LDR         R3, [R3] 
    /*00005360*/ CMP         R3, #0 
    /*00005364*/ BNE         VO_WaitGetChnFrameCallBack_x537c
    /*00005368*/ LDR         R0, [R7, #24] 
    /*0000536c*/ ADDS        R0, R0, #0 
    /*00005370*/ MOVNE       R0, #1 
    /*00005374*/ ADD         SP, SP, #20 
    /*00005378*/ POP         {R4, R5, R6, R7, PC} 
    VO_WaitGetChnFrameCallBack_x537c:
    /*0000537c*/ MOVW        R3, #262                    @ 0x106 
    /*00005380*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x21a0] 
    /*00005384*/ STR         R3, [SP] 
    /*00005388*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x21a0] 
    /*0000538c*/ LDR         R3, [PC, #16]               @ 0x00000000000053a4 
    /*00005390*/ MOV         R1, #15 
    /*00005394*/ MOV         R0, #3 
    /*00005398*/ BL          0x0000000000005398          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000539c*/ MOV         R0, #1 
    /*000053a0*/ B           VO_WaitGetChnFrameCallBack_x5338
    /*000053a4*/ ANDEQ       R0, R0, R8, LSR #7 
FUNC_END VO_WaitGetChnFrameCallBack


FUNC_BEGIN VouCheckVb
    /*000053a8*/ PUSH        {R4, LR} 
    /*000053ac*/ MOV         R4, R0 
    /*000053b0*/ SUB         SP, SP, #16 
    /*000053b4*/ MOV         R0, #1 
    /*000053b8*/ BL          0x00000000000053B8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000053bc*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*000053c0*/ LDR         R1, [R0, #84]               @ 0x54 
    /*000053c4*/ LDR         R0, [R4, #328]              @ 0x148 
    /*000053c8*/ BLX         R1 
    /*000053cc*/ CMP         R0, #1 
    /*000053d0*/ BNE         VouCheckVb_x53f8
    /*000053d4*/ LDR         R3, [R4, #12] 
    /*000053d8*/ SUB         R0, R3, #25 
    /*000053dc*/ CMP         R3, #39                     @ 0x27 
    /*000053e0*/ CMPNE       R0, #1 
    /*000053e4*/ MOVHI       R0, #1 
    /*000053e8*/ MOVLS       R0, #0 
    /*000053ec*/ BHI         VouCheckVb_x5434
    VouCheckVb_x53f0:
    /*000053f0*/ ADD         SP, SP, #16 
    /*000053f4*/ POP         {R4, PC} 
    VouCheckVb_x53f8:
    /*000053f8*/ LDRD        R0, [R4, #120]              @ 0x78 
    /*000053fc*/ MOVW        IP, #5531                   @ 0x159b 
    /*00005400*/ LDR         R3, [R4, #328]              @ 0x148 
    /*00005404*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x21fc] 
    /*00005408*/ STR         IP, [SP] 
    /*0000540c*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x21fc] 
    /*00005410*/ STRD        R0, [SP, #8] 
    /*00005414*/ MOV         R1, #15 
    /*00005418*/ STR         R3, [SP, #4] 
    /*0000541c*/ MOV         R0, #3 
    /*00005420*/ LDR         R3, [PC, #60]               @ 0x0000000000005464 
    /*00005424*/ BL          0x0000000000005424          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005428*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000542c*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00005430*/ B           VouCheckVb_x53f0
    VouCheckVb_x5434:
    /*00005434*/ STR         R3, [SP, #4] 
    /*00005438*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x223c] 
    /*0000543c*/ MOVW        R3, #5538                   @ 0x15a2 
    /*00005440*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x223c] 
    /*00005444*/ STR         R3, [SP] 
    /*00005448*/ MOV         R1, #15 
    /*0000544c*/ LDR         R3, [PC, #16]               @ 0x0000000000005464 
    /*00005450*/ MOV         R0, #3 
    /*00005454*/ BL          0x0000000000005454          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005458*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000545c*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00005460*/ B           VouCheckVb_x53f0
    /*00005464*/ ANDEQ       R0, R0, R4, ASR #7 
FUNC_END VouCheckVb


FUNC_BEGIN VouInitChnCtx.part.3
    /*00005468*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000546c*/ MOV         R8, R0 
    /*00005470*/ SUB         SP, SP, #8 
    /*00005474*/ MOVW        R0, #9584                   @ 0x2570 
    /*00005478*/ MOV         R7, R1 
    /*0000547c*/ BL          0x000000000000547C          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00005480*/ SUBS        R4, R0, #0 
    /*00005484*/ BEQ         VouInitChnCtx.part.3_x55a4
    /*00005488*/ MOV         R1, #0 
    /*0000548c*/ MOVW        R2, #9584                   @ 0x2570 
    /*00005490*/ BL          0x0000000000005490          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00005494*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00005498*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000549c*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*000054a0*/ MOV         SL, #2 
    /*000054a4*/ MOV         R9, #1 
    /*000054a8*/ MLA         R3, R3, R8, R2 
    /*000054ac*/ STR         R9, [R4, #16] 
    /*000054b0*/ STR         SL, [R4, #360]              @ 0x168 
    /*000054b4*/ MOV         R2, #5 
    /*000054b8*/ STR         R2, [R4, #188]              @ 0xbc 
    /*000054bc*/ ADD         R6, R4, #8192               @ 0x2000 
    /*000054c0*/ ADD         R0, R4, #9472               @ 0x2500 
    /*000054c4*/ MOV         R5, #0 
    /*000054c8*/ MVN         R2, #0 
    /*000054cc*/ ADD         R0, R0, #28 
    /*000054d0*/ LDR         R3, [R3, #32] 
    /*000054d4*/ ADD         R7, R7, R8, LSL SL 
    /*000054d8*/ STR         R2, [R4, #64]               @ 0x40 
    /*000054dc*/ STR         R3, [R4, #60]               @ 0x3c 
    /*000054e0*/ STR         R5, [R6, #1356]             @ 0x54c 
    /*000054e4*/ STR         R5, [R6, #1360]             @ 0x550 
    /*000054e8*/ STR         R5, [R6, #1372]             @ 0x55c 
    /*000054ec*/ STR         R5, [R6, #1376]             @ 0x560 
    /*000054f0*/ BL          0x00000000000054F0          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*000054f4*/ ADD         R0, R4, #9472               @ 0x2500 
    /*000054f8*/ ADD         R0, R0, #32 
    /*000054fc*/ BL          0x00000000000054FC          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*00005500*/ ADD         R0, R4, #9472               @ 0x2500 
    /*00005504*/ ADD         R0, R0, #48                 @ 0x30 
    /*00005508*/ BL          0x0000000000005508          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*0000550c*/ ADD         R0, R4, #9472               @ 0x2500 
    /*00005510*/ ADD         R0, R0, #52                 @ 0x34 
    /*00005514*/ BL          0x0000000000005514          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*00005518*/ ADD         R0, R4, #9472               @ 0x2500 
    /*0000551c*/ ADD         R0, R0, #56                 @ 0x38 
    /*00005520*/ BL          0x0000000000005520          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*00005524*/ ADD         R0, R4, #9472               @ 0x2500 
    /*00005528*/ ADD         R0, R0, #60                 @ 0x3c 
    /*0000552c*/ BL          0x000000000000552C          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*00005530*/ ADD         R0, R4, #9536               @ 0x2540 
    /*00005534*/ ADD         R0, R0, #4 
    /*00005538*/ BL          0x0000000000005538          @ osal_wait_init [R_ARM_CALL: +0x0] 
    /*0000553c*/ ADD         R1, R4, #1488               @ 0x5d0 
    /*00005540*/ ADD         R0, R4, #8960               @ 0x2300 
    /*00005544*/ STR         SL, [R6, #1344]             @ 0x540 
    /*00005548*/ MOV         IP, #3 
    /*0000554c*/ STR         R5, [R4, #256]              @ 0x100 
    /*00005550*/ MOV         R3, #752                    @ 0x2f0 
    /*00005554*/ STR         SL, [R6, #1316]             @ 0x524 
    /*00005558*/ STR         R9, [R6, #1300]             @ 0x514 
    /*0000555c*/ ADD         R1, R1, #8 
    /*00005560*/ STR         R9, [R6, #1364]             @ 0x554 
    /*00005564*/ ADD         R0, R0, #56                 @ 0x38 
    /*00005568*/ STR         R5, [R6, #1368]             @ 0x558 
    /*0000556c*/ MOV         R2, #10 
    /*00005570*/ STR         R5, [R6, #1352]             @ 0x548 
    /*00005574*/ STR         R5, [R6, #1324]             @ 0x52c 
    /*00005578*/ STR         R8, [R4] 
    /*0000557c*/ STR         R5, [R6, #1384]             @ 0x568 
    /*00005580*/ STR         R5, [R6, #1388]             @ 0x56c 
    /*00005584*/ STR         IP, [R4, #1152]             @ 0x480 
    /*00005588*/ BL          0x0000000000005588          @ VouBufInit [R_ARM_CALL: .text+0x3ce0] 
    /*0000558c*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00005590*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00005594*/ MOV         R0, R5 
    /*00005598*/ STR         R4, [R3, R7, LSL #2] 
    VouInitChnCtx.part.3_x559c:
    /*0000559c*/ ADD         SP, SP, #8 
    /*000055a0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouInitChnCtx.part.3_x55a4:
    /*000055a4*/ MOV         R3, #134                    @ 0x86 
    /*000055a8*/ MOVW        R2, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x227c] 
    /*000055ac*/ STR         R3, [SP] 
    /*000055b0*/ MOVT        R2, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x227c] 
    /*000055b4*/ LDR         R3, [PC, #20]               @ 0x00000000000055d0 
    /*000055b8*/ MOV         R1, #15 
    /*000055bc*/ MOV         R0, #3 
    /*000055c0*/ BL          0x00000000000055C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000055c4*/ MOVW        R0, #32780                  @ 0x800c 
    /*000055c8*/ MOVT        R0, #40975                  @ 0xa00f 
    /*000055cc*/ B           VouInitChnCtx.part.3_x559c
    /*000055d0*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VouInitChnCtx.part.3


FUNC_BEGIN VO_WaitGetWbcFrameCallBack
    /*000055d4*/ MOVW        R3, #0                      @ s_u32VouState [R_ARM_MOVW_ABS_NC: .data+0x10] 
    /*000055d8*/ MOVT        R3, #0                      @ s_u32VouState [R_ARM_MOVT_ABS: .data+0x10] 
    /*000055dc*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000055e0*/ SUB         SP, SP, #12 
    /*000055e4*/ LDR         R3, [R3] 
    /*000055e8*/ CMP         R3, #0 
    /*000055ec*/ BNE         VO_WaitGetWbcFrameCallBack_x5620
    /*000055f0*/ LDR         R3, [R0] 
    /*000055f4*/ MOV         R1, #1472                   @ 0x5c0 
    /*000055f8*/ MOVW        R2, #1172                   @ 0x494 
    /*000055fc*/ MOVW        R0, #0                      @ g_astVoWbc [R_ARM_MOVW_ABS_NC: .bss+0x30d8] 
    /*00005600*/ MOVT        R0, #0                      @ g_astVoWbc [R_ARM_MOVT_ABS: .bss+0x30d8] 
    /*00005604*/ MLA         R3, R1, R3, R2 
    /*00005608*/ ADD         R0, R0, R3 
    /*0000560c*/ BL          0x000000000000560C          @ VOU_UF_QueryBusyNum [R_ARM_CALL: .text+0x1506c] 
    /*00005610*/ ADDS        R0, R0, #0 
    /*00005614*/ MOVNE       R0, #1 
    /*00005618*/ ADD         SP, SP, #12 
    /*0000561c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VO_WaitGetWbcFrameCallBack_x5620:
    /*00005620*/ MOVW        R3, #343                    @ 0x157 
    /*00005624*/ MOV         R1, #15 
    /*00005628*/ STR         R3, [SP] 
    /*0000562c*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x22b4] 
    /*00005630*/ LDR         R3, [PC, #20]               @ 0x000000000000564c 
    /*00005634*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x22b4] 
    /*00005638*/ MOV         R0, #3 
    /*0000563c*/ BL          0x000000000000563C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005640*/ MOV         R0, #1 
    /*00005644*/ ADD         SP, SP, #12 
    /*00005648*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000564c*/ ANDEQ       R0, R0, R0, ROR #7 
FUNC_END VO_WaitGetWbcFrameCallBack


FUNC_BEGIN VO_WaitWbcBgBlackCallBack
    /*00005650*/ MOVW        R3, #0                      @ s_u32VouState [R_ARM_MOVW_ABS_NC: .data+0x10] 
    /*00005654*/ MOVT        R3, #0                      @ s_u32VouState [R_ARM_MOVT_ABS: .data+0x10] 
    /*00005658*/ LDR         R3, [R3] 
    /*0000565c*/ CMP         R3, #0 
    /*00005660*/ BNE         VO_WaitWbcBgBlackCallBack_x5688
    /*00005664*/ LDR         R3, [R0] 
    /*00005668*/ MOVW        R2, #0                      @ g_astVoWbc [R_ARM_MOVW_ABS_NC: .bss+0x30d8] 
    /*0000566c*/ MOVT        R2, #0                      @ g_astVoWbc [R_ARM_MOVT_ABS: .bss+0x30d8] 
    /*00005670*/ MOV         R1, #1472                   @ 0x5c0 
    /*00005674*/ MLA         R3, R1, R3, R2 
    /*00005678*/ LDR         R0, [R3, #1404]             @ 0x57c 
    /*0000567c*/ CLZ         R0, R0 
    /*00005680*/ LSR         R0, R0, #5 
    /*00005684*/ BX          LR 
    VO_WaitWbcBgBlackCallBack_x5688:
    /*00005688*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000568c*/ SUB         SP, SP, #12 
    /*00005690*/ MOV         R3, #380                    @ 0x17c 
    /*00005694*/ MOV         R1, #15 
    /*00005698*/ STR         R3, [SP] 
    /*0000569c*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2310] 
    /*000056a0*/ LDR         R3, [PC, #20]               @ 0x00000000000056bc 
    /*000056a4*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2310] 
    /*000056a8*/ MOV         R0, #3 
    /*000056ac*/ BL          0x00000000000056AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000056b0*/ MOV         R0, #1 
    /*000056b4*/ ADD         SP, SP, #12 
    /*000056b8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000056bc*/ STRDEQ      R0, [R0], -IP 
FUNC_END VO_WaitWbcBgBlackCallBack


FUNC_BEGIN VouDeInitChnCtx
    /*000056c0*/ PUSH        {R4, R5, R6, LR} 
    /*000056c4*/ ADD         R6, R1, R0, LSL #2 
    /*000056c8*/ MOVW        R5, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*000056cc*/ MOVT        R5, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*000056d0*/ LDR         R4, [R5, R6, LSL #2] 
    /*000056d4*/ CMP         R4, #0 
    /*000056d8*/ BEQ         VouDeInitChnCtx_x5740
    /*000056dc*/ ADD         R0, R4, #9472               @ 0x2500 
    /*000056e0*/ ADD         R0, R0, #28 
    /*000056e4*/ BL          0x00000000000056E4          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*000056e8*/ ADD         R0, R4, #9472               @ 0x2500 
    /*000056ec*/ ADD         R0, R0, #32 
    /*000056f0*/ BL          0x00000000000056F0          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*000056f4*/ ADD         R0, R4, #9472               @ 0x2500 
    /*000056f8*/ ADD         R0, R0, #48                 @ 0x30 
    /*000056fc*/ BL          0x00000000000056FC          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*00005700*/ ADD         R0, R4, #9472               @ 0x2500 
    /*00005704*/ ADD         R0, R0, #52                 @ 0x34 
    /*00005708*/ BL          0x0000000000005708          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*0000570c*/ ADD         R0, R4, #9472               @ 0x2500 
    /*00005710*/ ADD         R0, R0, #56                 @ 0x38 
    /*00005714*/ BL          0x0000000000005714          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*00005718*/ ADD         R0, R4, #9472               @ 0x2500 
    /*0000571c*/ ADD         R0, R0, #60                 @ 0x3c 
    /*00005720*/ BL          0x0000000000005720          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*00005724*/ ADD         R0, R4, #9536               @ 0x2540 
    /*00005728*/ ADD         R0, R0, #4 
    /*0000572c*/ BL          0x000000000000572C          @ osal_wait_destory [R_ARM_CALL: +0x0] 
    /*00005730*/ LDR         R0, [R5, R6, LSL #2] 
    /*00005734*/ BL          0x0000000000005734          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*00005738*/ MOV         R3, #0 
    /*0000573c*/ STR         R3, [R5, R6, LSL #2] 
    VouDeInitChnCtx_x5740:
    /*00005740*/ MOV         R0, #0 
    /*00005744*/ POP         {R4, R5, R6, PC} 
FUNC_END VouDeInitChnCtx


FUNC_BEGIN VouResetPts
    /*00005748*/ ADD         R1, R1, R0, LSL #2 
    /*0000574c*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00005750*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00005754*/ MOV         R2, #0 
    /*00005758*/ PUSH        {R4, R5} 
    /*0000575c*/ MOV         R0, R2 
    /*00005760*/ LDR         R3, [R3, R1, LSL #2] 
    /*00005764*/ MOV         R4, #0 
    /*00005768*/ MOV         R5, #0 
    /*0000576c*/ ADD         R1, R3, #304                @ 0x130 
    /*00005770*/ STR         R2, [R3, #344]              @ 0x158 
    /*00005774*/ STRD        R4, [R1] 
    /*00005778*/ POP         {R4, R5} 
    /*0000577c*/ BX          LR 
FUNC_END VouResetPts


FUNC_BEGIN VouSetDispMaxSize
    /*00005780*/ SUB         SP, SP, #8 
    /*00005784*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00005788*/ STMIB       SP, {R2, R3} 
    /*0000578c*/ CMP         R1, #47                     @ 0x2f 
    /*00005790*/ LDRLS       PC, [PC, R1, LSL #2] 
    /*00005794*/ B           VouSetDispMaxSize_x5858
    /*00005798*/ ANDEQ       R5, R0, IP, LSL #17 
    /*0000579c*/ ANDEQ       R5, R0, IP, LSR #19 
    /*000057a0*/ ANDEQ       R5, R0, R8, ASR R8 
    /*000057a4*/ ANDEQ       R5, R0, R8, ASR R8 
    /*000057a8*/ ANDEQ       R5, R0, R8, ASR R8 
    /*000057ac*/ ANDEQ       R5, R0, R8, LSL #19 
    /*000057b0*/ ANDEQ       R5, R0, R8, LSL #19 
    /*000057b4*/ ANDEQ       R5, R0, R8, ASR R8 
    /*000057b8*/ ANDEQ       R5, R0, R8, ASR R8 
    /*000057bc*/ ANDEQ       R5, R0, R8, ASR R8 
    /*000057c0*/ ANDEQ       R5, R0, R8, ASR R8 
    /*000057c4*/ ANDEQ       R5, R0, IP, LSL #17 
    /*000057c8*/ ANDEQ       R5, R0, IP, LSR #19 
    /*000057cc*/ ANDEQ       R5, R0, IP, ROR R9 
    /*000057d0*/ ANDEQ       R5, R0, R0, ROR R9 
    /*000057d4*/ ANDEQ       R5, R0, R4, ROR #18 
    /*000057d8*/ ANDEQ       R5, R0, R8, ASR R9 
    /*000057dc*/ ANDEQ       R5, R0, IP, ASR #18 
    /*000057e0*/ ANDEQ       R5, R0, R0, ASR #18 
    /*000057e4*/ ANDEQ       R5, R0, R4, LSR R9 
    /*000057e8*/ ANDEQ       R5, R0, R8, LSR #18 
    /*000057ec*/ ANDEQ       R5, R0, IP, LSL R9 
    /*000057f0*/ ANDEQ       R5, R0, R0, LSL R9 
    /*000057f4*/ ANDEQ       R5, R0, R8, ASR R8 
    /*000057f8*/ ANDEQ       R5, R0, R8, ASR R8 
    /*000057fc*/ ANDEQ       R5, R0, R4, LSL #18 
    /*00005800*/ STRDEQ      R5, [R0], -R8 
    /*00005804*/ STRDEQ      R5, [R0], -R8 
    /*00005808*/ ANDEQ       R5, R0, IP, ROR #17 
    /*0000580c*/ ANDEQ       R5, R0, R0, ROR #17 
    /*00005810*/ ANDEQ       R5, R0, R0, ROR #17 
    /*00005814*/ ANDEQ       R5, R0, R0, ROR #17 
    /*00005818*/ ANDEQ       R5, R0, R0, ROR #17 
    /*0000581c*/ ANDEQ       R5, R0, R0, ROR #17 
    /*00005820*/ LDRDEQ      R5, [R0], -R4 
    /*00005824*/ LDRDEQ      R5, [R0], -R4 
    /*00005828*/ LDRDEQ      R5, [R0], -R4 
    /*0000582c*/ LDRDEQ      R5, [R0], -R4 
    /*00005830*/ LDRDEQ      R5, [R0], -R4 
    /*00005834*/ ANDEQ       R5, R0, R8, ASR #17 
    /*00005838*/ ANDEQ       R5, R0, R8, ASR #17 
    /*0000583c*/ @           <UNDEFINED> instruction: 0x000058bc 
    /*00005840*/ @           <UNDEFINED> instruction: 0x000058bc 
    /*00005844*/ ANDEQ       R5, R0, IP, ROR R9 
    /*00005848*/ @           <UNDEFINED> instruction: 0x000058b0 
    /*0000584c*/ ANDEQ       R5, R0, R4, LSR #17 
    /*00005850*/ MULEQ       R0, R8, R8 
    /*00005854*/ MULEQ       R0, R4, R9 
    VouSetDispMaxSize_x5858:
    /*00005858*/ MOVW        IP, #1080                   @ 0x438 
    /*0000585c*/ MOV         LR, #1920                   @ 0x780 
    VouSetDispMaxSize_x5860:
    /*00005860*/ MOVW        R1, #0                      @ g_astVoDev [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*00005864*/ MOVT        R1, #0                      @ g_astVoDev [R_ARM_MOVT_ABS: .bss+0x8] 
    /*00005868*/ MOV         R3, #232                    @ 0xe8 
    /*0000586c*/ MOV         R2, IP 
    /*00005870*/ MLA         R3, R3, R0, R1 
    /*00005874*/ MOV         R1, LR 
    /*00005878*/ STR         LR, [R3, #76]               @ 0x4c 
    /*0000587c*/ STR         IP, [R3, #80]               @ 0x50 
    /*00005880*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    /*00005884*/ ADD         SP, SP, #8 
    VouSetDispMaxSize_x5888:
    /*00005888*/ B           VouSetDispMaxSize_x5888     @ VOU_DRV_SetDispMaxSize [R_ARM_JUMP24: .text+0x1860c] 
    /*0000588c*/ MOV         IP, #576                    @ 0x240 
    /*00005890*/ MOV         LR, #720                    @ 0x2d0 
    /*00005894*/ B           VouSetDispMaxSize_x5860
    /*00005898*/ MOVW        IP, #4320                   @ 0x10e0 
    /*0000589c*/ MOV         LR, #7680                   @ 0x1e00 
    /*000058a0*/ B           VouSetDispMaxSize_x5860
    /*000058a4*/ MOV         IP, #1920                   @ 0x780 
    /*000058a8*/ MOVW        LR, #1080                   @ 0x438 
    /*000058ac*/ B           VouSetDispMaxSize_x5860
    /*000058b0*/ MOV         IP, #1280                   @ 0x500 
    /*000058b4*/ MOV         LR, #720                    @ 0x2d0 
    /*000058b8*/ B           VouSetDispMaxSize_x5860
    /*000058bc*/ MOV         IP, #320                    @ 0x140 
    /*000058c0*/ MOV         LR, #240                    @ 0xf0 
    /*000058c4*/ B           VouSetDispMaxSize_x5860
    /*000058c8*/ MOV         IP, #240                    @ 0xf0 
    /*000058cc*/ MOV         LR, #320                    @ 0x140 
    /*000058d0*/ B           VouSetDispMaxSize_x5860
    /*000058d4*/ MOV         IP, #2160                   @ 0x870 
    /*000058d8*/ MOV         LR, #4096                   @ 0x1000 
    /*000058dc*/ B           VouSetDispMaxSize_x5860
    /*000058e0*/ MOV         IP, #2160                   @ 0x870 
    /*000058e4*/ MOV         LR, #3840                   @ 0xf00 
    /*000058e8*/ B           VouSetDispMaxSize_x5860
    /*000058ec*/ MOV         IP, #1600                   @ 0x640 
    /*000058f0*/ MOV         LR, #2560                   @ 0xa00 
    /*000058f4*/ B           VouSetDispMaxSize_x5860
    /*000058f8*/ MOV         IP, #1440                   @ 0x5a0 
    /*000058fc*/ MOV         LR, #2560                   @ 0xa00 
    /*00005900*/ B           VouSetDispMaxSize_x5860
    /*00005904*/ MOV         IP, #2160                   @ 0x870 
    /*00005908*/ MOV         LR, #1920                   @ 0x780 
    /*0000590c*/ B           VouSetDispMaxSize_x5860
    /*00005910*/ MOV         IP, #480                    @ 0x1e0 
    /*00005914*/ MOV         LR, #640                    @ 0x280 
    /*00005918*/ B           VouSetDispMaxSize_x5860
    /*0000591c*/ MOV         IP, #1200                   @ 0x4b0 
    /*00005920*/ MOV         LR, #1920                   @ 0x780 
    /*00005924*/ B           VouSetDispMaxSize_x5860
    /*00005928*/ MOVW        IP, #1050                   @ 0x41a 
    /*0000592c*/ MOV         LR, #1680                   @ 0x690 
    /*00005930*/ B           VouSetDispMaxSize_x5860
    /*00005934*/ MOV         IP, #1200                   @ 0x4b0 
    /*00005938*/ MOV         LR, #1600                   @ 0x640 
    /*0000593c*/ B           VouSetDispMaxSize_x5860
    /*00005940*/ MOV         IP, #800                    @ 0x320 
    /*00005944*/ MOV         LR, #1280                   @ 0x500 
    /*00005948*/ B           VouSetDispMaxSize_x5860
    /*0000594c*/ MOV         IP, #900                    @ 0x384 
    /*00005950*/ MOV         LR, #1440                   @ 0x5a0 
    /*00005954*/ B           VouSetDispMaxSize_x5860
    /*00005958*/ MOV         IP, #768                    @ 0x300 
    /*0000595c*/ MOVW        LR, #1366                   @ 0x556 
    /*00005960*/ B           VouSetDispMaxSize_x5860
    /*00005964*/ MOV         IP, #1024                   @ 0x400 
    /*00005968*/ MOV         LR, #1280                   @ 0x500 
    /*0000596c*/ B           VouSetDispMaxSize_x5860
    /*00005970*/ MOV         IP, #768                    @ 0x300 
    /*00005974*/ MOV         LR, #1024                   @ 0x400 
    /*00005978*/ B           VouSetDispMaxSize_x5860
    /*0000597c*/ MOV         IP, #600                    @ 0x258 
    /*00005980*/ MOV         LR, #800                    @ 0x320 
    /*00005984*/ B           VouSetDispMaxSize_x5860
    /*00005988*/ MOV         IP, #720                    @ 0x2d0 
    /*0000598c*/ MOV         LR, #1280                   @ 0x500 
    /*00005990*/ B           VouSetDispMaxSize_x5860
    /*00005994*/ LDR         R3, [SP, #8] 
    /*00005998*/ LDRH        IP, [SP, #14] 
    /*0000599c*/ CMP         R3, #0 
    /*000059a0*/ LDRH        LR, [SP, #20] 
    /*000059a4*/ LSLEQ       IP, IP, #1 
    /*000059a8*/ B           VouSetDispMaxSize_x5860
    /*000059ac*/ MOV         IP, #480                    @ 0x1e0 
    /*000059b0*/ MOV         LR, #720                    @ 0x2d0 
    /*000059b4*/ B           VouSetDispMaxSize_x5860
FUNC_END VouSetDispMaxSize


FUNC_BEGIN VouSetPubAttr
    /*000059b8*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000059bc*/ SUB         SP, SP, #52                 @ 0x34 
    /*000059c0*/ MOV         R3, #0 
    /*000059c4*/ MOV         R5, R1 
    /*000059c8*/ MOV         R4, R0 
    /*000059cc*/ STR         R3, [SP, #44]               @ 0x2c 
    /*000059d0*/ BL          0x00000000000059D0          @ VoDefCheckDevId [R_ARM_CALL: .text+0x34bc] 
    /*000059d4*/ CMP         R0, #0 
    /*000059d8*/ BNE         VouSetPubAttr_x5ca0
    /*000059dc*/ MOV         R0, R5 
    /*000059e0*/ BL          0x00000000000059E0          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*000059e4*/ CMP         R0, #0 
    /*000059e8*/ BNE         VouSetPubAttr_x5cac
    /*000059ec*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*000059f0*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*000059f4*/ BL          0x00000000000059F4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000059f8*/ CMP         R0, #0 
    /*000059fc*/ BNE         VouSetPubAttr_x5cb8
    /*00005a00*/ MOV         R3, #232                    @ 0xe8 
    /*00005a04*/ MOVW        R6, #0                      @ g_astVoDev [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*00005a08*/ MUL         R3, R3, R4 
    /*00005a0c*/ MOVT        R6, #0                      @ g_astVoDev [R_ARM_MOVT_ABS: .bss+0x8] 
    /*00005a10*/ LDR         R3, [R6, R3] 
    /*00005a14*/ CMP         R3, #1 
    /*00005a18*/ BEQ         VouSetPubAttr_x5cc4
    /*00005a1c*/ MOV         R1, R5 
    /*00005a20*/ MOV         R0, R4 
    /*00005a24*/ BL          0x0000000000005A24          @ VOU_DRV_CheckDevPubAttr [R_ARM_CALL: .text+0x17150] 
    /*00005a28*/ SUBS        R7, R0, #0 
    /*00005a2c*/ BNE         VouSetPubAttr_x5b10
    /*00005a30*/ MOV         R0, R4 
    /*00005a34*/ BL          0x0000000000005A34          @ VOU_DRV_IsVirtDev [R_ARM_CALL: .text+0x17648] 
    /*00005a38*/ CMP         R0, #0 
    /*00005a3c*/ BEQ         VouSetPubAttr_x5c2c
    /*00005a40*/ LDR         R3, [R5, #8] 
    /*00005a44*/ ADD         R8, R5, #12 
    VouSetPubAttr_x5a48:
    /*00005a48*/ CMP         R3, #46                     @ 0x2e 
    /*00005a4c*/ LDRLS       PC, [PC, R3, LSL #2] 
    /*00005a50*/ B           VouSetPubAttr_x5bf0
    /*00005a54*/ LDRDEQ      R5, [R0], -IP 
    /*00005a58*/ ANDEQ       R5, R0, IP, ASR #22 
    /*00005a5c*/ ANDEQ       R5, R0, R4, LSL #24 
    /*00005a60*/ LDRDEQ      R5, [R0], -IP 
    /*00005a64*/ ANDEQ       R5, R0, IP, ASR #22 
    /*00005a68*/ ANDEQ       R5, R0, R8, LSL IP 
    /*00005a6c*/ STRDEQ      R5, [R0], -R0 
    /*00005a70*/ LDRDEQ      R5, [R0], -IP 
    /*00005a74*/ ANDEQ       R5, R0, IP, ASR #22 
    /*00005a78*/ ANDEQ       R5, R0, R8, LSL IP 
    /*00005a7c*/ STRDEQ      R5, [R0], -R0 
    /*00005a80*/ ANDEQ       R5, R0, R8, LSL IP 
    /*00005a84*/ STRDEQ      R5, [R0], -R0 
    /*00005a88*/ STRDEQ      R5, [R0], -R0 
    /*00005a8c*/ STRDEQ      R5, [R0], -R0 
    /*00005a90*/ STRDEQ      R5, [R0], -R0 
    /*00005a94*/ STRDEQ      R5, [R0], -R0 
    /*00005a98*/ STRDEQ      R5, [R0], -R0 
    /*00005a9c*/ STRDEQ      R5, [R0], -R0 
    /*00005aa0*/ STRDEQ      R5, [R0], -R0 
    /*00005aa4*/ STRDEQ      R5, [R0], -R0 
    /*00005aa8*/ STRDEQ      R5, [R0], -R0 
    /*00005aac*/ STRDEQ      R5, [R0], -R0 
    /*00005ab0*/ ANDEQ       R5, R0, R8, LSL IP 
    /*00005ab4*/ STRDEQ      R5, [R0], -R0 
    /*00005ab8*/ ANDEQ       R5, R0, IP, ASR #22 
    /*00005abc*/ ANDEQ       R5, R0, IP, ASR #22 
    /*00005ac0*/ STRDEQ      R5, [R0], -R0 
    /*00005ac4*/ STRDEQ      R5, [R0], -R0 
    /*00005ac8*/ ANDEQ       R5, R0, R4, LSL #24 
    /*00005acc*/ LDRDEQ      R5, [R0], -IP 
    /*00005ad0*/ ANDEQ       R5, R0, IP, ASR #22 
    /*00005ad4*/ ANDEQ       R5, R0, R8, LSL IP 
    /*00005ad8*/ STRDEQ      R5, [R0], -R0 
    /*00005adc*/ ANDEQ       R5, R0, R4, LSL #24 
    /*00005ae0*/ LDRDEQ      R5, [R0], -IP 
    /*00005ae4*/ ANDEQ       R5, R0, IP, ASR #22 
    /*00005ae8*/ ANDEQ       R5, R0, R8, LSL IP 
    /*00005aec*/ STRDEQ      R5, [R0], -R0 
    /*00005af0*/ STRDEQ      R5, [R0], -R0 
    /*00005af4*/ ANDEQ       R5, R0, R8, LSL IP 
    /*00005af8*/ ANDEQ       R5, R0, R8, LSL IP 
    /*00005afc*/ STRDEQ      R5, [R0], -R0 
    /*00005b00*/ ANDEQ       R5, R0, R8, LSL IP 
    /*00005b04*/ STRDEQ      R5, [R0], -R0 
    /*00005b08*/ STRDEQ      R5, [R0], -R0 
    /*00005b0c*/ ANDEQ       R5, R0, IP, ASR #22 
    VouSetPubAttr_x5b10:
    /*00005b10*/ MOVW        R3, #730                    @ 0x2da 
    /*00005b14*/ STR         R4, [SP, #4] 
    /*00005b18*/ STR         R3, [SP] 
    /*00005b1c*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x239c] 
    /*00005b20*/ LDR         R3, [PC, #528]              @ 0x0000000000005d38 
    /*00005b24*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x239c] 
    /*00005b28*/ MOV         R1, #15 
    /*00005b2c*/ MOV         R0, #3 
    /*00005b30*/ BL          0x0000000000005B30          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005b34*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00005b38*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00005b3c*/ BL          0x0000000000005B3C          @ osal_up [R_ARM_CALL: +0x0] 
    VouSetPubAttr_x5b40:
    /*00005b40*/ MOV         R0, R7 
    /*00005b44*/ ADD         SP, SP, #52                 @ 0x34 
    /*00005b48*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    /*00005b4c*/ MOV         R3, #232                    @ 0xe8 
    /*00005b50*/ MOV         R2, #30 
    /*00005b54*/ MLA         R3, R3, R4, R6 
    /*00005b58*/ STR         R2, [R3, #84]               @ 0x54 
    VouSetPubAttr_x5b5c:
    /*00005b5c*/ ADD         LR, R5, #20 
    /*00005b60*/ MOV         IP, SP 
    /*00005b64*/ LDR         R9, [R5, #8] 
    /*00005b68*/ LDM         LR!, {R0, R1, R2, R3} 
    /*00005b6c*/ STMIA       IP!, {R0, R1, R2, R3} 
    /*00005b70*/ LDM         LR!, {R0, R1, R2, R3} 
    /*00005b74*/ STMIA       IP!, {R0, R1, R2, R3} 
    /*00005b78*/ LDM         LR, {R0, R1} 
    /*00005b7c*/ LDM         R8, {R2, R3} 
    /*00005b80*/ STM         IP, {R0, R1} 
    /*00005b84*/ MOV         R1, R9 
    /*00005b88*/ MOV         R0, R4 
    /*00005b8c*/ BL          0x0000000000005B8C          @ VouSetDispMaxSize [R_ARM_CALL: .text+0x5780] 
    /*00005b90*/ MOV         R1, R5 
    /*00005b94*/ MOV         R0, R4 
    /*00005b98*/ BL          0x0000000000005B98          @ VOU_DRV_SetPubAttr [R_ARM_CALL: .text+0x174c4] 
    /*00005b9c*/ MOV         R3, #232                    @ 0xe8 
    /*00005ba0*/ MUL         R4, R3, R4 
    /*00005ba4*/ MOV         R1, R5 
    /*00005ba8*/ MOV         R2, #60                     @ 0x3c 
    /*00005bac*/ ADD         R0, R4, #16 
    /*00005bb0*/ ADD         R0, R6, R0 
    /*00005bb4*/ ADD         R6, R6, R4 
    /*00005bb8*/ BL          0x0000000000005BB8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00005bbc*/ MOV         R3, #1 
    /*00005bc0*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00005bc4*/ STR         R3, [R6, #4] 
    /*00005bc8*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00005bcc*/ BL          0x0000000000005BCC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005bd0*/ MOV         R0, R7 
    /*00005bd4*/ ADD         SP, SP, #52                 @ 0x34 
    /*00005bd8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    /*00005bdc*/ MOV         R3, #232                    @ 0xe8 
    /*00005be0*/ MOV         R2, #25 
    /*00005be4*/ MLA         R3, R3, R4, R6 
    /*00005be8*/ STR         R2, [R3, #84]               @ 0x54 
    /*00005bec*/ B           VouSetPubAttr_x5b5c
    VouSetPubAttr_x5bf0:
    /*00005bf0*/ MOV         R3, #232                    @ 0xe8 
    /*00005bf4*/ MOV         R2, #60                     @ 0x3c 
    /*00005bf8*/ MLA         R3, R3, R4, R6 
    /*00005bfc*/ STR         R2, [R3, #84]               @ 0x54 
    /*00005c00*/ B           VouSetPubAttr_x5b5c
    /*00005c04*/ MOV         R3, #232                    @ 0xe8 
    /*00005c08*/ MOV         R2, #24 
    /*00005c0c*/ MLA         R3, R3, R4, R6 
    /*00005c10*/ STR         R2, [R3, #84]               @ 0x54 
    /*00005c14*/ B           VouSetPubAttr_x5b5c
    /*00005c18*/ MOV         R3, #232                    @ 0xe8 
    /*00005c1c*/ MOV         R2, #50                     @ 0x32 
    /*00005c20*/ MLA         R3, R3, R4, R6 
    /*00005c24*/ STR         R2, [R3, #84]               @ 0x54 
    /*00005c28*/ B           VouSetPubAttr_x5b5c
    VouSetPubAttr_x5c2c:
    /*00005c2c*/ LDR         R1, [R5, #4] 
    /*00005c30*/ MOV         R0, R4 
    /*00005c34*/ BL          0x0000000000005C34          @ VOU_DRV_SetDevIntfType [R_ARM_CALL: .text+0x16880] 
    /*00005c38*/ LDR         R1, [R5, #8] 
    /*00005c3c*/ MOV         R0, R4 
    /*00005c40*/ ADD         R8, R5, #12 
    /*00005c44*/ BL          0x0000000000005C44          @ VOU_DRV_SetDevOutSync [R_ARM_CALL: .text+0x168b0] 
    /*00005c48*/ LDR         R1, [R5] 
    /*00005c4c*/ MOV         R0, R4 
    /*00005c50*/ BL          0x0000000000005C50          @ VOU_DRV_SetDevBkGrd [R_ARM_CALL: .text+0x16898] 
    /*00005c54*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00005c58*/ MOV         R0, R4 
    /*00005c5c*/ BL          0x0000000000005C5C          @ VOU_DRV_GetDevVtth [R_ARM_CALL: .text+0x16948] 
    /*00005c60*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*00005c64*/ MOV         R0, R4 
    /*00005c68*/ BL          0x0000000000005C68          @ VOU_DRV_SetDevVtth [R_ARM_CALL: .text+0x16900] 
    /*00005c6c*/ LDR         R3, [R5, #8] 
    /*00005c70*/ CMP         R3, #47                     @ 0x2f 
    /*00005c74*/ BNE         VouSetPubAttr_x5a48
    /*00005c78*/ MOV         R0, R4 
    /*00005c7c*/ MOV         R1, R8 
    /*00005c80*/ BL          0x0000000000005C80          @ VOU_DRV_CheckUsrSyncTiming [R_ARM_CALL: .text+0x1698c] 
    /*00005c84*/ SUBS        R9, R0, #0 
    /*00005c88*/ BNE         VouSetPubAttr_x5d00
    /*00005c8c*/ MOV         R1, R8 
    /*00005c90*/ MOV         R0, R4 
    /*00005c94*/ BL          0x0000000000005C94          @ VOU_DRV_SetUsrSyncTiming [R_ARM_CALL: .text+0x16ae0] 
    /*00005c98*/ LDR         R3, [R5, #8] 
    /*00005c9c*/ B           VouSetPubAttr_x5a48
    VouSetPubAttr_x5ca0:
    /*00005ca0*/ MOVW        R7, #32769                  @ 0x8001 
    /*00005ca4*/ MOVT        R7, #40975                  @ 0xa00f 
    /*00005ca8*/ B           VouSetPubAttr_x5b40
    VouSetPubAttr_x5cac:
    /*00005cac*/ MOVW        R7, #32774                  @ 0x8006 
    /*00005cb0*/ MOVT        R7, #40975                  @ 0xa00f 
    /*00005cb4*/ B           VouSetPubAttr_x5b40
    VouSetPubAttr_x5cb8:
    /*00005cb8*/ MOV         R7, #65024                  @ 0xfe00 
    /*00005cbc*/ MOVT        R7, #65535                  @ 0xffff 
    /*00005cc0*/ B           VouSetPubAttr_x5b40
    VouSetPubAttr_x5cc4:
    /*00005cc4*/ MOVW        R3, #721                    @ 0x2d1 
    /*00005cc8*/ MOV         R1, #15 
    /*00005ccc*/ STR         R3, [SP] 
    /*00005cd0*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2368] 
    /*00005cd4*/ LDR         R3, [PC, #92]               @ 0x0000000000005d38 
    /*00005cd8*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2368] 
    /*00005cdc*/ STR         R4, [SP, #4] 
    /*00005ce0*/ MOV         R0, #3 
    /*00005ce4*/ BL          0x0000000000005CE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005ce8*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00005cec*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00005cf0*/ MOVW        R7, #32834                  @ 0x8042 
    /*00005cf4*/ BL          0x0000000000005CF4          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005cf8*/ MOVT        R7, #40975                  @ 0xa00f 
    /*00005cfc*/ B           VouSetPubAttr_x5b40
    VouSetPubAttr_x5d00:
    /*00005d00*/ STR         R4, [SP, #4] 
    /*00005d04*/ MOVW        R3, #753                    @ 0x2f1 
    /*00005d08*/ MOV         R1, #15 
    /*00005d0c*/ STR         R3, [SP] 
    /*00005d10*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x23d4] 
    /*00005d14*/ LDR         R3, [PC, #28]               @ 0x0000000000005d38 
    /*00005d18*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x23d4] 
    /*00005d1c*/ MOV         R0, #3 
    /*00005d20*/ BL          0x0000000000005D20          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005d24*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00005d28*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00005d2c*/ MOV         R7, R9 
    /*00005d30*/ BL          0x0000000000005D30          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005d34*/ B           VouSetPubAttr_x5b40
    /*00005d38*/ ANDEQ       R0, R0, R8, LSL R4 
FUNC_END VouSetPubAttr


FUNC_BEGIN VouGetPubAttr
    /*00005d3c*/ PUSH        {R4, R5, R6, LR} 
    /*00005d40*/ MOV         R4, R1 
    /*00005d44*/ MOV         R6, R0 
    /*00005d48*/ BL          0x0000000000005D48          @ VoDefCheckDevId [R_ARM_CALL: .text+0x34bc] 
    /*00005d4c*/ CMP         R0, #0 
    /*00005d50*/ BNE         VouGetPubAttr_x5da4
    /*00005d54*/ MOV         R0, R4 
    /*00005d58*/ BL          0x0000000000005D58          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00005d5c*/ SUBS        R5, R0, #0 
    /*00005d60*/ BNE         VouGetPubAttr_x5db0
    /*00005d64*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00005d68*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00005d6c*/ BL          0x0000000000005D6C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00005d70*/ CMP         R0, #0 
    /*00005d74*/ BNE         VouGetPubAttr_x5dbc
    /*00005d78*/ LDR         R3, [PC, #72]               @ 0x0000000000005dc8 
    /*00005d7c*/ MOV         R1, #232                    @ 0xe8 
    /*00005d80*/ MOV         R0, R4 
    /*00005d84*/ MOV         R2, #60                     @ 0x3c 
    /*00005d88*/ MLA         R1, R1, R6, R3 
    /*00005d8c*/ BL          0x0000000000005D8C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00005d90*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00005d94*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00005d98*/ BL          0x0000000000005D98          @ osal_up [R_ARM_CALL: +0x0] 
    VouGetPubAttr_x5d9c:
    /*00005d9c*/ MOV         R0, R5 
    /*00005da0*/ POP         {R4, R5, R6, PC} 
    VouGetPubAttr_x5da4:
    /*00005da4*/ MOVW        R5, #32769                  @ 0x8001 
    /*00005da8*/ MOVT        R5, #40975                  @ 0xa00f 
    /*00005dac*/ B           VouGetPubAttr_x5d9c
    VouGetPubAttr_x5db0:
    /*00005db0*/ MOVW        R5, #32774                  @ 0x8006 
    /*00005db4*/ MOVT        R5, #40975                  @ 0xa00f 
    /*00005db8*/ B           VouGetPubAttr_x5d9c
    VouGetPubAttr_x5dbc:
    /*00005dbc*/ MOV         R5, #65024                  @ 0xfe00 
    /*00005dc0*/ MOVT        R5, #65535                  @ 0xffff 
    /*00005dc4*/ B           VouGetPubAttr_x5d9c
    /*00005dc8*/ ANDEQ       R0, R0, R0, LSL R0          @ g_astVoDev [R_ARM_ABS32: .bss+0x8] 
FUNC_END VouGetPubAttr


FUNC_BEGIN VouSetDevFrameRate
    /*00005dcc*/ PUSH        {R4, R5, R6, LR} 
    /*00005dd0*/ SUB         SP, SP, #16 
    /*00005dd4*/ MOV         R6, R1 
    /*00005dd8*/ MOV         R5, R0 
    /*00005ddc*/ BL          0x0000000000005DDC          @ VoDefCheckDevId [R_ARM_CALL: .text+0x34bc] 
    /*00005de0*/ CMP         R0, #0 
    /*00005de4*/ BNE         VouSetDevFrameRate_x5ec0
    /*00005de8*/ MOV         R0, R6 
    /*00005dec*/ BL          0x0000000000005DEC          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00005df0*/ SUBS        R4, R0, #0 
    /*00005df4*/ BNE         VouSetDevFrameRate_x5f08
    /*00005df8*/ LDR         R6, [R6] 
    /*00005dfc*/ SUB         R2, R6, #24 
    /*00005e00*/ CMP         R2, #26 
    /*00005e04*/ BHI         VouSetDevFrameRate_x5e84
    /*00005e08*/ MOV         R3, #67                     @ 0x43 
    /*00005e0c*/ MOVT        R3, #1024                   @ 0x400 
    /*00005e10*/ MVN         R3, R3, LSR R2 
    /*00005e14*/ TST         R3, #1 
    /*00005e18*/ BNE         VouSetDevFrameRate_x5e84
    VouSetDevFrameRate_x5e1c:
    /*00005e1c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00005e20*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00005e24*/ BL          0x0000000000005E24          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00005e28*/ CMP         R0, #0 
    /*00005e2c*/ BNE         VouSetDevFrameRate_x5f14
    /*00005e30*/ MOV         R3, #232                    @ 0xe8 
    /*00005e34*/ MOVW        R2, #0                      @ g_astVoDev [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*00005e38*/ MUL         R3, R3, R5 
    /*00005e3c*/ MOVT        R2, #0                      @ g_astVoDev [R_ARM_MOVT_ABS: .bss+0x8] 
    /*00005e40*/ ADD         R1, R2, R3 
    /*00005e44*/ LDR         R3, [R2, R3] 
    /*00005e48*/ CMP         R3, #1 
    /*00005e4c*/ BEQ         VouSetDevFrameRate_x5f38
    /*00005e50*/ LDR         R3, [R1, #4] 
    /*00005e54*/ CMP         R3, #0 
    /*00005e58*/ BEQ         VouSetDevFrameRate_x5f20
    /*00005e5c*/ LDR         R3, [R1, #24] 
    /*00005e60*/ CMP         R3, #47                     @ 0x2f 
    /*00005e64*/ BNE         VouSetDevFrameRate_x5ecc
    /*00005e68*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00005e6c*/ STR         R6, [R1, #84]               @ 0x54 
    /*00005e70*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00005e74*/ BL          0x0000000000005E74          @ osal_up [R_ARM_CALL: +0x0] 
    VouSetDevFrameRate_x5e78:
    /*00005e78*/ MOV         R0, R4 
    /*00005e7c*/ ADD         SP, SP, #16 
    /*00005e80*/ POP         {R4, R5, R6, PC} 
    VouSetDevFrameRate_x5e84:
    /*00005e84*/ CMP         R6, #60                     @ 0x3c 
    /*00005e88*/ BEQ         VouSetDevFrameRate_x5e1c
    /*00005e8c*/ MOV         R3, #872                    @ 0x368 
    /*00005e90*/ STR         R6, [SP, #8] 
    /*00005e94*/ STR         R3, [SP] 
    /*00005e98*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2414] 
    /*00005e9c*/ STR         R5, [SP, #4] 
    /*00005ea0*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2414] 
    /*00005ea4*/ LDR         R3, [PC, #200]              @ 0x0000000000005f74 
    /*00005ea8*/ MOV         R1, #15 
    /*00005eac*/ MOV         R0, #3 
    /*00005eb0*/ MOVW        R4, #32771                  @ 0x8003 
    /*00005eb4*/ BL          0x0000000000005EB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005eb8*/ MOVT        R4, #40975                  @ 0xa00f 
    /*00005ebc*/ B           VouSetDevFrameRate_x5e78
    VouSetDevFrameRate_x5ec0:
    /*00005ec0*/ MOVW        R4, #32769                  @ 0x8001 
    /*00005ec4*/ MOVT        R4, #40975                  @ 0xa00f 
    /*00005ec8*/ B           VouSetDevFrameRate_x5e78
    VouSetDevFrameRate_x5ecc:
    /*00005ecc*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x24a4] 
    /*00005ed0*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x24a4] 
    /*00005ed4*/ MOVW        R3, #894                    @ 0x37e 
    /*00005ed8*/ STR         R5, [SP, #4] 
    /*00005edc*/ STR         R3, [SP] 
    VouSetDevFrameRate_x5ee0:
    /*00005ee0*/ LDR         R3, [PC, #140]              @ 0x0000000000005f74 
    /*00005ee4*/ MOV         R1, #15 
    /*00005ee8*/ MOV         R0, #3 
    /*00005eec*/ MOVW        R4, #32832                  @ 0x8040 
    /*00005ef0*/ BL          0x0000000000005EF0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005ef4*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00005ef8*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00005efc*/ MOVT        R4, #40975                  @ 0xa00f 
    /*00005f00*/ BL          0x0000000000005F00          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005f04*/ B           VouSetDevFrameRate_x5e78
    VouSetDevFrameRate_x5f08:
    /*00005f08*/ MOVW        R4, #32774                  @ 0x8006 
    /*00005f0c*/ MOVT        R4, #40975                  @ 0xa00f 
    /*00005f10*/ B           VouSetDevFrameRate_x5e78
    VouSetDevFrameRate_x5f14:
    /*00005f14*/ MOV         R4, #65024                  @ 0xfe00 
    /*00005f18*/ MOVT        R4, #65535                  @ 0xffff 
    /*00005f1c*/ B           VouSetDevFrameRate_x5e78
    VouSetDevFrameRate_x5f20:
    /*00005f20*/ MOVW        R3, #887                    @ 0x377 
    /*00005f24*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x246c] 
    /*00005f28*/ STR         R5, [SP, #4] 
    /*00005f2c*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x246c] 
    /*00005f30*/ STR         R3, [SP] 
    /*00005f34*/ B           VouSetDevFrameRate_x5ee0
    VouSetDevFrameRate_x5f38:
    /*00005f38*/ MOV         R3, #880                    @ 0x370 
    /*00005f3c*/ MOV         R1, #15 
    /*00005f40*/ STR         R3, [SP] 
    /*00005f44*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2368] 
    /*00005f48*/ LDR         R3, [PC, #36]               @ 0x0000000000005f74 
    /*00005f4c*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2368] 
    /*00005f50*/ STR         R5, [SP, #4] 
    /*00005f54*/ MOV         R0, #3 
    /*00005f58*/ BL          0x0000000000005F58          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00005f5c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00005f60*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00005f64*/ MOVW        R4, #32834                  @ 0x8042 
    /*00005f68*/ BL          0x0000000000005F68          @ osal_up [R_ARM_CALL: +0x0] 
    /*00005f6c*/ MOVT        R4, #40975                  @ 0xa00f 
    /*00005f70*/ B           VouSetDevFrameRate_x5e78
    /*00005f74*/ ANDEQ       R0, R0, R8, LSR #8 
FUNC_END VouSetDevFrameRate


FUNC_BEGIN VouGetDevFrameRate
    /*00005f78*/ PUSH        {R4, R5, R6, LR} 
    /*00005f7c*/ MOV         R5, R1 
    /*00005f80*/ MOV         R4, R0 
    /*00005f84*/ BL          0x0000000000005F84          @ VoDefCheckDevId [R_ARM_CALL: .text+0x34bc] 
    /*00005f88*/ CMP         R0, #0 
    /*00005f8c*/ BNE         VouGetDevFrameRate_x5fe0
    /*00005f90*/ MOV         R0, R5 
    /*00005f94*/ BL          0x0000000000005F94          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00005f98*/ SUBS        R6, R0, #0 
    /*00005f9c*/ BNE         VouGetDevFrameRate_x5fec
    /*00005fa0*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00005fa4*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00005fa8*/ BL          0x0000000000005FA8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00005fac*/ CMP         R0, #0 
    /*00005fb0*/ BNE         VouGetDevFrameRate_x5ff8
    /*00005fb4*/ MOVW        R3, #0                      @ g_astVoDev [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*00005fb8*/ MOVT        R3, #0                      @ g_astVoDev [R_ARM_MOVT_ABS: .bss+0x8] 
    /*00005fbc*/ MOV         R2, #232                    @ 0xe8 
    /*00005fc0*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00005fc4*/ MLA         R4, R2, R4, R3 
    /*00005fc8*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00005fcc*/ LDR         R3, [R4, #84]               @ 0x54 
    /*00005fd0*/ STR         R3, [R5] 
    /*00005fd4*/ BL          0x0000000000005FD4          @ osal_up [R_ARM_CALL: +0x0] 
    VouGetDevFrameRate_x5fd8:
    /*00005fd8*/ MOV         R0, R6 
    /*00005fdc*/ POP         {R4, R5, R6, PC} 
    VouGetDevFrameRate_x5fe0:
    /*00005fe0*/ MOVW        R6, #32769                  @ 0x8001 
    /*00005fe4*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00005fe8*/ B           VouGetDevFrameRate_x5fd8
    VouGetDevFrameRate_x5fec:
    /*00005fec*/ MOVW        R6, #32774                  @ 0x8006 
    /*00005ff0*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00005ff4*/ B           VouGetDevFrameRate_x5fd8
    VouGetDevFrameRate_x5ff8:
    /*00005ff8*/ MOV         R6, #65024                  @ 0xfe00 
    /*00005ffc*/ MOVT        R6, #65535                  @ 0xffff 
    /*00006000*/ B           VouGetDevFrameRate_x5fd8
FUNC_END VouGetDevFrameRate


FUNC_BEGIN VouSetVtth
    /*00006004*/ PUSH        {R4, R5, R6, LR} 
    /*00006008*/ SUB         SP, SP, #16 
    /*0000600c*/ MOV         R5, R1 
    /*00006010*/ MOV         R4, R0 
    /*00006014*/ BL          0x0000000000006014          @ VoDefCheckDevId [R_ARM_CALL: .text+0x34bc] 
    /*00006018*/ CMP         R0, #0 
    /*0000601c*/ BNE         VouSetVtth_x60d4
    /*00006020*/ MOV         R0, R5 
    /*00006024*/ BL          0x0000000000006024          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00006028*/ CMP         R0, #0 
    /*0000602c*/ BNE         VouSetVtth_x60e0
    /*00006030*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00006034*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00006038*/ BL          0x0000000000006038          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000603c*/ CMP         R0, #0 
    /*00006040*/ BNE         VouSetVtth_x60ec
    /*00006044*/ MOV         R3, #232                    @ 0xe8 
    /*00006048*/ MOVW        R2, #0                      @ g_astVoDev [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*0000604c*/ MUL         R3, R3, R4 
    /*00006050*/ MOVT        R2, #0                      @ g_astVoDev [R_ARM_MOVT_ABS: .bss+0x8] 
    /*00006054*/ LDR         R6, [R5] 
    /*00006058*/ LDR         R3, [R2, R3] 
    /*0000605c*/ CMP         R3, #1 
    /*00006060*/ BEQ         VouSetVtth_x6138
    /*00006064*/ MOV         R0, R4 
    /*00006068*/ BL          0x0000000000006068          @ VO_DRV_IsPhyDevHD [R_ARM_CALL: .text+0x1858c] 
    /*0000606c*/ CMP         R0, #0 
    /*00006070*/ BEQ         VouSetVtth_x608c
    /*00006074*/ SUB         R2, R6, #240                @ 0xf0 
    /*00006078*/ MOVW        R3, #7951                   @ 0x1f0f 
    /*0000607c*/ CMP         R2, R3 
    /*00006080*/ STRHI       R6, [SP, #8] 
    /*00006084*/ MOVWHI      R3, #951                    @ 0x3b7 
    /*00006088*/ BHI         VouSetVtth_x6100
    VouSetVtth_x608c:
    /*0000608c*/ MOV         R0, R4 
    /*00006090*/ BL          0x0000000000006090          @ VO_DRV_IsPhyDevSD [R_ARM_CALL: .text+0x185b0] 
    /*00006094*/ CMP         R0, #0 
    /*00006098*/ BEQ         VouSetVtth_x60ac
    /*0000609c*/ SUB         R2, R6, #100                @ 0x64 
    /*000060a0*/ MOVW        R3, #8091                   @ 0x1f9b 
    /*000060a4*/ CMP         R2, R3 
    /*000060a8*/ BHI         VouSetVtth_x60f8
    VouSetVtth_x60ac:
    /*000060ac*/ MOV         R0, R4 
    /*000060b0*/ LDR         R1, [R5] 
    /*000060b4*/ BL          0x00000000000060B4          @ VOU_DRV_SetDevVtth [R_ARM_CALL: .text+0x16900] 
    /*000060b8*/ MOV         R4, R0 
    /*000060bc*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*000060c0*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*000060c4*/ BL          0x00000000000060C4          @ osal_up [R_ARM_CALL: +0x0] 
    VouSetVtth_x60c8:
    /*000060c8*/ MOV         R0, R4 
    /*000060cc*/ ADD         SP, SP, #16 
    /*000060d0*/ POP         {R4, R5, R6, PC} 
    VouSetVtth_x60d4:
    /*000060d4*/ MOVW        R4, #32769                  @ 0x8001 
    /*000060d8*/ MOVT        R4, #40975                  @ 0xa00f 
    /*000060dc*/ B           VouSetVtth_x60c8
    VouSetVtth_x60e0:
    /*000060e0*/ MOVW        R4, #32774                  @ 0x8006 
    /*000060e4*/ MOVT        R4, #40975                  @ 0xa00f 
    /*000060e8*/ B           VouSetVtth_x60c8
    VouSetVtth_x60ec:
    /*000060ec*/ MOV         R4, #65024                  @ 0xfe00 
    /*000060f0*/ MOVT        R4, #65535                  @ 0xffff 
    /*000060f4*/ B           VouSetVtth_x60c8
    VouSetVtth_x60f8:
    /*000060f8*/ MOVW        R3, #958                    @ 0x3be 
    /*000060fc*/ STR         R6, [SP, #8] 
    VouSetVtth_x6100:
    /*00006100*/ STR         R4, [SP, #4] 
    /*00006104*/ MOV         R1, #15 
    /*00006108*/ STR         R3, [SP] 
    /*0000610c*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x252c] 
    /*00006110*/ LDR         R3, [PC, #92]               @ 0x0000000000006174 
    /*00006114*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x252c] 
    /*00006118*/ MOV         R0, #3 
    /*0000611c*/ MOVW        R4, #32771                  @ 0x8003 
    /*00006120*/ BL          0x0000000000006120          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006124*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00006128*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000612c*/ MOVT        R4, #40975                  @ 0xa00f 
    /*00006130*/ BL          0x0000000000006130          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006134*/ B           VouSetVtth_x60c8
    VouSetVtth_x6138:
    /*00006138*/ STR         R4, [SP, #4] 
    /*0000613c*/ MOV         R3, #944                    @ 0x3b0 
    /*00006140*/ MOV         R1, #15 
    /*00006144*/ STR         R3, [SP] 
    /*00006148*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x24e4] 
    /*0000614c*/ LDR         R3, [PC, #32]               @ 0x0000000000006174 
    /*00006150*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x24e4] 
    /*00006154*/ MOV         R0, #3 
    /*00006158*/ BL          0x0000000000006158          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000615c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00006160*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00006164*/ MOVW        R4, #32834                  @ 0x8042 
    /*00006168*/ BL          0x0000000000006168          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000616c*/ MOVT        R4, #40975                  @ 0xa00f 
    /*00006170*/ B           VouSetVtth_x60c8
    /*00006174*/ ANDEQ       R0, R0, IP, LSR R4 
FUNC_END VouSetVtth


FUNC_BEGIN VouGetVtth
    /*00006178*/ PUSH        {R4, R5, R6, LR} 
    /*0000617c*/ SUB         SP, SP, #8 
    /*00006180*/ MOV         R5, R1 
    /*00006184*/ MOV         R4, R0 
    /*00006188*/ BL          0x0000000000006188          @ VoDefCheckDevId [R_ARM_CALL: .text+0x34bc] 
    /*0000618c*/ CMP         R0, #0 
    /*00006190*/ BNE         VouGetVtth_x6238
    /*00006194*/ MOV         R0, R5 
    /*00006198*/ BL          0x0000000000006198          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000619c*/ SUBS        R6, R0, #0 
    /*000061a0*/ BNE         VouGetVtth_x6244
    /*000061a4*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*000061a8*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*000061ac*/ BL          0x00000000000061AC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000061b0*/ CMP         R0, #0 
    /*000061b4*/ BNE         VouGetVtth_x6250
    /*000061b8*/ MOV         R0, R4 
    /*000061bc*/ BL          0x00000000000061BC          @ VO_DRV_IsPhyDevHD [R_ARM_CALL: .text+0x1858c] 
    /*000061c0*/ CMP         R0, #0 
    /*000061c4*/ BEQ         VouGetVtth_x61ec
    VouGetVtth_x61c8:
    /*000061c8*/ MOV         R0, R4 
    /*000061cc*/ MOV         R1, R5 
    /*000061d0*/ BL          0x00000000000061D0          @ VOU_DRV_GetDevVtth [R_ARM_CALL: .text+0x16948] 
    /*000061d4*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*000061d8*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*000061dc*/ BL          0x00000000000061DC          @ osal_up [R_ARM_CALL: +0x0] 
    VouGetVtth_x61e0:
    /*000061e0*/ MOV         R0, R6 
    /*000061e4*/ ADD         SP, SP, #8 
    /*000061e8*/ POP         {R4, R5, R6, PC} 
    VouGetVtth_x61ec:
    /*000061ec*/ MOV         R0, R4 
    /*000061f0*/ BL          0x00000000000061F0          @ VO_DRV_IsPhyDevSD [R_ARM_CALL: .text+0x185b0] 
    /*000061f4*/ CMP         R0, #0 
    /*000061f8*/ BNE         VouGetVtth_x61c8
    /*000061fc*/ MOV         R3, #976                    @ 0x3d0 
    /*00006200*/ MOV         R1, #15 
    /*00006204*/ STR         R3, [SP] 
    /*00006208*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2564] 
    /*0000620c*/ LDR         R3, [PC, #72]               @ 0x000000000000625c 
    /*00006210*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2564] 
    /*00006214*/ STR         R4, [SP, #4] 
    /*00006218*/ MOV         R0, #3 
    /*0000621c*/ BL          0x000000000000621C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006220*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00006224*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00006228*/ MOVW        R6, #32769                  @ 0x8001 
    /*0000622c*/ BL          0x000000000000622C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006230*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00006234*/ B           VouGetVtth_x61e0
    VouGetVtth_x6238:
    /*00006238*/ MOVW        R6, #32769                  @ 0x8001 
    /*0000623c*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00006240*/ B           VouGetVtth_x61e0
    VouGetVtth_x6244:
    /*00006244*/ MOVW        R6, #32774                  @ 0x8006 
    /*00006248*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000624c*/ B           VouGetVtth_x61e0
    VouGetVtth_x6250:
    /*00006250*/ MOV         R6, #65024                  @ 0xfe00 
    /*00006254*/ MOVT        R6, #65535                  @ 0xffff 
    /*00006258*/ B           VouGetVtth_x61e0
    /*0000625c*/ ANDEQ       R0, R0, R8, ASR #8 
FUNC_END VouGetVtth


FUNC_BEGIN VouSetUserIntfSyncInfo
    /*00006260*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00006264*/ SUB         SP, SP, #16 
    /*00006268*/ MOV         R5, R1 
    /*0000626c*/ MOV         R7, R0 
    /*00006270*/ BL          0x0000000000006270          @ VoDefCheckDevId [R_ARM_CALL: .text+0x34bc] 
    /*00006274*/ CMP         R0, #0 
    /*00006278*/ BNE         VouSetUserIntfSyncInfo_x63b8
    /*0000627c*/ MOV         R0, R5 
    /*00006280*/ BL          0x0000000000006280          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00006284*/ CMP         R0, #0 
    /*00006288*/ BNE         VouSetUserIntfSyncInfo_x63c4
    /*0000628c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00006290*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00006294*/ BL          0x0000000000006294          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00006298*/ SUBS        R3, R0, #0 
    /*0000629c*/ BNE         VouSetUserIntfSyncInfo_x63d0
    /*000062a0*/ ADD         R4, SP, #16 
    /*000062a4*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*000062a8*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*000062ac*/ MOVW        R6, #0                      @ g_astVoDev [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*000062b0*/ STR         R3, [R4, #-4]! 
    /*000062b4*/ MOV         R1, R4 
    /*000062b8*/ BL          0x00000000000062B8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000062bc*/ MOV         R0, #1 
    /*000062c0*/ LDR         R8, [SP, #12] 
    /*000062c4*/ BL          0x00000000000062C4          @ VO_DRV_SetAllCrgClk [R_ARM_CALL: .text+0x19040] 
    /*000062c8*/ MOV         R1, R4 
    /*000062cc*/ MOV         R4, #232                    @ 0xe8 
    /*000062d0*/ MUL         R4, R4, R7 
    /*000062d4*/ MOVT        R6, #0                      @ g_astVoDev [R_ARM_MOVT_ABS: .bss+0x8] 
    /*000062d8*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*000062dc*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*000062e0*/ STR         R8, [SP, #12] 
    /*000062e4*/ BL          0x00000000000062E4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000062e8*/ ADD         R3, R6, R4 
    /*000062ec*/ LDR         R2, [R3, #4] 
    /*000062f0*/ CMP         R2, #1 
    /*000062f4*/ BNE         VouSetUserIntfSyncInfo_x63dc
    /*000062f8*/ LDR         R3, [R3, #24] 
    /*000062fc*/ CMP         R3, #47                     @ 0x2f 
    /*00006300*/ BNE         VouSetUserIntfSyncInfo_x6418
    /*00006304*/ LDR         R3, [R6, R4] 
    /*00006308*/ CMP         R3, #1 
    /*0000630c*/ BEQ         VouSetUserIntfSyncInfo_x6454
    /*00006310*/ MOV         R1, R5 
    /*00006314*/ MOV         R0, R7 
    /*00006318*/ BL          0x0000000000006318          @ VO_DRV_CheckDevUserSyncInfo [R_ARM_CALL: .text+0x16af0] 
    /*0000631c*/ SUBS        R8, R0, #0 
    /*00006320*/ BNE         VouSetUserIntfSyncInfo_x637c
    /*00006324*/ MOV         R1, R5 
    /*00006328*/ MOV         R0, R7 
    /*0000632c*/ BL          0x000000000000632C          @ VO_DRV_SetDevUserIntfSyncAttr [R_ARM_CALL: .text+0x16d0c] 
    /*00006330*/ LDR         R1, [R5, #28] 
    /*00006334*/ MOV         R0, R7 
    /*00006338*/ BL          0x0000000000006338          @ VO_DRV_SetDevDiv [R_ARM_CALL: .text+0x16ee0] 
    /*0000633c*/ LDR         R1, [R5, #24] 
    /*00006340*/ MOV         R0, R7 
    /*00006344*/ BL          0x0000000000006344          @ VO_DRV_SetHdmiDiv [R_ARM_CALL: .text+0x16f64] 
    /*00006348*/ LDR         R0, [R5, #32] 
    /*0000634c*/ BL          0x000000000000634C          @ VO_DRV_SetClkReverse [R_ARM_CALL: .text+0x16fd8] 
    /*00006350*/ ADD         R0, R4, #192                @ 0xc0 
    /*00006354*/ ADD         R0, R6, R0 
    /*00006358*/ MOV         R1, R5 
    /*0000635c*/ MOV         R2, #36                     @ 0x24 
    /*00006360*/ BL          0x0000000000006360          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006364*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00006368*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000636c*/ BL          0x000000000000636C          @ osal_up [R_ARM_CALL: +0x0] 
    VouSetUserIntfSyncInfo_x6370:
    /*00006370*/ MOV         R0, R8 
    /*00006374*/ ADD         SP, SP, #16 
    /*00006378*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouSetUserIntfSyncInfo_x637c:
    /*0000637c*/ MOV         R1, #15 
    /*00006380*/ STR         R7, [SP, #4] 
    /*00006384*/ MOVW        R3, #1036                   @ 0x40c 
    /*00006388*/ MOVW        R2, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2678] 
    /*0000638c*/ STR         R3, [SP] 
    /*00006390*/ MOVT        R2, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2678] 
    /*00006394*/ LDR         R3, [PC, #244]              @ 0x0000000000006490 
    /*00006398*/ MOV         R0, #3 
    /*0000639c*/ BL          0x000000000000639C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000063a0*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*000063a4*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*000063a8*/ BL          0x00000000000063A8          @ osal_up [R_ARM_CALL: +0x0] 
    /*000063ac*/ MOV         R0, R8 
    /*000063b0*/ ADD         SP, SP, #16 
    /*000063b4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouSetUserIntfSyncInfo_x63b8:
    /*000063b8*/ MOVW        R8, #32769                  @ 0x8001 
    /*000063bc*/ MOVT        R8, #40975                  @ 0xa00f 
    /*000063c0*/ B           VouSetUserIntfSyncInfo_x6370
    VouSetUserIntfSyncInfo_x63c4:
    /*000063c4*/ MOVW        R8, #32774                  @ 0x8006 
    /*000063c8*/ MOVT        R8, #40975                  @ 0xa00f 
    /*000063cc*/ B           VouSetUserIntfSyncInfo_x6370
    VouSetUserIntfSyncInfo_x63d0:
    /*000063d0*/ MOV         R8, #65024                  @ 0xfe00 
    /*000063d4*/ MOVT        R8, #65535                  @ 0xffff 
    /*000063d8*/ B           VouSetUserIntfSyncInfo_x6370
    VouSetUserIntfSyncInfo_x63dc:
    /*000063dc*/ MOVW        R3, #1014                   @ 0x3f6 
    /*000063e0*/ MOV         R1, #15 
    /*000063e4*/ STR         R3, [SP] 
    /*000063e8*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x25b4] 
    /*000063ec*/ LDR         R3, [PC, #156]              @ 0x0000000000006490 
    /*000063f0*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x25b4] 
    /*000063f4*/ STR         R7, [SP, #4] 
    /*000063f8*/ MOV         R0, #3 
    /*000063fc*/ BL          0x00000000000063FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006400*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00006404*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00006408*/ MOVW        R8, #32832                  @ 0x8040 
    /*0000640c*/ BL          0x000000000000640C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006410*/ MOVT        R8, #40975                  @ 0xa00f 
    /*00006414*/ B           VouSetUserIntfSyncInfo_x6370
    VouSetUserIntfSyncInfo_x6418:
    /*00006418*/ MOVW        R3, #1021                   @ 0x3fd 
    /*0000641c*/ MOV         R1, #15 
    /*00006420*/ STR         R3, [SP] 
    /*00006424*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x25f4] 
    /*00006428*/ LDR         R3, [PC, #96]               @ 0x0000000000006490 
    /*0000642c*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x25f4] 
    /*00006430*/ STR         R7, [SP, #4] 
    /*00006434*/ MOV         R0, #3 
    /*00006438*/ BL          0x0000000000006438          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000643c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00006440*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00006444*/ MOVW        R8, #32776                  @ 0x8008 
    /*00006448*/ BL          0x0000000000006448          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000644c*/ MOVT        R8, #40975                  @ 0xa00f 
    /*00006450*/ B           VouSetUserIntfSyncInfo_x6370
    VouSetUserIntfSyncInfo_x6454:
    /*00006454*/ MOVW        R3, #1028                   @ 0x404 
    /*00006458*/ MOV         R1, #15 
    /*0000645c*/ STR         R3, [SP] 
    /*00006460*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2640] 
    /*00006464*/ LDR         R3, [PC, #36]               @ 0x0000000000006490 
    /*00006468*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2640] 
    /*0000646c*/ STR         R7, [SP, #4] 
    /*00006470*/ MOV         R0, #3 
    /*00006474*/ BL          0x0000000000006474          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006478*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000647c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00006480*/ MOVW        R8, #32834                  @ 0x8042 
    /*00006484*/ BL          0x0000000000006484          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006488*/ MOVT        R8, #40975                  @ 0xa00f 
    /*0000648c*/ B           VouSetUserIntfSyncInfo_x6370
    /*00006490*/ ANDEQ       R0, R0, R4, ASR R4 
FUNC_END VouSetUserIntfSyncInfo


FUNC_BEGIN VouEnable
    /*00006494*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00006498*/ SUB         SP, SP, #52                 @ 0x34 
    /*0000649c*/ MOV         R3, #0 
    /*000064a0*/ MOV         R4, R0 
    /*000064a4*/ STR         R3, [SP, #36]               @ 0x24 
    /*000064a8*/ STR         R3, [SP, #40]               @ 0x28 
    /*000064ac*/ STR         R3, [SP, #44]               @ 0x2c 
    /*000064b0*/ STR         R3, [SP, #20] 
    /*000064b4*/ STR         R3, [SP, #24] 
    /*000064b8*/ BL          0x00000000000064B8          @ VoDefCheckDevId [R_ARM_CALL: .text+0x34bc] 
    /*000064bc*/ SUBS        R6, R0, #0 
    /*000064c0*/ BNE         VouEnable_x6710
    /*000064c4*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*000064c8*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*000064cc*/ BL          0x00000000000064CC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000064d0*/ CMP         R0, #0 
    /*000064d4*/ BNE         VouEnable_x671c
    /*000064d8*/ ADD         R7, SP, #48                 @ 0x30 
    /*000064dc*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*000064e0*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*000064e4*/ MOVW        R5, #0                      @ g_astVoDev [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*000064e8*/ STR         R6, [R7, #-20]!             @ 0xffffffec 
    /*000064ec*/ MOV         R1, R7 
    /*000064f0*/ BL          0x00000000000064F0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000064f4*/ MOV         R0, #1 
    /*000064f8*/ LDR         R8, [SP, #28] 
    /*000064fc*/ BL          0x00000000000064FC          @ VO_SetLowPowerCtrlClkEn [R_ARM_CALL: .text+0x19138] 
    /*00006500*/ MOV         R0, R6 
    /*00006504*/ MOVT        R5, #0                      @ g_astVoDev [R_ARM_MOVT_ABS: .bss+0x8] 
    /*00006508*/ BL          0x0000000000006508          @ VoLPWBusReset [R_ARM_CALL: .text+0x190f8] 
    /*0000650c*/ MOV         R0, #1 
    /*00006510*/ BL          0x0000000000006510          @ VO_DRV_SetAllCrgClk [R_ARM_CALL: .text+0x19040] 
    /*00006514*/ MOV         R1, R7 
    /*00006518*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000651c*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00006520*/ STR         R8, [SP, #28] 
    /*00006524*/ BL          0x0000000000006524          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006528*/ MOV         R3, #232                    @ 0xe8 
    /*0000652c*/ MUL         R3, R3, R4 
    /*00006530*/ ADD         R8, R5, R3 
    /*00006534*/ LDR         R9, [R8, #4] 
    /*00006538*/ CMP         R9, #1 
    /*0000653c*/ BNE         VouEnable_x6758
    /*00006540*/ LDR         R3, [R5, R3] 
    /*00006544*/ CMP         R3, #1 
    /*00006548*/ BEQ         VouEnable_x67d4
    /*0000654c*/ MOV         R0, R4 
    /*00006550*/ BL          0x0000000000006550          @ VOU_DRV_GetDevEnable [R_ARM_CALL: .text+0x16964] 
    /*00006554*/ CMP         R0, #1 
    /*00006558*/ BEQ         VouEnable_x65c0
    /*0000655c*/ BL          0x000000000000655C          @ VOU_DRV_SpecialWorkFlow [R_ARM_CALL: .text+0x18560] 
    /*00006560*/ CMP         R0, #0 
    /*00006564*/ BEQ         VouEnable_x66a8
    /*00006568*/ LDR         R3, [R8, #20] 
    /*0000656c*/ TST         R3, #1024                   @ 0x400 
    /*00006570*/ BNE         VouEnable_x662c
    /*00006574*/ MOV         R0, R4 
    /*00006578*/ BL          0x0000000000006578          @ VOU_DRV_SetDevClk [R_ARM_CALL: .text+0x18628] 
    /*0000657c*/ SUBS        R3, R0, #0 
    /*00006580*/ BNE         VouEnable_x66c4
    /*00006584*/ MOV         R0, R4 
    /*00006588*/ BL          0x0000000000006588          @ VO_DRV_Open [R_ARM_CALL: .text+0x19dc8] 
    VouEnable_x658c:
    /*0000658c*/ MOV         R3, #232                    @ 0xe8 
    /*00006590*/ MLA         R3, R3, R4, R5 
    /*00006594*/ LDR         R3, [R3, #20] 
    /*00006598*/ TST         R3, #1024                   @ 0x400 
    /*0000659c*/ BEQ         VouEnable_x65e4
    /*000065a0*/ MOV         R3, #1 
    /*000065a4*/ MOV         R2, R7 
    /*000065a8*/ MOV         R0, R3 
    /*000065ac*/ MOV         R1, #3 
    /*000065b0*/ STR         R3, [SP, #28] 
    /*000065b4*/ STR         R3, [SP, #32] 
    /*000065b8*/ BL          0x00000000000065B8          @ VO_FUNC_SetCscV1Mode [R_ARM_CALL: .text+0x15f38] 
    /*000065bc*/ B           VouEnable_x65e4
    VouEnable_x65c0:
    /*000065c0*/ MOVW        R3, #1155                   @ 0x483 
    /*000065c4*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x26b8] 
    /*000065c8*/ STR         R3, [SP] 
    /*000065cc*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x26b8] 
    /*000065d0*/ STR         R4, [SP, #4] 
    /*000065d4*/ MOV         R1, #15 
    /*000065d8*/ LDR         R3, [PC, #560]              @ 0x0000000000006810 
    /*000065dc*/ MOV         R0, #6 
    /*000065e0*/ BL          0x00000000000065E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    VouEnable_x65e4:
    /*000065e4*/ MOV         R0, R4 
    /*000065e8*/ BL          0x00000000000065E8          @ VOU_DRV_IsDevSupportLoadDetect [R_ARM_CALL: .text+0x185dc] 
    /*000065ec*/ CMP         R0, #0 
    /*000065f0*/ BNE         VouEnable_x66ec
    VouEnable_x65f4:
    /*000065f4*/ CMP         R4, #0 
    /*000065f8*/ BEQ         VouEnable_x66e0
    VouEnable_x65fc:
    /*000065fc*/ MOV         R0, R4 
    /*00006600*/ BL          0x0000000000006600          @ VO_DRV_Enable [R_ARM_CALL: .text+0x18244] 
    /*00006604*/ MOV         R3, #232                    @ 0xe8 
    /*00006608*/ MUL         R4, R3, R4 
    /*0000660c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00006610*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00006614*/ MOV         R3, #1 
    /*00006618*/ STR         R3, [R5, R4] 
    /*0000661c*/ BL          0x000000000000661C          @ osal_up [R_ARM_CALL: +0x0] 
    VouEnable_x6620:
    /*00006620*/ MOV         R0, R6 
    /*00006624*/ ADD         SP, SP, #52                 @ 0x34 
    /*00006628*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouEnable_x662c:
    /*0000662c*/ MOV         R0, #2 
    /*00006630*/ STR         R6, [SP, #20] 
    /*00006634*/ STR         R6, [SP, #24] 
    /*00006638*/ BL          0x0000000000006638          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000663c*/ MOV         R1, #89                     @ 0x59 
    /*00006640*/ ADD         R2, SP, #20 
    /*00006644*/ LDR         R3, [R0, #20] 
    /*00006648*/ ADD         R0, SP, #36                 @ 0x24 
    /*0000664c*/ BLX         R3 
    /*00006650*/ MOV         R0, #2 
    /*00006654*/ BL          0x0000000000006654          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00006658*/ ADD         R2, SP, #24 
    /*0000665c*/ MOV         R1, #94                     @ 0x5e 
    /*00006660*/ LDR         R3, [R0, #20] 
    /*00006664*/ ADD         R0, SP, #36                 @ 0x24 
    /*00006668*/ BLX         R3 
    /*0000666c*/ MOV         R0, R4 
    /*00006670*/ BL          0x0000000000006670          @ VO_DRV_Open [R_ARM_CALL: .text+0x19dc8] 
    /*00006674*/ MOV         R0, R4 
    /*00006678*/ BL          0x0000000000006678          @ VOU_DRV_SetDevClk [R_ARM_CALL: .text+0x18628] 
    /*0000667c*/ SUBS        R3, R0, #0 
    /*00006680*/ BNE         VouEnable_x66c4
    /*00006684*/ MOV         R0, #2 
    /*00006688*/ STR         R9, [SP, #20] 
    /*0000668c*/ BL          0x000000000000668C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00006690*/ ADD         R2, SP, #20 
    /*00006694*/ MOV         R1, #89                     @ 0x59 
    /*00006698*/ LDR         R3, [R0, #20] 
    /*0000669c*/ ADD         R0, SP, #36                 @ 0x24 
    /*000066a0*/ BLX         R3 
    /*000066a4*/ B           VouEnable_x658c
    VouEnable_x66a8:
    /*000066a8*/ MOV         R0, R4 
    /*000066ac*/ BL          0x00000000000066AC          @ VOU_DRV_SetDevClk [R_ARM_CALL: .text+0x18628] 
    /*000066b0*/ SUBS        R3, R0, #0 
    /*000066b4*/ BNE         VouEnable_x66c4
    /*000066b8*/ MOV         R0, R4 
    /*000066bc*/ BL          0x00000000000066BC          @ VO_DRV_Open [R_ARM_CALL: .text+0x19dc8] 
    /*000066c0*/ B           VouEnable_x65e4
    VouEnable_x66c4:
    /*000066c4*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*000066c8*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*000066cc*/ MOV         R6, R3 
    /*000066d0*/ BL          0x00000000000066D0          @ osal_up [R_ARM_CALL: +0x0] 
    /*000066d4*/ MOV         R0, R6 
    /*000066d8*/ ADD         SP, SP, #52                 @ 0x34 
    /*000066dc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouEnable_x66e0:
    /*000066e0*/ MOV         R0, R4 
    /*000066e4*/ BL          0x00000000000066E4          @ VO_DRV_vSetV0ZmeCoef [R_ARM_CALL: .text+0x15ca8] 
    /*000066e8*/ B           VouEnable_x65fc
    VouEnable_x66ec:
    /*000066ec*/ MOVW        R7, #0                      @ detectCycle [R_ARM_MOVW_ABS_NC: .data+0x184] 
    /*000066f0*/ MOVT        R7, #0                      @ detectCycle [R_ARM_MOVT_ABS: .data+0x184] 
    /*000066f4*/ MOV         R2, #232                    @ 0xe8 
    /*000066f8*/ LDR         R3, [R7] 
    /*000066fc*/ CMP         R3, #0 
    /*00006700*/ BNE         VouEnable_x6728
    /*00006704*/ MLA         R2, R2, R4, R5 
    /*00006708*/ STR         R3, [R2, #108]              @ 0x6c 
    /*0000670c*/ B           VouEnable_x65f4
    VouEnable_x6710:
    /*00006710*/ MOVW        R6, #32769                  @ 0x8001 
    /*00006714*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00006718*/ B           VouEnable_x6620
    VouEnable_x671c:
    /*0000671c*/ MOV         R6, #65024                  @ 0xfe00 
    /*00006720*/ MOVT        R6, #65535                  @ 0xffff 
    /*00006724*/ B           VouEnable_x6620
    VouEnable_x6728:
    /*00006728*/ MLA         R2, R2, R4, R5 
    /*0000672c*/ CMP         R3, #9 
    /*00006730*/ MOV         R1, #1 
    /*00006734*/ STR         R1, [R2, #108]              @ 0x6c 
    /*00006738*/ BLS         VouEnable_x6794
    VouEnable_x673c:
    /*0000673c*/ MOV         R2, #232                    @ 0xe8 
    /*00006740*/ MOV         R0, R4 
    /*00006744*/ MLA         R2, R2, R4, R5 
    /*00006748*/ STR         R3, [R2, #116]              @ 0x74 
    /*0000674c*/ STR         R3, [R2, #112]              @ 0x70 
    /*00006750*/ BL          0x0000000000006750          @ VOU_DRV_LoadDetectInit [R_ARM_CALL: .text+0x185e4] 
    /*00006754*/ B           VouEnable_x65f4
    VouEnable_x6758:
    /*00006758*/ MOVW        R3, #1142                   @ 0x476 
    /*0000675c*/ MOV         R1, #15 
    /*00006760*/ STR         R3, [SP] 
    /*00006764*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x25b4] 
    /*00006768*/ LDR         R3, [PC, #160]              @ 0x0000000000006810 
    /*0000676c*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x25b4] 
    /*00006770*/ STR         R4, [SP, #4] 
    /*00006774*/ MOV         R0, #3 
    /*00006778*/ BL          0x0000000000006778          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000677c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00006780*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00006784*/ MOVW        R6, #32832                  @ 0x8040 
    /*00006788*/ BL          0x0000000000006788          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000678c*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00006790*/ B           VouEnable_x6620
    VouEnable_x6794:
    /*00006794*/ MOV         R8, #30 
    /*00006798*/ STR         R3, [SP, #4] 
    /*0000679c*/ STR         R8, [SP, #12] 
    /*000067a0*/ MOV         R3, #10 
    /*000067a4*/ MOVW        R2, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x26f8] 
    /*000067a8*/ STR         R3, [SP, #8] 
    /*000067ac*/ MOVT        R2, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x26f8] 
    /*000067b0*/ MOVW        R3, #519                    @ 0x207 
    /*000067b4*/ MOV         R1, #15 
    /*000067b8*/ STR         R3, [SP] 
    /*000067bc*/ MOV         R0, #3 
    /*000067c0*/ LDR         R3, [PC, #76]               @ 0x0000000000006814 
    /*000067c4*/ BL          0x00000000000067C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000067c8*/ MOV         R3, R8 
    /*000067cc*/ STR         R8, [R7] 
    /*000067d0*/ B           VouEnable_x673c
    VouEnable_x67d4:
    /*000067d4*/ MOVW        R3, #1149                   @ 0x47d 
    /*000067d8*/ MOV         R1, #15 
    /*000067dc*/ STR         R3, [SP] 
    /*000067e0*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2640] 
    /*000067e4*/ LDR         R3, [PC, #36]               @ 0x0000000000006810 
    /*000067e8*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2640] 
    /*000067ec*/ STR         R4, [SP, #4] 
    /*000067f0*/ MOV         R0, #3 
    /*000067f4*/ BL          0x00000000000067F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000067f8*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*000067fc*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00006800*/ MOVW        R6, #32834                  @ 0x8042 
    /*00006804*/ BL          0x0000000000006804          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006808*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000680c*/ B           VouEnable_x6620
    /*00006810*/ ANDEQ       R0, R0, IP, ROR #8 
    /*00006814*/ ANDEQ       R0, R0, R8, ROR R4 
FUNC_END VouEnable


FUNC_BEGIN VouDisable
    /*00006818*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000681c*/ SUB         SP, SP, #24 
    /*00006820*/ MOV         R3, #0 
    /*00006824*/ MOV         R4, R0 
    /*00006828*/ STR         R3, [SP, #16] 
    /*0000682c*/ BL          0x000000000000682C          @ VoDefCheckDevId [R_ARM_CALL: .text+0x34bc] 
    /*00006830*/ SUBS        R7, R0, #0 
    /*00006834*/ BNE         VouDisable_x6a08
    /*00006838*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000683c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00006840*/ BL          0x0000000000006840          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00006844*/ CMP         R0, #0 
    /*00006848*/ BNE         VouDisable_x6a14
    /*0000684c*/ ADD         R5, SP, #24 
    /*00006850*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00006854*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00006858*/ STR         R7, [R5, #-4]! 
    /*0000685c*/ MOV         R1, R5 
    /*00006860*/ BL          0x0000000000006860          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00006864*/ LDR         R6, [SP, #20] 
    /*00006868*/ MOV         R0, #1 
    /*0000686c*/ BL          0x000000000000686C          @ VO_DRV_SetAllCrgClk [R_ARM_CALL: .text+0x19040] 
    /*00006870*/ MOV         R1, R5 
    /*00006874*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00006878*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000687c*/ STR         R6, [SP, #20] 
    /*00006880*/ BL          0x0000000000006880          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006884*/ MOV         R0, R4 
    /*00006888*/ LDR         R8, [SP, #20] 
    /*0000688c*/ BL          0x000000000000688C          @ VOU_DRV_GetDevLayerNum [R_ARM_CALL: .text+0x19230] 
    /*00006890*/ CMP         R0, #0 
    /*00006894*/ BEQ         VouDisable_x68cc
    /*00006898*/ ADD         R1, SP, #16 
    /*0000689c*/ MOV         R0, R4 
    /*000068a0*/ BL          0x00000000000068A0          @ VOU_DRV_GetDevLayer [R_ARM_CALL: .text+0x19248] 
    /*000068a4*/ LDR         R0, [SP, #16] 
    /*000068a8*/ BL          0x00000000000068A8          @ VOU_DRV_SetLayerRegUp [R_ARM_CALL: .text+0x182d4] 
    /*000068ac*/ LDR         R1, [SP, #16] 
    /*000068b0*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*000068b4*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*000068b8*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*000068bc*/ MUL         R3, R3, R1 
    /*000068c0*/ LDR         R3, [R2, R3] 
    /*000068c4*/ CMP         R3, #1 
    /*000068c8*/ BEQ         VouDisable_x69b4
    VouDisable_x68cc:
    /*000068cc*/ MOV         R0, R4 
    /*000068d0*/ MOVW        R6, #0                      @ g_astVoDev [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*000068d4*/ BL          0x00000000000068D4          @ VOU_DRV_IsDevSupportLoadDetect [R_ARM_CALL: .text+0x185dc] 
    /*000068d8*/ MOVT        R6, #0                      @ g_astVoDev [R_ARM_MOVT_ABS: .bss+0x8] 
    /*000068dc*/ CMP         R0, #0 
    /*000068e0*/ BEQ         VouDisable_x68f8
    /*000068e4*/ MOV         R3, #232                    @ 0xe8 
    /*000068e8*/ MLA         R3, R3, R4, R6 
    /*000068ec*/ LDR         R2, [R3, #108]              @ 0x6c 
    /*000068f0*/ CMP         R2, #1 
    /*000068f4*/ BEQ         VouDisable_x6a20
    VouDisable_x68f8:
    /*000068f8*/ MOV         R0, R4 
    /*000068fc*/ BL          0x00000000000068FC          @ VOU_DRV_IsVirtDev [R_ARM_CALL: .text+0x17648] 
    /*00006900*/ CMP         R0, #0 
    /*00006904*/ BEQ         VouDisable_x69fc
    VouDisable_x6908:
    /*00006908*/ MOV         R1, #90                     @ 0x5a 
    /*0000690c*/ MVN         R0, #0 
    /*00006910*/ BL          0x0000000000006910          @ VOU_DRV_IntClear [R_ARM_CALL: .text+0x17058] 
    /*00006914*/ MOV         R0, R4 
    /*00006918*/ BL          0x0000000000006918          @ VO_DRV_Disable [R_ARM_CALL: .text+0x18260] 
    /*0000691c*/ MOV         R3, #232                    @ 0xe8 
    /*00006920*/ MUL         R3, R3, R4 
    /*00006924*/ MOV         R2, #0 
    /*00006928*/ MOV         R0, R4 
    /*0000692c*/ ADD         R1, R6, R3 
    /*00006930*/ STR         R2, [R6, R3] 
    /*00006934*/ STR         R2, [R1, #4] 
    /*00006938*/ BL          0x0000000000006938          @ VOU_DRV_IsVirtDev [R_ARM_CALL: .text+0x17648] 
    /*0000693c*/ MOV         R0, R4 
    /*00006940*/ BL          0x0000000000006940          @ VOU_DRV_SetDevDefaultVtth [R_ARM_CALL: .text+0x168c8] 
    /*00006944*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00006948*/ MOV         R1, R5 
    /*0000694c*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00006950*/ STR         R8, [SP, #20] 
    /*00006954*/ BL          0x0000000000006954          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00006958*/ LDR         R4, [R6] 
    /*0000695c*/ LDR         R6, [SP, #20] 
    /*00006960*/ CMP         R4, #0 
    /*00006964*/ BNE         VouDisable_x6988
    /*00006968*/ MOV         R0, R4 
    /*0000696c*/ BL          0x000000000000696C          @ VOU_DRV_GetDevEnable [R_ARM_CALL: .text+0x16964] 
    /*00006970*/ CMP         R0, #1 
    /*00006974*/ BEQ         VouDisable_x6988
    /*00006978*/ MOV         R0, R4 
    /*0000697c*/ BL          0x000000000000697C          @ VO_SetLowPowerCtrlClkEn [R_ARM_CALL: .text+0x19138] 
    /*00006980*/ MOV         R0, R4 
    /*00006984*/ BL          0x0000000000006984          @ VO_DRV_SetAllCrgClk [R_ARM_CALL: .text+0x19040] 
    VouDisable_x6988:
    /*00006988*/ MOV         R1, R5 
    /*0000698c*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00006990*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00006994*/ STR         R6, [SP, #20] 
    /*00006998*/ BL          0x0000000000006998          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000699c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*000069a0*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*000069a4*/ BL          0x00000000000069A4          @ osal_up [R_ARM_CALL: +0x0] 
    VouDisable_x69a8:
    /*000069a8*/ MOV         R0, R7 
    /*000069ac*/ ADD         SP, SP, #24 
    /*000069b0*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouDisable_x69b4:
    /*000069b4*/ STR         R1, [SP, #8] 
    /*000069b8*/ MOVW        R3, #1278                   @ 0x4fe 
    /*000069bc*/ MOV         R1, #15 
    /*000069c0*/ STR         R3, [SP] 
    /*000069c4*/ STR         R4, [SP, #4] 
    /*000069c8*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2750] 
    /*000069cc*/ LDR         R3, [PC, #104]              @ 0x0000000000006a3c 
    /*000069d0*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2750] 
    /*000069d4*/ MOV         R0, #3 
    /*000069d8*/ MOVW        R7, #32838                  @ 0x8046 
    /*000069dc*/ BL          0x00000000000069DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000069e0*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*000069e4*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*000069e8*/ MOVT        R7, #40975                  @ 0xa00f 
    /*000069ec*/ BL          0x00000000000069EC          @ osal_up [R_ARM_CALL: +0x0] 
    /*000069f0*/ MOV         R0, R7 
    /*000069f4*/ ADD         SP, SP, #24 
    /*000069f8*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouDisable_x69fc:
    /*000069fc*/ MOV         R0, R4 
    /*00006a00*/ BL          0x0000000000006A00          @ VO_DRV_Close [R_ARM_CALL: .text+0x17fd4] 
    /*00006a04*/ B           VouDisable_x6908
    VouDisable_x6a08:
    /*00006a08*/ MOVW        R7, #32769                  @ 0x8001 
    /*00006a0c*/ MOVT        R7, #40975                  @ 0xa00f 
    /*00006a10*/ B           VouDisable_x69a8
    VouDisable_x6a14:
    /*00006a14*/ MOV         R7, #65024                  @ 0xfe00 
    /*00006a18*/ MOVT        R7, #65535                  @ 0xffff 
    /*00006a1c*/ B           VouDisable_x69a8
    VouDisable_x6a20:
    /*00006a20*/ MOV         R2, #0 
    /*00006a24*/ MOV         R0, R4 
    /*00006a28*/ STR         R2, [R3, #108]              @ 0x6c 
    /*00006a2c*/ STR         R2, [R3, #116]              @ 0x74 
    /*00006a30*/ STR         R2, [R3, #112]              @ 0x70 
    /*00006a34*/ BL          0x0000000000006A34          @ VOU_DRV_LoadDetectDeInit [R_ARM_CALL: .text+0x185ec] 
    /*00006a38*/ B           VouDisable_x68f8
    /*00006a3c*/ ANDEQ       R0, R0, IP, LSL #9 
FUNC_END VouDisable


FUNC_BEGIN VouSetVideoCSC
    /*00006a40*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00006a44*/ SUB         SP, SP, #28 
    /*00006a48*/ MOV         R3, #0 
    /*00006a4c*/ MOV         R4, R1 
    /*00006a50*/ MOV         R6, R0 
    /*00006a54*/ STR         R3, [SP, #16] 
    /*00006a58*/ STR         R3, [SP, #12] 
    /*00006a5c*/ STR         R3, [SP, #20] 
    /*00006a60*/ BL          0x0000000000006A60          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00006a64*/ CMP         R0, #0 
    /*00006a68*/ BNE         VouSetVideoCSC_x6b94
    /*00006a6c*/ MOV         R0, R4 
    /*00006a70*/ BL          0x0000000000006A70          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00006a74*/ SUBS        R3, R0, #0 
    /*00006a78*/ BNE         VouSetVideoCSC_x6ba0
    /*00006a7c*/ ADD         R5, SP, #24 
    /*00006a80*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00006a84*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00006a88*/ STR         R3, [R5, #-16]! 
    /*00006a8c*/ MOV         R1, R5 
    /*00006a90*/ BL          0x0000000000006A90          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00006a94*/ LDR         R7, [SP, #8] 
    /*00006a98*/ MOV         R0, #1 
    /*00006a9c*/ BL          0x0000000000006A9C          @ VO_DRV_SetAllCrgClk [R_ARM_CALL: .text+0x19040] 
    /*00006aa0*/ MOV         R1, R5 
    /*00006aa4*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00006aa8*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00006aac*/ STR         R7, [SP, #8] 
    /*00006ab0*/ BL          0x0000000000006AB0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00006ab4*/ MOV         R0, R6 
    /*00006ab8*/ BL          0x0000000000006AB8          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*00006abc*/ CMN         R0, #1 
    /*00006ac0*/ MOV         R5, R0 
    /*00006ac4*/ BEQ         VouSetVideoCSC_x6bb8
    /*00006ac8*/ MOV         R1, R4 
    /*00006acc*/ MOV         R0, R6 
    /*00006ad0*/ BL          0x0000000000006AD0          @ VOU_DRV_CheckVideoCsc [R_ARM_CALL: .text+0x163f4] 
    /*00006ad4*/ SUBS        R7, R0, #0 
    /*00006ad8*/ BEQ         VouSetVideoCSC_x6ae8
    VouSetVideoCSC_x6adc:
    /*00006adc*/ MOV         R0, R7 
    /*00006ae0*/ ADD         SP, SP, #28 
    /*00006ae4*/ POP         {R4, R5, R6, R7, PC} 
    VouSetVideoCSC_x6ae8:
    /*00006ae8*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00006aec*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00006af0*/ BL          0x0000000000006AF0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00006af4*/ CMP         R0, #0 
    /*00006af8*/ BNE         VouSetVideoCSC_x6bac
    /*00006afc*/ LDR         R3, [PC, #228]              @ 0x0000000000006be8 
    /*00006b00*/ MOVW        R0, #12192                  @ 0x2fa0 
    /*00006b04*/ MOV         R1, R4 
    /*00006b08*/ MOV         R2, #20 
    /*00006b0c*/ MLA         R0, R0, R6, R3 
    /*00006b10*/ BL          0x0000000000006B10          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006b14*/ MOVW        R3, #0                      @ g_astVoDev [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*00006b18*/ MOVT        R3, #0                      @ g_astVoDev [R_ARM_MOVT_ABS: .bss+0x8] 
    /*00006b1c*/ MOV         R1, #232                    @ 0xe8 
    /*00006b20*/ MOV         R0, R5 
    /*00006b24*/ LDR         R2, [R4] 
    /*00006b28*/ MLA         R5, R1, R5, R3 
    /*00006b2c*/ SUB         R3, R2, #3 
    /*00006b30*/ CMP         R2, #8 
    /*00006b34*/ CMPNE       R3, #1 
    /*00006b38*/ MOVLS       R2, #1 
    /*00006b3c*/ MOVHI       R2, #0 
    /*00006b40*/ LDR         R1, [R5, #16] 
    /*00006b44*/ BL          0x0000000000006B44          @ VO_DRV_SetDevBgColor [R_ARM_CALL: .text+0x17ec8] 
    /*00006b48*/ MOV         R1, R4 
    /*00006b4c*/ MOV         R0, R6 
    /*00006b50*/ BL          0x0000000000006B50          @ VOU_DRV_SetDefaultCsc [R_ARM_CALL: .text+0x191e0] 
    /*00006b54*/ MOV         R1, R4 
    /*00006b58*/ MOV         R0, R6 
    /*00006b5c*/ BL          0x0000000000006B5C          @ VOU_DRV_SetDefaultVHDRCsc [R_ARM_CALL: .text+0x191fc] 
    /*00006b60*/ ADD         R1, SP, #12 
    /*00006b64*/ MOV         R0, R6 
    /*00006b68*/ BL          0x0000000000006B68          @ VOU_DRV_GetLayerCscParam [R_ARM_CALL: .text+0x1650c] 
    /*00006b6c*/ ADD         R2, SP, #12 
    /*00006b70*/ MOV         R1, R4 
    /*00006b74*/ MOV         R0, R6 
    /*00006b78*/ BL          0x0000000000006B78          @ VOU_DRV_LayerCSCConfig [R_ARM_CALL: .text+0x1652c] 
    /*00006b7c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00006b80*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00006b84*/ BL          0x0000000000006B84          @ osal_up [R_ARM_CALL: +0x0] 
    /*00006b88*/ MOV         R0, R7 
    /*00006b8c*/ ADD         SP, SP, #28 
    /*00006b90*/ POP         {R4, R5, R6, R7, PC} 
    VouSetVideoCSC_x6b94:
    /*00006b94*/ MOVW        R7, #32877                  @ 0x806d 
    /*00006b98*/ MOVT        R7, #40975                  @ 0xa00f 
    /*00006b9c*/ B           VouSetVideoCSC_x6adc
    VouSetVideoCSC_x6ba0:
    /*00006ba0*/ MOVW        R7, #32774                  @ 0x8006 
    /*00006ba4*/ MOVT        R7, #40975                  @ 0xa00f 
    /*00006ba8*/ B           VouSetVideoCSC_x6adc
    VouSetVideoCSC_x6bac:
    /*00006bac*/ MOV         R7, #65024                  @ 0xfe00 
    /*00006bb0*/ MOVT        R7, #65535                  @ 0xffff 
    /*00006bb4*/ B           VouSetVideoCSC_x6adc
    VouSetVideoCSC_x6bb8:
    /*00006bb8*/ MOVW        R3, #1434                   @ 0x59a 
    /*00006bbc*/ STR         R6, [SP, #4] 
    /*00006bc0*/ STR         R3, [SP] 
    /*00006bc4*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2794] 
    /*00006bc8*/ LDR         R3, [PC, #28]               @ 0x0000000000006bec 
    /*00006bcc*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2794] 
    /*00006bd0*/ MOV         R1, #15 
    /*00006bd4*/ MOV         R0, #3 
    /*00006bd8*/ MOVW        R7, #32879                  @ 0x806f 
    /*00006bdc*/ BL          0x0000000000006BDC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006be0*/ MOVT        R7, #40975                  @ 0xa00f 
    /*00006be4*/ B           VouSetVideoCSC_x6adc
    /*00006be8*/ ANDEQ       R0, R0, R4, ASR #32         @ g_astVoLayer [R_ARM_ABS32: .bss+0xf0] 
    /*00006bec*/ MULEQ       R0, R8, R4 
FUNC_END VouSetVideoCSC


FUNC_BEGIN VouGetVideoCSC
    /*00006bf0*/ PUSH        {R4, R5, R6, LR} 
    /*00006bf4*/ SUB         SP, SP, #24 
    /*00006bf8*/ MOV         R5, R1 
    /*00006bfc*/ MOV         R4, R0 
    /*00006c00*/ BL          0x0000000000006C00          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00006c04*/ CMP         R0, #0 
    /*00006c08*/ BNE         VouGetVideoCSC_x6c9c
    /*00006c0c*/ MOV         R0, R5 
    /*00006c10*/ BL          0x0000000000006C10          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00006c14*/ SUBS        R6, R0, #0 
    /*00006c18*/ BNE         VouGetVideoCSC_x6ca8
    /*00006c1c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00006c20*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00006c24*/ BL          0x0000000000006C24          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00006c28*/ CMP         R0, #0 
    /*00006c2c*/ BNE         VouGetVideoCSC_x6cb4
    /*00006c30*/ MOV         R0, R4 
    /*00006c34*/ BL          0x0000000000006C34          @ VO_DRV_IsVHDR [R_ARM_CALL: .text+0x15504] 
    /*00006c38*/ ADD         R1, SP, #4 
    /*00006c3c*/ CMP         R0, #0 
    /*00006c40*/ MOV         R0, R4 
    /*00006c44*/ BNE         VouGetVideoCSC_x6c90
    /*00006c48*/ BL          0x0000000000006C48          @ VOU_DRV_GetDefaultCsc [R_ARM_CALL: .text+0x191a0] 
    /*00006c4c*/ LDR         R3, [PC, #108]              @ 0x0000000000006cc0 
    VouGetVideoCSC_x6c50:
    /*00006c50*/ MOVW        R0, #12192                  @ 0x2fa0 
    /*00006c54*/ ADD         R1, SP, #4 
    /*00006c58*/ MLA         R4, R0, R4, R3 
    /*00006c5c*/ MOV         R2, #20 
    /*00006c60*/ MOV         R0, R4 
    /*00006c64*/ BL          0x0000000000006C64          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006c68*/ MOV         R1, R4 
    /*00006c6c*/ MOV         R0, R5 
    /*00006c70*/ MOV         R2, #20 
    /*00006c74*/ BL          0x0000000000006C74          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006c78*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00006c7c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00006c80*/ BL          0x0000000000006C80          @ osal_up [R_ARM_CALL: +0x0] 
    VouGetVideoCSC_x6c84:
    /*00006c84*/ MOV         R0, R6 
    /*00006c88*/ ADD         SP, SP, #24 
    /*00006c8c*/ POP         {R4, R5, R6, PC} 
    VouGetVideoCSC_x6c90:
    /*00006c90*/ BL          0x0000000000006C90          @ VOU_DRV_GetDefaultVHDRCsc [R_ARM_CALL: .text+0x191c0] 
    /*00006c94*/ LDR         R3, [PC, #40]               @ 0x0000000000006cc4 
    /*00006c98*/ B           VouGetVideoCSC_x6c50
    VouGetVideoCSC_x6c9c:
    /*00006c9c*/ MOVW        R6, #32877                  @ 0x806d 
    /*00006ca0*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00006ca4*/ B           VouGetVideoCSC_x6c84
    VouGetVideoCSC_x6ca8:
    /*00006ca8*/ MOVW        R6, #32774                  @ 0x8006 
    /*00006cac*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00006cb0*/ B           VouGetVideoCSC_x6c84
    VouGetVideoCSC_x6cb4:
    /*00006cb4*/ MOV         R6, #65024                  @ 0xfe00 
    /*00006cb8*/ MOVT        R6, #65535                  @ 0xffff 
    /*00006cbc*/ B           VouGetVideoCSC_x6c84
    /*00006cc0*/ ANDEQ       R0, R0, R4, ASR #32         @ g_astVoLayer [R_ARM_ABS32: .bss+0xf0] 
    /*00006cc4*/ ANDEQ       R0, R0, IP, ASR R0          @ g_astVoLayer [R_ARM_ABS32: .bss+0xf0] 
FUNC_END VouGetVideoCSC


FUNC_BEGIN VouSetVideoPartitionMode
    /*00006cc8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00006ccc*/ SUB         SP, SP, #12 
    /*00006cd0*/ MOVW        R3, #1610                   @ 0x64a 
    /*00006cd4*/ MOV         R1, #15 
    /*00006cd8*/ STR         R3, [SP] 
    /*00006cdc*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x27d4] 
    /*00006ce0*/ LDR         R3, [PC, #24]               @ 0x0000000000006d00 
    /*00006ce4*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x27d4] 
    /*00006ce8*/ MOV         R0, #3 
    /*00006cec*/ BL          0x0000000000006CEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006cf0*/ MOVW        R0, #32776                  @ 0x8008 
    /*00006cf4*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00006cf8*/ ADD         SP, SP, #12 
    /*00006cfc*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00006d00*/ ANDEQ       R0, R0, R8, LSR #9 
FUNC_END VouSetVideoPartitionMode


FUNC_BEGIN VouGetVideoPartitionMode
    /*00006d04*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00006d08*/ SUB         SP, SP, #12 
    /*00006d0c*/ MOVW        R3, #1636                   @ 0x664 
    /*00006d10*/ MOV         R1, #15 
    /*00006d14*/ STR         R3, [SP] 
    /*00006d18*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2828] 
    /*00006d1c*/ LDR         R3, [PC, #24]               @ 0x0000000000006d3c 
    /*00006d20*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2828] 
    /*00006d24*/ MOV         R0, #3 
    /*00006d28*/ BL          0x0000000000006D28          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006d2c*/ MOVW        R0, #32776                  @ 0x8008 
    /*00006d30*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00006d34*/ ADD         SP, SP, #12 
    /*00006d38*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00006d3c*/ ANDEQ       R0, R0, R4, ASR #9 
FUNC_END VouGetVideoPartitionMode


FUNC_BEGIN VouIsLayerPosChanged
    /*00006d40*/ PUSH        {R4, R5, LR} 
    /*00006d44*/ SUB         SP, SP, #52                 @ 0x34 
    /*00006d48*/ MOV         R5, R0 
    /*00006d4c*/ MOV         R2, #44                     @ 0x2c 
    /*00006d50*/ MOV         R4, R1 
    /*00006d54*/ ADD         R0, SP, #4 
    /*00006d58*/ MOV         R1, #0 
    /*00006d5c*/ BL          0x0000000000006D5C          @ memset [R_ARM_CALL: +0x0] 
    /*00006d60*/ MOV         R0, R5 
    /*00006d64*/ BL          0x0000000000006D64          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00006d68*/ CMP         R0, #0 
    /*00006d6c*/ BNE         VouIsLayerPosChanged_x6dc8
    /*00006d70*/ MOV         R0, R4 
    /*00006d74*/ BL          0x0000000000006D74          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00006d78*/ CMP         R0, #0 
    /*00006d7c*/ BNE         VouIsLayerPosChanged_x6dd4
    /*00006d80*/ LDR         R3, [PC, #88]               @ 0x0000000000006de0 
    /*00006d84*/ MOVW        R1, #12192                  @ 0x2fa0 
    /*00006d88*/ MOV         R2, #44                     @ 0x2c 
    /*00006d8c*/ ADD         R0, SP, #4 
    /*00006d90*/ MLA         R1, R1, R5, R3 
    /*00006d94*/ BL          0x0000000000006D94          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006d98*/ LDR         IP, [R4] 
    /*00006d9c*/ LDR         R3, [R4, #4] 
    /*00006da0*/ ADD         R0, SP, #4 
    /*00006da4*/ MOV         R1, R4 
    /*00006da8*/ MOV         R2, #44                     @ 0x2c 
    /*00006dac*/ STR         IP, [SP, #4] 
    /*00006db0*/ STR         R3, [SP, #8] 
    /*00006db4*/ BL          0x0000000000006DB4          @ osal_memcmp [R_ARM_CALL: +0x0] 
    /*00006db8*/ CLZ         R0, R0 
    /*00006dbc*/ LSR         R0, R0, #5 
    VouIsLayerPosChanged_x6dc0:
    /*00006dc0*/ ADD         SP, SP, #52                 @ 0x34 
    /*00006dc4*/ POP         {R4, R5, PC} 
    VouIsLayerPosChanged_x6dc8:
    /*00006dc8*/ MOVW        R0, #32877                  @ 0x806d 
    /*00006dcc*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00006dd0*/ B           VouIsLayerPosChanged_x6dc0
    VouIsLayerPosChanged_x6dd4:
    /*00006dd4*/ MOVW        R0, #32774                  @ 0x8006 
    /*00006dd8*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00006ddc*/ B           VouIsLayerPosChanged_x6dc0
    /*00006de0*/ ANDEQ       R0, R0, R0, ROR R0          @ g_astVoLayer [R_ARM_ABS32: .bss+0xf0] 
FUNC_END VouIsLayerPosChanged


FUNC_BEGIN VouSetLayerAttr
    /*00006de4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00006de8*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00006dec*/ MOV         R7, R1 
    /*00006df0*/ MOV         R5, R0 
    /*00006df4*/ BL          0x0000000000006DF4          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00006df8*/ CMP         R0, #0 
    /*00006dfc*/ BNE         VouSetLayerAttr_x700c
    /*00006e00*/ MOV         R0, R7 
    /*00006e04*/ BL          0x0000000000006E04          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00006e08*/ CMP         R0, #0 
    /*00006e0c*/ BNE         VouSetLayerAttr_x7018
    /*00006e10*/ MOV         R0, R5 
    /*00006e14*/ BL          0x0000000000006E14          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*00006e18*/ CMN         R0, #1 
    /*00006e1c*/ MOV         R9, R0 
    /*00006e20*/ BEQ         VouSetLayerAttr_x7084
    /*00006e24*/ MOVW        R4, #12192                  @ 0x2fa0 
    /*00006e28*/ MOVW        R6, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00006e2c*/ MUL         R4, R4, R5 
    /*00006e30*/ MOVT        R6, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00006e34*/ ADD         R8, R6, R4 
    /*00006e38*/ LDR         R3, [R6, R4] 
    /*00006e3c*/ CMP         R3, #1 
    /*00006e40*/ BEQ         VouSetLayerAttr_x6fac
    /*00006e44*/ MOV         R3, #232                    @ 0xe8 
    /*00006e48*/ MOVW        R2, #0                      @ g_astVoDev [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*00006e4c*/ MUL         R3, R3, R0 
    /*00006e50*/ MOVT        R2, #0                      @ g_astVoDev [R_ARM_MOVT_ABS: .bss+0x8] 
    /*00006e54*/ ADD         SL, R2, R3 
    /*00006e58*/ LDR         R3, [R2, R3] 
    /*00006e5c*/ CMP         R3, #0 
    /*00006e60*/ BEQ         VouSetLayerAttr_x7024
    /*00006e64*/ MOV         R2, R7 
    /*00006e68*/ MOV         R1, R5 
    /*00006e6c*/ BL          0x0000000000006E6C          @ VOU_DRV_CheckLayerAttr [R_ARM_CALL: .text+0x18bcc] 
    /*00006e70*/ SUBS        FP, R0, #0 
    /*00006e74*/ BNE         VouSetLayerAttr_x6f7c
    /*00006e78*/ LDR         R1, [R7, #24] 
    /*00006e7c*/ MOVW        R0, #16960                  @ 0x4240 
    /*00006e80*/ MOVT        R0, #15 
    /*00006e84*/ STR         R1, [R8, #32] 
    /*00006e88*/ BL          0x0000000000006E88          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00006e8c*/ LDR         IP, [SL, #84]               @ 0x54 
    /*00006e90*/ MOVW        R3, #1758                   @ 0x6de 
    /*00006e94*/ STR         R5, [SP, #4] 
    /*00006e98*/ STR         R3, [SP] 
    /*00006e9c*/ MOV         R1, #15 
    /*00006ea0*/ STR         IP, [SP, #16] 
    /*00006ea4*/ MOVW        R2, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x29cc] 
    /*00006ea8*/ STR         IP, [SP, #12] 
    /*00006eac*/ MOVT        R2, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x29cc] 
    /*00006eb0*/ LDR         R3, [PC, #508]              @ 0x00000000000070b4 
    /*00006eb4*/ STR         R0, [R8, #36]               @ 0x24 
    /*00006eb8*/ MOV         R0, #7 
    /*00006ebc*/ LDR         LR, [R7, #24] 
    /*00006ec0*/ STR         IP, [R8, #52]               @ 0x34 
    /*00006ec4*/ STR         IP, [R8, #44]               @ 0x2c 
    /*00006ec8*/ STR         LR, [SP, #8] 
    /*00006ecc*/ STR         LR, [R8, #48]               @ 0x30 
    /*00006ed0*/ BL          0x0000000000006ED0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00006ed4*/ ADD         R0, R4, #112                @ 0x70 
    /*00006ed8*/ MOV         R2, #44                     @ 0x2c 
    /*00006edc*/ MOV         R1, R7 
    /*00006ee0*/ ADD         R0, R6, R0 
    /*00006ee4*/ BL          0x0000000000006EE4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006ee8*/ MOV         R3, #1 
    /*00006eec*/ MOV         R1, R7 
    /*00006ef0*/ STR         R3, [R8, #4] 
    /*00006ef4*/ MOV         R0, R5 
    /*00006ef8*/ BL          0x0000000000006EF8          @ VOU_DRV_SetLayerAttr [R_ARM_CALL: .text+0x1750c] 
    /*00006efc*/ MOV         R0, R9 
    /*00006f00*/ BL          0x0000000000006F00          @ VO_DRV_IsPhyDevHD [R_ARM_CALL: .text+0x1858c] 
    /*00006f04*/ CMP         R0, #0 
    /*00006f08*/ BNE         VouSetLayerAttr_x6f1c
    /*00006f0c*/ MOV         R0, R9 
    /*00006f10*/ BL          0x0000000000006F10          @ VO_DRV_IsPhyDevSD [R_ARM_CALL: .text+0x185b0] 
    /*00006f14*/ CMP         R0, #0 
    /*00006f18*/ BEQ         VouSetLayerAttr_x6fa0
    VouSetLayerAttr_x6f1c:
    /*00006f1c*/ ADD         R4, R4, #68                 @ 0x44 
    /*00006f20*/ MOV         R0, R5 
    /*00006f24*/ ADD         R6, R6, R4 
    /*00006f28*/ MOV         R1, #255                    @ 0xff 
    /*00006f2c*/ BL          0x0000000000006F2C          @ VOU_DRV_SetLayerAlpha [R_ARM_CALL: .text+0x17590] 
    /*00006f30*/ MOV         R0, R5 
    /*00006f34*/ MOV         R1, R6 
    /*00006f38*/ BL          0x0000000000006F38          @ VOU_DRV_GetDefaultCsc [R_ARM_CALL: .text+0x191a0] 
    /*00006f3c*/ MOV         R1, R6 
    /*00006f40*/ ADD         R2, SP, #28 
    /*00006f44*/ MOV         R0, R5 
    /*00006f48*/ MOV         IP, #0 
    /*00006f4c*/ MOV         R3, #11 
    /*00006f50*/ STR         IP, [SP, #32] 
    /*00006f54*/ STR         R3, [SP, #28] 
    /*00006f58*/ MOV         R3, #4080                   @ 0xff0 
    /*00006f5c*/ STR         R3, [SP, #36]               @ 0x24 
    /*00006f60*/ BL          0x0000000000006F60          @ VOU_DRV_LayerCSCConfig [R_ARM_CALL: .text+0x1652c] 
    /*00006f64*/ MOV         R0, R5 
    /*00006f68*/ MOV         R1, #1 
    /*00006f6c*/ BL          0x0000000000006F6C          @ VOU_DRV_LayerCSCEnable [R_ARM_CALL: .text+0x166f4] 
    /*00006f70*/ MOV         R0, FP 
    /*00006f74*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00006f78*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouSetLayerAttr_x6f7c:
    /*00006f7c*/ MOV         R3, #1744                   @ 0x6d0 
    /*00006f80*/ STR         R5, [SP, #4] 
    VouSetLayerAttr_x6f84:
    /*00006f84*/ MOVW        R2, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x28e0] 
    /*00006f88*/ STR         R3, [SP] 
    /*00006f8c*/ MOVT        R2, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x28e0] 
    /*00006f90*/ LDR         R3, [PC, #284]              @ 0x00000000000070b4 
    /*00006f94*/ MOV         R1, #15 
    /*00006f98*/ MOV         R0, #3 
    /*00006f9c*/ BL          0x0000000000006F9C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VouSetLayerAttr_x6fa0:
    /*00006fa0*/ MOV         R0, FP 
    /*00006fa4*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00006fa8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouSetLayerAttr_x6fac:
    /*00006fac*/ MOV         R1, R7 
    /*00006fb0*/ MOV         R0, R5 
    /*00006fb4*/ BL          0x0000000000006FB4          @ VouIsLayerPosChanged [R_ARM_CALL: .text+0x6d40] 
    /*00006fb8*/ LDR         R3, [R8, #180]              @ 0xb4 
    /*00006fbc*/ CMP         R3, #0 
    /*00006fc0*/ CMPEQ       R0, #1 
    /*00006fc4*/ BNE         VouSetLayerAttr_x7054
    /*00006fc8*/ MOV         R0, R9 
    /*00006fcc*/ MOV         R2, R7 
    /*00006fd0*/ MOV         R1, R5 
    /*00006fd4*/ BL          0x0000000000006FD4          @ VOU_DRV_CheckLayerAttr [R_ARM_CALL: .text+0x18bcc] 
    /*00006fd8*/ SUBS        FP, R0, #0 
    /*00006fdc*/ STRNE       R5, [SP, #4] 
    /*00006fe0*/ MOVWNE      R3, #1716                   @ 0x6b4 
    /*00006fe4*/ BNE         VouSetLayerAttr_x6f84
    /*00006fe8*/ ADD         R0, R4, #112                @ 0x70 
    /*00006fec*/ MOV         R1, R7 
    /*00006ff0*/ MOV         R2, #44                     @ 0x2c 
    /*00006ff4*/ ADD         R0, R6, R0 
    /*00006ff8*/ BL          0x0000000000006FF8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00006ffc*/ MOV         R1, R7 
    /*00007000*/ MOV         R0, R5 
    /*00007004*/ BL          0x0000000000007004          @ VOU_DRV_SetLayerAttr [R_ARM_CALL: .text+0x1750c] 
    /*00007008*/ B           VouSetLayerAttr_x6fa0
    VouSetLayerAttr_x700c:
    /*0000700c*/ MOVW        FP, #32877                  @ 0x806d 
    /*00007010*/ MOVT        FP, #40975                  @ 0xa00f 
    /*00007014*/ B           VouSetLayerAttr_x6fa0
    VouSetLayerAttr_x7018:
    /*00007018*/ MOVW        FP, #32774                  @ 0x8006 
    /*0000701c*/ MOVT        FP, #40975                  @ 0xa00f 
    /*00007020*/ B           VouSetLayerAttr_x6fa0
    VouSetLayerAttr_x7024:
    /*00007024*/ STR         R0, [SP, #4] 
    /*00007028*/ MOVW        R3, #1737                   @ 0x6c9 
    /*0000702c*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2994] 
    /*00007030*/ STR         R3, [SP] 
    /*00007034*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2994] 
    /*00007038*/ LDR         R3, [PC, #116]              @ 0x00000000000070b4 
    /*0000703c*/ MOV         R1, #15 
    /*00007040*/ MOV         R0, #3 
    /*00007044*/ MOVW        FP, #32833                  @ 0x8041 
    /*00007048*/ BL          0x0000000000007048          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000704c*/ MOVT        FP, #40975                  @ 0xa00f 
    /*00007050*/ B           VouSetLayerAttr_x6fa0
    VouSetLayerAttr_x7054:
    /*00007054*/ MOVW        R3, #1726                   @ 0x6be 
    /*00007058*/ STR         R5, [SP, #4] 
    /*0000705c*/ STR         R3, [SP] 
    /*00007060*/ MOVW        R2, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2920] 
    /*00007064*/ LDR         R3, [PC, #72]               @ 0x00000000000070b4 
    /*00007068*/ MOVT        R2, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2920] 
    /*0000706c*/ MOV         R1, #15 
    /*00007070*/ MOV         R0, #3 
    /*00007074*/ MOVW        FP, #32838                  @ 0x8046 
    /*00007078*/ BL          0x0000000000007078          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000707c*/ MOVT        FP, #40975                  @ 0xa00f 
    /*00007080*/ B           VouSetLayerAttr_x6fa0
    VouSetLayerAttr_x7084:
    /*00007084*/ MOVW        R3, #1698                   @ 0x6a2 
    /*00007088*/ STR         R5, [SP, #4] 
    /*0000708c*/ STR         R3, [SP] 
    /*00007090*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x287c] 
    /*00007094*/ LDR         R3, [PC, #24]               @ 0x00000000000070b4 
    /*00007098*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x287c] 
    /*0000709c*/ MOV         R1, #15 
    /*000070a0*/ MOV         R0, #3 
    /*000070a4*/ MOVW        FP, #32776                  @ 0x8008 
    /*000070a8*/ BL          0x00000000000070A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000070ac*/ MOVT        FP, #40975                  @ 0xa00f 
    /*000070b0*/ B           VouSetLayerAttr_x6fa0
    /*000070b4*/ ANDEQ       R0, R0, R0, ROR #9 
FUNC_END VouSetLayerAttr


FUNC_BEGIN VouGetLayerAttr
    /*000070b8*/ PUSH        {R4, R5, R6, LR} 
    /*000070bc*/ MOV         R6, R0 
    /*000070c0*/ MOV         R0, R1 
    /*000070c4*/ MOV         R4, R1 
    /*000070c8*/ BL          0x00000000000070C8          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*000070cc*/ SUBS        R5, R0, #0 
    /*000070d0*/ BNE         VouGetLayerAttr_x70f4
    /*000070d4*/ LDR         R3, [PC, #36]               @ 0x0000000000007100 
    /*000070d8*/ MOVW        R1, #12192                  @ 0x2fa0 
    /*000070dc*/ MOV         R0, R4 
    /*000070e0*/ MOV         R2, #44                     @ 0x2c 
    /*000070e4*/ MLA         R1, R1, R6, R3 
    /*000070e8*/ BL          0x00000000000070E8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    VouGetLayerAttr_x70ec:
    /*000070ec*/ MOV         R0, R5 
    /*000070f0*/ POP         {R4, R5, R6, PC} 
    VouGetLayerAttr_x70f4:
    /*000070f4*/ MOVW        R5, #32774                  @ 0x8006 
    /*000070f8*/ MOVT        R5, #40975                  @ 0xa00f 
    /*000070fc*/ B           VouGetLayerAttr_x70ec
    /*00007100*/ ANDEQ       R0, R0, R0, ROR R0          @ g_astVoLayer [R_ARM_ABS32: .bss+0xf0] 
FUNC_END VouGetLayerAttr


FUNC_BEGIN VouSetVideoLayerAttr
    /*00007104*/ PUSH        {R4, R5, R6, LR} 
    /*00007108*/ MOV         R4, R0 
    /*0000710c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00007110*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00007114*/ MOV         R5, R1 
    /*00007118*/ BL          0x0000000000007118          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000711c*/ CMP         R0, #0 
    /*00007120*/ BNE         VouSetVideoLayerAttr_x7148
    /*00007124*/ MOV         R0, R4 
    /*00007128*/ MOV         R1, R5 
    /*0000712c*/ BL          0x000000000000712C          @ VouSetLayerAttr [R_ARM_CALL: .text+0x6de4] 
    /*00007130*/ MOV         R4, R0 
    /*00007134*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00007138*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000713c*/ BL          0x000000000000713C          @ osal_up [R_ARM_CALL: +0x0] 
    VouSetVideoLayerAttr_x7140:
    /*00007140*/ MOV         R0, R4 
    /*00007144*/ POP         {R4, R5, R6, PC} 
    VouSetVideoLayerAttr_x7148:
    /*00007148*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000714c*/ MOVT        R4, #65535                  @ 0xffff 
    /*00007150*/ B           VouSetVideoLayerAttr_x7140
FUNC_END VouSetVideoLayerAttr


FUNC_BEGIN VouGetVideoLayerAttr
    /*00007154*/ PUSH        {R4, R5, R6, LR} 
    /*00007158*/ MOV         R5, R1 
    /*0000715c*/ MOV         R4, R0 
    /*00007160*/ BL          0x0000000000007160          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00007164*/ CMP         R0, #0 
    /*00007168*/ BNE         VouGetVideoLayerAttr_x71a4
    /*0000716c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00007170*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00007174*/ BL          0x0000000000007174          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00007178*/ CMP         R0, #0 
    /*0000717c*/ BNE         VouGetVideoLayerAttr_x71b0
    /*00007180*/ MOV         R0, R4 
    /*00007184*/ MOV         R1, R5 
    /*00007188*/ BL          0x0000000000007188          @ VouGetLayerAttr [R_ARM_CALL: .text+0x70b8] 
    /*0000718c*/ MOV         R4, R0 
    /*00007190*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00007194*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00007198*/ BL          0x0000000000007198          @ osal_up [R_ARM_CALL: +0x0] 
    VouGetVideoLayerAttr_x719c:
    /*0000719c*/ MOV         R0, R4 
    /*000071a0*/ POP         {R4, R5, R6, PC} 
    VouGetVideoLayerAttr_x71a4:
    /*000071a4*/ MOVW        R4, #32877                  @ 0x806d 
    /*000071a8*/ MOVT        R4, #40975                  @ 0xa00f 
    /*000071ac*/ B           VouGetVideoLayerAttr_x719c
    VouGetVideoLayerAttr_x71b0:
    /*000071b0*/ MOV         R4, #65024                  @ 0xfe00 
    /*000071b4*/ MOVT        R4, #65535                  @ 0xffff 
    /*000071b8*/ B           VouGetVideoLayerAttr_x719c
FUNC_END VouGetVideoLayerAttr


FUNC_BEGIN VouSetLayerDdr
    /*000071bc*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*000071c0*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*000071c4*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*000071c8*/ MOV         R0, #1 
    /*000071cc*/ MLA         R1, R3, R1, R2 
    /*000071d0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000071d4*/ SUB         SP, SP, #44                 @ 0x2c 
    /*000071d8*/ LDR         R3, [R1, #180]              @ 0xb4 
    /*000071dc*/ CMP         R3, #0 
    /*000071e0*/ LDREQ       R3, [R1, #268]              @ 0x10c 
    /*000071e4*/ LDRNE       R3, [R1, #280]              @ 0x118 
    /*000071e8*/ STR         R3, [SP] 
    /*000071ec*/ BL          0x00000000000071EC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000071f0*/ LDR         R3, [R0, #28] 
    /*000071f4*/ MOV         R0, SP 
    /*000071f8*/ BLX         R3 
    /*000071fc*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00007200*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VouSetLayerDdr


FUNC_BEGIN VouEnableLayer
    /*00007204*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00007208*/ MOV         R4, #0 
    /*0000720c*/ SUB         SP, SP, #112                @ 0x70 
    /*00007210*/ MOV         R5, R0 
    /*00007214*/ MOV         R1, R4 
    /*00007218*/ MOV         R2, #36                     @ 0x24 
    /*0000721c*/ ADD         R0, SP, #40                 @ 0x28 
    /*00007220*/ STR         R4, [SP, #20] 
    /*00007224*/ BL          0x0000000000007224          @ memset [R_ARM_CALL: +0x0] 
    /*00007228*/ MOV         R1, R4 
    /*0000722c*/ MOV         R2, #36                     @ 0x24 
    /*00007230*/ ADD         R0, SP, #76                 @ 0x4c 
    /*00007234*/ BL          0x0000000000007234          @ memset [R_ARM_CALL: +0x0] 
    /*00007238*/ MOV         R0, R5 
    /*0000723c*/ BL          0x000000000000723C          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00007240*/ SUBS        R8, R0, #0 
    /*00007244*/ BNE         VouEnableLayer_x7580
    /*00007248*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000724c*/ MOVW        R6, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00007250*/ MUL         R3, R3, R5 
    /*00007254*/ MOVT        R6, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00007258*/ ADD         R2, R6, R3 
    /*0000725c*/ LDR         R3, [R6, R3] 
    /*00007260*/ CMP         R3, #1 
    /*00007264*/ BEQ         VouEnableLayer_x7528
    /*00007268*/ LDR         R3, [R2, #4] 
    /*0000726c*/ CMP         R3, #1 
    /*00007270*/ BNE         VouEnableLayer_x758c
    /*00007274*/ LDR         R3, [R2, #180]              @ 0xb4 
    /*00007278*/ CMP         R3, #1 
    /*0000727c*/ BEQ         VouEnableLayer_x73f4
    VouEnableLayer_x7280:
    /*00007280*/ MOV         R0, R5 
    /*00007284*/ BL          0x0000000000007284          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*00007288*/ CMN         R0, #1 
    /*0000728c*/ MOV         R7, R0 
    /*00007290*/ BEQ         VouEnableLayer_x75bc
    /*00007294*/ MOV         R3, #232                    @ 0xe8 
    /*00007298*/ MOVW        R2, #0                      @ g_astVoDev [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*0000729c*/ MUL         R3, R3, R0 
    /*000072a0*/ MOVT        R2, #0                      @ g_astVoDev [R_ARM_MOVT_ABS: .bss+0x8] 
    /*000072a4*/ LDR         R3, [R2, R3] 
    /*000072a8*/ CMP         R3, #1 
    /*000072ac*/ BNE         VouEnableLayer_x7550
    /*000072b0*/ MOVW        R4, #12192                  @ 0x2fa0 
    /*000072b4*/ MOV         R0, #2 
    /*000072b8*/ MLA         R4, R4, R5, R6 
    /*000072bc*/ MOV         R9, #0 
    /*000072c0*/ STR         R9, [SP, #64]               @ 0x40 
    /*000072c4*/ MOV         SL, #15 
    /*000072c8*/ STR         R9, [SP, #68]               @ 0x44 
    /*000072cc*/ STR         R9, [SP, #72]               @ 0x48 
    /*000072d0*/ STR         R9, [SP, #56]               @ 0x38 
    /*000072d4*/ LDR         R3, [R4, #132]              @ 0x84 
    /*000072d8*/ LDR         R2, [R4, #152]              @ 0x98 
    /*000072dc*/ LDR         R1, [R4, #128]              @ 0x80 
    /*000072e0*/ STR         R3, [SP, #48]               @ 0x30 
    /*000072e4*/ LDR         R3, [R4, #140]              @ 0x8c 
    /*000072e8*/ STR         R2, [SP, #60]               @ 0x3c 
    /*000072ec*/ STR         R1, [SP, #44]               @ 0x2c 
    /*000072f0*/ STR         R9, [SP, #52]               @ 0x34 
    /*000072f4*/ STR         R3, [SP, #40]               @ 0x28 
    /*000072f8*/ BL          0x00000000000072F8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000072fc*/ ADD         R1, SP, #76                 @ 0x4c 
    /*00007300*/ LDR         R3, [R0, #120]              @ 0x78 
    /*00007304*/ ADD         R0, SP, #40                 @ 0x28 
    /*00007308*/ BLX         R3 
    /*0000730c*/ MOV         R0, #2 
    /*00007310*/ STR         R9, [SP, #36]               @ 0x24 
    /*00007314*/ STR         R5, [SP, #32] 
    /*00007318*/ STR         SL, [SP, #28] 
    /*0000731c*/ LDR         R9, [SP, #76]               @ 0x4c 
    /*00007320*/ BL          0x0000000000007320          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00007324*/ ADD         R1, SP, #20 
    /*00007328*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0000732c*/ ADD         R0, SP, #28 
    /*00007330*/ BLX         R3 
    /*00007334*/ LDR         R3, [R4, #180]              @ 0xb4 
    /*00007338*/ CMP         R3, #0 
    /*0000733c*/ BEQ         VouEnableLayer_x7434
    VouEnableLayer_x7340:
    /*00007340*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00007344*/ MOV         LR, #0 
    /*00007348*/ MLA         R3, R3, R5, R6 
    /*0000734c*/ MOV         IP, #1 
    /*00007350*/ MOV         R1, #2 
    /*00007354*/ MOV         R2, #3 
    /*00007358*/ MOV         R0, R7 
    /*0000735c*/ STR         LR, [R3, #244]              @ 0xf4 
    /*00007360*/ STR         IP, [R3, #248]              @ 0xf8 
    /*00007364*/ STR         R1, [R3, #252]              @ 0xfc 
    /*00007368*/ STR         R2, [R3, #256]              @ 0x100 
    /*0000736c*/ BL          0x000000000000736C          @ VO_DRV_IsPhyDevHD [R_ARM_CALL: .text+0x1858c] 
    /*00007370*/ CMP         R0, #0 
    /*00007374*/ BEQ         VouEnableLayer_x74c0
    VouEnableLayer_x7378:
    /*00007378*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000737c*/ MLA         R3, R3, R5, R6 
    /*00007380*/ LDR         R3, [R3, #28] 
    /*00007384*/ CMP         R3, #0 
    /*00007388*/ BNE         VouEnableLayer_x7518
    VouEnableLayer_x738c:
    /*0000738c*/ ADD         R4, SP, #112                @ 0x70 
    /*00007390*/ MOV         R3, #0 
    /*00007394*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00007398*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000739c*/ STR         R3, [R4, #-88]!             @ 0xffffffa8 
    /*000073a0*/ MOV         R1, R4 
    /*000073a4*/ BL          0x00000000000073A4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000073a8*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*000073ac*/ MUL         R3, R3, R5 
    /*000073b0*/ LDR         R9, [SP, #24] 
    /*000073b4*/ MOV         R0, R5 
    /*000073b8*/ MOV         R2, #1 
    /*000073bc*/ STR         R2, [R6, R3] 
    /*000073c0*/ BL          0x00000000000073C0          @ VO_DRV_EnableLayer [R_ARM_CALL: .text+0x1829c] 
    /*000073c4*/ MOV         R1, R4 
    /*000073c8*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*000073cc*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*000073d0*/ STR         R9, [SP, #24] 
    /*000073d4*/ BL          0x00000000000073D4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000073d8*/ MOV         R0, R7 
    /*000073dc*/ BL          0x00000000000073DC          @ VOU_DRV_IsVirtDev [R_ARM_CALL: .text+0x17648] 
    /*000073e0*/ CMP         R0, #0 
    /*000073e4*/ BEQ         VouEnableLayer_x74ac
    VouEnableLayer_x73e8:
    /*000073e8*/ MOV         R0, R8 
    /*000073ec*/ ADD         SP, SP, #112                @ 0x70 
    /*000073f0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouEnableLayer_x73f4:
    /*000073f4*/ LDR         R3, [R2, #152]              @ 0x98 
    /*000073f8*/ CMP         R3, #0 
    /*000073fc*/ BEQ         VouEnableLayer_x7280
    /*00007400*/ STR         R3, [SP, #8] 
    /*00007404*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2aac] 
    /*00007408*/ MOV         R3, #2080                   @ 0x820 
    /*0000740c*/ STR         R5, [SP, #4] 
    /*00007410*/ STR         R3, [SP] 
    /*00007414*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2aac] 
    /*00007418*/ LDR         R3, [PC, #460]              @ 0x00000000000075ec 
    /*0000741c*/ MOV         R1, #15 
    /*00007420*/ MOV         R0, #3 
    /*00007424*/ MOVW        R8, #32776                  @ 0x8008 
    /*00007428*/ BL          0x0000000000007428          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000742c*/ MOVT        R8, #40975                  @ 0xa00f 
    /*00007430*/ B           VouEnableLayer_x73e8
    VouEnableLayer_x7434:
    /*00007434*/ LDR         R2, [R4, #28] 
    /*00007438*/ CMP         R2, #0 
    /*0000743c*/ BNE         VouEnableLayer_x74d4
    VouEnableLayer_x7440:
    /*00007440*/ MOVW        R4, #12192                  @ 0x2fa0 
    /*00007444*/ MOV         R3, #752                    @ 0x2f0 
    /*00007448*/ MUL         R4, R4, R5 
    /*0000744c*/ MOV         R2, #15 
    /*00007450*/ ADD         R0, R4, #11840              @ 0x2e40 
    /*00007454*/ ADD         R1, R4, #520                @ 0x208 
    /*00007458*/ ADD         R0, R0, #20 
    /*0000745c*/ ADD         R1, R6, R1 
    /*00007460*/ ADD         R0, R6, R0 
    /*00007464*/ BL          0x0000000000007464          @ VouBufInit [R_ARM_CALL: .text+0x3ce0] 
    /*00007468*/ ADD         R3, R6, R4 
    /*0000746c*/ LDR         R2, [R3, #28] 
    /*00007470*/ CMP         R2, #0 
    /*00007474*/ BEQ         VouEnableLayer_x7340
    /*00007478*/ ADD         R0, R2, #2944               @ 0xb80 
    /*0000747c*/ MOVW        R2, #3048                   @ 0xbe8 
    /*00007480*/ ADD         R0, R0, #5 
    /*00007484*/ ADD         R3, R4, #11776              @ 0x2e00 
    /*00007488*/ ADD         R3, R3, #20 
    /*0000748c*/ MOV         R1, #1 
    /*00007490*/ MLA         R2, R2, R5, R0 
    /*00007494*/ ADD         R3, R6, R3 
    /*00007498*/ ADD         R2, R6, R2, LSL #2 
    VouEnableLayer_x749c:
    /*0000749c*/ STR         R1, [R3, #4]! 
    /*000074a0*/ CMP         R3, R2 
    /*000074a4*/ BNE         VouEnableLayer_x749c
    /*000074a8*/ B           VouEnableLayer_x7340
    VouEnableLayer_x74ac:
    /*000074ac*/ MOV         R0, R5 
    /*000074b0*/ BL          0x00000000000074B0          @ VouDispLayerConfig [R_ARM_CALL: .text+0x12d94] 
    /*000074b4*/ MOV         R0, R8 
    /*000074b8*/ ADD         SP, SP, #112                @ 0x70 
    /*000074bc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouEnableLayer_x74c0:
    /*000074c0*/ MOV         R0, R7 
    /*000074c4*/ BL          0x00000000000074C4          @ VO_DRV_IsPhyDevSD [R_ARM_CALL: .text+0x185b0] 
    /*000074c8*/ CMP         R0, #0 
    /*000074cc*/ BNE         VouEnableLayer_x7378
    /*000074d0*/ B           VouEnableLayer_x738c
    VouEnableLayer_x74d4:
    /*000074d4*/ MOV         R1, R9 
    /*000074d8*/ LDR         R3, [SP, #20] 
    /*000074dc*/ MOV         R0, R5 
    /*000074e0*/ BL          0x00000000000074E0          @ VouBufMallocSdTde [R_ARM_CALL: .text+0x4430] 
    /*000074e4*/ SUBS        IP, R0, #0 
    /*000074e8*/ BEQ         VouEnableLayer_x7440
    /*000074ec*/ MOVW        R3, #2147                   @ 0x863 
    /*000074f0*/ STR         R5, [SP, #4] 
    /*000074f4*/ STR         R3, [SP] 
    /*000074f8*/ MOV         R1, SL 
    /*000074fc*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ba0] 
    /*00007500*/ LDR         R3, [PC, #228]              @ 0x00000000000075ec 
    /*00007504*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ba0] 
    /*00007508*/ MOV         R0, #3 
    /*0000750c*/ MOV         R8, IP 
    /*00007510*/ BL          0x0000000000007510          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007514*/ B           VouEnableLayer_x73e8
    VouEnableLayer_x7518:
    /*00007518*/ MOV         R1, R5 
    /*0000751c*/ MOV         R0, R7 
    /*00007520*/ BL          0x0000000000007520          @ VouSetLayerDdr [R_ARM_CALL: .text+0x71bc] 
    /*00007524*/ B           VouEnableLayer_x738c
    VouEnableLayer_x7528:
    /*00007528*/ MOVW        R3, #2067                   @ 0x813 
    /*0000752c*/ STR         R5, [SP, #4] 
    /*00007530*/ STR         R3, [SP] 
    /*00007534*/ MOVW        R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a1c] 
    /*00007538*/ LDR         R3, [PC, #172]              @ 0x00000000000075ec 
    /*0000753c*/ MOVT        R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a1c] 
    /*00007540*/ MOV         R1, #15 
    /*00007544*/ MOV         R0, #4 
    /*00007548*/ BL          0x0000000000007548          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000754c*/ B           VouEnableLayer_x73e8
    VouEnableLayer_x7550:
    /*00007550*/ STR         R0, [SP, #4] 
    /*00007554*/ MOVW        R3, #2094                   @ 0x82e 
    /*00007558*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b6c] 
    /*0000755c*/ STR         R3, [SP] 
    /*00007560*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b6c] 
    /*00007564*/ LDR         R3, [PC, #128]              @ 0x00000000000075ec 
    /*00007568*/ MOV         R1, #15 
    /*0000756c*/ MOV         R0, #3 
    /*00007570*/ MOVW        R8, #32833                  @ 0x8041 
    /*00007574*/ BL          0x0000000000007574          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007578*/ MOVT        R8, #40975                  @ 0xa00f 
    /*0000757c*/ B           VouEnableLayer_x73e8
    VouEnableLayer_x7580:
    /*00007580*/ MOVW        R8, #32877                  @ 0x806d 
    /*00007584*/ MOVT        R8, #40975                  @ 0xa00f 
    /*00007588*/ B           VouEnableLayer_x73e8
    VouEnableLayer_x758c:
    /*0000758c*/ MOVW        R3, #2074                   @ 0x81a 
    /*00007590*/ STR         R5, [SP, #4] 
    /*00007594*/ STR         R3, [SP] 
    /*00007598*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a64] 
    /*0000759c*/ LDR         R3, [PC, #72]               @ 0x00000000000075ec 
    /*000075a0*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a64] 
    /*000075a4*/ MOV         R1, #15 
    /*000075a8*/ MOV         R0, #3 
    /*000075ac*/ MOVW        R8, #32839                  @ 0x8047 
    /*000075b0*/ BL          0x00000000000075B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000075b4*/ MOVT        R8, #40975                  @ 0xa00f 
    /*000075b8*/ B           VouEnableLayer_x73e8
    VouEnableLayer_x75bc:
    /*000075bc*/ MOVW        R3, #2088                   @ 0x828 
    /*000075c0*/ STR         R5, [SP, #4] 
    /*000075c4*/ STR         R3, [SP] 
    /*000075c8*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b2c] 
    /*000075cc*/ LDR         R3, [PC, #24]               @ 0x00000000000075ec 
    /*000075d0*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b2c] 
    /*000075d4*/ MOV         R1, #15 
    /*000075d8*/ MOV         R0, #3 
    /*000075dc*/ MOVW        R8, #32879                  @ 0x806f 
    /*000075e0*/ BL          0x00000000000075E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000075e4*/ MOVT        R8, #40975                  @ 0xa00f 
    /*000075e8*/ B           VouEnableLayer_x73e8
    /*000075ec*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VouEnableLayer


FUNC_BEGIN VouDisableLayer
    /*000075f0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000075f4*/ SUB         SP, SP, #44                 @ 0x2c 
    /*000075f8*/ MOV         R4, R0 
    /*000075fc*/ BL          0x00000000000075FC          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00007600*/ SUBS        R6, R0, #0 
    /*00007604*/ BNE         VouDisableLayer_x79f0
    /*00007608*/ MOVW        R8, #12192                  @ 0x2fa0 
    /*0000760c*/ MOVW        R5, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00007610*/ MUL         R7, R8, R4 
    /*00007614*/ MOVT        R5, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00007618*/ ADD         R9, R5, R7 
    /*0000761c*/ LDR         R3, [R5, R7] 
    /*00007620*/ CMP         R3, #0 
    /*00007624*/ BEQ         VouDisableLayer_x78ec
    /*00007628*/ MOV         R0, R4 
    /*0000762c*/ BL          0x000000000000762C          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*00007630*/ CMN         R0, #1 
    /*00007634*/ MOV         FP, R0 
    /*00007638*/ BEQ         VouDisableLayer_x7a20
    /*0000763c*/ MOV         R0, R4 
    /*00007640*/ BL          0x0000000000007640          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00007644*/ SUBS        R6, R0, #0 
    /*00007648*/ BNE         VouDisableLayer_x79f0
    /*0000764c*/ LDR         R3, [R9, #208]              @ 0xd0 
    /*00007650*/ CMP         R3, #0 
    /*00007654*/ BNE         VouDisableLayer_x7a50
    /*00007658*/ LDR         R2, [R9, #180]              @ 0xb4 
    /*0000765c*/ CMP         R2, #0 
    /*00007660*/ ADDNE       SL, SP, #28 
    /*00007664*/ BNE         VouDisableLayer_x7784
    /*00007668*/ LDR         R3, [R9, #220]              @ 0xdc 
    /*0000766c*/ CMP         R3, #0 
    /*00007670*/ BEQ         VouDisableLayer_x7718
    /*00007674*/ MOV         R0, #45                     @ 0x2d 
    /*00007678*/ BL          0x0000000000007678          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000767c*/ CMP         R0, #0 
    /*00007680*/ BEQ         VouDisableLayer_x7a84
    /*00007684*/ LDR         R9, [R0, #8] 
    /*00007688*/ CMP         R9, #0 
    /*0000768c*/ BEQ         VouDisableLayer_x7a84
    /*00007690*/ ADD         R3, SP, #32 
    /*00007694*/ MOV         R2, R4 
    /*00007698*/ MOV         R1, R4 
    /*0000769c*/ MOV         R0, #15 
    /*000076a0*/ BLX         R9 
    /*000076a4*/ ADD         R7, R7, #12096              @ 0x2f40 
    /*000076a8*/ ADD         R9, SP, #40                 @ 0x28 
    /*000076ac*/ ADD         R7, R7, #20 
    /*000076b0*/ MOVW        SL, #0                      @ VO_WaitSdStopCallBack [R_ARM_MOVW_ABS_NC: .text+0x4b70] 
    /*000076b4*/ ADD         R7, R5, R7 
    /*000076b8*/ MOVT        SL, #0                      @ VO_WaitSdStopCallBack [R_ARM_MOVT_ABS: .text+0x4b70] 
    /*000076bc*/ MOV         IP, R4 
    /*000076c0*/ MOV         LR, #1000                   @ 0x3e8 
    /*000076c4*/ STR         R4, [R9, #-16]! 
    /*000076c8*/ B           VouDisableLayer_x76e4
    VouDisableLayer_x76cc:
    /*000076cc*/ BL          0x00000000000076CC          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*000076d0*/ ADD         R3, R0, #512                @ 0x200 
    /*000076d4*/ MOV         LR, R0 
    /*000076d8*/ BICS        R3, R3, #512                @ 0x200 
    /*000076dc*/ BEQ         VouDisableLayer_x7710
    /*000076e0*/ LDR         IP, [SP, #24] 
    VouDisableLayer_x76e4:
    /*000076e4*/ MLA         IP, R8, IP, R5 
    /*000076e8*/ MOV         R3, LR 
    /*000076ec*/ MOV         R2, R9 
    /*000076f0*/ MOV         R1, SL 
    /*000076f4*/ MOV         R0, R7 
    /*000076f8*/ LDR         IP, [IP, #220]              @ 0xdc 
    /*000076fc*/ CMP         IP, #0 
    /*00007700*/ BNE         VouDisableLayer_x76cc
    /*00007704*/ MOV         R0, LR 
    /*00007708*/ BL          0x0000000000007708          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*0000770c*/ MOV         LR, R0 
    VouDisableLayer_x7710:
    /*00007710*/ CMP         LR, #0 
    /*00007714*/ BLE         VouDisableLayer_x79fc
    VouDisableLayer_x7718:
    /*00007718*/ ADD         SL, SP, #40                 @ 0x28 
    /*0000771c*/ MOV         R3, #0 
    /*00007720*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00007724*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00007728*/ STR         R3, [SL, #-12]! 
    /*0000772c*/ MOV         R1, SL 
    /*00007730*/ BL          0x0000000000007730          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00007734*/ MOV         R0, FP 
    /*00007738*/ LDR         R8, [SP, #28] 
    /*0000773c*/ BL          0x000000000000773C          @ VOU_DRV_IsVirtDev [R_ARM_CALL: .text+0x17648] 
    /*00007740*/ SUBS        R9, R0, #0 
    /*00007744*/ BEQ         VouDisableLayer_x791c
    VouDisableLayer_x7748:
    /*00007748*/ MOV         R0, R4 
    /*0000774c*/ BL          0x000000000000774C          @ VouBufFreeDispBusyList [R_ARM_CALL: .text+0x49b0] 
    /*00007750*/ SUBS        R3, R0, #0 
    /*00007754*/ BNE         VouDisableLayer_x79a0
    VouDisableLayer_x7758:
    /*00007758*/ MOV         R1, SL 
    /*0000775c*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00007760*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00007764*/ STR         R8, [SP, #28] 
    /*00007768*/ BL          0x0000000000007768          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000776c*/ MOV         R0, R4 
    /*00007770*/ LDR         R7, [SP, #28] 
    /*00007774*/ BL          0x0000000000007774          @ VouBufFreeSdTde [R_ARM_CALL: .text+0x4538] 
    /*00007778*/ CMP         R0, #0 
    /*0000777c*/ MOVEQ       R3, R7 
    /*00007780*/ BNE         VouDisableLayer_x7ab0
    VouDisableLayer_x7784:
    /*00007784*/ MOV         R0, FP 
    /*00007788*/ STR         R3, [SP, #20] 
    /*0000778c*/ BL          0x000000000000778C          @ VOU_DRV_IsVirtDev [R_ARM_CALL: .text+0x17648] 
    /*00007790*/ LDR         R3, [SP, #20] 
    /*00007794*/ SUBS        R7, R0, #0 
    /*00007798*/ BEQ         VouDisableLayer_x79c4
    VouDisableLayer_x779c:
    /*0000779c*/ MOVW        R8, #12192                  @ 0x2fa0 
    /*000077a0*/ MOV         R1, SL 
    /*000077a4*/ MUL         R8, R8, R4 
    /*000077a8*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*000077ac*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*000077b0*/ STR         R3, [SP, #28] 
    /*000077b4*/ BL          0x00000000000077B4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000077b8*/ LDR         R3, [SP, #28] 
    /*000077bc*/ ADD         R7, R5, R8 
    /*000077c0*/ MOV         R9, #0 
    /*000077c4*/ MOV         R0, R4 
    /*000077c8*/ MVN         FP, #0 
    /*000077cc*/ STR         R9, [R7, #4] 
    /*000077d0*/ STR         R3, [SP, #20] 
    /*000077d4*/ STR         R9, [R5, R8] 
    /*000077d8*/ BL          0x00000000000077D8          @ VO_DRV_DisableLayer [R_ARM_CALL: .text+0x182b8] 
    /*000077dc*/ LDR         R3, [SP, #20] 
    /*000077e0*/ MOV         R1, SL 
    /*000077e4*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*000077e8*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*000077ec*/ STR         R3, [SP, #28] 
    /*000077f0*/ BL          0x00000000000077F0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000077f4*/ MOV         R0, R4 
    /*000077f8*/ STR         R9, [R7, #184]              @ 0xb8 
    /*000077fc*/ STR         R9, [R7, #188]              @ 0xbc 
    /*00007800*/ STR         FP, [R7, #268]              @ 0x10c 
    /*00007804*/ STR         FP, [R7, #280]              @ 0x118 
    /*00007808*/ BL          0x0000000000007808          @ VO_DRV_GetPartitionMode [R_ARM_CALL: .text+0x1941c] 
    /*0000780c*/ STR         R0, [R7, #180]              @ 0xb4 
    /*00007810*/ MOV         R0, R4 
    /*00007814*/ BL          0x0000000000007814          @ VOU_DRV_InitDefaultCsc [R_ARM_CALL: .text+0x1913c] 
    /*00007818*/ MOV         R0, R4 
    /*0000781c*/ BL          0x000000000000781C          @ VOU_DRV_InitDefaultCscParam [R_ARM_CALL: .text+0x1917c] 
    /*00007820*/ ADD         R1, R8, #68                 @ 0x44 
    /*00007824*/ ADD         R1, R5, R1 
    /*00007828*/ MOV         R0, R4 
    /*0000782c*/ BL          0x000000000000782C          @ VOU_DRV_GetDefaultCsc [R_ARM_CALL: .text+0x191a0] 
    /*00007830*/ ADD         R1, R8, #92                 @ 0x5c 
    /*00007834*/ ADD         R1, R5, R1 
    /*00007838*/ MOV         R0, R4 
    /*0000783c*/ BL          0x000000000000783C          @ VOU_DRV_GetDefaultVHDRCsc [R_ARM_CALL: .text+0x191c0] 
    /*00007840*/ ADD         R2, R8, #11264              @ 0x2c00 
    /*00007844*/ ADD         R2, R2, #16 
    /*00007848*/ MOV         IP, FP 
    /*0000784c*/ ADD         R2, R5, R2 
    /*00007850*/ MOV         R3, R7 
    /*00007854*/ MOV         R1, #1 
    /*00007858*/ STR         R9, [R7, #244]              @ 0xf4 
    /*0000785c*/ STR         R1, [R7, #248]              @ 0xf8 
    /*00007860*/ MOV         R1, #2 
    /*00007864*/ STR         R1, [R7, #252]              @ 0xfc 
    /*00007868*/ MOV         R1, #3 
    /*0000786c*/ STR         R1, [R7, #256]              @ 0x100 
    VouDisableLayer_x7870:
    /*00007870*/ STR         IP, [R3, #1220]             @ 0x4c4 
    /*00007874*/ ADD         R3, R3, #752                @ 0x2f0 
    /*00007878*/ CMP         R3, R2 
    /*0000787c*/ BNE         VouDisableLayer_x7870
    /*00007880*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00007884*/ ADD         R0, R8, #208                @ 0xd0 
    /*00007888*/ MLA         R3, R3, R4, R5 
    /*0000788c*/ MOV         R2, #20 
    /*00007890*/ LSL         R4, R4, #4 
    /*00007894*/ ADD         R0, R5, R0 
    /*00007898*/ MOV         R1, #0 
    /*0000789c*/ STR         IP, [R3, #296]              @ 0x128 
    /*000078a0*/ STR         IP, [R3, #352]              @ 0x160 
    /*000078a4*/ STR         IP, [R3, #408]              @ 0x198 
    /*000078a8*/ STR         IP, [R3, #464]              @ 0x1d0 
    /*000078ac*/ BL          0x00000000000078AC          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000078b0*/ SUB         R2, R4, #4 
    /*000078b4*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*000078b8*/ ADD         R4, R4, #12 
    /*000078bc*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*000078c0*/ MOV         R0, #0 
    /*000078c4*/ ADD         R2, R2, R3 
    /*000078c8*/ ADD         R3, R4, R3 
    VouDisableLayer_x78cc:
    /*000078cc*/ LDR         R1, [R2, #4]! 
    /*000078d0*/ CMP         R1, #0 
    /*000078d4*/ STRNE       R0, [R1, #8] 
    /*000078d8*/ CMP         R3, R2 
    /*000078dc*/ BNE         VouDisableLayer_x78cc
    VouDisableLayer_x78e0:
    /*000078e0*/ MOV         R0, R6 
    /*000078e4*/ ADD         SP, SP, #44                 @ 0x2c 
    /*000078e8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouDisableLayer_x78ec:
    /*000078ec*/ STR         R4, [SP, #4] 
    /*000078f0*/ MOVW        R3, #2236                   @ 0x8bc 
    /*000078f4*/ MOV         R1, #15 
    /*000078f8*/ STR         R3, [SP] 
    /*000078fc*/ MOVW        R2, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2bdc] 
    /*00007900*/ LDR         R3, [PC, #472]              @ 0x0000000000007ae0 
    /*00007904*/ MOVT        R2, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2bdc] 
    /*00007908*/ MOV         R0, #4 
    /*0000790c*/ BL          0x000000000000790C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007910*/ MOV         R0, R6 
    /*00007914*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00007918*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouDisableLayer_x791c:
    /*0000791c*/ MOVW        R0, #12192                  @ 0x2fa0 
    /*00007920*/ MUL         R3, R0, R4 
    /*00007924*/ ADD         R7, R5, R3 
    /*00007928*/ LDR         R0, [R7, #264]              @ 0x108 
    /*0000792c*/ STR         R3, [SP, #20] 
    /*00007930*/ CMP         R0, #0 
    /*00007934*/ BEQ         VouDisableLayer_x7958
    /*00007938*/ BL          0x0000000000007938          @ VouBufClearDispNode [R_ARM_CALL: .text+0x4848] 
    /*0000793c*/ LDR         R3, [SP, #20] 
    /*00007940*/ LDR         R1, [R7, #264]              @ 0x108 
    /*00007944*/ ADD         R0, R3, #11840              @ 0x2e40 
    /*00007948*/ ADD         R0, R0, #20 
    /*0000794c*/ ADD         R0, R5, R0 
    /*00007950*/ BL          0x0000000000007950          @ VouBufPutFree [R_ARM_CALL: .text+0x3fd0] 
    /*00007954*/ STR         R9, [R7, #264]              @ 0x108 
    VouDisableLayer_x7958:
    /*00007958*/ MOVW        R0, #12192                  @ 0x2fa0 
    /*0000795c*/ MUL         R7, R0, R4 
    /*00007960*/ ADD         R9, R5, R7 
    /*00007964*/ LDR         R0, [R9, #272]              @ 0x110 
    /*00007968*/ CMP         R0, #0 
    /*0000796c*/ BEQ         VouDisableLayer_x7748
    /*00007970*/ BL          0x0000000000007970          @ VouBufClearDispNode [R_ARM_CALL: .text+0x4848] 
    /*00007974*/ ADD         R0, R7, #11840              @ 0x2e40 
    /*00007978*/ ADD         R0, R0, #20 
    /*0000797c*/ LDR         R1, [R9, #272]              @ 0x110 
    /*00007980*/ ADD         R0, R5, R0 
    /*00007984*/ BL          0x0000000000007984          @ VouBufPutFree [R_ARM_CALL: .text+0x3fd0] 
    /*00007988*/ MOV         R3, #0 
    /*0000798c*/ MOV         R0, R4 
    /*00007990*/ STR         R3, [R9, #272]              @ 0x110 
    /*00007994*/ BL          0x0000000000007994          @ VouBufFreeDispBusyList [R_ARM_CALL: .text+0x49b0] 
    /*00007998*/ SUBS        R3, R0, #0 
    /*0000799c*/ BEQ         VouDisableLayer_x7758
    VouDisableLayer_x79a0:
    /*000079a0*/ MOV         R1, SL 
    /*000079a4*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*000079a8*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*000079ac*/ MOV         R6, R3 
    /*000079b0*/ STR         R8, [SP, #28] 
    /*000079b4*/ BL          0x00000000000079B4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000079b8*/ MOV         R0, R6 
    /*000079bc*/ ADD         SP, SP, #44                 @ 0x2c 
    /*000079c0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouDisableLayer_x79c4:
    /*000079c4*/ MOV         R0, R4 
    /*000079c8*/ BL          0x00000000000079C8          @ VOU_DRV_DisableAllArea [R_ARM_CALL: .text+0x17950] 
    /*000079cc*/ MOV         R1, R7 
    /*000079d0*/ MOV         R0, R4 
    /*000079d4*/ BL          0x00000000000079D4          @ VOU_DRV_LayerEnable [R_ARM_CALL: .text+0x17548] 
    /*000079d8*/ MOV         R0, R4 
    /*000079dc*/ BL          0x00000000000079DC          @ VOU_DRV_SetLayerRegUp [R_ARM_CALL: .text+0x182d4] 
    /*000079e0*/ MOV         R0, #40                     @ 0x28 
    /*000079e4*/ BL          0x00000000000079E4          @ osal_msleep [R_ARM_CALL: +0x0] 
    /*000079e8*/ LDR         R3, [SP, #20] 
    /*000079ec*/ B           VouDisableLayer_x779c
    VouDisableLayer_x79f0:
    /*000079f0*/ MOVW        R6, #32877                  @ 0x806d 
    /*000079f4*/ MOVT        R6, #40975                  @ 0xa00f 
    /*000079f8*/ B           VouDisableLayer_x78e0
    VouDisableLayer_x79fc:
    /*000079fc*/ MOVW        R3, #2335                   @ 0x91f 
    /*00007a00*/ MOVW        R2, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c74] 
    /*00007a04*/ STR         R3, [SP] 
    /*00007a08*/ MOVT        R2, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c74] 
    /*00007a0c*/ LDR         R3, [PC, #204]              @ 0x0000000000007ae0 
    /*00007a10*/ MOV         R1, #15 
    /*00007a14*/ MOV         R0, #3 
    /*00007a18*/ BL          0x0000000000007A18          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007a1c*/ B           VouDisableLayer_x7718
    VouDisableLayer_x7a20:
    /*00007a20*/ MOVW        R3, #2243                   @ 0x8c3 
    /*00007a24*/ STR         R4, [SP, #4] 
    /*00007a28*/ STR         R3, [SP] 
    /*00007a2c*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b2c] 
    /*00007a30*/ LDR         R3, [PC, #168]              @ 0x0000000000007ae0 
    /*00007a34*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b2c] 
    /*00007a38*/ MOV         R1, #15 
    /*00007a3c*/ MOV         R0, #3 
    /*00007a40*/ MOVW        R6, #32879                  @ 0x806f 
    /*00007a44*/ BL          0x0000000000007A44          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007a48*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00007a4c*/ B           VouDisableLayer_x78e0
    VouDisableLayer_x7a50:
    /*00007a50*/ STR         R3, [SP, #8] 
    /*00007a54*/ MOVW        R2, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2c28] 
    /*00007a58*/ MOVW        R3, #2251                   @ 0x8cb 
    /*00007a5c*/ STR         R4, [SP, #4] 
    /*00007a60*/ STR         R3, [SP] 
    /*00007a64*/ MOVT        R2, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2c28] 
    /*00007a68*/ LDR         R3, [PC, #112]              @ 0x0000000000007ae0 
    /*00007a6c*/ MOV         R1, #15 
    /*00007a70*/ MOV         R0, #3 
    /*00007a74*/ MOVW        R6, #32840                  @ 0x8048 
    /*00007a78*/ BL          0x0000000000007A78          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007a7c*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00007a80*/ B           VouDisableLayer_x78e0
    VouDisableLayer_x7a84:
    /*00007a84*/ MOVW        R3, #2322                   @ 0x912 
    /*00007a88*/ STR         R4, [SP, #4] 
    /*00007a8c*/ STR         R3, [SP] 
    /*00007a90*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f80] 
    /*00007a94*/ LDR         R3, [PC, #68]               @ 0x0000000000007ae0 
    /*00007a98*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f80] 
    /*00007a9c*/ MOV         R1, #15 
    /*00007aa0*/ MOV         R0, #3 
    /*00007aa4*/ BL          0x0000000000007AA4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007aa8*/ MVN         R6, #0 
    /*00007aac*/ B           VouDisableLayer_x78e0
    VouDisableLayer_x7ab0:
    /*00007ab0*/ MOVW        R3, #2395                   @ 0x95b 
    /*00007ab4*/ STR         R4, [SP, #4] 
    /*00007ab8*/ STR         R3, [SP] 
    /*00007abc*/ MOVW        R2, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2cb4] 
    /*00007ac0*/ LDR         R3, [PC, #24]               @ 0x0000000000007ae0 
    /*00007ac4*/ MOVT        R2, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2cb4] 
    /*00007ac8*/ MOV         R1, #15 
    /*00007acc*/ MOV         R0, #3 
    /*00007ad0*/ MOVW        R6, #32786                  @ 0x8012 
    /*00007ad4*/ BL          0x0000000000007AD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007ad8*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00007adc*/ B           VouDisableLayer_x78e0
    /*00007ae0*/ ANDEQ       R0, R0, R0, LSL #10 
FUNC_END VouDisableLayer


FUNC_BEGIN VouEnableVideoLayer
    /*00007ae4*/ PUSH        {R4, LR} 
    /*00007ae8*/ MOV         R4, R0 
    /*00007aec*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00007af0*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00007af4*/ BL          0x0000000000007AF4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00007af8*/ CMP         R0, #0 
    /*00007afc*/ BNE         VouEnableVideoLayer_x7b20
    /*00007b00*/ MOV         R0, R4 
    /*00007b04*/ BL          0x0000000000007B04          @ VouEnableLayer [R_ARM_CALL: .text+0x7204] 
    /*00007b08*/ MOV         R4, R0 
    /*00007b0c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00007b10*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00007b14*/ BL          0x0000000000007B14          @ osal_up [R_ARM_CALL: +0x0] 
    VouEnableVideoLayer_x7b18:
    /*00007b18*/ MOV         R0, R4 
    /*00007b1c*/ POP         {R4, PC} 
    VouEnableVideoLayer_x7b20:
    /*00007b20*/ MOV         R4, #65024                  @ 0xfe00 
    /*00007b24*/ MOVT        R4, #65535                  @ 0xffff 
    /*00007b28*/ B           VouEnableVideoLayer_x7b18
FUNC_END VouEnableVideoLayer


FUNC_BEGIN VouDisableVideoLayer
    /*00007b2c*/ PUSH        {R4, LR} 
    /*00007b30*/ MOV         R4, R0 
    /*00007b34*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00007b38*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00007b3c*/ BL          0x0000000000007B3C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00007b40*/ CMP         R0, #0 
    /*00007b44*/ BNE         VouDisableVideoLayer_x7b68
    /*00007b48*/ MOV         R0, R4 
    /*00007b4c*/ BL          0x0000000000007B4C          @ VouDisableLayer [R_ARM_CALL: .text+0x75f0] 
    /*00007b50*/ MOV         R4, R0 
    /*00007b54*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00007b58*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00007b5c*/ BL          0x0000000000007B5C          @ osal_up [R_ARM_CALL: +0x0] 
    VouDisableVideoLayer_x7b60:
    /*00007b60*/ MOV         R0, R4 
    /*00007b64*/ POP         {R4, PC} 
    VouDisableVideoLayer_x7b68:
    /*00007b68*/ MOV         R4, #65024                  @ 0xfe00 
    /*00007b6c*/ MOVT        R4, #65535                  @ 0xffff 
    /*00007b70*/ B           VouDisableVideoLayer_x7b60
FUNC_END VouDisableVideoLayer


FUNC_BEGIN VouSetVideoPriority
    /*00007b74*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00007b78*/ SUB         SP, SP, #12 
    /*00007b7c*/ MOVW        R3, #2552                   @ 0x9f8 
    /*00007b80*/ MOV         R1, #15 
    /*00007b84*/ STR         R3, [SP] 
    /*00007b88*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d04] 
    /*00007b8c*/ LDR         R3, [PC, #24]               @ 0x0000000000007bac 
    /*00007b90*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d04] 
    /*00007b94*/ MOV         R0, #3 
    /*00007b98*/ BL          0x0000000000007B98          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007b9c*/ MOVW        R0, #32776                  @ 0x8008 
    /*00007ba0*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00007ba4*/ ADD         SP, SP, #12 
    /*00007ba8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00007bac*/ ANDEQ       R0, R0, R0, LSL R5 
FUNC_END VouSetVideoPriority


FUNC_BEGIN VouGetVideoPriority
    /*00007bb0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00007bb4*/ SUB         SP, SP, #12 
    /*00007bb8*/ MOVW        R3, #2597                   @ 0xa25 
    /*00007bbc*/ MOV         R1, #15 
    /*00007bc0*/ STR         R3, [SP] 
    /*00007bc4*/ MOVW        R2, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2d54] 
    /*00007bc8*/ LDR         R3, [PC, #24]               @ 0x0000000000007be8 
    /*00007bcc*/ MOVT        R2, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2d54] 
    /*00007bd0*/ MOV         R0, #3 
    /*00007bd4*/ BL          0x0000000000007BD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007bd8*/ MOVW        R0, #32776                  @ 0x8008 
    /*00007bdc*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00007be0*/ ADD         SP, SP, #12 
    /*00007be4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00007be8*/ ANDEQ       R0, R0, R4, LSR #10 
FUNC_END VouGetVideoPriority


FUNC_BEGIN VouVideoBindDev
    /*00007bec*/ PUSH        {R4, R5, R6, LR} 
    /*00007bf0*/ SUB         SP, SP, #16 
    /*00007bf4*/ MOV         R4, R1 
    /*00007bf8*/ MOV         R5, R0 
    /*00007bfc*/ BL          0x0000000000007BFC          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00007c00*/ CMP         R0, #0 
    /*00007c04*/ BNE         VouVideoBindDev_x7d0c
    /*00007c08*/ MOV         R0, R4 
    /*00007c0c*/ BL          0x0000000000007C0C          @ VoDefCheckDevId [R_ARM_CALL: .text+0x34bc] 
    /*00007c10*/ CMP         R0, #0 
    /*00007c14*/ BNE         VouVideoBindDev_x7d18
    /*00007c18*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00007c1c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00007c20*/ BL          0x0000000000007C20          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00007c24*/ CMP         R0, #0 
    /*00007c28*/ BNE         VouVideoBindDev_x7d24
    /*00007c2c*/ MOV         R1, R4 
    /*00007c30*/ MOV         R0, R5 
    /*00007c34*/ BL          0x0000000000007C34          @ VOU_DRV_CheckVideoBindSupport [R_ARM_CALL: .text+0x17d7c] 
    /*00007c38*/ SUBS        R6, R0, #0 
    /*00007c3c*/ BNE         VouVideoBindDev_x7c8c
    /*00007c40*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00007c44*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00007c48*/ MUL         R3, R3, R5 
    /*00007c4c*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00007c50*/ LDR         R3, [R2, R3] 
    /*00007c54*/ CMP         R3, #0 
    /*00007c58*/ BNE         VouVideoBindDev_x7d30
    /*00007c5c*/ MOV         R0, R5 
    /*00007c60*/ BL          0x0000000000007C60          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*00007c64*/ CMP         R4, R0 
    /*00007c68*/ CMNNE       R0, #1 
    /*00007c6c*/ BNE         VouVideoBindDev_x7d6c
    /*00007c70*/ CMP         R4, R0 
    /*00007c74*/ BEQ         VouVideoBindDev_x7ce0
    /*00007c78*/ MOV         R1, R4 
    /*00007c7c*/ MOV         R0, R5 
    /*00007c80*/ BL          0x0000000000007C80          @ VOU_DRV_VideoBindDev [R_ARM_CALL: .text+0x17db8] 
    /*00007c84*/ SUBS        R6, R0, #0 
    /*00007c88*/ BNE         VouVideoBindDev_x7ca4
    VouVideoBindDev_x7c8c:
    /*00007c8c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00007c90*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00007c94*/ BL          0x0000000000007C94          @ osal_up [R_ARM_CALL: +0x0] 
    VouVideoBindDev_x7c98:
    /*00007c98*/ MOV         R0, R6 
    /*00007c9c*/ ADD         SP, SP, #16 
    /*00007ca0*/ POP         {R4, R5, R6, PC} 
    VouVideoBindDev_x7ca4:
    /*00007ca4*/ MOV         R1, #15 
    /*00007ca8*/ STR         R5, [SP, #4] 
    /*00007cac*/ MOVW        R3, #2646                   @ 0xa56 
    /*00007cb0*/ MOVW        R2, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e94] 
    /*00007cb4*/ STR         R3, [SP] 
    /*00007cb8*/ MOVT        R2, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e94] 
    /*00007cbc*/ LDR         R3, [PC, #232]              @ 0x0000000000007dac 
    /*00007cc0*/ MOV         R0, #3 
    /*00007cc4*/ BL          0x0000000000007CC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007cc8*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00007ccc*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00007cd0*/ BL          0x0000000000007CD0          @ osal_up [R_ARM_CALL: +0x0] 
    /*00007cd4*/ MOV         R0, R6 
    /*00007cd8*/ ADD         SP, SP, #16 
    /*00007cdc*/ POP         {R4, R5, R6, PC} 
    VouVideoBindDev_x7ce0:
    /*00007ce0*/ MOVW        R3, #2638                   @ 0xa4e 
    /*00007ce4*/ STR         R4, [SP, #8] 
    /*00007ce8*/ STR         R3, [SP] 
    /*00007cec*/ MOVW        R2, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2e58] 
    /*00007cf0*/ STR         R5, [SP, #4] 
    /*00007cf4*/ MOVT        R2, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2e58] 
    /*00007cf8*/ LDR         R3, [PC, #172]              @ 0x0000000000007dac 
    /*00007cfc*/ MOV         R1, #15 
    /*00007d00*/ MOV         R0, #7 
    /*00007d04*/ BL          0x0000000000007D04          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007d08*/ B           VouVideoBindDev_x7c8c
    VouVideoBindDev_x7d0c:
    /*00007d0c*/ MOVW        R6, #32877                  @ 0x806d 
    /*00007d10*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00007d14*/ B           VouVideoBindDev_x7c98
    VouVideoBindDev_x7d18:
    /*00007d18*/ MOVW        R6, #32769                  @ 0x8001 
    /*00007d1c*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00007d20*/ B           VouVideoBindDev_x7c98
    VouVideoBindDev_x7d24:
    /*00007d24*/ MOV         R6, #65024                  @ 0xfe00 
    /*00007d28*/ MOVT        R6, #65535                  @ 0xffff 
    /*00007d2c*/ B           VouVideoBindDev_x7c98
    VouVideoBindDev_x7d30:
    /*00007d30*/ MOVW        R3, #2623                   @ 0xa3f 
    /*00007d34*/ MOV         R1, #15 
    /*00007d38*/ STR         R3, [SP] 
    /*00007d3c*/ MOVW        R2, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2da4] 
    /*00007d40*/ LDR         R3, [PC, #100]              @ 0x0000000000007dac 
    /*00007d44*/ MOVT        R2, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2da4] 
    /*00007d48*/ STR         R5, [SP, #4] 
    /*00007d4c*/ MOV         R0, #3 
    /*00007d50*/ BL          0x0000000000007D50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007d54*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00007d58*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00007d5c*/ MOVW        R6, #32838                  @ 0x8046 
    /*00007d60*/ BL          0x0000000000007D60          @ osal_up [R_ARM_CALL: +0x0] 
    /*00007d64*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00007d68*/ B           VouVideoBindDev_x7c98
    VouVideoBindDev_x7d6c:
    /*00007d6c*/ STR         R0, [SP, #8] 
    /*00007d70*/ MOVW        R3, #2632                   @ 0xa48 
    /*00007d74*/ STR         R5, [SP, #4] 
    /*00007d78*/ MOV         R1, #15 
    /*00007d7c*/ STR         R3, [SP] 
    /*00007d80*/ MOVW        R2, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2dfc] 
    /*00007d84*/ LDR         R3, [PC, #32]               @ 0x0000000000007dac 
    /*00007d88*/ MOVT        R2, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2dfc] 
    /*00007d8c*/ MOV         R0, #3 
    /*00007d90*/ MOVW        R6, #32878                  @ 0x806e 
    /*00007d94*/ BL          0x0000000000007D94          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007d98*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00007d9c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00007da0*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00007da4*/ BL          0x0000000000007DA4          @ osal_up [R_ARM_CALL: +0x0] 
    /*00007da8*/ B           VouVideoBindDev_x7c98
    /*00007dac*/ ANDEQ       R0, R0, R8, LSR R5 
FUNC_END VouVideoBindDev


FUNC_BEGIN VouVideoUnBindDev
    /*00007db0*/ PUSH        {R4, R5, R6, LR} 
    /*00007db4*/ SUB         SP, SP, #8 
    /*00007db8*/ MOV         R5, R1 
    /*00007dbc*/ MOV         R4, R0 
    /*00007dc0*/ BL          0x0000000000007DC0          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00007dc4*/ CMP         R0, #0 
    /*00007dc8*/ BNE         VouVideoUnBindDev_x7e98
    /*00007dcc*/ MOV         R0, R5 
    /*00007dd0*/ BL          0x0000000000007DD0          @ VoDefCheckDevId [R_ARM_CALL: .text+0x34bc] 
    /*00007dd4*/ CMP         R0, #0 
    /*00007dd8*/ BNE         VouVideoUnBindDev_x7ea4
    /*00007ddc*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00007de0*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00007de4*/ BL          0x0000000000007DE4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00007de8*/ CMP         R0, #0 
    /*00007dec*/ BNE         VouVideoUnBindDev_x7eb0
    /*00007df0*/ MOV         R1, R5 
    /*00007df4*/ MOV         R0, R4 
    /*00007df8*/ BL          0x0000000000007DF8          @ VOU_DRV_CheckVideoBindSupport [R_ARM_CALL: .text+0x17d7c] 
    /*00007dfc*/ SUBS        R5, R0, #0 
    /*00007e00*/ BNE         VouVideoUnBindDev_x7e80
    /*00007e04*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00007e08*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00007e0c*/ MUL         R3, R3, R4 
    /*00007e10*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00007e14*/ ADD         R6, R2, R3 
    /*00007e18*/ LDR         R3, [R2, R3] 
    /*00007e1c*/ CMP         R3, #0 
    /*00007e20*/ BNE         VouVideoUnBindDev_x7ebc
    /*00007e24*/ MOV         R0, R4 
    /*00007e28*/ BL          0x0000000000007E28          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*00007e2c*/ CMN         R0, #1 
    /*00007e30*/ BEQ         VouVideoUnBindDev_x7e5c
    /*00007e34*/ MOV         R1, R0 
    /*00007e38*/ STR         R5, [R6, #4] 
    /*00007e3c*/ MOV         R0, R4 
    /*00007e40*/ BL          0x0000000000007E40          @ VOU_DRV_VideoUnBindDev [R_ARM_CALL: .text+0x17dc0] 
    /*00007e44*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00007e48*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00007e4c*/ BL          0x0000000000007E4C          @ osal_up [R_ARM_CALL: +0x0] 
    VouVideoUnBindDev_x7e50:
    /*00007e50*/ MOV         R0, R5 
    /*00007e54*/ ADD         SP, SP, #8 
    /*00007e58*/ POP         {R4, R5, R6, PC} 
    VouVideoUnBindDev_x7e5c:
    /*00007e5c*/ MOVW        R3, #2683                   @ 0xa7b 
    /*00007e60*/ MOVW        R2, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f24] 
    /*00007e64*/ STR         R3, [SP] 
    /*00007e68*/ MOVT        R2, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f24] 
    /*00007e6c*/ STR         R4, [SP, #4] 
    /*00007e70*/ MOV         R1, #15 
    /*00007e74*/ LDR         R3, [PC, #124]              @ 0x0000000000007ef8 
    /*00007e78*/ MOV         R0, #3 
    /*00007e7c*/ BL          0x0000000000007E7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VouVideoUnBindDev_x7e80:
    /*00007e80*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00007e84*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00007e88*/ BL          0x0000000000007E88          @ osal_up [R_ARM_CALL: +0x0] 
    /*00007e8c*/ MOV         R0, R5 
    /*00007e90*/ ADD         SP, SP, #8 
    /*00007e94*/ POP         {R4, R5, R6, PC} 
    VouVideoUnBindDev_x7e98:
    /*00007e98*/ MOVW        R5, #32877                  @ 0x806d 
    /*00007e9c*/ MOVT        R5, #40975                  @ 0xa00f 
    /*00007ea0*/ B           VouVideoUnBindDev_x7e50
    VouVideoUnBindDev_x7ea4:
    /*00007ea4*/ MOVW        R5, #32769                  @ 0x8001 
    /*00007ea8*/ MOVT        R5, #40975                  @ 0xa00f 
    /*00007eac*/ B           VouVideoUnBindDev_x7e50
    VouVideoUnBindDev_x7eb0:
    /*00007eb0*/ MOV         R5, #65024                  @ 0xfe00 
    /*00007eb4*/ MOVT        R5, #65535                  @ 0xffff 
    /*00007eb8*/ B           VouVideoUnBindDev_x7e50
    VouVideoUnBindDev_x7ebc:
    /*00007ebc*/ MOVW        R3, #2675                   @ 0xa73 
    /*00007ec0*/ MOV         R1, #15 
    /*00007ec4*/ STR         R3, [SP] 
    /*00007ec8*/ MOVW        R2, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2ecc] 
    /*00007ecc*/ LDR         R3, [PC, #36]               @ 0x0000000000007ef8 
    /*00007ed0*/ MOVT        R2, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2ecc] 
    /*00007ed4*/ STR         R4, [SP, #4] 
    /*00007ed8*/ MOV         R0, #3 
    /*00007edc*/ BL          0x0000000000007EDC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007ee0*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00007ee4*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00007ee8*/ MOVW        R5, #32838                  @ 0x8046 
    /*00007eec*/ BL          0x0000000000007EEC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00007ef0*/ MOVT        R5, #40975                  @ 0xa00f 
    /*00007ef4*/ B           VouVideoUnBindDev_x7e50
    /*00007ef8*/ ANDEQ       R0, R0, R8, ASR #10 
FUNC_END VouVideoUnBindDev


FUNC_BEGIN VouCheckChnAttr
    /*00007efc*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00007f00*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00007f04*/ LDR         LR, [R2] 
    /*00007f08*/ CMP         LR, #3 
    /*00007f0c*/ BHI         VouCheckChnAttr_x80c4
    /*00007f10*/ LDMIB       R2, {R3, IP} 
    /*00007f14*/ TST         R3, #1 
    /*00007f18*/ BNE         VouCheckChnAttr_x804c
    /*00007f1c*/ TST         IP, #1 
    /*00007f20*/ BNE         VouCheckChnAttr_x804c
    /*00007f24*/ MOV         R6, R1 
    /*00007f28*/ LDR         R1, [R2, #12] 
    /*00007f2c*/ LDR         R7, [R2, #16] 
    /*00007f30*/ TST         R1, #1 
    /*00007f34*/ BNE         VouCheckChnAttr_x8054
    /*00007f38*/ TST         R7, #1 
    /*00007f3c*/ BNE         VouCheckChnAttr_x8054
    /*00007f40*/ MOV         R5, R0 
    /*00007f44*/ LSR         R0, IP, #31 
    /*00007f48*/ ORR         R0, R0, R3, LSR #31 
    /*00007f4c*/ CMP         R1, #31 
    /*00007f50*/ ORRLS       R0, R0, #1 
    /*00007f54*/ CMP         R7, #31 
    /*00007f58*/ MOVHI       R4, R0 
    /*00007f5c*/ ORRLS       R4, R0, #1 
    /*00007f60*/ CMP         R4, #0 
    /*00007f64*/ BNE         VouCheckChnAttr_x7fec
    /*00007f68*/ MOVW        R9, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00007f6c*/ MOVT        R9, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00007f70*/ MOVW        R0, #12192                  @ 0x2fa0 
    /*00007f74*/ ADD         R8, R3, R1 
    /*00007f78*/ MLA         R0, R0, R5, R9 
    /*00007f7c*/ LDR         R9, [R0, #128]              @ 0x80 
    /*00007f80*/ LDR         R0, [R0, #132]              @ 0x84 
    /*00007f84*/ CMP         R8, R9 
    /*00007f88*/ BHI         VouCheckChnAttr_x8004
    /*00007f8c*/ ADD         R8, IP, R7 
    /*00007f90*/ CMP         R8, R0 
    /*00007f94*/ BHI         VouCheckChnAttr_x8004
    /*00007f98*/ LDR         R2, [R2, #20] 
    /*00007f9c*/ CMP         R2, #1 
    /*00007fa0*/ BHI         VouCheckChnAttr_x8094
    /*00007fa4*/ STR         R0, [SP, #36]               @ 0x24 
    /*00007fa8*/ MOVW        R8, #2796                   @ 0xaec 
    /*00007fac*/ STR         R1, [SP, #24] 
    /*00007fb0*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30c0] 
    /*00007fb4*/ STR         R3, [SP, #16] 
    /*00007fb8*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30c0] 
    /*00007fbc*/ STR         R9, [SP, #32] 
    /*00007fc0*/ MOV         R1, #15 
    /*00007fc4*/ STR         R7, [SP, #28] 
    /*00007fc8*/ MOV         R0, #6 
    /*00007fcc*/ STR         IP, [SP, #20] 
    /*00007fd0*/ STMIB       SP, {R5, R6, LR} 
    /*00007fd4*/ STR         R8, [SP] 
    /*00007fd8*/ LDR         R3, [PC, #252]              @ 0x00000000000080dc 
    /*00007fdc*/ BL          0x0000000000007FDC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00007fe0*/ MOV         R0, R4 
    VouCheckChnAttr_x7fe4:
    /*00007fe4*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00007fe8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouCheckChnAttr_x7fec:
    /*00007fec*/ MOVW        R0, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00007ff0*/ MOVT        R0, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00007ff4*/ MOVW        R2, #12192                  @ 0x2fa0 
    /*00007ff8*/ MLA         R5, R2, R5, R0 
    /*00007ffc*/ LDR         R9, [R5, #128]              @ 0x80 
    /*00008000*/ LDR         R0, [R5, #132]              @ 0x84 
    VouCheckChnAttr_x8004:
    /*00008004*/ STR         R0, [SP, #24] 
    /*00008008*/ MOVW        LR, #2777                   @ 0xad9 
    /*0000800c*/ STR         R1, [SP, #12] 
    /*00008010*/ MOVW        R2, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3008] 
    /*00008014*/ STR         R3, [SP, #4] 
    /*00008018*/ MOVT        R2, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3008] 
    /*0000801c*/ STR         R9, [SP, #20] 
    /*00008020*/ MOV         R1, #15 
    /*00008024*/ STR         R7, [SP, #16] 
    /*00008028*/ MOV         R0, #3 
    /*0000802c*/ STR         IP, [SP, #8] 
    /*00008030*/ STR         LR, [SP] 
    /*00008034*/ LDR         R3, [PC, #160]              @ 0x00000000000080dc 
    /*00008038*/ BL          0x0000000000008038          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000803c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00008040*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00008044*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00008048*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouCheckChnAttr_x804c:
    /*0000804c*/ LDR         R1, [R2, #12] 
    /*00008050*/ LDR         R7, [R2, #16] 
    VouCheckChnAttr_x8054:
    /*00008054*/ STR         R1, [SP, #12] 
    /*00008058*/ MOVW        R0, #2763                   @ 0xacb 
    /*0000805c*/ STR         R3, [SP, #4] 
    /*00008060*/ MOV         R1, #15 
    /*00008064*/ STR         R0, [SP] 
    /*00008068*/ MOVW        R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2fc0] 
    /*0000806c*/ STR         R7, [SP, #16] 
    /*00008070*/ MOVT        R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2fc0] 
    /*00008074*/ STR         IP, [SP, #8] 
    /*00008078*/ MOV         R0, #3 
    /*0000807c*/ LDR         R3, [PC, #88]               @ 0x00000000000080dc 
    /*00008080*/ BL          0x0000000000008080          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008084*/ MOVW        R0, #32771                  @ 0x8003 
    /*00008088*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0000808c*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00008090*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouCheckChnAttr_x8094:
    /*00008094*/ STR         R2, [SP, #4] 
    /*00008098*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3080] 
    /*0000809c*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3080] 
    /*000080a0*/ MOVW        R3, #2783                   @ 0xadf 
    /*000080a4*/ STR         R3, [SP] 
    VouCheckChnAttr_x80a8:
    /*000080a8*/ LDR         R3, [PC, #44]               @ 0x00000000000080dc 
    /*000080ac*/ MOV         R1, #15 
    /*000080b0*/ MOV         R0, #3 
    /*000080b4*/ BL          0x00000000000080B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000080b8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000080bc*/ MOVT        R0, #40975                  @ 0xa00f 
    /*000080c0*/ B           VouCheckChnAttr_x7fe4
    VouCheckChnAttr_x80c4:
    /*000080c4*/ MOV         R3, #2752                   @ 0xac0 
    /*000080c8*/ MOVW        R2, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2f84] 
    /*000080cc*/ STR         LR, [SP, #4] 
    /*000080d0*/ MOVT        R2, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2f84] 
    /*000080d4*/ STR         R3, [SP] 
    /*000080d8*/ B           VouCheckChnAttr_x80a8
    /*000080dc*/ ANDEQ       R0, R0, IP, ASR R5 
FUNC_END VouCheckChnAttr


FUNC_BEGIN VouSetChnAttrBatch
    /*000080e0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000080e4*/ SUB         SP, SP, #52                 @ 0x34 
    /*000080e8*/ MOV         FP, R1 
    /*000080ec*/ MOV         R8, R2 
    /*000080f0*/ MOV         R4, R0 
    /*000080f4*/ BL          0x00000000000080F4          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*000080f8*/ CMP         R0, #0 
    /*000080fc*/ BNE         VouSetChnAttrBatch_x8428
    /*00008100*/ MOV         R1, FP 
    /*00008104*/ MOV         R0, R4 
    /*00008108*/ BL          0x0000000000008108          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000810c*/ CMP         R0, #0 
    /*00008110*/ BNE         VouSetChnAttrBatch_x8434
    /*00008114*/ MOV         R0, R8 
    /*00008118*/ BL          0x0000000000008118          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000811c*/ CMP         R0, #0 
    /*00008120*/ BNE         VouSetChnAttrBatch_x82c0
    /*00008124*/ LSL         R9, R4, #2 
    /*00008128*/ MOVW        R5, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000812c*/ ADD         R3, R9, FP 
    /*00008130*/ MOVT        R5, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00008134*/ LDR         R6, [R5, R3, LSL #2] 
    /*00008138*/ MOV         R0, R6 
    /*0000813c*/ BL          0x000000000000813C          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00008140*/ SUBS        SL, R0, #0 
    /*00008144*/ BNE         VouSetChnAttrBatch_x82c0
    /*00008148*/ MOVW        R7, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000814c*/ MOVT        R7, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00008150*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00008154*/ MLA         R3, R3, R4, R7 
    /*00008158*/ LDR         R3, [R3, #4] 
    /*0000815c*/ CMP         R3, #0 
    /*00008160*/ BEQ         VouSetChnAttrBatch_x8484
    /*00008164*/ LDR         R3, [R6, #4] 
    /*00008168*/ CMP         R3, #1 
    /*0000816c*/ BEQ         VouSetChnAttrBatch_x8244
    VouSetChnAttrBatch_x8170:
    /*00008170*/ MOV         R2, R8 
    /*00008174*/ MOV         R1, FP 
    /*00008178*/ MOV         R0, R4 
    /*0000817c*/ BL          0x000000000000817C          @ VouCheckChnAttr [R_ARM_CALL: .text+0x7efc] 
    /*00008180*/ SUBS        IP, R0, #0 
    /*00008184*/ BNE         VouSetChnAttrBatch_x8288
    /*00008188*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000818c*/ MLA         R3, R3, R4, R7 
    /*00008190*/ LDR         R2, [R3, #184]              @ 0xb8 
    /*00008194*/ STR         R3, [SP, #20] 
    /*00008198*/ CMP         R2, #1 
    /*0000819c*/ BEQ         VouSetChnAttrBatch_x8238
    /*000081a0*/ ADD         R3, SP, #48                 @ 0x30 
    /*000081a4*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*000081a8*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*000081ac*/ STR         IP, [R3, #-4]! 
    /*000081b0*/ MOV         R1, R3 
    /*000081b4*/ STR         R3, [SP, #24] 
    /*000081b8*/ BL          0x00000000000081B8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000081bc*/ LDR         R3, [SP, #20] 
    /*000081c0*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*000081c4*/ LDR         R3, [R3, #180]              @ 0xb4 
    /*000081c8*/ STR         R2, [SP, #20] 
    /*000081cc*/ CMP         R3, #0 
    /*000081d0*/ BEQ         VouSetChnAttrBatch_x82d4
    VouSetChnAttrBatch_x81d4:
    /*000081d4*/ MOV         R2, #24 
    /*000081d8*/ MOV         R1, R8 
    /*000081dc*/ ADD         R0, R6, #64                 @ 0x40 
    /*000081e0*/ BL          0x00000000000081E0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000081e4*/ LDR         R2, [R6, #12] 
    /*000081e8*/ MOV         R3, #1 
    /*000081ec*/ STR         R4, [R6] 
    /*000081f0*/ CMP         R2, #0 
    /*000081f4*/ STR         R3, [R6, #8] 
    /*000081f8*/ LDREQ       R3, [R8, #4] 
    /*000081fc*/ STREQ       R3, [R6, #116]              @ 0x74 
    /*00008200*/ LDREQ       R3, [R8, #8] 
    /*00008204*/ STREQ       R3, [R6, #120]              @ 0x78 
    /*00008208*/ LDR         R3, [R6, #4] 
    /*0000820c*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00008210*/ LDR         R1, [SP, #24] 
    /*00008214*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00008218*/ CMP         R3, #1 
    /*0000821c*/ MOVWNE      R3, #12192                  @ 0x2fa0 
    /*00008220*/ MLANE       R4, R3, R4, R7 
    /*00008224*/ LDRNE       R3, [R4, #32] 
    /*00008228*/ STRNE       R3, [R6, #60]               @ 0x3c 
    /*0000822c*/ LDR         R3, [SP, #20] 
    /*00008230*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00008234*/ BL          0x0000000000008234          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VouSetChnAttrBatch_x8238:
    /*00008238*/ MOV         R0, SL 
    /*0000823c*/ ADD         SP, SP, #52                 @ 0x34 
    /*00008240*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouSetChnAttrBatch_x8244:
    /*00008244*/ MOV         R2, #24 
    /*00008248*/ ADD         R1, R6, #64                 @ 0x40 
    /*0000824c*/ MOV         R0, R8 
    /*00008250*/ BL          0x0000000000008250          @ osal_memcmp [R_ARM_CALL: +0x0] 
    /*00008254*/ CMP         R0, #0 
    /*00008258*/ BNE         VouSetChnAttrBatch_x8170
    /*0000825c*/ MOVW        R3, #3774                   @ 0xebe 
    /*00008260*/ STR         FP, [SP, #8] 
    /*00008264*/ STR         R3, [SP] 
    /*00008268*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3138] 
    /*0000826c*/ STR         R4, [SP, #4] 
    /*00008270*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3138] 
    /*00008274*/ LDR         R3, [PC, #568]              @ 0x00000000000084b4 
    /*00008278*/ MOV         R1, #15 
    /*0000827c*/ MOV         R0, #6 
    /*00008280*/ BL          0x0000000000008280          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008284*/ B           VouSetChnAttrBatch_x8238
    VouSetChnAttrBatch_x8288:
    /*00008288*/ STR         FP, [SP, #8] 
    /*0000828c*/ MOVW        R3, #3783                   @ 0xec7 
    /*00008290*/ STR         R4, [SP, #4] 
    /*00008294*/ MOV         R1, #15 
    /*00008298*/ STR         R3, [SP] 
    /*0000829c*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3178] 
    /*000082a0*/ LDR         R3, [PC, #524]              @ 0x00000000000084b4 
    /*000082a4*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3178] 
    /*000082a8*/ MOV         R0, #3 
    /*000082ac*/ MOV         SL, IP 
    /*000082b0*/ BL          0x00000000000082B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000082b4*/ MOV         R0, SL 
    /*000082b8*/ ADD         SP, SP, #52                 @ 0x34 
    /*000082bc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouSetChnAttrBatch_x82c0:
    /*000082c0*/ MOVW        SL, #32774                  @ 0x8006 
    /*000082c4*/ MOVT        SL, #40975                  @ 0xa00f 
    /*000082c8*/ MOV         R0, SL 
    /*000082cc*/ ADD         SP, SP, #52                 @ 0x34 
    /*000082d0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouSetChnAttrBatch_x82d4:
    /*000082d4*/ ADD         FP, R9, FP 
    /*000082d8*/ LDR         R1, [R8] 
    /*000082dc*/ LDR         R2, [R5, FP, LSL #2] 
    /*000082e0*/ LDR         R3, [R2, #4] 
    /*000082e4*/ CMP         R3, #0 
    /*000082e8*/ BNE         VouSetChnAttrBatch_x8440
    VouSetChnAttrBatch_x82ec:
    /*000082ec*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*000082f0*/ STR         R1, [R2, #64]               @ 0x40 
    /*000082f4*/ MUL         R3, R3, R4 
    /*000082f8*/ ADD         R2, R5, R4, LSL #4 
    /*000082fc*/ SUB         R2, R2, #4 
    /*00008300*/ STR         R6, [SP, #28] 
    /*00008304*/ STR         SL, [SP, #32] 
    /*00008308*/ ADD         R0, R3, #260                @ 0x104 
    /*0000830c*/ ADD         R1, R3, #244                @ 0xf4 
    /*00008310*/ ADD         R0, R7, R0 
    /*00008314*/ ADD         R3, R7, R3 
    /*00008318*/ MOV         IP, R2 
    /*0000831c*/ ADD         R1, R7, R1 
    /*00008320*/ MOV         LR, R0 
    /*00008324*/ MOV         R0, #1 
    /*00008328*/ MOV         FP, R0 
    /*0000832c*/ MOV         R6, LR 
    /*00008330*/ MOV         SL, IP 
    /*00008334*/ MOV         R2, #0 
    /*00008338*/ STR         R0, [R3, #248]              @ 0xf8 
    /*0000833c*/ STR         R2, [R3, #244]              @ 0xf4 
    /*00008340*/ MOV         R2, #2 
    /*00008344*/ STR         R4, [SP, #36]               @ 0x24 
    /*00008348*/ STR         R2, [R3, #252]              @ 0xfc 
    /*0000834c*/ MOV         R2, #3 
    /*00008350*/ STR         R2, [R3, #256]              @ 0x100 
    VouSetChnAttrBatch_x8354:
    /*00008354*/ LDR         R3, [SL, #4]! 
    /*00008358*/ ADD         R4, R1, #4 
    /*0000835c*/ CMP         R3, #0 
    /*00008360*/ BEQ         VouSetChnAttrBatch_x83b0
    /*00008364*/ CMP         FP, #4 
    /*00008368*/ BEQ         VouSetChnAttrBatch_x83b0
    /*0000836c*/ MOV         R3, R4 
    VouSetChnAttrBatch_x8370:
    /*00008370*/ LDR         IP, [R3] 
    /*00008374*/ LDR         R0, [R1] 
    /*00008378*/ ADD         R2, R9, IP 
    /*0000837c*/ ADD         LR, R9, R0 
    /*00008380*/ LDR         R2, [R5, R2, LSL #2] 
    /*00008384*/ LDR         LR, [R5, LR, LSL #2] 
    /*00008388*/ CMP         R2, #0 
    /*0000838c*/ BEQ         VouSetChnAttrBatch_x83a4
    /*00008390*/ LDR         LR, [LR, #64]               @ 0x40 
    /*00008394*/ LDR         R2, [R2, #64]               @ 0x40 
    /*00008398*/ CMP         LR, R2 
    /*0000839c*/ STRHI       IP, [R1] 
    /*000083a0*/ STRHI       R0, [R3] 
    VouSetChnAttrBatch_x83a4:
    /*000083a4*/ ADD         R3, R3, #4 
    /*000083a8*/ CMP         R3, R6 
    /*000083ac*/ BNE         VouSetChnAttrBatch_x8370
    VouSetChnAttrBatch_x83b0:
    /*000083b0*/ ADD         FP, FP, #1 
    /*000083b4*/ MOV         R1, R4 
    /*000083b8*/ CMP         FP, #5 
    /*000083bc*/ BNE         VouSetChnAttrBatch_x8354
    /*000083c0*/ LDR         R6, [SP, #28] 
    /*000083c4*/ LDR         SL, [SP, #32] 
    /*000083c8*/ LDR         R4, [SP, #36]               @ 0x24 
    VouSetChnAttrBatch_x83cc:
    /*000083cc*/ LDR         R2, [R8, #16] 
    /*000083d0*/ LDR         R3, [R6, #80]               @ 0x50 
    /*000083d4*/ CMP         R2, R3 
    /*000083d8*/ BEQ         VouSetChnAttrBatch_x8450
    VouSetChnAttrBatch_x83dc:
    /*000083dc*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*000083e0*/ MUL         R3, R3, R4 
    /*000083e4*/ ADD         R2, R7, R3 
    /*000083e8*/ LDR         R2, [R2, #28] 
    /*000083ec*/ CMP         R2, #0 
    /*000083f0*/ BEQ         VouSetChnAttrBatch_x81d4
    /*000083f4*/ ADD         R0, R2, #2944               @ 0xb80 
    /*000083f8*/ MOVW        R2, #3048                   @ 0xbe8 
    /*000083fc*/ ADD         R0, R0, #5 
    /*00008400*/ ADD         R3, R3, #11776              @ 0x2e00 
    /*00008404*/ ADD         R3, R3, #20 
    /*00008408*/ MOV         R1, #1 
    /*0000840c*/ MLA         R2, R2, R4, R0 
    /*00008410*/ ADD         R3, R7, R3 
    /*00008414*/ ADD         R2, R7, R2, LSL #2 
    VouSetChnAttrBatch_x8418:
    /*00008418*/ STR         R1, [R3, #4]! 
    /*0000841c*/ CMP         R3, R2 
    /*00008420*/ BNE         VouSetChnAttrBatch_x8418
    /*00008424*/ B           VouSetChnAttrBatch_x81d4
    VouSetChnAttrBatch_x8428:
    /*00008428*/ MOVW        SL, #32877                  @ 0x806d 
    /*0000842c*/ MOVT        SL, #40975                  @ 0xa00f 
    /*00008430*/ B           VouSetChnAttrBatch_x8238
    VouSetChnAttrBatch_x8434:
    /*00008434*/ MOVW        SL, #32770                  @ 0x8002 
    /*00008438*/ MOVT        SL, #40975                  @ 0xa00f 
    /*0000843c*/ B           VouSetChnAttrBatch_x8238
    VouSetChnAttrBatch_x8440:
    /*00008440*/ LDR         R3, [R2, #64]               @ 0x40 
    /*00008444*/ CMP         R1, R3 
    /*00008448*/ BNE         VouSetChnAttrBatch_x82ec
    /*0000844c*/ B           VouSetChnAttrBatch_x83cc
    VouSetChnAttrBatch_x8450:
    /*00008450*/ LDR         R2, [R8, #12] 
    /*00008454*/ LDR         R3, [R6, #76]               @ 0x4c 
    /*00008458*/ CMP         R2, R3 
    /*0000845c*/ BNE         VouSetChnAttrBatch_x83dc
    /*00008460*/ LDR         R2, [R8, #4] 
    /*00008464*/ LDR         R3, [R6, #68]               @ 0x44 
    /*00008468*/ CMP         R2, R3 
    /*0000846c*/ BNE         VouSetChnAttrBatch_x83dc
    /*00008470*/ LDR         R2, [R8, #8] 
    /*00008474*/ LDR         R3, [R6, #72]               @ 0x48 
    /*00008478*/ CMP         R2, R3 
    /*0000847c*/ BNE         VouSetChnAttrBatch_x83dc
    /*00008480*/ B           VouSetChnAttrBatch_x81d4
    VouSetChnAttrBatch_x8484:
    /*00008484*/ MOVW        R3, #3765                   @ 0xeb5 
    /*00008488*/ STR         R4, [SP, #4] 
    /*0000848c*/ STR         R3, [SP] 
    /*00008490*/ MOVW        R2, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30fc] 
    /*00008494*/ LDR         R3, [PC, #24]               @ 0x00000000000084b4 
    /*00008498*/ MOVT        R2, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30fc] 
    /*0000849c*/ MOV         R1, #15 
    /*000084a0*/ MOV         R0, #3 
    /*000084a4*/ MOVW        SL, #32839                  @ 0x8047 
    /*000084a8*/ BL          0x00000000000084A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000084ac*/ MOVT        SL, #40975                  @ 0xa00f 
    /*000084b0*/ B           VouSetChnAttrBatch_x8238
    /*000084b4*/ ANDEQ       R0, R0, IP, ROR #10 
FUNC_END VouSetChnAttrBatch


FUNC_BEGIN VouSetChnAttr
    /*000084b8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000084bc*/ MOV         R5, R1 
    /*000084c0*/ MOV         R7, R2 
    /*000084c4*/ MOV         R4, R0 
    /*000084c8*/ BL          0x00000000000084C8          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*000084cc*/ CMP         R0, #0 
    /*000084d0*/ BNE         VouSetChnAttr_x855c
    /*000084d4*/ MOV         R1, R5 
    /*000084d8*/ MOV         R0, R4 
    /*000084dc*/ BL          0x00000000000084DC          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*000084e0*/ CMP         R0, #0 
    /*000084e4*/ BNE         VouSetChnAttr_x8568
    /*000084e8*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*000084ec*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*000084f0*/ BL          0x00000000000084F0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000084f4*/ CMP         R0, #0 
    /*000084f8*/ BNE         VouSetChnAttr_x8574
    /*000084fc*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00008500*/ ADD         R2, R5, R4, LSL #2 
    /*00008504*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00008508*/ LDR         R3, [R3, R2, LSL #2] 
    /*0000850c*/ CMP         R3, #0 
    /*00008510*/ BEQ         VouSetChnAttr_x8580
    VouSetChnAttr_x8514:
    /*00008514*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*00008518*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000851c*/ BL          0x000000000000851C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008520*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00008524*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00008528*/ BL          0x0000000000008528          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000852c*/ CMP         R0, #0 
    /*00008530*/ BNE         VouSetChnAttr_x8574
    /*00008534*/ MOV         R2, R7 
    /*00008538*/ MOV         R1, R5 
    /*0000853c*/ MOV         R0, R4 
    /*00008540*/ BL          0x0000000000008540          @ VouSetChnAttrBatch [R_ARM_CALL: .text+0x80e0] 
    /*00008544*/ MOV         R6, R0 
    /*00008548*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000854c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00008550*/ BL          0x0000000000008550          @ osal_up [R_ARM_CALL: +0x0] 
    VouSetChnAttr_x8554:
    /*00008554*/ MOV         R0, R6 
    /*00008558*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouSetChnAttr_x855c:
    /*0000855c*/ MOVW        R6, #32877                  @ 0x806d 
    /*00008560*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00008564*/ B           VouSetChnAttr_x8554
    VouSetChnAttr_x8568:
    /*00008568*/ MOVW        R6, #32770                  @ 0x8002 
    /*0000856c*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00008570*/ B           VouSetChnAttr_x8554
    VouSetChnAttr_x8574:
    /*00008574*/ MOV         R6, #65024                  @ 0xfe00 
    /*00008578*/ MOVT        R6, #65535                  @ 0xffff 
    /*0000857c*/ B           VouSetChnAttr_x8554
    VouSetChnAttr_x8580:
    /*00008580*/ MOV         R1, R5 
    /*00008584*/ MOV         R0, R4 
    /*00008588*/ BL          0x0000000000005468 
    /*0000858c*/ SUBS        R6, R0, #0 
    /*00008590*/ BEQ         VouSetChnAttr_x8514
    /*00008594*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*00008598*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000859c*/ BL          0x000000000000859C          @ osal_up [R_ARM_CALL: +0x0] 
    /*000085a0*/ MOV         R0, R6 
    /*000085a4*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VouSetChnAttr


FUNC_BEGIN VouGetChnAttr
    /*000085a8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000085ac*/ MOV         R5, R1 
    /*000085b0*/ MOV         R9, R2 
    /*000085b4*/ MOV         R7, R0 
    /*000085b8*/ BL          0x00000000000085B8          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*000085bc*/ CMP         R0, #0 
    /*000085c0*/ BNE         VouGetChnAttr_x8664
    /*000085c4*/ MOV         R1, R5 
    /*000085c8*/ MOV         R0, R7 
    /*000085cc*/ BL          0x00000000000085CC          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*000085d0*/ CMP         R0, #0 
    /*000085d4*/ BNE         VouGetChnAttr_x8670
    /*000085d8*/ MOV         R0, R9 
    /*000085dc*/ BL          0x00000000000085DC          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*000085e0*/ SUBS        R6, R0, #0 
    /*000085e4*/ BNE         VouGetChnAttr_x867c
    /*000085e8*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*000085ec*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*000085f0*/ BL          0x00000000000085F0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000085f4*/ CMP         R0, #0 
    /*000085f8*/ BNE         VouGetChnAttr_x8688
    /*000085fc*/ LSL         R8, R7, #2 
    /*00008600*/ MOVW        R4, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00008604*/ ADD         R3, R8, R5 
    /*00008608*/ MOVT        R4, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000860c*/ LDR         R3, [R4, R3, LSL #2] 
    /*00008610*/ CMP         R3, #0 
    /*00008614*/ BEQ         VouGetChnAttr_x8694
    VouGetChnAttr_x8618:
    /*00008618*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000861c*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*00008620*/ BL          0x0000000000008620          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008624*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00008628*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000862c*/ BL          0x000000000000862C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008630*/ CMP         R0, #0 
    /*00008634*/ BNE         VouGetChnAttr_x8688
    /*00008638*/ ADD         R5, R8, R5 
    /*0000863c*/ MOV         R0, R9 
    /*00008640*/ MOV         R2, #24 
    /*00008644*/ LDR         R1, [R4, R5, LSL #2] 
    /*00008648*/ ADD         R1, R1, #64                 @ 0x40 
    /*0000864c*/ BL          0x000000000000864C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00008650*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00008654*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00008658*/ BL          0x0000000000008658          @ osal_up [R_ARM_CALL: +0x0] 
    VouGetChnAttr_x865c:
    /*0000865c*/ MOV         R0, R6 
    /*00008660*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouGetChnAttr_x8664:
    /*00008664*/ MOVW        R6, #32877                  @ 0x806d 
    /*00008668*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000866c*/ B           VouGetChnAttr_x865c
    VouGetChnAttr_x8670:
    /*00008670*/ MOVW        R6, #32770                  @ 0x8002 
    /*00008674*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00008678*/ B           VouGetChnAttr_x865c
    VouGetChnAttr_x867c:
    /*0000867c*/ MOVW        R6, #32774                  @ 0x8006 
    /*00008680*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00008684*/ B           VouGetChnAttr_x865c
    VouGetChnAttr_x8688:
    /*00008688*/ MOV         R6, #65024                  @ 0xfe00 
    /*0000868c*/ MOVT        R6, #65535                  @ 0xffff 
    /*00008690*/ B           VouGetChnAttr_x865c
    VouGetChnAttr_x8694:
    /*00008694*/ MOV         R0, R7 
    /*00008698*/ MOV         R1, R5 
    /*0000869c*/ BL          0x0000000000005468 
    /*000086a0*/ SUBS        R3, R0, #0 
    /*000086a4*/ BEQ         VouGetChnAttr_x8618
    /*000086a8*/ MOV         R6, R3 
    /*000086ac*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*000086b0*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*000086b4*/ BL          0x00000000000086B4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000086b8*/ MOV         R0, R6 
    /*000086bc*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END VouGetChnAttr


FUNC_BEGIN VouCheckChnParam
    /*000086c0*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000086c4*/ MOV         R3, R0 
    /*000086c8*/ LDR         R0, [R2] 
    /*000086cc*/ SUB         SP, SP, #36                 @ 0x24 
    /*000086d0*/ MOV         IP, R1 
    /*000086d4*/ CMP         R0, #2 
    /*000086d8*/ BHI         VouCheckChnParam_x87dc
    /*000086dc*/ CMP         R0, #0 
    /*000086e0*/ BEQ         VouCheckChnParam_x86fc
    /*000086e4*/ CMP         R0, #2 
    /*000086e8*/ BEQ         VouCheckChnParam_x8704
    VouCheckChnParam_x86ec:
    /*000086ec*/ LDR         R2, [R2, #4] 
    /*000086f0*/ CMP         R2, #16777216               @ 0x1000000 
    /*000086f4*/ MOVCC       R0, #0 
    /*000086f8*/ BCS         VouCheckChnParam_x8814
    VouCheckChnParam_x86fc:
    /*000086fc*/ ADD         SP, SP, #36                 @ 0x24 
    /*00008700*/ POP         {R4, R5, R6, R7, PC} 
    VouCheckChnParam_x8704:
    /*00008704*/ LDR         R0, [R2, #8] 
    /*00008708*/ LDR         LR, [R2, #12] 
    /*0000870c*/ CMP         R0, #0 
    /*00008710*/ BLT         VouCheckChnParam_x8830
    /*00008714*/ CMP         LR, #0 
    /*00008718*/ BLT         VouCheckChnParam_x8830
    /*0000871c*/ ORR         R1, R0, LR 
    /*00008720*/ LDR         R4, [R2, #16] 
    /*00008724*/ TST         R1, #1 
    /*00008728*/ LDR         R5, [R2, #20] 
    /*0000872c*/ BNE         VouCheckChnParam_x8798
    /*00008730*/ TST         R4, #1 
    /*00008734*/ BNE         VouCheckChnParam_x8798
    /*00008738*/ TST         R5, #1 
    /*0000873c*/ BNE         VouCheckChnParam_x8798
    /*00008740*/ ADD         R6, IP, R3, LSL #2 
    /*00008744*/ MOVW        R1, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00008748*/ MOVT        R1, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000874c*/ LDR         R1, [R1, R6, LSL #2] 
    /*00008750*/ LDR         R6, [R1, #76]               @ 0x4c 
    /*00008754*/ CMP         R0, R6 
    /*00008758*/ BHI         VouCheckChnParam_x8798
    /*0000875c*/ LDR         R1, [R1, #80]               @ 0x50 
    /*00008760*/ CMP         LR, R1 
    /*00008764*/ BHI         VouCheckChnParam_x8798
    /*00008768*/ ADD         R7, R0, R4 
    /*0000876c*/ CMP         R6, R7 
    /*00008770*/ BCC         VouCheckChnParam_x8798
    /*00008774*/ ADD         R6, LR, R5 
    /*00008778*/ CMP         R1, R6 
    /*0000877c*/ CMPCS       R4, #31 
    /*00008780*/ MOVLS       R1, #1 
    /*00008784*/ MOVHI       R1, #0 
    /*00008788*/ CMP         R5, #31 
    /*0000878c*/ ORRLS       R1, R1, #1 
    /*00008790*/ CMP         R1, #0 
    /*00008794*/ BEQ         VouCheckChnParam_x86ec
    VouCheckChnParam_x8798:
    /*00008798*/ STR         R5, [SP, #24] 
    /*0000879c*/ MOVW        R2, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x320c] 
    /*000087a0*/ STR         R0, [SP, #12] 
    /*000087a4*/ MOVW        R5, #3970                   @ 0xf82 
    /*000087a8*/ STR         R3, [SP, #4] 
    /*000087ac*/ MOVT        R2, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x320c] 
    /*000087b0*/ STR         R4, [SP, #20] 
    /*000087b4*/ MOV         R1, #15 
    /*000087b8*/ STR         LR, [SP, #16] 
    /*000087bc*/ MOV         R0, #3 
    /*000087c0*/ STR         IP, [SP, #8] 
    /*000087c4*/ STR         R5, [SP] 
    /*000087c8*/ LDR         R3, [PC, #108]              @ 0x000000000000883c 
    /*000087cc*/ BL          0x00000000000087CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000087d0*/ MOVW        R0, #32771                  @ 0x8003 
    /*000087d4*/ MOVT        R0, #40975                  @ 0xa00f 
    /*000087d8*/ B           VouCheckChnParam_x86fc
    VouCheckChnParam_x87dc:
    /*000087dc*/ MOVW        R2, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x31bc] 
    /*000087e0*/ MOVT        R2, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x31bc] 
    /*000087e4*/ MOVW        R1, #3942                   @ 0xf66 
    /*000087e8*/ STR         R0, [SP, #12] 
    /*000087ec*/ STR         IP, [SP, #8] 
    /*000087f0*/ STR         R3, [SP, #4] 
    VouCheckChnParam_x87f4:
    /*000087f4*/ STR         R1, [SP] 
    /*000087f8*/ MOV         R0, #3 
    /*000087fc*/ MOV         R1, #15 
    /*00008800*/ LDR         R3, [PC, #52]               @ 0x000000000000883c 
    /*00008804*/ BL          0x0000000000008804          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008808*/ MOVW        R0, #32771                  @ 0x8003 
    /*0000880c*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00008810*/ B           VouCheckChnParam_x86fc
    VouCheckChnParam_x8814:
    /*00008814*/ STR         R2, [SP, #12] 
    /*00008818*/ MOVW        R1, #3978                   @ 0xf8a 
    /*0000881c*/ MOVW        R2, #0                      @ .LC69 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3268] 
    /*00008820*/ STR         IP, [SP, #8] 
    /*00008824*/ STR         R3, [SP, #4] 
    /*00008828*/ MOVT        R2, #0                      @ .LC69 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3268] 
    /*0000882c*/ B           VouCheckChnParam_x87f4
    VouCheckChnParam_x8830:
    /*00008830*/ LDR         R4, [R2, #16] 
    /*00008834*/ LDR         R5, [R2, #20] 
    /*00008838*/ B           VouCheckChnParam_x8798
    /*0000883c*/ ANDEQ       R0, R0, R0, LSL #11 
FUNC_END VouCheckChnParam


FUNC_BEGIN VouSetChnParamBatch
    /*00008840*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00008844*/ SUB         SP, SP, #24 
    /*00008848*/ MOV         R5, R1 
    /*0000884c*/ MOV         R8, R2 
    /*00008850*/ MOV         R4, R0 
    /*00008854*/ BL          0x0000000000008854          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00008858*/ CMP         R0, #0 
    /*0000885c*/ BNE         VouSetChnParamBatch_x8a1c
    /*00008860*/ MOV         R1, R5 
    /*00008864*/ MOV         R0, R4 
    /*00008868*/ BL          0x0000000000008868          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000886c*/ CMP         R0, #0 
    /*00008870*/ BNE         VouSetChnParamBatch_x8a28
    /*00008874*/ MOV         R0, R8 
    /*00008878*/ BL          0x0000000000008878          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000887c*/ CMP         R0, #0 
    /*00008880*/ BNE         VouSetChnParamBatch_x8a08
    /*00008884*/ ADD         R2, R5, R4, LSL #2 
    /*00008888*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000888c*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00008890*/ LDR         R7, [R3, R2, LSL #2] 
    /*00008894*/ MOV         R0, R7 
    /*00008898*/ BL          0x0000000000008898          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000889c*/ SUBS        R6, R0, #0 
    /*000088a0*/ BNE         VouSetChnParamBatch_x8a08
    /*000088a4*/ MOV         R0, R4 
    /*000088a8*/ BL          0x00000000000088A8          @ VO_DRV_IsSingleSupportAspectRatio [R_ARM_CALL: .text+0x1954c] 
    /*000088ac*/ MOVW        R3, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*000088b0*/ MOVT        R3, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*000088b4*/ CMP         R0, #0 
    /*000088b8*/ BEQ         VouSetChnParamBatch_x894c
    VouSetChnParamBatch_x88bc:
    /*000088bc*/ MOVW        R2, #12192                  @ 0x2fa0 
    /*000088c0*/ MLA         R3, R2, R4, R3 
    /*000088c4*/ LDR         R3, [R3, #4] 
    /*000088c8*/ CMP         R3, #0 
    /*000088cc*/ BEQ         VouSetChnParamBatch_x8a34
    /*000088d0*/ LDR         R3, [R7, #8] 
    /*000088d4*/ CMP         R3, #0 
    /*000088d8*/ BEQ         VouSetChnParamBatch_x8a64
    /*000088dc*/ LDR         R3, [R7, #4] 
    /*000088e0*/ CMP         R3, #1 
    /*000088e4*/ BEQ         VouSetChnParamBatch_x89c4
    VouSetChnParamBatch_x88e8:
    /*000088e8*/ MOV         R2, R8 
    /*000088ec*/ MOV         R1, R5 
    /*000088f0*/ MOV         R0, R4 
    /*000088f4*/ BL          0x00000000000088F4          @ VouCheckChnParam [R_ARM_CALL: .text+0x86c0] 
    /*000088f8*/ SUBS        R6, R0, #0 
    /*000088fc*/ BNE         VouSetChnParamBatch_x8990
    /*00008900*/ ADD         R4, SP, #24 
    /*00008904*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00008908*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000890c*/ STR         R6, [R4, #-4]! 
    /*00008910*/ MOV         R1, R4 
    /*00008914*/ BL          0x0000000000008914          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00008918*/ LDR         R5, [SP, #20] 
    /*0000891c*/ MOV         R1, R8 
    /*00008920*/ ADD         R0, R7, #92                 @ 0x5c 
    /*00008924*/ MOV         R2, #24 
    /*00008928*/ BL          0x0000000000008928          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000892c*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00008930*/ MOV         R1, R4 
    /*00008934*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00008938*/ STR         R5, [SP, #20] 
    /*0000893c*/ BL          0x000000000000893C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VouSetChnParamBatch_x8940:
    /*00008940*/ MOV         R0, R6 
    /*00008944*/ ADD         SP, SP, #24 
    /*00008948*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouSetChnParamBatch_x894c:
    /*0000894c*/ MOVW        R2, #12192                  @ 0x2fa0 
    /*00008950*/ MLA         R2, R2, R4, R3 
    /*00008954*/ LDR         R2, [R2, #180]              @ 0xb4 
    /*00008958*/ CMP         R2, #0 
    /*0000895c*/ BNE         VouSetChnParamBatch_x88bc
    /*00008960*/ MOVW        R3, #4006                   @ 0xfa6 
    /*00008964*/ STR         R4, [SP, #4] 
    /*00008968*/ STR         R3, [SP] 
    /*0000896c*/ MOVW        R2, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32b8] 
    /*00008970*/ LDR         R3, [PC, #288]              @ 0x0000000000008a98 
    /*00008974*/ MOVT        R2, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32b8] 
    /*00008978*/ MOV         R1, #15 
    /*0000897c*/ MOV         R0, #3 
    /*00008980*/ MOVW        R6, #32776                  @ 0x8008 
    /*00008984*/ BL          0x0000000000008984          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008988*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000898c*/ B           VouSetChnParamBatch_x8940
    VouSetChnParamBatch_x8990:
    /*00008990*/ STR         R5, [SP, #8] 
    /*00008994*/ MOVW        R3, #4039                   @ 0xfc7 
    /*00008998*/ STR         R4, [SP, #4] 
    /*0000899c*/ MOV         R1, #15 
    /*000089a0*/ STR         R3, [SP] 
    /*000089a4*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3178] 
    /*000089a8*/ LDR         R3, [PC, #232]              @ 0x0000000000008a98 
    /*000089ac*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3178] 
    /*000089b0*/ MOV         R0, #3 
    /*000089b4*/ BL          0x00000000000089B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000089b8*/ MOV         R0, R6 
    /*000089bc*/ ADD         SP, SP, #24 
    /*000089c0*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouSetChnParamBatch_x89c4:
    /*000089c4*/ MOV         R2, #24 
    /*000089c8*/ ADD         R1, R7, #92                 @ 0x5c 
    /*000089cc*/ MOV         R0, R8 
    /*000089d0*/ BL          0x00000000000089D0          @ osal_memcmp [R_ARM_CALL: +0x0] 
    /*000089d4*/ CMP         R0, #0 
    /*000089d8*/ BNE         VouSetChnParamBatch_x88e8
    /*000089dc*/ MOVW        R3, #4028                   @ 0xfbc 
    /*000089e0*/ STR         R5, [SP, #8] 
    /*000089e4*/ STR         R3, [SP] 
    /*000089e8*/ MOVW        R2, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x334c] 
    /*000089ec*/ STR         R4, [SP, #4] 
    /*000089f0*/ MOVT        R2, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x334c] 
    /*000089f4*/ LDR         R3, [PC, #156]              @ 0x0000000000008a98 
    /*000089f8*/ MOV         R1, #15 
    /*000089fc*/ MOV         R0, #6 
    /*00008a00*/ BL          0x0000000000008A00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008a04*/ B           VouSetChnParamBatch_x8940
    VouSetChnParamBatch_x8a08:
    /*00008a08*/ MOVW        R6, #32774                  @ 0x8006 
    /*00008a0c*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00008a10*/ MOV         R0, R6 
    /*00008a14*/ ADD         SP, SP, #24 
    /*00008a18*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouSetChnParamBatch_x8a1c:
    /*00008a1c*/ MOVW        R6, #32877                  @ 0x806d 
    /*00008a20*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00008a24*/ B           VouSetChnParamBatch_x8940
    VouSetChnParamBatch_x8a28:
    /*00008a28*/ MOVW        R6, #32770                  @ 0x8002 
    /*00008a2c*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00008a30*/ B           VouSetChnParamBatch_x8940
    VouSetChnParamBatch_x8a34:
    /*00008a34*/ MOVW        R3, #4013                   @ 0xfad 
    /*00008a38*/ STR         R4, [SP, #4] 
    /*00008a3c*/ STR         R3, [SP] 
    /*00008a40*/ MOVW        R2, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x30fc] 
    /*00008a44*/ LDR         R3, [PC, #76]               @ 0x0000000000008a98 
    /*00008a48*/ MOVT        R2, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x30fc] 
    /*00008a4c*/ MOV         R1, #15 
    /*00008a50*/ MOV         R0, #3 
    /*00008a54*/ MOVW        R6, #32839                  @ 0x8047 
    /*00008a58*/ BL          0x0000000000008A58          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008a5c*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00008a60*/ B           VouSetChnParamBatch_x8940
    VouSetChnParamBatch_x8a64:
    /*00008a64*/ MOVW        R3, #4019                   @ 0xfb3 
    /*00008a68*/ STR         R5, [SP, #8] 
    /*00008a6c*/ STR         R3, [SP] 
    /*00008a70*/ MOVW        R2, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x330c] 
    /*00008a74*/ STR         R4, [SP, #4] 
    /*00008a78*/ MOVT        R2, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0x330c] 
    /*00008a7c*/ LDR         R3, [PC, #20]               @ 0x0000000000008a98 
    /*00008a80*/ MOV         R1, #15 
    /*00008a84*/ MOV         R0, #3 
    /*00008a88*/ MOVW        R6, #32842                  @ 0x804a 
    /*00008a8c*/ BL          0x0000000000008A8C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008a90*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00008a94*/ B           VouSetChnParamBatch_x8940
    /*00008a98*/ MULEQ       R0, R4, R5 
FUNC_END VouSetChnParamBatch


FUNC_BEGIN VouSetChnParam
    /*00008a9c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00008aa0*/ MOV         R5, R1 
    /*00008aa4*/ MOV         R7, R2 
    /*00008aa8*/ MOV         R4, R0 
    /*00008aac*/ BL          0x0000000000008AAC          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00008ab0*/ CMP         R0, #0 
    /*00008ab4*/ BNE         VouSetChnParam_x8b40
    /*00008ab8*/ MOV         R1, R5 
    /*00008abc*/ MOV         R0, R4 
    /*00008ac0*/ BL          0x0000000000008AC0          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*00008ac4*/ CMP         R0, #0 
    /*00008ac8*/ BNE         VouSetChnParam_x8b4c
    /*00008acc*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*00008ad0*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*00008ad4*/ BL          0x0000000000008AD4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008ad8*/ CMP         R0, #0 
    /*00008adc*/ BNE         VouSetChnParam_x8b58
    /*00008ae0*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00008ae4*/ ADD         R2, R5, R4, LSL #2 
    /*00008ae8*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00008aec*/ LDR         R3, [R3, R2, LSL #2] 
    /*00008af0*/ CMP         R3, #0 
    /*00008af4*/ BEQ         VouSetChnParam_x8b64
    VouSetChnParam_x8af8:
    /*00008af8*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*00008afc*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*00008b00*/ BL          0x0000000000008B00          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008b04*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00008b08*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00008b0c*/ BL          0x0000000000008B0C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008b10*/ CMP         R0, #0 
    /*00008b14*/ BNE         VouSetChnParam_x8b58
    /*00008b18*/ MOV         R2, R7 
    /*00008b1c*/ MOV         R1, R5 
    /*00008b20*/ MOV         R0, R4 
    /*00008b24*/ BL          0x0000000000008B24          @ VouSetChnParamBatch [R_ARM_CALL: .text+0x8840] 
    /*00008b28*/ MOV         R6, R0 
    /*00008b2c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00008b30*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00008b34*/ BL          0x0000000000008B34          @ osal_up [R_ARM_CALL: +0x0] 
    VouSetChnParam_x8b38:
    /*00008b38*/ MOV         R0, R6 
    /*00008b3c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouSetChnParam_x8b40:
    /*00008b40*/ MOVW        R6, #32877                  @ 0x806d 
    /*00008b44*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00008b48*/ B           VouSetChnParam_x8b38
    VouSetChnParam_x8b4c:
    /*00008b4c*/ MOVW        R6, #32770                  @ 0x8002 
    /*00008b50*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00008b54*/ B           VouSetChnParam_x8b38
    VouSetChnParam_x8b58:
    /*00008b58*/ MOV         R6, #65024                  @ 0xfe00 
    /*00008b5c*/ MOVT        R6, #65535                  @ 0xffff 
    /*00008b60*/ B           VouSetChnParam_x8b38
    VouSetChnParam_x8b64:
    /*00008b64*/ MOV         R1, R5 
    /*00008b68*/ MOV         R0, R4 
    /*00008b6c*/ BL          0x0000000000005468 
    /*00008b70*/ SUBS        R6, R0, #0 
    /*00008b74*/ BEQ         VouSetChnParam_x8af8
    /*00008b78*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*00008b7c*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*00008b80*/ BL          0x0000000000008B80          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008b84*/ MOV         R0, R6 
    /*00008b88*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VouSetChnParam


FUNC_BEGIN VouGetChnParam
    /*00008b8c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00008b90*/ SUB         SP, SP, #12 
    /*00008b94*/ MOV         R6, R1 
    /*00008b98*/ MOV         R9, R2 
    /*00008b9c*/ MOV         R4, R0 
    /*00008ba0*/ BL          0x0000000000008BA0          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00008ba4*/ CMP         R0, #0 
    /*00008ba8*/ BNE         VouGetChnParam_x8c7c
    /*00008bac*/ MOV         R1, R6 
    /*00008bb0*/ MOV         R0, R4 
    /*00008bb4*/ BL          0x0000000000008BB4          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*00008bb8*/ CMP         R0, #0 
    /*00008bbc*/ BNE         VouGetChnParam_x8c88
    /*00008bc0*/ MOV         R0, R9 
    /*00008bc4*/ BL          0x0000000000008BC4          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00008bc8*/ SUBS        R7, R0, #0 
    /*00008bcc*/ BNE         VouGetChnParam_x8c94
    /*00008bd0*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*00008bd4*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*00008bd8*/ BL          0x0000000000008BD8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008bdc*/ CMP         R0, #0 
    /*00008be0*/ BNE         VouGetChnParam_x8ca0
    /*00008be4*/ LSL         R8, R4, #2 
    /*00008be8*/ MOVW        R5, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00008bec*/ ADD         R3, R8, R6 
    /*00008bf0*/ MOVT        R5, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00008bf4*/ LDR         R3, [R5, R3, LSL #2] 
    /*00008bf8*/ CMP         R3, #0 
    /*00008bfc*/ BEQ         VouGetChnParam_x8cac
    VouGetChnParam_x8c00:
    /*00008c00*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*00008c04*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*00008c08*/ BL          0x0000000000008C08          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008c0c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00008c10*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00008c14*/ BL          0x0000000000008C14          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008c18*/ CMP         R0, #0 
    /*00008c1c*/ BNE         VouGetChnParam_x8ca0
    /*00008c20*/ ADD         R6, R8, R6 
    /*00008c24*/ MOV         R0, R4 
    /*00008c28*/ LDR         R5, [R5, R6, LSL #2] 
    /*00008c2c*/ BL          0x0000000000008C2C          @ VO_DRV_IsSingleSupportAspectRatio [R_ARM_CALL: .text+0x1954c] 
    /*00008c30*/ CMP         R0, #0 
    /*00008c34*/ BNE         VouGetChnParam_x8c54
    /*00008c38*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00008c3c*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00008c40*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00008c44*/ MLA         R3, R3, R4, R2 
    /*00008c48*/ LDR         R3, [R3, #180]              @ 0xb4 
    /*00008c4c*/ CMP         R3, #0 
    /*00008c50*/ BEQ         VouGetChnParam_x8cdc
    VouGetChnParam_x8c54:
    /*00008c54*/ ADD         R1, R5, #92                 @ 0x5c 
    /*00008c58*/ MOV         R0, R9 
    /*00008c5c*/ MOV         R2, #24 
    /*00008c60*/ BL          0x0000000000008C60          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00008c64*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00008c68*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00008c6c*/ BL          0x0000000000008C6C          @ osal_up [R_ARM_CALL: +0x0] 
    VouGetChnParam_x8c70:
    /*00008c70*/ MOV         R0, R7 
    /*00008c74*/ ADD         SP, SP, #12 
    /*00008c78*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouGetChnParam_x8c7c:
    /*00008c7c*/ MOVW        R7, #32877                  @ 0x806d 
    /*00008c80*/ MOVT        R7, #40975                  @ 0xa00f 
    /*00008c84*/ B           VouGetChnParam_x8c70
    VouGetChnParam_x8c88:
    /*00008c88*/ MOVW        R7, #32770                  @ 0x8002 
    /*00008c8c*/ MOVT        R7, #40975                  @ 0xa00f 
    /*00008c90*/ B           VouGetChnParam_x8c70
    VouGetChnParam_x8c94:
    /*00008c94*/ MOVW        R7, #32774                  @ 0x8006 
    /*00008c98*/ MOVT        R7, #40975                  @ 0xa00f 
    /*00008c9c*/ B           VouGetChnParam_x8c70
    VouGetChnParam_x8ca0:
    /*00008ca0*/ MOV         R7, #65024                  @ 0xfe00 
    /*00008ca4*/ MOVT        R7, #65535                  @ 0xffff 
    /*00008ca8*/ B           VouGetChnParam_x8c70
    VouGetChnParam_x8cac:
    /*00008cac*/ MOV         R1, R6 
    /*00008cb0*/ MOV         R0, R4 
    /*00008cb4*/ BL          0x0000000000005468 
    /*00008cb8*/ SUBS        R3, R0, #0 
    /*00008cbc*/ BEQ         VouGetChnParam_x8c00
    /*00008cc0*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*00008cc4*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*00008cc8*/ MOV         R7, R3 
    /*00008ccc*/ BL          0x0000000000008CCC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008cd0*/ MOV         R0, R7 
    /*00008cd4*/ ADD         SP, SP, #12 
    /*00008cd8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouGetChnParam_x8cdc:
    /*00008cdc*/ MOVW        R3, #4087                   @ 0xff7 
    /*00008ce0*/ MOV         R1, #15 
    /*00008ce4*/ STR         R3, [SP] 
    /*00008ce8*/ MOVW        R2, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x32b8] 
    /*00008cec*/ LDR         R3, [PC, #36]               @ 0x0000000000008d18 
    /*00008cf0*/ MOVT        R2, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0x32b8] 
    /*00008cf4*/ STR         R4, [SP, #4] 
    /*00008cf8*/ MOV         R0, #3 
    /*00008cfc*/ BL          0x0000000000008CFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008d00*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00008d04*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00008d08*/ MOVW        R7, #32776                  @ 0x8008 
    /*00008d0c*/ BL          0x0000000000008D0C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008d10*/ MOVT        R7, #40975                  @ 0xa00f 
    /*00008d14*/ B           VouGetChnParam_x8c70
    /*00008d18*/ ANDEQ       R0, R0, R8, LSR #11 
FUNC_END VouGetChnParam


FUNC_BEGIN VoSetLayerParam
    /*00008d1c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00008d20*/ SUB         SP, SP, #20 
    /*00008d24*/ MOV         R6, R1 
    /*00008d28*/ MOV         R9, R0 
    /*00008d2c*/ BL          0x0000000000008D2C          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00008d30*/ CMP         R0, #0 
    /*00008d34*/ BNE         VoSetLayerParam_x8e24
    /*00008d38*/ MOV         R0, R6 
    /*00008d3c*/ BL          0x0000000000008D3C          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00008d40*/ CMP         R0, #0 
    /*00008d44*/ BNE         VoSetLayerParam_x8e30
    /*00008d48*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00008d4c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00008d50*/ BL          0x0000000000008D50          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008d54*/ CMP         R0, #0 
    /*00008d58*/ BNE         VoSetLayerParam_x8e3c
    /*00008d5c*/ MOV         R0, R9 
    /*00008d60*/ BL          0x0000000000008D60          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*00008d64*/ CMN         R0, #1 
    /*00008d68*/ BEQ         VoSetLayerParam_x8ed8
    /*00008d6c*/ MOVW        R4, #12192                  @ 0x2fa0 
    /*00008d70*/ MOVW        R5, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00008d74*/ MUL         R4, R4, R9 
    /*00008d78*/ MOVT        R5, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00008d7c*/ ADD         R8, R5, R4 
    /*00008d80*/ LDR         R3, [R8, #180]              @ 0xb4 
    /*00008d84*/ CMP         R3, #1 
    /*00008d88*/ BEQ         VoSetLayerParam_x8ec0
    /*00008d8c*/ BL          0x0000000000008D8C          @ VOU_DRV_IsVirtDev [R_ARM_CALL: .text+0x17648] 
    /*00008d90*/ CMP         R0, #0 
    /*00008d94*/ BNE         VoSetLayerParam_x8ec0
    /*00008d98*/ LDR         R3, [R8, #4] 
    /*00008d9c*/ CMP         R3, #1 
    /*00008da0*/ BNE         VoSetLayerParam_x8e48
    /*00008da4*/ MOV         R1, R6 
    /*00008da8*/ MOV         R0, R9 
    /*00008dac*/ BL          0x0000000000008DAC          @ VOU_DRV_CheckLayerParam [R_ARM_CALL: .text+0x19554] 
    /*00008db0*/ SUBS        R7, R0, #0 
    /*00008db4*/ BNE         VoSetLayerParam_x8e0c
    /*00008db8*/ LDR         R3, [R8, #180]              @ 0xb4 
    /*00008dbc*/ CMP         R3, #1 
    /*00008dc0*/ BEQ         VoSetLayerParam_x8e84
    /*00008dc4*/ ADD         R8, SP, #16 
    /*00008dc8*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00008dcc*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00008dd0*/ STR         R7, [R8, #-4]! 
    /*00008dd4*/ MOV         R1, R8 
    /*00008dd8*/ BL          0x0000000000008DD8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00008ddc*/ ADD         R0, R4, #12096              @ 0x2f40 
    /*00008de0*/ ADD         R0, R0, #40                 @ 0x28 
    /*00008de4*/ LDR         R4, [SP, #12] 
    /*00008de8*/ MOV         R1, R6 
    /*00008dec*/ ADD         R0, R5, R0 
    /*00008df0*/ MOV         R2, #24 
    /*00008df4*/ BL          0x0000000000008DF4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00008df8*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00008dfc*/ MOV         R1, R8 
    /*00008e00*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00008e04*/ STR         R4, [SP, #12] 
    /*00008e08*/ BL          0x0000000000008E08          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VoSetLayerParam_x8e0c:
    /*00008e0c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00008e10*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00008e14*/ BL          0x0000000000008E14          @ osal_up [R_ARM_CALL: +0x0] 
    VoSetLayerParam_x8e18:
    /*00008e18*/ MOV         R0, R7 
    /*00008e1c*/ ADD         SP, SP, #20 
    /*00008e20*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VoSetLayerParam_x8e24:
    /*00008e24*/ MOVW        R7, #32877                  @ 0x806d 
    /*00008e28*/ MOVT        R7, #40975                  @ 0xa00f 
    /*00008e2c*/ B           VoSetLayerParam_x8e18
    VoSetLayerParam_x8e30:
    /*00008e30*/ MOVW        R7, #32774                  @ 0x8006 
    /*00008e34*/ MOVT        R7, #40975                  @ 0xa00f 
    /*00008e38*/ B           VoSetLayerParam_x8e18
    VoSetLayerParam_x8e3c:
    /*00008e3c*/ MOV         R7, #65024                  @ 0xfe00 
    /*00008e40*/ MOVT        R7, #65535                  @ 0xffff 
    /*00008e44*/ B           VoSetLayerParam_x8e18
    VoSetLayerParam_x8e48:
    /*00008e48*/ MOVW        R3, #4137                   @ 0x1029 
    /*00008e4c*/ MOV         R1, #15 
    /*00008e50*/ STR         R3, [SP] 
    /*00008e54*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a64] 
    /*00008e58*/ LDR         R3, [PC, #180]              @ 0x0000000000008f14 
    /*00008e5c*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a64] 
    /*00008e60*/ STR         R9, [SP, #4] 
    /*00008e64*/ MOV         R0, #3 
    /*00008e68*/ BL          0x0000000000008E68          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008e6c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00008e70*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00008e74*/ MOVW        R7, #32839                  @ 0x8047 
    /*00008e78*/ BL          0x0000000000008E78          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008e7c*/ MOVT        R7, #40975                  @ 0xa00f 
    /*00008e80*/ B           VoSetLayerParam_x8e18
    VoSetLayerParam_x8e84:
    /*00008e84*/ MOVW        R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3444] 
    /*00008e88*/ MOVT        R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3444] 
    /*00008e8c*/ MOVW        R3, #4152                   @ 0x1038 
    /*00008e90*/ STR         R9, [SP, #4] 
    /*00008e94*/ STR         R3, [SP] 
    VoSetLayerParam_x8e98:
    /*00008e98*/ LDR         R3, [PC, #116]              @ 0x0000000000008f14 
    /*00008e9c*/ MOV         R1, #15 
    /*00008ea0*/ MOV         R0, #3 
    /*00008ea4*/ MOVW        R7, #32776                  @ 0x8008 
    /*00008ea8*/ BL          0x0000000000008EA8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008eac*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00008eb0*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00008eb4*/ MOVT        R7, #40975                  @ 0xa00f 
    /*00008eb8*/ BL          0x0000000000008EB8          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008ebc*/ B           VoSetLayerParam_x8e18
    VoSetLayerParam_x8ec0:
    /*00008ec0*/ MOVW        R3, #4129                   @ 0x1021 
    /*00008ec4*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33dc] 
    /*00008ec8*/ STR         R9, [SP, #4] 
    /*00008ecc*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33dc] 
    /*00008ed0*/ STR         R3, [SP] 
    /*00008ed4*/ B           VoSetLayerParam_x8e98
    VoSetLayerParam_x8ed8:
    /*00008ed8*/ MOVW        R3, #4121                   @ 0x1019 
    /*00008edc*/ MOV         R1, #15 
    /*00008ee0*/ STR         R3, [SP] 
    /*00008ee4*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x339c] 
    /*00008ee8*/ LDR         R3, [PC, #36]               @ 0x0000000000008f14 
    /*00008eec*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x339c] 
    /*00008ef0*/ STR         R9, [SP, #4] 
    /*00008ef4*/ MOV         R0, #3 
    /*00008ef8*/ BL          0x0000000000008EF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00008efc*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00008f00*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00008f04*/ MOVW        R7, #32879                  @ 0x806f 
    /*00008f08*/ BL          0x0000000000008F08          @ osal_up [R_ARM_CALL: +0x0] 
    /*00008f0c*/ MOVT        R7, #40975                  @ 0xa00f 
    /*00008f10*/ B           VoSetLayerParam_x8e18
    /*00008f14*/ @           <UNDEFINED> instruction: 0x000005b8 
FUNC_END VoSetLayerParam


FUNC_BEGIN VoGetLayerParam
    /*00008f18*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00008f1c*/ SUB         SP, SP, #8 
    /*00008f20*/ MOV         R8, R1 
    /*00008f24*/ MOV         R7, R0 
    /*00008f28*/ BL          0x0000000000008F28          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00008f2c*/ CMP         R0, #0 
    /*00008f30*/ BNE         VoGetLayerParam_x8fc4
    /*00008f34*/ MOV         R0, R8 
    /*00008f38*/ BL          0x0000000000008F38          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00008f3c*/ SUBS        R6, R0, #0 
    /*00008f40*/ BNE         VoGetLayerParam_x8fd0
    /*00008f44*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00008f48*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00008f4c*/ BL          0x0000000000008F4C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00008f50*/ CMP         R0, #0 
    /*00008f54*/ BNE         VoGetLayerParam_x9018
    /*00008f58*/ MOV         R0, R7 
    /*00008f5c*/ BL          0x0000000000008F5C          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*00008f60*/ CMN         R0, #1 
    /*00008f64*/ BEQ         VoGetLayerParam_x9024
    /*00008f68*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00008f6c*/ MOVW        R5, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00008f70*/ MUL         R4, R3, R7 
    /*00008f74*/ MOVT        R5, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00008f78*/ ADD         R3, R5, R4 
    /*00008f7c*/ LDR         R3, [R3, #180]              @ 0xb4 
    /*00008f80*/ CMP         R3, #1 
    /*00008f84*/ BEQ         VoGetLayerParam_x8fdc
    /*00008f88*/ BL          0x0000000000008F88          @ VOU_DRV_IsVirtDev [R_ARM_CALL: .text+0x17648] 
    /*00008f8c*/ CMP         R0, #0 
    /*00008f90*/ BNE         VoGetLayerParam_x8fdc
    /*00008f94*/ ADD         R1, R4, #12096              @ 0x2f40 
    /*00008f98*/ MOV         R0, R8 
    /*00008f9c*/ ADD         R1, R1, #40                 @ 0x28 
    /*00008fa0*/ MOV         R2, #24 
    /*00008fa4*/ ADD         R1, R5, R1 
    /*00008fa8*/ BL          0x0000000000008FA8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00008fac*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00008fb0*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00008fb4*/ BL          0x0000000000008FB4          @ osal_up [R_ARM_CALL: +0x0] 
    VoGetLayerParam_x8fb8:
    /*00008fb8*/ MOV         R0, R6 
    /*00008fbc*/ ADD         SP, SP, #8 
    /*00008fc0*/ POP         {R4, R5, R6, R7, R8, PC} 
    VoGetLayerParam_x8fc4:
    /*00008fc4*/ MOVW        R6, #32877                  @ 0x806d 
    /*00008fc8*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00008fcc*/ B           VoGetLayerParam_x8fb8
    VoGetLayerParam_x8fd0:
    /*00008fd0*/ MOVW        R6, #32774                  @ 0x8006 
    /*00008fd4*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00008fd8*/ B           VoGetLayerParam_x8fb8
    VoGetLayerParam_x8fdc:
    /*00008fdc*/ MOVW        R3, #4208                   @ 0x1070 
    /*00008fe0*/ MOV         R1, #15 
    /*00008fe4*/ STR         R3, [SP] 
    /*00008fe8*/ MOVW        R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x34ac] 
    /*00008fec*/ LDR         R3, [PC, #108]              @ 0x0000000000009060 
    /*00008ff0*/ MOVT        R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x34ac] 
    /*00008ff4*/ STR         R7, [SP, #4] 
    /*00008ff8*/ MOV         R0, #3 
    /*00008ffc*/ BL          0x0000000000008FFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009000*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00009004*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00009008*/ MOVW        R6, #32776                  @ 0x8008 
    /*0000900c*/ BL          0x000000000000900C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009010*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00009014*/ B           VoGetLayerParam_x8fb8
    VoGetLayerParam_x9018:
    /*00009018*/ MOV         R6, #65024                  @ 0xfe00 
    /*0000901c*/ MOVT        R6, #65535                  @ 0xffff 
    /*00009020*/ B           VoGetLayerParam_x8fb8
    VoGetLayerParam_x9024:
    /*00009024*/ MOVW        R3, #4201                   @ 0x1069 
    /*00009028*/ MOV         R1, #15 
    /*0000902c*/ STR         R3, [SP] 
    /*00009030*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b2c] 
    /*00009034*/ LDR         R3, [PC, #36]               @ 0x0000000000009060 
    /*00009038*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b2c] 
    /*0000903c*/ STR         R7, [SP, #4] 
    /*00009040*/ MOV         R0, #3 
    /*00009044*/ BL          0x0000000000009044          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009048*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000904c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00009050*/ MOVW        R6, #32879                  @ 0x806f 
    /*00009054*/ BL          0x0000000000009054          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009058*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000905c*/ B           VoGetLayerParam_x8fb8
    /*00009060*/ ANDEQ       R0, R0, R8, ASR #11 
FUNC_END VoGetLayerParam


FUNC_BEGIN VoSetVideoLayerDecompress
    /*00009064*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00009068*/ SUB         SP, SP, #12 
    /*0000906c*/ MOVW        R3, #4339                   @ 0x10f3 
    /*00009070*/ MOV         R1, #15 
    /*00009074*/ STR         R3, [SP] 
    /*00009078*/ MOVW        R2, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3524] 
    /*0000907c*/ LDR         R3, [PC, #24]               @ 0x000000000000909c 
    /*00009080*/ MOVT        R2, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3524] 
    /*00009084*/ MOV         R0, #3 
    /*00009088*/ BL          0x0000000000009088          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000908c*/ MOVW        R0, #32776                  @ 0x8008 
    /*00009090*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00009094*/ ADD         SP, SP, #12 
    /*00009098*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000909c*/ LDRDEQ      R0, [R0], -R8 
FUNC_END VoSetVideoLayerDecompress


FUNC_BEGIN VoGetVideoLayerDecompress
    /*000090a0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000090a4*/ SUB         SP, SP, #12 
    /*000090a8*/ MOVW        R3, #4359                   @ 0x1107 
    /*000090ac*/ MOV         R1, #15 
    /*000090b0*/ STR         R3, [SP] 
    /*000090b4*/ MOVW        R2, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3574] 
    /*000090b8*/ LDR         R3, [PC, #24]               @ 0x00000000000090d8 
    /*000090bc*/ MOVT        R2, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3574] 
    /*000090c0*/ MOV         R0, #3 
    /*000090c4*/ BL          0x00000000000090C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000090c8*/ MOVW        R0, #32776                  @ 0x8008 
    /*000090cc*/ MOVT        R0, #40975                  @ 0xa00f 
    /*000090d0*/ ADD         SP, SP, #12 
    /*000090d4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000090d8*/ STRDEQ      R0, [R0], -R4 
FUNC_END VoGetVideoLayerDecompress


FUNC_BEGIN VouCheckLayerCrop
    /*000090dc*/ PUSH        {R4, R5, LR} 
    /*000090e0*/ SUB         SP, SP, #36                 @ 0x24 
    /*000090e4*/ LDR         R3, [R1] 
    /*000090e8*/ CMP         R3, #1 
    /*000090ec*/ BHI         VouCheckLayerCrop_x923c
    /*000090f0*/ LDR         LR, [R1, #4] 
    /*000090f4*/ LDR         R4, [R1, #8] 
    /*000090f8*/ TST         LR, #1 
    /*000090fc*/ LDR         IP, [R1, #12] 
    /*00009100*/ LDR         R1, [R1, #16] 
    /*00009104*/ BNE         VouCheckLayerCrop_x9178
    /*00009108*/ TST         R4, #1 
    /*0000910c*/ BNE         VouCheckLayerCrop_x9178
    /*00009110*/ TST         IP, #1 
    /*00009114*/ BNE         VouCheckLayerCrop_x9178
    /*00009118*/ TST         R1, #1 
    /*0000911c*/ BNE         VouCheckLayerCrop_x9178
    /*00009120*/ CMP         R1, #31 
    /*00009124*/ CMPHI       IP, #31 
    /*00009128*/ BLS         VouCheckLayerCrop_x9200
    /*0000912c*/ CMP         LR, #0 
    /*00009130*/ MOVW        R3, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00009134*/ MOVT        R3, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00009138*/ BLT         VouCheckLayerCrop_x91b4
    /*0000913c*/ MOVW        R5, #12192                  @ 0x2fa0 
    /*00009140*/ ADD         R2, LR, IP 
    /*00009144*/ MLA         R3, R5, R0, R3 
    /*00009148*/ LSR         R0, R4, #31 
    /*0000914c*/ LDR         R5, [R3, #128]              @ 0x80 
    /*00009150*/ LDR         R3, [R3, #132]              @ 0x84 
    /*00009154*/ CMP         R2, R5 
    /*00009158*/ ORRHI       R0, R0, #1 
    /*0000915c*/ CMP         R0, #0 
    /*00009160*/ BNE         VouCheckLayerCrop_x91c4
    /*00009164*/ ADD         R2, R4, R1 
    /*00009168*/ CMP         R2, R3 
    /*0000916c*/ BHI         VouCheckLayerCrop_x91c4
    VouCheckLayerCrop_x9170:
    /*00009170*/ ADD         SP, SP, #36                 @ 0x24 
    /*00009174*/ POP         {R4, R5, PC} 
    VouCheckLayerCrop_x9178:
    /*00009178*/ STR         R1, [SP, #16] 
    /*0000917c*/ MOVW        R3, #4385                   @ 0x1121 
    /*00009180*/ STR         IP, [SP, #12] 
    /*00009184*/ MOV         R1, #15 
    /*00009188*/ STR         R3, [SP] 
    /*0000918c*/ MOVW        R2, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3614] 
    /*00009190*/ STR         R4, [SP, #8] 
    /*00009194*/ MOVT        R2, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3614] 
    /*00009198*/ STR         LR, [SP, #4] 
    /*0000919c*/ MOV         R0, #3 
    /*000091a0*/ LDR         R3, [PC, #192]              @ 0x0000000000009268 
    /*000091a4*/ BL          0x00000000000091A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000091a8*/ MVN         R0, #0 
    /*000091ac*/ ADD         SP, SP, #36                 @ 0x24 
    /*000091b0*/ POP         {R4, R5, PC} 
    VouCheckLayerCrop_x91b4:
    /*000091b4*/ MOVW        R2, #12192                  @ 0x2fa0 
    /*000091b8*/ MLA         R3, R2, R0, R3 
    /*000091bc*/ LDR         R5, [R3, #128]              @ 0x80 
    /*000091c0*/ LDR         R3, [R3, #132]              @ 0x84 
    VouCheckLayerCrop_x91c4:
    /*000091c4*/ STR         R3, [SP, #24] 
    /*000091c8*/ MOVW        R2, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x36d0] 
    /*000091cc*/ MOVW        R3, #4400                   @ 0x1130 
    /*000091d0*/ STR         R1, [SP, #16] 
    /*000091d4*/ STM         SP, {R3, LR} 
    /*000091d8*/ MOVT        R2, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0x36d0] 
    /*000091dc*/ STR         R5, [SP, #20] 
    /*000091e0*/ MOV         R1, #15 
    /*000091e4*/ STR         IP, [SP, #12] 
    /*000091e8*/ MOV         R0, #3 
    /*000091ec*/ STR         R4, [SP, #8] 
    /*000091f0*/ LDR         R3, [PC, #112]              @ 0x0000000000009268 
    /*000091f4*/ BL          0x00000000000091F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000091f8*/ MVN         R0, #0 
    /*000091fc*/ B           VouCheckLayerCrop_x9170
    VouCheckLayerCrop_x9200:
    /*00009200*/ MOV         R3, #32 
    /*00009204*/ STR         R1, [SP, #12] 
    /*00009208*/ STR         R3, [SP, #16] 
    /*0000920c*/ MOVW        R1, #4392                   @ 0x1128 
    /*00009210*/ STR         R3, [SP, #8] 
    /*00009214*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3660] 
    /*00009218*/ STR         R1, [SP] 
    /*0000921c*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3660] 
    /*00009220*/ STR         IP, [SP, #4] 
    /*00009224*/ MOV         R1, #15 
    /*00009228*/ LDR         R3, [PC, #56]               @ 0x0000000000009268 
    /*0000922c*/ MOV         R0, #3 
    /*00009230*/ BL          0x0000000000009230          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009234*/ MVN         R0, #0 
    /*00009238*/ B           VouCheckLayerCrop_x9170
    VouCheckLayerCrop_x923c:
    /*0000923c*/ STR         R3, [SP, #4] 
    /*00009240*/ MOVW        R2, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x35c4] 
    /*00009244*/ MOVW        R3, #4376                   @ 0x1118 
    /*00009248*/ MOVT        R2, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x35c4] 
    /*0000924c*/ STR         R3, [SP] 
    /*00009250*/ MOV         R1, #15 
    /*00009254*/ LDR         R3, [PC, #12]               @ 0x0000000000009268 
    /*00009258*/ MOV         R0, #3 
    /*0000925c*/ BL          0x000000000000925C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009260*/ MVN         R0, #0 
    /*00009264*/ B           VouCheckLayerCrop_x9170
    /*00009268*/ ANDEQ       R0, R0, R0, LSL R6 
FUNC_END VouCheckLayerCrop


FUNC_BEGIN VouSetVideoLayerCrop
    /*0000926c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00009270*/ SUB         SP, SP, #20 
    /*00009274*/ MOV         R4, R0 
    /*00009278*/ MOV         R6, R1 
    /*0000927c*/ BL          0x000000000000927C          @ VO_DRV_IsSupportCrop [R_ARM_CALL: .text+0x192dc] 
    /*00009280*/ CMP         R0, #0 
    /*00009284*/ BEQ         VouSetVideoLayerCrop_x93e0
    /*00009288*/ MOV         R0, R4 
    /*0000928c*/ BL          0x000000000000928C          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00009290*/ CMP         R0, #0 
    /*00009294*/ BNE         VouSetVideoLayerCrop_x9380
    /*00009298*/ MOV         R0, R6 
    /*0000929c*/ BL          0x000000000000929C          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*000092a0*/ CMP         R0, #0 
    /*000092a4*/ BNE         VouSetVideoLayerCrop_x938c
    /*000092a8*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*000092ac*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*000092b0*/ BL          0x00000000000092B0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000092b4*/ CMP         R0, #0 
    /*000092b8*/ BNE         VouSetVideoLayerCrop_x9398
    /*000092bc*/ MOV         R0, R4 
    /*000092c0*/ BL          0x00000000000092C0          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*000092c4*/ CMN         R0, #1 
    /*000092c8*/ BEQ         VouSetVideoLayerCrop_x9484
    /*000092cc*/ MOVW        R5, #12192                  @ 0x2fa0 
    /*000092d0*/ MOVW        R7, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*000092d4*/ MUL         R5, R5, R4 
    /*000092d8*/ MOVT        R7, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*000092dc*/ ADD         R8, R7, R5 
    /*000092e0*/ LDR         R3, [R8, #180]              @ 0xb4 
    /*000092e4*/ CMP         R3, #1 
    /*000092e8*/ BEQ         VouSetVideoLayerCrop_x940c
    /*000092ec*/ BL          0x00000000000092EC          @ VOU_DRV_IsVirtDev [R_ARM_CALL: .text+0x17648] 
    /*000092f0*/ CMP         R0, #0 
    /*000092f4*/ BNE         VouSetVideoLayerCrop_x940c
    /*000092f8*/ LDR         R3, [R8, #4] 
    /*000092fc*/ CMP         R3, #1 
    /*00009300*/ BNE         VouSetVideoLayerCrop_x93a4
    /*00009304*/ MOV         R1, R6 
    /*00009308*/ MOV         R0, R4 
    /*0000930c*/ BL          0x000000000000930C          @ VouCheckLayerCrop [R_ARM_CALL: .text+0x90dc] 
    /*00009310*/ SUBS        R8, R0, #0 
    /*00009314*/ BNE         VouSetVideoLayerCrop_x9448
    /*00009318*/ ADD         R9, SP, #16 
    /*0000931c*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00009320*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00009324*/ STR         R8, [R9, #-4]! 
    /*00009328*/ MOV         R1, R9 
    /*0000932c*/ BL          0x000000000000932C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009330*/ ADD         R0, R5, #156                @ 0x9c 
    /*00009334*/ LDR         R5, [SP, #12] 
    /*00009338*/ MOV         R2, #20 
    /*0000933c*/ MOV         R1, R6 
    /*00009340*/ ADD         R0, R7, R0 
    /*00009344*/ BL          0x0000000000009344          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00009348*/ MOV         R1, R9 
    /*0000934c*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00009350*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00009354*/ STR         R5, [SP, #12] 
    /*00009358*/ BL          0x0000000000009358          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000935c*/ MOV         R0, R4 
    /*00009360*/ MOV         R1, R6 
    /*00009364*/ BL          0x0000000000009364          @ VOU_DRV_SetVideoLayerCrop [R_ARM_CALL: .text+0x192e8] 
    /*00009368*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000936c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00009370*/ BL          0x0000000000009370          @ osal_up [R_ARM_CALL: +0x0] 
    VouSetVideoLayerCrop_x9374:
    /*00009374*/ MOV         R0, R8 
    /*00009378*/ ADD         SP, SP, #20 
    /*0000937c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouSetVideoLayerCrop_x9380:
    /*00009380*/ MOVW        R8, #32877                  @ 0x806d 
    /*00009384*/ MOVT        R8, #40975                  @ 0xa00f 
    /*00009388*/ B           VouSetVideoLayerCrop_x9374
    VouSetVideoLayerCrop_x938c:
    /*0000938c*/ MOVW        R8, #32774                  @ 0x8006 
    /*00009390*/ MOVT        R8, #40975                  @ 0xa00f 
    /*00009394*/ B           VouSetVideoLayerCrop_x9374
    VouSetVideoLayerCrop_x9398:
    /*00009398*/ MOV         R8, #65024                  @ 0xfe00 
    /*0000939c*/ MOVT        R8, #65535                  @ 0xffff 
    /*000093a0*/ B           VouSetVideoLayerCrop_x9374
    VouSetVideoLayerCrop_x93a4:
    /*000093a4*/ MOVW        R3, #4451                   @ 0x1163 
    /*000093a8*/ MOV         R1, #15 
    /*000093ac*/ STR         R3, [SP] 
    /*000093b0*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2a64] 
    /*000093b4*/ LDR         R3, [PC, #260]              @ 0x00000000000094c0 
    /*000093b8*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2a64] 
    /*000093bc*/ STR         R4, [SP, #4] 
    /*000093c0*/ MOV         R0, #3 
    /*000093c4*/ BL          0x00000000000093C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000093c8*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*000093cc*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*000093d0*/ MOVW        R8, #32839                  @ 0x8047 
    /*000093d4*/ BL          0x00000000000093D4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000093d8*/ MOVT        R8, #40975                  @ 0xa00f 
    /*000093dc*/ B           VouSetVideoLayerCrop_x9374
    VouSetVideoLayerCrop_x93e0:
    /*000093e0*/ MOVW        R3, #4421                   @ 0x1145 
    /*000093e4*/ MOVW        R2, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3720] 
    /*000093e8*/ STR         R3, [SP] 
    /*000093ec*/ MOVT        R2, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3720] 
    /*000093f0*/ LDR         R3, [PC, #200]              @ 0x00000000000094c0 
    /*000093f4*/ MOV         R1, #15 
    /*000093f8*/ MOV         R0, #3 
    /*000093fc*/ MOVW        R8, #32776                  @ 0x8008 
    /*00009400*/ BL          0x0000000000009400          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009404*/ MOVT        R8, #40975                  @ 0xa00f 
    /*00009408*/ B           VouSetVideoLayerCrop_x9374
    VouSetVideoLayerCrop_x940c:
    /*0000940c*/ MOVW        R3, #4444                   @ 0x115c 
    /*00009410*/ MOV         R1, #15 
    /*00009414*/ STR         R3, [SP] 
    /*00009418*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x33dc] 
    /*0000941c*/ LDR         R3, [PC, #156]              @ 0x00000000000094c0 
    /*00009420*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x33dc] 
    /*00009424*/ STR         R4, [SP, #4] 
    /*00009428*/ MOV         R0, #3 
    /*0000942c*/ BL          0x000000000000942C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009430*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00009434*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00009438*/ MOVW        R8, #32776                  @ 0x8008 
    /*0000943c*/ BL          0x000000000000943C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009440*/ MOVT        R8, #40975                  @ 0xa00f 
    /*00009444*/ B           VouSetVideoLayerCrop_x9374
    VouSetVideoLayerCrop_x9448:
    /*00009448*/ MOVW        R3, #4459                   @ 0x116b 
    /*0000944c*/ MOV         R1, #15 
    /*00009450*/ STR         R3, [SP] 
    /*00009454*/ MOVW        R2, #0                      @ .LC84 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x376c] 
    /*00009458*/ LDR         R3, [PC, #96]               @ 0x00000000000094c0 
    /*0000945c*/ MOVT        R2, #0                      @ .LC84 [R_ARM_MOVT_ABS: .rodata.str1.4+0x376c] 
    /*00009460*/ STR         R4, [SP, #4] 
    /*00009464*/ MOV         R0, #3 
    /*00009468*/ BL          0x0000000000009468          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000946c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00009470*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00009474*/ MOVW        R8, #32771                  @ 0x8003 
    /*00009478*/ BL          0x0000000000009478          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000947c*/ MOVT        R8, #40975                  @ 0xa00f 
    /*00009480*/ B           VouSetVideoLayerCrop_x9374
    VouSetVideoLayerCrop_x9484:
    /*00009484*/ MOVW        R3, #4436                   @ 0x1154 
    /*00009488*/ MOV         R1, #15 
    /*0000948c*/ STR         R3, [SP] 
    /*00009490*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x339c] 
    /*00009494*/ LDR         R3, [PC, #36]               @ 0x00000000000094c0 
    /*00009498*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x339c] 
    /*0000949c*/ STR         R4, [SP, #4] 
    /*000094a0*/ MOV         R0, #3 
    /*000094a4*/ BL          0x00000000000094A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000094a8*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*000094ac*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*000094b0*/ MOVW        R8, #32879                  @ 0x806f 
    /*000094b4*/ BL          0x00000000000094B4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000094b8*/ MOVT        R8, #40975                  @ 0xa00f 
    /*000094bc*/ B           VouSetVideoLayerCrop_x9374
    /*000094c0*/ ANDEQ       R0, R0, R4, LSR #12 
FUNC_END VouSetVideoLayerCrop


FUNC_BEGIN VouGetVideoLayerCrop
    /*000094c4*/ PUSH        {R4, R5, R6, LR} 
    /*000094c8*/ SUB         SP, SP, #8 
    /*000094cc*/ MOV         R4, R0 
    /*000094d0*/ MOV         R5, R1 
    /*000094d4*/ BL          0x00000000000094D4          @ VO_DRV_IsSupportCrop [R_ARM_CALL: .text+0x192dc] 
    /*000094d8*/ CMP         R0, #0 
    /*000094dc*/ BEQ         VouGetVideoLayerCrop_x9568
    /*000094e0*/ MOV         R0, R4 
    /*000094e4*/ BL          0x00000000000094E4          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*000094e8*/ CMP         R0, #0 
    /*000094ec*/ BNE         VouGetVideoLayerCrop_x9544
    /*000094f0*/ MOV         R0, R5 
    /*000094f4*/ BL          0x00000000000094F4          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*000094f8*/ SUBS        R6, R0, #0 
    /*000094fc*/ BNE         VouGetVideoLayerCrop_x9550
    /*00009500*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00009504*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00009508*/ BL          0x0000000000009508          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000950c*/ CMP         R0, #0 
    /*00009510*/ BNE         VouGetVideoLayerCrop_x955c
    /*00009514*/ LDR         R3, [PC, #120]              @ 0x0000000000009594 
    /*00009518*/ MOVW        R1, #12192                  @ 0x2fa0 
    /*0000951c*/ MOV         R0, R5 
    /*00009520*/ MOV         R2, #20 
    /*00009524*/ MLA         R1, R1, R4, R3 
    /*00009528*/ BL          0x0000000000009528          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000952c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00009530*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00009534*/ BL          0x0000000000009534          @ osal_up [R_ARM_CALL: +0x0] 
    VouGetVideoLayerCrop_x9538:
    /*00009538*/ MOV         R0, R6 
    /*0000953c*/ ADD         SP, SP, #8 
    /*00009540*/ POP         {R4, R5, R6, PC} 
    VouGetVideoLayerCrop_x9544:
    /*00009544*/ MOVW        R6, #32877                  @ 0x806d 
    /*00009548*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000954c*/ B           VouGetVideoLayerCrop_x9538
    VouGetVideoLayerCrop_x9550:
    /*00009550*/ MOVW        R6, #32774                  @ 0x8006 
    /*00009554*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00009558*/ B           VouGetVideoLayerCrop_x9538
    VouGetVideoLayerCrop_x955c:
    /*0000955c*/ MOV         R6, #65024                  @ 0xfe00 
    /*00009560*/ MOVT        R6, #65535                  @ 0xffff 
    /*00009564*/ B           VouGetVideoLayerCrop_x9538
    VouGetVideoLayerCrop_x9568:
    /*00009568*/ MOVW        R3, #4492                   @ 0x118c 
    /*0000956c*/ MOVW        R2, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3720] 
    /*00009570*/ STR         R3, [SP] 
    /*00009574*/ MOVT        R2, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3720] 
    /*00009578*/ LDR         R3, [PC, #24]               @ 0x0000000000009598 
    /*0000957c*/ MOV         R1, #15 
    /*00009580*/ MOV         R0, #3 
    /*00009584*/ MOVW        R6, #32776                  @ 0x8008 
    /*00009588*/ BL          0x0000000000009588          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000958c*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00009590*/ B           VouGetVideoLayerCrop_x9538
    /*00009594*/ MULEQ       R0, IP, R0                  @ g_astVoLayer [R_ARM_ABS32: .bss+0xf0] 
    /*00009598*/ ANDEQ       R0, R0, IP, LSR R6 
FUNC_END VouGetVideoLayerCrop


FUNC_BEGIN VouSetChnDispPos
    /*0000959c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000095a0*/ SUB         SP, SP, #12 
    /*000095a4*/ MOVW        R3, #4692                   @ 0x1254 
    /*000095a8*/ MOV         R1, #15 
    /*000095ac*/ STR         R3, [SP] 
    /*000095b0*/ MOVW        R2, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37a8] 
    /*000095b4*/ LDR         R3, [PC, #24]               @ 0x00000000000095d4 
    /*000095b8*/ MOVT        R2, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37a8] 
    /*000095bc*/ MOV         R0, #3 
    /*000095c0*/ BL          0x00000000000095C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000095c4*/ MOVW        R0, #32776                  @ 0x8008 
    /*000095c8*/ MOVT        R0, #40975                  @ 0xa00f 
    /*000095cc*/ ADD         SP, SP, #12 
    /*000095d0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000095d4*/ ANDEQ       R0, R0, R4, ASR R6 
FUNC_END VouSetChnDispPos


FUNC_BEGIN VouGetChnDispPos
    /*000095d8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000095dc*/ SUB         SP, SP, #12 
    /*000095e0*/ MOVW        R3, #4737                   @ 0x1281 
    /*000095e4*/ MOV         R1, #15 
    /*000095e8*/ STR         R3, [SP] 
    /*000095ec*/ MOVW        R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x37f0] 
    /*000095f0*/ LDR         R3, [PC, #24]               @ 0x0000000000009610 
    /*000095f4*/ MOVT        R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x37f0] 
    /*000095f8*/ MOV         R0, #3 
    /*000095fc*/ BL          0x00000000000095FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009600*/ MOVW        R0, #32776                  @ 0x8008 
    /*00009604*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00009608*/ ADD         SP, SP, #12 
    /*0000960c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00009610*/ ANDEQ       R0, R0, R8, ROR #12 
FUNC_END VouGetChnDispPos


FUNC_BEGIN VouEnableChnBatch
    /*00009614*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00009618*/ SUB         SP, SP, #36                 @ 0x24 
    /*0000961c*/ MOV         FP, R1 
    /*00009620*/ MOV         SL, R0 
    /*00009624*/ BL          0x0000000000009624          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00009628*/ CMP         R0, #0 
    /*0000962c*/ BNE         VouEnableChnBatch_x9858
    /*00009630*/ MOV         R1, FP 
    /*00009634*/ MOV         R0, SL 
    /*00009638*/ BL          0x0000000000009638          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000963c*/ CMP         R0, #0 
    /*00009640*/ BNE         VouEnableChnBatch_x9864
    /*00009644*/ MOVW        R5, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00009648*/ ADD         R6, FP, SL, LSL #2 
    /*0000964c*/ MOVT        R5, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00009650*/ LDR         R7, [R5, R6, LSL #2] 
    /*00009654*/ MOV         R0, R7 
    /*00009658*/ BL          0x0000000000009658          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000965c*/ SUBS        R4, R0, #0 
    /*00009660*/ BNE         VouEnableChnBatch_x9870
    /*00009664*/ MOV         R0, SL 
    /*00009668*/ BL          0x0000000000009668          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*0000966c*/ CMN         R0, #1 
    /*00009670*/ BEQ         VouEnableChnBatch_x9910
    /*00009674*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00009678*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000967c*/ MUL         R3, R3, SL 
    /*00009680*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00009684*/ ADD         R9, R2, R3 
    /*00009688*/ LDR         R1, [R9, #184]              @ 0xb8 
    /*0000968c*/ CMP         R1, #1 
    /*00009690*/ BEQ         VouEnableChnBatch_x984c
    /*00009694*/ LDR         R8, [R2, R3] 
    /*00009698*/ CMP         R8, #1 
    /*0000969c*/ BNE         VouEnableChnBatch_x98dc
    /*000096a0*/ LDR         R3, [R7, #4] 
    /*000096a4*/ CMP         R3, #1 
    /*000096a8*/ BEQ         VouEnableChnBatch_x987c
    /*000096ac*/ LDR         R3, [R7, #8] 
    /*000096b0*/ CMP         R3, #0 
    /*000096b4*/ BEQ         VouEnableChnBatch_x98a8
    /*000096b8*/ ADD         R3, SP, #32 
    /*000096bc*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*000096c0*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*000096c4*/ MVN         SL, #0 
    /*000096c8*/ STR         R4, [R3, #-4]! 
    /*000096cc*/ MOV         R1, R3 
    /*000096d0*/ STR         R3, [SP, #20] 
    /*000096d4*/ BL          0x00000000000096D4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000096d8*/ LDR         R5, [R5, R6, LSL #2] 
    /*000096dc*/ MOV         R3, #0 
    /*000096e0*/ LDR         R2, [SP, #28] 
    /*000096e4*/ MOVW        R0, #16960                  @ 0x4240 
    /*000096e8*/ ADD         R6, R5, #288                @ 0x120 
    /*000096ec*/ MOVT        R0, #15 
    /*000096f0*/ STR         R4, [R5, #48]               @ 0x30 
    /*000096f4*/ MVN         FP, #0 
    /*000096f8*/ STR         R4, [R5, #52]               @ 0x34 
    /*000096fc*/ STR         R8, [R5, #16] 
    /*00009700*/ STR         R4, [R5, #280]              @ 0x118 
    /*00009704*/ STR         R2, [SP, #16] 
    /*00009708*/ MOV         R2, #0 
    /*0000970c*/ STRD        R2, [R6] 
    /*00009710*/ STRD        R2, [R6, #8] 
    /*00009714*/ STRD        R2, [R6, #16] 
    /*00009718*/ STRD        R2, [R6, #64]               @ 0x40 
    /*0000971c*/ MVN         R2, #0 
    /*00009720*/ MVN         R3, #0 
    /*00009724*/ STRD        R2, [R6, #24] 
    /*00009728*/ STRD        R2, [R6, #32] 
    /*0000972c*/ LDR         R1, [R9, #32] 
    /*00009730*/ BL          0x0000000000009730          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00009734*/ ADD         R1, R5, #1488               @ 0x5d0 
    /*00009738*/ MOV         IP, #5 
    /*0000973c*/ ADD         R1, R1, #8 
    /*00009740*/ MOV         R3, #752                    @ 0x2f0 
    /*00009744*/ MOV         R2, #10 
    /*00009748*/ STR         R0, [R5, #328]              @ 0x148 
    /*0000974c*/ ADD         R0, R5, #8960               @ 0x2300 
    /*00009750*/ STRD        SL, [R6, #48]               @ 0x30 
    /*00009754*/ ADD         R0, R0, #56                 @ 0x38 
    /*00009758*/ MOV         SL, #0 
    /*0000975c*/ MOV         FP, #0 
    /*00009760*/ STR         IP, [R5, #188]              @ 0xbc 
    /*00009764*/ STR         R4, [R5, #344]              @ 0x158 
    /*00009768*/ STR         R4, [R5, #128]              @ 0x80 
    /*0000976c*/ STR         R4, [R5, #136]              @ 0x88 
    /*00009770*/ STR         R4, [R5, #140]              @ 0x8c 
    /*00009774*/ STR         R4, [R5, #144]              @ 0x90 
    /*00009778*/ STRD        SL, [R5, #152]              @ 0x98 
    /*0000977c*/ STRD        SL, [R5, #160]              @ 0xa0 
    /*00009780*/ STR         R4, [R5, #168]              @ 0xa8 
    /*00009784*/ STR         R4, [R5, #172]              @ 0xac 
    /*00009788*/ STR         R4, [R5, #176]              @ 0xb0 
    /*0000978c*/ STR         R4, [R5, #180]              @ 0xb4 
    /*00009790*/ STR         R4, [R5, #184]              @ 0xb8 
    /*00009794*/ STR         R4, [R5, #192]              @ 0xc0 
    /*00009798*/ STR         R4, [R5, #196]              @ 0xc4 
    /*0000979c*/ STRD        SL, [R5, #200]              @ 0xc8 
    /*000097a0*/ STR         R4, [R5, #216]              @ 0xd8 
    /*000097a4*/ STR         R4, [R5, #220]              @ 0xdc 
    /*000097a8*/ STR         R4, [R5, #224]              @ 0xe0 
    /*000097ac*/ STR         R4, [R5, #228]              @ 0xe4 
    /*000097b0*/ STR         R4, [R5, #232]              @ 0xe8 
    /*000097b4*/ BL          0x00000000000097B4          @ VouBufInit [R_ARM_CALL: .text+0x3ce0] 
    /*000097b8*/ ADD         R3, R5, #8192               @ 0x2000 
    /*000097bc*/ ADD         R2, R7, #8192               @ 0x2000 
    /*000097c0*/ STR         R4, [R5, #24] 
    /*000097c4*/ STR         R4, [R5, #20] 
    /*000097c8*/ MOV         R0, SL 
    /*000097cc*/ STR         R4, [R5, #44]               @ 0x2c 
    /*000097d0*/ MOV         R1, FP 
    /*000097d4*/ STR         R8, [R5, #56]               @ 0x38 
    /*000097d8*/ MVN         LR, #0 
    /*000097dc*/ STRD        R0, [R5, #32] 
    /*000097e0*/ MOV         IP, #2 
    /*000097e4*/ STR         LR, [R5, #1156]             @ 0x484 
    /*000097e8*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*000097ec*/ STR         R4, [R3, #1108]             @ 0x454 
    /*000097f0*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*000097f4*/ STR         R4, [R3, #1112]             @ 0x458 
    /*000097f8*/ STR         R4, [R3, #1116]             @ 0x45c 
    /*000097fc*/ STR         R4, [R3, #1124]             @ 0x464 
    /*00009800*/ STR         R4, [R3, #1120]             @ 0x460 
    /*00009804*/ STR         R4, [R3, #1320]             @ 0x528 
    /*00009808*/ STR         R4, [R3, #1324]             @ 0x52c 
    /*0000980c*/ STR         R8, [R3, #1292]             @ 0x50c 
    /*00009810*/ STR         R4, [R3, #1296]             @ 0x510 
    /*00009814*/ STR         R8, [R3, #1300]             @ 0x514 
    /*00009818*/ STR         R4, [R3, #1380]             @ 0x564 
    /*0000981c*/ STR         IP, [R3, #1316]             @ 0x524 
    /*00009820*/ LDR         R3, [R2, #1372]             @ 0x55c 
    /*00009824*/ LDR         R1, [SP, #20] 
    /*00009828*/ ADD         R3, R3, #1 
    /*0000982c*/ STR         R3, [R2, #1372]             @ 0x55c 
    /*00009830*/ STR         R8, [R7, #4] 
    /*00009834*/ LDR         R2, [SP, #16] 
    /*00009838*/ LDR         R3, [R9, #208]              @ 0xd0 
    /*0000983c*/ ADD         R3, R3, #1 
    /*00009840*/ STR         R3, [R9, #208]              @ 0xd0 
    /*00009844*/ STR         R2, [SP, #28] 
    /*00009848*/ BL          0x0000000000009848          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VouEnableChnBatch_x984c:
    /*0000984c*/ MOV         R0, R4 
    /*00009850*/ ADD         SP, SP, #36                 @ 0x24 
    /*00009854*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouEnableChnBatch_x9858:
    /*00009858*/ MOVW        R4, #32877                  @ 0x806d 
    /*0000985c*/ MOVT        R4, #40975                  @ 0xa00f 
    /*00009860*/ B           VouEnableChnBatch_x984c
    VouEnableChnBatch_x9864:
    /*00009864*/ MOVW        R4, #32770                  @ 0x8002 
    /*00009868*/ MOVT        R4, #40975                  @ 0xa00f 
    /*0000986c*/ B           VouEnableChnBatch_x984c
    VouEnableChnBatch_x9870:
    /*00009870*/ MOVW        R4, #32774                  @ 0x8006 
    /*00009874*/ MOVT        R4, #40975                  @ 0xa00f 
    /*00009878*/ B           VouEnableChnBatch_x984c
    VouEnableChnBatch_x987c:
    /*0000987c*/ MOVW        R3, #4888                   @ 0x1318 
    /*00009880*/ STR         FP, [SP, #8] 
    /*00009884*/ STR         R3, [SP] 
    /*00009888*/ MOVW        R2, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x38e0] 
    /*0000988c*/ STR         SL, [SP, #4] 
    /*00009890*/ MOVT        R2, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x38e0] 
    /*00009894*/ LDR         R3, [PC, #164]              @ 0x0000000000009940 
    /*00009898*/ MOV         R1, #15 
    /*0000989c*/ MOV         R0, #4 
    /*000098a0*/ BL          0x00000000000098A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000098a4*/ B           VouEnableChnBatch_x984c
    VouEnableChnBatch_x98a8:
    /*000098a8*/ MOVW        R3, #4894                   @ 0x131e 
    /*000098ac*/ STR         FP, [SP, #8] 
    /*000098b0*/ STR         R3, [SP] 
    /*000098b4*/ MOVW        R2, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x330c] 
    /*000098b8*/ STR         SL, [SP, #4] 
    /*000098bc*/ MOVT        R2, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0x330c] 
    /*000098c0*/ LDR         R3, [PC, #120]              @ 0x0000000000009940 
    /*000098c4*/ MOV         R1, #15 
    /*000098c8*/ MOV         R0, #3 
    /*000098cc*/ MOVW        R4, #32842                  @ 0x804a 
    /*000098d0*/ BL          0x00000000000098D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000098d4*/ MOVT        R4, #40975                  @ 0xa00f 
    /*000098d8*/ B           VouEnableChnBatch_x984c
    VouEnableChnBatch_x98dc:
    /*000098dc*/ MOVW        R3, #4882                   @ 0x1312 
    /*000098e0*/ STR         FP, [SP, #8] 
    /*000098e4*/ STR         R3, [SP] 
    /*000098e8*/ MOVW        R2, #0                      @ .LC88 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3894] 
    /*000098ec*/ STR         SL, [SP, #4] 
    /*000098f0*/ MOVT        R2, #0                      @ .LC88 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3894] 
    /*000098f4*/ LDR         R3, [PC, #68]               @ 0x0000000000009940 
    /*000098f8*/ MOV         R1, #15 
    /*000098fc*/ MOV         R0, #3 
    /*00009900*/ MOVW        R4, #32837                  @ 0x8045 
    /*00009904*/ BL          0x0000000000009904          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009908*/ MOVT        R4, #40975                  @ 0xa00f 
    /*0000990c*/ B           VouEnableChnBatch_x984c
    VouEnableChnBatch_x9910:
    /*00009910*/ MOVW        R3, #4860                   @ 0x12fc 
    /*00009914*/ STR         SL, [SP, #4] 
    /*00009918*/ STR         R3, [SP] 
    /*0000991c*/ MOVW        R2, #0                      @ .LC87 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3838] 
    /*00009920*/ LDR         R3, [PC, #24]               @ 0x0000000000009940 
    /*00009924*/ MOVT        R2, #0                      @ .LC87 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3838] 
    /*00009928*/ MOV         R1, #15 
    /*0000992c*/ MOV         R0, #3 
    /*00009930*/ MOVW        R4, #32776                  @ 0x8008 
    /*00009934*/ BL          0x0000000000009934          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009938*/ MOVT        R4, #40975                  @ 0xa00f 
    /*0000993c*/ B           VouEnableChnBatch_x984c
    /*00009940*/ ANDEQ       R0, R0, IP, ROR R6 
FUNC_END VouEnableChnBatch


FUNC_BEGIN VouEnableChn
    /*00009944*/ PUSH        {R4, R5, R6, LR} 
    /*00009948*/ MOV         R5, R1 
    /*0000994c*/ MOV         R4, R0 
    /*00009950*/ BL          0x0000000000009950          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00009954*/ CMP         R0, #0 
    /*00009958*/ BNE         VouEnableChn_x99e0
    /*0000995c*/ MOV         R1, R5 
    /*00009960*/ MOV         R0, R4 
    /*00009964*/ BL          0x0000000000009964          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*00009968*/ CMP         R0, #0 
    /*0000996c*/ BNE         VouEnableChn_x99ec
    /*00009970*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*00009974*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*00009978*/ BL          0x0000000000009978          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000997c*/ CMP         R0, #0 
    /*00009980*/ BNE         VouEnableChn_x99f8
    /*00009984*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00009988*/ ADD         R2, R5, R4, LSL #2 
    /*0000998c*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00009990*/ LDR         R3, [R3, R2, LSL #2] 
    /*00009994*/ CMP         R3, #0 
    /*00009998*/ BEQ         VouEnableChn_x9a04
    VouEnableChn_x999c:
    /*0000999c*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*000099a0*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*000099a4*/ BL          0x00000000000099A4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000099a8*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*000099ac*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*000099b0*/ BL          0x00000000000099B0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000099b4*/ CMP         R0, #0 
    /*000099b8*/ BNE         VouEnableChn_x99f8
    /*000099bc*/ MOV         R1, R5 
    /*000099c0*/ MOV         R0, R4 
    /*000099c4*/ BL          0x00000000000099C4          @ VouEnableChnBatch [R_ARM_CALL: .text+0x9614] 
    /*000099c8*/ MOV         R6, R0 
    /*000099cc*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*000099d0*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*000099d4*/ BL          0x00000000000099D4          @ osal_up [R_ARM_CALL: +0x0] 
    VouEnableChn_x99d8:
    /*000099d8*/ MOV         R0, R6 
    /*000099dc*/ POP         {R4, R5, R6, PC} 
    VouEnableChn_x99e0:
    /*000099e0*/ MOVW        R6, #32877                  @ 0x806d 
    /*000099e4*/ MOVT        R6, #40975                  @ 0xa00f 
    /*000099e8*/ B           VouEnableChn_x99d8
    VouEnableChn_x99ec:
    /*000099ec*/ MOVW        R6, #32770                  @ 0x8002 
    /*000099f0*/ MOVT        R6, #40975                  @ 0xa00f 
    /*000099f4*/ B           VouEnableChn_x99d8
    VouEnableChn_x99f8:
    /*000099f8*/ MOV         R6, #65024                  @ 0xfe00 
    /*000099fc*/ MOVT        R6, #65535                  @ 0xffff 
    /*00009a00*/ B           VouEnableChn_x99d8
    VouEnableChn_x9a04:
    /*00009a04*/ MOV         R1, R5 
    /*00009a08*/ MOV         R0, R4 
    /*00009a0c*/ BL          0x0000000000005468 
    /*00009a10*/ SUBS        R6, R0, #0 
    /*00009a14*/ BEQ         VouEnableChn_x999c
    /*00009a18*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*00009a1c*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*00009a20*/ BL          0x0000000000009A20          @ osal_up [R_ARM_CALL: +0x0] 
    /*00009a24*/ MOV         R0, R6 
    /*00009a28*/ POP         {R4, R5, R6, PC} 
FUNC_END VouEnableChn


FUNC_BEGIN VouDisableChnBatch
    /*00009a2c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00009a30*/ SUB         SP, SP, #76                 @ 0x4c 
    /*00009a34*/ MOV         R3, #0 
    /*00009a38*/ MOV         FP, R1 
    /*00009a3c*/ MOV         R9, R2 
    /*00009a40*/ MOV         R7, R0 
    /*00009a44*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00009a48*/ STR         R3, [SP, #56]               @ 0x38 
    /*00009a4c*/ STR         R3, [SP, #64]               @ 0x40 
    /*00009a50*/ STR         R3, [SP, #68]               @ 0x44 
    /*00009a54*/ BL          0x0000000000009A54          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00009a58*/ CMP         R0, #0 
    /*00009a5c*/ BNE         VouDisableChnBatch_x9ff4
    /*00009a60*/ MOV         R1, FP 
    /*00009a64*/ MOV         R0, R7 
    /*00009a68*/ BL          0x0000000000009A68          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*00009a6c*/ CMP         R0, #0 
    /*00009a70*/ BNE         VouDisableChnBatch_xa004
    /*00009a74*/ LSL         R3, R7, #2 
    /*00009a78*/ MOVW        R6, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00009a7c*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00009a80*/ MOVT        R6, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00009a84*/ ADD         R3, R3, FP 
    /*00009a88*/ LDR         R3, [R6, R3, LSL #2] 
    /*00009a8c*/ MOV         R0, R3 
    /*00009a90*/ STR         R3, [SP, #28] 
    /*00009a94*/ BL          0x0000000000009A94          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00009a98*/ SUBS        R3, R0, #0 
    /*00009a9c*/ STR         R3, [SP, #36]               @ 0x24 
    /*00009aa0*/ BNE         VouDisableChnBatch_xa014
    /*00009aa4*/ MOV         R0, R7 
    /*00009aa8*/ BL          0x0000000000009AA8          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*00009aac*/ CMN         R0, #1 
    /*00009ab0*/ BEQ         VouDisableChnBatch_x9fcc
    VouDisableChnBatch_x9ab4:
    /*00009ab4*/ MOVW        R3, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00009ab8*/ MOVT        R3, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00009abc*/ MOVW        R4, #12192                  @ 0x2fa0 
    /*00009ac0*/ STR         R3, [SP, #40]               @ 0x28 
    /*00009ac4*/ MLA         R4, R4, R7, R3 
    /*00009ac8*/ LDR         R3, [R4, #184]              @ 0xb8 
    /*00009acc*/ CMP         R3, #1 
    /*00009ad0*/ BEQ         VouDisableChnBatch_x9d14
    /*00009ad4*/ LDR         R3, [SP, #28] 
    /*00009ad8*/ LDR         R3, [R3, #4] 
    /*00009adc*/ CMP         R3, #0 
    /*00009ae0*/ BEQ         VouDisableChnBatch_x9d20
    /*00009ae4*/ LDR         R3, [SP, #28] 
    /*00009ae8*/ ADD         R8, SP, #72                 @ 0x48 
    /*00009aec*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00009af0*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00009af4*/ ADD         R3, R3, #8192               @ 0x2000 
    /*00009af8*/ STR         R3, [SP, #32] 
    /*00009afc*/ MOV         R5, R3 
    /*00009b00*/ MOV         R3, #0 
    /*00009b04*/ STR         R3, [R8, #-20]!             @ 0xffffffec 
    /*00009b08*/ MOV         R1, R8 
    /*00009b0c*/ BL          0x0000000000009B0C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009b10*/ MOV         R3, #1 
    /*00009b14*/ LDR         R2, [SP, #52]               @ 0x34 
    /*00009b18*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00009b1c*/ STR         R3, [R5, #1320]             @ 0x528 
    /*00009b20*/ STR         R3, [R5, #1324]             @ 0x52c 
    /*00009b24*/ LDR         R3, [R4, #192]              @ 0xc0 
    /*00009b28*/ CMP         R3, #0 
    /*00009b2c*/ BEQ         VouDisableChnBatch_x9d54
    /*00009b30*/ MOV         R1, R8 
    /*00009b34*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00009b38*/ STR         R2, [SP, #52]               @ 0x34 
    /*00009b3c*/ BL          0x0000000000009B3C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009b40*/ LDR         R3, [R9] 
    /*00009b44*/ MOVW        R0, #0                      @ g_VouListLock [R_ARM_MOVW_ABS_NC: .bss+0x30a0] 
    /*00009b48*/ MOV         R1, R8 
    /*00009b4c*/ MOVT        R0, #0                      @ g_VouListLock [R_ARM_MOVT_ABS: .bss+0x30a0] 
    /*00009b50*/ LDR         R4, [SP, #52]               @ 0x34 
    /*00009b54*/ STR         R3, [SP, #52]               @ 0x34 
    /*00009b58*/ BL          0x0000000000009B58          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009b5c*/ LDR         R3, [SP, #52]               @ 0x34 
    /*00009b60*/ STR         R4, [SP, #20] 
    /*00009b64*/ STR         R3, [R9] 
    VouDisableChnBatch_x9b68:
    /*00009b68*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00009b6c*/ MOVW        SL, #12192                  @ 0x2fa0 
    /*00009b70*/ MLA         SL, SL, R7, R3 
    VouDisableChnBatch_x9b74:
    /*00009b74*/ LDR         R3, [SP, #28] 
    /*00009b78*/ MOVW        R4, #0                      @ VO_WaitChnQryCallBack [R_ARM_MOVW_ABS_NC: .text+0x4b94] 
    /*00009b7c*/ MOV         R0, R7 
    /*00009b80*/ ADD         R5, R3, #9472               @ 0x2500 
    /*00009b84*/ MOVT        R4, #0                      @ VO_WaitChnQryCallBack [R_ARM_MOVT_ABS: .text+0x4b94] 
    /*00009b88*/ ADD         R5, R5, #48                 @ 0x30 
    /*00009b8c*/ MOV         R3, FP 
    /*00009b90*/ MOV         LR, #4000                   @ 0xfa0 
    /*00009b94*/ STR         R7, [SP, #56]               @ 0x38 
    /*00009b98*/ STR         FP, [SP, #60]               @ 0x3c 
    /*00009b9c*/ STR         R7, [SP, #24] 
    /*00009ba0*/ B           VouDisableChnBatch_x9bac
    VouDisableChnBatch_x9ba4:
    /*00009ba4*/ LDR         R0, [SP, #56]               @ 0x38 
    /*00009ba8*/ LDR         R3, [SP, #60]               @ 0x3c 
    VouDisableChnBatch_x9bac:
    /*00009bac*/ ADD         R0, R3, R0, LSL #2 
    /*00009bb0*/ ADD         R2, SP, #56                 @ 0x38 
    /*00009bb4*/ MOV         R3, LR 
    /*00009bb8*/ MOV         R1, R4 
    /*00009bbc*/ LDR         IP, [R6, R0, LSL #2] 
    /*00009bc0*/ MOV         R0, R5 
    /*00009bc4*/ ADD         IP, IP, #8192               @ 0x2000 
    /*00009bc8*/ LDR         R7, [IP, #1316]             @ 0x524 
    /*00009bcc*/ CMP         R7, #0 
    /*00009bd0*/ BEQ         VouDisableChnBatch_x9bf8
    /*00009bd4*/ LDR         R7, [IP, #1376]             @ 0x560 
    /*00009bd8*/ CMP         R7, #0 
    /*00009bdc*/ BNE         VouDisableChnBatch_x9bf8
    /*00009be0*/ LDR         R7, [IP, #1380]             @ 0x564 
    /*00009be4*/ CMP         R7, #0 
    /*00009be8*/ BNE         VouDisableChnBatch_x9bf8
    /*00009bec*/ LDR         IP, [IP, #1292]             @ 0x50c 
    /*00009bf0*/ CMP         IP, #1 
    /*00009bf4*/ BEQ         VouDisableChnBatch_x9f54
    VouDisableChnBatch_x9bf8:
    /*00009bf8*/ BL          0x0000000000009BF8          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*00009bfc*/ ADD         R3, R0, #512                @ 0x200 
    /*00009c00*/ MOV         LR, R0 
    /*00009c04*/ BICS        R3, R3, #512                @ 0x200 
    /*00009c08*/ BNE         VouDisableChnBatch_x9ba4
    /*00009c0c*/ CMP         LR, #0 
    /*00009c10*/ LDR         R7, [SP, #24] 
    /*00009c14*/ BLT         VouDisableChnBatch_x9f6c
    VouDisableChnBatch_x9c18:
    /*00009c18*/ BEQ         VouDisableChnBatch_x9f84
    /*00009c1c*/ LDR         R3, [SL, #192]              @ 0xc0 
    /*00009c20*/ CMP         R3, #0 
    /*00009c24*/ BNE         VouDisableChnBatch_x9d70
    /*00009c28*/ LDR         R3, [SP, #20] 
    /*00009c2c*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00009c30*/ MOV         R1, R8 
    /*00009c34*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00009c38*/ STR         R3, [SP, #52]               @ 0x34 
    /*00009c3c*/ BL          0x0000000000009C3C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009c40*/ LDR         R3, [SP, #32] 
    /*00009c44*/ LDR         R4, [SP, #52]               @ 0x34 
    /*00009c48*/ LDR         R3, [R3, #1316]             @ 0x524 
    /*00009c4c*/ CMP         R3, #0 
    /*00009c50*/ BNE         VouDisableChnBatch_x9dbc
    VouDisableChnBatch_x9c54:
    /*00009c54*/ LDR         R3, [SL, #192]              @ 0xc0 
    /*00009c58*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00009c5c*/ CMP         R3, #0 
    /*00009c60*/ BNE         VouDisableChnBatch_x9f18
    /*00009c64*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00009c68*/ MOV         R1, R8 
    /*00009c6c*/ STR         R4, [SP, #52]               @ 0x34 
    /*00009c70*/ BL          0x0000000000009C70          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009c74*/ LDR         R3, [SP, #52]               @ 0x34 
    /*00009c78*/ STR         R3, [SP, #20] 
    /*00009c7c*/ B           VouDisableChnBatch_x9b74
    VouDisableChnBatch_x9c80:
    /*00009c80*/ LDR         R0, [R9, #264]              @ 0x108 
    /*00009c84*/ CMP         R0, #0 
    /*00009c88*/ BEQ         VouDisableChnBatch_x9cb0
    /*00009c8c*/ BL          0x0000000000009C8C          @ VouBufClearDispNode [R_ARM_CALL: .text+0x4848] 
    /*00009c90*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00009c94*/ ADD         R0, R5, #11840              @ 0x2e40 
    /*00009c98*/ LDR         R1, [R9, #264]              @ 0x108 
    /*00009c9c*/ ADD         R0, R0, #20 
    /*00009ca0*/ ADD         R0, R3, R0 
    /*00009ca4*/ BL          0x0000000000009CA4          @ VouBufPutFree [R_ARM_CALL: .text+0x3fd0] 
    /*00009ca8*/ MOV         R3, #0 
    /*00009cac*/ STR         R3, [R9, #264]              @ 0x108 
    VouDisableChnBatch_x9cb0:
    /*00009cb0*/ MOVW        R0, #12192                  @ 0x2fa0 
    /*00009cb4*/ LDR         SL, [SP, #40]               @ 0x28 
    /*00009cb8*/ MUL         R9, R0, R7 
    /*00009cbc*/ ADD         R5, SL, R9 
    /*00009cc0*/ LDR         R0, [R5, #272]              @ 0x110 
    /*00009cc4*/ CMP         R0, #0 
    /*00009cc8*/ BEQ         VouDisableChnBatch_x9cec
    /*00009ccc*/ BL          0x0000000000009CCC          @ VouBufClearDispNode [R_ARM_CALL: .text+0x4848] 
    /*00009cd0*/ ADD         R0, R9, #11840              @ 0x2e40 
    /*00009cd4*/ ADD         R0, R0, #20 
    /*00009cd8*/ LDR         R1, [R5, #272]              @ 0x110 
    /*00009cdc*/ ADD         R0, SL, R0 
    /*00009ce0*/ BL          0x0000000000009CE0          @ VouBufPutFree [R_ARM_CALL: .text+0x3fd0] 
    /*00009ce4*/ MOV         R3, #0 
    /*00009ce8*/ STR         R3, [R5, #272]              @ 0x110 
    VouDisableChnBatch_x9cec:
    /*00009cec*/ MOV         R0, R7 
    /*00009cf0*/ BL          0x0000000000009CF0          @ VouBufFreeDispBusyList [R_ARM_CALL: .text+0x49b0] 
    /*00009cf4*/ SUBS        R3, R0, #0 
    /*00009cf8*/ BEQ         VouDisableChnBatch_x9e34
    /*00009cfc*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00009d00*/ MOV         R1, R8 
    /*00009d04*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00009d08*/ STR         R4, [SP, #52]               @ 0x34 
    /*00009d0c*/ STR         R3, [SP, #36]               @ 0x24 
    /*00009d10*/ BL          0x0000000000009D10          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VouDisableChnBatch_x9d14:
    /*00009d14*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00009d18*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00009d1c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouDisableChnBatch_x9d20:
    /*00009d20*/ STR         FP, [SP, #8] 
    /*00009d24*/ MOVW        R3, #5080                   @ 0x13d8 
    /*00009d28*/ STR         R7, [SP, #4] 
    /*00009d2c*/ MOV         R1, #15 
    /*00009d30*/ STR         R3, [SP] 
    /*00009d34*/ MOVW        R2, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x391c] 
    /*00009d38*/ LDR         R3, [PC, #912]              @ 0x000000000000a0d0 
    /*00009d3c*/ MOVT        R2, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0x391c] 
    /*00009d40*/ MOV         R0, #4 
    /*00009d44*/ BL          0x0000000000009D44          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009d48*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00009d4c*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00009d50*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouDisableChnBatch_x9d54:
    /*00009d54*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00009d58*/ MOV         R1, R8 
    /*00009d5c*/ STR         R2, [SP, #52]               @ 0x34 
    /*00009d60*/ BL          0x0000000000009D60          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009d64*/ LDR         R3, [SP, #52]               @ 0x34 
    /*00009d68*/ STR         R3, [SP, #20] 
    /*00009d6c*/ B           VouDisableChnBatch_x9b68
    VouDisableChnBatch_x9d70:
    /*00009d70*/ LDR         R3, [R9] 
    /*00009d74*/ MOV         R1, R8 
    /*00009d78*/ MOVW        R0, #0                      @ g_VouListLock [R_ARM_MOVW_ABS_NC: .bss+0x30a0] 
    /*00009d7c*/ MOVT        R0, #0                      @ g_VouListLock [R_ARM_MOVT_ABS: .bss+0x30a0] 
    /*00009d80*/ STR         R3, [SP, #52]               @ 0x34 
    /*00009d84*/ BL          0x0000000000009D84          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009d88*/ LDR         R3, [SP, #52]               @ 0x34 
    /*00009d8c*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00009d90*/ LDR         R2, [SP, #20] 
    /*00009d94*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00009d98*/ MOV         R1, R8 
    /*00009d9c*/ STR         R3, [R9] 
    /*00009da0*/ STR         R2, [SP, #52]               @ 0x34 
    /*00009da4*/ BL          0x0000000000009DA4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00009da8*/ LDR         R3, [SP, #32] 
    /*00009dac*/ LDR         R4, [SP, #52]               @ 0x34 
    /*00009db0*/ LDR         R3, [R3, #1316]             @ 0x524 
    /*00009db4*/ CMP         R3, #0 
    /*00009db8*/ BEQ         VouDisableChnBatch_x9c54
    VouDisableChnBatch_x9dbc:
    /*00009dbc*/ LDR         R2, [SP, #32] 
    /*00009dc0*/ MOV         R3, #0 
    /*00009dc4*/ MOV         R1, FP 
    /*00009dc8*/ MOV         R0, R7 
    /*00009dcc*/ STR         R3, [R2, #1320]             @ 0x528 
    /*00009dd0*/ BL          0x0000000000009DD0          @ VouBufFreeChnBusyList [R_ARM_CALL: .text+0x48f8] 
    /*00009dd4*/ LDR         R3, [SP, #28] 
    /*00009dd8*/ LDR         R3, [R3, #24] 
    /*00009ddc*/ CMP         R3, #0 
    /*00009de0*/ BEQ         VouDisableChnBatch_x9e18
    /*00009de4*/ LDR         R0, [R3] 
    /*00009de8*/ CMP         R0, #0 
    /*00009dec*/ BEQ         VouDisableChnBatch_xa0a4
    VouDisableChnBatch_x9df0:
    /*00009df0*/ BL          0x0000000000009DF0          @ VouBufSubBlkVb [R_ARM_CALL: .text+0x4324] 
    /*00009df4*/ LDR         R5, [SP, #28] 
    /*00009df8*/ LDR         R0, [R5, #24] 
    /*00009dfc*/ BL          0x0000000000009DFC          @ VouBufResetNode [R_ARM_CALL: .text+0x3d70] 
    /*00009e00*/ ADD         R0, R5, #8960               @ 0x2300 
    /*00009e04*/ ADD         R0, R0, #56                 @ 0x38 
    /*00009e08*/ LDR         R1, [R5, #24] 
    /*00009e0c*/ BL          0x0000000000009E0C          @ VouBufPutFree [R_ARM_CALL: .text+0x3fd0] 
    /*00009e10*/ MOV         R3, #0 
    /*00009e14*/ STR         R3, [R5, #24] 
    VouDisableChnBatch_x9e18:
    /*00009e18*/ MOVW        R5, #12192                  @ 0x2fa0 
    /*00009e1c*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00009e20*/ MUL         R5, R5, R7 
    /*00009e24*/ ADD         R9, R3, R5 
    /*00009e28*/ LDR         R3, [R9, #208]              @ 0xd0 
    /*00009e2c*/ CMP         R3, #1 
    /*00009e30*/ BEQ         VouDisableChnBatch_x9c80
    VouDisableChnBatch_x9e34:
    /*00009e34*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*00009e38*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00009e3c*/ MUL         R3, R3, R7 
    /*00009e40*/ ADD         R2, R2, FP 
    /*00009e44*/ MOV         R1, #0 
    /*00009e48*/ MOV         R0, #0 
    /*00009e4c*/ LDR         R2, [R6, R2, LSL #2] 
    /*00009e50*/ ADD         IP, R2, #304                @ 0x130 
    /*00009e54*/ STR         R1, [R2, #344]              @ 0x158 
    /*00009e58*/ MOV         R1, #0 
    /*00009e5c*/ LDR         R2, [SP, #40]               @ 0x28 
    /*00009e60*/ STRD        R0, [IP] 
    /*00009e64*/ ADD         R2, R2, R3 
    /*00009e68*/ LDR         R2, [R2, #28] 
    /*00009e6c*/ CMP         R2, #0 
    /*00009e70*/ BEQ         VouDisableChnBatch_x9ea8
    /*00009e74*/ ADD         R0, R2, #2944               @ 0xb80 
    /*00009e78*/ MOVW        R2, #3048                   @ 0xbe8 
    /*00009e7c*/ ADD         R0, R0, #5 
    /*00009e80*/ ADD         R3, R3, #11776              @ 0x2e00 
    /*00009e84*/ ADD         R3, R3, #20 
    /*00009e88*/ MOV         R1, #1 
    /*00009e8c*/ MLA         R2, R2, R7, R0 
    /*00009e90*/ LDR         R0, [SP, #40]               @ 0x28 
    /*00009e94*/ ADD         R3, R0, R3 
    /*00009e98*/ ADD         R2, R0, R2, LSL #2 
    VouDisableChnBatch_x9e9c:
    /*00009e9c*/ STR         R1, [R3, #4]! 
    /*00009ea0*/ CMP         R2, R3 
    /*00009ea4*/ BNE         VouDisableChnBatch_x9e9c
    VouDisableChnBatch_x9ea8:
    /*00009ea8*/ MOV         R0, R7 
    /*00009eac*/ BL          0x0000000000009EAC          @ VOU_DRV_IsLayerSizeLimit [R_ARM_CALL: .text+0x19264] 
    /*00009eb0*/ CMP         R0, #1 
    /*00009eb4*/ BEQ         VouDisableChnBatch_xa024
    VouDisableChnBatch_x9eb8:
    /*00009eb8*/ LDR         R3, [SP, #28] 
    /*00009ebc*/ LDR         R3, [R3, #48]               @ 0x30 
    /*00009ec0*/ CMP         R3, #1 
    /*00009ec4*/ BEQ         VouDisableChnBatch_xa06c
    VouDisableChnBatch_x9ec8:
    /*00009ec8*/ LDR         R1, [SP, #40]               @ 0x28 
    /*00009ecc*/ MOVW        R2, #12192                  @ 0x2fa0 
    /*00009ed0*/ MOV         R3, #0 
    /*00009ed4*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00009ed8*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00009edc*/ MLA         R7, R2, R7, R1 
    /*00009ee0*/ LDR         R2, [SP, #28] 
    /*00009ee4*/ MOV         R1, R8 
    /*00009ee8*/ STR         R3, [R2, #4] 
    /*00009eec*/ LDR         R2, [SP, #32] 
    /*00009ef0*/ STR         R3, [R2, #1108]             @ 0x454 
    /*00009ef4*/ STR         R3, [R2, #1324]             @ 0x52c 
    /*00009ef8*/ LDR         R3, [R7, #208]              @ 0xd0 
    /*00009efc*/ STR         R4, [SP, #52]               @ 0x34 
    /*00009f00*/ SUB         R3, R3, #1 
    /*00009f04*/ STR         R3, [R7, #208]              @ 0xd0 
    /*00009f08*/ BL          0x0000000000009F08          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009f0c*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00009f10*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00009f14*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouDisableChnBatch_x9f18:
    /*00009f18*/ MOV         R1, R8 
    /*00009f1c*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00009f20*/ STR         R4, [SP, #52]               @ 0x34 
    /*00009f24*/ BL          0x0000000000009F24          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009f28*/ LDR         R3, [R9] 
    /*00009f2c*/ MOVW        R0, #0                      @ g_VouListLock [R_ARM_MOVW_ABS_NC: .bss+0x30a0] 
    /*00009f30*/ MOV         R1, R8 
    /*00009f34*/ MOVT        R0, #0                      @ g_VouListLock [R_ARM_MOVT_ABS: .bss+0x30a0] 
    /*00009f38*/ LDR         R4, [SP, #52]               @ 0x34 
    /*00009f3c*/ STR         R3, [SP, #52]               @ 0x34 
    /*00009f40*/ BL          0x0000000000009F40          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00009f44*/ LDR         R3, [SP, #52]               @ 0x34 
    /*00009f48*/ STR         R4, [SP, #20] 
    /*00009f4c*/ STR         R3, [R9] 
    /*00009f50*/ B           VouDisableChnBatch_x9b74
    VouDisableChnBatch_x9f54:
    /*00009f54*/ MOV         R0, LR 
    /*00009f58*/ LDR         R7, [SP, #24] 
    /*00009f5c*/ BL          0x0000000000009F5C          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*00009f60*/ MOV         LR, R0 
    /*00009f64*/ CMP         LR, #0 
    /*00009f68*/ BGE         VouDisableChnBatch_x9c18
    VouDisableChnBatch_x9f6c:
    /*00009f6c*/ MOV         R3, #65024                  @ 0xfe00 
    /*00009f70*/ MOVT        R3, #65535                  @ 0xffff 
    /*00009f74*/ STR         R3, [SP, #36]               @ 0x24 
    /*00009f78*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00009f7c*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00009f80*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouDisableChnBatch_x9f84:
    /*00009f84*/ MOVW        IP, #32786                  @ 0x8012 
    /*00009f88*/ STR         FP, [SP, #8] 
    /*00009f8c*/ MOVW        R3, #5114                   @ 0x13fa 
    /*00009f90*/ STR         R7, [SP, #4] 
    /*00009f94*/ STR         R3, [SP] 
    /*00009f98*/ MOV         R1, #15 
    /*00009f9c*/ LDR         R3, [PC, #300]              @ 0x000000000000a0d0 
    /*00009fa0*/ MOVW        R2, #0                      @ .LC91 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x395c] 
    /*00009fa4*/ MOV         R0, #3 
    /*00009fa8*/ MOVT        R2, #0                      @ .LC91 [R_ARM_MOVT_ABS: .rodata.str1.4+0x395c] 
    /*00009fac*/ MOV         R4, IP 
    /*00009fb0*/ BL          0x0000000000009FB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009fb4*/ MOV         IP, R4 
    /*00009fb8*/ MOVT        IP, #40975                  @ 0xa00f 
    /*00009fbc*/ STR         IP, [SP, #36]               @ 0x24 
    /*00009fc0*/ LDR         R0, [SP, #36]               @ 0x24 
    /*00009fc4*/ ADD         SP, SP, #76                 @ 0x4c 
    /*00009fc8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouDisableChnBatch_x9fcc:
    /*00009fcc*/ MOVW        R3, #5062                   @ 0x13c6 
    /*00009fd0*/ STR         R7, [SP, #4] 
    /*00009fd4*/ STR         R3, [SP] 
    /*00009fd8*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2794] 
    /*00009fdc*/ LDR         R3, [PC, #236]              @ 0x000000000000a0d0 
    /*00009fe0*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2794] 
    /*00009fe4*/ MOV         R1, #15 
    /*00009fe8*/ MOV         R0, #4 
    /*00009fec*/ BL          0x0000000000009FEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00009ff0*/ B           VouDisableChnBatch_x9ab4
    VouDisableChnBatch_x9ff4:
    /*00009ff4*/ MOVW        R3, #32877                  @ 0x806d 
    /*00009ff8*/ MOVT        R3, #40975                  @ 0xa00f 
    /*00009ffc*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000a000*/ B           VouDisableChnBatch_x9d14
    VouDisableChnBatch_xa004:
    /*0000a004*/ MOVW        R3, #32770                  @ 0x8002 
    /*0000a008*/ MOVT        R3, #40975                  @ 0xa00f 
    /*0000a00c*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000a010*/ B           VouDisableChnBatch_x9d14
    VouDisableChnBatch_xa014:
    /*0000a014*/ MOVW        R3, #32774                  @ 0x8006 
    /*0000a018*/ MOVT        R3, #40975                  @ 0xa00f 
    /*0000a01c*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000a020*/ B           VouDisableChnBatch_x9d14
    VouDisableChnBatch_xa024:
    /*0000a024*/ LDR         R3, [SP, #28] 
    /*0000a028*/ LDR         R3, [R3, #16] 
    /*0000a02c*/ CMP         R3, #1 
    /*0000a030*/ BNE         VouDisableChnBatch_x9eb8
    /*0000a034*/ LDR         R3, [SP, #32] 
    /*0000a038*/ LDR         R3, [R3, #1060]             @ 0x424 
    /*0000a03c*/ CMP         R3, #0 
    /*0000a040*/ BNE         VouDisableChnBatch_x9eb8
    /*0000a044*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000a048*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000a04c*/ LDR         R1, [SP, #28] 
    /*0000a050*/ MLA         R3, R3, R7, R0 
    /*0000a054*/ LDR         R2, [R1, #76]               @ 0x4c 
    /*0000a058*/ LDR         R1, [R1, #80]               @ 0x50 
    /*0000a05c*/ LDR         R0, [R3, #64]               @ 0x40 
    /*0000a060*/ MLS         R2, R1, R2, R0 
    /*0000a064*/ STR         R2, [R3, #64]               @ 0x40 
    /*0000a068*/ B           VouDisableChnBatch_x9eb8
    VouDisableChnBatch_xa06c:
    /*0000a06c*/ LDR         R3, [SP, #28] 
    /*0000a070*/ MOVW        R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x39e0] 
    /*0000a074*/ MOV         R0, #3 
    /*0000a078*/ MOVT        R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x39e0] 
    /*0000a07c*/ LDR         R1, [R3, #52]               @ 0x34 
    /*0000a080*/ MOVW        R3, #5297                   @ 0x14b1 
    /*0000a084*/ STR         FP, [SP, #8] 
    /*0000a088*/ STR         R3, [SP] 
    /*0000a08c*/ STR         R1, [SP, #12] 
    /*0000a090*/ MOV         R1, #15 
    /*0000a094*/ STR         R7, [SP, #4] 
    /*0000a098*/ LDR         R3, [PC, #48]               @ 0x000000000000a0d0 
    /*0000a09c*/ BL          0x000000000000A09C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a0a0*/ B           VouDisableChnBatch_x9ec8
    VouDisableChnBatch_xa0a4:
    /*0000a0a4*/ MOVW        R3, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x39b8] 
    /*0000a0a8*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*0000a0ac*/ MOVT        R3, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x39b8] 
    /*0000a0b0*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    /*0000a0b4*/ MOVW        R2, #5187                   @ 0x1443 
    /*0000a0b8*/ LDR         R1, [PC, #16]               @ 0x000000000000a0d0 
    /*0000a0bc*/ BL          0x000000000000A0BC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000a0c0*/ LDR         R3, [SP, #28] 
    /*0000a0c4*/ LDR         R3, [R3, #24] 
    /*0000a0c8*/ LDR         R0, [R3] 
    /*0000a0cc*/ B           VouDisableChnBatch_x9df0
    /*0000a0d0*/ MULEQ       R0, R0, R6 
FUNC_END VouDisableChnBatch


FUNC_BEGIN VouDisableChn
    /*0000a0d4*/ PUSH        {R4, R5, R6, LR} 
    /*0000a0d8*/ SUB         SP, SP, #8 
    /*0000a0dc*/ MOV         R3, #0 
    /*0000a0e0*/ MOV         R5, R1 
    /*0000a0e4*/ MOV         R4, R0 
    /*0000a0e8*/ STR         R3, [SP, #4] 
    /*0000a0ec*/ BL          0x000000000000A0EC          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000a0f0*/ CMP         R0, #0 
    /*0000a0f4*/ BNE         VouDisableChn_xa184
    /*0000a0f8*/ MOV         R1, R5 
    /*0000a0fc*/ MOV         R0, R4 
    /*0000a100*/ BL          0x000000000000A100          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000a104*/ CMP         R0, #0 
    /*0000a108*/ BNE         VouDisableChn_xa190
    /*0000a10c*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000a110*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000a114*/ BL          0x000000000000A114          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000a118*/ CMP         R0, #0 
    /*0000a11c*/ BNE         VouDisableChn_xa19c
    /*0000a120*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000a124*/ ADD         R2, R5, R4, LSL #2 
    /*0000a128*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000a12c*/ LDR         R3, [R3, R2, LSL #2] 
    /*0000a130*/ CMP         R3, #0 
    /*0000a134*/ BEQ         VouDisableChn_xa1a8
    VouDisableChn_xa138:
    /*0000a138*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000a13c*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000a140*/ BL          0x000000000000A140          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a144*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000a148*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000a14c*/ BL          0x000000000000A14C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000a150*/ CMP         R0, #0 
    /*0000a154*/ BNE         VouDisableChn_xa19c
    /*0000a158*/ MOV         R1, R5 
    /*0000a15c*/ MOV         R0, R4 
    /*0000a160*/ ADD         R2, SP, #4 
    /*0000a164*/ BL          0x000000000000A164          @ VouDisableChnBatch [R_ARM_CALL: .text+0x9a2c] 
    /*0000a168*/ MOV         R6, R0 
    /*0000a16c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000a170*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000a174*/ BL          0x000000000000A174          @ osal_up [R_ARM_CALL: +0x0] 
    VouDisableChn_xa178:
    /*0000a178*/ MOV         R0, R6 
    /*0000a17c*/ ADD         SP, SP, #8 
    /*0000a180*/ POP         {R4, R5, R6, PC} 
    VouDisableChn_xa184:
    /*0000a184*/ MOVW        R6, #32877                  @ 0x806d 
    /*0000a188*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000a18c*/ B           VouDisableChn_xa178
    VouDisableChn_xa190:
    /*0000a190*/ MOVW        R6, #32770                  @ 0x8002 
    /*0000a194*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000a198*/ B           VouDisableChn_xa178
    VouDisableChn_xa19c:
    /*0000a19c*/ MOV         R6, #65024                  @ 0xfe00 
    /*0000a1a0*/ MOVT        R6, #65535                  @ 0xffff 
    /*0000a1a4*/ B           VouDisableChn_xa178
    VouDisableChn_xa1a8:
    /*0000a1a8*/ MOV         R1, R5 
    /*0000a1ac*/ MOV         R0, R4 
    /*0000a1b0*/ BL          0x0000000000005468 
    /*0000a1b4*/ SUBS        R6, R0, #0 
    /*0000a1b8*/ BEQ         VouDisableChn_xa138
    /*0000a1bc*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000a1c0*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000a1c4*/ BL          0x000000000000A1C4          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a1c8*/ MOV         R0, R6 
    /*0000a1cc*/ ADD         SP, SP, #8 
    /*0000a1d0*/ POP         {R4, R5, R6, PC} 
FUNC_END VouDisableChn


FUNC_BEGIN VouSetChnFrameRate
    /*0000a1d4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000a1d8*/ SUB         SP, SP, #28 
    /*0000a1dc*/ MOV         R6, R1 
    /*0000a1e0*/ MOV         R9, R2 
    /*0000a1e4*/ MOV         R8, R0 
    /*0000a1e8*/ BL          0x000000000000A1E8          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000a1ec*/ CMP         R0, #0 
    /*0000a1f0*/ BNE         VouSetChnFrameRate_xa44c
    /*0000a1f4*/ MOV         R1, R6 
    /*0000a1f8*/ MOV         R0, R8 
    /*0000a1fc*/ BL          0x000000000000A1FC          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000a200*/ CMP         R0, #0 
    /*0000a204*/ BNE         VouSetChnFrameRate_xa458
    /*0000a208*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000a20c*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000a210*/ BL          0x000000000000A210          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000a214*/ CMP         R0, #0 
    /*0000a218*/ BNE         VouSetChnFrameRate_xa3e0
    /*0000a21c*/ LSL         R7, R8, #2 
    /*0000a220*/ MOVW        R4, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000a224*/ ADD         R3, R7, R6 
    /*0000a228*/ MOVT        R4, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000a22c*/ LDR         R3, [R4, R3, LSL #2] 
    /*0000a230*/ CMP         R3, #0 
    /*0000a234*/ BEQ         VouSetChnFrameRate_xa4a0
    VouSetChnFrameRate_xa238:
    /*0000a238*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000a23c*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000a240*/ BL          0x000000000000A240          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a244*/ MOV         R0, R9 
    /*0000a248*/ BL          0x000000000000A248          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000a24c*/ SUBS        R5, R0, #0 
    /*0000a250*/ BNE         VouSetChnFrameRate_xa464
    /*0000a254*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000a258*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000a25c*/ LDR         R9, [R9] 
    /*0000a260*/ BL          0x000000000000A260          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000a264*/ CMP         R0, #0 
    /*0000a268*/ BNE         VouSetChnFrameRate_xa3e0
    /*0000a26c*/ ADD         R7, R7, R6 
    /*0000a270*/ LDR         R4, [R4, R7, LSL #2] 
    /*0000a274*/ LDR         R3, [R4, #8] 
    /*0000a278*/ CMP         R3, #0 
    /*0000a27c*/ BEQ         VouSetChnFrameRate_xa4dc
    /*0000a280*/ MOV         R0, R8 
    /*0000a284*/ BL          0x000000000000A284          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*0000a288*/ CMN         R0, #1 
    /*0000a28c*/ BEQ         VouSetChnFrameRate_xa548
    /*0000a290*/ MOVW        R3, #0                      @ g_astVoDev [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*0000a294*/ MOVT        R3, #0                      @ g_astVoDev [R_ARM_MOVT_ABS: .bss+0x8] 
    /*0000a298*/ MOV         R2, #232                    @ 0xe8 
    /*0000a29c*/ EOR         R6, R9, R9, ASR #31 
    /*0000a2a0*/ MLA         R0, R2, R0, R3 
    /*0000a2a4*/ SUB         R6, R6, R9, ASR #31 
    /*0000a2a8*/ LDR         R3, [R0, #84]               @ 0x54 
    /*0000a2ac*/ CMP         R6, R3, LSL #6 
    /*0000a2b0*/ BHI         VouSetChnFrameRate_xa51c
    /*0000a2b4*/ LDR         R3, [R4, #60]               @ 0x3c 
    /*0000a2b8*/ CMP         R6, R3 
    /*0000a2bc*/ BEQ         VouSetChnFrameRate_xa3ec
    /*0000a2c0*/ ADD         R7, SP, #24 
    /*0000a2c4*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000a2c8*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000a2cc*/ STR         R5, [R7, #-4]! 
    /*0000a2d0*/ MOV         R1, R7 
    /*0000a2d4*/ BL          0x000000000000A2D4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000a2d8*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000a2dc*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000a2e0*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000a2e4*/ MOVW        R0, #16960                  @ 0x4240 
    /*0000a2e8*/ MOVT        R0, #15 
    /*0000a2ec*/ MLA         R3, R3, R8, R2 
    /*0000a2f0*/ LDR         R8, [SP, #20] 
    /*0000a2f4*/ MUL         R0, R0, R6 
    /*0000a2f8*/ LDR         R1, [R3, #32] 
    /*0000a2fc*/ MUL         R1, R1, R1 
    /*0000a300*/ BL          0x000000000000A300          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000a304*/ CMP         R9, #0 
    /*0000a308*/ STR         R0, [R4, #328]              @ 0x148 
    /*0000a30c*/ BLT         VouSetChnFrameRate_xa3b8
    VouSetChnFrameRate_xa310:
    /*0000a310*/ LDR         R3, [R4, #344]              @ 0x158 
    /*0000a314*/ MOV         R2, #0 
    /*0000a318*/ STR         R2, [R4, #224]              @ 0xe0 
    /*0000a31c*/ CMP         R3, R2 
    /*0000a320*/ BEQ         VouSetChnFrameRate_xa4cc
    /*0000a324*/ ADD         R1, R4, #304                @ 0x130 
    /*0000a328*/ LDRD        R2, [R1] 
    /*0000a32c*/ ADDS        R2, R2, R0 
    /*0000a330*/ ADC         R3, R3, #0 
    VouSetChnFrameRate_xa334:
    /*0000a334*/ STRD        R2, [R1, #-8] 
    /*0000a338*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000a33c*/ STR         R6, [R4, #60]               @ 0x3c 
    /*0000a340*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000a344*/ MOV         R1, R7 
    /*0000a348*/ STR         R8, [SP, #20] 
    /*0000a34c*/ BL          0x000000000000A34C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000a350*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000a354*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000a358*/ BL          0x000000000000A358          @ osal_up [R_ARM_CALL: +0x0] 
    VouSetChnFrameRate_xa35c:
    /*0000a35c*/ MOV         R0, R5 
    /*0000a360*/ ADD         SP, SP, #28 
    /*0000a364*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouSetChnFrameRate_xa368:
    /*0000a368*/ CMP         R3, #1 
    /*0000a36c*/ BEQ         VouSetChnFrameRate_xa470
    /*0000a370*/ ADD         R7, SP, #24 
    /*0000a374*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000a378*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000a37c*/ STR         R5, [R7, #-4]! 
    /*0000a380*/ MOV         R1, R7 
    /*0000a384*/ BL          0x000000000000A384          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000a388*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000a38c*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000a390*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000a394*/ MOVW        R0, #16960                  @ 0x4240 
    /*0000a398*/ MOVT        R0, #15 
    /*0000a39c*/ MLA         R3, R3, R8, R2 
    /*0000a3a0*/ LDR         R8, [SP, #20] 
    /*0000a3a4*/ MUL         R0, R0, R6 
    /*0000a3a8*/ LDR         R1, [R3, #32] 
    /*0000a3ac*/ MUL         R1, R1, R1 
    /*0000a3b0*/ BL          0x000000000000A3B0          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000a3b4*/ STR         R0, [R4, #328]              @ 0x148 
    VouSetChnFrameRate_xa3b8:
    /*0000a3b8*/ LDR         R3, [R4, #344]              @ 0x158 
    /*0000a3bc*/ MOV         R2, #1 
    /*0000a3c0*/ STR         R2, [R4, #224]              @ 0xe0 
    /*0000a3c4*/ CMP         R3, #0 
    /*0000a3c8*/ BEQ         VouSetChnFrameRate_xa4cc
    /*0000a3cc*/ ADD         R1, R4, #304                @ 0x130 
    /*0000a3d0*/ LDRD        R2, [R1] 
    /*0000a3d4*/ SUBS        R2, R2, R0 
    /*0000a3d8*/ SBC         R3, R3, #0 
    /*0000a3dc*/ B           VouSetChnFrameRate_xa334
    VouSetChnFrameRate_xa3e0:
    /*0000a3e0*/ MOV         R5, #65024                  @ 0xfe00 
    /*0000a3e4*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000a3e8*/ B           VouSetChnFrameRate_xa35c
    VouSetChnFrameRate_xa3ec:
    /*0000a3ec*/ CMP         R9, #0 
    /*0000a3f0*/ LDR         R3, [R4, #224]              @ 0xe0 
    /*0000a3f4*/ BLT         VouSetChnFrameRate_xa368
    /*0000a3f8*/ CMP         R3, #0 
    /*0000a3fc*/ BEQ         VouSetChnFrameRate_xa470
    /*0000a400*/ ADD         R7, SP, #24 
    /*0000a404*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000a408*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000a40c*/ STR         R5, [R7, #-4]! 
    /*0000a410*/ MOV         R1, R7 
    /*0000a414*/ BL          0x000000000000A414          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000a418*/ MOVW        R3, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000a41c*/ MOVT        R3, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000a420*/ MOVW        R2, #12192                  @ 0x2fa0 
    /*0000a424*/ MOVW        R0, #16960                  @ 0x4240 
    /*0000a428*/ MOVT        R0, #15 
    /*0000a42c*/ MLA         R3, R2, R8, R3 
    /*0000a430*/ LDR         R8, [SP, #20] 
    /*0000a434*/ MUL         R0, R0, R6 
    /*0000a438*/ LDR         R1, [R3, #32] 
    /*0000a43c*/ MUL         R1, R1, R1 
    /*0000a440*/ BL          0x000000000000A440          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000a444*/ STR         R0, [R4, #328]              @ 0x148 
    /*0000a448*/ B           VouSetChnFrameRate_xa310
    VouSetChnFrameRate_xa44c:
    /*0000a44c*/ MOVW        R5, #32877                  @ 0x806d 
    /*0000a450*/ MOVT        R5, #40975                  @ 0xa00f 
    /*0000a454*/ B           VouSetChnFrameRate_xa35c
    VouSetChnFrameRate_xa458:
    /*0000a458*/ MOVW        R5, #32770                  @ 0x8002 
    /*0000a45c*/ MOVT        R5, #40975                  @ 0xa00f 
    /*0000a460*/ B           VouSetChnFrameRate_xa35c
    VouSetChnFrameRate_xa464:
    /*0000a464*/ MOVW        R5, #32774                  @ 0x8006 
    /*0000a468*/ MOVT        R5, #40975                  @ 0xa00f 
    /*0000a46c*/ B           VouSetChnFrameRate_xa35c
    VouSetChnFrameRate_xa470:
    /*0000a470*/ MOVW        R3, #5396                   @ 0x1514 
    /*0000a474*/ MOV         R1, #15 
    /*0000a478*/ STR         R3, [SP] 
    /*0000a47c*/ MOVW        R2, #0                      @ .LC96 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ab0] 
    /*0000a480*/ LDR         R3, [PC, #236]              @ 0x000000000000a574 
    /*0000a484*/ MOVT        R2, #0                      @ .LC96 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ab0] 
    /*0000a488*/ MOV         R0, #6 
    /*0000a48c*/ BL          0x000000000000A48C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a490*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000a494*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000a498*/ BL          0x000000000000A498          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a49c*/ B           VouSetChnFrameRate_xa35c
    VouSetChnFrameRate_xa4a0:
    /*0000a4a0*/ MOV         R1, R6 
    /*0000a4a4*/ MOV         R0, R8 
    /*0000a4a8*/ BL          0x0000000000005468 
    /*0000a4ac*/ SUBS        R5, R0, #0 
    /*0000a4b0*/ BEQ         VouSetChnFrameRate_xa238
    /*0000a4b4*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000a4b8*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000a4bc*/ BL          0x000000000000A4BC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a4c0*/ MOV         R0, R5 
    /*0000a4c4*/ ADD         SP, SP, #28 
    /*0000a4c8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouSetChnFrameRate_xa4cc:
    /*0000a4cc*/ MOV         R2, #0 
    /*0000a4d0*/ MOV         R3, #0 
    /*0000a4d4*/ ADD         R1, R4, #304                @ 0x130 
    /*0000a4d8*/ B           VouSetChnFrameRate_xa334
    VouSetChnFrameRate_xa4dc:
    /*0000a4dc*/ MOVW        R3, #5366                   @ 0x14f6 
    /*0000a4e0*/ STR         R3, [SP] 
    /*0000a4e4*/ LDR         R3, [PC, #136]              @ 0x000000000000a574 
    /*0000a4e8*/ MOVW        R2, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x330c] 
    /*0000a4ec*/ MOVT        R2, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0x330c] 
    /*0000a4f0*/ MOV         R1, #15 
    /*0000a4f4*/ MOV         R0, #4 
    /*0000a4f8*/ MOVW        R5, #32842                  @ 0x804a 
    /*0000a4fc*/ STR         R6, [SP, #8] 
    /*0000a500*/ STR         R8, [SP, #4] 
    VouSetChnFrameRate_xa504:
    /*0000a504*/ BL          0x000000000000A504          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000a508*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000a50c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000a510*/ MOVT        R5, #40975                  @ 0xa00f 
    /*0000a514*/ BL          0x000000000000A514          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a518*/ B           VouSetChnFrameRate_xa35c
    VouSetChnFrameRate_xa51c:
    /*0000a51c*/ STR         R3, [SP, #8] 
    /*0000a520*/ MOVW        R2, #0                      @ .LC95 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a68] 
    /*0000a524*/ MOVW        R3, #5385                   @ 0x1509 
    /*0000a528*/ STR         R6, [SP, #4] 
    /*0000a52c*/ STR         R3, [SP] 
    /*0000a530*/ MOVT        R2, #0                      @ .LC95 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a68] 
    /*0000a534*/ LDR         R3, [PC, #56]               @ 0x000000000000a574 
    /*0000a538*/ MOV         R1, #15 
    /*0000a53c*/ MOV         R0, #3 
    /*0000a540*/ MOVW        R5, #32771                  @ 0x8003 
    /*0000a544*/ B           VouSetChnFrameRate_xa504
    VouSetChnFrameRate_xa548:
    /*0000a548*/ MOVW        R3, #5374                   @ 0x14fe 
    /*0000a54c*/ MOVW        R2, #0                      @ .LC94 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3a28] 
    /*0000a550*/ STR         R3, [SP] 
    /*0000a554*/ MOVT        R2, #0                      @ .LC94 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3a28] 
    /*0000a558*/ STR         R6, [SP, #8] 
    /*0000a55c*/ MOV         R1, #15 
    /*0000a560*/ STR         R8, [SP, #4] 
    /*0000a564*/ MOV         R0, #4 
    /*0000a568*/ LDR         R3, [PC, #4]                @ 0x000000000000a574 
    /*0000a56c*/ MOVW        R5, #32879                  @ 0x806f 
    /*0000a570*/ B           VouSetChnFrameRate_xa504
    /*0000a574*/ ANDEQ       R0, R0, R4, LSR #13 
FUNC_END VouSetChnFrameRate


FUNC_BEGIN VouGetChnFrameRate
    /*0000a578*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000a57c*/ MOV         R5, R1 
    /*0000a580*/ MOV         R9, R2 
    /*0000a584*/ MOV         R8, R0 
    /*0000a588*/ BL          0x000000000000A588          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000a58c*/ CMP         R0, #0 
    /*0000a590*/ BNE         VouGetChnFrameRate_xa638
    /*0000a594*/ MOV         R1, R5 
    /*0000a598*/ MOV         R0, R8 
    /*0000a59c*/ BL          0x000000000000A59C          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000a5a0*/ CMP         R0, #0 
    /*0000a5a4*/ BNE         VouGetChnFrameRate_xa644
    /*0000a5a8*/ MOV         R0, R9 
    /*0000a5ac*/ BL          0x000000000000A5AC          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000a5b0*/ SUBS        R6, R0, #0 
    /*0000a5b4*/ BNE         VouGetChnFrameRate_xa650
    /*0000a5b8*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000a5bc*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000a5c0*/ BL          0x000000000000A5C0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000a5c4*/ CMP         R0, #0 
    /*0000a5c8*/ BNE         VouGetChnFrameRate_xa688
    /*0000a5cc*/ LSL         R7, R8, #2 
    /*0000a5d0*/ MOVW        R4, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000a5d4*/ ADD         R3, R7, R5 
    /*0000a5d8*/ MOVT        R4, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000a5dc*/ LDR         R3, [R4, R3, LSL #2] 
    /*0000a5e0*/ CMP         R3, #0 
    /*0000a5e4*/ BEQ         VouGetChnFrameRate_xa65c
    VouGetChnFrameRate_xa5e8:
    /*0000a5e8*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000a5ec*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000a5f0*/ BL          0x000000000000A5F0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a5f4*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000a5f8*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000a5fc*/ BL          0x000000000000A5FC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000a600*/ CMP         R0, #0 
    /*0000a604*/ BNE         VouGetChnFrameRate_xa688
    /*0000a608*/ ADD         R5, R7, R5 
    /*0000a60c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000a610*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000a614*/ LDR         R3, [R4, R5, LSL #2] 
    /*0000a618*/ LDR         R2, [R3, #224]              @ 0xe0 
    /*0000a61c*/ LDR         R3, [R3, #60]               @ 0x3c 
    /*0000a620*/ CMP         R2, #1 
    /*0000a624*/ RSBEQ       R3, R3, #0 
    /*0000a628*/ STR         R3, [R9] 
    /*0000a62c*/ BL          0x000000000000A62C          @ osal_up [R_ARM_CALL: +0x0] 
    VouGetChnFrameRate_xa630:
    /*0000a630*/ MOV         R0, R6 
    /*0000a634*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouGetChnFrameRate_xa638:
    /*0000a638*/ MOVW        R6, #32877                  @ 0x806d 
    /*0000a63c*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000a640*/ B           VouGetChnFrameRate_xa630
    VouGetChnFrameRate_xa644:
    /*0000a644*/ MOVW        R6, #32770                  @ 0x8002 
    /*0000a648*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000a64c*/ B           VouGetChnFrameRate_xa630
    VouGetChnFrameRate_xa650:
    /*0000a650*/ MOVW        R6, #32774                  @ 0x8006 
    /*0000a654*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000a658*/ B           VouGetChnFrameRate_xa630
    VouGetChnFrameRate_xa65c:
    /*0000a65c*/ MOV         R0, R8 
    /*0000a660*/ MOV         R1, R5 
    /*0000a664*/ BL          0x0000000000005468 
    /*0000a668*/ SUBS        R3, R0, #0 
    /*0000a66c*/ BEQ         VouGetChnFrameRate_xa5e8
    /*0000a670*/ MOV         R6, R3 
    /*0000a674*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000a678*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000a67c*/ BL          0x000000000000A67C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a680*/ MOV         R0, R6 
    /*0000a684*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouGetChnFrameRate_xa688:
    /*0000a688*/ MOV         R6, #65024                  @ 0xfe00 
    /*0000a68c*/ MOVT        R6, #65535                  @ 0xffff 
    /*0000a690*/ B           VouGetChnFrameRate_xa630
FUNC_END VouGetChnFrameRate


FUNC_BEGIN VouGetChnFrame
    /*0000a694*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000a698*/ SUB         SP, SP, #84                 @ 0x54 
    /*0000a69c*/ MOV         FP, R1 
    /*0000a6a0*/ MOV         R5, R2 
    /*0000a6a4*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000a6a8*/ MOV         R4, R0 
    /*0000a6ac*/ MOV         R3, #0 
    /*0000a6b0*/ STR         R2, [SP, #52]               @ 0x34 
    /*0000a6b4*/ STR         R0, [SP, #24] 
    /*0000a6b8*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000a6bc*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000a6c0*/ STR         R3, [SP, #72]               @ 0x48 
    /*0000a6c4*/ STR         R3, [SP, #76]               @ 0x4c 
    /*0000a6c8*/ BL          0x000000000000A6C8          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000a6cc*/ CMP         R0, #0 
    /*0000a6d0*/ BNE         VouGetChnFrame_xaa90
    /*0000a6d4*/ MOV         R1, FP 
    /*0000a6d8*/ MOV         R0, R4 
    /*0000a6dc*/ BL          0x000000000000A6DC          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000a6e0*/ CMP         R0, #0 
    /*0000a6e4*/ BNE         VouGetChnFrame_xaa9c
    /*0000a6e8*/ MOV         R0, R5 
    /*0000a6ec*/ BL          0x000000000000A6EC          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000a6f0*/ CMP         R0, #0 
    /*0000a6f4*/ BNE         VouGetChnFrame_xaaa8
    /*0000a6f8*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000a6fc*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000a700*/ BL          0x000000000000A700          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000a704*/ CMP         R0, #0 
    /*0000a708*/ BNE         VouGetChnFrame_xa970
    /*0000a70c*/ LDR         R3, [SP, #24] 
    /*0000a710*/ MOVW        R4, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000a714*/ MOVT        R4, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000a718*/ LSL         R6, R3, #2 
    /*0000a71c*/ ADD         R3, R6, FP 
    /*0000a720*/ LDR         R3, [R4, R3, LSL #2] 
    /*0000a724*/ CMP         R3, #0 
    /*0000a728*/ BEQ         VouGetChnFrame_xab34
    VouGetChnFrame_xa72c:
    /*0000a72c*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000a730*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000a734*/ BL          0x000000000000A734          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a738*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000a73c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000a740*/ BL          0x000000000000A740          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000a744*/ SUBS        R3, R0, #0 
    /*0000a748*/ BNE         VouGetChnFrame_xa970
    /*0000a74c*/ ADD         R6, R6, FP 
    /*0000a750*/ LDR         R7, [R4, R6, LSL #2] 
    /*0000a754*/ LDR         R2, [R7, #4] 
    /*0000a758*/ CMP         R2, #0 
    /*0000a75c*/ BEQ         VouGetChnFrame_xab60
    /*0000a760*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0000a764*/ CMN         R2, #1 
    /*0000a768*/ BLT         VouGetChnFrame_xac5c
    /*0000a76c*/ ADD         R8, SP, #80                 @ 0x50 
    /*0000a770*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000a774*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000a778*/ STR         R3, [R8, #-20]!             @ 0xffffffec 
    /*0000a77c*/ MOV         R1, R8 
    /*0000a780*/ BEQ         VouGetChnFrame_xa984
    /*0000a784*/ BL          0x000000000000A784          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000a788*/ ADD         R2, R7, #8192               @ 0x2000 
    /*0000a78c*/ LDR         R3, [R7, #24] 
    /*0000a790*/ LDR         R2, [R2, #1372]             @ 0x55c 
    /*0000a794*/ CMP         R3, #0 
    /*0000a798*/ LDR         R4, [SP, #60]               @ 0x3c 
    /*0000a79c*/ STR         R2, [SP, #48]               @ 0x30 
    /*0000a7a0*/ BNE         VouGetChnFrame_xa8d0
    /*0000a7a4*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000a7a8*/ MOVW        SL, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000a7ac*/ MOVW        R9, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000a7b0*/ MOVW        R6, #0                      @ VO_WaitGetChnFrameCallBack [R_ARM_MOVW_ABS_NC: .text+0x52a8] 
    /*0000a7b4*/ CLZ         R3, R3 
    /*0000a7b8*/ MOVT        SL, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000a7bc*/ MOVT        R9, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000a7c0*/ MOVT        R6, #0                      @ VO_WaitGetChnFrameCallBack [R_ARM_MOVT_ABS: .text+0x52a8] 
    /*0000a7c4*/ LSR         R3, R3, #5 
    /*0000a7c8*/ STR         FP, [SP, #40]               @ 0x28 
    /*0000a7cc*/ STR         R3, [SP, #44]               @ 0x2c 
    VouGetChnFrame_xa7d0:
    /*0000a7d0*/ MOV         R1, R8 
    /*0000a7d4*/ MOV         R0, SL 
    /*0000a7d8*/ STR         R4, [SP, #60]               @ 0x3c 
    /*0000a7dc*/ BL          0x000000000000A7DC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000a7e0*/ LDR         R3, [SP, #24] 
    /*0000a7e4*/ MOV         R0, R9 
    /*0000a7e8*/ LDR         FP, [SP, #60]               @ 0x3c 
    /*0000a7ec*/ ADD         R5, R7, #9472               @ 0x2500 
    /*0000a7f0*/ ADD         R5, R5, #52                 @ 0x34 
    /*0000a7f4*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000a7f8*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000a7fc*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000a800*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0000a804*/ STR         R3, [SP, #76]               @ 0x4c 
    /*0000a808*/ BL          0x000000000000A808          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a80c*/ ADD         R0, SP, #64                 @ 0x40 
    /*0000a810*/ BL          0x000000000000A810          @ VO_WaitGetChnFrameCallBack [R_ARM_CALL: .text+0x52a8] 
    /*0000a814*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000a818*/ CMP         R0, #0 
    /*0000a81c*/ MOVEQ       R3, #0 
    /*0000a820*/ ANDNE       R3, R3, #1 
    /*0000a824*/ CMP         R3, #0 
    /*0000a828*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000a82c*/ MOVNE       R4, #1 
    /*0000a830*/ MOVEQ       R4, R3 
    /*0000a834*/ B           VouGetChnFrame_xa84c
    VouGetChnFrame_xa838:
    /*0000a838*/ BL          0x000000000000A838          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*0000a83c*/ ADD         R3, R0, #512                @ 0x200 
    /*0000a840*/ MOV         R4, R0 
    /*0000a844*/ BICS        R3, R3, #512                @ 0x200 
    /*0000a848*/ BEQ         VouGetChnFrame_xa878
    VouGetChnFrame_xa84c:
    /*0000a84c*/ ADD         R0, SP, #64                 @ 0x40 
    /*0000a850*/ BL          0x000000000000A850          @ VO_WaitGetChnFrameCallBack [R_ARM_CALL: .text+0x52a8] 
    /*0000a854*/ MOV         R3, R4 
    /*0000a858*/ ADD         R2, SP, #64                 @ 0x40 
    /*0000a85c*/ MOV         R1, R6 
    /*0000a860*/ CMP         R0, #0 
    /*0000a864*/ MOV         R0, R5 
    /*0000a868*/ BEQ         VouGetChnFrame_xa838
    /*0000a86c*/ MOV         R0, R4 
    /*0000a870*/ BL          0x000000000000A870          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*0000a874*/ MOV         R4, R0 
    VouGetChnFrame_xa878:
    /*0000a878*/ MOV         R0, R9 
    /*0000a87c*/ BL          0x000000000000A87C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000a880*/ CMP         R0, #0 
    /*0000a884*/ BNE         VouGetChnFrame_xa970
    /*0000a888*/ MOVW        R3, #0                      @ s_u32VouState [R_ARM_MOVW_ABS_NC: .data+0x10] 
    /*0000a88c*/ MOVT        R3, #0                      @ s_u32VouState [R_ARM_MOVT_ABS: .data+0x10] 
    /*0000a890*/ LDR         R3, [R3] 
    /*0000a894*/ CMP         R3, #0 
    /*0000a898*/ BNE         VouGetChnFrame_xaafc
    /*0000a89c*/ CMP         R4, #0 
    /*0000a8a0*/ BLT         VouGetChnFrame_xa964
    /*0000a8a4*/ BEQ         VouGetChnFrame_xaab4
    /*0000a8a8*/ MOV         R1, R8 
    /*0000a8ac*/ MOV         R0, SL 
    /*0000a8b0*/ STR         FP, [SP, #60]               @ 0x3c 
    /*0000a8b4*/ BL          0x000000000000A8B4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000a8b8*/ LDR         R3, [R7, #24] 
    /*0000a8bc*/ LDR         R2, [SP, #60]               @ 0x3c 
    /*0000a8c0*/ CMP         R3, #0 
    /*0000a8c4*/ MOV         R4, R2 
    /*0000a8c8*/ BEQ         VouGetChnFrame_xa7d0
    /*0000a8cc*/ LDR         FP, [SP, #40]               @ 0x28 
    VouGetChnFrame_xa8d0:
    /*0000a8d0*/ LDR         R6, [R3] 
    /*0000a8d4*/ MOV         R0, #1 
    /*0000a8d8*/ LDRD        R2, [R6, #120]              @ 0x78 
    /*0000a8dc*/ LDR         R9, [R6, #328]              @ 0x148 
    /*0000a8e0*/ STRD        R2, [SP, #24] 
    /*0000a8e4*/ BL          0x000000000000A8E4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000a8e8*/ MOV         R3, #12 
    /*0000a8ec*/ STR         R3, [SP] 
    /*0000a8f0*/ LDRD        R2, [SP, #24] 
    /*0000a8f4*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*0000a8f8*/ MOV         R0, R9 
    /*0000a8fc*/ BLX         R1 
    /*0000a900*/ SUBS        R5, R0, #0 
    /*0000a904*/ BNE         VouGetChnFrame_xac00
    /*0000a908*/ MOV         R1, R6 
    /*0000a90c*/ LDR         R0, [SP, #52]               @ 0x34 
    /*0000a910*/ MOV         R2, #336                    @ 0x150 
    /*0000a914*/ BL          0x000000000000A914          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000a918*/ MOV         R2, #752                    @ 0x2f0 
    /*0000a91c*/ MOV         R1, R6 
    /*0000a920*/ ADD         R0, R7, #368                @ 0x170 
    /*0000a924*/ BL          0x000000000000A924          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000a928*/ MOV         R1, R8 
    /*0000a92c*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000a930*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000a934*/ STR         R4, [SP, #60]               @ 0x3c 
    /*0000a938*/ BL          0x000000000000A938          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000a93c*/ LDR         R3, [R7, #52]               @ 0x34 
    /*0000a940*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000a944*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000a948*/ CMP         R3, #0 
    /*0000a94c*/ ADD         R3, R3, #1 
    /*0000a950*/ STR         R3, [R7, #52]               @ 0x34 
    /*0000a954*/ MOVEQ       R2, #1 
    /*0000a958*/ STREQ       R2, [R7, #48]               @ 0x30 
    /*0000a95c*/ BL          0x000000000000A95C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a960*/ B           VouGetChnFrame_xa978
    VouGetChnFrame_xa964:
    /*0000a964*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000a968*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000a96c*/ BL          0x000000000000A96C          @ osal_up [R_ARM_CALL: +0x0] 
    VouGetChnFrame_xa970:
    /*0000a970*/ MOV         R5, #65024                  @ 0xfe00 
    /*0000a974*/ MOVT        R5, #65535                  @ 0xffff 
    VouGetChnFrame_xa978:
    /*0000a978*/ MOV         R0, R5 
    /*0000a97c*/ ADD         SP, SP, #84                 @ 0x54 
    /*0000a980*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouGetChnFrame_xa984:
    /*0000a984*/ BL          0x000000000000A984          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000a988*/ ADD         R1, R7, #8192               @ 0x2000 
    /*0000a98c*/ LDR         R3, [R7, #24] 
    /*0000a990*/ LDR         R1, [R1, #1372]             @ 0x55c 
    /*0000a994*/ CMP         R3, #0 
    /*0000a998*/ LDR         R2, [SP, #60]               @ 0x3c 
    /*0000a99c*/ STR         R1, [SP, #40]               @ 0x28 
    /*0000a9a0*/ BNE         VouGetChnFrame_xabf8
    /*0000a9a4*/ MOVW        R9, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000a9a8*/ MOVW        R6, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000a9ac*/ MOVW        R5, #0                      @ VO_WaitGetChnFrameCallBack [R_ARM_MOVW_ABS_NC: .text+0x52a8] 
    /*0000a9b0*/ MOVT        R9, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000a9b4*/ MOVT        R6, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000a9b8*/ MOVT        R5, #0                      @ VO_WaitGetChnFrameCallBack [R_ARM_MOVT_ABS: .text+0x52a8] 
    /*0000a9bc*/ STR         FP, [SP, #36]               @ 0x24 
    VouGetChnFrame_xa9c0:
    /*0000a9c0*/ MOV         R0, R9 
    /*0000a9c4*/ MOV         R1, R8 
    /*0000a9c8*/ STR         R2, [SP, #60]               @ 0x3c 
    /*0000a9cc*/ BL          0x000000000000A9CC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000a9d0*/ LDR         R3, [SP, #24] 
    /*0000a9d4*/ ADD         R4, R7, #9472               @ 0x2500 
    /*0000a9d8*/ MOV         R0, R6 
    /*0000a9dc*/ ADD         R4, R4, #52                 @ 0x34 
    /*0000a9e0*/ LDR         SL, [SP, #60]               @ 0x3c 
    /*0000a9e4*/ STR         R3, [SP, #64]               @ 0x40 
    /*0000a9e8*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000a9ec*/ STR         R3, [SP, #68]               @ 0x44 
    /*0000a9f0*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000a9f4*/ STR         R3, [SP, #76]               @ 0x4c 
    /*0000a9f8*/ BL          0x000000000000A9F8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000a9fc*/ B           VouGetChnFrame_xaa0c
    VouGetChnFrame_xaa00:
    /*0000aa00*/ BL          0x000000000000AA00          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*0000aa04*/ CMP         R0, #0 
    /*0000aa08*/ BLT         VouGetChnFrame_xaa88
    VouGetChnFrame_xaa0c:
    /*0000aa0c*/ ADD         R0, SP, #64                 @ 0x40 
    /*0000aa10*/ BL          0x000000000000AA10          @ VO_WaitGetChnFrameCallBack [R_ARM_CALL: .text+0x52a8] 
    /*0000aa14*/ MOV         R3, #100                    @ 0x64 
    /*0000aa18*/ ADD         R2, SP, #64                 @ 0x40 
    /*0000aa1c*/ MOV         R1, R5 
    /*0000aa20*/ CMP         R0, #0 
    /*0000aa24*/ MOV         R0, R4 
    /*0000aa28*/ BEQ         VouGetChnFrame_xaa00
    /*0000aa2c*/ MOV         FP, #0 
    VouGetChnFrame_xaa30:
    /*0000aa30*/ MOV         R0, R6 
    /*0000aa34*/ BL          0x000000000000AA34          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000aa38*/ CMP         R0, #0 
    /*0000aa3c*/ BNE         VouGetChnFrame_xa970
    /*0000aa40*/ MOVW        R2, #0                      @ s_u32VouState [R_ARM_MOVW_ABS_NC: .data+0x10] 
    /*0000aa44*/ MOVT        R2, #0                      @ s_u32VouState [R_ARM_MOVT_ABS: .data+0x10] 
    /*0000aa48*/ LDR         R2, [R2] 
    /*0000aa4c*/ CMP         R2, #0 
    /*0000aa50*/ BNE         VouGetChnFrame_xabe4
    /*0000aa54*/ CMP         FP, #0 
    /*0000aa58*/ BNE         VouGetChnFrame_xab9c
    /*0000aa5c*/ MOV         R1, R8 
    /*0000aa60*/ MOV         R0, R9 
    /*0000aa64*/ STR         SL, [SP, #60]               @ 0x3c 
    /*0000aa68*/ BL          0x000000000000AA68          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000aa6c*/ LDR         R3, [R7, #24] 
    /*0000aa70*/ LDR         R4, [SP, #60]               @ 0x3c 
    /*0000aa74*/ CMP         R3, #0 
    /*0000aa78*/ MOV         R2, R4 
    /*0000aa7c*/ BEQ         VouGetChnFrame_xa9c0
    /*0000aa80*/ LDR         FP, [SP, #36]               @ 0x24 
    /*0000aa84*/ B           VouGetChnFrame_xa8d0
    VouGetChnFrame_xaa88:
    /*0000aa88*/ MOV         FP, R0 
    /*0000aa8c*/ B           VouGetChnFrame_xaa30
    VouGetChnFrame_xaa90:
    /*0000aa90*/ MOVW        R5, #32877                  @ 0x806d 
    /*0000aa94*/ MOVT        R5, #40975                  @ 0xa00f 
    /*0000aa98*/ B           VouGetChnFrame_xa978
    VouGetChnFrame_xaa9c:
    /*0000aa9c*/ MOVW        R5, #32770                  @ 0x8002 
    /*0000aaa0*/ MOVT        R5, #40975                  @ 0xa00f 
    /*0000aaa4*/ B           VouGetChnFrame_xa978
    VouGetChnFrame_xaaa8:
    /*0000aaa8*/ MOVW        R5, #32774                  @ 0x8006 
    /*0000aaac*/ MOVT        R5, #40975                  @ 0xa00f 
    /*0000aab0*/ B           VouGetChnFrame_xa978
    VouGetChnFrame_xaab4:
    /*0000aab4*/ LDR         R2, [SP, #24] 
    /*0000aab8*/ MOVW        R3, #5933                   @ 0x172d 
    /*0000aabc*/ LDR         FP, [SP, #40]               @ 0x28 
    /*0000aac0*/ MOV         R1, #15 
    /*0000aac4*/ STR         R3, [SP] 
    /*0000aac8*/ MOV         R0, #3 
    /*0000aacc*/ LDR         R3, [PC, #440]              @ 0x000000000000ac8c 
    /*0000aad0*/ MOVW        R5, #32786                  @ 0x8012 
    /*0000aad4*/ STR         R2, [SP, #4] 
    /*0000aad8*/ MOVW        R2, #0                      @ .LC100 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3bd4] 
    /*0000aadc*/ MOVT        R2, #0                      @ .LC100 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3bd4] 
    /*0000aae0*/ STR         FP, [SP, #8] 
    VouGetChnFrame_xaae4:
    /*0000aae4*/ BL          0x000000000000AAE4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000aae8*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000aaec*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000aaf0*/ MOVT        R5, #40975                  @ 0xa00f 
    /*0000aaf4*/ BL          0x000000000000AAF4          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000aaf8*/ B           VouGetChnFrame_xa978
    VouGetChnFrame_xaafc:
    /*0000aafc*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000ab00*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000ab04*/ BL          0x000000000000AB04          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ab08*/ MOVW        R3, #5922                   @ 0x1722 
    VouGetChnFrame_xab0c:
    /*0000ab0c*/ STR         R3, [SP] 
    /*0000ab10*/ MOVW        R2, #0                      @ .LC99 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b84] 
    /*0000ab14*/ LDR         R3, [PC, #368]              @ 0x000000000000ac8c 
    /*0000ab18*/ MOVT        R2, #0                      @ .LC99 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b84] 
    /*0000ab1c*/ MOV         R1, #15 
    /*0000ab20*/ MOV         R0, #3 
    /*0000ab24*/ MOVW        R5, #32784                  @ 0x8010 
    /*0000ab28*/ BL          0x000000000000AB28          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ab2c*/ MOVT        R5, #40975                  @ 0xa00f 
    /*0000ab30*/ B           VouGetChnFrame_xa978
    VouGetChnFrame_xab34:
    /*0000ab34*/ MOV         R1, FP 
    /*0000ab38*/ LDR         R0, [SP, #24] 
    /*0000ab3c*/ BL          0x0000000000005468 
    /*0000ab40*/ SUBS        R5, R0, #0 
    /*0000ab44*/ BEQ         VouGetChnFrame_xa72c
    /*0000ab48*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000ab4c*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000ab50*/ BL          0x000000000000AB50          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ab54*/ MOV         R0, R5 
    /*0000ab58*/ ADD         SP, SP, #84                 @ 0x54 
    /*0000ab5c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouGetChnFrame_xab60:
    /*0000ab60*/ MOVW        R3, #5880                   @ 0x16f8 
    /*0000ab64*/ MOV         R1, #15 
    /*0000ab68*/ STR         R3, [SP] 
    /*0000ab6c*/ MOVW        R2, #0                      @ .LC97 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3af4] 
    /*0000ab70*/ LDR         R3, [PC, #276]              @ 0x000000000000ac8c 
    /*0000ab74*/ MOVT        R2, #0                      @ .LC97 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3af4] 
    /*0000ab78*/ STR         FP, [SP, #4] 
    /*0000ab7c*/ MOV         R0, #3 
    /*0000ab80*/ BL          0x000000000000AB80          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ab84*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000ab88*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000ab8c*/ MOVW        R5, #32841                  @ 0x8049 
    /*0000ab90*/ BL          0x000000000000AB90          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ab94*/ MOVT        R5, #40975                  @ 0xa00f 
    /*0000ab98*/ B           VouGetChnFrame_xa978
    VouGetChnFrame_xab9c:
    /*0000ab9c*/ LDR         R2, [SP, #24] 
    /*0000aba0*/ MOVW        R3, #5972                   @ 0x1754 
    /*0000aba4*/ LDR         FP, [SP, #36]               @ 0x24 
    /*0000aba8*/ MOV         R1, #15 
    /*0000abac*/ STR         R3, [SP] 
    /*0000abb0*/ MOV         R0, #3 
    /*0000abb4*/ STR         R2, [SP, #4] 
    /*0000abb8*/ MOVW        R2, #0                      @ .LC101 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c18] 
    /*0000abbc*/ STR         FP, [SP, #8] 
    /*0000abc0*/ MOVT        R2, #0                      @ .LC101 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c18] 
    /*0000abc4*/ LDR         R3, [PC, #192]              @ 0x000000000000ac8c 
    /*0000abc8*/ MOV         R5, #65024                  @ 0xfe00 
    /*0000abcc*/ BL          0x000000000000ABCC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000abd0*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000abd4*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000abd8*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000abdc*/ BL          0x000000000000ABDC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000abe0*/ B           VouGetChnFrame_xa978
    VouGetChnFrame_xabe4:
    /*0000abe4*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000abe8*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000abec*/ BL          0x000000000000ABEC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000abf0*/ MOVW        R3, #5966                   @ 0x174e 
    /*0000abf4*/ B           VouGetChnFrame_xab0c
    VouGetChnFrame_xabf8:
    /*0000abf8*/ MOV         R4, R2 
    /*0000abfc*/ B           VouGetChnFrame_xa8d0
    VouGetChnFrame_xac00:
    /*0000ac00*/ LDRD        R2, [SP, #24] 
    /*0000ac04*/ MOV         R1, #15 
    /*0000ac08*/ STR         R9, [SP, #8] 
    /*0000ac0c*/ MOV         R0, #3 
    /*0000ac10*/ STR         FP, [SP, #4] 
    /*0000ac14*/ MOVW        R5, #32780                  @ 0x800c 
    /*0000ac18*/ STRD        R2, [SP, #16] 
    /*0000ac1c*/ MOVW        R3, #6006                   @ 0x1776 
    /*0000ac20*/ MOVW        R2, #0                      @ .LC102 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3c70] 
    /*0000ac24*/ STR         R3, [SP] 
    /*0000ac28*/ MOVT        R2, #0                      @ .LC102 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3c70] 
    /*0000ac2c*/ LDR         R3, [PC, #88]               @ 0x000000000000ac8c 
    /*0000ac30*/ BL          0x000000000000AC30          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ac34*/ MOV         R1, R8 
    /*0000ac38*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000ac3c*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000ac40*/ STR         R4, [SP, #60]               @ 0x3c 
    /*0000ac44*/ BL          0x000000000000AC44          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000ac48*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000ac4c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000ac50*/ BL          0x000000000000AC50          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ac54*/ MOVT        R5, #40975                  @ 0xa00f 
    /*0000ac58*/ B           VouGetChnFrame_xa978
    VouGetChnFrame_xac5c:
    /*0000ac5c*/ LDR         R2, [SP, #24] 
    /*0000ac60*/ MOVW        R3, #5895                   @ 0x1707 
    /*0000ac64*/ STR         FP, [SP, #8] 
    /*0000ac68*/ MOV         R1, #15 
    /*0000ac6c*/ STR         R3, [SP] 
    /*0000ac70*/ MOV         R0, #3 
    /*0000ac74*/ STR         R2, [SP, #4] 
    /*0000ac78*/ MOVW        R5, #32771                  @ 0x8003 
    /*0000ac7c*/ MOVW        R2, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3b2c] 
    /*0000ac80*/ LDR         R3, [PC, #4]                @ 0x000000000000ac8c 
    /*0000ac84*/ MOVT        R2, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3b2c] 
    /*0000ac88*/ B           VouGetChnFrame_xaae4
    /*0000ac8c*/ @           <UNDEFINED> instruction: 0x000006b8 
FUNC_END VouGetChnFrame


FUNC_BEGIN VouReleaseChnFrame
    /*0000ac90*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000ac94*/ SUB         SP, SP, #32 
    /*0000ac98*/ MOV         R5, R1 
    /*0000ac9c*/ MOV         R4, R2 
    /*0000aca0*/ MOV         R7, R0 
    /*0000aca4*/ BL          0x000000000000ACA4          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000aca8*/ CMP         R0, #0 
    /*0000acac*/ BNE         VouReleaseChnFrame_xae38
    /*0000acb0*/ MOV         R1, R5 
    /*0000acb4*/ MOV         R0, R7 
    /*0000acb8*/ BL          0x000000000000ACB8          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000acbc*/ CMP         R0, #0 
    /*0000acc0*/ BNE         VouReleaseChnFrame_xae44
    /*0000acc4*/ MOV         R0, R4 
    /*0000acc8*/ BL          0x000000000000ACC8          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000accc*/ CMP         R0, #0 
    /*0000acd0*/ BNE         VouReleaseChnFrame_xae50
    /*0000acd4*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000acd8*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000acdc*/ BL          0x000000000000ACDC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000ace0*/ CMP         R0, #0 
    /*0000ace4*/ BNE         VouReleaseChnFrame_xaec8
    /*0000ace8*/ LSL         R8, R7, #2 
    /*0000acec*/ MOVW        R6, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000acf0*/ ADD         R3, R8, R5 
    /*0000acf4*/ MOVT        R6, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000acf8*/ LDR         R3, [R6, R3, LSL #2] 
    /*0000acfc*/ CMP         R3, #0 
    /*0000ad00*/ BEQ         VouReleaseChnFrame_xae9c
    VouReleaseChnFrame_xad04:
    /*0000ad04*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000ad08*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000ad0c*/ BL          0x000000000000AD0C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ad10*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000ad14*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000ad18*/ BL          0x000000000000AD18          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000ad1c*/ SUBS        R9, R0, #0 
    /*0000ad20*/ BNE         VouReleaseChnFrame_xaec8
    /*0000ad24*/ ADD         R8, R8, R5 
    /*0000ad28*/ LDR         R8, [R6, R8, LSL #2] 
    /*0000ad2c*/ LDR         R3, [R8, #48]               @ 0x30 
    /*0000ad30*/ CMP         R3, #0 
    /*0000ad34*/ BEQ         VouReleaseChnFrame_xae5c
    /*0000ad38*/ MOV         R0, #1 
    /*0000ad3c*/ BL          0x000000000000AD3C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000ad40*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*0000ad44*/ LDR         R1, [R0, #84]               @ 0x54 
    /*0000ad48*/ LDR         R0, [R4, #328]              @ 0x148 
    /*0000ad4c*/ BLX         R1 
    /*0000ad50*/ CMP         R0, #1 
    /*0000ad54*/ MOV         SL, R0 
    /*0000ad58*/ BNE         VouReleaseChnFrame_xaed4
    /*0000ad5c*/ ADD         R6, SP, #32 
    /*0000ad60*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000ad64*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000ad68*/ STR         R9, [R6, #-4]! 
    /*0000ad6c*/ MOV         R1, R6 
    /*0000ad70*/ BL          0x000000000000AD70          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000ad74*/ MOV         R0, SL 
    /*0000ad78*/ LDR         SL, [SP, #28] 
    /*0000ad7c*/ BL          0x000000000000AD7C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000ad80*/ LDR         IP, [R4, #328]              @ 0x148 
    /*0000ad84*/ MOV         R1, #12 
    /*0000ad88*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*0000ad8c*/ STR         R1, [SP] 
    /*0000ad90*/ LDR         R1, [R0, #64]               @ 0x40 
    /*0000ad94*/ MOV         R0, IP 
    /*0000ad98*/ BLX         R1 
    /*0000ad9c*/ SUBS        R9, R0, #0 
    /*0000ada0*/ BNE         VouReleaseChnFrame_xade4
    /*0000ada4*/ MOV         R1, R6 
    /*0000ada8*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000adac*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000adb0*/ STR         SL, [SP, #28] 
    /*0000adb4*/ BL          0x000000000000ADB4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000adb8*/ LDR         R3, [R8, #52]               @ 0x34 
    /*0000adbc*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000adc0*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000adc4*/ SUB         R3, R3, #1 
    /*0000adc8*/ STR         R3, [R8, #52]               @ 0x34 
    /*0000adcc*/ CMP         R3, #0 
    /*0000add0*/ STREQ       R9, [R8, #48]               @ 0x30 
    /*0000add4*/ BL          0x000000000000ADD4          @ osal_up [R_ARM_CALL: +0x0] 
    VouReleaseChnFrame_xadd8:
    /*0000add8*/ MOV         R0, R9 
    /*0000addc*/ ADD         SP, SP, #32 
    /*0000ade0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouReleaseChnFrame_xade4:
    /*0000ade4*/ STR         R5, [SP, #8] 
    /*0000ade8*/ MOVW        R3, #6078                   @ 0x17be 
    /*0000adec*/ STR         R7, [SP, #4] 
    /*0000adf0*/ MOV         R1, #15 
    /*0000adf4*/ STR         R3, [SP] 
    /*0000adf8*/ MOVW        R2, #0                      @ .LC105 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d7c] 
    /*0000adfc*/ LDR         R3, [PC, #288]              @ 0x000000000000af24 
    /*0000ae00*/ MOVT        R2, #0                      @ .LC105 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d7c] 
    /*0000ae04*/ MOV         R0, #3 
    /*0000ae08*/ BL          0x000000000000AE08          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ae0c*/ MOV         R1, R6 
    /*0000ae10*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000ae14*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000ae18*/ STR         SL, [SP, #28] 
    /*0000ae1c*/ BL          0x000000000000AE1C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000ae20*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000ae24*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000ae28*/ BL          0x000000000000AE28          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ae2c*/ MOV         R0, R9 
    /*0000ae30*/ ADD         SP, SP, #32 
    /*0000ae34*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouReleaseChnFrame_xae38:
    /*0000ae38*/ MOVW        R9, #32877                  @ 0x806d 
    /*0000ae3c*/ MOVT        R9, #40975                  @ 0xa00f 
    /*0000ae40*/ B           VouReleaseChnFrame_xadd8
    VouReleaseChnFrame_xae44:
    /*0000ae44*/ MOVW        R9, #32770                  @ 0x8002 
    /*0000ae48*/ MOVT        R9, #40975                  @ 0xa00f 
    /*0000ae4c*/ B           VouReleaseChnFrame_xadd8
    VouReleaseChnFrame_xae50:
    /*0000ae50*/ MOVW        R9, #32774                  @ 0x8006 
    /*0000ae54*/ MOVT        R9, #40975                  @ 0xa00f 
    /*0000ae58*/ B           VouReleaseChnFrame_xadd8
    VouReleaseChnFrame_xae5c:
    /*0000ae5c*/ STR         R5, [SP, #8] 
    /*0000ae60*/ MOVW        R3, #6042                   @ 0x179a 
    /*0000ae64*/ STR         R7, [SP, #4] 
    /*0000ae68*/ MOV         R1, #15 
    /*0000ae6c*/ STR         R3, [SP] 
    /*0000ae70*/ MOVW        R2, #0                      @ .LC103 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3cc4] 
    /*0000ae74*/ LDR         R3, [PC, #168]              @ 0x000000000000af24 
    /*0000ae78*/ MOVT        R2, #0                      @ .LC103 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3cc4] 
    /*0000ae7c*/ MOV         R0, #3 
    /*0000ae80*/ MOVW        R9, #32777                  @ 0x8009 
    /*0000ae84*/ BL          0x000000000000AE84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ae88*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000ae8c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000ae90*/ MOVT        R9, #40975                  @ 0xa00f 
    /*0000ae94*/ BL          0x000000000000AE94          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ae98*/ B           VouReleaseChnFrame_xadd8
    VouReleaseChnFrame_xae9c:
    /*0000ae9c*/ MOV         R1, R5 
    /*0000aea0*/ MOV         R0, R7 
    /*0000aea4*/ BL          0x0000000000005468 
    /*0000aea8*/ SUBS        R9, R0, #0 
    /*0000aeac*/ BEQ         VouReleaseChnFrame_xad04
    /*0000aeb0*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000aeb4*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000aeb8*/ BL          0x000000000000AEB8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000aebc*/ MOV         R0, R9 
    /*0000aec0*/ ADD         SP, SP, #32 
    /*0000aec4*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouReleaseChnFrame_xaec8:
    /*0000aec8*/ MOV         R9, #65024                  @ 0xfe00 
    /*0000aecc*/ MOVT        R9, #65535                  @ 0xffff 
    /*0000aed0*/ B           VouReleaseChnFrame_xadd8
    VouReleaseChnFrame_xaed4:
    /*0000aed4*/ LDRD        R8, [R4, #120]              @ 0x78 
    /*0000aed8*/ MOVW        R3, #6050                   @ 0x17a2 
    /*0000aedc*/ LDR         IP, [R4, #328]              @ 0x148 
    /*0000aee0*/ MOV         R1, #15 
    /*0000aee4*/ STR         R3, [SP] 
    /*0000aee8*/ MOVW        R2, #0                      @ .LC104 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3d24] 
    /*0000aeec*/ STRD        R8, [SP, #16] 
    /*0000aef0*/ MOVT        R2, #0                      @ .LC104 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3d24] 
    /*0000aef4*/ STR         R5, [SP, #8] 
    /*0000aef8*/ MOV         R0, #3 
    /*0000aefc*/ STR         R7, [SP, #4] 
    /*0000af00*/ MOVW        R9, #32847                  @ 0x804f 
    /*0000af04*/ STR         IP, [SP, #12] 
    /*0000af08*/ MOVT        R9, #40975                  @ 0xa00f 
    /*0000af0c*/ LDR         R3, [PC, #16]               @ 0x000000000000af24 
    /*0000af10*/ BL          0x000000000000AF10          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000af14*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000af18*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000af1c*/ BL          0x000000000000AF1C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000af20*/ B           VouReleaseChnFrame_xadd8
    /*0000af24*/ ANDEQ       R0, R0, R8, ASR #13 
FUNC_END VouReleaseChnFrame


FUNC_BEGIN VouSetChnPause
    /*0000af28*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000af2c*/ SUB         SP, SP, #12 
    /*0000af30*/ MOVW        R3, #6118                   @ 0x17e6 
    /*0000af34*/ MOV         R1, #15 
    /*0000af38*/ STR         R3, [SP] 
    /*0000af3c*/ MOVW        R2, #0                      @ .LC106 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3df4] 
    /*0000af40*/ LDR         R3, [PC, #24]               @ 0x000000000000af60 
    /*0000af44*/ MOVT        R2, #0                      @ .LC106 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3df4] 
    /*0000af48*/ MOV         R0, #3 
    /*0000af4c*/ BL          0x000000000000AF4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000af50*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000af54*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0000af58*/ ADD         SP, SP, #12 
    /*0000af5c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000af60*/ LDRDEQ      R0, [R0], -IP 
FUNC_END VouSetChnPause


FUNC_BEGIN VouSetChnStep
    /*0000af64*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000af68*/ SUB         SP, SP, #12 
    /*0000af6c*/ MOVW        R3, #6150                   @ 0x1806 
    /*0000af70*/ MOV         R1, #15 
    /*0000af74*/ STR         R3, [SP] 
    /*0000af78*/ MOVW        R2, #0                      @ .LC107 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e38] 
    /*0000af7c*/ LDR         R3, [PC, #24]               @ 0x000000000000af9c 
    /*0000af80*/ MOVT        R2, #0                      @ .LC107 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e38] 
    /*0000af84*/ MOV         R0, #3 
    /*0000af88*/ BL          0x000000000000AF88          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000af8c*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000af90*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0000af94*/ ADD         SP, SP, #12 
    /*0000af98*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000af9c*/ ANDEQ       R0, R0, IP, ROR #13 
FUNC_END VouSetChnStep


FUNC_BEGIN VouSetChnResume
    /*0000afa0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000afa4*/ SUB         SP, SP, #12 
    /*0000afa8*/ MOVW        R3, #6177                   @ 0x1821 
    /*0000afac*/ MOV         R1, #15 
    /*0000afb0*/ STR         R3, [SP] 
    /*0000afb4*/ MOVW        R2, #0                      @ .LC108 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3e78] 
    /*0000afb8*/ LDR         R3, [PC, #24]               @ 0x000000000000afd8 
    /*0000afbc*/ MOVT        R2, #0                      @ .LC108 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3e78] 
    /*0000afc0*/ MOV         R0, #3 
    /*0000afc4*/ BL          0x000000000000AFC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000afc8*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000afcc*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0000afd0*/ ADD         SP, SP, #12 
    /*0000afd4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000afd8*/ STRDEQ      R0, [R0], -IP 
FUNC_END VouSetChnResume


FUNC_BEGIN VouSetChnRefresh
    /*0000afdc*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000afe0*/ SUB         SP, SP, #12 
    /*0000afe4*/ MOVW        R3, #6218                   @ 0x184a 
    /*0000afe8*/ MOV         R1, #15 
    /*0000afec*/ STR         R3, [SP] 
    /*0000aff0*/ MOVW        R2, #0                      @ .LC109 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3ebc] 
    /*0000aff4*/ LDR         R3, [PC, #24]               @ 0x000000000000b014 
    /*0000aff8*/ MOVT        R2, #0                      @ .LC109 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3ebc] 
    /*0000affc*/ MOV         R0, #3 
    /*0000b000*/ BL          0x000000000000B000          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b004*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000b008*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0000b00c*/ ADD         SP, SP, #12 
    /*0000b010*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000b014*/ ANDEQ       R0, R0, IP, LSL #14 
FUNC_END VouSetChnRefresh


FUNC_BEGIN VouShowChnBatch
    /*0000b018*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000b01c*/ SUB         SP, SP, #24 
    /*0000b020*/ MOV         R7, R1 
    /*0000b024*/ MOV         R4, R0 
    /*0000b028*/ BL          0x000000000000B028          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000b02c*/ CMP         R0, #0 
    /*0000b030*/ BNE         VouShowChnBatch_xb134
    /*0000b034*/ MOV         R1, R7 
    /*0000b038*/ MOV         R0, R4 
    /*0000b03c*/ BL          0x000000000000B03C          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000b040*/ CMP         R0, #0 
    /*0000b044*/ BNE         VouShowChnBatch_xb140
    /*0000b048*/ ADD         R2, R7, R4, LSL #2 
    /*0000b04c*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000b050*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000b054*/ LDR         R5, [R3, R2, LSL #2] 
    /*0000b058*/ MOV         R0, R5 
    /*0000b05c*/ BL          0x000000000000B05C          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000b060*/ SUBS        R6, R0, #0 
    /*0000b064*/ BNE         VouShowChnBatch_xb180
    /*0000b068*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000b06c*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000b070*/ MUL         R3, R3, R4 
    /*0000b074*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000b078*/ ADD         R1, R2, R3 
    /*0000b07c*/ LDR         R1, [R1, #184]              @ 0xb8 
    /*0000b080*/ CMP         R1, #1 
    /*0000b084*/ BEQ         VouShowChnBatch_xb0e0
    /*0000b088*/ LDR         R9, [R2, R3] 
    /*0000b08c*/ CMP         R9, #1 
    /*0000b090*/ BNE         VouShowChnBatch_xb14c
    /*0000b094*/ ADD         R8, SP, #24 
    /*0000b098*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000b09c*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000b0a0*/ STR         R6, [R8, #-4]! 
    /*0000b0a4*/ MOV         R1, R8 
    /*0000b0a8*/ BL          0x000000000000B0A8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000b0ac*/ LDR         R3, [R5, #16] 
    /*0000b0b0*/ LDR         SL, [SP, #20] 
    /*0000b0b4*/ CMP         R3, #1 
    /*0000b0b8*/ BEQ         VouShowChnBatch_xb0ec
    /*0000b0bc*/ ADD         R3, R5, #8192               @ 0x2000 
    /*0000b0c0*/ MOV         R2, #2 
    /*0000b0c4*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000b0c8*/ MOV         R1, R8 
    /*0000b0cc*/ STR         R2, [R3, #1112]             @ 0x458 
    /*0000b0d0*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000b0d4*/ STR         R9, [R5, #16] 
    /*0000b0d8*/ STR         SL, [SP, #20] 
    /*0000b0dc*/ BL          0x000000000000B0DC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VouShowChnBatch_xb0e0:
    /*0000b0e0*/ MOV         R0, R6 
    /*0000b0e4*/ ADD         SP, SP, #24 
    /*0000b0e8*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouShowChnBatch_xb0ec:
    /*0000b0ec*/ STR         R7, [SP, #8] 
    /*0000b0f0*/ MOVW        R3, #6266                   @ 0x187a 
    /*0000b0f4*/ STR         R4, [SP, #4] 
    /*0000b0f8*/ MOV         R1, #15 
    /*0000b0fc*/ STR         R3, [SP] 
    /*0000b100*/ MOVW        R2, #0                      @ .LC111 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f50] 
    /*0000b104*/ LDR         R3, [PC, #128]              @ 0x000000000000b18c 
    /*0000b108*/ MOVT        R2, #0                      @ .LC111 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f50] 
    /*0000b10c*/ MOV         R0, #6 
    /*0000b110*/ BL          0x000000000000B110          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b114*/ MOV         R1, R8 
    /*0000b118*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000b11c*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000b120*/ STR         SL, [SP, #20] 
    /*0000b124*/ BL          0x000000000000B124          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b128*/ MOV         R0, R6 
    /*0000b12c*/ ADD         SP, SP, #24 
    /*0000b130*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouShowChnBatch_xb134:
    /*0000b134*/ MOVW        R6, #32877                  @ 0x806d 
    /*0000b138*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000b13c*/ B           VouShowChnBatch_xb0e0
    VouShowChnBatch_xb140:
    /*0000b140*/ MOVW        R6, #32770                  @ 0x8002 
    /*0000b144*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000b148*/ B           VouShowChnBatch_xb0e0
    VouShowChnBatch_xb14c:
    /*0000b14c*/ MOVW        R3, #6258                   @ 0x1872 
    /*0000b150*/ STR         R7, [SP, #8] 
    /*0000b154*/ STR         R3, [SP] 
    /*0000b158*/ MOVW        R2, #0                      @ .LC110 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f00] 
    /*0000b15c*/ STR         R4, [SP, #4] 
    /*0000b160*/ MOVT        R2, #0                      @ .LC110 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f00] 
    /*0000b164*/ LDR         R3, [PC, #32]               @ 0x000000000000b18c 
    /*0000b168*/ MOV         R1, #15 
    /*0000b16c*/ MOV         R0, #3 
    /*0000b170*/ MOVW        R6, #32837                  @ 0x8045 
    /*0000b174*/ BL          0x000000000000B174          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b178*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000b17c*/ B           VouShowChnBatch_xb0e0
    VouShowChnBatch_xb180:
    /*0000b180*/ MOVW        R6, #32774                  @ 0x8006 
    /*0000b184*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000b188*/ B           VouShowChnBatch_xb0e0
    /*0000b18c*/ ANDEQ       R0, R0, R0, LSR #14 
FUNC_END VouShowChnBatch


FUNC_BEGIN VouShowChn
    /*0000b190*/ PUSH        {R4, R5, R6, LR} 
    /*0000b194*/ MOV         R5, R1 
    /*0000b198*/ MOV         R4, R0 
    /*0000b19c*/ BL          0x000000000000B19C          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000b1a0*/ CMP         R0, #0 
    /*0000b1a4*/ BNE         VouShowChn_xb22c
    /*0000b1a8*/ MOV         R1, R5 
    /*0000b1ac*/ MOV         R0, R4 
    /*0000b1b0*/ BL          0x000000000000B1B0          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000b1b4*/ CMP         R0, #0 
    /*0000b1b8*/ BNE         VouShowChn_xb238
    /*0000b1bc*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000b1c0*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000b1c4*/ BL          0x000000000000B1C4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000b1c8*/ CMP         R0, #0 
    /*0000b1cc*/ BNE         VouShowChn_xb244
    /*0000b1d0*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000b1d4*/ ADD         R2, R5, R4, LSL #2 
    /*0000b1d8*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000b1dc*/ LDR         R3, [R3, R2, LSL #2] 
    /*0000b1e0*/ CMP         R3, #0 
    /*0000b1e4*/ BEQ         VouShowChn_xb250
    VouShowChn_xb1e8:
    /*0000b1e8*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000b1ec*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000b1f0*/ BL          0x000000000000B1F0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000b1f4*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000b1f8*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000b1fc*/ BL          0x000000000000B1FC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000b200*/ CMP         R0, #0 
    /*0000b204*/ BNE         VouShowChn_xb244
    /*0000b208*/ MOV         R1, R5 
    /*0000b20c*/ MOV         R0, R4 
    /*0000b210*/ BL          0x000000000000B210          @ VouShowChnBatch [R_ARM_CALL: .text+0xb018] 
    /*0000b214*/ MOV         R6, R0 
    /*0000b218*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000b21c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000b220*/ BL          0x000000000000B220          @ osal_up [R_ARM_CALL: +0x0] 
    VouShowChn_xb224:
    /*0000b224*/ MOV         R0, R6 
    /*0000b228*/ POP         {R4, R5, R6, PC} 
    VouShowChn_xb22c:
    /*0000b22c*/ MOVW        R6, #32877                  @ 0x806d 
    /*0000b230*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000b234*/ B           VouShowChn_xb224
    VouShowChn_xb238:
    /*0000b238*/ MOVW        R6, #32770                  @ 0x8002 
    /*0000b23c*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000b240*/ B           VouShowChn_xb224
    VouShowChn_xb244:
    /*0000b244*/ MOV         R6, #65024                  @ 0xfe00 
    /*0000b248*/ MOVT        R6, #65535                  @ 0xffff 
    /*0000b24c*/ B           VouShowChn_xb224
    VouShowChn_xb250:
    /*0000b250*/ MOV         R1, R5 
    /*0000b254*/ MOV         R0, R4 
    /*0000b258*/ BL          0x0000000000005468 
    /*0000b25c*/ SUBS        R6, R0, #0 
    /*0000b260*/ BEQ         VouShowChn_xb1e8
    /*0000b264*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000b268*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000b26c*/ BL          0x000000000000B26C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000b270*/ MOV         R0, R6 
    /*0000b274*/ POP         {R4, R5, R6, PC} 
FUNC_END VouShowChn


FUNC_BEGIN VouHideChnBatch
    /*0000b278*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000b27c*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000b280*/ MOV         R3, #0 
    /*0000b284*/ MOV         FP, R1 
    /*0000b288*/ MOV         R9, R2 
    /*0000b28c*/ MOV         R8, R0 
    /*0000b290*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000b294*/ STR         R3, [SP, #48]               @ 0x30 
    /*0000b298*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000b29c*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0000b2a0*/ BL          0x000000000000B2A0          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000b2a4*/ CMP         R0, #0 
    /*0000b2a8*/ BNE         VouHideChnBatch_xb684
    /*0000b2ac*/ MOV         R1, FP 
    /*0000b2b0*/ MOV         R0, R8 
    /*0000b2b4*/ BL          0x000000000000B2B4          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000b2b8*/ CMP         R0, #0 
    /*0000b2bc*/ BNE         VouHideChnBatch_xb694
    /*0000b2c0*/ MOVW        R6, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000b2c4*/ ADD         R3, FP, R8, LSL #2 
    /*0000b2c8*/ MOVT        R6, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000b2cc*/ LDR         R3, [R6, R3, LSL #2] 
    /*0000b2d0*/ MOV         R0, R3 
    /*0000b2d4*/ STR         R3, [SP, #24] 
    /*0000b2d8*/ BL          0x000000000000B2D8          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000b2dc*/ SUBS        R3, R0, #0 
    /*0000b2e0*/ STR         R3, [SP, #32] 
    /*0000b2e4*/ BNE         VouHideChnBatch_xb6ec
    /*0000b2e8*/ MOVW        R3, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000b2ec*/ MOVT        R3, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000b2f0*/ MOVW        R4, #12192                  @ 0x2fa0 
    /*0000b2f4*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000b2f8*/ MLA         R4, R4, R8, R3 
    /*0000b2fc*/ LDR         R3, [R4, #184]              @ 0xb8 
    /*0000b300*/ CMP         R3, #1 
    /*0000b304*/ BEQ         VouHideChnBatch_xb474
    /*0000b308*/ LDR         R3, [SP, #24] 
    /*0000b30c*/ ADD         R7, SP, #64                 @ 0x40 
    /*0000b310*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000b314*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000b318*/ ADD         R3, R3, #8192               @ 0x2000 
    /*0000b31c*/ STR         R3, [SP, #28] 
    /*0000b320*/ MOV         R5, R3 
    /*0000b324*/ LDR         R3, [SP, #32] 
    /*0000b328*/ STR         R3, [R7, #-20]!             @ 0xffffffec 
    /*0000b32c*/ MOV         R1, R7 
    /*0000b330*/ BL          0x000000000000B330          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000b334*/ MOV         R3, #1 
    /*0000b338*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000b33c*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000b340*/ STR         R3, [R5, #1320]             @ 0x528 
    /*0000b344*/ LDR         R3, [R4, #192]              @ 0xc0 
    /*0000b348*/ CMP         R3, #0 
    /*0000b34c*/ BNE         VouHideChnBatch_xb5e8
    /*0000b350*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000b354*/ MOV         R1, R7 
    /*0000b358*/ STR         R2, [SP, #44]               @ 0x2c 
    /*0000b35c*/ BL          0x000000000000B35C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b360*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000b364*/ STR         R3, [SP, #20] 
    VouHideChnBatch_xb368:
    /*0000b368*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000b36c*/ MOVW        SL, #12192                  @ 0x2fa0 
    /*0000b370*/ MLA         SL, SL, R8, R3 
    VouHideChnBatch_xb374:
    /*0000b374*/ LDR         R3, [SP, #24] 
    /*0000b378*/ MOVW        R4, #0                      @ VO_WaitChnQrySdCallBack [R_ARM_MOVW_ABS_NC: .text+0x4c3c] 
    /*0000b37c*/ MOV         R0, FP 
    /*0000b380*/ ADD         R5, R3, #9472               @ 0x2500 
    /*0000b384*/ MOVT        R4, #0                      @ VO_WaitChnQrySdCallBack [R_ARM_MOVT_ABS: .text+0x4c3c] 
    /*0000b388*/ ADD         R5, R5, #48                 @ 0x30 
    /*0000b38c*/ MOV         R3, R8 
    /*0000b390*/ MOV         LR, #4000                   @ 0xfa0 
    /*0000b394*/ STR         R8, [SP, #48]               @ 0x30 
    /*0000b398*/ STR         FP, [SP, #52]               @ 0x34 
    /*0000b39c*/ STR         R7, [SP, #16] 
    /*0000b3a0*/ B           VouHideChnBatch_xb3c0
    VouHideChnBatch_xb3a4:
    /*0000b3a4*/ BL          0x000000000000B3A4          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*0000b3a8*/ ADD         R3, R0, #512                @ 0x200 
    /*0000b3ac*/ MOV         LR, R0 
    /*0000b3b0*/ BICS        R3, R3, #512                @ 0x200 
    /*0000b3b4*/ BEQ         VouHideChnBatch_xb48c
    /*0000b3b8*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0000b3bc*/ LDR         R0, [SP, #52]               @ 0x34 
    VouHideChnBatch_xb3c0:
    /*0000b3c0*/ ADD         R0, R0, R3, LSL #2 
    /*0000b3c4*/ ADD         R2, SP, #48                 @ 0x30 
    /*0000b3c8*/ MOV         R3, LR 
    /*0000b3cc*/ MOV         R1, R4 
    /*0000b3d0*/ LDR         IP, [R6, R0, LSL #2] 
    /*0000b3d4*/ MOV         R0, R5 
    /*0000b3d8*/ ADD         IP, IP, #8192               @ 0x2000 
    /*0000b3dc*/ LDR         R7, [IP, #1316]             @ 0x524 
    /*0000b3e0*/ CMP         R7, #0 
    /*0000b3e4*/ BEQ         VouHideChnBatch_xb3a4
    /*0000b3e8*/ LDR         IP, [IP, #1376]             @ 0x560 
    /*0000b3ec*/ CMP         IP, #0 
    /*0000b3f0*/ BNE         VouHideChnBatch_xb3a4
    /*0000b3f4*/ MOV         R0, LR 
    /*0000b3f8*/ LDR         R7, [SP, #16] 
    /*0000b3fc*/ BL          0x000000000000B3FC          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*0000b400*/ MOV         LR, R0 
    /*0000b404*/ CMP         LR, #0 
    /*0000b408*/ BLT         VouHideChnBatch_xb498
    VouHideChnBatch_xb40c:
    /*0000b40c*/ BEQ         VouHideChnBatch_xb624
    /*0000b410*/ LDR         R3, [SL, #192]              @ 0xc0 
    /*0000b414*/ CMP         R3, #0 
    /*0000b418*/ BNE         VouHideChnBatch_xb4b0
    /*0000b41c*/ LDR         R3, [SP, #20] 
    /*0000b420*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000b424*/ MOV         R1, R7 
    /*0000b428*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000b42c*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000b430*/ BL          0x000000000000B430          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000b434*/ LDR         R3, [SP, #28] 
    /*0000b438*/ LDR         R4, [SP, #44]               @ 0x2c 
    /*0000b43c*/ LDR         R3, [R3, #1316]             @ 0x524 
    /*0000b440*/ CMP         R3, #0 
    /*0000b444*/ BNE         VouHideChnBatch_xb4fc
    VouHideChnBatch_xb448:
    /*0000b448*/ LDR         R3, [SL, #192]              @ 0xc0 
    /*0000b44c*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000b450*/ CMP         R3, #0 
    /*0000b454*/ BNE         VouHideChnBatch_xb5ac
    /*0000b458*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000b45c*/ MOV         R1, R7 
    /*0000b460*/ STR         R4, [SP, #44]               @ 0x2c 
    /*0000b464*/ BL          0x000000000000B464          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b468*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000b46c*/ STR         R3, [SP, #20] 
    /*0000b470*/ B           VouHideChnBatch_xb374
    VouHideChnBatch_xb474:
    /*0000b474*/ LDR         R3, [R4, #180]              @ 0xb4 
    /*0000b478*/ CMP         R3, #1 
    /*0000b47c*/ BEQ         VouHideChnBatch_xb66c
    VouHideChnBatch_xb480:
    /*0000b480*/ LDR         R0, [SP, #32] 
    /*0000b484*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000b488*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouHideChnBatch_xb48c:
    /*0000b48c*/ CMP         LR, #0 
    /*0000b490*/ LDR         R7, [SP, #16] 
    /*0000b494*/ BGE         VouHideChnBatch_xb40c
    VouHideChnBatch_xb498:
    /*0000b498*/ MOV         R3, #65024                  @ 0xfe00 
    /*0000b49c*/ MOVT        R3, #65535                  @ 0xffff 
    /*0000b4a0*/ STR         R3, [SP, #32] 
    /*0000b4a4*/ LDR         R0, [SP, #32] 
    /*0000b4a8*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000b4ac*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouHideChnBatch_xb4b0:
    /*0000b4b0*/ LDR         R3, [R9] 
    /*0000b4b4*/ MOV         R1, R7 
    /*0000b4b8*/ MOVW        R0, #0                      @ g_VouListLock [R_ARM_MOVW_ABS_NC: .bss+0x30a0] 
    /*0000b4bc*/ MOVT        R0, #0                      @ g_VouListLock [R_ARM_MOVT_ABS: .bss+0x30a0] 
    /*0000b4c0*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000b4c4*/ BL          0x000000000000B4C4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000b4c8*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000b4cc*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000b4d0*/ LDR         R2, [SP, #20] 
    /*0000b4d4*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000b4d8*/ MOV         R1, R7 
    /*0000b4dc*/ STR         R3, [R9] 
    /*0000b4e0*/ STR         R2, [SP, #44]               @ 0x2c 
    /*0000b4e4*/ BL          0x000000000000B4E4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000b4e8*/ LDR         R3, [SP, #28] 
    /*0000b4ec*/ LDR         R4, [SP, #44]               @ 0x2c 
    /*0000b4f0*/ LDR         R3, [R3, #1316]             @ 0x524 
    /*0000b4f4*/ CMP         R3, #0 
    /*0000b4f8*/ BEQ         VouHideChnBatch_xb448
    VouHideChnBatch_xb4fc:
    /*0000b4fc*/ LDR         R3, [SP, #28] 
    /*0000b500*/ MOV         R2, #0 
    /*0000b504*/ STR         R2, [R3, #1320]             @ 0x528 
    /*0000b508*/ LDR         R3, [SP, #24] 
    /*0000b50c*/ LDR         R3, [R3, #16] 
    /*0000b510*/ CMP         R3, R2 
    /*0000b514*/ BEQ         VouHideChnBatch_xb6fc
    /*0000b518*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000b51c*/ LDR         R1, [SP, #24] 
    /*0000b520*/ MUL         R3, R3, R8 
    /*0000b524*/ STR         R2, [R1, #16] 
    /*0000b528*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0000b52c*/ ADD         R2, R2, R3 
    /*0000b530*/ LDR         R2, [R2, #28] 
    /*0000b534*/ CMP         R2, #0 
    /*0000b538*/ BEQ         VouHideChnBatch_xb570
    /*0000b53c*/ ADD         R0, R2, #2944               @ 0xb80 
    /*0000b540*/ MOVW        R2, #3048                   @ 0xbe8 
    /*0000b544*/ ADD         R0, R0, #5 
    /*0000b548*/ ADD         R3, R3, #11776              @ 0x2e00 
    /*0000b54c*/ ADD         R3, R3, #20 
    /*0000b550*/ MOV         R1, #1 
    /*0000b554*/ MLA         R2, R2, R8, R0 
    /*0000b558*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000b55c*/ ADD         R3, R0, R3 
    /*0000b560*/ ADD         R2, R0, R2, LSL #2 
    VouHideChnBatch_xb564:
    /*0000b564*/ STR         R1, [R3, #4]! 
    /*0000b568*/ CMP         R3, R2 
    /*0000b56c*/ BNE         VouHideChnBatch_xb564
    VouHideChnBatch_xb570:
    /*0000b570*/ MOV         R0, R8 
    /*0000b574*/ BL          0x000000000000B574          @ VOU_DRV_IsLayerSizeLimit [R_ARM_CALL: .text+0x19264] 
    /*0000b578*/ CMP         R0, #1 
    /*0000b57c*/ BEQ         VouHideChnBatch_xb6a4
    VouHideChnBatch_xb580:
    /*0000b580*/ LDR         R2, [SP, #28] 
    /*0000b584*/ MOV         R3, #0 
    /*0000b588*/ MOV         R1, R7 
    /*0000b58c*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000b590*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000b594*/ STR         R3, [R2, #1112]             @ 0x458 
    /*0000b598*/ STR         R4, [SP, #44]               @ 0x2c 
    /*0000b59c*/ BL          0x000000000000B59C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b5a0*/ LDR         R0, [SP, #32] 
    /*0000b5a4*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000b5a8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouHideChnBatch_xb5ac:
    /*0000b5ac*/ MOV         R1, R7 
    /*0000b5b0*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000b5b4*/ STR         R4, [SP, #44]               @ 0x2c 
    /*0000b5b8*/ BL          0x000000000000B5B8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b5bc*/ LDR         R3, [R9] 
    /*0000b5c0*/ MOVW        R0, #0                      @ g_VouListLock [R_ARM_MOVW_ABS_NC: .bss+0x30a0] 
    /*0000b5c4*/ MOV         R1, R7 
    /*0000b5c8*/ MOVT        R0, #0                      @ g_VouListLock [R_ARM_MOVT_ABS: .bss+0x30a0] 
    /*0000b5cc*/ LDR         R4, [SP, #44]               @ 0x2c 
    /*0000b5d0*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000b5d4*/ BL          0x000000000000B5D4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b5d8*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000b5dc*/ STR         R4, [SP, #20] 
    /*0000b5e0*/ STR         R3, [R9] 
    /*0000b5e4*/ B           VouHideChnBatch_xb374
    VouHideChnBatch_xb5e8:
    /*0000b5e8*/ MOV         R1, R7 
    /*0000b5ec*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000b5f0*/ STR         R2, [SP, #44]               @ 0x2c 
    /*0000b5f4*/ BL          0x000000000000B5F4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b5f8*/ LDR         R3, [R9] 
    /*0000b5fc*/ MOVW        R0, #0                      @ g_VouListLock [R_ARM_MOVW_ABS_NC: .bss+0x30a0] 
    /*0000b600*/ MOV         R1, R7 
    /*0000b604*/ MOVT        R0, #0                      @ g_VouListLock [R_ARM_MOVT_ABS: .bss+0x30a0] 
    /*0000b608*/ LDR         R4, [SP, #44]               @ 0x2c 
    /*0000b60c*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000b610*/ BL          0x000000000000B610          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b614*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000b618*/ STR         R4, [SP, #20] 
    /*0000b61c*/ STR         R3, [R9] 
    /*0000b620*/ B           VouHideChnBatch_xb368
    VouHideChnBatch_xb624:
    /*0000b624*/ MOVW        IP, #32786                  @ 0x8012 
    /*0000b628*/ STR         FP, [SP, #8] 
    /*0000b62c*/ MOVW        R3, #6430                   @ 0x191e 
    /*0000b630*/ STR         R8, [SP, #4] 
    /*0000b634*/ STR         R3, [SP] 
    /*0000b638*/ MOV         R1, #15 
    /*0000b63c*/ LDR         R3, [PC, #248]              @ 0x000000000000b73c 
    /*0000b640*/ MOVW        R2, #0                      @ .LC112 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f98] 
    /*0000b644*/ MOV         R0, #3 
    /*0000b648*/ MOVT        R2, #0                      @ .LC112 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f98] 
    /*0000b64c*/ MOV         R4, IP 
    /*0000b650*/ BL          0x000000000000B650          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b654*/ MOV         IP, R4 
    /*0000b658*/ MOVT        IP, #40975                  @ 0xa00f 
    /*0000b65c*/ STR         IP, [SP, #32] 
    /*0000b660*/ LDR         R0, [SP, #32] 
    /*0000b664*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000b668*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouHideChnBatch_xb66c:
    /*0000b66c*/ LDR         R3, [SP, #24] 
    /*0000b670*/ ADD         R3, R3, #8192               @ 0x2000 
    /*0000b674*/ STR         R0, [R3, #1068]             @ 0x42c 
    /*0000b678*/ LDR         R0, [SP, #32] 
    /*0000b67c*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000b680*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouHideChnBatch_xb684:
    /*0000b684*/ MOVW        R3, #32877                  @ 0x806d 
    /*0000b688*/ MOVT        R3, #40975                  @ 0xa00f 
    /*0000b68c*/ STR         R3, [SP, #32] 
    /*0000b690*/ B           VouHideChnBatch_xb480
    VouHideChnBatch_xb694:
    /*0000b694*/ MOVW        R3, #32770                  @ 0x8002 
    /*0000b698*/ MOVT        R3, #40975                  @ 0xa00f 
    /*0000b69c*/ STR         R3, [SP, #32] 
    /*0000b6a0*/ B           VouHideChnBatch_xb480
    VouHideChnBatch_xb6a4:
    /*0000b6a4*/ LDR         R3, [SP, #24] 
    /*0000b6a8*/ LDR         R3, [R3, #4] 
    /*0000b6ac*/ CMP         R3, #1 
    /*0000b6b0*/ BNE         VouHideChnBatch_xb580
    /*0000b6b4*/ LDR         R3, [SP, #28] 
    /*0000b6b8*/ LDR         R3, [R3, #1060]             @ 0x424 
    /*0000b6bc*/ CMP         R3, #0 
    /*0000b6c0*/ BNE         VouHideChnBatch_xb580
    /*0000b6c4*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000b6c8*/ MOVW        R2, #12192                  @ 0x2fa0 
    /*0000b6cc*/ LDR         R1, [SP, #24] 
    /*0000b6d0*/ MLA         R8, R2, R8, R0 
    /*0000b6d4*/ LDR         R3, [R1, #76]               @ 0x4c 
    /*0000b6d8*/ LDR         R2, [R1, #80]               @ 0x50 
    /*0000b6dc*/ LDR         R1, [R8, #64]               @ 0x40 
    /*0000b6e0*/ MLS         R3, R2, R3, R1 
    /*0000b6e4*/ STR         R3, [R8, #64]               @ 0x40 
    /*0000b6e8*/ B           VouHideChnBatch_xb580
    VouHideChnBatch_xb6ec:
    /*0000b6ec*/ MOVW        R3, #32774                  @ 0x8006 
    /*0000b6f0*/ MOVT        R3, #40975                  @ 0xa00f 
    /*0000b6f4*/ STR         R3, [SP, #32] 
    /*0000b6f8*/ B           VouHideChnBatch_xb480
    VouHideChnBatch_xb6fc:
    /*0000b6fc*/ STR         FP, [SP, #8] 
    /*0000b700*/ MOVW        R3, #6465                   @ 0x1941 
    /*0000b704*/ STR         R8, [SP, #4] 
    /*0000b708*/ MOV         R1, #15 
    /*0000b70c*/ STR         R3, [SP] 
    /*0000b710*/ MOVW        R2, #0                      @ .LC113 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3fe8] 
    /*0000b714*/ LDR         R3, [PC, #32]               @ 0x000000000000b73c 
    /*0000b718*/ MOVT        R2, #0                      @ .LC113 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3fe8] 
    /*0000b71c*/ MOV         R0, #6 
    /*0000b720*/ BL          0x000000000000B720          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000b724*/ MOV         R1, R7 
    /*0000b728*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000b72c*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000b730*/ STR         R4, [SP, #44]               @ 0x2c 
    /*0000b734*/ BL          0x000000000000B734          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b738*/ B           VouHideChnBatch_xb480
    /*0000b73c*/ ANDEQ       R0, R0, R0, LSR R7 
FUNC_END VouHideChnBatch


FUNC_BEGIN VouHideChn
    /*0000b740*/ PUSH        {R4, R5, R6, LR} 
    /*0000b744*/ SUB         SP, SP, #8 
    /*0000b748*/ MOV         R3, #0 
    /*0000b74c*/ MOV         R5, R1 
    /*0000b750*/ MOV         R4, R0 
    /*0000b754*/ STR         R3, [SP, #4] 
    /*0000b758*/ BL          0x000000000000B758          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000b75c*/ CMP         R0, #0 
    /*0000b760*/ BNE         VouHideChn_xb7f0
    /*0000b764*/ MOV         R1, R5 
    /*0000b768*/ MOV         R0, R4 
    /*0000b76c*/ BL          0x000000000000B76C          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000b770*/ CMP         R0, #0 
    /*0000b774*/ BNE         VouHideChn_xb7fc
    /*0000b778*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000b77c*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000b780*/ BL          0x000000000000B780          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000b784*/ CMP         R0, #0 
    /*0000b788*/ BNE         VouHideChn_xb808
    /*0000b78c*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000b790*/ ADD         R2, R5, R4, LSL #2 
    /*0000b794*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000b798*/ LDR         R3, [R3, R2, LSL #2] 
    /*0000b79c*/ CMP         R3, #0 
    /*0000b7a0*/ BEQ         VouHideChn_xb814
    VouHideChn_xb7a4:
    /*0000b7a4*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000b7a8*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000b7ac*/ BL          0x000000000000B7AC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000b7b0*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000b7b4*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000b7b8*/ BL          0x000000000000B7B8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000b7bc*/ CMP         R0, #0 
    /*0000b7c0*/ BNE         VouHideChn_xb808
    /*0000b7c4*/ MOV         R1, R5 
    /*0000b7c8*/ MOV         R0, R4 
    /*0000b7cc*/ ADD         R2, SP, #4 
    /*0000b7d0*/ BL          0x000000000000B7D0          @ VouHideChnBatch [R_ARM_CALL: .text+0xb278] 
    /*0000b7d4*/ MOV         R6, R0 
    /*0000b7d8*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000b7dc*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000b7e0*/ BL          0x000000000000B7E0          @ osal_up [R_ARM_CALL: +0x0] 
    VouHideChn_xb7e4:
    /*0000b7e4*/ MOV         R0, R6 
    /*0000b7e8*/ ADD         SP, SP, #8 
    /*0000b7ec*/ POP         {R4, R5, R6, PC} 
    VouHideChn_xb7f0:
    /*0000b7f0*/ MOVW        R6, #32877                  @ 0x806d 
    /*0000b7f4*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000b7f8*/ B           VouHideChn_xb7e4
    VouHideChn_xb7fc:
    /*0000b7fc*/ MOVW        R6, #32770                  @ 0x8002 
    /*0000b800*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000b804*/ B           VouHideChn_xb7e4
    VouHideChn_xb808:
    /*0000b808*/ MOV         R6, #65024                  @ 0xfe00 
    /*0000b80c*/ MOVT        R6, #65535                  @ 0xffff 
    /*0000b810*/ B           VouHideChn_xb7e4
    VouHideChn_xb814:
    /*0000b814*/ MOV         R1, R5 
    /*0000b818*/ MOV         R0, R4 
    /*0000b81c*/ BL          0x0000000000005468 
    /*0000b820*/ SUBS        R6, R0, #0 
    /*0000b824*/ BEQ         VouHideChn_xb7a4
    /*0000b828*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000b82c*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000b830*/ BL          0x000000000000B830          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000b834*/ MOV         R0, R6 
    /*0000b838*/ ADD         SP, SP, #8 
    /*0000b83c*/ POP         {R4, R5, R6, PC} 
FUNC_END VouHideChn


FUNC_BEGIN VouSetZoomInWindow
    /*0000b840*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000b844*/ SUB         SP, SP, #44                 @ 0x2c 
    /*0000b848*/ MOV         R7, R1 
    /*0000b84c*/ MOV         R4, R2 
    /*0000b850*/ MOV         R5, R0 
    /*0000b854*/ BL          0x000000000000B854          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000b858*/ CMP         R0, #0 
    /*0000b85c*/ BNE         VouSetZoomInWindow_xbaa4
    /*0000b860*/ MOV         R1, R7 
    /*0000b864*/ MOV         R0, R5 
    /*0000b868*/ BL          0x000000000000B868          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000b86c*/ CMP         R0, #0 
    /*0000b870*/ BNE         VouSetZoomInWindow_xbab0
    /*0000b874*/ MOV         R0, R4 
    /*0000b878*/ BL          0x000000000000B878          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000b87c*/ SUBS        R8, R0, #0 
    /*0000b880*/ BNE         VouSetZoomInWindow_xbabc
    /*0000b884*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000b888*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000b88c*/ BL          0x000000000000B88C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000b890*/ CMP         R0, #0 
    /*0000b894*/ BNE         VouSetZoomInWindow_xbb48
    /*0000b898*/ LSL         R9, R5, #2 
    /*0000b89c*/ MOVW        R6, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000b8a0*/ ADD         R3, R9, R7 
    /*0000b8a4*/ MOVT        R6, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000b8a8*/ LDR         R3, [R6, R3, LSL #2] 
    /*0000b8ac*/ CMP         R3, #0 
    /*0000b8b0*/ BEQ         VouSetZoomInWindow_xbb18
    VouSetZoomInWindow_xb8b4:
    /*0000b8b4*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000b8b8*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000b8bc*/ BL          0x000000000000B8BC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000b8c0*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000b8c4*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000b8c8*/ BL          0x000000000000B8C8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000b8cc*/ CMP         R0, #0 
    /*0000b8d0*/ BNE         VouSetZoomInWindow_xbb48
    /*0000b8d4*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000b8d8*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000b8dc*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000b8e0*/ MLA         R3, R3, R5, R2 
    /*0000b8e4*/ LDR         R2, [R3, #4] 
    /*0000b8e8*/ CMP         R2, #1 
    /*0000b8ec*/ BNE         VouSetZoomInWindow_xbadc
    /*0000b8f0*/ LDR         R3, [R3, #28] 
    /*0000b8f4*/ CMP         R3, #0 
    /*0000b8f8*/ BEQ         VouSetZoomInWindow_xbbcc
    /*0000b8fc*/ LDR         R3, [R4] 
    /*0000b900*/ CMP         R3, #0 
    /*0000b904*/ BEQ         VouSetZoomInWindow_xb9d0
    /*0000b908*/ CMP         R3, #1 
    /*0000b90c*/ BNE         VouSetZoomInWindow_xbb88
    /*0000b910*/ LDR         R3, [R4, #4] 
    /*0000b914*/ LDR         R1, [R4, #8] 
    /*0000b918*/ CMP         R3, #1000                   @ 0x3e8 
    /*0000b91c*/ LDR         R2, [R4, #12] 
    /*0000b920*/ LDR         R0, [R4, #16] 
    /*0000b924*/ BHI         VouSetZoomInWindow_xbb54
    /*0000b928*/ CMP         R1, #1000                   @ 0x3e8 
    /*0000b92c*/ BHI         VouSetZoomInWindow_xbb54
    /*0000b930*/ CMP         R2, #1000                   @ 0x3e8 
    /*0000b934*/ BHI         VouSetZoomInWindow_xbb54
    /*0000b938*/ CMP         R0, #1000                   @ 0x3e8 
    /*0000b93c*/ BHI         VouSetZoomInWindow_xbb54
    VouSetZoomInWindow_xb940:
    /*0000b940*/ ADD         R7, R9, R7 
    /*0000b944*/ ADD         R5, SP, #40                 @ 0x28 
    /*0000b948*/ MOV         R3, #0 
    /*0000b94c*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000b950*/ LDR         R6, [R6, R7, LSL #2] 
    /*0000b954*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000b958*/ STR         R3, [R5, #-4]! 
    /*0000b95c*/ MOV         R1, R5 
    /*0000b960*/ BL          0x000000000000B960          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000b964*/ ADD         R0, R6, #236                @ 0xec 
    /*0000b968*/ MOV         R2, #20 
    /*0000b96c*/ MOV         R1, R4 
    /*0000b970*/ LDR         R7, [SP, #36]               @ 0x24 
    /*0000b974*/ BL          0x000000000000B974          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000b978*/ LDR         R3, [R4] 
    /*0000b97c*/ CMP         R3, #0 
    /*0000b980*/ BNE         VouSetZoomInWindow_xba74
    /*0000b984*/ LDR         R3, [R4, #12] 
    /*0000b988*/ CMP         R3, #0 
    /*0000b98c*/ BEQ         VouSetZoomInWindow_xb99c
    /*0000b990*/ LDR         R3, [R4, #16] 
    /*0000b994*/ CMP         R3, #0 
    /*0000b998*/ BNE         VouSetZoomInWindow_xbac8
    VouSetZoomInWindow_xb99c:
    /*0000b99c*/ MOV         R3, #0 
    /*0000b9a0*/ STR         R3, [R6, #256]              @ 0x100 
    VouSetZoomInWindow_xb9a4:
    /*0000b9a4*/ MOV         R1, R5 
    /*0000b9a8*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000b9ac*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000b9b0*/ STR         R7, [SP, #36]               @ 0x24 
    /*0000b9b4*/ BL          0x000000000000B9B4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000b9b8*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000b9bc*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000b9c0*/ BL          0x000000000000B9C0          @ osal_up [R_ARM_CALL: +0x0] 
    VouSetZoomInWindow_xb9c4:
    /*0000b9c4*/ MOV         R0, R8 
    /*0000b9c8*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0000b9cc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouSetZoomInWindow_xb9d0:
    /*0000b9d0*/ LDR         R3, [R4, #4] 
    /*0000b9d4*/ LDR         R1, [R4, #8] 
    /*0000b9d8*/ CMP         R3, #0 
    /*0000b9dc*/ BLT         VouSetZoomInWindow_xbc08
    /*0000b9e0*/ CMP         R1, #0 
    /*0000b9e4*/ BLT         VouSetZoomInWindow_xbc08
    /*0000b9e8*/ ORR         R2, R3, R1 
    /*0000b9ec*/ LDR         R0, [R4, #16] 
    /*0000b9f0*/ TST         R2, #1 
    /*0000b9f4*/ LDR         R2, [R4, #12] 
    /*0000b9f8*/ BNE         VouSetZoomInWindow_xba24
    /*0000b9fc*/ TST         R2, #1 
    /*0000ba00*/ BNE         VouSetZoomInWindow_xba24
    /*0000ba04*/ TST         R0, #1 
    /*0000ba08*/ BNE         VouSetZoomInWindow_xba24
    /*0000ba0c*/ SUB         IP, R2, #1 
    /*0000ba10*/ CMP         IP, #30 
    /*0000ba14*/ BLS         VouSetZoomInWindow_xba24
    /*0000ba18*/ SUB         IP, R0, #1 
    /*0000ba1c*/ CMP         IP, #30 
    /*0000ba20*/ BHI         VouSetZoomInWindow_xb940
    VouSetZoomInWindow_xba24:
    /*0000ba24*/ STR         R2, [SP, #20] 
    /*0000ba28*/ MOVW        R2, #0                      @ .LC116 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x40d0] 
    /*0000ba2c*/ MOVT        R2, #0                      @ .LC116 [R_ARM_MOVT_ABS: .rodata.str1.4+0x40d0] 
    /*0000ba30*/ STR         R0, [SP, #24] 
    /*0000ba34*/ STR         R1, [SP, #16] 
    /*0000ba38*/ MOVW        IP, #6659                   @ 0x1a03 
    /*0000ba3c*/ MOV         R1, #15 
    /*0000ba40*/ MOV         R0, #3 
    /*0000ba44*/ MOVW        R8, #32848                  @ 0x8050 
    /*0000ba48*/ STR         R3, [SP, #12] 
    /*0000ba4c*/ STR         R7, [SP, #8] 
    /*0000ba50*/ STR         R5, [SP, #4] 
    VouSetZoomInWindow_xba54:
    /*0000ba54*/ STR         IP, [SP] 
    /*0000ba58*/ MOVT        R8, #40975                  @ 0xa00f 
    /*0000ba5c*/ LDR         R3, [PC, #432]              @ 0x000000000000bc14 
    /*0000ba60*/ BL          0x000000000000BA60          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ba64*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000ba68*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000ba6c*/ BL          0x000000000000BA6C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ba70*/ B           VouSetZoomInWindow_xb9c4
    VouSetZoomInWindow_xba74:
    /*0000ba74*/ CMP         R3, #1 
    /*0000ba78*/ BNE         VouSetZoomInWindow_xb9a4
    /*0000ba7c*/ LDR         R2, [R4, #12] 
    /*0000ba80*/ CMP         R2, #0 
    /*0000ba84*/ BEQ         VouSetZoomInWindow_xb99c
    /*0000ba88*/ LDR         R2, [R4, #16] 
    /*0000ba8c*/ CMP         R2, #0 
    /*0000ba90*/ BEQ         VouSetZoomInWindow_xb99c
    /*0000ba94*/ ADD         R2, R6, #8192               @ 0x2000 
    /*0000ba98*/ STR         R3, [R6, #256]              @ 0x100 
    /*0000ba9c*/ STR         R3, [R2, #1344]             @ 0x540 
    /*0000baa0*/ B           VouSetZoomInWindow_xb9a4
    VouSetZoomInWindow_xbaa4:
    /*0000baa4*/ MOVW        R8, #32877                  @ 0x806d 
    /*0000baa8*/ MOVT        R8, #40975                  @ 0xa00f 
    /*0000baac*/ B           VouSetZoomInWindow_xb9c4
    VouSetZoomInWindow_xbab0:
    /*0000bab0*/ MOVW        R8, #32770                  @ 0x8002 
    /*0000bab4*/ MOVT        R8, #40975                  @ 0xa00f 
    /*0000bab8*/ B           VouSetZoomInWindow_xb9c4
    VouSetZoomInWindow_xbabc:
    /*0000babc*/ MOVW        R8, #32774                  @ 0x8006 
    /*0000bac0*/ MOVT        R8, #40975                  @ 0xa00f 
    /*0000bac4*/ B           VouSetZoomInWindow_xb9c4
    VouSetZoomInWindow_xbac8:
    /*0000bac8*/ ADD         R2, R6, #8192               @ 0x2000 
    /*0000bacc*/ MOV         R3, #1 
    /*0000bad0*/ STR         R3, [R6, #256]              @ 0x100 
    /*0000bad4*/ STR         R3, [R2, #1344]             @ 0x540 
    /*0000bad8*/ B           VouSetZoomInWindow_xb9a4
    VouSetZoomInWindow_xbadc:
    /*0000badc*/ MOVW        R3, #6614                   @ 0x19d6 
    /*0000bae0*/ MOV         R1, #15 
    /*0000bae4*/ STR         R3, [SP] 
    /*0000bae8*/ MOVW        R2, #0                      @ .LC114 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4030] 
    /*0000baec*/ LDR         R3, [PC, #288]              @ 0x000000000000bc14 
    /*0000baf0*/ MOVT        R2, #0                      @ .LC114 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4030] 
    /*0000baf4*/ STR         R5, [SP, #4] 
    /*0000baf8*/ MOV         R0, #3 
    /*0000bafc*/ BL          0x000000000000BAFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bb00*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000bb04*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000bb08*/ MOVW        R8, #32839                  @ 0x8047 
    /*0000bb0c*/ BL          0x000000000000BB0C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000bb10*/ MOVT        R8, #40975                  @ 0xa00f 
    /*0000bb14*/ B           VouSetZoomInWindow_xb9c4
    VouSetZoomInWindow_xbb18:
    /*0000bb18*/ MOV         R1, R7 
    /*0000bb1c*/ MOV         R0, R5 
    /*0000bb20*/ BL          0x0000000000005468 
    /*0000bb24*/ SUBS        R3, R0, #0 
    /*0000bb28*/ BEQ         VouSetZoomInWindow_xb8b4
    /*0000bb2c*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000bb30*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000bb34*/ MOV         R8, R3 
    /*0000bb38*/ BL          0x000000000000BB38          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000bb3c*/ MOV         R0, R8 
    /*0000bb40*/ ADD         SP, SP, #44                 @ 0x2c 
    /*0000bb44*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouSetZoomInWindow_xbb48:
    /*0000bb48*/ MOV         R8, #65024                  @ 0xfe00 
    /*0000bb4c*/ MOVT        R8, #65535                  @ 0xffff 
    /*0000bb50*/ B           VouSetZoomInWindow_xb9c4
    VouSetZoomInWindow_xbb54:
    /*0000bb54*/ STR         R0, [SP, #24] 
    /*0000bb58*/ MOVW        IP, #6675                   @ 0x1a13 
    /*0000bb5c*/ STR         R2, [SP, #20] 
    /*0000bb60*/ MOV         R0, #3 
    /*0000bb64*/ MOVW        R2, #0                      @ .LC117 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x414c] 
    /*0000bb68*/ STR         R1, [SP, #16] 
    /*0000bb6c*/ MOVT        R2, #0                      @ .LC117 [R_ARM_MOVT_ABS: .rodata.str1.4+0x414c] 
    /*0000bb70*/ STR         R3, [SP, #12] 
    /*0000bb74*/ MOV         R1, #15 
    /*0000bb78*/ STR         R7, [SP, #8] 
    /*0000bb7c*/ STR         R5, [SP, #4] 
    /*0000bb80*/ MOVW        R8, #32771                  @ 0x8003 
    /*0000bb84*/ B           VouSetZoomInWindow_xba54
    VouSetZoomInWindow_xbb88:
    /*0000bb88*/ STR         R3, [SP, #12] 
    /*0000bb8c*/ MOV         R1, #15 
    /*0000bb90*/ MOVW        R3, #6682                   @ 0x1a1a 
    /*0000bb94*/ STR         R7, [SP, #8] 
    /*0000bb98*/ STR         R3, [SP] 
    /*0000bb9c*/ MOVW        R2, #0                      @ .LC118 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x41a4] 
    /*0000bba0*/ LDR         R3, [PC, #108]              @ 0x000000000000bc14 
    /*0000bba4*/ MOVT        R2, #0                      @ .LC118 [R_ARM_MOVT_ABS: .rodata.str1.4+0x41a4] 
    /*0000bba8*/ STR         R5, [SP, #4] 
    /*0000bbac*/ MOV         R0, #3 
    /*0000bbb0*/ BL          0x000000000000BBB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bbb4*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000bbb8*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000bbbc*/ MOVW        R8, #32771                  @ 0x8003 
    /*0000bbc0*/ BL          0x000000000000BBC0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000bbc4*/ MOVT        R8, #40975                  @ 0xa00f 
    /*0000bbc8*/ B           VouSetZoomInWindow_xb9c4
    VouSetZoomInWindow_xbbcc:
    /*0000bbcc*/ MOVW        R3, #6622                   @ 0x19de 
    /*0000bbd0*/ MOV         R1, #15 
    /*0000bbd4*/ STR         R3, [SP] 
    /*0000bbd8*/ MOVW        R2, #0                      @ .LC115 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4074] 
    /*0000bbdc*/ LDR         R3, [PC, #48]               @ 0x000000000000bc14 
    /*0000bbe0*/ MOVT        R2, #0                      @ .LC115 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4074] 
    /*0000bbe4*/ STR         R5, [SP, #4] 
    /*0000bbe8*/ MOV         R0, #3 
    /*0000bbec*/ BL          0x000000000000BBEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bbf0*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000bbf4*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000bbf8*/ MOVW        R8, #32776                  @ 0x8008 
    /*0000bbfc*/ BL          0x000000000000BBFC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000bc00*/ MOVT        R8, #40975                  @ 0xa00f 
    /*0000bc04*/ B           VouSetZoomInWindow_xb9c4
    VouSetZoomInWindow_xbc08:
    /*0000bc08*/ LDR         R2, [R4, #12] 
    /*0000bc0c*/ LDR         R0, [R4, #16] 
    /*0000bc10*/ B           VouSetZoomInWindow_xba24
    /*0000bc14*/ ANDEQ       R0, R0, R0, ASR #14 
FUNC_END VouSetZoomInWindow


FUNC_BEGIN VouGetZoomInWindow
    /*0000bc18*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000bc1c*/ MOV         R5, R1 
    /*0000bc20*/ MOV         R9, R2 
    /*0000bc24*/ MOV         R7, R0 
    /*0000bc28*/ BL          0x000000000000BC28          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000bc2c*/ CMP         R0, #0 
    /*0000bc30*/ BNE         VouGetZoomInWindow_xbcd4
    /*0000bc34*/ MOV         R1, R5 
    /*0000bc38*/ MOV         R0, R7 
    /*0000bc3c*/ BL          0x000000000000BC3C          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000bc40*/ CMP         R0, #0 
    /*0000bc44*/ BNE         VouGetZoomInWindow_xbce0
    /*0000bc48*/ MOV         R0, R9 
    /*0000bc4c*/ BL          0x000000000000BC4C          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000bc50*/ SUBS        R6, R0, #0 
    /*0000bc54*/ BNE         VouGetZoomInWindow_xbcec
    /*0000bc58*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000bc5c*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000bc60*/ BL          0x000000000000BC60          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000bc64*/ CMP         R0, #0 
    /*0000bc68*/ BNE         VouGetZoomInWindow_xbcf8
    /*0000bc6c*/ LSL         R8, R7, #2 
    /*0000bc70*/ MOVW        R4, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000bc74*/ ADD         R3, R8, R5 
    /*0000bc78*/ MOVT        R4, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000bc7c*/ LDR         R3, [R4, R3, LSL #2] 
    /*0000bc80*/ CMP         R3, #0 
    /*0000bc84*/ BEQ         VouGetZoomInWindow_xbd04
    VouGetZoomInWindow_xbc88:
    /*0000bc88*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000bc8c*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000bc90*/ BL          0x000000000000BC90          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000bc94*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000bc98*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000bc9c*/ BL          0x000000000000BC9C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000bca0*/ CMP         R0, #0 
    /*0000bca4*/ BNE         VouGetZoomInWindow_xbcf8
    /*0000bca8*/ ADD         R5, R8, R5 
    /*0000bcac*/ MOV         R0, R9 
    /*0000bcb0*/ MOV         R2, #20 
    /*0000bcb4*/ LDR         R1, [R4, R5, LSL #2] 
    /*0000bcb8*/ ADD         R1, R1, #236                @ 0xec 
    /*0000bcbc*/ BL          0x000000000000BCBC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000bcc0*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000bcc4*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000bcc8*/ BL          0x000000000000BCC8          @ osal_up [R_ARM_CALL: +0x0] 
    VouGetZoomInWindow_xbccc:
    /*0000bccc*/ MOV         R0, R6 
    /*0000bcd0*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouGetZoomInWindow_xbcd4:
    /*0000bcd4*/ MOVW        R6, #32877                  @ 0x806d 
    /*0000bcd8*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000bcdc*/ B           VouGetZoomInWindow_xbccc
    VouGetZoomInWindow_xbce0:
    /*0000bce0*/ MOVW        R6, #32770                  @ 0x8002 
    /*0000bce4*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000bce8*/ B           VouGetZoomInWindow_xbccc
    VouGetZoomInWindow_xbcec:
    /*0000bcec*/ MOVW        R6, #32774                  @ 0x8006 
    /*0000bcf0*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000bcf4*/ B           VouGetZoomInWindow_xbccc
    VouGetZoomInWindow_xbcf8:
    /*0000bcf8*/ MOV         R6, #65024                  @ 0xfe00 
    /*0000bcfc*/ MOVT        R6, #65535                  @ 0xffff 
    /*0000bd00*/ B           VouGetZoomInWindow_xbccc
    VouGetZoomInWindow_xbd04:
    /*0000bd04*/ MOV         R0, R7 
    /*0000bd08*/ MOV         R1, R5 
    /*0000bd0c*/ BL          0x0000000000005468 
    /*0000bd10*/ SUBS        R3, R0, #0 
    /*0000bd14*/ BEQ         VouGetZoomInWindow_xbc88
    /*0000bd18*/ MOV         R6, R3 
    /*0000bd1c*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000bd20*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000bd24*/ BL          0x000000000000BD24          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000bd28*/ MOV         R0, R6 
    /*0000bd2c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END VouGetZoomInWindow


FUNC_BEGIN VouGetChnPts
    /*0000bd30*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000bd34*/ SUB         SP, SP, #12 
    /*0000bd38*/ MOVW        R3, #6801                   @ 0x1a91 
    /*0000bd3c*/ MOV         R1, #15 
    /*0000bd40*/ STR         R3, [SP] 
    /*0000bd44*/ MOVW        R2, #0                      @ .LC119 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x41e4] 
    /*0000bd48*/ LDR         R3, [PC, #24]               @ 0x000000000000bd68 
    /*0000bd4c*/ MOVT        R2, #0                      @ .LC119 [R_ARM_MOVT_ABS: .rodata.str1.4+0x41e4] 
    /*0000bd50*/ MOV         R0, #3 
    /*0000bd54*/ BL          0x000000000000BD54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bd58*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000bd5c*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0000bd60*/ ADD         SP, SP, #12 
    /*0000bd64*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000bd68*/ ANDEQ       R0, R0, R4, ASR R7 
FUNC_END VouGetChnPts


FUNC_BEGIN VouQueryChn
    /*0000bd6c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000bd70*/ SUB         SP, SP, #28 
    /*0000bd74*/ MOV         R6, R1 
    /*0000bd78*/ MOV         R4, R2 
    /*0000bd7c*/ MOV         R9, R0 
    /*0000bd80*/ BL          0x000000000000BD80          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000bd84*/ CMP         R0, #0 
    /*0000bd88*/ BNE         VouQueryChn_xbe94
    /*0000bd8c*/ MOV         R1, R6 
    /*0000bd90*/ MOV         R0, R9 
    /*0000bd94*/ BL          0x000000000000BD94          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000bd98*/ CMP         R0, #0 
    /*0000bd9c*/ BNE         VouQueryChn_xbea0
    /*0000bda0*/ MOV         R0, R4 
    /*0000bda4*/ BL          0x000000000000BDA4          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000bda8*/ SUBS        R7, R0, #0 
    /*0000bdac*/ BNE         VouQueryChn_xbeac
    /*0000bdb0*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000bdb4*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000bdb8*/ BL          0x000000000000BDB8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000bdbc*/ CMP         R0, #0 
    /*0000bdc0*/ BNE         VouQueryChn_xbf28
    /*0000bdc4*/ LSL         R8, R9, #2 
    /*0000bdc8*/ MOVW        R5, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000bdcc*/ ADD         R3, R8, R6 
    /*0000bdd0*/ MOVT        R5, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000bdd4*/ LDR         R3, [R5, R3, LSL #2] 
    /*0000bdd8*/ CMP         R3, #0 
    /*0000bddc*/ BEQ         VouQueryChn_xbef8
    VouQueryChn_xbde0:
    /*0000bde0*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000bde4*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000bde8*/ BL          0x000000000000BDE8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000bdec*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000bdf0*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000bdf4*/ BL          0x000000000000BDF4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000bdf8*/ SUBS        R3, R0, #0 
    /*0000bdfc*/ BNE         VouQueryChn_xbf28
    /*0000be00*/ ADD         R8, R8, R6 
    /*0000be04*/ LDR         R5, [R5, R8, LSL #2] 
    /*0000be08*/ LDR         R2, [R5, #4] 
    /*0000be0c*/ CMP         R2, #0 
    /*0000be10*/ BEQ         VouQueryChn_xbeb8
    /*0000be14*/ ADD         R6, SP, #24 
    /*0000be18*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000be1c*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000be20*/ STR         R3, [R6, #-4]! 
    /*0000be24*/ MOV         R1, R6 
    /*0000be28*/ BL          0x000000000000BE28          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000be2c*/ ADD         R0, R5, #8960               @ 0x2300 
    /*0000be30*/ ADD         R0, R0, #56                 @ 0x38 
    /*0000be34*/ MOV         R1, R4 
    /*0000be38*/ LDR         R8, [SP, #20] 
    /*0000be3c*/ BL          0x000000000000BE3C          @ VouBufGetBusyLen [R_ARM_CALL: .text+0x41e0] 
    /*0000be40*/ LDR         R3, [R5, #20] 
    /*0000be44*/ MOV         R1, R6 
    /*0000be48*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000be4c*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000be50*/ CMP         R3, #0 
    /*0000be54*/ LDRNE       R3, [R4] 
    /*0000be58*/ ADDNE       R3, R3, #1 
    /*0000be5c*/ STRNE       R3, [R4] 
    /*0000be60*/ LDR         R3, [R5, #24] 
    /*0000be64*/ STR         R8, [SP, #20] 
    /*0000be68*/ CMP         R3, #0 
    /*0000be6c*/ LDRNE       R3, [R4] 
    /*0000be70*/ ADDNE       R3, R3, #1 
    /*0000be74*/ STRNE       R3, [R4] 
    /*0000be78*/ BL          0x000000000000BE78          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000be7c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000be80*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000be84*/ BL          0x000000000000BE84          @ osal_up [R_ARM_CALL: +0x0] 
    VouQueryChn_xbe88:
    /*0000be88*/ MOV         R0, R7 
    /*0000be8c*/ ADD         SP, SP, #28 
    /*0000be90*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouQueryChn_xbe94:
    /*0000be94*/ MOVW        R7, #32877                  @ 0x806d 
    /*0000be98*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000be9c*/ B           VouQueryChn_xbe88
    VouQueryChn_xbea0:
    /*0000bea0*/ MOVW        R7, #32770                  @ 0x8002 
    /*0000bea4*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000bea8*/ B           VouQueryChn_xbe88
    VouQueryChn_xbeac:
    /*0000beac*/ MOVW        R7, #32774                  @ 0x8006 
    /*0000beb0*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000beb4*/ B           VouQueryChn_xbe88
    VouQueryChn_xbeb8:
    /*0000beb8*/ STR         R6, [SP, #8] 
    /*0000bebc*/ MOVW        R3, #6821                   @ 0x1aa5 
    /*0000bec0*/ STR         R9, [SP, #4] 
    /*0000bec4*/ MOV         R1, #15 
    /*0000bec8*/ STR         R3, [SP] 
    /*0000becc*/ MOVW        R2, #0                      @ .LC120 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4228] 
    /*0000bed0*/ LDR         R3, [PC, #92]               @ 0x000000000000bf34 
    /*0000bed4*/ MOVT        R2, #0                      @ .LC120 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4228] 
    /*0000bed8*/ MOV         R0, #3 
    /*0000bedc*/ MOVW        R7, #32841                  @ 0x8049 
    /*0000bee0*/ BL          0x000000000000BEE0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000bee4*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000bee8*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000beec*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000bef0*/ BL          0x000000000000BEF0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000bef4*/ B           VouQueryChn_xbe88
    VouQueryChn_xbef8:
    /*0000bef8*/ MOV         R1, R6 
    /*0000befc*/ MOV         R0, R9 
    /*0000bf00*/ BL          0x0000000000005468 
    /*0000bf04*/ SUBS        R3, R0, #0 
    /*0000bf08*/ BEQ         VouQueryChn_xbde0
    /*0000bf0c*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000bf10*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000bf14*/ MOV         R7, R3 
    /*0000bf18*/ BL          0x000000000000BF18          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000bf1c*/ MOV         R0, R7 
    /*0000bf20*/ ADD         SP, SP, #28 
    /*0000bf24*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouQueryChn_xbf28:
    /*0000bf28*/ MOV         R7, #65024                  @ 0xfe00 
    /*0000bf2c*/ MOVT        R7, #65535                  @ 0xffff 
    /*0000bf30*/ B           VouQueryChn_xbe88
    /*0000bf34*/ ANDEQ       R0, R0, R4, ROR #14 
FUNC_END VouQueryChn


FUNC_BEGIN VouGetScreenFrame
    /*0000bf38*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000bf3c*/ SUB         SP, SP, #52                 @ 0x34 
    /*0000bf40*/ MOV         R4, R1 
    /*0000bf44*/ STR         R1, [SP, #36]               @ 0x24 
    /*0000bf48*/ STR         R2, [SP, #20] 
    /*0000bf4c*/ STR         R0, [SP, #8] 
    /*0000bf50*/ BL          0x000000000000BF50          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000bf54*/ CMP         R0, #0 
    /*0000bf58*/ BNE         VouGetScreenFrame_xc3f4
    /*0000bf5c*/ MOV         R0, R4 
    /*0000bf60*/ BL          0x000000000000BF60          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000bf64*/ SUBS        R3, R0, #0 
    /*0000bf68*/ STR         R3, [SP, #32] 
    /*0000bf6c*/ BNE         VouGetScreenFrame_xc4a4
    /*0000bf70*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000bf74*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000bf78*/ BL          0x000000000000BF78          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000bf7c*/ CMP         R0, #0 
    /*0000bf80*/ BNE         VouGetScreenFrame_xc268
    /*0000bf84*/ LDR         R2, [SP, #8] 
    /*0000bf88*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000bf8c*/ MOVW        R5, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000bf90*/ MOVT        R5, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000bf94*/ MUL         R3, R3, R2 
    /*0000bf98*/ ADD         R6, R5, R3 
    /*0000bf9c*/ LDR         R3, [R5, R3] 
    /*0000bfa0*/ CMP         R3, #0 
    /*0000bfa4*/ BEQ         VouGetScreenFrame_xc514
    /*0000bfa8*/ LDR         R0, [SP, #8] 
    /*0000bfac*/ BL          0x000000000000BFAC          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*0000bfb0*/ CMN         R0, #1 
    /*0000bfb4*/ MOV         R4, R0 
    /*0000bfb8*/ BEQ         VouGetScreenFrame_xc638
    /*0000bfbc*/ LDR         R3, [R6, #180]              @ 0xb4 
    /*0000bfc0*/ CMP         R3, #0 
    /*0000bfc4*/ BNE         VouGetScreenFrame_xc580
    /*0000bfc8*/ LDR         R3, [SP, #20] 
    /*0000bfcc*/ CMN         R3, #1 
    /*0000bfd0*/ BLT         VouGetScreenFrame_xc548
    /*0000bfd4*/ BL          0x000000000000BFD4          @ VO_DRV_IsPhyDevSD [R_ARM_CALL: .text+0x185b0] 
    /*0000bfd8*/ CMP         R0, #0 
    /*0000bfdc*/ BEQ         VouGetScreenFrame_xc280
    /*0000bfe0*/ LDR         R3, [SP, #20] 
    /*0000bfe4*/ CMN         R3, #1 
    /*0000bfe8*/ BEQ         VouGetScreenFrame_xc29c
    VouGetScreenFrame_xbfec:
    /*0000bfec*/ ADD         SL, SP, #48                 @ 0x30 
    /*0000bff0*/ MOV         R3, #0 
    /*0000bff4*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000bff8*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000bffc*/ STR         R3, [SL, #-4]! 
    /*0000c000*/ MOV         R1, SL 
    /*0000c004*/ BL          0x000000000000C004          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000c008*/ LDR         R3, [SP, #8] 
    /*0000c00c*/ MOVW        R7, #12192                  @ 0x2fa0 
    /*0000c010*/ LDR         R6, [SP, #44]               @ 0x2c 
    /*0000c014*/ MUL         R8, R7, R3 
    /*0000c018*/ ADD         R2, R5, R8 
    /*0000c01c*/ LDR         R3, [R2, #264]              @ 0x108 
    /*0000c020*/ CMP         R3, #0 
    /*0000c024*/ BNE         VouGetScreenFrame_xc190
    /*0000c028*/ ADD         R8, R8, #12096              @ 0x2f40 
    /*0000c02c*/ LDR         R3, [SP, #20] 
    /*0000c030*/ ADD         R8, R8, #28 
    /*0000c034*/ MOVW        R4, #0                      @ s_u32VouState [R_ARM_MOVW_ABS_NC: .data+0x10] 
    /*0000c038*/ CLZ         R3, R3 
    /*0000c03c*/ MOVW        FP, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c040*/ MOVW        R9, #0                      @ VO_WaitGetSreenFrameCallBack [R_ARM_MOVW_ABS_NC: .text+0x526c] 
    /*0000c044*/ ADD         R8, R5, R8 
    /*0000c048*/ MOVT        R4, #0                      @ s_u32VouState [R_ARM_MOVT_ABS: .data+0x10] 
    /*0000c04c*/ MOVT        FP, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c050*/ MOVT        R9, #0                      @ VO_WaitGetSreenFrameCallBack [R_ARM_MOVT_ABS: .text+0x526c] 
    /*0000c054*/ LSR         R3, R3, #5 
    /*0000c058*/ STR         R2, [SP, #28] 
    /*0000c05c*/ STR         R3, [SP, #24] 
    /*0000c060*/ MOVW        R3, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000c064*/ MOVT        R3, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000c068*/ STR         R3, [SP, #12] 
    VouGetScreenFrame_xc06c:
    /*0000c06c*/ MOV         R1, SL 
    /*0000c070*/ LDR         R0, [SP, #12] 
    /*0000c074*/ STR         R6, [SP, #44]               @ 0x2c 
    /*0000c078*/ BL          0x000000000000C078          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000c07c*/ LDR         R3, [SP, #8] 
    /*0000c080*/ MOV         R0, FP 
    /*0000c084*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000c088*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000c08c*/ STR         R3, [SP, #16] 
    /*0000c090*/ BL          0x000000000000C090          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c094*/ LDR         R2, [R4] 
    /*0000c098*/ CMP         R2, #0 
    /*0000c09c*/ BNE         VouGetScreenFrame_xc24c
    /*0000c0a0*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000c0a4*/ MLA         R1, R7, R3, R5 
    /*0000c0a8*/ LDR         R0, [R1, #264]              @ 0x108 
    /*0000c0ac*/ ADDS        R0, R0, #0 
    /*0000c0b0*/ MOVNE       R0, #1 
    VouGetScreenFrame_xc0b4:
    /*0000c0b4*/ LDR         R1, [SP, #24] 
    /*0000c0b8*/ CMP         R0, #0 
    /*0000c0bc*/ MOVEQ       R1, #0 
    /*0000c0c0*/ ANDNE       R1, R1, #1 
    /*0000c0c4*/ CMP         R1, #0 
    /*0000c0c8*/ LDR         R1, [SP, #20] 
    /*0000c0cc*/ MOVNE       R6, #1 
    /*0000c0d0*/ MOVEQ       R6, R1 
    /*0000c0d4*/ B           VouGetScreenFrame_xc118
    VouGetScreenFrame_xc0d8:
    /*0000c0d8*/ LDR         IP, [R3, #264]              @ 0x108 
    /*0000c0dc*/ ADDS        IP, IP, #0 
    /*0000c0e0*/ MOVNE       IP, #1 
    VouGetScreenFrame_xc0e4:
    /*0000c0e4*/ CMP         IP, #0 
    /*0000c0e8*/ MOV         R3, R6 
    /*0000c0ec*/ ADD         R2, SP, #40                 @ 0x28 
    /*0000c0f0*/ MOV         R1, R9 
    /*0000c0f4*/ MOV         R0, R8 
    /*0000c0f8*/ BNE         VouGetScreenFrame_xc130
    /*0000c0fc*/ BL          0x000000000000C0FC          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*0000c100*/ ADD         R3, R0, #512                @ 0x200 
    /*0000c104*/ MOV         R6, R0 
    /*0000c108*/ BICS        R3, R3, #512                @ 0x200 
    /*0000c10c*/ BEQ         VouGetScreenFrame_xc13c
    /*0000c110*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000c114*/ LDR         R2, [R4] 
    VouGetScreenFrame_xc118:
    /*0000c118*/ CMP         R2, #0 
    /*0000c11c*/ MLA         R3, R7, R3, R5 
    /*0000c120*/ BEQ         VouGetScreenFrame_xc0d8
    /*0000c124*/ BL          0x0000000000005234 
    /*0000c128*/ MOV         IP, R0 
    /*0000c12c*/ B           VouGetScreenFrame_xc0e4
    VouGetScreenFrame_xc130:
    /*0000c130*/ MOV         R0, R6 
    /*0000c134*/ BL          0x000000000000C134          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*0000c138*/ MOV         R6, R0 
    VouGetScreenFrame_xc13c:
    /*0000c13c*/ MOV         R0, FP 
    /*0000c140*/ BL          0x000000000000C140          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000c144*/ CMP         R0, #0 
    /*0000c148*/ BNE         VouGetScreenFrame_xc268
    /*0000c14c*/ LDR         R3, [R4] 
    /*0000c150*/ CMP         R3, #0 
    /*0000c154*/ BNE         VouGetScreenFrame_xc460
    /*0000c158*/ CMP         R6, #0 
    /*0000c15c*/ BLT         VouGetScreenFrame_xc25c
    /*0000c160*/ BEQ         VouGetScreenFrame_xc40c
    /*0000c164*/ LDR         R3, [SP, #16] 
    /*0000c168*/ MOV         R1, SL 
    /*0000c16c*/ LDR         R0, [SP, #12] 
    /*0000c170*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000c174*/ BL          0x000000000000C174          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000c178*/ LDR         R3, [SP, #28] 
    /*0000c17c*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000c180*/ LDR         R3, [R3, #264]              @ 0x108 
    /*0000c184*/ MOV         R6, R2 
    /*0000c188*/ CMP         R3, #0 
    /*0000c18c*/ BEQ         VouGetScreenFrame_xc06c
    VouGetScreenFrame_xc190:
    /*0000c190*/ LDR         R7, [R3] 
    /*0000c194*/ CMP         R7, #0 
    /*0000c198*/ BEQ         VouGetScreenFrame_xc5b8
    VouGetScreenFrame_xc19c:
    /*0000c19c*/ MOV         R0, #1 
    /*0000c1a0*/ LDRD        R4, [R7, #120]              @ 0x78 
    /*0000c1a4*/ LDR         R8, [R7, #328]              @ 0x148 
    /*0000c1a8*/ BL          0x000000000000C1A8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c1ac*/ MOV         R2, R4 
    /*0000c1b0*/ MOV         R3, R5 
    /*0000c1b4*/ LDR         R1, [R0, #84]               @ 0x54 
    /*0000c1b8*/ MOV         R0, R8 
    /*0000c1bc*/ BLX         R1 
    /*0000c1c0*/ CMP         R0, #1 
    /*0000c1c4*/ BEQ         VouGetScreenFrame_xc1e4
    /*0000c1c8*/ MOVW        R3, #0                      @ .LC128 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4470] 
    /*0000c1cc*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*0000c1d0*/ MOVT        R3, #0                      @ .LC128 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4470] 
    /*0000c1d4*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    /*0000c1d8*/ MOVW        R2, #6981                   @ 0x1b45 
    /*0000c1dc*/ LDR         R1, [PC, #1164]             @ 0x000000000000c670 
    /*0000c1e0*/ BL          0x000000000000C1E0          @ osal_panic [R_ARM_CALL: +0x0] 
    VouGetScreenFrame_xc1e4:
    /*0000c1e4*/ MOV         R0, #1 
    /*0000c1e8*/ BL          0x000000000000C1E8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c1ec*/ MOV         R1, #12 
    /*0000c1f0*/ MOV         R2, R4 
    /*0000c1f4*/ STR         R1, [SP] 
    /*0000c1f8*/ MOV         R3, R5 
    /*0000c1fc*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*0000c200*/ MOV         R0, R8 
    /*0000c204*/ BLX         R1 
    /*0000c208*/ CMP         R0, #0 
    /*0000c20c*/ BNE         VouGetScreenFrame_xc5d8
    /*0000c210*/ MOV         R1, R7 
    /*0000c214*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0000c218*/ MOV         R2, #336                    @ 0x150 
    /*0000c21c*/ BL          0x000000000000C21C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000c220*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000c224*/ MOV         R1, SL 
    /*0000c228*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000c22c*/ STR         R6, [SP, #44]               @ 0x2c 
    /*0000c230*/ BL          0x000000000000C230          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VouGetScreenFrame_xc234:
    /*0000c234*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c238*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c23c*/ BL          0x000000000000C23C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c240*/ LDR         R0, [SP, #32] 
    /*0000c244*/ ADD         SP, SP, #52                 @ 0x34 
    /*0000c248*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouGetScreenFrame_xc24c:
    /*0000c24c*/ BL          0x0000000000005234 
    /*0000c250*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000c254*/ LDR         R2, [R4] 
    /*0000c258*/ B           VouGetScreenFrame_xc0b4
    VouGetScreenFrame_xc25c:
    /*0000c25c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c260*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c264*/ BL          0x000000000000C264          @ osal_up [R_ARM_CALL: +0x0] 
    VouGetScreenFrame_xc268:
    /*0000c268*/ MOV         R3, #65024                  @ 0xfe00 
    /*0000c26c*/ MOVT        R3, #65535                  @ 0xffff 
    /*0000c270*/ STR         R3, [SP, #32] 
    VouGetScreenFrame_xc274:
    /*0000c274*/ LDR         R0, [SP, #32] 
    /*0000c278*/ ADD         SP, SP, #52                 @ 0x34 
    /*0000c27c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouGetScreenFrame_xc280:
    /*0000c280*/ MOV         R0, R4 
    /*0000c284*/ BL          0x000000000000C284          @ VO_DRV_IsPhyDevHD [R_ARM_CALL: .text+0x1858c] 
    /*0000c288*/ CMP         R0, #0 
    /*0000c28c*/ BEQ         VouGetScreenFrame_xc234
    /*0000c290*/ LDR         R3, [SP, #20] 
    /*0000c294*/ CMN         R3, #1 
    /*0000c298*/ BNE         VouGetScreenFrame_xbfec
    VouGetScreenFrame_xc29c:
    /*0000c29c*/ ADD         SL, SP, #48                 @ 0x30 
    /*0000c2a0*/ MOV         R3, #0 
    /*0000c2a4*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000c2a8*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000c2ac*/ STR         R3, [SL, #-4]! 
    /*0000c2b0*/ MOV         R1, SL 
    /*0000c2b4*/ BL          0x000000000000C2B4          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000c2b8*/ LDR         R3, [SP, #8] 
    /*0000c2bc*/ MOVW        R9, #12192                  @ 0x2fa0 
    /*0000c2c0*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000c2c4*/ MUL         R1, R9, R3 
    /*0000c2c8*/ ADD         R3, R5, R1 
    /*0000c2cc*/ LDR         R3, [R3, #264]              @ 0x108 
    /*0000c2d0*/ CMP         R3, #0 
    /*0000c2d4*/ BNE         VouGetScreenFrame_xc630
    /*0000c2d8*/ ADD         R8, R1, #12096              @ 0x2f40 
    /*0000c2dc*/ MOVW        R4, #0                      @ s_u32VouState [R_ARM_MOVW_ABS_NC: .data+0x10] 
    /*0000c2e0*/ ADD         R8, R8, #28 
    /*0000c2e4*/ MOVW        FP, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c2e8*/ MOVT        R4, #0                      @ s_u32VouState [R_ARM_MOVT_ABS: .data+0x10] 
    /*0000c2ec*/ ADD         R8, R5, R8 
    /*0000c2f0*/ MOVT        FP, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c2f4*/ STR         R1, [SP, #20] 
    VouGetScreenFrame_xc2f8:
    /*0000c2f8*/ MOV         R1, SL 
    /*0000c2fc*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000c300*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000c304*/ STR         R2, [SP, #44]               @ 0x2c 
    /*0000c308*/ BL          0x000000000000C308          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000c30c*/ LDR         R3, [SP, #8] 
    /*0000c310*/ ADD         R7, SP, #48                 @ 0x30 
    /*0000c314*/ MOV         R0, FP 
    /*0000c318*/ MOVW        R6, #0                      @ VO_WaitGetSreenFrameCallBack [R_ARM_MOVW_ABS_NC: .text+0x526c] 
    /*0000c31c*/ MOVT        R6, #0                      @ VO_WaitGetSreenFrameCallBack [R_ARM_MOVT_ABS: .text+0x526c] 
    /*0000c320*/ STR         R3, [R7, #-8]! 
    /*0000c324*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000c328*/ STR         R3, [SP, #16] 
    /*0000c32c*/ BL          0x000000000000C32C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c330*/ B           VouGetScreenFrame_xc36c
    VouGetScreenFrame_xc334:
    /*0000c334*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000c338*/ MLA         R3, R9, R3, R5 
    /*0000c33c*/ LDR         IP, [R3, #264]              @ 0x108 
    /*0000c340*/ ADDS        IP, IP, #0 
    /*0000c344*/ MOVNE       IP, #1 
    VouGetScreenFrame_xc348:
    /*0000c348*/ CMP         IP, #0 
    /*0000c34c*/ MOV         R3, #100                    @ 0x64 
    /*0000c350*/ MOV         R2, R7 
    /*0000c354*/ MOV         R1, R6 
    /*0000c358*/ MOV         R0, R8 
    /*0000c35c*/ BNE         VouGetScreenFrame_xc384
    /*0000c360*/ BL          0x000000000000C360          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*0000c364*/ CMP         R0, #0 
    /*0000c368*/ BLT         VouGetScreenFrame_xc3ec
    VouGetScreenFrame_xc36c:
    /*0000c36c*/ LDR         R3, [R4] 
    /*0000c370*/ CMP         R3, #0 
    /*0000c374*/ BEQ         VouGetScreenFrame_xc334
    /*0000c378*/ BL          0x0000000000005234 
    /*0000c37c*/ MOV         IP, R0 
    /*0000c380*/ B           VouGetScreenFrame_xc348
    VouGetScreenFrame_xc384:
    /*0000c384*/ MOV         R3, #0 
    VouGetScreenFrame_xc388:
    /*0000c388*/ MOV         R0, FP 
    /*0000c38c*/ STR         R3, [SP, #12] 
    /*0000c390*/ BL          0x000000000000C390          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000c394*/ CMP         R0, #0 
    /*0000c398*/ BNE         VouGetScreenFrame_xc268
    /*0000c39c*/ LDR         R2, [R4] 
    /*0000c3a0*/ LDR         R3, [SP, #12] 
    /*0000c3a4*/ CMP         R2, #0 
    /*0000c3a8*/ BNE         VouGetScreenFrame_xc4b4
    /*0000c3ac*/ CMP         R3, #0 
    /*0000c3b0*/ BNE         VouGetScreenFrame_xc4c8
    /*0000c3b4*/ LDR         R3, [SP, #16] 
    /*0000c3b8*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000c3bc*/ MOV         R1, SL 
    /*0000c3c0*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000c3c4*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000c3c8*/ BL          0x000000000000C3C8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000c3cc*/ LDR         R3, [SP, #20] 
    /*0000c3d0*/ LDR         R6, [SP, #44]               @ 0x2c 
    /*0000c3d4*/ ADD         R3, R5, R3 
    /*0000c3d8*/ LDR         R3, [R3, #264]              @ 0x108 
    /*0000c3dc*/ MOV         R2, R6 
    /*0000c3e0*/ CMP         R3, #0 
    /*0000c3e4*/ BEQ         VouGetScreenFrame_xc2f8
    /*0000c3e8*/ B           VouGetScreenFrame_xc190
    VouGetScreenFrame_xc3ec:
    /*0000c3ec*/ MOV         R3, R0 
    /*0000c3f0*/ B           VouGetScreenFrame_xc388
    VouGetScreenFrame_xc3f4:
    /*0000c3f4*/ MOVW        R3, #32877                  @ 0x806d 
    /*0000c3f8*/ MOVT        R3, #40975                  @ 0xa00f 
    /*0000c3fc*/ STR         R3, [SP, #32] 
    /*0000c400*/ LDR         R0, [SP, #32] 
    /*0000c404*/ ADD         SP, SP, #52                 @ 0x34 
    /*0000c408*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouGetScreenFrame_xc40c:
    /*0000c40c*/ LDR         R3, [SP, #8] 
    /*0000c410*/ MOVW        R2, #0                      @ .LC125 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x43b8] 
    /*0000c414*/ MOV         R1, #15 
    /*0000c418*/ MOVT        R2, #0                      @ .LC125 [R_ARM_MOVT_ABS: .rodata.str1.4+0x43b8] 
    /*0000c41c*/ MOV         R0, #3 
    /*0000c420*/ STR         R3, [SP, #4] 
    /*0000c424*/ MOVW        R3, #6932                   @ 0x1b14 
    /*0000c428*/ STR         R3, [SP] 
    /*0000c42c*/ LDR         R3, [PC, #572]              @ 0x000000000000c670 
    /*0000c430*/ BL          0x000000000000C430          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c434*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c438*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c43c*/ MOVW        R3, #32786                  @ 0x8012 
    VouGetScreenFrame_xc440:
    /*0000c440*/ MOV         R4, R3 
    /*0000c444*/ BL          0x000000000000C444          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c448*/ MOV         R3, R4 
    /*0000c44c*/ MOVT        R3, #40975                  @ 0xa00f 
    /*0000c450*/ STR         R3, [SP, #32] 
    /*0000c454*/ LDR         R0, [SP, #32] 
    /*0000c458*/ ADD         SP, SP, #52                 @ 0x34 
    /*0000c45c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouGetScreenFrame_xc460:
    /*0000c460*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c464*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c468*/ BL          0x000000000000C468          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c46c*/ MOVW        R3, #6922                   @ 0x1b0a 
    VouGetScreenFrame_xc470:
    /*0000c470*/ STR         R3, [SP] 
    /*0000c474*/ MOV         R1, #15 
    /*0000c478*/ LDR         R3, [PC, #496]              @ 0x000000000000c670 
    /*0000c47c*/ MOVW        R2, #0                      @ .LC124 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4364] 
    /*0000c480*/ MOV         R0, #3 
    /*0000c484*/ MOVT        R2, #0                      @ .LC124 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4364] 
    /*0000c488*/ BL          0x000000000000C488          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c48c*/ MOVW        R3, #32784                  @ 0x8010 
    /*0000c490*/ MOVT        R3, #40975                  @ 0xa00f 
    /*0000c494*/ STR         R3, [SP, #32] 
    /*0000c498*/ LDR         R0, [SP, #32] 
    /*0000c49c*/ ADD         SP, SP, #52                 @ 0x34 
    /*0000c4a0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouGetScreenFrame_xc4a4:
    /*0000c4a4*/ MOVW        R3, #32774                  @ 0x8006 
    /*0000c4a8*/ MOVT        R3, #40975                  @ 0xa00f 
    /*0000c4ac*/ STR         R3, [SP, #32] 
    /*0000c4b0*/ B           VouGetScreenFrame_xc274
    VouGetScreenFrame_xc4b4:
    /*0000c4b4*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c4b8*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c4bc*/ BL          0x000000000000C4BC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c4c0*/ MOVW        R3, #6959                   @ 0x1b2f 
    /*0000c4c4*/ B           VouGetScreenFrame_xc470
    VouGetScreenFrame_xc4c8:
    /*0000c4c8*/ LDR         R3, [SP, #8] 
    /*0000c4cc*/ MOV         R1, #15 
    /*0000c4d0*/ MOVW        R2, #0                      @ .LC126 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4400] 
    /*0000c4d4*/ MOV         R0, #3 
    /*0000c4d8*/ MOVT        R2, #0                      @ .LC126 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4400] 
    /*0000c4dc*/ STR         R3, [SP, #4] 
    /*0000c4e0*/ MOVW        R3, #6965                   @ 0x1b35 
    /*0000c4e4*/ STR         R3, [SP] 
    /*0000c4e8*/ LDR         R3, [PC, #384]              @ 0x000000000000c670 
    /*0000c4ec*/ BL          0x000000000000C4EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c4f0*/ MOV         R3, #65024                  @ 0xfe00 
    /*0000c4f4*/ MOV         R4, R3 
    /*0000c4f8*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c4fc*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c500*/ BL          0x000000000000C500          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c504*/ MOV         R3, R4 
    /*0000c508*/ MOVT        R3, #65535                  @ 0xffff 
    /*0000c50c*/ STR         R3, [SP, #32] 
    /*0000c510*/ B           VouGetScreenFrame_xc274
    VouGetScreenFrame_xc514:
    /*0000c514*/ STR         R2, [SP, #4] 
    /*0000c518*/ MOVW        R3, #6874                   @ 0x1ada 
    /*0000c51c*/ MOVW        R2, #0                      @ .LC121 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4268] 
    /*0000c520*/ STR         R3, [SP] 
    /*0000c524*/ MOVT        R2, #0                      @ .LC121 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4268] 
    /*0000c528*/ LDR         R3, [PC, #320]              @ 0x000000000000c670 
    /*0000c52c*/ MOV         R1, #15 
    /*0000c530*/ MOV         R0, #3 
    /*0000c534*/ BL          0x000000000000C534          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c538*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c53c*/ MOVW        R3, #32837                  @ 0x8045 
    /*0000c540*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c544*/ B           VouGetScreenFrame_xc440
    VouGetScreenFrame_xc548:
    /*0000c548*/ LDR         R3, [SP, #8] 
    /*0000c54c*/ MOVW        R2, #0                      @ .LC123 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4308] 
    /*0000c550*/ MOV         R1, #15 
    /*0000c554*/ MOVT        R2, #0                      @ .LC123 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4308] 
    /*0000c558*/ MOV         R0, #3 
    /*0000c55c*/ STR         R3, [SP, #4] 
    /*0000c560*/ MOVW        R3, #6897                   @ 0x1af1 
    /*0000c564*/ STR         R3, [SP] 
    /*0000c568*/ LDR         R3, [PC, #256]              @ 0x000000000000c670 
    /*0000c56c*/ BL          0x000000000000C56C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c570*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c574*/ MOVW        R3, #32771                  @ 0x8003 
    /*0000c578*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c57c*/ B           VouGetScreenFrame_xc440
    VouGetScreenFrame_xc580:
    /*0000c580*/ LDR         R3, [SP, #8] 
    /*0000c584*/ MOVW        R2, #0                      @ .LC122 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x42ac] 
    /*0000c588*/ MOV         R1, #15 
    /*0000c58c*/ MOVT        R2, #0                      @ .LC122 [R_ARM_MOVT_ABS: .rodata.str1.4+0x42ac] 
    /*0000c590*/ MOV         R0, #3 
    /*0000c594*/ STR         R3, [SP, #4] 
    /*0000c598*/ MOVW        R3, #6890                   @ 0x1aea 
    /*0000c59c*/ STR         R3, [SP] 
    /*0000c5a0*/ LDR         R3, [PC, #200]              @ 0x000000000000c670 
    /*0000c5a4*/ BL          0x000000000000C5A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c5a8*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c5ac*/ MOVW        R3, #32776                  @ 0x8008 
    /*0000c5b0*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c5b4*/ B           VouGetScreenFrame_xc440
    VouGetScreenFrame_xc5b8:
    /*0000c5b8*/ MOVW        R3, #0                      @ .LC127 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4458] 
    /*0000c5bc*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*0000c5c0*/ MOVT        R3, #0                      @ .LC127 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4458] 
    /*0000c5c4*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    /*0000c5c8*/ MOVW        R2, #6975                   @ 0x1b3f 
    /*0000c5cc*/ LDR         R1, [PC, #156]              @ 0x000000000000c670 
    /*0000c5d0*/ BL          0x000000000000C5D0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000c5d4*/ B           VouGetScreenFrame_xc19c
    VouGetScreenFrame_xc5d8:
    /*0000c5d8*/ LDR         R3, [SP, #8] 
    /*0000c5dc*/ MOV         R1, #15 
    /*0000c5e0*/ MOVW        R2, #0                      @ .LC129 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4484] 
    /*0000c5e4*/ MOV         R0, #3 
    /*0000c5e8*/ MOVT        R2, #0                      @ .LC129 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4484] 
    /*0000c5ec*/ STR         R3, [SP, #4] 
    /*0000c5f0*/ MOVW        R3, #6984                   @ 0x1b48 
    /*0000c5f4*/ STR         R3, [SP] 
    /*0000c5f8*/ LDR         R3, [PC, #112]              @ 0x000000000000c670 
    /*0000c5fc*/ BL          0x000000000000C5FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c600*/ MOV         R1, SL 
    /*0000c604*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000c608*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000c60c*/ STR         R6, [SP, #44]               @ 0x2c 
    /*0000c610*/ BL          0x000000000000C610          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000c614*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c618*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c61c*/ BL          0x000000000000C61C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c620*/ MOVW        R3, #32786                  @ 0x8012 
    /*0000c624*/ MOVT        R3, #40975                  @ 0xa00f 
    /*0000c628*/ STR         R3, [SP, #32] 
    /*0000c62c*/ B           VouGetScreenFrame_xc274
    VouGetScreenFrame_xc630:
    /*0000c630*/ MOV         R6, R2 
    /*0000c634*/ B           VouGetScreenFrame_xc190
    VouGetScreenFrame_xc638:
    /*0000c638*/ LDR         R3, [SP, #8] 
    /*0000c63c*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2b2c] 
    /*0000c640*/ MOV         R1, #15 
    /*0000c644*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2b2c] 
    /*0000c648*/ MOV         R0, #3 
    /*0000c64c*/ STR         R3, [SP, #4] 
    /*0000c650*/ MOVW        R3, #6882                   @ 0x1ae2 
    /*0000c654*/ STR         R3, [SP] 
    /*0000c658*/ LDR         R3, [PC, #16]               @ 0x000000000000c670 
    /*0000c65c*/ BL          0x000000000000C65C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c660*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c664*/ MOVW        R3, #32879                  @ 0x806f 
    /*0000c668*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c66c*/ B           VouGetScreenFrame_xc440
    /*0000c670*/ ANDEQ       R0, R0, R0, ROR R7 
FUNC_END VouGetScreenFrame


FUNC_BEGIN VouReleaseScreenFrame
    /*0000c674*/ PUSH        {R4, R5, R6, R8, R9, LR} 
    /*0000c678*/ SUB         SP, SP, #24 
    /*0000c67c*/ MOV         R4, R1 
    /*0000c680*/ MOV         R6, R0 
    /*0000c684*/ BL          0x000000000000C684          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000c688*/ CMP         R0, #0 
    /*0000c68c*/ BNE         VouReleaseScreenFrame_xc760
    /*0000c690*/ MOV         R0, R4 
    /*0000c694*/ BL          0x000000000000C694          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000c698*/ CMP         R0, #0 
    /*0000c69c*/ BNE         VouReleaseScreenFrame_xc7b8
    /*0000c6a0*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000c6a4*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000c6a8*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000c6ac*/ MLA         R3, R3, R6, R2 
    /*0000c6b0*/ LDR         R3, [R3, #180]              @ 0xb4 
    /*0000c6b4*/ CMP         R3, #0 
    /*0000c6b8*/ BNE         VouReleaseScreenFrame_xc7c4
    /*0000c6bc*/ MOV         R0, #1 
    /*0000c6c0*/ BL          0x000000000000C6C0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c6c4*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*0000c6c8*/ LDR         R1, [R0, #84]               @ 0x54 
    /*0000c6cc*/ LDR         R0, [R4, #328]              @ 0x148 
    /*0000c6d0*/ BLX         R1 
    /*0000c6d4*/ CMP         R0, #1 
    /*0000c6d8*/ MOV         R5, R0 
    /*0000c6dc*/ BNE         VouReleaseScreenFrame_xc76c
    /*0000c6e0*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c6e4*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c6e8*/ BL          0x000000000000C6E8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000c6ec*/ CMP         R0, #0 
    /*0000c6f0*/ BNE         VouReleaseScreenFrame_xc7ac
    /*0000c6f4*/ MOV         R0, R5 
    /*0000c6f8*/ BL          0x000000000000C6F8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000c6fc*/ LDR         IP, [R4, #328]              @ 0x148 
    /*0000c700*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*0000c704*/ MOV         R1, #12 
    /*0000c708*/ STR         R1, [SP] 
    /*0000c70c*/ LDR         R1, [R0, #64]               @ 0x40 
    /*0000c710*/ MOV         R0, IP 
    /*0000c714*/ BLX         R1 
    /*0000c718*/ SUBS        R4, R0, #0 
    /*0000c71c*/ BNE         VouReleaseScreenFrame_xc738
    VouReleaseScreenFrame_xc720:
    /*0000c720*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c724*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c728*/ BL          0x000000000000C728          @ osal_up [R_ARM_CALL: +0x0] 
    VouReleaseScreenFrame_xc72c:
    /*0000c72c*/ MOV         R0, R4 
    /*0000c730*/ ADD         SP, SP, #24 
    /*0000c734*/ POP         {R4, R5, R6, R8, R9, PC} 
    VouReleaseScreenFrame_xc738:
    /*0000c738*/ MOVW        R3, #7137                   @ 0x1be1 
    /*0000c73c*/ STR         R6, [SP, #4] 
    /*0000c740*/ STR         R3, [SP] 
    /*0000c744*/ MOVW        R2, #0                      @ .LC132 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x456c] 
    /*0000c748*/ LDR         R3, [PC, #164]              @ 0x000000000000c7f4 
    /*0000c74c*/ MOVT        R2, #0                      @ .LC132 [R_ARM_MOVT_ABS: .rodata.str1.4+0x456c] 
    /*0000c750*/ MOV         R1, #15 
    /*0000c754*/ MOV         R0, #3 
    /*0000c758*/ BL          0x000000000000C758          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c75c*/ B           VouReleaseScreenFrame_xc720
    VouReleaseScreenFrame_xc760:
    /*0000c760*/ MOVW        R4, #32877                  @ 0x806d 
    /*0000c764*/ MOVT        R4, #40975                  @ 0xa00f 
    /*0000c768*/ B           VouReleaseScreenFrame_xc72c
    VouReleaseScreenFrame_xc76c:
    /*0000c76c*/ LDRD        R8, [R4, #120]              @ 0x78 
    /*0000c770*/ MOVW        R3, #7128                   @ 0x1bd8 
    /*0000c774*/ LDR         R0, [R4, #328]              @ 0x148 
    /*0000c778*/ MOVW        R2, #0                      @ .LC131 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4514] 
    /*0000c77c*/ STR         R3, [SP] 
    /*0000c780*/ MOVT        R2, #0                      @ .LC131 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4514] 
    /*0000c784*/ STR         R6, [SP, #4] 
    /*0000c788*/ MOV         R1, #15 
    /*0000c78c*/ STR         R0, [SP, #8] 
    /*0000c790*/ MOV         R0, #3 
    /*0000c794*/ STRD        R8, [SP, #16] 
    /*0000c798*/ MOVW        R4, #32847                  @ 0x804f 
    /*0000c79c*/ LDR         R3, [PC, #80]               @ 0x000000000000c7f4 
    /*0000c7a0*/ MOVT        R4, #40975                  @ 0xa00f 
    /*0000c7a4*/ BL          0x000000000000C7A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c7a8*/ B           VouReleaseScreenFrame_xc72c
    VouReleaseScreenFrame_xc7ac:
    /*0000c7ac*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000c7b0*/ MOVT        R4, #65535                  @ 0xffff 
    /*0000c7b4*/ B           VouReleaseScreenFrame_xc72c
    VouReleaseScreenFrame_xc7b8:
    /*0000c7b8*/ MOVW        R4, #32774                  @ 0x8006 
    /*0000c7bc*/ MOVT        R4, #40975                  @ 0xa00f 
    /*0000c7c0*/ B           VouReleaseScreenFrame_xc72c
    VouReleaseScreenFrame_xc7c4:
    /*0000c7c4*/ MOVW        R3, #7121                   @ 0x1bd1 
    /*0000c7c8*/ STR         R6, [SP, #4] 
    /*0000c7cc*/ STR         R3, [SP] 
    /*0000c7d0*/ MOVW        R2, #0                      @ .LC130 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x44bc] 
    /*0000c7d4*/ LDR         R3, [PC, #24]               @ 0x000000000000c7f4 
    /*0000c7d8*/ MOVT        R2, #0                      @ .LC130 [R_ARM_MOVT_ABS: .rodata.str1.4+0x44bc] 
    /*0000c7dc*/ MOV         R1, #15 
    /*0000c7e0*/ MOV         R0, #3 
    /*0000c7e4*/ MOVW        R4, #32776                  @ 0x8008 
    /*0000c7e8*/ BL          0x000000000000C7E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c7ec*/ MOVT        R4, #40975                  @ 0xa00f 
    /*0000c7f0*/ B           VouReleaseScreenFrame_xc72c
    /*0000c7f4*/ ANDEQ       R0, R0, R4, LSL #15 
FUNC_END VouReleaseScreenFrame


FUNC_BEGIN VouSetDispBufLen
    /*0000c7f8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000c7fc*/ SUB         SP, SP, #20 
    /*0000c800*/ MOV         R4, R1 
    /*0000c804*/ MOV         R6, R0 
    /*0000c808*/ BL          0x000000000000C808          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000c80c*/ CMP         R0, #0 
    /*0000c810*/ BNE         VouSetDispBufLen_xc890
    /*0000c814*/ MOV         R0, R4 
    /*0000c818*/ BL          0x000000000000C818          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000c81c*/ CMP         R0, #0 
    /*0000c820*/ BNE         VouSetDispBufLen_xc89c
    /*0000c824*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c828*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c82c*/ LDR         R4, [R4] 
    /*0000c830*/ BL          0x000000000000C830          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000c834*/ CMP         R0, #0 
    /*0000c838*/ BNE         VouSetDispBufLen_xc8a8
    /*0000c83c*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000c840*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000c844*/ MUL         R3, R3, R6 
    /*0000c848*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000c84c*/ ADD         R7, R2, R3 
    /*0000c850*/ LDR         R3, [R2, R3] 
    /*0000c854*/ CMP         R3, #1 
    /*0000c858*/ BEQ         VouSetDispBufLen_xc8fc
    /*0000c85c*/ MOV         R2, #15 
    /*0000c860*/ MOV         R1, #3 
    /*0000c864*/ MOV         R0, R4 
    /*0000c868*/ BL          0x000000000000C868          @ VOU_DRV_CheckBufLen [R_ARM_CALL: .text+0x196d0] 
    /*0000c86c*/ SUBS        R5, R0, #0 
    /*0000c870*/ BNE         VouSetDispBufLen_xc8b4
    /*0000c874*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c878*/ STR         R4, [R7, #28] 
    /*0000c87c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c880*/ BL          0x000000000000C880          @ osal_up [R_ARM_CALL: +0x0] 
    VouSetDispBufLen_xc884:
    /*0000c884*/ MOV         R0, R5 
    /*0000c888*/ ADD         SP, SP, #20 
    /*0000c88c*/ POP         {R4, R5, R6, R7, PC} 
    VouSetDispBufLen_xc890:
    /*0000c890*/ MOVW        R5, #32877                  @ 0x806d 
    /*0000c894*/ MOVT        R5, #40975                  @ 0xa00f 
    /*0000c898*/ B           VouSetDispBufLen_xc884
    VouSetDispBufLen_xc89c:
    /*0000c89c*/ MOVW        R5, #32774                  @ 0x8006 
    /*0000c8a0*/ MOVT        R5, #40975                  @ 0xa00f 
    /*0000c8a4*/ B           VouSetDispBufLen_xc884
    VouSetDispBufLen_xc8a8:
    /*0000c8a8*/ MOV         R5, #65024                  @ 0xfe00 
    /*0000c8ac*/ MOVT        R5, #65535                  @ 0xffff 
    /*0000c8b0*/ B           VouSetDispBufLen_xc884
    VouSetDispBufLen_xc8b4:
    /*0000c8b4*/ MOV         R3, #3 
    /*0000c8b8*/ STR         R4, [SP, #8] 
    /*0000c8bc*/ STR         R3, [SP, #12] 
    /*0000c8c0*/ MOV         R0, R3 
    /*0000c8c4*/ STR         R6, [SP, #4] 
    /*0000c8c8*/ MOVW        R3, #7179                   @ 0x1c0b 
    /*0000c8cc*/ MOV         R1, #15 
    /*0000c8d0*/ STR         R3, [SP] 
    /*0000c8d4*/ MOVW        R2, #0                      @ .LC134 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4618] 
    /*0000c8d8*/ LDR         R3, [PC, #88]               @ 0x000000000000c938 
    /*0000c8dc*/ MOVT        R2, #0                      @ .LC134 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4618] 
    /*0000c8e0*/ MOVW        R5, #32771                  @ 0x8003 
    /*0000c8e4*/ BL          0x000000000000C8E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c8e8*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c8ec*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c8f0*/ MOVT        R5, #40975                  @ 0xa00f 
    /*0000c8f4*/ BL          0x000000000000C8F4          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c8f8*/ B           VouSetDispBufLen_xc884
    VouSetDispBufLen_xc8fc:
    /*0000c8fc*/ MOV         R3, #7168                   @ 0x1c00 
    /*0000c900*/ MOV         R1, #15 
    /*0000c904*/ STR         R3, [SP] 
    /*0000c908*/ MOVW        R2, #0                      @ .LC133 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x45b4] 
    /*0000c90c*/ LDR         R3, [PC, #36]               @ 0x000000000000c938 
    /*0000c910*/ MOVT        R2, #0                      @ .LC133 [R_ARM_MOVT_ABS: .rodata.str1.4+0x45b4] 
    /*0000c914*/ STR         R6, [SP, #4] 
    /*0000c918*/ MOV         R0, #3 
    /*0000c91c*/ BL          0x000000000000C91C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c920*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c924*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c928*/ MOVW        R5, #32777                  @ 0x8009 
    /*0000c92c*/ BL          0x000000000000C92C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000c930*/ MOVT        R5, #40975                  @ 0xa00f 
    /*0000c934*/ B           VouSetDispBufLen_xc884
    /*0000c938*/ MULEQ       R0, IP, R7 
FUNC_END VouSetDispBufLen


FUNC_BEGIN VouGetDispBufLen
    /*0000c93c*/ PUSH        {R4, R5, R6, LR} 
    /*0000c940*/ MOV         R5, R1 
    /*0000c944*/ MOV         R4, R0 
    /*0000c948*/ BL          0x000000000000C948          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000c94c*/ CMP         R0, #0 
    /*0000c950*/ BNE         VouGetDispBufLen_xc9a4
    /*0000c954*/ MOV         R0, R5 
    /*0000c958*/ BL          0x000000000000C958          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000c95c*/ SUBS        R6, R0, #0 
    /*0000c960*/ BNE         VouGetDispBufLen_xc9b0
    /*0000c964*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c968*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c96c*/ BL          0x000000000000C96C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000c970*/ CMP         R0, #0 
    /*0000c974*/ BNE         VouGetDispBufLen_xc9bc
    /*0000c978*/ MOVW        R3, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000c97c*/ MOVT        R3, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000c980*/ MOVW        R2, #12192                  @ 0x2fa0 
    /*0000c984*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000c988*/ MLA         R4, R2, R4, R3 
    /*0000c98c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000c990*/ LDR         R3, [R4, #28] 
    /*0000c994*/ STR         R3, [R5] 
    /*0000c998*/ BL          0x000000000000C998          @ osal_up [R_ARM_CALL: +0x0] 
    VouGetDispBufLen_xc99c:
    /*0000c99c*/ MOV         R0, R6 
    /*0000c9a0*/ POP         {R4, R5, R6, PC} 
    VouGetDispBufLen_xc9a4:
    /*0000c9a4*/ MOVW        R6, #32877                  @ 0x806d 
    /*0000c9a8*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000c9ac*/ B           VouGetDispBufLen_xc99c
    VouGetDispBufLen_xc9b0:
    /*0000c9b0*/ MOVW        R6, #32774                  @ 0x8006 
    /*0000c9b4*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000c9b8*/ B           VouGetDispBufLen_xc99c
    VouGetDispBufLen_xc9bc:
    /*0000c9bc*/ MOV         R6, #65024                  @ 0xfe00 
    /*0000c9c0*/ MOVT        R6, #65535                  @ 0xffff 
    /*0000c9c4*/ B           VouGetDispBufLen_xc99c
FUNC_END VouGetDispBufLen


FUNC_BEGIN VouSetPlayToleration
    /*0000c9c8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000c9cc*/ SUB         SP, SP, #12 
    /*0000c9d0*/ MOVW        R3, #7236                   @ 0x1c44 
    /*0000c9d4*/ MOV         R1, #15 
    /*0000c9d8*/ STR         R3, [SP] 
    /*0000c9dc*/ MOVW        R2, #0                      @ .LC135 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4670] 
    /*0000c9e0*/ LDR         R3, [PC, #24]               @ 0x000000000000ca00 
    /*0000c9e4*/ MOVT        R2, #0                      @ .LC135 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4670] 
    /*0000c9e8*/ MOV         R0, #3 
    /*0000c9ec*/ BL          0x000000000000C9EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000c9f0*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000c9f4*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0000c9f8*/ ADD         SP, SP, #12 
    /*0000c9fc*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000ca00*/ @           <UNDEFINED> instruction: 0x000007b0 
FUNC_END VouSetPlayToleration


FUNC_BEGIN VouGetPlayToleration
    /*0000ca04*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000ca08*/ SUB         SP, SP, #12 
    /*0000ca0c*/ MOVW        R3, #7260                   @ 0x1c5c 
    /*0000ca10*/ MOV         R1, #15 
    /*0000ca14*/ STR         R3, [SP] 
    /*0000ca18*/ MOVW        R2, #0                      @ .LC136 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x46bc] 
    /*0000ca1c*/ LDR         R3, [PC, #24]               @ 0x000000000000ca3c 
    /*0000ca20*/ MOVT        R2, #0                      @ .LC136 [R_ARM_MOVT_ABS: .rodata.str1.4+0x46bc] 
    /*0000ca24*/ MOV         R0, #3 
    /*0000ca28*/ BL          0x000000000000CA28          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ca2c*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000ca30*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0000ca34*/ ADD         SP, SP, #12 
    /*0000ca38*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000ca3c*/ ANDEQ       R0, R0, R8, ASR #15 
FUNC_END VouGetPlayToleration


FUNC_BEGIN VouChnClearBuf
    /*0000ca40*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000ca44*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000ca48*/ MOV         R3, #0 
    /*0000ca4c*/ MOV         R5, R1 
    /*0000ca50*/ STR         R1, [SP, #24] 
    /*0000ca54*/ MOV         R4, R0 
    /*0000ca58*/ STR         R2, [SP, #28] 
    /*0000ca5c*/ STR         R0, [SP, #20] 
    /*0000ca60*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000ca64*/ STR         R3, [SP, #48]               @ 0x30 
    /*0000ca68*/ STR         R3, [SP, #56]               @ 0x38 
    /*0000ca6c*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0000ca70*/ BL          0x000000000000CA70          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000ca74*/ CMP         R0, #0 
    /*0000ca78*/ BNE         VouChnClearBuf_xce44
    /*0000ca7c*/ MOV         R1, R5 
    /*0000ca80*/ MOV         R0, R4 
    /*0000ca84*/ BL          0x000000000000CA84          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000ca88*/ CMP         R0, #0 
    /*0000ca8c*/ BNE         VouChnClearBuf_xce50
    /*0000ca90*/ MOV         R0, R4 
    /*0000ca94*/ BL          0x000000000000CA94          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*0000ca98*/ CMN         R0, #1 
    /*0000ca9c*/ BEQ         VouChnClearBuf_xcfa8
    /*0000caa0*/ LDR         R3, [SP, #28] 
    /*0000caa4*/ CMP         R3, #1 
    /*0000caa8*/ BHI         VouChnClearBuf_xce5c
    /*0000caac*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000cab0*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000cab4*/ BL          0x000000000000CAB4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000cab8*/ CMP         R0, #0 
    /*0000cabc*/ BNE         VouChnClearBuf_xcd00
    /*0000cac0*/ LDR         R3, [SP, #20] 
    /*0000cac4*/ MOVW        R6, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000cac8*/ LDR         R2, [SP, #24] 
    /*0000cacc*/ MOVT        R6, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000cad0*/ LSL         R3, R3, #2 
    /*0000cad4*/ STR         R3, [SP, #32] 
    /*0000cad8*/ ADD         R3, R3, R2 
    /*0000cadc*/ LDR         R3, [R6, R3, LSL #2] 
    /*0000cae0*/ CMP         R3, #0 
    /*0000cae4*/ BEQ         VouChnClearBuf_xce9c
    VouChnClearBuf_xcae8:
    /*0000cae8*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000caec*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000caf0*/ BL          0x000000000000CAF0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000caf4*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000caf8*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000cafc*/ BL          0x000000000000CAFC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000cb00*/ CMP         R0, #0 
    /*0000cb04*/ BNE         VouChnClearBuf_xcd00
    /*0000cb08*/ LDR         R2, [SP, #32] 
    /*0000cb0c*/ ADD         R8, SP, #64                 @ 0x40 
    /*0000cb10*/ LDR         R9, [SP, #24] 
    /*0000cb14*/ MOVW        R5, #0                      @ VO_WaitChnQryCallBack [R_ARM_MOVW_ABS_NC: .text+0x4b94] 
    /*0000cb18*/ STR         R0, [R8, #-20]!             @ 0xffffffec 
    /*0000cb1c*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000cb20*/ ADD         R3, R2, R9 
    /*0000cb24*/ MOV         R1, R8 
    /*0000cb28*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000cb2c*/ MOVT        R5, #0                      @ VO_WaitChnQryCallBack [R_ARM_MOVT_ABS: .text+0x4b94] 
    /*0000cb30*/ LDR         R3, [R6, R3, LSL #2] 
    /*0000cb34*/ MOV         R4, R3 
    /*0000cb38*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000cb3c*/ ADD         FP, R4, #8192               @ 0x2000 
    /*0000cb40*/ BL          0x000000000000CB40          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000cb44*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000cb48*/ MOV         R2, #1 
    /*0000cb4c*/ MOV         R1, R8 
    /*0000cb50*/ STR         R2, [FP, #1320]             @ 0x528 
    /*0000cb54*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000cb58*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000cb5c*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000cb60*/ BL          0x000000000000CB60          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000cb64*/ LDR         R3, [SP, #20] 
    /*0000cb68*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000cb6c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000cb70*/ STR         R9, [SP, #52]               @ 0x34 
    /*0000cb74*/ LDR         SL, [SP, #44]               @ 0x2c 
    /*0000cb78*/ ADD         R7, R4, #9472               @ 0x2500 
    /*0000cb7c*/ STR         R3, [SP, #48]               @ 0x30 
    /*0000cb80*/ BL          0x000000000000CB80          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000cb84*/ ADD         R7, R7, #48                 @ 0x30 
    /*0000cb88*/ MOV         R4, #4000                   @ 0xfa0 
    VouChnClearBuf_xcb8c:
    /*0000cb8c*/ LDR         LR, [SP, #48]               @ 0x30 
    /*0000cb90*/ MOV         R3, R4 
    /*0000cb94*/ LDR         IP, [SP, #52]               @ 0x34 
    /*0000cb98*/ ADD         R2, SP, #48                 @ 0x30 
    /*0000cb9c*/ MOV         R1, R5 
    /*0000cba0*/ MOV         R0, R7 
    /*0000cba4*/ ADD         IP, IP, LR, LSL #2 
    /*0000cba8*/ LDR         IP, [R6, IP, LSL #2] 
    /*0000cbac*/ ADD         IP, IP, #8192               @ 0x2000 
    /*0000cbb0*/ LDR         LR, [IP, #1316]             @ 0x524 
    /*0000cbb4*/ CMP         LR, #0 
    /*0000cbb8*/ BEQ         VouChnClearBuf_xcbe0
    /*0000cbbc*/ LDR         LR, [IP, #1376]             @ 0x560 
    /*0000cbc0*/ CMP         LR, #0 
    /*0000cbc4*/ BNE         VouChnClearBuf_xcbe0
    /*0000cbc8*/ LDR         LR, [IP, #1380]             @ 0x564 
    /*0000cbcc*/ CMP         LR, #0 
    /*0000cbd0*/ BNE         VouChnClearBuf_xcbe0
    /*0000cbd4*/ LDR         IP, [IP, #1292]             @ 0x50c 
    /*0000cbd8*/ CMP         IP, #1 
    /*0000cbdc*/ BEQ         VouChnClearBuf_xcec8
    VouChnClearBuf_xcbe0:
    /*0000cbe0*/ BL          0x000000000000CBE0          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*0000cbe4*/ ADD         R3, R0, #512                @ 0x200 
    /*0000cbe8*/ MOV         R4, R0 
    /*0000cbec*/ BICS        R3, R3, #512                @ 0x200 
    /*0000cbf0*/ BNE         VouChnClearBuf_xcb8c
    VouChnClearBuf_xcbf4:
    /*0000cbf4*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000cbf8*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000cbfc*/ BL          0x000000000000CBFC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000cc00*/ CMP         R0, #0 
    /*0000cc04*/ BNE         VouChnClearBuf_xcd00
    /*0000cc08*/ CMP         R4, #0 
    /*0000cc0c*/ BLT         VouChnClearBuf_xccf4
    /*0000cc10*/ BEQ         VouChnClearBuf_xcfdc
    /*0000cc14*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000cc18*/ MOVW        R9, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000cc1c*/ MOVT        R9, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000cc20*/ ADD         R7, R3, #9472               @ 0x2500 
    /*0000cc24*/ ADD         R7, R7, #32 
    VouChnClearBuf_xcc28:
    /*0000cc28*/ LDR         R3, [SP, #20] 
    /*0000cc2c*/ MOV         R0, R9 
    /*0000cc30*/ MOVW        R5, #0                      @ VO_WaitChnClearBufCallBack [R_ARM_MOVW_ABS_NC: .text+0x4c70] 
    /*0000cc34*/ MOV         R4, #1000                   @ 0x3e8 
    /*0000cc38*/ MOVT        R5, #0                      @ VO_WaitChnClearBufCallBack [R_ARM_MOVT_ABS: .text+0x4c70] 
    /*0000cc3c*/ STR         R3, [SP, #48]               @ 0x30 
    /*0000cc40*/ LDR         R3, [SP, #24] 
    /*0000cc44*/ STR         R3, [SP, #52]               @ 0x34 
    /*0000cc48*/ BL          0x000000000000CC48          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000cc4c*/ B           VouChnClearBuf_xcc64
    VouChnClearBuf_xcc50:
    /*0000cc50*/ BL          0x000000000000CC50          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*0000cc54*/ ADD         R3, R0, #512                @ 0x200 
    /*0000cc58*/ MOV         R4, R0 
    /*0000cc5c*/ BICS        R3, R3, #512                @ 0x200 
    /*0000cc60*/ BEQ         VouChnClearBuf_xcca0
    VouChnClearBuf_xcc64:
    /*0000cc64*/ LDR         LR, [SP, #48]               @ 0x30 
    /*0000cc68*/ MOV         R3, R4 
    /*0000cc6c*/ LDR         IP, [SP, #52]               @ 0x34 
    /*0000cc70*/ ADD         R2, SP, #48                 @ 0x30 
    /*0000cc74*/ MOV         R1, R5 
    /*0000cc78*/ MOV         R0, R7 
    /*0000cc7c*/ ADD         IP, IP, LR, LSL #2 
    /*0000cc80*/ LDR         IP, [R6, IP, LSL #2] 
    /*0000cc84*/ ADD         IP, IP, #8192               @ 0x2000 
    /*0000cc88*/ LDR         IP, [IP, #1300]             @ 0x514 
    /*0000cc8c*/ CMP         IP, #1 
    /*0000cc90*/ BNE         VouChnClearBuf_xcc50
    /*0000cc94*/ MOV         R0, R4 
    /*0000cc98*/ BL          0x000000000000CC98          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*0000cc9c*/ MOV         R4, R0 
    VouChnClearBuf_xcca0:
    /*0000cca0*/ MOV         R0, R9 
    /*0000cca4*/ BL          0x000000000000CCA4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000cca8*/ SUBS        R5, R0, #0 
    /*0000ccac*/ BNE         VouChnClearBuf_xcd00
    /*0000ccb0*/ CMP         R4, #0 
    /*0000ccb4*/ BLE         VouChnClearBuf_xcd14
    /*0000ccb8*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000ccbc*/ MOV         R1, R8 
    /*0000ccc0*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000ccc4*/ STR         SL, [SP, #44]               @ 0x2c 
    /*0000ccc8*/ BL          0x000000000000CCC8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000cccc*/ LDR         R3, [FP, #1300]             @ 0x514 
    /*0000ccd0*/ LDR         R4, [SP, #44]               @ 0x2c 
    /*0000ccd4*/ CMP         R3, #1 
    /*0000ccd8*/ BEQ         VouChnClearBuf_xcd64
    /*0000ccdc*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000cce0*/ MOV         R1, R8 
    /*0000cce4*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000cce8*/ BL          0x000000000000CCE8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000ccec*/ LDR         SL, [SP, #44]               @ 0x2c 
    /*0000ccf0*/ B           VouChnClearBuf_xcc28
    VouChnClearBuf_xccf4:
    /*0000ccf4*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000ccf8*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000ccfc*/ BL          0x000000000000CCFC          @ osal_up [R_ARM_CALL: +0x0] 
    VouChnClearBuf_xcd00:
    /*0000cd00*/ MOV         R4, #65024                  @ 0xfe00 
    /*0000cd04*/ MOVT        R4, #65535                  @ 0xffff 
    VouChnClearBuf_xcd08:
    /*0000cd08*/ MOV         R0, R4 
    /*0000cd0c*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000cd10*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnClearBuf_xcd14:
    /*0000cd14*/ LDR         R2, [SP, #20] 
    /*0000cd18*/ LDR         R3, [SP, #24] 
    /*0000cd1c*/ STR         R2, [SP, #4] 
    /*0000cd20*/ MOVW        R2, #0                      @ .LC139 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4788] 
    /*0000cd24*/ MOVT        R2, #0                      @ .LC139 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4788] 
    /*0000cd28*/ STR         R3, [SP, #8] 
    /*0000cd2c*/ MOVW        R3, #7558                   @ 0x1d86 
    /*0000cd30*/ STR         R3, [SP] 
    VouChnClearBuf_xcd34:
    /*0000cd34*/ LDR         R3, [PC, #708]              @ 0x000000000000d000 
    /*0000cd38*/ MOV         R1, #15 
    /*0000cd3c*/ MOV         R0, #3 
    /*0000cd40*/ MOVW        R4, #32786                  @ 0x8012 
    /*0000cd44*/ BL          0x000000000000CD44          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cd48*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000cd4c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000cd50*/ MOVT        R4, #40975                  @ 0xa00f 
    /*0000cd54*/ BL          0x000000000000CD54          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000cd58*/ MOV         R0, R4 
    /*0000cd5c*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000cd60*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnClearBuf_xcd64:
    /*0000cd64*/ LDR         R3, [SP, #28] 
    /*0000cd68*/ STR         R5, [FP, #1320]             @ 0x528 
    /*0000cd6c*/ CMP         R3, #1 
    /*0000cd70*/ BEQ         VouChnClearBuf_xcef8
    /*0000cd74*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0000cd78*/ LDR         R1, [R2, #24] 
    /*0000cd7c*/ CMP         R1, #0 
    /*0000cd80*/ BEQ         VouChnClearBuf_xcf80
    /*0000cd84*/ LDR         R3, [R1] 
    /*0000cd88*/ ADD         R1, R2, #304                @ 0x130 
    /*0000cd8c*/ STR         R3, [R2, #344]              @ 0x158 
    /*0000cd90*/ LDRD        R2, [R3, #240]              @ 0xf0 
    /*0000cd94*/ STRD        R2, [R1] 
    VouChnClearBuf_xcd98:
    /*0000cd98*/ LDR         R3, [FP, #1108]             @ 0x454 
    /*0000cd9c*/ CMP         R3, #0 
    /*0000cda0*/ BNE         VouChnClearBuf_xced8
    VouChnClearBuf_xcda4:
    /*0000cda4*/ LDR         R5, [SP, #20] 
    /*0000cda8*/ LDR         R1, [SP, #24] 
    /*0000cdac*/ MOV         R0, R5 
    /*0000cdb0*/ BL          0x000000000000CDB0          @ VouBufFreeChnBusyList [R_ARM_CALL: .text+0x48f8] 
    /*0000cdb4*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000cdb8*/ MUL         R3, R3, R5 
    /*0000cdbc*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000cdc0*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000cdc4*/ ADD         R1, R2, R3 
    /*0000cdc8*/ LDR         R0, [R1, #28] 
    /*0000cdcc*/ CMP         R0, #0 
    /*0000cdd0*/ BEQ         VouChnClearBuf_xce08
    /*0000cdd4*/ ADD         R0, R0, #2944               @ 0xb80 
    /*0000cdd8*/ LDR         LR, [SP, #20] 
    /*0000cddc*/ ADD         R0, R0, #5 
    /*0000cde0*/ MOVW        IP, #3048                   @ 0xbe8 
    /*0000cde4*/ ADD         R3, R3, #11776              @ 0x2e00 
    /*0000cde8*/ MOV         R1, #1 
    /*0000cdec*/ MLA         R0, IP, LR, R0 
    /*0000cdf0*/ ADD         R3, R3, #20 
    /*0000cdf4*/ ADD         R3, R3, R2 
    /*0000cdf8*/ ADD         R2, R2, R0, LSL #2 
    VouChnClearBuf_xcdfc:
    /*0000cdfc*/ STR         R1, [R3, #4]! 
    /*0000ce00*/ CMP         R3, R2 
    /*0000ce04*/ BNE         VouChnClearBuf_xcdfc
    VouChnClearBuf_xce08:
    /*0000ce08*/ LDR         R2, [SP, #36]               @ 0x24 
    /*0000ce0c*/ MOV         R3, #1 
    /*0000ce10*/ MOV         R1, R8 
    /*0000ce14*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000ce18*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000ce1c*/ STR         R3, [R2, #228]              @ 0xe4 
    /*0000ce20*/ STR         R4, [SP, #44]               @ 0x2c 
    /*0000ce24*/ BL          0x000000000000CE24          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000ce28*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000ce2c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000ce30*/ BL          0x000000000000CE30          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000ce34*/ MOV         R4, #0 
    /*0000ce38*/ MOV         R0, R4 
    /*0000ce3c*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000ce40*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnClearBuf_xce44:
    /*0000ce44*/ MOVW        R4, #32877                  @ 0x806d 
    /*0000ce48*/ MOVT        R4, #40975                  @ 0xa00f 
    /*0000ce4c*/ B           VouChnClearBuf_xcd08
    VouChnClearBuf_xce50:
    /*0000ce50*/ MOVW        R4, #32770                  @ 0x8002 
    /*0000ce54*/ MOVT        R4, #40975                  @ 0xa00f 
    /*0000ce58*/ B           VouChnClearBuf_xcd08
    VouChnClearBuf_xce5c:
    /*0000ce5c*/ LDR         R2, [SP, #24] 
    /*0000ce60*/ MOV         R0, #3 
    /*0000ce64*/ LDR         R1, [SP, #20] 
    /*0000ce68*/ MOVW        R4, #32771                  @ 0x8003 
    /*0000ce6c*/ STR         R3, [SP, #12] 
    /*0000ce70*/ MOVW        R3, #7503                   @ 0x1d4f 
    /*0000ce74*/ STR         R2, [SP, #8] 
    /*0000ce78*/ MOVW        R2, #0                      @ .LC138 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4748] 
    /*0000ce7c*/ STR         R1, [SP, #4] 
    /*0000ce80*/ MOVT        R2, #0                      @ .LC138 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4748] 
    /*0000ce84*/ STR         R3, [SP] 
    /*0000ce88*/ MOV         R1, #15 
    /*0000ce8c*/ LDR         R3, [PC, #364]              @ 0x000000000000d000 
    /*0000ce90*/ MOVT        R4, #40975                  @ 0xa00f 
    /*0000ce94*/ BL          0x000000000000CE94          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ce98*/ B           VouChnClearBuf_xcd08
    VouChnClearBuf_xce9c:
    /*0000ce9c*/ MOV         R1, R2 
    /*0000cea0*/ LDR         R0, [SP, #20] 
    /*0000cea4*/ BL          0x0000000000005468 
    /*0000cea8*/ SUBS        R4, R0, #0 
    /*0000ceac*/ BEQ         VouChnClearBuf_xcae8
    /*0000ceb0*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000ceb4*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000ceb8*/ BL          0x000000000000CEB8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000cebc*/ MOV         R0, R4 
    /*0000cec0*/ ADD         SP, SP, #68                 @ 0x44 
    /*0000cec4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnClearBuf_xcec8:
    /*0000cec8*/ MOV         R0, R4 
    /*0000cecc*/ BL          0x000000000000CECC          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*0000ced0*/ MOV         R4, R0 
    /*0000ced4*/ B           VouChnClearBuf_xcbf4
    VouChnClearBuf_xced8:
    /*0000ced8*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0000cedc*/ MVN         R2, #0 
    /*0000cee0*/ ADD         R1, R3, #336                @ 0x150 
    /*0000cee4*/ MOV         R3, #3 
    /*0000cee8*/ STR         R3, [FP, #1108]             @ 0x454 
    /*0000ceec*/ MVN         R3, #0 
    /*0000cef0*/ STRD        R2, [R1] 
    /*0000cef4*/ B           VouChnClearBuf_xcda4
    VouChnClearBuf_xcef8:
    /*0000cef8*/ LDR         R9, [SP, #36]               @ 0x24 
    /*0000cefc*/ LDR         R7, [R9, #24] 
    /*0000cf00*/ CMP         R7, #0 
    /*0000cf04*/ BEQ         VouChnClearBuf_xcf38
    /*0000cf08*/ LDR         R3, [R7] 
    /*0000cf0c*/ LDRD        R2, [R3, #240]              @ 0xf0 
    /*0000cf10*/ STRD        R2, [R9, #32] 
    /*0000cf14*/ LDR         R0, [R7] 
    /*0000cf18*/ BL          0x000000000000CF18          @ VouBufSubBlkVb [R_ARM_CALL: .text+0x4324] 
    /*0000cf1c*/ ADD         R0, R9, #8960               @ 0x2300 
    /*0000cf20*/ MOV         R1, R7 
    /*0000cf24*/ ADD         R0, R0, #56                 @ 0x38 
    /*0000cf28*/ BL          0x000000000000CF28          @ VouBufPutFree [R_ARM_CALL: .text+0x3fd0] 
    /*0000cf2c*/ MOV         R0, R7 
    /*0000cf30*/ BL          0x000000000000CF30          @ VouBufResetNode [R_ARM_CALL: .text+0x3d70] 
    /*0000cf34*/ STR         R5, [R9, #24] 
    VouChnClearBuf_xcf38:
    /*0000cf38*/ LDR         R2, [SP, #24] 
    /*0000cf3c*/ MOV         LR, #0 
    /*0000cf40*/ LDR         R3, [SP, #32] 
    /*0000cf44*/ LDR         R5, [SP, #36]               @ 0x24 
    /*0000cf48*/ ADD         R3, R3, R2 
    /*0000cf4c*/ MOV         R2, #0 
    /*0000cf50*/ ADD         R1, R5, #336                @ 0x150 
    /*0000cf54*/ LDR         R0, [R6, R3, LSL #2] 
    /*0000cf58*/ MOV         R3, #0 
    /*0000cf5c*/ ADD         IP, R0, #304                @ 0x130 
    /*0000cf60*/ STR         LR, [R0, #344]              @ 0x158 
    /*0000cf64*/ STRD        R2, [IP] 
    /*0000cf68*/ MVN         R3, #0 
    /*0000cf6c*/ MVN         R2, #0 
    /*0000cf70*/ STRD        R2, [R1] 
    /*0000cf74*/ MOV         R3, #1 
    /*0000cf78*/ STR         R3, [R5, #56]               @ 0x38 
    /*0000cf7c*/ B           VouChnClearBuf_xcda4
    VouChnClearBuf_xcf80:
    /*0000cf80*/ LDR         R3, [SP, #32] 
    /*0000cf84*/ LDR         R2, [SP, #24] 
    /*0000cf88*/ ADD         R0, R3, R2 
    /*0000cf8c*/ MOV         R2, #0 
    /*0000cf90*/ MOV         R3, #0 
    /*0000cf94*/ LDR         R0, [R6, R0, LSL #2] 
    /*0000cf98*/ ADD         IP, R0, #304                @ 0x130 
    /*0000cf9c*/ STR         R1, [R0, #344]              @ 0x158 
    /*0000cfa0*/ STRD        R2, [IP] 
    /*0000cfa4*/ B           VouChnClearBuf_xcd98
    VouChnClearBuf_xcfa8:
    /*0000cfa8*/ LDR         R3, [SP, #20] 
    /*0000cfac*/ MOVW        R2, #0                      @ .LC137 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4708] 
    /*0000cfb0*/ MOV         R1, #15 
    /*0000cfb4*/ MOVT        R2, #0                      @ .LC137 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4708] 
    /*0000cfb8*/ MOV         R0, #3 
    /*0000cfbc*/ MOVW        R4, #32771                  @ 0x8003 
    /*0000cfc0*/ STR         R3, [SP, #4] 
    /*0000cfc4*/ MOVW        R3, #7497                   @ 0x1d49 
    /*0000cfc8*/ STR         R3, [SP] 
    /*0000cfcc*/ MOVT        R4, #40975                  @ 0xa00f 
    /*0000cfd0*/ LDR         R3, [PC, #40]               @ 0x000000000000d000 
    /*0000cfd4*/ BL          0x000000000000CFD4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000cfd8*/ B           VouChnClearBuf_xcd08
    VouChnClearBuf_xcfdc:
    /*0000cfdc*/ LDR         R3, [SP, #24] 
    /*0000cfe0*/ LDR         R2, [SP, #20] 
    /*0000cfe4*/ STR         R3, [SP, #8] 
    /*0000cfe8*/ MOVW        R3, #7536                   @ 0x1d70 
    /*0000cfec*/ STR         R2, [SP, #4] 
    /*0000cff0*/ MOVW        R2, #0                      @ .LC112 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x3f98] 
    /*0000cff4*/ STR         R3, [SP] 
    /*0000cff8*/ MOVT        R2, #0                      @ .LC112 [R_ARM_MOVT_ABS: .rodata.str1.4+0x3f98] 
    /*0000cffc*/ B           VouChnClearBuf_xcd34
    /*0000d000*/ ANDEQ       R0, R0, R0, ROR #15 
FUNC_END VouChnClearBuf


FUNC_BEGIN VouSetChnBorder
    /*0000d004*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000d008*/ SUB         SP, SP, #12 
    /*0000d00c*/ MOV         R5, R1 
    /*0000d010*/ MOV         R8, R2 
    /*0000d014*/ MOV         R4, R0 
    /*0000d018*/ BL          0x000000000000D018          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000d01c*/ CMP         R0, #0 
    /*0000d020*/ BNE         VouSetChnBorder_xd120
    /*0000d024*/ MOV         R1, R5 
    /*0000d028*/ MOV         R0, R4 
    /*0000d02c*/ BL          0x000000000000D02C          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000d030*/ CMP         R0, #0 
    /*0000d034*/ BNE         VouSetChnBorder_xd12c
    /*0000d038*/ MOV         R0, R8 
    /*0000d03c*/ BL          0x000000000000D03C          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000d040*/ CMP         R0, #0 
    /*0000d044*/ BNE         VouSetChnBorder_xd138
    /*0000d048*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000d04c*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000d050*/ BL          0x000000000000D050          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000d054*/ CMP         R0, #0 
    /*0000d058*/ BNE         VouSetChnBorder_xd144
    /*0000d05c*/ LSL         R7, R4, #2 
    /*0000d060*/ MOVW        R6, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000d064*/ ADD         R3, R7, R5 
    /*0000d068*/ MOVT        R6, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000d06c*/ LDR         R3, [R6, R3, LSL #2] 
    /*0000d070*/ CMP         R3, #0 
    /*0000d074*/ BEQ         VouSetChnBorder_xd18c
    VouSetChnBorder_xd078:
    /*0000d078*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000d07c*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000d080*/ BL          0x000000000000D080          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000d084*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000d088*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000d08c*/ BL          0x000000000000D08C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000d090*/ CMP         R0, #0 
    /*0000d094*/ BNE         VouSetChnBorder_xd144
    /*0000d098*/ ADD         R7, R7, R5 
    /*0000d09c*/ MOV         R0, R4 
    /*0000d0a0*/ LDR         R6, [R6, R7, LSL #2] 
    /*0000d0a4*/ BL          0x000000000000D0A4          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*0000d0a8*/ CMN         R0, #1 
    /*0000d0ac*/ BEQ         VouSetChnBorder_xd150
    /*0000d0b0*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000d0b4*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000d0b8*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000d0bc*/ MLA         R3, R3, R4, R2 
    /*0000d0c0*/ LDR         R2, [R3, #180]              @ 0xb4 
    /*0000d0c4*/ CMP         R2, #0 
    /*0000d0c8*/ BNE         VouSetChnBorder_xd1f4
    /*0000d0cc*/ LDR         R1, [R3, #28] 
    /*0000d0d0*/ MOV         R0, R4 
    /*0000d0d4*/ BL          0x000000000000D0D4          @ VOU_DRV_IsChipSupportBorder [R_ARM_CALL: .text+0x19294] 
    /*0000d0d8*/ CMP         R0, #1 
    /*0000d0dc*/ BNE         VouSetChnBorder_xd1b8
    /*0000d0e0*/ MOV         R1, R5 
    /*0000d0e4*/ MOV         R0, R4 
    /*0000d0e8*/ MOV         R2, R8 
    /*0000d0ec*/ BL          0x000000000000D0EC          @ VOU_DRV_CheckBorderParam [R_ARM_CALL: .text+0x19304] 
    /*0000d0f0*/ SUBS        R9, R0, #0 
    /*0000d0f4*/ BNE         VouSetChnBorder_xd108
    /*0000d0f8*/ MOV         R1, R8 
    /*0000d0fc*/ ADD         R0, R6, #1120               @ 0x460 
    /*0000d100*/ MOV         R2, #24 
    /*0000d104*/ BL          0x000000000000D104          @ osal_memcpy [R_ARM_CALL: +0x0] 
    VouSetChnBorder_xd108:
    /*0000d108*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000d10c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000d110*/ BL          0x000000000000D110          @ osal_up [R_ARM_CALL: +0x0] 
    VouSetChnBorder_xd114:
    /*0000d114*/ MOV         R0, R9 
    /*0000d118*/ ADD         SP, SP, #12 
    /*0000d11c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouSetChnBorder_xd120:
    /*0000d120*/ MOVW        R9, #32877                  @ 0x806d 
    /*0000d124*/ MOVT        R9, #40975                  @ 0xa00f 
    /*0000d128*/ B           VouSetChnBorder_xd114
    VouSetChnBorder_xd12c:
    /*0000d12c*/ MOVW        R9, #32770                  @ 0x8002 
    /*0000d130*/ MOVT        R9, #40975                  @ 0xa00f 
    /*0000d134*/ B           VouSetChnBorder_xd114
    VouSetChnBorder_xd138:
    /*0000d138*/ MOVW        R9, #32774                  @ 0x8006 
    /*0000d13c*/ MOVT        R9, #40975                  @ 0xa00f 
    /*0000d140*/ B           VouSetChnBorder_xd114
    VouSetChnBorder_xd144:
    /*0000d144*/ MOV         R9, #65024                  @ 0xfe00 
    /*0000d148*/ MOVT        R9, #65535                  @ 0xffff 
    /*0000d14c*/ B           VouSetChnBorder_xd114
    VouSetChnBorder_xd150:
    /*0000d150*/ MOVW        R3, #7690                   @ 0x1e0a 
    /*0000d154*/ MOV         R1, #15 
    /*0000d158*/ STR         R3, [SP] 
    /*0000d15c*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x339c] 
    /*0000d160*/ LDR         R3, [PC, #164]              @ 0x000000000000d20c 
    /*0000d164*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x339c] 
    /*0000d168*/ STR         R4, [SP, #4] 
    /*0000d16c*/ MOV         R0, #3 
    /*0000d170*/ BL          0x000000000000D170          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d174*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000d178*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000d17c*/ MOVW        R9, #32879                  @ 0x806f 
    /*0000d180*/ BL          0x000000000000D180          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000d184*/ MOVT        R9, #40975                  @ 0xa00f 
    /*0000d188*/ B           VouSetChnBorder_xd114
    VouSetChnBorder_xd18c:
    /*0000d18c*/ MOV         R1, R5 
    /*0000d190*/ MOV         R0, R4 
    /*0000d194*/ BL          0x0000000000005468 
    /*0000d198*/ SUBS        R9, R0, #0 
    /*0000d19c*/ BEQ         VouSetChnBorder_xd078
    /*0000d1a0*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000d1a4*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000d1a8*/ BL          0x000000000000D1A8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000d1ac*/ MOV         R0, R9 
    /*0000d1b0*/ ADD         SP, SP, #12 
    /*0000d1b4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouSetChnBorder_xd1b8:
    /*0000d1b8*/ MOVW        R2, #0                      @ .LC115 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4074] 
    /*0000d1bc*/ MOVT        R2, #0                      @ .LC115 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4074] 
    /*0000d1c0*/ MOVW        R3, #7705                   @ 0x1e19 
    /*0000d1c4*/ STR         R4, [SP, #4] 
    /*0000d1c8*/ STR         R3, [SP] 
    VouSetChnBorder_xd1cc:
    /*0000d1cc*/ LDR         R3, [PC, #56]               @ 0x000000000000d20c 
    /*0000d1d0*/ MOV         R1, #15 
    /*0000d1d4*/ MOV         R0, #3 
    /*0000d1d8*/ MOVW        R9, #32776                  @ 0x8008 
    /*0000d1dc*/ BL          0x000000000000D1DC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d1e0*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000d1e4*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000d1e8*/ MOVT        R9, #40975                  @ 0xa00f 
    /*0000d1ec*/ BL          0x000000000000D1EC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000d1f0*/ B           VouSetChnBorder_xd114
    VouSetChnBorder_xd1f4:
    /*0000d1f4*/ MOVW        R3, #7697                   @ 0x1e11 
    /*0000d1f8*/ MOVW        R2, #0                      @ .LC140 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x47d0] 
    /*0000d1fc*/ STR         R4, [SP, #4] 
    /*0000d200*/ MOVT        R2, #0                      @ .LC140 [R_ARM_MOVT_ABS: .rodata.str1.4+0x47d0] 
    /*0000d204*/ STR         R3, [SP] 
    /*0000d208*/ B           VouSetChnBorder_xd1cc
    /*0000d20c*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VouSetChnBorder


FUNC_BEGIN VouGetChnBorder
    /*0000d210*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000d214*/ SUB         SP, SP, #12 
    /*0000d218*/ MOV         R6, R1 
    /*0000d21c*/ MOV         R9, R2 
    /*0000d220*/ MOV         R4, R0 
    /*0000d224*/ BL          0x000000000000D224          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000d228*/ CMP         R0, #0 
    /*0000d22c*/ BNE         VouGetChnBorder_xd300
    /*0000d230*/ MOV         R1, R6 
    /*0000d234*/ MOV         R0, R4 
    /*0000d238*/ BL          0x000000000000D238          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000d23c*/ CMP         R0, #0 
    /*0000d240*/ BNE         VouGetChnBorder_xd30c
    /*0000d244*/ MOV         R0, R9 
    /*0000d248*/ BL          0x000000000000D248          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000d24c*/ SUBS        R7, R0, #0 
    /*0000d250*/ BNE         VouGetChnBorder_xd318
    /*0000d254*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000d258*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000d25c*/ BL          0x000000000000D25C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000d260*/ CMP         R0, #0 
    /*0000d264*/ BNE         VouGetChnBorder_xd324
    /*0000d268*/ LSL         R8, R4, #2 
    /*0000d26c*/ MOVW        R5, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000d270*/ ADD         R3, R8, R6 
    /*0000d274*/ MOVT        R5, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000d278*/ LDR         R3, [R5, R3, LSL #2] 
    /*0000d27c*/ CMP         R3, #0 
    /*0000d280*/ BEQ         VouGetChnBorder_xd36c
    VouGetChnBorder_xd284:
    /*0000d284*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000d288*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000d28c*/ BL          0x000000000000D28C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000d290*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000d294*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000d298*/ BL          0x000000000000D298          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000d29c*/ CMP         R0, #0 
    /*0000d2a0*/ BNE         VouGetChnBorder_xd324
    /*0000d2a4*/ ADD         R6, R8, R6 
    /*0000d2a8*/ MOV         R0, R4 
    /*0000d2ac*/ LDR         R5, [R5, R6, LSL #2] 
    /*0000d2b0*/ BL          0x000000000000D2B0          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*0000d2b4*/ CMN         R0, #1 
    /*0000d2b8*/ BEQ         VouGetChnBorder_xd330
    /*0000d2bc*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000d2c0*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000d2c4*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000d2c8*/ MLA         R3, R3, R4, R2 
    /*0000d2cc*/ LDR         R3, [R3, #180]              @ 0xb4 
    /*0000d2d0*/ CMP         R3, #0 
    /*0000d2d4*/ BNE         VouGetChnBorder_xd39c
    /*0000d2d8*/ ADD         R1, R5, #1120               @ 0x460 
    /*0000d2dc*/ MOV         R0, R9 
    /*0000d2e0*/ MOV         R2, #24 
    /*0000d2e4*/ BL          0x000000000000D2E4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000d2e8*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000d2ec*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000d2f0*/ BL          0x000000000000D2F0          @ osal_up [R_ARM_CALL: +0x0] 
    VouGetChnBorder_xd2f4:
    /*0000d2f4*/ MOV         R0, R7 
    /*0000d2f8*/ ADD         SP, SP, #12 
    /*0000d2fc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouGetChnBorder_xd300:
    /*0000d300*/ MOVW        R7, #32877                  @ 0x806d 
    /*0000d304*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000d308*/ B           VouGetChnBorder_xd2f4
    VouGetChnBorder_xd30c:
    /*0000d30c*/ MOVW        R7, #32770                  @ 0x8002 
    /*0000d310*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000d314*/ B           VouGetChnBorder_xd2f4
    VouGetChnBorder_xd318:
    /*0000d318*/ MOVW        R7, #32774                  @ 0x8006 
    /*0000d31c*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000d320*/ B           VouGetChnBorder_xd2f4
    VouGetChnBorder_xd324:
    /*0000d324*/ MOV         R7, #65024                  @ 0xfe00 
    /*0000d328*/ MOVT        R7, #65535                  @ 0xffff 
    /*0000d32c*/ B           VouGetChnBorder_xd2f4
    VouGetChnBorder_xd330:
    /*0000d330*/ MOVW        R3, #7736                   @ 0x1e38 
    /*0000d334*/ MOV         R1, #15 
    /*0000d338*/ STR         R3, [SP] 
    /*0000d33c*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x339c] 
    /*0000d340*/ LDR         R3, [PC, #144]              @ 0x000000000000d3d8 
    /*0000d344*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x339c] 
    /*0000d348*/ STR         R4, [SP, #4] 
    /*0000d34c*/ MOV         R0, #3 
    /*0000d350*/ BL          0x000000000000D350          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d354*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000d358*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000d35c*/ MOVW        R7, #32879                  @ 0x806f 
    /*0000d360*/ BL          0x000000000000D360          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000d364*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000d368*/ B           VouGetChnBorder_xd2f4
    VouGetChnBorder_xd36c:
    /*0000d36c*/ MOV         R1, R6 
    /*0000d370*/ MOV         R0, R4 
    /*0000d374*/ BL          0x0000000000005468 
    /*0000d378*/ SUBS        R3, R0, #0 
    /*0000d37c*/ BEQ         VouGetChnBorder_xd284
    /*0000d380*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000d384*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000d388*/ MOV         R7, R3 
    /*0000d38c*/ BL          0x000000000000D38C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000d390*/ MOV         R0, R7 
    /*0000d394*/ ADD         SP, SP, #12 
    /*0000d398*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouGetChnBorder_xd39c:
    /*0000d39c*/ MOVW        R3, #7743                   @ 0x1e3f 
    /*0000d3a0*/ MOV         R1, #15 
    /*0000d3a4*/ STR         R3, [SP] 
    /*0000d3a8*/ MOVW        R2, #0                      @ .LC141 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x482c] 
    /*0000d3ac*/ LDR         R3, [PC, #36]               @ 0x000000000000d3d8 
    /*0000d3b0*/ MOVT        R2, #0                      @ .LC141 [R_ARM_MOVT_ABS: .rodata.str1.4+0x482c] 
    /*0000d3b4*/ STR         R4, [SP, #4] 
    /*0000d3b8*/ MOV         R0, #3 
    /*0000d3bc*/ BL          0x000000000000D3BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d3c0*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000d3c4*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000d3c8*/ MOVW        R7, #32776                  @ 0x8008 
    /*0000d3cc*/ BL          0x000000000000D3CC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000d3d0*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000d3d4*/ B           VouGetChnBorder_xd2f4
    /*0000d3d8*/ ANDEQ       R0, R0, R0, LSL #16 
FUNC_END VouGetChnBorder


FUNC_BEGIN VouSetVideoLayerBoundary
    /*0000d3dc*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000d3e0*/ SUB         SP, SP, #12 
    /*0000d3e4*/ MOVW        R3, #7809                   @ 0x1e81 
    /*0000d3e8*/ MOV         R1, #15 
    /*0000d3ec*/ STR         R0, [SP, #4] 
    /*0000d3f0*/ MOVW        R2, #0                      @ .LC142 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4880] 
    /*0000d3f4*/ STR         R3, [SP] 
    /*0000d3f8*/ MOVT        R2, #0                      @ .LC142 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4880] 
    /*0000d3fc*/ LDR         R3, [PC, #20]               @ 0x000000000000d418 
    /*0000d400*/ MOV         R0, #3 
    /*0000d404*/ BL          0x000000000000D404          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d408*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000d40c*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0000d410*/ ADD         SP, SP, #12 
    /*0000d414*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000d418*/ ANDEQ       R0, R0, R0, LSL R8 
FUNC_END VouSetVideoLayerBoundary


FUNC_BEGIN VouGetVideoLayerBoundary
    /*0000d41c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000d420*/ SUB         SP, SP, #12 
    /*0000d424*/ MOVW        R3, #7847                   @ 0x1ea7 
    /*0000d428*/ MOV         R1, #15 
    /*0000d42c*/ STR         R0, [SP, #4] 
    /*0000d430*/ MOVW        R2, #0                      @ .LC143 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x48dc] 
    /*0000d434*/ STR         R3, [SP] 
    /*0000d438*/ MOVT        R2, #0                      @ .LC143 [R_ARM_MOVT_ABS: .rodata.str1.4+0x48dc] 
    /*0000d43c*/ LDR         R3, [PC, #20]               @ 0x000000000000d458 
    /*0000d440*/ MOV         R0, #3 
    /*0000d444*/ BL          0x000000000000D444          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d448*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000d44c*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0000d450*/ ADD         SP, SP, #12 
    /*0000d454*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000d458*/ ANDEQ       R0, R0, IP, LSR #16 
FUNC_END VouGetVideoLayerBoundary


FUNC_BEGIN VouSetChnBoundary
    /*0000d45c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000d460*/ SUB         SP, SP, #20 
    /*0000d464*/ MOVW        R3, #7912                   @ 0x1ee8 
    /*0000d468*/ MOVW        R2, #0                      @ .LC144 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4938] 
    /*0000d46c*/ STR         R1, [SP, #8] 
    /*0000d470*/ MOVT        R2, #0                      @ .LC144 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4938] 
    /*0000d474*/ STR         R0, [SP, #4] 
    /*0000d478*/ MOV         R1, #15 
    /*0000d47c*/ STR         R3, [SP] 
    /*0000d480*/ MOV         R0, #3 
    /*0000d484*/ LDR         R3, [PC, #16]               @ 0x000000000000d49c 
    /*0000d488*/ BL          0x000000000000D488          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d48c*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000d490*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0000d494*/ ADD         SP, SP, #20 
    /*0000d498*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000d49c*/ ANDEQ       R0, R0, R8, ASR #16 
FUNC_END VouSetChnBoundary


FUNC_BEGIN VouGetChnBoundary
    /*0000d4a0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0000d4a4*/ SUB         SP, SP, #20 
    /*0000d4a8*/ MOVW        R3, #7952                   @ 0x1f10 
    /*0000d4ac*/ MOVW        R2, #0                      @ .LC145 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x498c] 
    /*0000d4b0*/ STR         R1, [SP, #8] 
    /*0000d4b4*/ MOVT        R2, #0                      @ .LC145 [R_ARM_MOVT_ABS: .rodata.str1.4+0x498c] 
    /*0000d4b8*/ STR         R0, [SP, #4] 
    /*0000d4bc*/ MOV         R1, #15 
    /*0000d4c0*/ STR         R3, [SP] 
    /*0000d4c4*/ MOV         R0, #3 
    /*0000d4c8*/ LDR         R3, [PC, #16]               @ 0x000000000000d4e0 
    /*0000d4cc*/ BL          0x000000000000D4CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d4d0*/ MOVW        R0, #32776                  @ 0x8008 
    /*0000d4d4*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0000d4d8*/ ADD         SP, SP, #20 
    /*0000d4dc*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*0000d4e0*/ ANDEQ       R0, R0, IP, ASR R8 
FUNC_END VouGetChnBoundary


FUNC_BEGIN VouSetChnReceiveThreshold
    /*0000d4e4*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000d4e8*/ SUB         SP, SP, #36                 @ 0x24 
    /*0000d4ec*/ MOV         R6, R1 
    /*0000d4f0*/ MOV         R5, R2 
    /*0000d4f4*/ MOV         R4, R0 
    /*0000d4f8*/ BL          0x000000000000D4F8          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000d4fc*/ CMP         R0, #0 
    /*0000d500*/ BNE         VouSetChnReceiveThreshold_xd66c
    /*0000d504*/ MOV         R1, R6 
    /*0000d508*/ MOV         R0, R4 
    /*0000d50c*/ BL          0x000000000000D50C          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000d510*/ CMP         R0, #0 
    /*0000d514*/ BNE         VouSetChnReceiveThreshold_xd678
    /*0000d518*/ MOV         R0, R5 
    /*0000d51c*/ BL          0x000000000000D51C          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000d520*/ SUBS        R7, R0, #0 
    /*0000d524*/ BNE         VouSetChnReceiveThreshold_xd684
    /*0000d528*/ MOV         R0, R4 
    /*0000d52c*/ LDR         R8, [R5] 
    /*0000d530*/ BL          0x000000000000D530          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*0000d534*/ CMN         R0, #1 
    /*0000d538*/ BEQ         VouSetChnReceiveThreshold_xd744
    /*0000d53c*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000d540*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000d544*/ MUL         R3, R3, R4 
    /*0000d548*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000d54c*/ ADD         R1, R2, R3 
    /*0000d550*/ LDR         R3, [R2, R3] 
    /*0000d554*/ CMP         R3, #0 
    /*0000d558*/ BEQ         VouSetChnReceiveThreshold_xd6cc
    /*0000d55c*/ LDR         R3, [R1, #180]              @ 0xb4 
    /*0000d560*/ CMP         R3, #1 
    /*0000d564*/ BEQ         VouSetChnReceiveThreshold_xd618
    /*0000d568*/ SUB         R3, R8, #2 
    /*0000d56c*/ CMP         R3, #2 
    /*0000d570*/ BHI         VouSetChnReceiveThreshold_xd6fc
    VouSetChnReceiveThreshold_xd574:
    /*0000d574*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000d578*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000d57c*/ BL          0x000000000000D57C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000d580*/ CMP         R0, #0 
    /*0000d584*/ BNE         VouSetChnReceiveThreshold_xd690
    /*0000d588*/ LSL         R9, R4, #2 
    /*0000d58c*/ MOVW        R5, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000d590*/ ADD         R3, R9, R6 
    /*0000d594*/ MOVT        R5, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000d598*/ LDR         R3, [R5, R3, LSL #2] 
    /*0000d59c*/ CMP         R3, #0 
    /*0000d5a0*/ BEQ         VouSetChnReceiveThreshold_xd69c
    VouSetChnReceiveThreshold_xd5a4:
    /*0000d5a4*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000d5a8*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000d5ac*/ BL          0x000000000000D5AC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000d5b0*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000d5b4*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000d5b8*/ BL          0x000000000000D5B8          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000d5bc*/ CMP         R0, #0 
    /*0000d5c0*/ BNE         VouSetChnReceiveThreshold_xd690
    /*0000d5c4*/ ADD         R4, SP, #32 
    /*0000d5c8*/ ADD         R6, R9, R6 
    /*0000d5cc*/ STR         R0, [R4, #-4]! 
    /*0000d5d0*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000d5d4*/ LDR         R5, [R5, R6, LSL #2] 
    /*0000d5d8*/ MOV         R1, R4 
    /*0000d5dc*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000d5e0*/ BL          0x000000000000D5E0          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000d5e4*/ LDR         R3, [SP, #28] 
    /*0000d5e8*/ MOV         R1, R4 
    /*0000d5ec*/ STR         R8, [R5, #1152]             @ 0x480 
    /*0000d5f0*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000d5f4*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000d5f8*/ STR         R3, [SP, #28] 
    /*0000d5fc*/ BL          0x000000000000D5FC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000d600*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000d604*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000d608*/ BL          0x000000000000D608          @ osal_up [R_ARM_CALL: +0x0] 
    VouSetChnReceiveThreshold_xd60c:
    /*0000d60c*/ MOV         R0, R7 
    /*0000d610*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000d614*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouSetChnReceiveThreshold_xd618:
    /*0000d618*/ SUB         R3, R8, #3 
    /*0000d61c*/ CMP         R3, #1 
    /*0000d620*/ BLS         VouSetChnReceiveThreshold_xd574
    /*0000d624*/ MOV         R3, #3 
    /*0000d628*/ MOV         R2, #4 
    /*0000d62c*/ MOV         R0, R3 
    /*0000d630*/ STR         R3, [SP, #16] 
    /*0000d634*/ STR         R2, [SP, #20] 
    /*0000d638*/ MOVW        R3, #7989                   @ 0x1f35 
    /*0000d63c*/ STR         R8, [SP, #12] 
    /*0000d640*/ MOVW        R2, #0                      @ .LC147 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4a20] 
    /*0000d644*/ STR         R3, [SP] 
    /*0000d648*/ MOVT        R2, #0                      @ .LC147 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4a20] 
    /*0000d64c*/ STR         R6, [SP, #8] 
    /*0000d650*/ MOV         R1, #15 
    /*0000d654*/ STR         R4, [SP, #4] 
    /*0000d658*/ MOVW        R7, #32771                  @ 0x8003 
    /*0000d65c*/ LDR         R3, [PC, #272]              @ 0x000000000000d774 
    /*0000d660*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000d664*/ BL          0x000000000000D664          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d668*/ B           VouSetChnReceiveThreshold_xd60c
    VouSetChnReceiveThreshold_xd66c:
    /*0000d66c*/ MOVW        R7, #32877                  @ 0x806d 
    /*0000d670*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000d674*/ B           VouSetChnReceiveThreshold_xd60c
    VouSetChnReceiveThreshold_xd678:
    /*0000d678*/ MOVW        R7, #32770                  @ 0x8002 
    /*0000d67c*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000d680*/ B           VouSetChnReceiveThreshold_xd60c
    VouSetChnReceiveThreshold_xd684:
    /*0000d684*/ MOVW        R7, #32774                  @ 0x8006 
    /*0000d688*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000d68c*/ B           VouSetChnReceiveThreshold_xd60c
    VouSetChnReceiveThreshold_xd690:
    /*0000d690*/ MOV         R7, #65024                  @ 0xfe00 
    /*0000d694*/ MOVT        R7, #65535                  @ 0xffff 
    /*0000d698*/ B           VouSetChnReceiveThreshold_xd60c
    VouSetChnReceiveThreshold_xd69c:
    /*0000d69c*/ MOV         R0, R4 
    /*0000d6a0*/ MOV         R1, R6 
    /*0000d6a4*/ BL          0x0000000000005468 
    /*0000d6a8*/ SUBS        R3, R0, #0 
    /*0000d6ac*/ BEQ         VouSetChnReceiveThreshold_xd5a4
    /*0000d6b0*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000d6b4*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000d6b8*/ MOV         R7, R3 
    /*0000d6bc*/ BL          0x000000000000D6BC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000d6c0*/ MOV         R0, R7 
    /*0000d6c4*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000d6c8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouSetChnReceiveThreshold_xd6cc:
    /*0000d6cc*/ MOVW        R3, #7981                   @ 0x1f2d 
    /*0000d6d0*/ STR         R4, [SP, #4] 
    /*0000d6d4*/ STR         R3, [SP] 
    /*0000d6d8*/ MOVW        R2, #0                      @ .LC146 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x49e0] 
    /*0000d6dc*/ LDR         R3, [PC, #144]              @ 0x000000000000d774 
    /*0000d6e0*/ MOVT        R2, #0                      @ .LC146 [R_ARM_MOVT_ABS: .rodata.str1.4+0x49e0] 
    /*0000d6e4*/ MOV         R1, #15 
    /*0000d6e8*/ MOV         R0, #3 
    /*0000d6ec*/ MOVW        R7, #32837                  @ 0x8045 
    /*0000d6f0*/ BL          0x000000000000D6F0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d6f4*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000d6f8*/ B           VouSetChnReceiveThreshold_xd60c
    VouSetChnReceiveThreshold_xd6fc:
    /*0000d6fc*/ MOV         R2, #4 
    /*0000d700*/ MOV         R1, #2 
    /*0000d704*/ MOVW        R3, #7998                   @ 0x1f3e 
    /*0000d708*/ STR         R2, [SP, #20] 
    /*0000d70c*/ STR         R1, [SP, #16] 
    /*0000d710*/ MOVW        R2, #0                      @ .LC147 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4a20] 
    /*0000d714*/ STR         R3, [SP] 
    /*0000d718*/ MOVT        R2, #0                      @ .LC147 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4a20] 
    /*0000d71c*/ STR         R8, [SP, #12] 
    /*0000d720*/ MOV         R1, #15 
    /*0000d724*/ STR         R6, [SP, #8] 
    /*0000d728*/ MOV         R0, #3 
    /*0000d72c*/ STR         R4, [SP, #4] 
    /*0000d730*/ MOVW        R7, #32771                  @ 0x8003 
    /*0000d734*/ LDR         R3, [PC, #56]               @ 0x000000000000d774 
    /*0000d738*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000d73c*/ BL          0x000000000000D73C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d740*/ B           VouSetChnReceiveThreshold_xd60c
    VouSetChnReceiveThreshold_xd744:
    /*0000d744*/ MOVW        R3, #7974                   @ 0x1f26 
    /*0000d748*/ STR         R4, [SP, #4] 
    /*0000d74c*/ STR         R3, [SP] 
    /*0000d750*/ MOVW        R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x339c] 
    /*0000d754*/ LDR         R3, [PC, #24]               @ 0x000000000000d774 
    /*0000d758*/ MOVT        R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x339c] 
    /*0000d75c*/ MOV         R1, #15 
    /*0000d760*/ MOV         R0, #3 
    /*0000d764*/ MOVW        R7, #32879                  @ 0x806f 
    /*0000d768*/ BL          0x000000000000D768          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000d76c*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000d770*/ B           VouSetChnReceiveThreshold_xd60c
    /*0000d774*/ ANDEQ       R0, R0, R0, ROR R8 
FUNC_END VouSetChnReceiveThreshold


FUNC_BEGIN VouGetChnReceiveThreshold
    /*0000d778*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000d77c*/ MOV         R5, R1 
    /*0000d780*/ MOV         R9, R2 
    /*0000d784*/ MOV         R7, R0 
    /*0000d788*/ BL          0x000000000000D788          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000d78c*/ CMP         R0, #0 
    /*0000d790*/ BNE         VouGetChnReceiveThreshold_xd82c
    /*0000d794*/ MOV         R1, R5 
    /*0000d798*/ MOV         R0, R7 
    /*0000d79c*/ BL          0x000000000000D79C          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000d7a0*/ CMP         R0, #0 
    /*0000d7a4*/ BNE         VouGetChnReceiveThreshold_xd838
    /*0000d7a8*/ MOV         R0, R9 
    /*0000d7ac*/ BL          0x000000000000D7AC          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000d7b0*/ SUBS        R6, R0, #0 
    /*0000d7b4*/ BNE         VouGetChnReceiveThreshold_xd844
    /*0000d7b8*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000d7bc*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000d7c0*/ BL          0x000000000000D7C0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000d7c4*/ CMP         R0, #0 
    /*0000d7c8*/ BNE         VouGetChnReceiveThreshold_xd850
    /*0000d7cc*/ LSL         R8, R7, #2 
    /*0000d7d0*/ MOVW        R4, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000d7d4*/ ADD         R3, R8, R5 
    /*0000d7d8*/ MOVT        R4, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000d7dc*/ LDR         R3, [R4, R3, LSL #2] 
    /*0000d7e0*/ CMP         R3, #0 
    /*0000d7e4*/ BEQ         VouGetChnReceiveThreshold_xd85c
    VouGetChnReceiveThreshold_xd7e8:
    /*0000d7e8*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000d7ec*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000d7f0*/ BL          0x000000000000D7F0          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000d7f4*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000d7f8*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000d7fc*/ BL          0x000000000000D7FC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000d800*/ CMP         R0, #0 
    /*0000d804*/ BNE         VouGetChnReceiveThreshold_xd850
    /*0000d808*/ ADD         R5, R8, R5 
    /*0000d80c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000d810*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000d814*/ LDR         R3, [R4, R5, LSL #2] 
    /*0000d818*/ LDR         R3, [R3, #1152]             @ 0x480 
    /*0000d81c*/ STR         R3, [R9] 
    /*0000d820*/ BL          0x000000000000D820          @ osal_up [R_ARM_CALL: +0x0] 
    VouGetChnReceiveThreshold_xd824:
    /*0000d824*/ MOV         R0, R6 
    /*0000d828*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouGetChnReceiveThreshold_xd82c:
    /*0000d82c*/ MOVW        R6, #32877                  @ 0x806d 
    /*0000d830*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000d834*/ B           VouGetChnReceiveThreshold_xd824
    VouGetChnReceiveThreshold_xd838:
    /*0000d838*/ MOVW        R6, #32770                  @ 0x8002 
    /*0000d83c*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000d840*/ B           VouGetChnReceiveThreshold_xd824
    VouGetChnReceiveThreshold_xd844:
    /*0000d844*/ MOVW        R6, #32774                  @ 0x8006 
    /*0000d848*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000d84c*/ B           VouGetChnReceiveThreshold_xd824
    VouGetChnReceiveThreshold_xd850:
    /*0000d850*/ MOV         R6, #65024                  @ 0xfe00 
    /*0000d854*/ MOVT        R6, #65535                  @ 0xffff 
    /*0000d858*/ B           VouGetChnReceiveThreshold_xd824
    VouGetChnReceiveThreshold_xd85c:
    /*0000d85c*/ MOV         R0, R7 
    /*0000d860*/ MOV         R1, R5 
    /*0000d864*/ BL          0x0000000000005468 
    /*0000d868*/ SUBS        R3, R0, #0 
    /*0000d86c*/ BEQ         VouGetChnReceiveThreshold_xd7e8
    /*0000d870*/ MOV         R6, R3 
    /*0000d874*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000d878*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000d87c*/ BL          0x000000000000D87C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000d880*/ MOV         R0, R6 
    /*0000d884*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END VouGetChnReceiveThreshold


FUNC_BEGIN VouSetChnRotation
    /*0000d888*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000d88c*/ SUB         SP, SP, #28 
    /*0000d890*/ MOV         R7, R1 
    /*0000d894*/ MOV         R9, R2 
    /*0000d898*/ MOV         R6, R0 
    /*0000d89c*/ BL          0x000000000000D89C          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000d8a0*/ CMP         R0, #0 
    /*0000d8a4*/ BNE         VouSetChnRotation_xd96c
    /*0000d8a8*/ MOV         R1, R7 
    /*0000d8ac*/ MOV         R0, R6 
    /*0000d8b0*/ BL          0x000000000000D8B0          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000d8b4*/ CMP         R0, #0 
    /*0000d8b8*/ BNE         VouSetChnRotation_xd978
    /*0000d8bc*/ MOV         R0, R9 
    /*0000d8c0*/ BL          0x000000000000D8C0          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000d8c4*/ SUBS        R8, R0, #0 
    /*0000d8c8*/ BNE         VouSetChnRotation_xd984
    /*0000d8cc*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000d8d0*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000d8d4*/ BL          0x000000000000D8D4          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000d8d8*/ CMP         R0, #0 
    /*0000d8dc*/ BNE         VouSetChnRotation_xd990
    /*0000d8e0*/ LSL         R5, R6, #2 
    /*0000d8e4*/ MOVW        R4, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000d8e8*/ ADD         R3, R5, R7 
    /*0000d8ec*/ MOVT        R4, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000d8f0*/ LDR         R3, [R4, R3, LSL #2] 
    /*0000d8f4*/ CMP         R3, #0 
    /*0000d8f8*/ BEQ         VouSetChnRotation_xd99c
    VouSetChnRotation_xd8fc:
    /*0000d8fc*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000d900*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000d904*/ BL          0x000000000000D904          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000d908*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000d90c*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000d910*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000d914*/ ADD         R5, R5, R7 
    /*0000d918*/ LDR         R7, [R9] 
    /*0000d91c*/ MLA         R3, R3, R6, R2 
    /*0000d920*/ LDR         R4, [R4, R5, LSL #2] 
    /*0000d924*/ LDR         R3, [R3, #180]              @ 0xb4 
    /*0000d928*/ CMP         R3, #1 
    /*0000d92c*/ BEQ         VouSetChnRotation_xda18
    /*0000d930*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000d934*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000d938*/ BL          0x000000000000D938          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000d93c*/ CMP         R0, #0 
    /*0000d940*/ BNE         VouSetChnRotation_xd990
    /*0000d944*/ CMP         R7, #3 
    /*0000d948*/ BHI         VouSetChnRotation_xd9cc
    /*0000d94c*/ ADD         R4, R4, #8192               @ 0x2000 
    /*0000d950*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000d954*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000d958*/ STR         R7, [R4, #1352]             @ 0x548 
    /*0000d95c*/ BL          0x000000000000D95C          @ osal_up [R_ARM_CALL: +0x0] 
    VouSetChnRotation_xd960:
    /*0000d960*/ MOV         R0, R8 
    /*0000d964*/ ADD         SP, SP, #28 
    /*0000d968*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouSetChnRotation_xd96c:
    /*0000d96c*/ MOVW        R8, #32877                  @ 0x806d 
    /*0000d970*/ MOVT        R8, #40975                  @ 0xa00f 
    /*0000d974*/ B           VouSetChnRotation_xd960
    VouSetChnRotation_xd978:
    /*0000d978*/ MOVW        R8, #32770                  @ 0x8002 
    /*0000d97c*/ MOVT        R8, #40975                  @ 0xa00f 
    /*0000d980*/ B           VouSetChnRotation_xd960
    VouSetChnRotation_xd984:
    /*0000d984*/ MOVW        R8, #32774                  @ 0x8006 
    /*0000d988*/ MOVT        R8, #40975                  @ 0xa00f 
    /*0000d98c*/ B           VouSetChnRotation_xd960
    VouSetChnRotation_xd990:
    /*0000d990*/ MOV         R8, #65024                  @ 0xfe00 
    /*0000d994*/ MOVT        R8, #65535                  @ 0xffff 
    /*0000d998*/ B           VouSetChnRotation_xd960
    VouSetChnRotation_xd99c:
    /*0000d99c*/ MOV         R1, R7 
    /*0000d9a0*/ MOV         R0, R6 
    /*0000d9a4*/ BL          0x0000000000005468 
    /*0000d9a8*/ SUBS        R3, R0, #0 
    /*0000d9ac*/ BEQ         VouSetChnRotation_xd8fc
    /*0000d9b0*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000d9b4*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000d9b8*/ MOV         R8, R3 
    /*0000d9bc*/ BL          0x000000000000D9BC          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000d9c0*/ MOV         R0, R8 
    /*0000d9c4*/ ADD         SP, SP, #28 
    /*0000d9c8*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouSetChnRotation_xd9cc:
    /*0000d9cc*/ STR         R0, [SP, #12] 
    /*0000d9d0*/ MOV         R1, #4 
    /*0000d9d4*/ MOVW        R3, #8062                   @ 0x1f7e 
    /*0000d9d8*/ STR         R1, [SP, #16] 
    /*0000d9dc*/ STR         R3, [SP] 
    /*0000d9e0*/ MOV         R1, #15 
    /*0000d9e4*/ LDR         R3, [PC, #92]               @ 0x000000000000da48 
    /*0000d9e8*/ MOVW        R2, #0                      @ .LC149 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ad4] 
    /*0000d9ec*/ STR         R7, [SP, #8] 
    /*0000d9f0*/ MOVT        R2, #0                      @ .LC149 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ad4] 
    /*0000d9f4*/ STR         R6, [SP, #4] 
    /*0000d9f8*/ MOV         R0, #3 
    /*0000d9fc*/ BL          0x000000000000D9FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000da00*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000da04*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000da08*/ MOVW        R8, #32771                  @ 0x8003 
    /*0000da0c*/ BL          0x000000000000DA0C          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000da10*/ MOVT        R8, #40975                  @ 0xa00f 
    /*0000da14*/ B           VouSetChnRotation_xd960
    VouSetChnRotation_xda18:
    /*0000da18*/ MOVW        R3, #8054                   @ 0x1f76 
    /*0000da1c*/ STR         R6, [SP, #4] 
    /*0000da20*/ STR         R3, [SP] 
    /*0000da24*/ MOVW        R2, #0                      @ .LC148 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4a78] 
    /*0000da28*/ LDR         R3, [PC, #24]               @ 0x000000000000da48 
    /*0000da2c*/ MOVT        R2, #0                      @ .LC148 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4a78] 
    /*0000da30*/ MOV         R1, #15 
    /*0000da34*/ MOV         R0, #3 
    /*0000da38*/ MOVW        R8, #32776                  @ 0x8008 
    /*0000da3c*/ BL          0x000000000000DA3C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000da40*/ MOVT        R8, #40975                  @ 0xa00f 
    /*0000da44*/ B           VouSetChnRotation_xd960
    /*0000da48*/ ANDEQ       R0, R0, IP, LSL #17 
FUNC_END VouSetChnRotation


FUNC_BEGIN VouGetChnRotation
    /*0000da4c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000da50*/ SUB         SP, SP, #12 
    /*0000da54*/ MOV         R6, R1 
    /*0000da58*/ MOV         R9, R2 
    /*0000da5c*/ MOV         R4, R0 
    /*0000da60*/ BL          0x000000000000DA60          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000da64*/ CMP         R0, #0 
    /*0000da68*/ BNE         VouGetChnRotation_xdb34
    /*0000da6c*/ MOV         R1, R6 
    /*0000da70*/ MOV         R0, R4 
    /*0000da74*/ BL          0x000000000000DA74          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000da78*/ CMP         R0, #0 
    /*0000da7c*/ BNE         VouGetChnRotation_xdb40
    /*0000da80*/ MOV         R0, R9 
    /*0000da84*/ BL          0x000000000000DA84          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000da88*/ SUBS        R7, R0, #0 
    /*0000da8c*/ BNE         VouGetChnRotation_xdb4c
    /*0000da90*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000da94*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000da98*/ BL          0x000000000000DA98          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000da9c*/ CMP         R0, #0 
    /*0000daa0*/ BNE         VouGetChnRotation_xdb28
    /*0000daa4*/ LSL         R8, R4, #2 
    /*0000daa8*/ MOVW        R5, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000daac*/ ADD         R3, R8, R6 
    /*0000dab0*/ MOVT        R5, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000dab4*/ LDR         R3, [R5, R3, LSL #2] 
    /*0000dab8*/ CMP         R3, #0 
    /*0000dabc*/ BEQ         VouGetChnRotation_xdb58
    VouGetChnRotation_xdac0:
    /*0000dac0*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000dac4*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000dac8*/ BL          0x000000000000DAC8          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000dacc*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000dad0*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000dad4*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000dad8*/ MLA         R3, R3, R4, R2 
    /*0000dadc*/ LDR         R3, [R3, #180]              @ 0xb4 
    /*0000dae0*/ CMP         R3, #1 
    /*0000dae4*/ BEQ         VouGetChnRotation_xdb88
    /*0000dae8*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000daec*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000daf0*/ BL          0x000000000000DAF0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*0000daf4*/ CMP         R0, #0 
    /*0000daf8*/ BNE         VouGetChnRotation_xdb28
    /*0000dafc*/ ADD         R6, R8, R6 
    /*0000db00*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*0000db04*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0000db08*/ LDR         R3, [R5, R6, LSL #2] 
    /*0000db0c*/ ADD         R3, R3, #8192               @ 0x2000 
    /*0000db10*/ LDR         R3, [R3, #1352]             @ 0x548 
    /*0000db14*/ STR         R3, [R9] 
    /*0000db18*/ BL          0x000000000000DB18          @ osal_up [R_ARM_CALL: +0x0] 
    VouGetChnRotation_xdb1c:
    /*0000db1c*/ MOV         R0, R7 
    /*0000db20*/ ADD         SP, SP, #12 
    /*0000db24*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouGetChnRotation_xdb28:
    /*0000db28*/ MOV         R7, #65024                  @ 0xfe00 
    /*0000db2c*/ MOVT        R7, #65535                  @ 0xffff 
    /*0000db30*/ B           VouGetChnRotation_xdb1c
    VouGetChnRotation_xdb34:
    /*0000db34*/ MOVW        R7, #32877                  @ 0x806d 
    /*0000db38*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000db3c*/ B           VouGetChnRotation_xdb1c
    VouGetChnRotation_xdb40:
    /*0000db40*/ MOVW        R7, #32770                  @ 0x8002 
    /*0000db44*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000db48*/ B           VouGetChnRotation_xdb1c
    VouGetChnRotation_xdb4c:
    /*0000db4c*/ MOVW        R7, #32774                  @ 0x8006 
    /*0000db50*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000db54*/ B           VouGetChnRotation_xdb1c
    VouGetChnRotation_xdb58:
    /*0000db58*/ MOV         R1, R6 
    /*0000db5c*/ MOV         R0, R4 
    /*0000db60*/ BL          0x0000000000005468 
    /*0000db64*/ SUBS        R3, R0, #0 
    /*0000db68*/ BEQ         VouGetChnRotation_xdac0
    /*0000db6c*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*0000db70*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*0000db74*/ MOV         R7, R3 
    /*0000db78*/ BL          0x000000000000DB78          @ osal_up [R_ARM_CALL: +0x0] 
    /*0000db7c*/ MOV         R0, R7 
    /*0000db80*/ ADD         SP, SP, #12 
    /*0000db84*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouGetChnRotation_xdb88:
    /*0000db88*/ MOVW        R3, #8087                   @ 0x1f97 
    /*0000db8c*/ STR         R4, [SP, #4] 
    /*0000db90*/ STR         R3, [SP] 
    /*0000db94*/ MOVW        R2, #0                      @ .LC148 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4a78] 
    /*0000db98*/ LDR         R3, [PC, #24]               @ 0x000000000000dbb8 
    /*0000db9c*/ MOVT        R2, #0                      @ .LC148 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4a78] 
    /*0000dba0*/ MOV         R1, #15 
    /*0000dba4*/ MOV         R0, #3 
    /*0000dba8*/ MOVW        R7, #32776                  @ 0x8008 
    /*0000dbac*/ BL          0x000000000000DBAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000dbb0*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000dbb4*/ B           VouGetChnRotation_xdb1c
    /*0000dbb8*/ ANDEQ       R0, R0, R0, LSR #17 
FUNC_END VouGetChnRotation


FUNC_BEGIN VouChnCalTotalLeaveDisplay
    /*0000dbbc*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000dbc0*/ ADD         R1, R1, R0, LSL #2 
    /*0000dbc4*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000dbc8*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000dbcc*/ MOV         SL, R2 
    /*0000dbd0*/ LDR         R7, [R3, R1, LSL #2] 
    /*0000dbd4*/ CMP         R7, #0 
    /*0000dbd8*/ BEQ         VouChnCalTotalLeaveDisplay_xdc90
    VouChnCalTotalLeaveDisplay_xdbdc:
    /*0000dbdc*/ ADD         R3, R7, #8192               @ 0x2000 
    /*0000dbe0*/ ADD         R6, R7, #9216               @ 0x2400 
    /*0000dbe4*/ ADD         R6, R6, #20 
    /*0000dbe8*/ LDR         R4, [R3, #1044]             @ 0x414 
    /*0000dbec*/ CMP         R4, R6 
    /*0000dbf0*/ BEQ         VouChnCalTotalLeaveDisplay_xdc88
    /*0000dbf4*/ LDR         FP, [PC, #180]              @ 0x000000000000dcb0 
    /*0000dbf8*/ MOVW        R9, #0                      @ .LC151 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4b48] 
    /*0000dbfc*/ MOVW        R8, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*0000dc00*/ MOVT        R9, #0                      @ .LC151 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4b48] 
    /*0000dc04*/ MOVT        R8, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    /*0000dc08*/ MOV         R5, #0 
    VouChnCalTotalLeaveDisplay_xdc0c:
    /*0000dc0c*/ CMP         R4, #4 
    /*0000dc10*/ BEQ         VouChnCalTotalLeaveDisplay_xdc70
    VouChnCalTotalLeaveDisplay_xdc14:
    /*0000dc14*/ LDR         R2, [R4, #-4] 
    /*0000dc18*/ LDR         R4, [R4] 
    /*0000dc1c*/ LDR         R3, [R2, #676]              @ 0x2a4 
    /*0000dc20*/ LDR         R2, [R2, #672]              @ 0x2a0 
    /*0000dc24*/ ADD         R1, R3, R5 
    /*0000dc28*/ CMP         R3, R2 
    /*0000dc2c*/ SUBHI       R5, R1, R2 
    /*0000dc30*/ ADDLS       R5, R5, #1 
    /*0000dc34*/ CMP         R4, R6 
    /*0000dc38*/ BNE         VouChnCalTotalLeaveDisplay_xdc0c
    VouChnCalTotalLeaveDisplay_xdc3c:
    /*0000dc3c*/ LDR         R3, [R7, #24] 
    /*0000dc40*/ CMP         R3, #0 
    /*0000dc44*/ BEQ         VouChnCalTotalLeaveDisplay_xdc64
    /*0000dc48*/ LDR         R2, [R3] 
    /*0000dc4c*/ LDR         R3, [R2, #676]              @ 0x2a4 
    /*0000dc50*/ LDR         R2, [R2, #672]              @ 0x2a0 
    /*0000dc54*/ CMP         R3, R2 
    /*0000dc58*/ SUBHI       R3, R3, R2 
    /*0000dc5c*/ ADDLS       R5, R5, #1 
    /*0000dc60*/ ADDHI       R5, R5, R3 
    VouChnCalTotalLeaveDisplay_xdc64:
    /*0000dc64*/ STR         R5, [SL] 
    /*0000dc68*/ MOV         R0, #0 
    /*0000dc6c*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnCalTotalLeaveDisplay_xdc70:
    /*0000dc70*/ MOV         R3, R9 
    /*0000dc74*/ MOVW        R2, #9151                   @ 0x23bf 
    /*0000dc78*/ MOV         R1, FP 
    /*0000dc7c*/ MOV         R0, R8 
    /*0000dc80*/ BL          0x000000000000DC80          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000dc84*/ B           VouChnCalTotalLeaveDisplay_xdc14
    VouChnCalTotalLeaveDisplay_xdc88:
    /*0000dc88*/ MOV         R5, #0 
    /*0000dc8c*/ B           VouChnCalTotalLeaveDisplay_xdc3c
    VouChnCalTotalLeaveDisplay_xdc90:
    /*0000dc90*/ MOVW        R3, #0                      @ .LC150 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4b34] 
    /*0000dc94*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*0000dc98*/ MOVT        R3, #0                      @ .LC150 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4b34] 
    /*0000dc9c*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    /*0000dca0*/ MOVW        R2, #9146                   @ 0x23ba 
    /*0000dca4*/ LDR         R1, [PC, #4]                @ 0x000000000000dcb0 
    /*0000dca8*/ BL          0x000000000000DCA8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000dcac*/ B           VouChnCalTotalLeaveDisplay_xdbdc
    /*0000dcb0*/ @           <UNDEFINED> instruction: 0x000008b4 
FUNC_END VouChnCalTotalLeaveDisplay


FUNC_BEGIN VouChnResetScalePts
    /*0000dcb4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000dcb8*/ MOV         R9, R1 
    /*0000dcbc*/ MOVW        R1, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000dcc0*/ ADD         IP, R9, R0, LSL #2 
    /*0000dcc4*/ MOVT        R1, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000dcc8*/ LDRD        R6, [R2, #240]              @ 0xf0 
    /*0000dccc*/ MOV         R8, R2 
    /*0000dcd0*/ MOV         LR, R3 
    /*0000dcd4*/ LDR         R1, [R1, IP, LSL #2] 
    /*0000dcd8*/ SUB         SP, SP, #16 
    /*0000dcdc*/ ADD         IP, R1, #288                @ 0x120 
    /*0000dce0*/ LDR         SL, [R1, #228]              @ 0xe4 
    /*0000dce4*/ LDRD        R2, [IP, #8] 
    /*0000dce8*/ SUBS        R2, R6, R2 
    /*0000dcec*/ SBC         R3, R7, R3 
    /*0000dcf0*/ ASR         R4, R3, #31 
    /*0000dcf4*/ EOR         R2, R2, R4 
    /*0000dcf8*/ EOR         R3, R3, R4 
    /*0000dcfc*/ SUBS        R2, R2, R4 
    /*0000dd00*/ SBC         R3, R3, R4 
    /*0000dd04*/ CMP         SL, #1 
    /*0000dd08*/ BEQ         VouChnResetScalePts_xdd30
    /*0000dd0c*/ MOVW        R5, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000dd10*/ MOVT        R5, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000dd14*/ MOVW        R4, #12192                  @ 0x2fa0 
    /*0000dd18*/ MLA         R4, R4, R0, R5 
    /*0000dd1c*/ MOV         R5, #0 
    /*0000dd20*/ CMP         R3, R5 
    /*0000dd24*/ LDR         R4, [R4, #40]               @ 0x28 
    /*0000dd28*/ CMPEQ       R2, R4 
    /*0000dd2c*/ BLS         VouChnResetScalePts_xdd5c
    VouChnResetScalePts_xdd30:
    /*0000dd30*/ ADD         R3, R1, #8192               @ 0x2000 
    /*0000dd34*/ LDR         R3, [R3, #1376]             @ 0x560 
    /*0000dd38*/ CMP         R3, #0 
    /*0000dd3c*/ BNE         VouChnResetScalePts_xdd94
    /*0000dd40*/ ADD         R2, R1, #304                @ 0x130 
    /*0000dd44*/ STRD        R6, [IP, #8] 
    /*0000dd48*/ MOV         R4, #0 
    /*0000dd4c*/ MOV         R5, #0 
    /*0000dd50*/ STR         R3, [R1, #344]              @ 0x158 
    /*0000dd54*/ STRD        R4, [R2] 
    /*0000dd58*/ STR         R3, [R1, #228]              @ 0xe4 
    VouChnResetScalePts_xdd5c:
    /*0000dd5c*/ CMP         LR, #0 
    /*0000dd60*/ MOVNE       R0, #0 
    /*0000dd64*/ BEQ         VouChnResetScalePts_xdd70
    VouChnResetScalePts_xdd68:
    /*0000dd68*/ ADD         SP, SP, #16 
    /*0000dd6c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouChnResetScalePts_xdd70:
    /*0000dd70*/ ADD         R1, R1, #8192               @ 0x2000 
    /*0000dd74*/ LDR         R3, [R1, #1364]             @ 0x554 
    /*0000dd78*/ CMP         R3, #1 
    /*0000dd7c*/ MOVNE       R0, LR 
    /*0000dd80*/ LDRDEQ      R2, [R8, #240]              @ 0xf0 
    /*0000dd84*/ MOVEQ       R0, LR 
    /*0000dd88*/ STRDEQ      R2, [IP, #8] 
    /*0000dd8c*/ STREQ       LR, [R1, #1364]             @ 0x554 
    /*0000dd90*/ B           VouChnResetScalePts_xdd68
    VouChnResetScalePts_xdd94:
    /*0000dd94*/ STR         R3, [SP, #12] 
    /*0000dd98*/ MOVW        R2, #0                      @ .LC152 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4b5c] 
    /*0000dd9c*/ MOVW        R3, #9208                   @ 0x23f8 
    /*0000dda0*/ STR         R0, [SP, #4] 
    /*0000dda4*/ STR         R3, [SP] 
    /*0000dda8*/ MOVT        R2, #0                      @ .LC152 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4b5c] 
    /*0000ddac*/ STR         R9, [SP, #8] 
    /*0000ddb0*/ MOV         R1, #15 
    /*0000ddb4*/ LDR         R3, [PC, #12]               @ 0x000000000000ddc8 
    /*0000ddb8*/ MOV         R0, #4 
    /*0000ddbc*/ BL          0x000000000000DDBC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ddc0*/ MVN         R0, #0 
    /*0000ddc4*/ B           VouChnResetScalePts_xdd68
    /*0000ddc8*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VouChnResetScalePts


FUNC_BEGIN VouChnPlayFrmRtControl
    /*0000ddcc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000ddd0*/ SUB         SP, SP, #60                 @ 0x3c 
    /*0000ddd4*/ MOV         R4, R0 
    /*0000ddd8*/ MOV         R0, R2 
    /*0000dddc*/ STR         R3, [SP, #48]               @ 0x30 
    /*0000dde0*/ MOV         R7, R2 
    /*0000dde4*/ MOV         R5, R1 
    /*0000dde8*/ STR         R1, [SP, #52]               @ 0x34 
    /*0000ddec*/ BL          0x000000000000DDEC          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000ddf0*/ SUBS        R3, R0, #0 
    /*0000ddf4*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000ddf8*/ BNE         VouChnPlayFrmRtControl_xdffc
    /*0000ddfc*/ ADD         R1, R5, R4, LSL #2 
    /*0000de00*/ MOVW        R2, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000de04*/ MOVT        R2, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000de08*/ MOV         IP, R5 
    /*0000de0c*/ LDRD        R8, [R7, #240]              @ 0xf0 
    /*0000de10*/ MOV         SL, #0 
    /*0000de14*/ LDR         R5, [R2, R1, LSL #2] 
    /*0000de18*/ MOV         FP, #0 
    /*0000de1c*/ STRD        SL, [SP, #32] 
    /*0000de20*/ MOVW        R3, #9251                   @ 0x2423 
    /*0000de24*/ ADD         R6, R5, #288                @ 0x120 
    /*0000de28*/ MOVW        R2, #0                      @ .LC153 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4bbc] 
    /*0000de2c*/ MOVT        R2, #0                      @ .LC153 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4bbc] 
    /*0000de30*/ LDRD        R0, [R6, #8] 
    /*0000de34*/ STR         R3, [SP] 
    /*0000de38*/ SUBS        SL, R8, R0 
    /*0000de3c*/ STRD        R8, [SP, #16] 
    /*0000de40*/ SBC         FP, R9, R1 
    /*0000de44*/ STRD        R0, [SP, #24] 
    /*0000de48*/ STMIB       SP, {R4, IP} 
    /*0000de4c*/ MOV         R0, #7 
    /*0000de50*/ ASR         R1, FP, #31 
    /*0000de54*/ STR         R1, [SP, #32] 
    /*0000de58*/ LDR         R3, [SP, #32] 
    /*0000de5c*/ MOV         R1, #15 
    /*0000de60*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000de64*/ LDRD        R8, [SP, #32] 
    /*0000de68*/ LDR         R3, [PC, #412]              @ 0x000000000000e00c 
    /*0000de6c*/ EOR         R8, R8, SL 
    /*0000de70*/ EOR         R9, R9, FP 
    /*0000de74*/ MOV         SL, R8 
    /*0000de78*/ MOV         FP, R9 
    /*0000de7c*/ LDRD        R8, [SP, #32] 
    /*0000de80*/ SUBS        R8, SL, R8 
    /*0000de84*/ SBC         R9, FP, R9 
    /*0000de88*/ BL          0x000000000000DE88          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000de8c*/ LDR         IP, [R5, #328]              @ 0x148 
    /*0000de90*/ MOV         SL, R8 
    /*0000de94*/ MOV         FP, R9 
    /*0000de98*/ LDRD        R2, [R7, #240]              @ 0xf0 
    /*0000de9c*/ CMP         IP, #0 
    /*0000dea0*/ BEQ         VouChnPlayFrmRtControl_xdf9c
    /*0000dea4*/ MOV         R0, R2 
    /*0000dea8*/ MOV         R1, R3 
    /*0000deac*/ MOV         R8, R2 
    /*0000deb0*/ MOV         R9, R3 
    /*0000deb4*/ LDRD        R2, [R6, #8] 
    /*0000deb8*/ CMP         R1, R3 
    /*0000debc*/ CMPEQ       R0, R2 
    /*0000dec0*/ BCS         VouChnPlayFrmRtControl_xdf64
    /*0000dec4*/ LDR         R1, [R5, #224]              @ 0xe0 
    /*0000dec8*/ CMP         R1, #0 
    /*0000decc*/ BNE         VouChnPlayFrmRtControl_xdf64
    VouChnPlayFrmRtControl_xded0:
    /*0000ded0*/ MOVW        R0, #52429                  @ 0xcccd 
    /*0000ded4*/ MOVT        R0, #52428                  @ 0xcccc 
    /*0000ded8*/ UMULL       R0, R1, IP, R0 
    /*0000dedc*/ LSR         R0, R1, #3 
    /*0000dee0*/ MOV         R1, #0 
    /*0000dee4*/ CMP         FP, R1 
    /*0000dee8*/ CMPEQ       SL, R0 
    /*0000deec*/ BHI         VouChnPlayFrmRtControl_xdfa8
    VouChnPlayFrmRtControl_xdef0:
    /*0000def0*/ LDR         R8, [SP, #48]               @ 0x30 
    /*0000def4*/ CMP         R8, #0 
    /*0000def8*/ BEQ         VouChnPlayFrmRtControl_xdf88
    VouChnPlayFrmRtControl_xdefc:
    /*0000defc*/ MOV         R1, IP 
    /*0000df00*/ MOV         R0, SL 
    /*0000df04*/ BL          0x000000000000DF04          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000df08*/ ADD         R3, R0, #1 
    /*0000df0c*/ STR         R3, [R8, #676]              @ 0x2a4 
    VouChnPlayFrmRtControl_xdf10:
    /*0000df10*/ MOVW        R3, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000df14*/ MOVT        R3, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000df18*/ MOVW        R2, #12192                  @ 0x2fa0 
    /*0000df1c*/ MLA         R4, R2, R4, R3 
    /*0000df20*/ LDR         R3, [R4, #180]              @ 0xb4 
    /*0000df24*/ CMP         R3, #1 
    /*0000df28*/ BEQ         VouChnPlayFrmRtControl_xdf58
    /*0000df2c*/ LDR         R3, [R5, #224]              @ 0xe0 
    /*0000df30*/ LDR         R1, [R5, #328]              @ 0x148 
    /*0000df34*/ CMP         R3, #1 
    /*0000df38*/ LDRD        R2, [R6, #8] 
    /*0000df3c*/ MLA         R1, R0, R1, R1 
    /*0000df40*/ BEQ         VouChnPlayFrmRtControl_xdf90
    /*0000df44*/ ADDS        R2, R2, R1 
    /*0000df48*/ ADC         R3, R3, #0 
    VouChnPlayFrmRtControl_xdf4c:
    /*0000df4c*/ STRD        R2, [R6, #8] 
    /*0000df50*/ LDRD        R2, [R7, #240]              @ 0xf0 
    /*0000df54*/ STRD        R2, [R6, #16] 
    VouChnPlayFrmRtControl_xdf58:
    /*0000df58*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*0000df5c*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0000df60*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnPlayFrmRtControl_xdf64:
    /*0000df64*/ CMP         R9, R3 
    /*0000df68*/ CMPEQ       R8, R2 
    /*0000df6c*/ BLS         VouChnPlayFrmRtControl_xdef0
    /*0000df70*/ LDR         R1, [R5, #224]              @ 0xe0 
    /*0000df74*/ CMP         R1, #1 
    /*0000df78*/ BEQ         VouChnPlayFrmRtControl_xded0
    /*0000df7c*/ LDR         R8, [SP, #48]               @ 0x30 
    /*0000df80*/ CMP         R8, #0 
    /*0000df84*/ BNE         VouChnPlayFrmRtControl_xdefc
    VouChnPlayFrmRtControl_xdf88:
    /*0000df88*/ LDR         R0, [SP, #48]               @ 0x30 
    /*0000df8c*/ B           VouChnPlayFrmRtControl_xdf10
    VouChnPlayFrmRtControl_xdf90:
    /*0000df90*/ SUBS        R2, R2, R1 
    /*0000df94*/ SBC         R3, R3, #0 
    /*0000df98*/ B           VouChnPlayFrmRtControl_xdf4c
    VouChnPlayFrmRtControl_xdf9c:
    /*0000df9c*/ MOV         R8, R2 
    /*0000dfa0*/ MOV         R9, R3 
    /*0000dfa4*/ LDRD        R2, [R6, #8] 
    VouChnPlayFrmRtControl_xdfa8:
    /*0000dfa8*/ MOV         R0, R8 
    /*0000dfac*/ MOV         R1, R9 
    /*0000dfb0*/ STRD        R0, [SP, #16] 
    /*0000dfb4*/ MOV         R0, #3 
    /*0000dfb8*/ LDR         R1, [SP, #52]               @ 0x34 
    /*0000dfbc*/ MVN         IP, #0 
    /*0000dfc0*/ STRD        R2, [SP, #24] 
    /*0000dfc4*/ MOVW        R3, #9260                   @ 0x242c 
    /*0000dfc8*/ MOVW        R2, #0                      @ .LC153 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4bbc] 
    /*0000dfcc*/ STR         R3, [SP] 
    /*0000dfd0*/ STR         R1, [SP, #8] 
    /*0000dfd4*/ MOVT        R2, #0                      @ .LC153 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4bbc] 
    /*0000dfd8*/ LDR         R3, [PC, #44]               @ 0x000000000000e00c 
    /*0000dfdc*/ MOV         R1, #15 
    /*0000dfe0*/ STR         R4, [SP, #4] 
    /*0000dfe4*/ STR         IP, [SP, #44]               @ 0x2c 
    /*0000dfe8*/ BL          0x000000000000DFE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000dfec*/ LDR         R3, [R5, #172]              @ 0xac 
    /*0000dff0*/ ADD         R3, R3, #1 
    /*0000dff4*/ STR         R3, [R5, #172]              @ 0xac 
    /*0000dff8*/ B           VouChnPlayFrmRtControl_xdf58
    VouChnPlayFrmRtControl_xdffc:
    /*0000dffc*/ MOVW        R3, #32774                  @ 0x8006 
    /*0000e000*/ MOVT        R3, #40975                  @ 0xa00f 
    /*0000e004*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000e008*/ B           VouChnPlayFrmRtControl_xdf58
    /*0000e00c*/ ANDEQ       R0, R0, R4, ROR #17 
FUNC_END VouChnPlayFrmRtControl


FUNC_BEGIN VouChnCalShouldDisp
    /*0000e010*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000e014*/ MOV         R8, R0 
    /*0000e018*/ MOV         R0, R2 
    /*0000e01c*/ MOV         R5, R2 
    /*0000e020*/ MOV         R4, R1 
    /*0000e024*/ MOV         R6, R3 
    /*0000e028*/ BL          0x000000000000E028          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000e02c*/ SUBS        R7, R0, #0 
    /*0000e030*/ BNE         VouChnCalShouldDisp_xe0f4
    /*0000e034*/ ADD         R0, R4, R8, LSL #2 
    /*0000e038*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000e03c*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000e040*/ LDRD        SL, [R5, #240]              @ 0xf0 
    /*0000e044*/ LDR         R0, [R3, R0, LSL #2] 
    /*0000e048*/ ADD         R3, R0, #288                @ 0x120 
    /*0000e04c*/ LDR         R1, [R0, #328]              @ 0x148 
    /*0000e050*/ LDRD        R8, [R3, #8] 
    /*0000e054*/ SUBS        R2, SL, R8 
    /*0000e058*/ SBC         R3, FP, R9 
    /*0000e05c*/ ASR         R4, R3, #31 
    /*0000e060*/ EOR         R2, R2, R4 
    /*0000e064*/ EOR         R3, R3, R4 
    /*0000e068*/ SUBS        R2, R2, R4 
    /*0000e06c*/ MOV         R5, R4 
    /*0000e070*/ SBC         R3, R3, R4 
    /*0000e074*/ CMP         R1, #0 
    /*0000e078*/ BNE         VouChnCalShouldDisp_xe090
    VouChnCalShouldDisp_xe07c:
    /*0000e07c*/ CMP         R6, #0 
    /*0000e080*/ ADDNE       R1, R1, #1 
    /*0000e084*/ STRNE       R1, [R6, #676]              @ 0x2a4 
    VouChnCalShouldDisp_xe088:
    /*0000e088*/ MOV         R0, R7 
    /*0000e08c*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnCalShouldDisp_xe090:
    /*0000e090*/ CMP         FP, R9 
    /*0000e094*/ CMPEQ       SL, R8 
    /*0000e098*/ BCS         VouChnCalShouldDisp_xe0a8
    /*0000e09c*/ LDR         IP, [R0, #224]              @ 0xe0 
    /*0000e0a0*/ CMP         IP, #0 
    /*0000e0a4*/ BEQ         VouChnCalShouldDisp_xe0c0
    VouChnCalShouldDisp_xe0a8:
    /*0000e0a8*/ CMP         FP, R9 
    /*0000e0ac*/ CMPEQ       SL, R8 
    /*0000e0b0*/ BLS         VouChnCalShouldDisp_xe0e4
    /*0000e0b4*/ LDR         R0, [R0, #224]              @ 0xe0 
    /*0000e0b8*/ CMP         R0, #1 
    /*0000e0bc*/ BNE         VouChnCalShouldDisp_xe0e4
    VouChnCalShouldDisp_xe0c0:
    /*0000e0c0*/ MOVW        R4, #52429                  @ 0xcccd 
    /*0000e0c4*/ MOVT        R4, #52428                  @ 0xcccc 
    /*0000e0c8*/ UMULL       R4, R5, R1, R4 
    /*0000e0cc*/ LSR         R4, R5, #3 
    /*0000e0d0*/ MOV         R5, #0 
    /*0000e0d4*/ CMP         R3, R5 
    /*0000e0d8*/ CMPEQ       R2, R4 
    /*0000e0dc*/ MOVHI       R1, #0 
    /*0000e0e0*/ BHI         VouChnCalShouldDisp_xe07c
    VouChnCalShouldDisp_xe0e4:
    /*0000e0e4*/ MOV         R0, R2 
    /*0000e0e8*/ BL          0x000000000000E0E8          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*0000e0ec*/ MOV         R1, R0 
    /*0000e0f0*/ B           VouChnCalShouldDisp_xe07c
    VouChnCalShouldDisp_xe0f4:
    /*0000e0f4*/ MOVW        R7, #32774                  @ 0x8006 
    /*0000e0f8*/ MOVT        R7, #40975                  @ 0xa00f 
    /*0000e0fc*/ B           VouChnCalShouldDisp_xe088
FUNC_END VouChnCalShouldDisp


FUNC_BEGIN VouChnTagPseudoPts
    /*0000e100*/ ADD         R1, R1, R0, LSL #2 
    /*0000e104*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000e108*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000e10c*/ PUSH        {R4, R5, LR} 
    /*0000e110*/ LDR         R3, [R3, R1, LSL #2] 
    /*0000e114*/ ADD         R1, R3, #288                @ 0x120 
    /*0000e118*/ LDRD        R4, [R1] 
    /*0000e11c*/ STRD        R4, [R2, #240]              @ 0xf0 
    /*0000e120*/ LDR         R3, [R3, #224]              @ 0xe0 
    /*0000e124*/ CMP         R3, #1 
    /*0000e128*/ BEQ         VouChnTagPseudoPts_xe158
    /*0000e12c*/ MOVW        IP, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000e130*/ MOVT        IP, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000e134*/ MOVW        LR, #12192                  @ 0x2fa0 
    /*0000e138*/ LDRD        R2, [R1] 
    /*0000e13c*/ MLA         R0, LR, R0, IP 
    /*0000e140*/ LDR         R0, [R0, #36]               @ 0x24 
    /*0000e144*/ ADDS        R2, R2, R0 
    /*0000e148*/ MOV         R0, #0 
    /*0000e14c*/ ADC         R3, R3, #0 
    /*0000e150*/ STRD        R2, [R1] 
    /*0000e154*/ POP         {R4, R5, PC} 
    VouChnTagPseudoPts_xe158:
    /*0000e158*/ MOVW        LR, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000e15c*/ MOVT        LR, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000e160*/ MOVW        IP, #12192                  @ 0x2fa0 
    /*0000e164*/ LDRD        R2, [R1] 
    /*0000e168*/ MLA         R0, IP, R0, LR 
    /*0000e16c*/ LDR         R0, [R0, #36]               @ 0x24 
    /*0000e170*/ SUBS        R2, R2, R0 
    /*0000e174*/ MOV         R0, #0 
    /*0000e178*/ SBC         R3, R3, #0 
    /*0000e17c*/ STRD        R2, [R1] 
    /*0000e180*/ POP         {R4, R5, PC} 
FUNC_END VouChnTagPseudoPts


FUNC_BEGIN VouGetInstInfo
    /*0000e184*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000e188*/ ADD         R1, R1, R0, LSL #2 
    /*0000e18c*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000e190*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*0000e194*/ MOV         R6, R0 
    /*0000e198*/ LDR         R7, [R3, R1, LSL #2] 
    /*0000e19c*/ MOV         R4, R2 
    /*0000e1a0*/ CMP         R7, #0 
    /*0000e1a4*/ BEQ         VouGetInstInfo_xe230
    VouGetInstInfo_xe1a8:
    /*0000e1a8*/ MOV         R0, R6 
    /*0000e1ac*/ MOVW        R5, #12192                  @ 0x2fa0 
    /*0000e1b0*/ BL          0x000000000000E1B0          @ VO_DRV_IsLayerSupportDecompress [R_ARM_CALL: .text+0x18554] 
    /*0000e1b4*/ MOVW        R3, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000e1b8*/ MOVT        R3, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000e1bc*/ MLA         R5, R5, R6, R3 
    /*0000e1c0*/ ADDS        R0, R0, #0 
    /*0000e1c4*/ MOVNE       R0, #1 
    /*0000e1c8*/ STR         R0, [R4, #44]               @ 0x2c 
    /*0000e1cc*/ LDR         R3, [R5, #140]              @ 0x8c 
    /*0000e1d0*/ MOV         R0, R6 
    /*0000e1d4*/ STR         R3, [R4, #36]               @ 0x24 
    /*0000e1d8*/ LDR         R3, [R5, #152]              @ 0x98 
    /*0000e1dc*/ STR         R3, [R4, #48]               @ 0x30 
    /*0000e1e0*/ LDR         R3, [R7, #76]               @ 0x4c 
    /*0000e1e4*/ STR         R3, [R4, #24] 
    /*0000e1e8*/ LDR         R3, [R7, #80]               @ 0x50 
    /*0000e1ec*/ STR         R3, [R4, #28] 
    /*0000e1f0*/ BL          0x000000000000E1F0          @ VO_DRV_IsSingleSupportAspectRatio [R_ARM_CALL: .text+0x1954c] 
    /*0000e1f4*/ LDR         R3, [R5, #180]              @ 0xb4 
    /*0000e1f8*/ CMP         R0, #0 
    /*0000e1fc*/ BNE         VouGetInstInfo_xe220
    /*0000e200*/ CMP         R3, #0 
    /*0000e204*/ BNE         VouGetInstInfo_xe220
    VouGetInstInfo_xe208:
    /*0000e208*/ ADD         R1, R7, #92                 @ 0x5c 
    /*0000e20c*/ ADD         R0, R4, #744                @ 0x2e8 
    /*0000e210*/ MOV         R2, #24 
    /*0000e214*/ BL          0x000000000000E214          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000e218*/ MOV         R0, #0 
    /*0000e21c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouGetInstInfo_xe220:
    /*0000e220*/ CMP         R3, #1 
    /*0000e224*/ BEQ         VouGetInstInfo_xe208
    /*0000e228*/ MOV         R0, #0 
    /*0000e22c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouGetInstInfo_xe230:
    /*0000e230*/ MOVW        R3, #0                      @ .LC150 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4b34] 
    /*0000e234*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*0000e238*/ MOVT        R3, #0                      @ .LC150 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4b34] 
    /*0000e23c*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    /*0000e240*/ MOVW        R2, #9362                   @ 0x2492 
    /*0000e244*/ LDR         R1, [PC, #4]                @ 0x000000000000e250 
    /*0000e248*/ BL          0x000000000000E248          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000e24c*/ B           VouGetInstInfo_xe1a8
    /*0000e250*/ STRDEQ      R0, [R0], -IP 
FUNC_END VouGetInstInfo


FUNC_BEGIN VouChnDealPause
    /*0000e254*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*0000e258*/ MOVW        R2, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000e25c*/ MOV         R6, R1 
    /*0000e260*/ MOVT        R2, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000e264*/ ADD         R1, R1, R0, LSL #2 
    /*0000e268*/ SUB         SP, SP, #20 
    /*0000e26c*/ MOV         R5, R0 
    /*0000e270*/ MOV         R8, R3 
    /*0000e274*/ LDR         R7, [R2, R1, LSL #2] 
    /*0000e278*/ CMP         R7, #0 
    /*0000e27c*/ BEQ         VouChnDealPause_xe364
    VouChnDealPause_xe280:
    /*0000e280*/ ADD         R4, R7, #8192               @ 0x2000 
    /*0000e284*/ LDR         R3, [R4, #1116]             @ 0x45c 
    /*0000e288*/ CMP         R3, #2 
    /*0000e28c*/ BEQ         VouChnDealPause_xe2f8
    /*0000e290*/ LDR         R3, [R4, #1108]             @ 0x454 
    /*0000e294*/ CMP         R3, #3 
    /*0000e298*/ BEQ         VouChnDealPause_xe2ec
    /*0000e29c*/ LDR         R3, [R4, #1112]             @ 0x458 
    /*0000e2a0*/ CMP         R3, #2 
    /*0000e2a4*/ BEQ         VouChnDealPause_xe2ec
    /*0000e2a8*/ STR         R6, [SP, #8] 
    /*0000e2ac*/ MOV         R3, #0 
    /*0000e2b0*/ STR         R5, [SP, #4] 
    /*0000e2b4*/ MOVW        R1, #9485                   @ 0x250d 
    /*0000e2b8*/ STR         R3, [R8] 
    /*0000e2bc*/ MOVW        R2, #0                      @ .LC155 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c54] 
    /*0000e2c0*/ STR         R3, [R8, #4] 
    /*0000e2c4*/ MOVT        R2, #0                      @ .LC155 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c54] 
    /*0000e2c8*/ STR         R1, [SP] 
    /*0000e2cc*/ MOV         R0, #7 
    /*0000e2d0*/ MOV         R1, #15 
    /*0000e2d4*/ LDR         R3, [PC, #168]              @ 0x000000000000e384 
    /*0000e2d8*/ BL          0x000000000000E2D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e2dc*/ MOV         R2, R8 
    /*0000e2e0*/ MOV         R1, R6 
    /*0000e2e4*/ MOV         R0, R5 
    /*0000e2e8*/ BL          0x000000000000E2E8          @ VouGetInstInfo [R_ARM_CALL: .text+0xe184] 
    VouChnDealPause_xe2ec:
    /*0000e2ec*/ MOV         R0, #0 
    /*0000e2f0*/ ADD         SP, SP, #20 
    /*0000e2f4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouChnDealPause_xe2f8:
    /*0000e2f8*/ STR         R6, [SP, #8] 
    /*0000e2fc*/ MOV         R9, #1 
    /*0000e300*/ STR         R5, [SP, #4] 
    /*0000e304*/ MOVW        R3, #9457                   @ 0x24f1 
    /*0000e308*/ STR         R9, [R8] 
    /*0000e30c*/ MOV         R1, #15 
    /*0000e310*/ STR         R9, [R8, #4] 
    /*0000e314*/ MOVW        R2, #0                      @ .LC154 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c20] 
    /*0000e318*/ STR         R3, [SP] 
    /*0000e31c*/ MOVT        R2, #0                      @ .LC154 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c20] 
    /*0000e320*/ LDR         R3, [PC, #92]               @ 0x000000000000e384 
    /*0000e324*/ MOV         R0, #7 
    /*0000e328*/ BL          0x000000000000E328          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e32c*/ MOV         R1, R6 
    /*0000e330*/ MOV         R2, R8 
    /*0000e334*/ STR         R9, [R4, #1116]             @ 0x45c 
    /*0000e338*/ MOV         R0, R5 
    /*0000e33c*/ BL          0x000000000000E33C          @ VouGetInstInfo [R_ARM_CALL: .text+0xe184] 
    /*0000e340*/ MOV         R0, R5 
    /*0000e344*/ BL          0x000000000000E344          @ VO_DRV_IsSingleSupportAspectRatio [R_ARM_CALL: .text+0x1954c] 
    /*0000e348*/ CMP         R0, #0 
    /*0000e34c*/ BNE         VouChnDealPause_xe2ec
    /*0000e350*/ ADD         R1, R7, #92                 @ 0x5c 
    /*0000e354*/ ADD         R0, R8, #744                @ 0x2e8 
    /*0000e358*/ MOV         R2, #24 
    /*0000e35c*/ BL          0x000000000000E35C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000e360*/ B           VouChnDealPause_xe2ec
    VouChnDealPause_xe364:
    /*0000e364*/ MOVW        R3, #0                      @ .LC150 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4b34] 
    /*0000e368*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*0000e36c*/ MOVT        R3, #0                      @ .LC150 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4b34] 
    /*0000e370*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    /*0000e374*/ MOVW        R2, #9402                   @ 0x24ba 
    /*0000e378*/ LDR         R1, [PC, #4]                @ 0x000000000000e384 
    /*0000e37c*/ BL          0x000000000000E37C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000e380*/ B           VouChnDealPause_xe280
    /*0000e384*/ ANDEQ       R0, R0, IP, LSL #18 
FUNC_END VouChnDealPause


FUNC_BEGIN VouChnCheckPTS
    /*0000e388*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000e38c*/ SUB         SP, SP, #52                 @ 0x34 
    /*0000e390*/ MOV         R4, R0 
    /*0000e394*/ MOV         R7, R2 
    /*0000e398*/ STR         R0, [SP, #44]               @ 0x2c 
    /*0000e39c*/ MOV         R0, R2 
    /*0000e3a0*/ MOV         R5, R1 
    /*0000e3a4*/ BL          0x000000000000E3A4          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000e3a8*/ SUBS        R3, R0, #0 
    /*0000e3ac*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000e3b0*/ BNE         VouChnCheckPTS_xe4f8
    /*0000e3b4*/ ADD         R1, R5, R4, LSL #2 
    /*0000e3b8*/ MOVW        R2, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000e3bc*/ MOVT        R2, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000e3c0*/ MOV         IP, R4 
    /*0000e3c4*/ LDRD        R8, [R7, #240]              @ 0xf0 
    /*0000e3c8*/ MOVW        R3, #10997                  @ 0x2af5 
    /*0000e3cc*/ LDR         R4, [R2, R1, LSL #2] 
    /*0000e3d0*/ MOVW        R2, #0                      @ .LC153 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4bbc] 
    /*0000e3d4*/ MOVT        R2, #0                      @ .LC153 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4bbc] 
    /*0000e3d8*/ ADD         R6, R4, #288                @ 0x120 
    /*0000e3dc*/ MOV         SL, R8 
    /*0000e3e0*/ MOV         FP, R9 
    /*0000e3e4*/ STRD        SL, [SP, #32] 
    /*0000e3e8*/ LDRD        R0, [R6, #8] 
    /*0000e3ec*/ STR         R3, [SP] 
    /*0000e3f0*/ SUBS        SL, R8, R0 
    /*0000e3f4*/ STR         R5, [SP, #8] 
    /*0000e3f8*/ SBC         FP, R9, R1 
    /*0000e3fc*/ STRD        R0, [SP, #24] 
    /*0000e400*/ LDRD        R0, [SP, #32] 
    /*0000e404*/ ASR         R8, FP, #31 
    /*0000e408*/ STR         IP, [SP, #4] 
    /*0000e40c*/ EOR         SL, SL, R8 
    /*0000e410*/ EOR         FP, FP, R8 
    /*0000e414*/ STRD        R0, [SP, #16] 
    /*0000e418*/ SUBS        SL, SL, R8 
    /*0000e41c*/ MOV         R1, #15 
    /*0000e420*/ LDR         R3, [PC, #224]              @ 0x000000000000e508 
    /*0000e424*/ MOV         R0, #7 
    /*0000e428*/ SBC         FP, FP, R8 
    /*0000e42c*/ BL          0x000000000000E42C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e430*/ LDR         R2, [R4, #328]              @ 0x148 
    /*0000e434*/ LDRD        R0, [R7, #240]              @ 0xf0 
    /*0000e438*/ CMP         R2, #0 
    /*0000e43c*/ LDRD        R6, [R6, #8] 
    /*0000e440*/ BEQ         VouChnCheckPTS_xe4ac
    /*0000e444*/ CMP         R1, R7 
    /*0000e448*/ CMPEQ       R0, R6 
    /*0000e44c*/ BCS         VouChnCheckPTS_xe488
    /*0000e450*/ LDR         R3, [R4, #224]              @ 0xe0 
    /*0000e454*/ CMP         R3, #0 
    /*0000e458*/ BNE         VouChnCheckPTS_xe488
    VouChnCheckPTS_xe45c:
    /*0000e45c*/ MOVW        R3, #52429                  @ 0xcccd 
    /*0000e460*/ MOVT        R3, #52428                  @ 0xcccc 
    /*0000e464*/ UMULL       R2, R3, R2, R3 
    /*0000e468*/ LSR         R2, R3, #3 
    /*0000e46c*/ MOV         R3, #0 
    /*0000e470*/ CMP         FP, R3 
    /*0000e474*/ CMPEQ       SL, R2 
    /*0000e478*/ BHI         VouChnCheckPTS_xe4ac
    VouChnCheckPTS_xe47c:
    /*0000e47c*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000e480*/ ADD         SP, SP, #52                 @ 0x34 
    /*0000e484*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnCheckPTS_xe488:
    /*0000e488*/ CMP         R1, R7 
    /*0000e48c*/ CMPEQ       R0, R6 
    /*0000e490*/ BLS         VouChnCheckPTS_xe47c
    /*0000e494*/ LDR         R3, [R4, #224]              @ 0xe0 
    /*0000e498*/ CMP         R3, #1 
    /*0000e49c*/ BEQ         VouChnCheckPTS_xe45c
    /*0000e4a0*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000e4a4*/ ADD         SP, SP, #52                 @ 0x34 
    /*0000e4a8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnCheckPTS_xe4ac:
    /*0000e4ac*/ STRD        R0, [SP, #16] 
    /*0000e4b0*/ MOVW        R3, #11006                  @ 0x2afe 
    /*0000e4b4*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*0000e4b8*/ MOVW        R2, #0                      @ .LC153 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4bbc] 
    /*0000e4bc*/ STR         R3, [SP] 
    /*0000e4c0*/ MOVT        R2, #0                      @ .LC153 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4bbc] 
    /*0000e4c4*/ LDR         R3, [PC, #60]               @ 0x000000000000e508 
    /*0000e4c8*/ MOV         R0, #7 
    /*0000e4cc*/ STR         R1, [SP, #4] 
    /*0000e4d0*/ MOV         R1, #15 
    /*0000e4d4*/ STRD        R6, [SP, #24] 
    /*0000e4d8*/ MVN         IP, #0 
    /*0000e4dc*/ STR         R5, [SP, #8] 
    /*0000e4e0*/ STR         IP, [SP, #40]               @ 0x28 
    /*0000e4e4*/ BL          0x000000000000E4E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e4e8*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*0000e4ec*/ ADD         R3, R3, #1 
    /*0000e4f0*/ STR         R3, [R4, #168]              @ 0xa8 
    /*0000e4f4*/ B           VouChnCheckPTS_xe47c
    VouChnCheckPTS_xe4f8:
    /*0000e4f8*/ MOVW        R3, #32774                  @ 0x8006 
    /*0000e4fc*/ MOVT        R3, #40975                  @ 0xa00f 
    /*0000e500*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000e504*/ B           VouChnCheckPTS_xe47c
    /*0000e508*/ ANDEQ       R0, R0, IP, LSL R9 
FUNC_END VouChnCheckPTS


FUNC_BEGIN VouChnCheckPTSWithPreVoBlk
    /*0000e50c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000e510*/ SUB         SP, SP, #60                 @ 0x3c 
    /*0000e514*/ MOV         R9, R0 
    /*0000e518*/ MOV         R0, R2 
    /*0000e51c*/ MOV         R4, R2 
    /*0000e520*/ STR         R2, [SP, #44]               @ 0x2c 
    /*0000e524*/ MOV         R8, R1 
    /*0000e528*/ BL          0x000000000000E528          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000e52c*/ SUBS        R3, R0, #0 
    /*0000e530*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000e534*/ BNE         VouChnCheckPTSWithPreVoBlk_xe680
    /*0000e538*/ LDRD        R4, [R4, #240]              @ 0xf0 
    /*0000e53c*/ ADD         R1, R8, R9, LSL #2 
    /*0000e540*/ MOVW        R2, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000e544*/ MOVT        R2, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000e548*/ MOVW        R3, #11029                  @ 0x2b15 
    /*0000e54c*/ MOV         SL, R4 
    /*0000e550*/ LDR         R4, [R2, R1, LSL #2] 
    /*0000e554*/ MOV         FP, R5 
    /*0000e558*/ STRD        SL, [SP, #48]               @ 0x30 
    /*0000e55c*/ ADD         R5, R4, #288                @ 0x120 
    /*0000e560*/ MOVW        R2, #0                      @ .LC153 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4bbc] 
    /*0000e564*/ MOVT        R2, #0                      @ .LC153 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4bbc] 
    /*0000e568*/ LDRD        R0, [R5, #8] 
    /*0000e56c*/ STR         R3, [SP] 
    /*0000e570*/ SUBS        SL, SL, R0 
    /*0000e574*/ LDR         R3, [PC, #276]              @ 0x000000000000e690 
    /*0000e578*/ SBC         FP, FP, R1 
    /*0000e57c*/ STRD        R0, [SP, #24] 
    /*0000e580*/ LDRD        R0, [SP, #48]               @ 0x30 
    /*0000e584*/ ASR         R6, FP, #31 
    /*0000e588*/ STR         R8, [SP, #8] 
    /*0000e58c*/ EOR         SL, SL, R6 
    /*0000e590*/ EOR         FP, FP, R6 
    /*0000e594*/ SUBS        SL, SL, R6 
    /*0000e598*/ STRD        R0, [SP, #16] 
    /*0000e59c*/ STR         R9, [SP, #4] 
    /*0000e5a0*/ MOV         R1, #15 
    /*0000e5a4*/ MOV         R0, #7 
    /*0000e5a8*/ SBC         FP, FP, R6 
    /*0000e5ac*/ BL          0x000000000000E5AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e5b0*/ LDR         R2, [R4, #328]              @ 0x148 
    /*0000e5b4*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000e5b8*/ CMP         R2, #0 
    /*0000e5bc*/ LDRD        R6, [R5, #8] 
    /*0000e5c0*/ LDRD        R0, [R3, #240]              @ 0xf0 
    /*0000e5c4*/ BEQ         VouChnCheckPTSWithPreVoBlk_xe630
    /*0000e5c8*/ CMP         R1, R7 
    /*0000e5cc*/ CMPEQ       R0, R6 
    /*0000e5d0*/ BCS         VouChnCheckPTSWithPreVoBlk_xe60c
    /*0000e5d4*/ LDR         R3, [R4, #224]              @ 0xe0 
    /*0000e5d8*/ CMP         R3, #0 
    /*0000e5dc*/ BNE         VouChnCheckPTSWithPreVoBlk_xe60c
    VouChnCheckPTSWithPreVoBlk_xe5e0:
    /*0000e5e0*/ MOVW        R3, #52429                  @ 0xcccd 
    /*0000e5e4*/ MOVT        R3, #52428                  @ 0xcccc 
    /*0000e5e8*/ UMULL       R2, R3, R2, R3 
    /*0000e5ec*/ LSR         R2, R3, #3 
    /*0000e5f0*/ MOV         R3, #0 
    /*0000e5f4*/ CMP         FP, R3 
    /*0000e5f8*/ CMPEQ       SL, R2 
    /*0000e5fc*/ BHI         VouChnCheckPTSWithPreVoBlk_xe630
    VouChnCheckPTSWithPreVoBlk_xe600:
    /*0000e600*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000e604*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0000e608*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnCheckPTSWithPreVoBlk_xe60c:
    /*0000e60c*/ CMP         R1, R7 
    /*0000e610*/ CMPEQ       R0, R6 
    /*0000e614*/ BLS         VouChnCheckPTSWithPreVoBlk_xe600
    /*0000e618*/ LDR         R3, [R4, #224]              @ 0xe0 
    /*0000e61c*/ CMP         R3, #1 
    /*0000e620*/ BEQ         VouChnCheckPTSWithPreVoBlk_xe5e0
    /*0000e624*/ LDR         R0, [SP, #40]               @ 0x28 
    /*0000e628*/ ADD         SP, SP, #60                 @ 0x3c 
    /*0000e62c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnCheckPTSWithPreVoBlk_xe630:
    /*0000e630*/ LDRD        SL, [R5, #24] 
    /*0000e634*/ MOVW        R3, #11038                  @ 0x2b1e 
    /*0000e638*/ STRD        R0, [SP, #16] 
    /*0000e63c*/ MOVW        R2, #0                      @ .LC156 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c8c] 
    /*0000e640*/ STR         R3, [SP] 
    /*0000e644*/ MOVT        R2, #0                      @ .LC156 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c8c] 
    /*0000e648*/ LDR         R3, [PC, #64]               @ 0x000000000000e690 
    /*0000e64c*/ MOV         R1, #15 
    /*0000e650*/ STRD        R6, [SP, #24] 
    /*0000e654*/ MOV         R0, #7 
    /*0000e658*/ STRD        SL, [SP, #32] 
    /*0000e65c*/ MVN         IP, #0 
    /*0000e660*/ STR         R8, [SP, #8] 
    /*0000e664*/ STR         R9, [SP, #4] 
    /*0000e668*/ STR         IP, [SP, #40]               @ 0x28 
    /*0000e66c*/ BL          0x000000000000E66C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e670*/ LDR         R3, [R4, #168]              @ 0xa8 
    /*0000e674*/ ADD         R3, R3, #1 
    /*0000e678*/ STR         R3, [R4, #168]              @ 0xa8 
    /*0000e67c*/ B           VouChnCheckPTSWithPreVoBlk_xe600
    VouChnCheckPTSWithPreVoBlk_xe680:
    /*0000e680*/ MOVW        R3, #32774                  @ 0x8006 
    /*0000e684*/ MOVT        R3, #40975                  @ 0xa00f 
    /*0000e688*/ STR         R3, [SP, #40]               @ 0x28 
    /*0000e68c*/ B           VouChnCheckPTSWithPreVoBlk_xe600
    /*0000e690*/ ANDEQ       R0, R0, IP, LSR #18 
FUNC_END VouChnCheckPTSWithPreVoBlk


FUNC_BEGIN VouChnPreViewQuery
    /*0000e694*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000e698*/ MOVW        R2, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000e69c*/ MOV         R7, R1 
    /*0000e6a0*/ MOVT        R2, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000e6a4*/ ADD         R1, R1, R0, LSL #2 
    /*0000e6a8*/ SUB         SP, SP, #28 
    /*0000e6ac*/ MOV         R4, R0 
    /*0000e6b0*/ MOV         R6, R3 
    /*0000e6b4*/ LDR         R5, [R2, R1, LSL #2] 
    /*0000e6b8*/ CMP         R5, #0 
    /*0000e6bc*/ BEQ         VouChnPreViewQuery_xe858
    VouChnPreViewQuery_xe6c0:
    /*0000e6c0*/ LDR         R3, [R5, #216]              @ 0xd8 
    /*0000e6c4*/ CMP         R3, #1 
    /*0000e6c8*/ BEQ         VouChnPreViewQuery_xe814
    /*0000e6cc*/ ADD         R2, SP, #20 
    /*0000e6d0*/ MOV         R1, R7 
    /*0000e6d4*/ MOV         R0, R4 
    /*0000e6d8*/ BL          0x000000000000E6D8          @ VouChnCalTotalLeaveDisplay [R_ARM_CALL: .text+0xdbbc] 
    /*0000e6dc*/ ADD         R1, R5, #8192               @ 0x2000 
    /*0000e6e0*/ LDR         R3, [SP, #20] 
    /*0000e6e4*/ LDR         R2, [R1, #1368]             @ 0x558 
    /*0000e6e8*/ LDR         R0, [R5, #1152]             @ 0x480 
    /*0000e6ec*/ ADD         R3, R2, R3 
    /*0000e6f0*/ STR         R3, [SP, #20] 
    /*0000e6f4*/ CMP         R3, R0 
    /*0000e6f8*/ BCC         VouChnPreViewQuery_xe774
    /*0000e6fc*/ STR         R3, [SP, #12] 
    /*0000e700*/ MOV         R1, #1 
    /*0000e704*/ STR         R7, [SP, #8] 
    /*0000e708*/ MOV         R3, #0 
    /*0000e70c*/ STR         R4, [SP, #4] 
    /*0000e710*/ MOVW        R0, #11097                  @ 0x2b59 
    /*0000e714*/ STR         R3, [R6] 
    /*0000e718*/ MOVW        R2, #0                      @ .LC159 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4d8c] 
    /*0000e71c*/ STR         R3, [R6, #4] 
    /*0000e720*/ MOVT        R2, #0                      @ .LC159 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4d8c] 
    /*0000e724*/ STR         R1, [R6, #12] 
    /*0000e728*/ MOV         R1, #15 
    /*0000e72c*/ STR         R0, [SP] 
    /*0000e730*/ MOV         R0, #7 
    /*0000e734*/ LDR         R3, [PC, #316]              @ 0x000000000000e878 
    /*0000e738*/ BL          0x000000000000E738          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e73c*/ MOV         R0, R4 
    /*0000e740*/ BL          0x000000000000E740          @ VO_DRV_IsSingleSupportAspectRatio [R_ARM_CALL: .text+0x1954c] 
    /*0000e744*/ CMP         R0, #0 
    /*0000e748*/ BEQ         VouChnPreViewQuery_xe7dc
    VouChnPreViewQuery_xe74c:
    /*0000e74c*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000e750*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000e754*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*0000e758*/ MLA         R4, R3, R4, R2 
    /*0000e75c*/ LDR         R3, [R4, #180]              @ 0xb4 
    VouChnPreViewQuery_xe760:
    /*0000e760*/ CMP         R3, #1 
    /*0000e764*/ BEQ         VouChnPreViewQuery_xe7f8
    /*0000e768*/ MOV         R0, #0 
    /*0000e76c*/ ADD         SP, SP, #28 
    /*0000e770*/ POP         {R4, R5, R6, R7, PC} 
    VouChnPreViewQuery_xe774:
    /*0000e774*/ MOV         R3, #1 
    /*0000e778*/ ADD         R2, R2, #1 
    /*0000e77c*/ MOV         R0, R4 
    /*0000e780*/ STR         R2, [R1, #1368]             @ 0x558 
    /*0000e784*/ MOV         R2, R6 
    /*0000e788*/ STR         R3, [R6] 
    /*0000e78c*/ MOV         R1, R7 
    /*0000e790*/ STR         R3, [R6, #4] 
    /*0000e794*/ STR         R3, [R6, #12] 
    /*0000e798*/ BL          0x000000000000E798          @ VouGetInstInfo [R_ARM_CALL: .text+0xe184] 
    /*0000e79c*/ LDR         R1, [SP, #20] 
    /*0000e7a0*/ MOVW        R3, #11084                  @ 0x2b4c 
    /*0000e7a4*/ STR         R7, [SP, #8] 
    /*0000e7a8*/ STR         R3, [SP] 
    /*0000e7ac*/ MOVW        R2, #0                      @ .LC158 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4d38] 
    /*0000e7b0*/ STR         R1, [SP, #12] 
    /*0000e7b4*/ MOVT        R2, #0                      @ .LC158 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4d38] 
    /*0000e7b8*/ MOV         R1, #15 
    /*0000e7bc*/ LDR         R3, [PC, #180]              @ 0x000000000000e878 
    /*0000e7c0*/ STR         R4, [SP, #4] 
    /*0000e7c4*/ MOV         R0, #7 
    /*0000e7c8*/ BL          0x000000000000E7C8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e7cc*/ MOV         R0, R4 
    /*0000e7d0*/ BL          0x000000000000E7D0          @ VO_DRV_IsSingleSupportAspectRatio [R_ARM_CALL: .text+0x1954c] 
    /*0000e7d4*/ CMP         R0, #0 
    /*0000e7d8*/ BNE         VouChnPreViewQuery_xe74c
    VouChnPreViewQuery_xe7dc:
    /*0000e7dc*/ MOVW        R3, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0000e7e0*/ MOVT        R3, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0000e7e4*/ MOVW        R2, #12192                  @ 0x2fa0 
    /*0000e7e8*/ MLA         R4, R2, R4, R3 
    /*0000e7ec*/ LDR         R3, [R4, #180]              @ 0xb4 
    /*0000e7f0*/ CMP         R3, #0 
    /*0000e7f4*/ BNE         VouChnPreViewQuery_xe760
    VouChnPreViewQuery_xe7f8:
    /*0000e7f8*/ ADD         R1, R5, #92                 @ 0x5c 
    /*0000e7fc*/ ADD         R0, R6, #744                @ 0x2e8 
    /*0000e800*/ MOV         R2, #24 
    /*0000e804*/ BL          0x000000000000E804          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000e808*/ MOV         R0, #0 
    /*0000e80c*/ ADD         SP, SP, #28 
    /*0000e810*/ POP         {R4, R5, R6, R7, PC} 
    VouChnPreViewQuery_xe814:
    /*0000e814*/ STR         R3, [R6] 
    /*0000e818*/ MOVW        R0, #11067                  @ 0x2b3b 
    /*0000e81c*/ STR         R7, [SP, #8] 
    /*0000e820*/ MOV         R3, #0 
    /*0000e824*/ STR         R4, [SP, #4] 
    /*0000e828*/ MOV         R1, #15 
    /*0000e82c*/ STR         R3, [R6, #4] 
    /*0000e830*/ MOVW        R2, #0                      @ .LC157 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4cf8] 
    /*0000e834*/ STR         R3, [R6, #12] 
    /*0000e838*/ MOVT        R2, #0                      @ .LC157 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4cf8] 
    /*0000e83c*/ STR         R0, [SP] 
    /*0000e840*/ MOV         R0, #7 
    /*0000e844*/ LDR         R3, [PC, #44]               @ 0x000000000000e878 
    /*0000e848*/ BL          0x000000000000E848          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000e84c*/ MOV         R0, #0 
    /*0000e850*/ ADD         SP, SP, #28 
    /*0000e854*/ POP         {R4, R5, R6, R7, PC} 
    VouChnPreViewQuery_xe858:
    /*0000e858*/ MOVW        R3, #0                      @ .LC150 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4b34] 
    /*0000e85c*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*0000e860*/ MOVT        R3, #0                      @ .LC150 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4b34] 
    /*0000e864*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    /*0000e868*/ MOVW        R2, #11056                  @ 0x2b30 
    /*0000e86c*/ LDR         R1, [PC, #4]                @ 0x000000000000e878 
    /*0000e870*/ BL          0x000000000000E870          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000e874*/ B           VouChnPreViewQuery_xe6c0
    /*0000e878*/ ANDEQ       R0, R0, R8, ASR #18 
FUNC_END VouChnPreViewQuery


FUNC_BEGIN VouChnVdecQuery
    /*0000e87c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000e880*/ MOV         R5, R1 
    /*0000e884*/ MOV         R4, R0 
    /*0000e888*/ MOVW        R1, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000e88c*/ ADD         R0, R5, R0, LSL #2 
    /*0000e890*/ MOVT        R1, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000e894*/ SUB         SP, SP, #24 
    /*0000e898*/ MOV         R9, R2 
    /*0000e89c*/ LDR         R7, [R1, R0, LSL #2] 
    /*0000e8a0*/ MOV         R8, R3 
    /*0000e8a4*/ CMP         R7, #0 
    /*0000e8a8*/ BEQ         VouChnVdecQuery_xeac8
    VouChnVdecQuery_xe8ac:
    /*0000e8ac*/ LDR         R6, [R9] 
    /*0000e8b0*/ LDR         SL, [R7, #344]              @ 0x158 
    /*0000e8b4*/ CMP         R6, #0 
    /*0000e8b8*/ BEQ         VouChnVdecQuery_xea9c
    /*0000e8bc*/ LDRD        R2, [R6, #240]              @ 0xf0 
    /*0000e8c0*/ ORRS        R1, R2, R3 
    /*0000e8c4*/ BEQ         VouChnVdecQuery_xe968
    VouChnVdecQuery_xe8c8:
    /*0000e8c8*/ MVN         R1, #0 
    /*0000e8cc*/ CMP         R3, R1 
    /*0000e8d0*/ MVN         R0, #0 
    /*0000e8d4*/ CMPEQ       R2, R0 
    /*0000e8d8*/ BEQ         VouChnVdecQuery_xe9d0
    /*0000e8dc*/ MOV         R3, SL 
    /*0000e8e0*/ MOV         R2, R6 
    /*0000e8e4*/ MOV         R1, R5 
    /*0000e8e8*/ MOV         R0, R4 
    /*0000e8ec*/ BL          0x000000000000E8EC          @ VouChnResetScalePts [R_ARM_CALL: .text+0xdcb4] 
    VouChnVdecQuery_xe8f0:
    /*0000e8f0*/ LDR         R3, [R7, #216]              @ 0xd8 
    /*0000e8f4*/ CMP         R3, #1 
    /*0000e8f8*/ BEQ         VouChnVdecQuery_xe9fc
    /*0000e8fc*/ MOV         R2, R6 
    /*0000e900*/ MOV         R1, R5 
    /*0000e904*/ MOV         R0, R4 
    /*0000e908*/ BL          0x000000000000E908          @ VouChnCheckPTS [R_ARM_CALL: .text+0xe388] 
    /*0000e90c*/ CMP         R0, #0 
    /*0000e910*/ BEQ         VouChnVdecQuery_xe980
    /*0000e914*/ LDR         R3, [R9] 
    /*0000e918*/ CMP         R3, #0 
    /*0000e91c*/ BEQ         VouChnVdecQuery_xea64
    /*0000e920*/ STR         R5, [SP, #8] 
    /*0000e924*/ MOV         R2, #1 
    /*0000e928*/ STR         R4, [SP, #4] 
    /*0000e92c*/ MOVW        R1, #11171                  @ 0x2ba3 
    /*0000e930*/ STR         R2, [R8] 
    /*0000e934*/ MOVW        R2, #0                      @ .LC162 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4e84] 
    /*0000e938*/ MOVT        R2, #0                      @ .LC162 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4e84] 
    /*0000e93c*/ MOV         R3, #0 
    /*0000e940*/ STR         R3, [R8, #4] 
    /*0000e944*/ STR         R3, [R8, #12] 
    VouChnVdecQuery_xe948:
    /*0000e948*/ STR         R1, [SP] 
    /*0000e94c*/ MOV         R0, #7 
    /*0000e950*/ MOV         R1, #15 
    /*0000e954*/ LDR         R3, [PC, #396]              @ 0x000000000000eae8 
    /*0000e958*/ BL          0x000000000000E958          @ HI_LOG [R_ARM_CALL: +0x0] 
    VouChnVdecQuery_xe95c:
    /*0000e95c*/ MOV         R0, #0 
    /*0000e960*/ ADD         SP, SP, #24 
    /*0000e964*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouChnVdecQuery_xe968:
    /*0000e968*/ MOV         R2, R6 
    /*0000e96c*/ MOV         R1, R5 
    /*0000e970*/ MOV         R0, R4 
    /*0000e974*/ BL          0x000000000000E974          @ VouChnTagPseudoPts [R_ARM_CALL: .text+0xe100] 
    /*0000e978*/ LDRD        R2, [R6, #240]              @ 0xf0 
    /*0000e97c*/ B           VouChnVdecQuery_xe8c8
    VouChnVdecQuery_xe980:
    /*0000e980*/ ADD         R2, SP, #20 
    /*0000e984*/ MOV         R1, R5 
    /*0000e988*/ MOV         R0, R4 
    /*0000e98c*/ BL          0x000000000000E98C          @ VouChnCalTotalLeaveDisplay [R_ARM_CALL: .text+0xdbbc] 
    /*0000e990*/ LDR         R3, [R9] 
    /*0000e994*/ CMP         R3, #0 
    /*0000e998*/ BEQ         VouChnVdecQuery_xe9ac
    /*0000e99c*/ LDR         R2, [R7, #1152]             @ 0x480 
    /*0000e9a0*/ LDR         R3, [SP, #20] 
    /*0000e9a4*/ CMP         R2, R3 
    /*0000e9a8*/ BHI         VouChnVdecQuery_xea1c
    VouChnVdecQuery_xe9ac:
    /*0000e9ac*/ STR         R5, [SP, #8] 
    /*0000e9b0*/ MOV         R3, #0 
    /*0000e9b4*/ STR         R4, [SP, #4] 
    /*0000e9b8*/ MOVW        R2, #0                      @ .LC155 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c54] 
    /*0000e9bc*/ MOVW        R1, #11191                  @ 0x2bb7 
    /*0000e9c0*/ STR         R3, [R8] 
    /*0000e9c4*/ STR         R3, [R8, #4] 
    /*0000e9c8*/ MOVT        R2, #0                      @ .LC155 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c54] 
    /*0000e9cc*/ B           VouChnVdecQuery_xe948
    VouChnVdecQuery_xe9d0:
    /*0000e9d0*/ STR         R5, [SP, #8] 
    /*0000e9d4*/ MOV         R2, #1 
    /*0000e9d8*/ STR         R4, [SP, #4] 
    /*0000e9dc*/ MOV         R3, #0 
    /*0000e9e0*/ STR         R2, [R8] 
    /*0000e9e4*/ MOVW        R1, #11143                  @ 0x2b87 
    /*0000e9e8*/ MOVW        R2, #0                      @ .LC160 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4dec] 
    /*0000e9ec*/ STR         R3, [R8, #4] 
    /*0000e9f0*/ STR         R3, [R8, #12] 
    /*0000e9f4*/ MOVT        R2, #0                      @ .LC160 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4dec] 
    /*0000e9f8*/ B           VouChnVdecQuery_xe948
    VouChnVdecQuery_xe9fc:
    /*0000e9fc*/ MOV         R3, R8 
    /*0000ea00*/ MOV         R2, R9 
    /*0000ea04*/ MOV         R1, R5 
    /*0000ea08*/ MOV         R0, R4 
    /*0000ea0c*/ BL          0x000000000000EA0C          @ VouChnDealPause [R_ARM_CALL: .text+0xe254] 
    /*0000ea10*/ MOV         R0, #0 
    /*0000ea14*/ ADD         SP, SP, #24 
    /*0000ea18*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouChnVdecQuery_xea1c:
    /*0000ea1c*/ STR         R5, [SP, #8] 
    /*0000ea20*/ MOV         R3, #1 
    /*0000ea24*/ STR         R4, [SP, #4] 
    /*0000ea28*/ MOVW        R1, #11198                  @ 0x2bbe 
    /*0000ea2c*/ STR         R3, [R8] 
    /*0000ea30*/ MOVW        R2, #0                      @ .LC154 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c20] 
    /*0000ea34*/ STR         R3, [R8, #4] 
    /*0000ea38*/ MOVT        R2, #0                      @ .LC154 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c20] 
    /*0000ea3c*/ STR         R1, [SP] 
    /*0000ea40*/ MOV         R0, #7 
    /*0000ea44*/ MOV         R1, #15 
    /*0000ea48*/ LDR         R3, [PC, #152]              @ 0x000000000000eae8 
    /*0000ea4c*/ BL          0x000000000000EA4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ea50*/ MOV         R2, R8 
    /*0000ea54*/ MOV         R1, R5 
    /*0000ea58*/ MOV         R0, R4 
    /*0000ea5c*/ BL          0x000000000000EA5C          @ VouGetInstInfo [R_ARM_CALL: .text+0xe184] 
    /*0000ea60*/ B           VouChnVdecQuery_xe95c
    VouChnVdecQuery_xea64:
    /*0000ea64*/ STR         R3, [R8] 
    /*0000ea68*/ MOVW        IP, #11179                  @ 0x2bab 
    /*0000ea6c*/ STR         R3, [R8, #4] 
    /*0000ea70*/ MOVW        R2, #0                      @ .LC155 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4c54] 
    /*0000ea74*/ STR         R3, [R8, #12] 
    /*0000ea78*/ MOVT        R2, #0                      @ .LC155 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4c54] 
    /*0000ea7c*/ STR         R5, [SP, #8] 
    /*0000ea80*/ MOV         R1, #15 
    /*0000ea84*/ STR         R4, [SP, #4] 
    /*0000ea88*/ MOV         R0, #7 
    /*0000ea8c*/ STR         IP, [SP] 
    /*0000ea90*/ LDR         R3, [PC, #80]               @ 0x000000000000eae8 
    /*0000ea94*/ BL          0x000000000000EA94          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ea98*/ B           VouChnVdecQuery_xe95c
    VouChnVdecQuery_xea9c:
    /*0000ea9c*/ MOVW        R3, #11151                  @ 0x2b8f 
    /*0000eaa0*/ STR         R5, [SP, #8] 
    /*0000eaa4*/ STR         R3, [SP] 
    /*0000eaa8*/ MOVW        R2, #0                      @ .LC161 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4e48] 
    /*0000eaac*/ STR         R4, [SP, #4] 
    /*0000eab0*/ MOVT        R2, #0                      @ .LC161 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4e48] 
    /*0000eab4*/ LDR         R3, [PC, #44]               @ 0x000000000000eae8 
    /*0000eab8*/ MOV         R1, #15 
    /*0000eabc*/ MOV         R0, #7 
    /*0000eac0*/ BL          0x000000000000EAC0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000eac4*/ B           VouChnVdecQuery_xe8f0
    VouChnVdecQuery_xeac8:
    /*0000eac8*/ MOVW        R3, #0                      @ .LC150 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4b34] 
    /*0000eacc*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*0000ead0*/ MOVT        R3, #0                      @ .LC150 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4b34] 
    /*0000ead4*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    /*0000ead8*/ MOVW        R2, #11122                  @ 0x2b72 
    /*0000eadc*/ LDR         R1, [PC, #4]                @ 0x000000000000eae8 
    /*0000eae0*/ BL          0x000000000000EAE0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000eae4*/ B           VouChnVdecQuery_xe8ac
    /*0000eae8*/ ANDEQ       R0, R0, IP, ASR R9 
FUNC_END VouChnVdecQuery


FUNC_BEGIN VouChnVpssQuery
    /*0000eaec*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000eaf0*/ SUB         SP, SP, #36                 @ 0x24 
    /*0000eaf4*/ MOV         SL, R1 
    /*0000eaf8*/ MOV         R8, R2 
    /*0000eafc*/ MOV         R6, R3 
    /*0000eb00*/ MOV         R9, R0 
    /*0000eb04*/ BL          0x000000000000EB04          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000eb08*/ CMP         R0, #0 
    /*0000eb0c*/ BNE         VouChnVpssQuery_xecec
    /*0000eb10*/ MOV         R1, SL 
    /*0000eb14*/ MOV         R0, R9 
    /*0000eb18*/ BL          0x000000000000EB18          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000eb1c*/ CMP         R0, #0 
    /*0000eb20*/ BNE         VouChnVpssQuery_xecf8
    /*0000eb24*/ MOV         R0, R8 
    /*0000eb28*/ BL          0x000000000000EB28          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000eb2c*/ CMP         R0, #0 
    /*0000eb30*/ BNE         VouChnVpssQuery_xecd0
    /*0000eb34*/ MOV         R0, R6 
    /*0000eb38*/ BL          0x000000000000EB38          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000eb3c*/ SUBS        R5, R0, #0 
    /*0000eb40*/ BNE         VouChnVpssQuery_xecd0
    /*0000eb44*/ ADD         R7, SP, #32 
    /*0000eb48*/ MOVW        R0, #0                      @ g_VouListLock [R_ARM_MOVW_ABS_NC: .bss+0x30a0] 
    /*0000eb4c*/ MOVT        R0, #0                      @ g_VouListLock [R_ARM_MOVT_ABS: .bss+0x30a0] 
    /*0000eb50*/ STR         R5, [R7, #-4]! 
    /*0000eb54*/ MOV         R1, R7 
    /*0000eb58*/ BL          0x000000000000EB58          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000eb5c*/ LDR         R3, [SP, #28] 
    /*0000eb60*/ MOV         R1, R7 
    /*0000eb64*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000eb68*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000eb6c*/ STR         R5, [SP, #28] 
    /*0000eb70*/ STR         R3, [SP, #20] 
    /*0000eb74*/ BL          0x000000000000EB74          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000eb78*/ MOVW        R1, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000eb7c*/ ADD         R0, SL, R9, LSL #2 
    /*0000eb80*/ MOVT        R1, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000eb84*/ LDR         R3, [SP, #28] 
    /*0000eb88*/ LDR         R4, [R1, R0, LSL #2] 
    /*0000eb8c*/ STR         R3, [SP, #16] 
    /*0000eb90*/ CMP         R4, #0 
    /*0000eb94*/ BEQ         VouChnVpssQuery_xed5c
    /*0000eb98*/ LDR         R3, [R4, #4] 
    /*0000eb9c*/ CMP         R3, #0 
    /*0000eba0*/ BEQ         VouChnVpssQuery_xed04
    /*0000eba4*/ ADD         FP, R4, #8192               @ 0x2000 
    /*0000eba8*/ LDR         R3, [FP, #1320]             @ 0x528 
    /*0000ebac*/ CMP         R3, #1 
    /*0000ebb0*/ BEQ         VouChnVpssQuery_xed40
    /*0000ebb4*/ STR         R5, [R6, #12] 
    /*0000ebb8*/ LDR         R3, [R8] 
    /*0000ebbc*/ CMP         R3, #0 
    /*0000ebc0*/ BEQ         VouChnVpssQuery_xece4
    /*0000ebc4*/ LDRD        R2, [R3, #240]              @ 0xf0 
    /*0000ebc8*/ LDR         IP, [R4, #44]               @ 0x2c 
    /*0000ebcc*/ STRD        R2, [R4, #208]              @ 0xd0 
    /*0000ebd0*/ LDR         R3, [R8] 
    /*0000ebd4*/ LDR         R3, [R3, #340]              @ 0x154 
    /*0000ebd8*/ CMP         R3, IP 
    /*0000ebdc*/ BEQ         VouChnVpssQuery_xebf8
    /*0000ebe0*/ LDR         R2, [R1, R0, LSL #2] 
    /*0000ebe4*/ MOV         R0, #0 
    /*0000ebe8*/ MOV         R1, #0 
    /*0000ebec*/ ADD         IP, R2, #304                @ 0x130 
    /*0000ebf0*/ STR         R5, [R2, #344]              @ 0x158 
    /*0000ebf4*/ STRD        R0, [IP] 
    VouChnVpssQuery_xebf8:
    /*0000ebf8*/ STR         R3, [R4, #44]               @ 0x2c 
    VouChnVpssQuery_xebfc:
    /*0000ebfc*/ CMP         R3, #0 
    /*0000ec00*/ MOV         R1, SL 
    /*0000ec04*/ MOV         R0, R9 
    /*0000ec08*/ MOV         R3, R6 
    /*0000ec0c*/ MOV         R2, R8 
    /*0000ec10*/ BEQ         VouChnVpssQuery_xec84
    /*0000ec14*/ BL          0x000000000000EC14          @ VouChnVdecQuery [R_ARM_CALL: .text+0xe87c] 
    VouChnVpssQuery_xec18:
    /*0000ec18*/ LDR         R2, [R6, #4] 
    /*0000ec1c*/ MOV         R3, #0 
    /*0000ec20*/ STR         R3, [R6, #768]              @ 0x300 
    /*0000ec24*/ CMP         R2, #1 
    /*0000ec28*/ BEQ         VouChnVpssQuery_xec8c
    VouChnVpssQuery_xec2c:
    /*0000ec2c*/ LDR         R3, [R8] 
    /*0000ec30*/ CMP         R3, #0 
    /*0000ec34*/ LDRDNE      R2, [R3, #240]              @ 0xf0 
    /*0000ec38*/ STRDNE      R2, [R4, #200]              @ 0xc8 
    /*0000ec3c*/ LDR         R3, [R4, #136]              @ 0x88 
    /*0000ec40*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000ec44*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000ec48*/ MOV         R1, R7 
    /*0000ec4c*/ ADD         R3, R3, #1 
    /*0000ec50*/ STR         R3, [R4, #136]              @ 0x88 
    VouChnVpssQuery_xec54:
    /*0000ec54*/ LDR         R3, [SP, #16] 
    /*0000ec58*/ STR         R3, [SP, #28] 
    /*0000ec5c*/ BL          0x000000000000EC5C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000ec60*/ LDR         R3, [SP, #20] 
    /*0000ec64*/ MOVW        R0, #0                      @ g_VouListLock [R_ARM_MOVW_ABS_NC: .bss+0x30a0] 
    /*0000ec68*/ MOV         R1, R7 
    /*0000ec6c*/ MOVT        R0, #0                      @ g_VouListLock [R_ARM_MOVT_ABS: .bss+0x30a0] 
    /*0000ec70*/ STR         R3, [SP, #28] 
    /*0000ec74*/ BL          0x000000000000EC74          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VouChnVpssQuery_xec78:
    /*0000ec78*/ MOV         R0, R5 
    /*0000ec7c*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000ec80*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnVpssQuery_xec84:
    /*0000ec84*/ BL          0x000000000000EC84          @ VouChnPreViewQuery [R_ARM_CALL: .text+0xe694] 
    /*0000ec88*/ B           VouChnVpssQuery_xec18
    VouChnVpssQuery_xec8c:
    /*0000ec8c*/ STR         R3, [FP, #1316]             @ 0x524 
    /*0000ec90*/ LDR         R3, [R6, #4] 
    /*0000ec94*/ CMP         R3, #1 
    /*0000ec98*/ BNE         VouChnVpssQuery_xec2c
    /*0000ec9c*/ LDR         R3, [R6] 
    /*0000eca0*/ CMP         R3, #1 
    /*0000eca4*/ LDREQ       R3, [R4, #140]              @ 0x8c 
    /*0000eca8*/ LDRNE       R3, [R4, #144]              @ 0x90 
    /*0000ecac*/ ADDEQ       R3, R3, #1 
    /*0000ecb0*/ ADDNE       R3, R3, #1 
    /*0000ecb4*/ STREQ       R3, [R4, #140]              @ 0x8c 
    /*0000ecb8*/ STRNE       R3, [R4, #144]              @ 0x90 
    /*0000ecbc*/ LDR         R3, [R8, #16] 
    /*0000ecc0*/ CMP         R3, #1 
    /*0000ecc4*/ LDRDEQ      R2, [R6, #144]              @ 0x90 
    /*0000ecc8*/ STRDEQ      R2, [R4, #152]              @ 0x98 
    /*0000eccc*/ B           VouChnVpssQuery_xec2c
    VouChnVpssQuery_xecd0:
    /*0000ecd0*/ MOVW        R5, #32774                  @ 0x8006 
    /*0000ecd4*/ MOVT        R5, #40975                  @ 0xa00f 
    /*0000ecd8*/ MOV         R0, R5 
    /*0000ecdc*/ ADD         SP, SP, #36                 @ 0x24 
    /*0000ece0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnVpssQuery_xece4:
    /*0000ece4*/ LDR         R3, [R4, #44]               @ 0x2c 
    /*0000ece8*/ B           VouChnVpssQuery_xebfc
    VouChnVpssQuery_xecec:
    /*0000ecec*/ MOVW        R5, #32877                  @ 0x806d 
    /*0000ecf0*/ MOVT        R5, #40975                  @ 0xa00f 
    /*0000ecf4*/ B           VouChnVpssQuery_xec78
    VouChnVpssQuery_xecf8:
    /*0000ecf8*/ MOVW        R5, #32770                  @ 0x8002 
    /*0000ecfc*/ MOVT        R5, #40975                  @ 0xa00f 
    /*0000ed00*/ B           VouChnVpssQuery_xec78
    VouChnVpssQuery_xed04:
    /*0000ed04*/ MOVW        R2, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x391c] 
    /*0000ed08*/ MOVT        R2, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0x391c] 
    /*0000ed0c*/ MOVW        R3, #11257                  @ 0x2bf9 
    /*0000ed10*/ STR         SL, [SP, #8] 
    /*0000ed14*/ STR         R9, [SP, #4] 
    /*0000ed18*/ STR         R3, [SP] 
    VouChnVpssQuery_xed1c:
    /*0000ed1c*/ MOV         R1, #15 
    /*0000ed20*/ LDR         R3, [PC, #80]               @ 0x000000000000ed78 
    /*0000ed24*/ MOV         R0, #4 
    /*0000ed28*/ MVN         R5, #0 
    /*0000ed2c*/ BL          0x000000000000ED2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ed30*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000ed34*/ MOV         R1, R7 
    /*0000ed38*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000ed3c*/ B           VouChnVpssQuery_xec54
    VouChnVpssQuery_xed40:
    /*0000ed40*/ MOVW        R3, #11267                  @ 0x2c03 
    /*0000ed44*/ MOVW        R2, #0                      @ .LC164 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4f08] 
    /*0000ed48*/ STR         SL, [SP, #8] 
    /*0000ed4c*/ MOVT        R2, #0                      @ .LC164 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4f08] 
    /*0000ed50*/ STR         R9, [SP, #4] 
    /*0000ed54*/ STR         R3, [SP] 
    /*0000ed58*/ B           VouChnVpssQuery_xed1c
    VouChnVpssQuery_xed5c:
    /*0000ed5c*/ MOVW        R3, #11249                  @ 0x2bf1 
    /*0000ed60*/ MOVW        R2, #0                      @ .LC163 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4ec8] 
    /*0000ed64*/ STR         SL, [SP, #8] 
    /*0000ed68*/ MOVT        R2, #0                      @ .LC163 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4ec8] 
    /*0000ed6c*/ STR         R9, [SP, #4] 
    /*0000ed70*/ STR         R3, [SP] 
    /*0000ed74*/ B           VouChnVpssQuery_xed1c
    /*0000ed78*/ ANDEQ       R0, R0, IP, ROR #18 
FUNC_END VouChnVpssQuery


FUNC_BEGIN VouChnSetRecvFrmInfo
    /*0000ed7c*/ PUSH        {R4, R5, R6, LR} 
    /*0000ed80*/ MOV         R2, #32 
    /*0000ed84*/ MOV         R4, R0 
    /*0000ed88*/ MOV         R5, R1 
    /*0000ed8c*/ MOV         R0, R1 
    /*0000ed90*/ MOV         R1, #0 
    /*0000ed94*/ BL          0x000000000000ED94          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0000ed98*/ LDR         R3, [R4] 
    /*0000ed9c*/ STR         R3, [R5] 
    /*0000eda0*/ LDRD        R2, [R4, #24] 
    /*0000eda4*/ STRD        R2, [R5, #24] 
    /*0000eda8*/ LDR         R3, [R4] 
    /*0000edac*/ CMP         R3, #1 
    /*0000edb0*/ BNE         VouChnSetRecvFrmInfo_xedd4
    /*0000edb4*/ LDR         R3, [R4, #12] 
    /*0000edb8*/ LDR         R3, [R3, #340]              @ 0x154 
    /*0000edbc*/ STR         R3, [R5, #8] 
    /*0000edc0*/ LDR         R3, [R4, #12] 
    /*0000edc4*/ STR         R3, [R5, #12] 
    /*0000edc8*/ LDR         R3, [R4, #16] 
    /*0000edcc*/ CMP         R3, #0 
    /*0000edd0*/ STRNE       R3, [R5, #16] 
    VouChnSetRecvFrmInfo_xedd4:
    /*0000edd4*/ MOV         R0, #0 
    /*0000edd8*/ POP         {R4, R5, R6, PC} 
FUNC_END VouChnSetRecvFrmInfo


FUNC_BEGIN VoGetFrmVbBlk
    /*0000eddc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000ede0*/ SUB         SP, SP, #124                @ 0x7c 
    /*0000ede4*/ CMP         R3, #0 
    /*0000ede8*/ CMPNE       R2, #0 
    /*0000edec*/ MOV         FP, R1 
    /*0000edf0*/ LDR         R4, [SP, #160]              @ 0xa0 
    /*0000edf4*/ MOV         R1, #0 
    /*0000edf8*/ MOV         R6, R3 
    /*0000edfc*/ MOVEQ       IP, #1 
    /*0000ee00*/ MOVNE       IP, #0 
    /*0000ee04*/ MOV         SL, R0 
    /*0000ee08*/ MOV         R7, R2 
    /*0000ee0c*/ LDR         R8, [R4, #12] 
    /*0000ee10*/ LDR         R9, [R4, #24] 
    /*0000ee14*/ LDR         R3, [R4, #16] 
    /*0000ee18*/ STR         R1, [SP, #32] 
    /*0000ee1c*/ BEQ         VoGetFrmVbBlk_xf08c
    /*0000ee20*/ MOV         R0, #2 
    /*0000ee24*/ STR         R3, [SP, #76]               @ 0x4c 
    /*0000ee28*/ STR         IP, [SP, #72]               @ 0x48 
    /*0000ee2c*/ STR         R9, [SP, #68]               @ 0x44 
    /*0000ee30*/ STR         R8, [SP, #48]               @ 0x30 
    /*0000ee34*/ STR         R2, [SP, #52]               @ 0x34 
    /*0000ee38*/ STR         R6, [SP, #56]               @ 0x38 
    /*0000ee3c*/ STR         IP, [SP, #80]               @ 0x50 
    /*0000ee40*/ STR         IP, [SP, #64]               @ 0x40 
    /*0000ee44*/ STR         IP, [SP, #60]               @ 0x3c 
    /*0000ee48*/ BL          0x000000000000EE48          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000ee4c*/ LDR         R3, [R0, #120]              @ 0x78 
    /*0000ee50*/ CMP         R3, #0 
    /*0000ee54*/ BEQ         VoGetFrmVbBlk_xf13c
    /*0000ee58*/ MOV         R0, #2 
    /*0000ee5c*/ BL          0x000000000000EE5C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000ee60*/ ADD         R1, SP, #84                 @ 0x54 
    /*0000ee64*/ LDR         R3, [R0, #120]              @ 0x78 
    /*0000ee68*/ ADD         R0, SP, #48                 @ 0x30 
    /*0000ee6c*/ BLX         R3 
    /*0000ee70*/ MOV         R0, #2 
    /*0000ee74*/ BL          0x000000000000EE74          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000ee78*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0000ee7c*/ CMP         R3, #0 
    /*0000ee80*/ BEQ         VoGetFrmVbBlk_xf06c
    VoGetFrmVbBlk_xee84:
    /*0000ee84*/ MOV         R0, #2 
    /*0000ee88*/ MOV         R3, #15 
    /*0000ee8c*/ STR         SL, [SP, #40]               @ 0x28 
    /*0000ee90*/ STR         R3, [SP, #36]               @ 0x24 
    /*0000ee94*/ STR         FP, [SP, #44]               @ 0x2c 
    /*0000ee98*/ BL          0x000000000000EE98          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000ee9c*/ ADD         R1, SP, #32 
    /*0000eea0*/ LDR         R3, [R0, #60]               @ 0x3c 
    /*0000eea4*/ ADD         R0, SP, #36                 @ 0x24 
    /*0000eea8*/ BLX         R3 
    /*0000eeac*/ SUBS        R3, R0, #0 
    /*0000eeb0*/ STR         R3, [SP, #28] 
    /*0000eeb4*/ BNE         VoGetFrmVbBlk_xf0c8
    /*0000eeb8*/ MOV         R0, #1 
    /*0000eebc*/ BL          0x000000000000EEBC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000eec0*/ LDR         R3, [SP, #32] 
    /*0000eec4*/ MOV         R2, #1 
    /*0000eec8*/ LDR         R1, [SP, #28] 
    /*0000eecc*/ LDR         R5, [R0, #12] 
    /*0000eed0*/ LDR         R0, [SP, #84]               @ 0x54 
    /*0000eed4*/ BLX         R5 
    /*0000eed8*/ CMN         R0, #1 
    /*0000eedc*/ MOV         R5, R0 
    /*0000eee0*/ BEQ         VoGetFrmVbBlk_xf0f4
    /*0000eee4*/ MOV         R0, #1 
    /*0000eee8*/ MOV         FP, #0 
    /*0000eeec*/ BL          0x000000000000EEEC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000eef0*/ LDR         R3, [R0, #40]               @ 0x28 
    /*0000eef4*/ MOV         R0, R5 
    /*0000eef8*/ BLX         R3 
    /*0000eefc*/ STR         R0, [R4, #328]              @ 0x148 
    /*0000ef00*/ MOV         R0, #1 
    /*0000ef04*/ BL          0x000000000000EF04          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000ef08*/ LDR         R3, [R0, #100]              @ 0x64 
    /*0000ef0c*/ MOV         R0, R5 
    /*0000ef10*/ BLX         R3 
    /*0000ef14*/ MOV         R2, #64                     @ 0x40 
    /*0000ef18*/ MOV         R1, R0 
    /*0000ef1c*/ ADD         R0, R4, #264                @ 0x108 
    /*0000ef20*/ BL          0x000000000000EF20          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000ef24*/ LDR         R2, [SP, #28] 
    /*0000ef28*/ MOV         R3, #4 
    /*0000ef2c*/ STR         R7, [R4] 
    /*0000ef30*/ STR         R6, [R4, #4] 
    /*0000ef34*/ MOV         R0, #1 
    /*0000ef38*/ STR         R2, [R4, #20] 
    /*0000ef3c*/ MOV         R7, #0 
    /*0000ef40*/ STR         R2, [R4, #16] 
    /*0000ef44*/ STR         R9, [R4, #24] 
    /*0000ef48*/ STR         R8, [R4, #12] 
    /*0000ef4c*/ STR         R3, [R4, #8] 
    /*0000ef50*/ BL          0x000000000000EF50          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000ef54*/ LDR         R3, [R0, #52]               @ 0x34 
    /*0000ef58*/ MOV         R0, R5 
    /*0000ef5c*/ BLX         R3 
    /*0000ef60*/ MOV         R3, R1 
    /*0000ef64*/ LDR         R1, [SP, #96]               @ 0x60 
    /*0000ef68*/ MOV         R2, R0 
    /*0000ef6c*/ STRD        R2, [R4, #72]               @ 0x48 
    /*0000ef70*/ ADDS        R2, R2, R1 
    /*0000ef74*/ MOV         R0, #1 
    /*0000ef78*/ ADC         R3, R3, #0 
    /*0000ef7c*/ STRD        R2, [R4, #80]               @ 0x50 
    /*0000ef80*/ BL          0x000000000000EF80          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000ef84*/ LDR         R3, [R0, #48]               @ 0x30 
    /*0000ef88*/ MOV         R0, R5 
    /*0000ef8c*/ BLX         R3 
    /*0000ef90*/ LDR         SL, [SP, #92]               @ 0x5c 
    /*0000ef94*/ LDRD        R8, [R4, #72]               @ 0x48 
    /*0000ef98*/ MOV         R3, #0 
    /*0000ef9c*/ LDR         IP, [SP, #96]               @ 0x60 
    /*0000efa0*/ ADDS        R8, R8, SL 
    /*0000efa4*/ LDR         R2, [SP, #104]              @ 0x68 
    /*0000efa8*/ ADC         R9, R9, FP 
    /*0000efac*/ LDR         R6, [SP, #116]              @ 0x74 
    /*0000efb0*/ LDR         LR, [SP, #88]               @ 0x58 
    /*0000efb4*/ LDR         R5, [SP, #100]              @ 0x64 
    /*0000efb8*/ STRD        R8, [R4, #120]              @ 0x78 
    /*0000efbc*/ STR         LR, [R4, #32] 
    /*0000efc0*/ STR         LR, [R4, #36]               @ 0x24 
    /*0000efc4*/ STR         LR, [R4, #40]               @ 0x28 
    /*0000efc8*/ STR         R5, [R4, #44]               @ 0x2c 
    /*0000efcc*/ STR         R5, [R4, #48]               @ 0x30 
    /*0000efd0*/ STR         R5, [R4, #52]               @ 0x34 
    /*0000efd4*/ ADDS        SL, SL, R0 
    /*0000efd8*/ STRD        R0, [R4, #96]               @ 0x60 
    /*0000efdc*/ ADC         FP, FP, R1 
    /*0000efe0*/ ADDS        R0, R0, IP 
    /*0000efe4*/ ADC         R1, R1, #0 
    /*0000efe8*/ STRD        R0, [R4, #104]              @ 0x68 
    /*0000efec*/ ADDS        R0, R8, R2 
    /*0000eff0*/ LDR         IP, [SP, #112]              @ 0x70 
    /*0000eff4*/ ADC         R1, R9, R3 
    /*0000eff8*/ ADDS        R2, R2, SL 
    /*0000effc*/ ADC         R3, R3, FP 
    /*0000f000*/ STRD        R0, [R4, #168]              @ 0xa8 
    /*0000f004*/ ADDS        R0, R0, R6 
    /*0000f008*/ STRD        R2, [R4, #192]              @ 0xc0 
    /*0000f00c*/ ADC         R1, R1, R7 
    /*0000f010*/ ADDS        R2, R2, R6 
    /*0000f014*/ LDR         R6, [SP, #108]              @ 0x6c 
    /*0000f018*/ ADC         R3, R3, R7 
    /*0000f01c*/ MOV         R7, #0 
    /*0000f020*/ STRD        SL, [R4, #144]              @ 0x90 
    /*0000f024*/ ADDS        R8, R8, R6 
    /*0000f028*/ STRD        R0, [R4, #176]              @ 0xb0 
    /*0000f02c*/ ADC         R9, R9, R7 
    /*0000f030*/ ADDS        R6, R6, SL 
    /*0000f034*/ ADC         R7, R7, FP 
    /*0000f038*/ STRD        R0, [R4, #184]              @ 0xb8 
    /*0000f03c*/ STRD        R2, [R4, #200]              @ 0xc8 
    /*0000f040*/ STRD        R2, [R4, #208]              @ 0xd0 
    /*0000f044*/ STRD        R8, [R4, #128]              @ 0x80 
    /*0000f048*/ STRD        R8, [R4, #136]              @ 0x88 
    /*0000f04c*/ STRD        R6, [R4, #152]              @ 0x98 
    /*0000f050*/ STRD        R6, [R4, #160]              @ 0xa0 
    /*0000f054*/ STR         IP, [R4, #56]               @ 0x38 
    /*0000f058*/ STR         IP, [R4, #60]               @ 0x3c 
    /*0000f05c*/ STR         IP, [R4, #64]               @ 0x40 
    VoGetFrmVbBlk_xf060:
    /*0000f060*/ LDR         R0, [SP, #28] 
    /*0000f064*/ ADD         SP, SP, #124                @ 0x7c 
    /*0000f068*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VoGetFrmVbBlk_xf06c:
    /*0000f06c*/ MOVW        R3, #0                      @ .LC128 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4470] 
    /*0000f070*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*0000f074*/ MOVT        R3, #0                      @ .LC128 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4470] 
    /*0000f078*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    /*0000f07c*/ MOV         R2, #11456                  @ 0x2cc0 
    /*0000f080*/ LDR         R1, [PC, #224]              @ 0x000000000000f168 
    /*0000f084*/ BL          0x000000000000F084          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0000f088*/ B           VoGetFrmVbBlk_xee84
    VoGetFrmVbBlk_xf08c:
    /*0000f08c*/ MOVW        R3, #11432                  @ 0x2ca8 
    /*0000f090*/ STR         R2, [SP, #12] 
    /*0000f094*/ STR         R0, [SP, #4] 
    /*0000f098*/ MOVW        R2, #0                      @ .LC165 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4f58] 
    /*0000f09c*/ STR         R3, [SP] 
    /*0000f0a0*/ MOVT        R2, #0                      @ .LC165 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4f58] 
    /*0000f0a4*/ STR         R6, [SP, #16] 
    /*0000f0a8*/ MOV         R1, #15 
    /*0000f0ac*/ STR         FP, [SP, #8] 
    /*0000f0b0*/ MOV         R0, #3 
    /*0000f0b4*/ LDR         R3, [PC, #172]              @ 0x000000000000f168 
    /*0000f0b8*/ MVN         IP, #0 
    /*0000f0bc*/ STR         IP, [SP, #28] 
    /*0000f0c0*/ BL          0x000000000000F0C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f0c4*/ B           VoGetFrmVbBlk_xf060
    VoGetFrmVbBlk_xf0c8:
    /*0000f0c8*/ MOVW        R3, #11464                  @ 0x2cc8 
    /*0000f0cc*/ MOV         R1, #15 
    /*0000f0d0*/ STR         R3, [SP] 
    /*0000f0d4*/ MOVW        R2, #0                      @ .LC167 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4fe0] 
    /*0000f0d8*/ LDR         R3, [PC, #136]              @ 0x000000000000f168 
    /*0000f0dc*/ MOVT        R2, #0                      @ .LC167 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4fe0] 
    /*0000f0e0*/ MOV         R0, #3 
    /*0000f0e4*/ MVN         IP, #0 
    /*0000f0e8*/ STR         IP, [SP, #28] 
    /*0000f0ec*/ BL          0x000000000000F0EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f0f0*/ B           VoGetFrmVbBlk_xf060
    VoGetFrmVbBlk_xf0f4:
    /*0000f0f4*/ LDR         R0, [SP, #84]               @ 0x54 
    /*0000f0f8*/ MOVW        IP, #32780                  @ 0x800c 
    /*0000f0fc*/ MOVW        R3, #11471                  @ 0x2ccf 
    /*0000f100*/ MOV         R4, IP 
    /*0000f104*/ STR         R3, [SP] 
    /*0000f108*/ MOV         R1, #15 
    /*0000f10c*/ STR         R0, [SP, #12] 
    /*0000f110*/ MOVW        R2, #0                      @ .LC168 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5010] 
    /*0000f114*/ STR         FP, [SP, #8] 
    /*0000f118*/ MOVT        R2, #0                      @ .LC168 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5010] 
    /*0000f11c*/ STR         SL, [SP, #4] 
    /*0000f120*/ MOV         R0, #3 
    /*0000f124*/ LDR         R3, [PC, #60]               @ 0x000000000000f168 
    /*0000f128*/ BL          0x000000000000F128          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f12c*/ MOV         IP, R4 
    /*0000f130*/ MOVT        IP, #40975                  @ 0xa00f 
    /*0000f134*/ STR         IP, [SP, #28] 
    /*0000f138*/ B           VoGetFrmVbBlk_xf060
    VoGetFrmVbBlk_xf13c:
    /*0000f13c*/ MOVW        R3, #11448                  @ 0x2cb8 
    /*0000f140*/ MOVW        R2, #0                      @ .LC166 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x4fac] 
    /*0000f144*/ STR         R3, [SP] 
    /*0000f148*/ MOVT        R2, #0                      @ .LC166 [R_ARM_MOVT_ABS: .rodata.str1.4+0x4fac] 
    /*0000f14c*/ LDR         R3, [PC, #20]               @ 0x000000000000f168 
    /*0000f150*/ MOV         R1, #15 
    /*0000f154*/ MOV         R0, #3 
    /*0000f158*/ MVN         IP, #0 
    /*0000f15c*/ STR         IP, [SP, #28] 
    /*0000f160*/ BL          0x000000000000F160          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f164*/ B           VoGetFrmVbBlk_xf060
    /*0000f168*/ ANDEQ       R0, R0, IP, ROR R9 
FUNC_END VoGetFrmVbBlk


FUNC_BEGIN VoCopyVBPrivateData
    /*0000f16c*/ LDRD        R2, [R1, #248]              @ 0xf8 
    /*0000f170*/ STRD        R2, [R0, #248]              @ 0xf8 
    /*0000f174*/ BX          LR 
FUNC_END VoCopyVBPrivateData


FUNC_BEGIN VouChnDoRotationByVgs
    /*0000f178*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000f17c*/ SUB         SP, SP, #124                @ 0x7c 
    /*0000f180*/ MOV         R7, R0 
    /*0000f184*/ MOV         R8, R1 
    /*0000f188*/ MOV         R2, #64                     @ 0x40 
    /*0000f18c*/ MOV         R1, #0 
    /*0000f190*/ ADD         R0, SP, #56                 @ 0x38 
    /*0000f194*/ LDR         R9, [SP, #160]              @ 0xa0 
    /*0000f198*/ BL          0x000000000000F198          @ memset [R_ARM_CALL: +0x0] 
    /*0000f19c*/ ADD         R2, R8, R7, LSL #2 
    /*0000f1a0*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000f1a4*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000f1a8*/ MOV         R0, #45                     @ 0x2d 
    /*0000f1ac*/ MOV         R1, #0 
    /*0000f1b0*/ LDR         SL, [R3, R2, LSL #2] 
    /*0000f1b4*/ STR         R1, [SP, #52]               @ 0x34 
    /*0000f1b8*/ BL          0x000000000000F1B8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000f1bc*/ SUBS        R5, R0, #0 
    /*0000f1c0*/ BEQ         VouChnDoRotationByVgs_xf560
    /*0000f1c4*/ LDR         R3, [R5] 
    /*0000f1c8*/ CMP         R3, #0 
    /*0000f1cc*/ BEQ         VouChnDoRotationByVgs_xf560
    /*0000f1d0*/ LDR         R3, [R5, #44]               @ 0x2c 
    /*0000f1d4*/ CMP         R3, #0 
    /*0000f1d8*/ BEQ         VouChnDoRotationByVgs_xf560
    /*0000f1dc*/ LDR         R3, [R5, #12] 
    /*0000f1e0*/ CMP         R3, #0 
    /*0000f1e4*/ BEQ         VouChnDoRotationByVgs_xf560
    /*0000f1e8*/ LDR         R3, [R5, #64]               @ 0x40 
    /*0000f1ec*/ BLX         R3 
    /*0000f1f0*/ SUBS        R4, R0, #0 
    /*0000f1f4*/ BEQ         VouChnDoRotationByVgs_xf588
    /*0000f1f8*/ ADD         R6, R4, #336                @ 0x150 
    /*0000f1fc*/ LDR         R1, [R9, #12] 
    /*0000f200*/ ADD         SL, SL, #8192               @ 0x2000 
    /*0000f204*/ MOV         R2, #336                    @ 0x150 
    /*0000f208*/ STR         SL, [SP, #44]               @ 0x2c 
    /*0000f20c*/ BL          0x000000000000F20C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000f210*/ LDR         R1, [R9, #12] 
    /*0000f214*/ MOV         R2, #336                    @ 0x150 
    /*0000f218*/ MOV         R0, R6 
    /*0000f21c*/ BL          0x000000000000F21C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000f220*/ LDR         SL, [SL, #1352]             @ 0x548 
    /*0000f224*/ LDR         R9, [R4] 
    /*0000f228*/ MOV         R1, R8 
    /*0000f22c*/ LDR         R3, [R4, #4] 
    /*0000f230*/ BIC         R2, SL, #2 
    /*0000f234*/ CMP         R2, #1 
    /*0000f238*/ STR         R6, [SP] 
    /*0000f23c*/ MOV         R0, R7 
    /*0000f240*/ MOVEQ       FP, R3 
    /*0000f244*/ MOVNE       FP, R9 
    /*0000f248*/ MOVNE       R9, R3 
    /*0000f24c*/ MOV         R2, FP 
    /*0000f250*/ MOV         R3, R9 
    /*0000f254*/ BL          0x000000000000F254          @ VoGetFrmVbBlk [R_ARM_CALL: .text+0xeddc] 
    /*0000f258*/ CMP         R0, #0 
    /*0000f25c*/ BNE         VouChnDoRotationByVgs_xf51c
    /*0000f260*/ MOV         R3, #45                     @ 0x2d 
    /*0000f264*/ STR         R3, [R4, #668]              @ 0x29c 
    /*0000f268*/ LDRD        R2, [R6, #120]              @ 0x78 
    /*0000f26c*/ MOV         R0, #1 
    /*0000f270*/ LDR         FP, [R4, #328]              @ 0x148 
    /*0000f274*/ LDR         R9, [R4, #664]              @ 0x298 
    /*0000f278*/ STRD        R2, [SP, #32] 
    /*0000f27c*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*0000f280*/ STRD        R2, [SP, #24] 
    /*0000f284*/ BL          0x000000000000F284          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000f288*/ MOV         R1, R4 
    /*0000f28c*/ LDR         R3, [R0, #108]              @ 0x6c 
    /*0000f290*/ MOV         R0, R6 
    /*0000f294*/ BLX         R3 
    /*0000f298*/ LDRD        R2, [R4, #248]              @ 0xf8 
    /*0000f29c*/ MOV         R0, #1 
    /*0000f2a0*/ STRD        R2, [R6, #248]              @ 0xf8 
    /*0000f2a4*/ BL          0x000000000000F2A4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000f2a8*/ LDR         IP, [R4, #328]              @ 0x148 
    /*0000f2ac*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*0000f2b0*/ MOV         R1, #1 
    /*0000f2b4*/ STR         R1, [SP] 
    /*0000f2b8*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*0000f2bc*/ MOV         R0, IP 
    /*0000f2c0*/ BLX         R1 
    /*0000f2c4*/ CMP         R0, #0 
    /*0000f2c8*/ BNE         VouChnDoRotationByVgs_xf400
    VouChnDoRotationByVgs_xf2cc:
    /*0000f2cc*/ MOV         R3, #0 
    /*0000f2d0*/ ADD         R2, SP, #56                 @ 0x38 
    /*0000f2d4*/ STR         R3, [SP, #112]              @ 0x70 
    /*0000f2d8*/ MOV         R1, R3 
    /*0000f2dc*/ STR         R2, [SP, #4] 
    /*0000f2e0*/ MOV         R6, #1 
    /*0000f2e4*/ STR         R8, [SP] 
    /*0000f2e8*/ MOV         R3, R7 
    /*0000f2ec*/ STR         R6, [SP, #108]              @ 0x6c 
    /*0000f2f0*/ MOV         R2, #15 
    /*0000f2f4*/ ADD         R0, SP, #52                 @ 0x34 
    /*0000f2f8*/ LDR         IP, [R5] 
    /*0000f2fc*/ BLX         IP 
    /*0000f300*/ CMP         R0, #0 
    /*0000f304*/ BEQ         VouChnDoRotationByVgs_xf384
    /*0000f308*/ MOVW        R3, #11702                  @ 0x2db6 
    /*0000f30c*/ MOVW        R2, #0                      @ .LC173 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5190] 
    /*0000f310*/ STR         R3, [SP] 
    /*0000f314*/ MOVT        R2, #0                      @ .LC173 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5190] 
    /*0000f318*/ LDR         R3, [PC, #644]              @ 0x000000000000f5a4 
    /*0000f31c*/ MOV         R1, #15 
    /*0000f320*/ MOV         R0, #3 
    /*0000f324*/ BL          0x000000000000F324          @ HI_LOG [R_ARM_CALL: +0x0] 
    VouChnDoRotationByVgs_xf328:
    /*0000f328*/ MOV         R0, #1 
    /*0000f32c*/ BL          0x000000000000F32C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000f330*/ MOV         R1, #1 
    /*0000f334*/ LDRD        R2, [SP, #24] 
    /*0000f338*/ STR         R1, [SP] 
    /*0000f33c*/ LDR         R1, [R0, #64]               @ 0x40 
    /*0000f340*/ MOV         R0, FP 
    /*0000f344*/ BLX         R1 
    /*0000f348*/ CMP         R0, #0 
    /*0000f34c*/ BNE         VouChnDoRotationByVgs_xf488
    VouChnDoRotationByVgs_xf350:
    /*0000f350*/ MOV         R0, #1 
    /*0000f354*/ BL          0x000000000000F354          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000f358*/ MOV         R1, #1 
    /*0000f35c*/ LDRD        R2, [SP, #32] 
    /*0000f360*/ STR         R1, [SP] 
    /*0000f364*/ LDR         R1, [R0, #64]               @ 0x40 
    /*0000f368*/ MOV         R0, R9 
    /*0000f36c*/ BLX         R1 
    /*0000f370*/ CMP         R0, #0 
    /*0000f374*/ BNE         VouChnDoRotationByVgs_xf45c
    VouChnDoRotationByVgs_xf378:
    /*0000f378*/ MVN         R0, #0 
    VouChnDoRotationByVgs_xf37c:
    /*0000f37c*/ ADD         SP, SP, #124                @ 0x7c 
    /*0000f380*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnDoRotationByVgs_xf384:
    /*0000f384*/ MOV         R2, SL 
    /*0000f388*/ STR         R7, [R4, #728]              @ 0x2d8 
    /*0000f38c*/ STR         R8, [R4, #732]              @ 0x2dc 
    /*0000f390*/ MOVW        R3, #0                      @ VoRotationTaskCallback [R_ARM_MOVW_ABS_NC: .text+0xf910] 
    /*0000f394*/ MOV         SL, #15 
    /*0000f398*/ MOVT        R3, #0                      @ VoRotationTaskCallback [R_ARM_MOVT_ABS: .text+0xf910] 
    /*0000f39c*/ STR         SL, [R4, #724]              @ 0x2d4 
    /*0000f3a0*/ MOV         R1, R4 
    /*0000f3a4*/ STR         R3, [R4, #720]              @ 0x2d0 
    /*0000f3a8*/ LDR         R0, [SP, #52]               @ 0x34 
    /*0000f3ac*/ LDR         R3, [R5, #44]               @ 0x2c 
    /*0000f3b0*/ BLX         R3 
    /*0000f3b4*/ SUBS        R2, R0, #0 
    /*0000f3b8*/ BEQ         VouChnDoRotationByVgs_xf42c
    /*0000f3bc*/ LDR         R3, [R5, #4] 
    /*0000f3c0*/ LDR         R0, [SP, #52]               @ 0x34 
    /*0000f3c4*/ BLX         R3 
    /*0000f3c8*/ CMP         R0, #0 
    /*0000f3cc*/ BEQ         VouChnDoRotationByVgs_xf328
    /*0000f3d0*/ STR         R0, [SP, #12] 
    /*0000f3d4*/ MOVW        R3, #11719                  @ 0x2dc7 
    /*0000f3d8*/ MOV         R1, SL 
    /*0000f3dc*/ STR         R3, [SP] 
    /*0000f3e0*/ STR         R8, [SP, #8] 
    /*0000f3e4*/ MOVW        R2, #0                      @ .LC174 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x51c0] 
    /*0000f3e8*/ STR         R7, [SP, #4] 
    /*0000f3ec*/ MOVT        R2, #0                      @ .LC174 [R_ARM_MOVT_ABS: .rodata.str1.4+0x51c0] 
    /*0000f3f0*/ LDR         R3, [PC, #428]              @ 0x000000000000f5a4 
    /*0000f3f4*/ MOV         R0, #3 
    /*0000f3f8*/ BL          0x000000000000F3F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f3fc*/ B           VouChnDoRotationByVgs_xf328
    VouChnDoRotationByVgs_xf400:
    /*0000f400*/ MOVW        R3, #11691                  @ 0x2dab 
    /*0000f404*/ STR         R8, [SP, #8] 
    /*0000f408*/ STR         R3, [SP] 
    /*0000f40c*/ MOVW        R2, #0                      @ .LC172 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5158] 
    /*0000f410*/ STR         R7, [SP, #4] 
    /*0000f414*/ MOVT        R2, #0                      @ .LC172 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5158] 
    /*0000f418*/ LDR         R3, [PC, #388]              @ 0x000000000000f5a4 
    /*0000f41c*/ MOV         R1, #15 
    /*0000f420*/ MOV         R0, #3 
    /*0000f424*/ BL          0x000000000000F424          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f428*/ B           VouChnDoRotationByVgs_xf2cc
    VouChnDoRotationByVgs_xf42c:
    /*0000f42c*/ MOV         R1, R6 
    /*0000f430*/ LDR         R3, [R5, #12] 
    /*0000f434*/ LDR         R0, [SP, #52]               @ 0x34 
    /*0000f438*/ BLX         R3 
    /*0000f43c*/ CMP         R0, #0 
    /*0000f440*/ BNE         VouChnDoRotationByVgs_xf4b4
    /*0000f444*/ LDR         R2, [SP, #44]               @ 0x2c 
    /*0000f448*/ LDR         R3, [R2, #1380]             @ 0x564 
    /*0000f44c*/ ADD         R3, R3, #1 
    /*0000f450*/ STR         R3, [R2, #1380]             @ 0x564 
    /*0000f454*/ ADD         SP, SP, #124                @ 0x7c 
    /*0000f458*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnDoRotationByVgs_xf45c:
    /*0000f45c*/ MOVW        R2, #0                      @ .LC177 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5284] 
    /*0000f460*/ MOVT        R2, #0                      @ .LC177 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5284] 
    /*0000f464*/ MOVW        R3, #11760                  @ 0x2df0 
    /*0000f468*/ STR         R8, [SP, #8] 
    /*0000f46c*/ STR         R7, [SP, #4] 
    /*0000f470*/ STR         R3, [SP] 
    VouChnDoRotationByVgs_xf474:
    /*0000f474*/ LDR         R3, [PC, #296]              @ 0x000000000000f5a4 
    /*0000f478*/ MOV         R1, #15 
    /*0000f47c*/ MOV         R0, #3 
    /*0000f480*/ BL          0x000000000000F480          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f484*/ B           VouChnDoRotationByVgs_xf378
    VouChnDoRotationByVgs_xf488:
    /*0000f488*/ MOVW        R3, #11753                  @ 0x2de9 
    /*0000f48c*/ STR         R8, [SP, #8] 
    /*0000f490*/ STR         R3, [SP] 
    /*0000f494*/ MOVW        R2, #0                      @ .LC177 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5284] 
    /*0000f498*/ STR         R7, [SP, #4] 
    /*0000f49c*/ MOVT        R2, #0                      @ .LC177 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5284] 
    /*0000f4a0*/ LDR         R3, [PC, #252]              @ 0x000000000000f5a4 
    /*0000f4a4*/ MOV         R1, #15 
    /*0000f4a8*/ MOV         R0, #3 
    /*0000f4ac*/ BL          0x000000000000F4AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f4b0*/ B           VouChnDoRotationByVgs_xf350
    VouChnDoRotationByVgs_xf4b4:
    /*0000f4b4*/ MOVW        R3, #11730                  @ 0x2dd2 
    /*0000f4b8*/ MOV         R1, SL 
    /*0000f4bc*/ STR         R3, [SP] 
    /*0000f4c0*/ MOVW        R2, #0                      @ .LC175 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5208] 
    /*0000f4c4*/ LDR         R3, [PC, #216]              @ 0x000000000000f5a4 
    /*0000f4c8*/ MOVT        R2, #0                      @ .LC175 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5208] 
    /*0000f4cc*/ STR         R8, [SP, #8] 
    /*0000f4d0*/ MOV         R0, #3 
    /*0000f4d4*/ STR         R7, [SP, #4] 
    /*0000f4d8*/ BL          0x000000000000F4D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f4dc*/ LDR         R3, [R5, #4] 
    /*0000f4e0*/ LDR         R0, [SP, #52]               @ 0x34 
    /*0000f4e4*/ BLX         R3 
    /*0000f4e8*/ CMP         R0, #0 
    /*0000f4ec*/ BEQ         VouChnDoRotationByVgs_xf378
    /*0000f4f0*/ MOVW        R3, #11736                  @ 0x2dd8 
    /*0000f4f4*/ STR         R8, [SP, #8] 
    /*0000f4f8*/ STR         R3, [SP] 
    /*0000f4fc*/ MOV         R1, SL 
    /*0000f500*/ STR         R7, [SP, #4] 
    /*0000f504*/ MOVW        R2, #0                      @ .LC176 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5244] 
    /*0000f508*/ LDR         R3, [PC, #148]              @ 0x000000000000f5a4 
    /*0000f50c*/ MOVT        R2, #0                      @ .LC176 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5244] 
    /*0000f510*/ MOV         R0, #3 
    /*0000f514*/ BL          0x000000000000F514          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f518*/ B           VouChnDoRotationByVgs_xf328
    VouChnDoRotationByVgs_xf51c:
    /*0000f51c*/ LDR         R3, [R5, #68]               @ 0x44 
    /*0000f520*/ MOV         R0, R4 
    /*0000f524*/ BLX         R3 
    /*0000f528*/ MOVW        R3, #11669                  @ 0x2d95 
    /*0000f52c*/ STR         R9, [SP, #16] 
    /*0000f530*/ MOVW        R2, #0                      @ .LC171 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5104] 
    /*0000f534*/ STR         R3, [SP] 
    /*0000f538*/ MOVT        R2, #0                      @ .LC171 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5104] 
    /*0000f53c*/ STR         FP, [SP, #12] 
    /*0000f540*/ MOV         R1, #15 
    /*0000f544*/ STR         R8, [SP, #8] 
    /*0000f548*/ MOV         R0, #3 
    /*0000f54c*/ STR         R7, [SP, #4] 
    /*0000f550*/ LDR         R3, [PC, #76]               @ 0x000000000000f5a4 
    /*0000f554*/ BL          0x000000000000F554          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f558*/ MVN         R0, #0 
    /*0000f55c*/ B           VouChnDoRotationByVgs_xf37c
    VouChnDoRotationByVgs_xf560:
    /*0000f560*/ MOVW        R3, #11633                  @ 0x2d71 
    /*0000f564*/ MOVW        R2, #0                      @ .LC169 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5058] 
    /*0000f568*/ STR         R3, [SP] 
    /*0000f56c*/ MOVT        R2, #0                      @ .LC169 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5058] 
    /*0000f570*/ LDR         R3, [PC, #44]               @ 0x000000000000f5a4 
    /*0000f574*/ MOV         R1, #15 
    /*0000f578*/ MOV         R0, #3 
    /*0000f57c*/ BL          0x000000000000F57C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f580*/ MVN         R0, #0 
    /*0000f584*/ B           VouChnDoRotationByVgs_xf37c
    VouChnDoRotationByVgs_xf588:
    /*0000f588*/ MOVW        R3, #11641                  @ 0x2d79 
    /*0000f58c*/ MOVW        R2, #0                      @ .LC170 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x50bc] 
    /*0000f590*/ STR         R8, [SP, #8] 
    /*0000f594*/ MOVT        R2, #0                      @ .LC170 [R_ARM_MOVT_ABS: .rodata.str1.4+0x50bc] 
    /*0000f598*/ STR         R7, [SP, #4] 
    /*0000f59c*/ STR         R3, [SP] 
    /*0000f5a0*/ B           VouChnDoRotationByVgs_xf474
    /*0000f5a4*/ ANDEQ       R0, R0, IP, LSL #19 
FUNC_END VouChnDoRotationByVgs


FUNC_BEGIN VouChnSdViSendWithRot
    /*0000f5a8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0000f5ac*/ MOV         R5, R0 
    /*0000f5b0*/ LDR         R0, [R2] 
    /*0000f5b4*/ MOV         R4, R2 
    /*0000f5b8*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000f5bc*/ ADD         R2, R1, R5, LSL #2 
    /*0000f5c0*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000f5c4*/ CMP         R0, #0 
    /*0000f5c8*/ SUB         SP, SP, #20 
    /*0000f5cc*/ MOV         R6, R1 
    /*0000f5d0*/ LDR         R7, [R3, R2, LSL #2] 
    /*0000f5d4*/ BEQ         VouChnSdViSendWithRot_xf6cc
    /*0000f5d8*/ ADD         R3, R7, #8192               @ 0x2000 
    /*0000f5dc*/ LDR         R2, [R3, #1324]             @ 0x52c 
    /*0000f5e0*/ CMP         R2, #1 
    /*0000f5e4*/ BEQ         VouChnSdViSendWithRot_xf6e8
    /*0000f5e8*/ LDR         R3, [R3, #1380]             @ 0x564 
    /*0000f5ec*/ CMP         R3, #1 
    /*0000f5f0*/ BHI         VouChnSdViSendWithRot_xf654
    /*0000f5f4*/ LDR         R0, [R4, #12] 
    /*0000f5f8*/ BL          0x00000000000053A8 
    /*0000f5fc*/ SUBS        R3, R0, #0 
    /*0000f600*/ BNE         VouChnSdViSendWithRot_xf68c
    /*0000f604*/ STR         R4, [SP] 
    /*0000f608*/ MOV         R2, R3 
    /*0000f60c*/ MOV         R1, R6 
    /*0000f610*/ MOV         R0, R5 
    /*0000f614*/ BL          0x000000000000F614          @ VouChnDoRotationByVgs [R_ARM_CALL: .text+0xf178] 
    /*0000f618*/ SUBS        R4, R0, #0 
    /*0000f61c*/ BEQ         VouChnSdViSendWithRot_xf648
    /*0000f620*/ MOVW        R3, #11804                  @ 0x2e1c 
    /*0000f624*/ MOVW        R2, #0                      @ .LC182 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x53dc] 
    /*0000f628*/ STR         R3, [SP] 
    /*0000f62c*/ MOVT        R2, #0                      @ .LC182 [R_ARM_MOVT_ABS: .rodata.str1.4+0x53dc] 
    /*0000f630*/ STR         R6, [SP, #8] 
    /*0000f634*/ MOV         R1, #15 
    /*0000f638*/ STR         R5, [SP, #4] 
    /*0000f63c*/ MOV         R0, #3 
    /*0000f640*/ LDR         R3, [PC, #208]              @ 0x000000000000f718 
    /*0000f644*/ BL          0x000000000000F644          @ HI_LOG [R_ARM_CALL: +0x0] 
    VouChnSdViSendWithRot_xf648:
    /*0000f648*/ MOV         R0, R4 
    /*0000f64c*/ ADD         SP, SP, #20 
    /*0000f650*/ POP         {R4, R5, R6, R7, PC} 
    VouChnSdViSendWithRot_xf654:
    /*0000f654*/ MOVW        R2, #0                      @ .LC180 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5350] 
    /*0000f658*/ MOVT        R2, #0                      @ .LC180 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5350] 
    /*0000f65c*/ MOVW        R3, #11788                  @ 0x2e0c 
    /*0000f660*/ STR         R1, [SP, #8] 
    /*0000f664*/ STR         R5, [SP, #4] 
    /*0000f668*/ STR         R3, [SP] 
    VouChnSdViSendWithRot_xf66c:
    /*0000f66c*/ LDR         R3, [PC, #164]              @ 0x000000000000f718 
    /*0000f670*/ MOV         R1, #15 
    /*0000f674*/ MOV         R0, #3 
    /*0000f678*/ MVN         R4, #0 
    /*0000f67c*/ BL          0x000000000000F67C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f680*/ MOV         R0, R4 
    /*0000f684*/ ADD         SP, SP, #20 
    /*0000f688*/ POP         {R4, R5, R6, R7, PC} 
    VouChnSdViSendWithRot_xf68c:
    /*0000f68c*/ MOVW        R3, #11795                  @ 0x2e13 
    /*0000f690*/ STR         R6, [SP, #8] 
    /*0000f694*/ STR         R3, [SP] 
    /*0000f698*/ MOVW        R2, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5398] 
    /*0000f69c*/ LDR         R3, [PC, #116]              @ 0x000000000000f718 
    /*0000f6a0*/ MOVT        R2, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5398] 
    /*0000f6a4*/ STR         R5, [SP, #4] 
    /*0000f6a8*/ MOV         R1, #15 
    /*0000f6ac*/ MOV         R0, #3 
    /*0000f6b0*/ MOVW        R4, #32847                  @ 0x804f 
    /*0000f6b4*/ BL          0x000000000000F6B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f6b8*/ LDR         R3, [R7, #180]              @ 0xb4 
    /*0000f6bc*/ MOVT        R4, #40975                  @ 0xa00f 
    /*0000f6c0*/ ADD         R3, R3, #1 
    /*0000f6c4*/ STR         R3, [R7, #180]              @ 0xb4 
    /*0000f6c8*/ B           VouChnSdViSendWithRot_xf648
    VouChnSdViSendWithRot_xf6cc:
    /*0000f6cc*/ MOVW        R3, #11775                  @ 0x2dff 
    /*0000f6d0*/ MOVW        R2, #0                      @ .LC178 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x52bc] 
    /*0000f6d4*/ STR         R1, [SP, #8] 
    /*0000f6d8*/ MOVT        R2, #0                      @ .LC178 [R_ARM_MOVT_ABS: .rodata.str1.4+0x52bc] 
    /*0000f6dc*/ STR         R5, [SP, #4] 
    /*0000f6e0*/ STR         R3, [SP] 
    /*0000f6e4*/ B           VouChnSdViSendWithRot_xf66c
    VouChnSdViSendWithRot_xf6e8:
    /*0000f6e8*/ STR         R1, [SP, #8] 
    /*0000f6ec*/ MOVW        R3, #11781                  @ 0x2e05 
    /*0000f6f0*/ STR         R5, [SP, #4] 
    /*0000f6f4*/ MOVW        R2, #0                      @ .LC179 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x52fc] 
    /*0000f6f8*/ STR         R3, [SP] 
    /*0000f6fc*/ MOVT        R2, #0                      @ .LC179 [R_ARM_MOVT_ABS: .rodata.str1.4+0x52fc] 
    /*0000f700*/ LDR         R3, [PC, #16]               @ 0x000000000000f718 
    /*0000f704*/ MOV         R1, #15 
    /*0000f708*/ MOV         R0, #4 
    /*0000f70c*/ MVN         R4, #0 
    /*0000f710*/ BL          0x000000000000F710          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f714*/ B           VouChnSdViSendWithRot_xf648
    /*0000f718*/ ANDEQ       R0, R0, R4, LSR #19 
FUNC_END VouChnSdViSendWithRot


FUNC_BEGIN VouChnSdViSend
    /*0000f71c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0000f720*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000f724*/ MOV         R7, R1 
    /*0000f728*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000f72c*/ ADD         R1, R1, R0, LSL #2 
    /*0000f730*/ SUB         SP, SP, #32 
    /*0000f734*/ MOV         R6, R0 
    /*0000f738*/ MOV         R5, R2 
    /*0000f73c*/ LDR         R4, [R3, R1, LSL #2] 
    /*0000f740*/ ADD         R8, R4, #8192               @ 0x2000 
    /*0000f744*/ LDR         R3, [R8, #1368]             @ 0x558 
    /*0000f748*/ CMP         R3, #0 
    /*0000f74c*/ SUBNE       R3, R3, #1 
    /*0000f750*/ STRNE       R3, [R8, #1368]             @ 0x558 
    /*0000f754*/ LDR         R3, [R2] 
    /*0000f758*/ CMP         R3, #0 
    /*0000f75c*/ BEQ         VouChnSdViSend_xf89c
    /*0000f760*/ ADD         R2, SP, #28 
    /*0000f764*/ MOV         R1, R7 
    /*0000f768*/ BL          0x000000000000F768          @ VouChnCalTotalLeaveDisplay [R_ARM_CALL: .text+0xdbbc] 
    /*0000f76c*/ LDR         R3, [R4, #1152]             @ 0x480 
    /*0000f770*/ LDR         R2, [SP, #28] 
    /*0000f774*/ CMP         R3, R2 
    /*0000f778*/ BLS         VouChnSdViSend_xf814
    /*0000f77c*/ LDR         R0, [R5, #12] 
    /*0000f780*/ BL          0x00000000000053A8 
    /*0000f784*/ SUBS        R8, R0, #0 
    /*0000f788*/ BNE         VouChnSdViSend_xf8cc
    /*0000f78c*/ ADD         R9, R4, #8960               @ 0x2300 
    /*0000f790*/ ADD         R9, R9, #56                 @ 0x38 
    /*0000f794*/ MOV         R0, R9 
    /*0000f798*/ BL          0x000000000000F798          @ VouBufGetFree [R_ARM_CALL: .text+0x3e84] 
    /*0000f79c*/ SUBS        SL, R0, #0 
    /*0000f7a0*/ BEQ         VouChnSdViSend_xf864
    /*0000f7a4*/ LDR         R6, [SL] 
    /*0000f7a8*/ MOV         R2, #336                    @ 0x150 
    /*0000f7ac*/ LDR         R1, [R5, #12] 
    /*0000f7b0*/ MOV         R0, R6 
    /*0000f7b4*/ BL          0x000000000000F7B4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000f7b8*/ MOV         R3, #1 
    /*0000f7bc*/ MOV         R1, SL 
    /*0000f7c0*/ STR         R3, [R6, #676]              @ 0x2a4 
    /*0000f7c4*/ MOV         R0, R9 
    /*0000f7c8*/ STR         R8, [R6, #708]              @ 0x2c4 
    /*0000f7cc*/ STR         R8, [R6, #672]              @ 0x2a0 
    /*0000f7d0*/ BL          0x000000000000F7D0          @ VouBufPutBusy [R_ARM_CALL: .text+0x3e58] 
    /*0000f7d4*/ MOV         R0, R6 
    /*0000f7d8*/ BL          0x000000000000F7D8          @ VouBufAddBlkVb [R_ARM_CALL: .text+0x4220] 
    /*0000f7dc*/ LDR         R3, [R4, #176]              @ 0xb0 
    /*0000f7e0*/ ADD         R1, R4, #304                @ 0x130 
    /*0000f7e4*/ ADD         R3, R3, #1 
    /*0000f7e8*/ STR         R3, [R4, #176]              @ 0xb0 
    /*0000f7ec*/ LDR         R3, [R5, #12] 
    /*0000f7f0*/ LDRD        R2, [R3, #120]              @ 0x78 
    /*0000f7f4*/ STR         R6, [R4, #344]              @ 0x158 
    /*0000f7f8*/ STRD        R2, [R4, #160]              @ 0xa0 
    /*0000f7fc*/ LDR         R3, [R5, #12] 
    /*0000f800*/ LDRD        R2, [R3, #240]              @ 0xf0 
    /*0000f804*/ STRD        R2, [R1] 
    VouChnSdViSend_xf808:
    /*0000f808*/ MOV         R0, R8 
    /*0000f80c*/ ADD         SP, SP, #32 
    /*0000f810*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouChnSdViSend_xf814:
    /*0000f814*/ STR         R3, [SP, #16] 
    /*0000f818*/ MOV         R1, #15 
    /*0000f81c*/ LDR         R0, [R8, #1020]             @ 0x3fc 
    /*0000f820*/ MOVW        R3, #11853                  @ 0x2e4d 
    /*0000f824*/ STR         R7, [SP, #8] 
    /*0000f828*/ MOVW        R2, #0                      @ .LC183 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x541c] 
    /*0000f82c*/ STR         R3, [SP] 
    /*0000f830*/ MOVT        R2, #0                      @ .LC183 [R_ARM_MOVT_ABS: .rodata.str1.4+0x541c] 
    /*0000f834*/ STR         R0, [SP, #12] 
    /*0000f838*/ MOV         R0, #4 
    /*0000f83c*/ STR         R6, [SP, #4] 
    /*0000f840*/ MOV         R8, #0 
    /*0000f844*/ LDR         R3, [PC, #192]              @ 0x000000000000f90c 
    /*0000f848*/ BL          0x000000000000F848          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f84c*/ LDR         R3, [R4, #180]              @ 0xb4 
    /*0000f850*/ MOV         R0, R8 
    /*0000f854*/ ADD         R3, R3, #1 
    /*0000f858*/ STR         R3, [R4, #180]              @ 0xb4 
    /*0000f85c*/ ADD         SP, SP, #32 
    /*0000f860*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouChnSdViSend_xf864:
    /*0000f864*/ MOVW        R3, #11870                  @ 0x2e5e 
    /*0000f868*/ STR         R7, [SP, #8] 
    /*0000f86c*/ STR         R3, [SP] 
    /*0000f870*/ MOVW        R2, #0                      @ .LC184 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5474] 
    /*0000f874*/ LDR         R3, [PC, #144]              @ 0x000000000000f90c 
    /*0000f878*/ MOVT        R2, #0                      @ .LC184 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5474] 
    /*0000f87c*/ STR         R6, [SP, #4] 
    /*0000f880*/ MOV         R1, #15 
    /*0000f884*/ MOV         R0, #3 
    /*0000f888*/ BL          0x000000000000F888          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f88c*/ LDR         R3, [R4, #180]              @ 0xb4 
    /*0000f890*/ ADD         R3, R3, #1 
    /*0000f894*/ STR         R3, [R4, #180]              @ 0xb4 
    /*0000f898*/ B           VouChnSdViSend_xf808
    VouChnSdViSend_xf89c:
    /*0000f89c*/ MOVW        R3, #11841                  @ 0x2e41 
    /*0000f8a0*/ STR         R0, [SP, #4] 
    /*0000f8a4*/ STR         R3, [SP] 
    /*0000f8a8*/ MOVW        R2, #0                      @ .LC178 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x52bc] 
    /*0000f8ac*/ STR         R7, [SP, #8] 
    /*0000f8b0*/ MOVT        R2, #0                      @ .LC178 [R_ARM_MOVT_ABS: .rodata.str1.4+0x52bc] 
    /*0000f8b4*/ LDR         R3, [PC, #80]               @ 0x000000000000f90c 
    /*0000f8b8*/ MOV         R1, #15 
    /*0000f8bc*/ MOV         R0, #3 
    /*0000f8c0*/ MVN         R8, #0 
    /*0000f8c4*/ BL          0x000000000000F8C4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f8c8*/ B           VouChnSdViSend_xf808
    VouChnSdViSend_xf8cc:
    /*0000f8cc*/ MOVW        R3, #11861                  @ 0x2e55 
    /*0000f8d0*/ STR         R7, [SP, #8] 
    /*0000f8d4*/ STR         R3, [SP] 
    /*0000f8d8*/ MOVW        R2, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5398] 
    /*0000f8dc*/ LDR         R3, [PC, #40]               @ 0x000000000000f90c 
    /*0000f8e0*/ MOVT        R2, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5398] 
    /*0000f8e4*/ STR         R6, [SP, #4] 
    /*0000f8e8*/ MOV         R1, #15 
    /*0000f8ec*/ MOV         R0, #3 
    /*0000f8f0*/ MOVW        R8, #32847                  @ 0x804f 
    /*0000f8f4*/ BL          0x000000000000F8F4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000f8f8*/ LDR         R3, [R4, #180]              @ 0xb4 
    /*0000f8fc*/ MOVT        R8, #40975                  @ 0xa00f 
    /*0000f900*/ ADD         R3, R3, #1 
    /*0000f904*/ STR         R3, [R4, #180]              @ 0xb4 
    /*0000f908*/ B           VouChnSdViSend_xf808
    /*0000f90c*/ @           <UNDEFINED> instruction: 0x000009bc 
FUNC_END VouChnSdViSend


FUNC_BEGIN VoRotationTaskCallback
    /*0000f910*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000f914*/ SUB         SP, SP, #404                @ 0x194 
    /*0000f918*/ MOV         R8, R1 
    /*0000f91c*/ MOV         R7, R2 
    /*0000f920*/ MOV         R1, #0 
    /*0000f924*/ MOV         R2, #32 
    /*0000f928*/ ADD         R0, SP, #32 
    /*0000f92c*/ MOV         R4, R3 
    /*0000f930*/ BL          0x000000000000F930          @ memset [R_ARM_CALL: +0x0] 
    /*0000f934*/ ADD         R1, R4, #336                @ 0x150 
    /*0000f938*/ ADD         R0, SP, #64                 @ 0x40 
    /*0000f93c*/ MOV         R2, #336                    @ 0x150 
    /*0000f940*/ BL          0x000000000000F940          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000f944*/ LDR         R3, [R4, #736]              @ 0x2e0 
    /*0000f948*/ CMP         R3, #3 
    /*0000f94c*/ BEQ         VoRotationTaskCallback_xfa40
    /*0000f950*/ ADD         R5, SP, #400                @ 0x190 
    /*0000f954*/ MOV         FP, #0 
    /*0000f958*/ MOVW        R0, #0                      @ g_VouListLock [R_ARM_MOVW_ABS_NC: .bss+0x30a0] 
    /*0000f95c*/ MOVT        R0, #0                      @ g_VouListLock [R_ARM_MOVT_ABS: .bss+0x30a0] 
    /*0000f960*/ STR         FP, [R5, #-372]!            @ 0xfffffe8c 
    /*0000f964*/ MOV         R1, R5 
    /*0000f968*/ BL          0x000000000000F968          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000f96c*/ LDR         R3, [SP, #28] 
    /*0000f970*/ LSL         SL, R8, #2 
    /*0000f974*/ MOV         R1, R5 
    /*0000f978*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000f97c*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000f980*/ STR         R3, [SP, #20] 
    /*0000f984*/ MOVW        R9, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000f988*/ STR         FP, [SP, #28] 
    /*0000f98c*/ MOVT        R9, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000f990*/ BL          0x000000000000F990          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000f994*/ ADD         R3, SL, R7 
    /*0000f998*/ LDR         R2, [SP, #28] 
    /*0000f99c*/ LDR         R6, [R9, R3, LSL #2] 
    /*0000f9a0*/ CMP         R6, FP 
    /*0000f9a4*/ STR         R2, [SP, #16] 
    /*0000f9a8*/ BEQ         VoRotationTaskCallback_xfb50
    /*0000f9ac*/ LDR         R3, [R6, #4] 
    /*0000f9b0*/ CMP         R3, #0 
    /*0000f9b4*/ BEQ         VoRotationTaskCallback_xfaf4
    /*0000f9b8*/ LDR         R3, [R4, #736]              @ 0x2e0 
    /*0000f9bc*/ CMP         R3, #1 
    /*0000f9c0*/ BEQ         VoRotationTaskCallback_xfb20
    /*0000f9c4*/ MOVW        R3, #11575                  @ 0x2d37 
    /*0000f9c8*/ MOVW        R2, #0                      @ .LC187 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5524] 
    /*0000f9cc*/ STR         R3, [SP] 
    /*0000f9d0*/ MOVT        R2, #0                      @ .LC187 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5524] 
    /*0000f9d4*/ STR         R7, [SP, #8] 
    /*0000f9d8*/ MOV         R1, #15 
    /*0000f9dc*/ STR         R8, [SP, #4] 
    /*0000f9e0*/ MOV         R0, #3 
    /*0000f9e4*/ LDR         R3, [PC, #448]              @ 0x000000000000fbac 
    /*0000f9e8*/ BL          0x000000000000F9E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    VoRotationTaskCallback_xf9ec:
    /*0000f9ec*/ LDR         R3, [SP, #16] 
    /*0000f9f0*/ MOV         R1, R5 
    /*0000f9f4*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000f9f8*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000f9fc*/ ADD         SL, SL, R7 
    /*0000fa00*/ ADD         R6, R6, #8192               @ 0x2000 
    /*0000fa04*/ STR         R3, [SP, #28] 
    /*0000fa08*/ BL          0x000000000000FA08          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000fa0c*/ LDR         R3, [SP, #20] 
    /*0000fa10*/ MOV         R1, R5 
    /*0000fa14*/ MOVW        R0, #0                      @ g_VouListLock [R_ARM_MOVW_ABS_NC: .bss+0x30a0] 
    /*0000fa18*/ MOVT        R0, #0                      @ g_VouListLock [R_ARM_MOVT_ABS: .bss+0x30a0] 
    /*0000fa1c*/ STR         R3, [SP, #28] 
    /*0000fa20*/ BL          0x000000000000FA20          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000fa24*/ LDR         R0, [R9, SL, LSL #2] 
    /*0000fa28*/ LDR         R3, [R6, #1380]             @ 0x564 
    /*0000fa2c*/ ADD         R0, R0, #9472               @ 0x2500 
    /*0000fa30*/ SUB         R3, R3, #1 
    /*0000fa34*/ ADD         R0, R0, #48                 @ 0x30 
    /*0000fa38*/ STR         R3, [R6, #1380]             @ 0x564 
    /*0000fa3c*/ BL          0x000000000000FA3C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    VoRotationTaskCallback_xfa40:
    /*0000fa40*/ MOV         R0, #1 
    /*0000fa44*/ BL          0x000000000000FA44          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000fa48*/ LDR         IP, [R4, #328]              @ 0x148 
    /*0000fa4c*/ LDRD        R2, [R4, #120]              @ 0x78 
    /*0000fa50*/ MOV         R1, #1 
    /*0000fa54*/ STR         R1, [SP] 
    /*0000fa58*/ LDR         R1, [R0, #64]               @ 0x40 
    /*0000fa5c*/ MOV         R0, IP 
    /*0000fa60*/ BLX         R1 
    /*0000fa64*/ CMP         R0, #0 
    /*0000fa68*/ BNE         VoRotationTaskCallback_xfac8
    VoRotationTaskCallback_xfa6c:
    /*0000fa6c*/ MOV         R0, #1 
    /*0000fa70*/ BL          0x000000000000FA70          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0000fa74*/ LDR         IP, [SP, #392]              @ 0x188 
    /*0000fa78*/ MOV         R1, #1 
    /*0000fa7c*/ LDRD        R2, [SP, #184]              @ 0xb8 
    /*0000fa80*/ STR         R1, [SP] 
    /*0000fa84*/ LDR         R1, [R0, #64]               @ 0x40 
    /*0000fa88*/ MOV         R0, IP 
    /*0000fa8c*/ BLX         R1 
    /*0000fa90*/ CMP         R0, #0 
    /*0000fa94*/ BEQ         VoRotationTaskCallback_xfac0
    /*0000fa98*/ MOVW        R3, #11603                  @ 0x2d53 
    /*0000fa9c*/ MOVW        R2, #0                      @ .LC177 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5284] 
    /*0000faa0*/ STR         R3, [SP] 
    /*0000faa4*/ MOVT        R2, #0                      @ .LC177 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5284] 
    /*0000faa8*/ STR         R7, [SP, #8] 
    /*0000faac*/ MOV         R1, #15 
    /*0000fab0*/ STR         R8, [SP, #4] 
    /*0000fab4*/ MOV         R0, #3 
    /*0000fab8*/ LDR         R3, [PC, #236]              @ 0x000000000000fbac 
    /*0000fabc*/ BL          0x000000000000FABC          @ HI_LOG [R_ARM_CALL: +0x0] 
    VoRotationTaskCallback_xfac0:
    /*0000fac0*/ ADD         SP, SP, #404                @ 0x194 
    /*0000fac4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VoRotationTaskCallback_xfac8:
    /*0000fac8*/ MOVW        R3, #11597                  @ 0x2d4d 
    /*0000facc*/ STR         R7, [SP, #8] 
    /*0000fad0*/ STR         R3, [SP] 
    /*0000fad4*/ MOVW        R2, #0                      @ .LC177 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5284] 
    /*0000fad8*/ STR         R8, [SP, #4] 
    /*0000fadc*/ MOVT        R2, #0                      @ .LC177 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5284] 
    /*0000fae0*/ LDR         R3, [PC, #196]              @ 0x000000000000fbac 
    /*0000fae4*/ MOV         R1, #15 
    /*0000fae8*/ MOV         R0, #3 
    /*0000faec*/ BL          0x000000000000FAEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000faf0*/ B           VoRotationTaskCallback_xfa6c
    VoRotationTaskCallback_xfaf4:
    /*0000faf4*/ MOVW        R3, #11569                  @ 0x2d31 
    /*0000faf8*/ STR         R7, [SP, #8] 
    /*0000fafc*/ STR         R3, [SP] 
    /*0000fb00*/ MOVW        R2, #0                      @ .LC186 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x54ec] 
    /*0000fb04*/ STR         R8, [SP, #4] 
    /*0000fb08*/ MOVT        R2, #0                      @ .LC186 [R_ARM_MOVT_ABS: .rodata.str1.4+0x54ec] 
    /*0000fb0c*/ LDR         R3, [PC, #152]              @ 0x000000000000fbac 
    /*0000fb10*/ MOV         R1, #15 
    /*0000fb14*/ MOV         R0, #3 
    /*0000fb18*/ BL          0x000000000000FB18          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000fb1c*/ B           VoRotationTaskCallback_xf9ec
    VoRotationTaskCallback_xfb20:
    /*0000fb20*/ ADD         R2, SP, #32 
    /*0000fb24*/ MOV         R1, R7 
    /*0000fb28*/ MOV         R0, R8 
    /*0000fb2c*/ STR         R3, [SP, #32] 
    /*0000fb30*/ STR         FP, [SP, #40]               @ 0x28 
    /*0000fb34*/ ADD         R3, SP, #64                 @ 0x40 
    /*0000fb38*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0000fb3c*/ BL          0x000000000000FB3C          @ VouChnSdViSend [R_ARM_CALL: .text+0xf71c] 
    /*0000fb40*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0000fb44*/ LDRD        R2, [R3, #240]              @ 0xf0 
    /*0000fb48*/ STRD        R2, [R6, #200]              @ 0xc8 
    /*0000fb4c*/ B           VoRotationTaskCallback_xf9ec
    VoRotationTaskCallback_xfb50:
    /*0000fb50*/ STR         R7, [SP, #8] 
    /*0000fb54*/ MOVW        R3, #11561                  @ 0x2d29 
    /*0000fb58*/ STR         R8, [SP, #4] 
    /*0000fb5c*/ MOV         R1, #15 
    /*0000fb60*/ STR         R3, [SP] 
    /*0000fb64*/ MOVW        R2, #0                      @ .LC185 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x54b8] 
    /*0000fb68*/ LDR         R3, [PC, #60]               @ 0x000000000000fbac 
    /*0000fb6c*/ MOVT        R2, #0                      @ .LC185 [R_ARM_MOVT_ABS: .rodata.str1.4+0x54b8] 
    /*0000fb70*/ MOV         R0, #3 
    /*0000fb74*/ BL          0x000000000000FB74          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000fb78*/ LDR         R3, [SP, #16] 
    /*0000fb7c*/ MOV         R1, R5 
    /*0000fb80*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000fb84*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000fb88*/ STR         R3, [SP, #28] 
    /*0000fb8c*/ BL          0x000000000000FB8C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000fb90*/ LDR         R3, [SP, #20] 
    /*0000fb94*/ MOV         R1, R5 
    /*0000fb98*/ MOVW        R0, #0                      @ g_VouListLock [R_ARM_MOVW_ABS_NC: .bss+0x30a0] 
    /*0000fb9c*/ MOVT        R0, #0                      @ g_VouListLock [R_ARM_MOVT_ABS: .bss+0x30a0] 
    /*0000fba0*/ STR         R3, [SP, #28] 
    /*0000fba4*/ BL          0x000000000000FBA4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000fba8*/ B           VoRotationTaskCallback_xfa40
    /*0000fbac*/ ANDEQ       R0, R0, IP, ASR #19 
FUNC_END VoRotationTaskCallback


FUNC_BEGIN VouChnSdVdecSend
    /*0000fbb0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000fbb4*/ MOV         R7, R0 
    /*0000fbb8*/ LDR         R0, [R2] 
    /*0000fbbc*/ MOV         R5, R2 
    /*0000fbc0*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000fbc4*/ ADD         R2, R1, R7, LSL #2 
    /*0000fbc8*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000fbcc*/ CMP         R0, #1 
    /*0000fbd0*/ SUB         SP, SP, #28 
    /*0000fbd4*/ MOV         SL, R1 
    /*0000fbd8*/ LDR         R4, [R3, R2, LSL #2] 
    /*0000fbdc*/ BEQ         VouChnSdVdecSend_xfc2c
    /*0000fbe0*/ ADD         R4, R4, #8192               @ 0x2000 
    /*0000fbe4*/ MOVW        R2, #0                      @ .LC189 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x55c4] 
    /*0000fbe8*/ MOV         R0, #7 
    /*0000fbec*/ MOVT        R2, #0                      @ .LC189 [R_ARM_MOVT_ABS: .rodata.str1.4+0x55c4] 
    /*0000fbf0*/ LDR         R3, [R4, #1116]             @ 0x45c 
    /*0000fbf4*/ MOV         R6, #0 
    /*0000fbf8*/ CMP         R3, #1 
    /*0000fbfc*/ MOVEQ       R3, #2 
    /*0000fc00*/ STREQ       R3, [R4, #1116]             @ 0x45c 
    /*0000fc04*/ MOVW        R3, #11983                  @ 0x2ecf 
    /*0000fc08*/ STR         R1, [SP, #8] 
    /*0000fc0c*/ STR         R3, [SP] 
    /*0000fc10*/ MOV         R1, #15 
    /*0000fc14*/ STR         R7, [SP, #4] 
    /*0000fc18*/ LDR         R3, [PC, #492]              @ 0x000000000000fe0c 
    /*0000fc1c*/ BL          0x000000000000FC1C          @ HI_LOG [R_ARM_CALL: +0x0] 
    VouChnSdVdecSend_xfc20:
    /*0000fc20*/ MOV         R0, R6 
    /*0000fc24*/ ADD         SP, SP, #28 
    /*0000fc28*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnSdVdecSend_xfc2c:
    /*0000fc2c*/ ADD         FP, R4, #8192               @ 0x2000 
    /*0000fc30*/ LDR         R3, [FP, #1116]             @ 0x45c 
    /*0000fc34*/ CMP         R3, #1 
    /*0000fc38*/ MOVEQ       R3, #0 
    /*0000fc3c*/ STREQ       R3, [FP, #1116]             @ 0x45c 
    /*0000fc40*/ LDR         R8, [R5, #12] 
    /*0000fc44*/ MOV         R0, R8 
    /*0000fc48*/ BL          0x00000000000053A8 
    /*0000fc4c*/ SUBS        R6, R0, #0 
    /*0000fc50*/ BNE         VouChnSdVdecSend_xfda0
    /*0000fc54*/ ADD         R9, R4, #8960               @ 0x2300 
    /*0000fc58*/ MOV         R2, R8 
    /*0000fc5c*/ ADD         R9, R9, #56                 @ 0x38 
    /*0000fc60*/ LDR         R3, [R4, #344]              @ 0x158 
    /*0000fc64*/ MOV         R1, SL 
    /*0000fc68*/ MOV         R0, R7 
    /*0000fc6c*/ BL          0x000000000000FC6C          @ VouChnCalShouldDisp [R_ARM_CALL: .text+0xe010] 
    /*0000fc70*/ MOV         R0, R9 
    /*0000fc74*/ BL          0x000000000000FC74          @ VouBufGetFree [R_ARM_CALL: .text+0x3e84] 
    /*0000fc78*/ LDR         R1, [FP, #1024]             @ 0x400 
    /*0000fc7c*/ MOVW        R3, #11931                  @ 0x2e9b 
    /*0000fc80*/ MOVW        R2, #0                      @ .LC188 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5570] 
    /*0000fc84*/ STR         R3, [SP] 
    /*0000fc88*/ MOVT        R2, #0                      @ .LC188 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5570] 
    /*0000fc8c*/ STR         R1, [SP, #16] 
    /*0000fc90*/ MOV         R1, #15 
    /*0000fc94*/ STR         SL, [SP, #8] 
    /*0000fc98*/ STR         R7, [SP, #4] 
    /*0000fc9c*/ LDR         R3, [PC, #360]              @ 0x000000000000fe0c 
    /*0000fca0*/ MOV         R8, R0 
    /*0000fca4*/ STR         R0, [SP, #12] 
    /*0000fca8*/ MOV         R0, #7 
    /*0000fcac*/ BL          0x000000000000FCAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000fcb0*/ CMP         R8, #0 
    /*0000fcb4*/ BEQ         VouChnSdVdecSend_xfde0
    /*0000fcb8*/ LDR         R7, [R8] 
    /*0000fcbc*/ MOV         R2, #336                    @ 0x150 
    /*0000fcc0*/ LDR         R1, [R5, #12] 
    /*0000fcc4*/ MOV         R0, R7 
    /*0000fcc8*/ BL          0x000000000000FCC8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0000fccc*/ LDR         R3, [R4, #344]              @ 0x158 
    /*0000fcd0*/ ADD         IP, R4, #288                @ 0x120 
    /*0000fcd4*/ MOV         R2, #0 
    /*0000fcd8*/ CMP         R3, #0 
    /*0000fcdc*/ LDRD        R0, [R7, #240]              @ 0xf0 
    /*0000fce0*/ LDRNE       LR, [R3, #676]              @ 0x2a4 
    /*0000fce4*/ MOV         R3, #1 
    /*0000fce8*/ STR         R2, [R7, #672]              @ 0x2a0 
    /*0000fcec*/ MOVEQ       LR, #1 
    /*0000fcf0*/ STR         R3, [R7, #676]              @ 0x2a4 
    /*0000fcf4*/ LDRD        R2, [IP, #16] 
    /*0000fcf8*/ CMP         R1, R3 
    /*0000fcfc*/ CMPEQ       R0, R2 
    /*0000fd00*/ BEQ         VouChnSdVdecSend_xfd7c
    /*0000fd04*/ LDRD        R2, [IP, #8] 
    VouChnSdVdecSend_xfd08:
    /*0000fd08*/ LDR         SL, [R4, #224]              @ 0xe0 
    /*0000fd0c*/ CMP         SL, #1 
    /*0000fd10*/ LDR         SL, [R4, #328]              @ 0x148 
    /*0000fd14*/ MUL         LR, SL, LR 
    /*0000fd18*/ BEQ         VouChnSdVdecSend_xfd94
    /*0000fd1c*/ ADDS        R2, R2, LR 
    /*0000fd20*/ ADC         R3, R3, #0 
    VouChnSdVdecSend_xfd24:
    /*0000fd24*/ STRD        R2, [IP, #8] 
    VouChnSdVdecSend_xfd28:
    /*0000fd28*/ STRD        R0, [IP, #16] 
    /*0000fd2c*/ MOV         R1, R8 
    /*0000fd30*/ MOV         R0, R9 
    /*0000fd34*/ STR         R7, [R4, #344]              @ 0x158 
    /*0000fd38*/ BL          0x000000000000FD38          @ VouBufPutBusy [R_ARM_CALL: .text+0x3e58] 
    /*0000fd3c*/ LDR         R0, [R8] 
    /*0000fd40*/ BL          0x000000000000FD40          @ VouBufAddBlkVb [R_ARM_CALL: .text+0x4220] 
    /*0000fd44*/ LDR         R3, [R4, #176]              @ 0xb0 
    /*0000fd48*/ ADD         R1, R4, #304                @ 0x130 
    /*0000fd4c*/ MOV         R0, R6 
    /*0000fd50*/ ADD         R3, R3, #1 
    /*0000fd54*/ STR         R3, [R4, #176]              @ 0xb0 
    /*0000fd58*/ LDR         R3, [R5, #12] 
    /*0000fd5c*/ LDRD        R2, [R3, #120]              @ 0x78 
    /*0000fd60*/ STR         R7, [R4, #344]              @ 0x158 
    /*0000fd64*/ STRD        R2, [R4, #160]              @ 0xa0 
    /*0000fd68*/ LDR         R3, [R5, #12] 
    /*0000fd6c*/ LDRD        R2, [R3, #240]              @ 0xf0 
    /*0000fd70*/ STRD        R2, [R1] 
    /*0000fd74*/ ADD         SP, SP, #28 
    /*0000fd78*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnSdVdecSend_xfd7c:
    /*0000fd7c*/ ORRS        R3, R0, R1 
    /*0000fd80*/ BNE         VouChnSdVdecSend_xfd28
    /*0000fd84*/ LDRD        R2, [IP, #8] 
    /*0000fd88*/ ORRS        SL, R2, R3 
    /*0000fd8c*/ BEQ         VouChnSdVdecSend_xfd08
    /*0000fd90*/ B           VouChnSdVdecSend_xfd28
    VouChnSdVdecSend_xfd94:
    /*0000fd94*/ SUBS        R2, R2, LR 
    /*0000fd98*/ SBC         R3, R3, #0 
    /*0000fd9c*/ B           VouChnSdVdecSend_xfd24
    VouChnSdVdecSend_xfda0:
    /*0000fda0*/ MOVW        R3, #11918                  @ 0x2e8e 
    /*0000fda4*/ STR         R3, [SP] 
    /*0000fda8*/ LDR         R3, [PC, #92]               @ 0x000000000000fe0c 
    /*0000fdac*/ MOVW        R2, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5398] 
    /*0000fdb0*/ MOVT        R2, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5398] 
    /*0000fdb4*/ MOV         R1, #15 
    /*0000fdb8*/ MOV         R0, #3 
    /*0000fdbc*/ MOVW        R6, #32847                  @ 0x804f 
    /*0000fdc0*/ STR         SL, [SP, #8] 
    /*0000fdc4*/ STR         R7, [SP, #4] 
    VouChnSdVdecSend_xfdc8:
    /*0000fdc8*/ BL          0x000000000000FDC8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000fdcc*/ LDR         R3, [R4, #180]              @ 0xb4 
    /*0000fdd0*/ MOVT        R6, #40975                  @ 0xa00f 
    /*0000fdd4*/ ADD         R3, R3, #1 
    /*0000fdd8*/ STR         R3, [R4, #180]              @ 0xb4 
    /*0000fddc*/ B           VouChnSdVdecSend_xfc20
    VouChnSdVdecSend_xfde0:
    /*0000fde0*/ MOVW        R3, #11935                  @ 0x2e9f 
    /*0000fde4*/ MOVW        R2, #0                      @ .LC184 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5474] 
    /*0000fde8*/ STR         R3, [SP] 
    /*0000fdec*/ MOVT        R2, #0                      @ .LC184 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5474] 
    /*0000fdf0*/ STR         SL, [SP, #8] 
    /*0000fdf4*/ MOV         R1, #15 
    /*0000fdf8*/ STR         R7, [SP, #4] 
    /*0000fdfc*/ MOV         R0, #3 
    /*0000fe00*/ LDR         R3, [PC, #4]                @ 0x000000000000fe0c 
    /*0000fe04*/ MOVW        R6, #32780                  @ 0x800c 
    /*0000fe08*/ B           VouChnSdVdecSend_xfdc8
    /*0000fe0c*/ ANDEQ       R0, R0, R4, ROR #19 
FUNC_END VouChnSdVdecSend


FUNC_BEGIN VouChnVpssSend
    /*0000fe10*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0000fe14*/ SUB         SP, SP, #68                 @ 0x44 
    /*0000fe18*/ MOV         R7, R1 
    /*0000fe1c*/ MOV         R9, R2 
    /*0000fe20*/ MOV         R6, R0 
    /*0000fe24*/ BL          0x000000000000FE24          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*0000fe28*/ CMP         R0, #0 
    /*0000fe2c*/ BNE         VouChnVpssSend_x100e4
    /*0000fe30*/ MOV         R1, R7 
    /*0000fe34*/ MOV         R0, R6 
    /*0000fe38*/ BL          0x000000000000FE38          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*0000fe3c*/ CMP         R0, #0 
    /*0000fe40*/ BNE         VouChnVpssSend_x100f0
    /*0000fe44*/ MOV         R0, R9 
    /*0000fe48*/ BL          0x000000000000FE48          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*0000fe4c*/ SUBS        R5, R0, #0 
    /*0000fe50*/ BNE         VouChnVpssSend_x100fc
    /*0000fe54*/ ADD         R4, SP, #64                 @ 0x40 
    /*0000fe58*/ MOVW        R0, #0                      @ g_VouListLock [R_ARM_MOVW_ABS_NC: .bss+0x30a0] 
    /*0000fe5c*/ MOVT        R0, #0                      @ g_VouListLock [R_ARM_MOVT_ABS: .bss+0x30a0] 
    /*0000fe60*/ LSL         SL, R6, #2 
    /*0000fe64*/ STR         R5, [R4, #-32]!             @ 0xffffffe0 
    /*0000fe68*/ MOV         R1, R4 
    /*0000fe6c*/ BL          0x000000000000FE6C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000fe70*/ LDR         R3, [SP, #32] 
    /*0000fe74*/ MOV         R1, R4 
    /*0000fe78*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000fe7c*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000fe80*/ STR         R5, [SP, #32] 
    /*0000fe84*/ STR         R3, [SP, #20] 
    /*0000fe88*/ MOVW        R8, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*0000fe8c*/ BL          0x000000000000FE8C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*0000fe90*/ MOVT        R8, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*0000fe94*/ ADD         R3, SL, R7 
    /*0000fe98*/ LDR         R2, [SP, #32] 
    /*0000fe9c*/ LDR         R5, [R8, R3, LSL #2] 
    /*0000fea0*/ STR         R2, [SP, #16] 
    /*0000fea4*/ CMP         R5, #0 
    /*0000fea8*/ BEQ         VouChnVpssSend_x10228
    /*0000feac*/ LDR         R3, [R5, #4] 
    /*0000feb0*/ CMP         R3, #0 
    /*0000feb4*/ BEQ         VouChnVpssSend_x10134
    /*0000feb8*/ ADD         FP, R5, #8192               @ 0x2000 
    /*0000febc*/ ADD         R0, R5, #9472               @ 0x2500 
    /*0000fec0*/ MOV         R3, #1 
    /*0000fec4*/ ADD         R0, R0, #48                 @ 0x30 
    /*0000fec8*/ STR         R3, [FP, #1316]             @ 0x524 
    /*0000fecc*/ BL          0x000000000000FECC          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*0000fed0*/ LDR         R1, [R9, #12] 
    /*0000fed4*/ CMP         R1, #0 
    /*0000fed8*/ BEQ         VouChnVpssSend_x10108
    /*0000fedc*/ LDR         R3, [R1, #24] 
    /*0000fee0*/ CMP         R3, #5 
    /*0000fee4*/ BHI         VouChnVpssSend_x10198
    /*0000fee8*/ SUB         R2, R3, #4 
    /*0000feec*/ CMP         R2, #1 
    /*0000fef0*/ BLS         VouChnVpssSend_x1020c
    /*0000fef4*/ CMP         R3, #1 
    /*0000fef8*/ BLS         VouChnVpssSend_x10048
    VouChnVpssSend_xfefc:
    /*0000fefc*/ MOV         R0, R6 
    /*0000ff00*/ BL          0x000000000000FF00          @ VO_DRV_CheckLayerSupportFrame [R_ARM_CALL: .text+0x18f7c] 
    /*0000ff04*/ CMP         R0, #0 
    /*0000ff08*/ BNE         VouChnVpssSend_x101e4
    VouChnVpssSend_xff0c:
    /*0000ff0c*/ MOV         R0, R9 
    /*0000ff10*/ MOV         R1, R4 
    /*0000ff14*/ BL          0x000000000000FF14          @ VouChnSetRecvFrmInfo [R_ARM_CALL: .text+0xed7c] 
    /*0000ff18*/ LDR         R3, [SP, #32] 
    /*0000ff1c*/ CMP         R3, #0 
    /*0000ff20*/ LDREQ       R3, [R5, #44]               @ 0x2c 
    /*0000ff24*/ BEQ         VouChnVpssSend_xff5c
    /*0000ff28*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0000ff2c*/ LDR         R2, [R5, #44]               @ 0x2c 
    /*0000ff30*/ CMP         R3, R2 
    /*0000ff34*/ BEQ         VouChnVpssSend_xff58
    /*0000ff38*/ ADD         SL, SL, R7 
    /*0000ff3c*/ MOV         IP, #0 
    /*0000ff40*/ MOV         R0, #0 
    /*0000ff44*/ MOV         R1, #0 
    /*0000ff48*/ LDR         R2, [R8, SL, LSL #2] 
    /*0000ff4c*/ ADD         LR, R2, #304                @ 0x130 
    /*0000ff50*/ STR         IP, [R2, #344]              @ 0x158 
    /*0000ff54*/ STRD        R0, [LR] 
    VouChnVpssSend_xff58:
    /*0000ff58*/ STR         R3, [R5, #44]               @ 0x2c 
    VouChnVpssSend_xff5c:
    /*0000ff5c*/ CMP         R3, #0 
    /*0000ff60*/ BEQ         VouChnVpssSend_x1000c
    /*0000ff64*/ CMP         R3, #1 
    /*0000ff68*/ MOVW        R2, #0                      @ .LC190 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5600] 
    /*0000ff6c*/ MOVW        R1, #0                      @ .LC191 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5608] 
    /*0000ff70*/ MOVT        R2, #0                      @ .LC190 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5600] 
    /*0000ff74*/ MOVT        R1, #0                      @ .LC191 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5608] 
    /*0000ff78*/ STR         R6, [SP, #4] 
    /*0000ff7c*/ MOVEQ       R3, R2 
    /*0000ff80*/ STR         R7, [SP, #8] 
    /*0000ff84*/ MOVNE       R3, R1 
    /*0000ff88*/ MOVW        R2, #0                      @ .LC199 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5818] 
    /*0000ff8c*/ MOVW        R1, #12195                  @ 0x2fa3 
    /*0000ff90*/ STR         R3, [SP, #12] 
    /*0000ff94*/ STR         R1, [SP] 
    /*0000ff98*/ MOVT        R2, #0                      @ .LC199 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5818] 
    /*0000ff9c*/ LDR         R3, [PC, #704]              @ 0x0000000000010264 
    /*0000ffa0*/ MOV         R1, #15 
    /*0000ffa4*/ MOV         R0, #7 
    /*0000ffa8*/ BL          0x000000000000FFA8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0000ffac*/ MOV         R0, R6 
    /*0000ffb0*/ MOV         R2, R4 
    /*0000ffb4*/ MOV         R1, R7 
    /*0000ffb8*/ BL          0x000000000000FFB8          @ VouChnSdVdecSend [R_ARM_CALL: .text+0xfbb0] 
    /*0000ffbc*/ MOV         R6, R0 
    VouChnVpssSend_xffc0:
    /*0000ffc0*/ LDR         R3, [SP, #32] 
    /*0000ffc4*/ CMP         R3, #1 
    /*0000ffc8*/ BEQ         VouChnVpssSend_x10038
    VouChnVpssSend_xffcc:
    /*0000ffcc*/ LDR         R3, [SP, #16] 
    /*0000ffd0*/ ADD         R4, SP, #64                 @ 0x40 
    /*0000ffd4*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*0000ffd8*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*0000ffdc*/ STR         R3, [R4, #-36]!             @ 0xffffffdc 
    /*0000ffe0*/ MOV         R1, R4 
    /*0000ffe4*/ BL          0x000000000000FFE4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0000ffe8*/ LDR         R3, [SP, #20] 
    /*0000ffec*/ MOVW        R0, #0                      @ g_VouListLock [R_ARM_MOVW_ABS_NC: .bss+0x30a0] 
    /*0000fff0*/ MOV         R1, R4 
    /*0000fff4*/ MOVT        R0, #0                      @ g_VouListLock [R_ARM_MOVT_ABS: .bss+0x30a0] 
    /*0000fff8*/ STR         R3, [SP, #28] 
    /*0000fffc*/ BL          0x000000000000FFFC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VouChnVpssSend_x10000:
    /*00010000*/ MOV         R0, R6 
    /*00010004*/ ADD         SP, SP, #68                 @ 0x44 
    /*00010008*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnVpssSend_x1000c:
    /*0001000c*/ LDR         R3, [FP, #1352]             @ 0x548 
    /*00010010*/ MOV         R2, R4 
    /*00010014*/ MOV         R1, R7 
    /*00010018*/ MOV         R0, R6 
    /*0001001c*/ CMP         R3, #0 
    /*00010020*/ BEQ         VouChnVpssSend_x100d8
    /*00010024*/ BL          0x0000000000010024          @ VouChnSdViSendWithRot [R_ARM_CALL: .text+0xf5a8] 
    /*00010028*/ LDR         R3, [SP, #32] 
    /*0001002c*/ CMP         R3, #1 
    /*00010030*/ MOV         R6, R0 
    /*00010034*/ BNE         VouChnVpssSend_xffcc
    VouChnVpssSend_x10038:
    /*00010038*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0001003c*/ LDRD        R2, [R3, #240]              @ 0xf0 
    /*00010040*/ STRD        R2, [R5, #200]              @ 0xc8 
    /*00010044*/ B           VouChnVpssSend_xffcc
    VouChnVpssSend_x10048:
    /*00010048*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0001004c*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00010050*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00010054*/ MLA         R3, R3, R6, R2 
    /*00010058*/ LDR         R3, [R3, #152]              @ 0x98 
    /*0001005c*/ SUB         R3, R3, #2 
    /*00010060*/ CMP         R3, #2 
    /*00010064*/ BHI         VouChnVpssSend_xfefc
    /*00010068*/ MOVW        R2, #0                      @ .LC196 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5730] 
    /*0001006c*/ MOVT        R2, #0                      @ .LC196 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5730] 
    /*00010070*/ MOVW        R3, #12084                  @ 0x2f34 
    /*00010074*/ STR         R7, [SP, #8] 
    /*00010078*/ STR         R6, [SP, #4] 
    /*0001007c*/ STR         R3, [SP] 
    VouChnVpssSend_x10080:
    /*00010080*/ LDR         R3, [PC, #476]              @ 0x0000000000010264 
    /*00010084*/ MOV         R1, #15 
    /*00010088*/ MOV         R0, #3 
    /*0001008c*/ MOVW        R6, #32776                  @ 0x8008 
    /*00010090*/ BL          0x0000000000010090          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010094*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00010098*/ LDR         R3, [R5, #180]              @ 0xb4 
    /*0001009c*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*000100a0*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*000100a4*/ MOV         R1, R4 
    /*000100a8*/ ADD         R3, R3, #1 
    /*000100ac*/ STR         R3, [R5, #180]              @ 0xb4 
    VouChnVpssSend_x100b0:
    /*000100b0*/ LDR         R3, [SP, #16] 
    /*000100b4*/ STR         R3, [SP, #32] 
    /*000100b8*/ BL          0x00000000000100B8          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000100bc*/ LDR         R3, [SP, #20] 
    /*000100c0*/ MOV         R1, R4 
    /*000100c4*/ MOVW        R0, #0                      @ g_VouListLock [R_ARM_MOVW_ABS_NC: .bss+0x30a0] 
    /*000100c8*/ MOVT        R0, #0                      @ g_VouListLock [R_ARM_MOVT_ABS: .bss+0x30a0] 
    /*000100cc*/ STR         R3, [SP, #32] 
    /*000100d0*/ BL          0x00000000000100D0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000100d4*/ B           VouChnVpssSend_x10000
    VouChnVpssSend_x100d8:
    /*000100d8*/ BL          0x00000000000100D8          @ VouChnSdViSend [R_ARM_CALL: .text+0xf71c] 
    /*000100dc*/ MOV         R6, R0 
    /*000100e0*/ B           VouChnVpssSend_xffc0
    VouChnVpssSend_x100e4:
    /*000100e4*/ MOVW        R6, #32877                  @ 0x806d 
    /*000100e8*/ MOVT        R6, #40975                  @ 0xa00f 
    /*000100ec*/ B           VouChnVpssSend_x10000
    VouChnVpssSend_x100f0:
    /*000100f0*/ MOVW        R6, #32770                  @ 0x8002 
    /*000100f4*/ MOVT        R6, #40975                  @ 0xa00f 
    /*000100f8*/ B           VouChnVpssSend_x10000
    VouChnVpssSend_x100fc:
    /*000100fc*/ MOVW        R6, #32774                  @ 0x8006 
    /*00010100*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00010104*/ B           VouChnVpssSend_x10000
    VouChnVpssSend_x10108:
    /*00010108*/ MOVW        R3, #12105                  @ 0x2f49 
    /*0001010c*/ STR         R7, [SP, #8] 
    /*00010110*/ STR         R3, [SP] 
    /*00010114*/ MOVW        R2, #0                      @ .LC198 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x57d0] 
    /*00010118*/ STR         R6, [SP, #4] 
    /*0001011c*/ MOVT        R2, #0                      @ .LC198 [R_ARM_MOVT_ABS: .rodata.str1.4+0x57d0] 
    /*00010120*/ LDR         R3, [PC, #316]              @ 0x0000000000010264 
    /*00010124*/ MOV         R1, #15 
    /*00010128*/ MOV         R0, #4 
    /*0001012c*/ BL          0x000000000001012C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010130*/ B           VouChnVpssSend_xff0c
    VouChnVpssSend_x10134:
    /*00010134*/ MOVW        R3, #12042                  @ 0x2f0a 
    /*00010138*/ STR         R6, [SP, #4] 
    /*0001013c*/ STR         R3, [SP] 
    /*00010140*/ MOV         R1, #15 
    /*00010144*/ STR         R7, [SP, #8] 
    /*00010148*/ MOVW        R2, #0                      @ .LC193 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5654] 
    /*0001014c*/ LDR         R3, [PC, #272]              @ 0x0000000000010264 
    /*00010150*/ MOVT        R2, #0                      @ .LC193 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5654] 
    /*00010154*/ MOV         R0, #4 
    /*00010158*/ MOVW        R6, #32841                  @ 0x8049 
    /*0001015c*/ BL          0x000000000001015C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010160*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00010164*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00010168*/ MOV         R1, R4 
    VouChnVpssSend_x1016c:
    /*0001016c*/ LDR         R3, [SP, #16] 
    /*00010170*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00010174*/ STR         R3, [SP, #32] 
    /*00010178*/ BL          0x0000000000010178          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*0001017c*/ LDR         R3, [SP, #20] 
    /*00010180*/ MOV         R1, R4 
    /*00010184*/ MOVW        R0, #0                      @ g_VouListLock [R_ARM_MOVW_ABS_NC: .bss+0x30a0] 
    /*00010188*/ MOVT        R0, #0                      @ g_VouListLock [R_ARM_MOVT_ABS: .bss+0x30a0] 
    /*0001018c*/ STR         R3, [SP, #32] 
    /*00010190*/ BL          0x0000000000010190          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00010194*/ B           VouChnVpssSend_x10000
    VouChnVpssSend_x10198:
    /*00010198*/ STR         R3, [SP, #12] 
    /*0001019c*/ MOVW        R2, #0                      @ .LC194 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5694] 
    /*000101a0*/ MOVW        R3, #12063                  @ 0x2f1f 
    /*000101a4*/ STR         R7, [SP, #8] 
    /*000101a8*/ STR         R3, [SP] 
    /*000101ac*/ MOVT        R2, #0                      @ .LC194 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5694] 
    /*000101b0*/ STR         R6, [SP, #4] 
    /*000101b4*/ MOV         R1, #15 
    /*000101b8*/ LDR         R3, [PC, #164]              @ 0x0000000000010264 
    /*000101bc*/ MOV         R0, #3 
    /*000101c0*/ BL          0x00000000000101C0          @ HI_LOG [R_ARM_CALL: +0x0] 
    VouChnVpssSend_x101c4:
    /*000101c4*/ LDR         R3, [R5, #180]              @ 0xb4 
    /*000101c8*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*000101cc*/ MOV         R1, R4 
    /*000101d0*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*000101d4*/ ADD         R3, R3, #1 
    /*000101d8*/ MOVW        R6, #32776                  @ 0x8008 
    /*000101dc*/ STR         R3, [R5, #180]              @ 0xb4 
    /*000101e0*/ B           VouChnVpssSend_x1016c
    VouChnVpssSend_x101e4:
    /*000101e4*/ MOV         R3, #12096                  @ 0x2f40 
    /*000101e8*/ STR         R6, [SP, #4] 
    /*000101ec*/ STR         R3, [SP] 
    /*000101f0*/ MOVW        R2, #0                      @ .LC197 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5790] 
    /*000101f4*/ LDR         R3, [PC, #104]              @ 0x0000000000010264 
    /*000101f8*/ MOVT        R2, #0                      @ .LC197 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5790] 
    /*000101fc*/ MOV         R1, #15 
    /*00010200*/ MOV         R0, #3 
    /*00010204*/ BL          0x0000000000010204          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010208*/ B           VouChnVpssSend_x101c4
    VouChnVpssSend_x1020c:
    /*0001020c*/ MOVW        R3, #12073                  @ 0x2f29 
    /*00010210*/ MOVW        R2, #0                      @ .LC195 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x56e8] 
    /*00010214*/ STR         R7, [SP, #8] 
    /*00010218*/ MOVT        R2, #0                      @ .LC195 [R_ARM_MOVT_ABS: .rodata.str1.4+0x56e8] 
    /*0001021c*/ STR         R6, [SP, #4] 
    /*00010220*/ STR         R3, [SP] 
    /*00010224*/ B           VouChnVpssSend_x10080
    VouChnVpssSend_x10228:
    /*00010228*/ MOVW        R3, #12034                  @ 0x2f02 
    /*0001022c*/ STR         R6, [SP, #4] 
    /*00010230*/ STR         R3, [SP] 
    /*00010234*/ MOV         R1, #15 
    /*00010238*/ STR         R7, [SP, #8] 
    /*0001023c*/ MOVW        R2, #0                      @ .LC192 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5610] 
    /*00010240*/ LDR         R3, [PC, #28]               @ 0x0000000000010264 
    /*00010244*/ MOVT        R2, #0                      @ .LC192 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5610] 
    /*00010248*/ MOV         R0, #4 
    /*0001024c*/ MVN         R6, #0 
    /*00010250*/ BL          0x0000000000010250          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010254*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00010258*/ MOV         R1, R4 
    /*0001025c*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00010260*/ B           VouChnVpssSend_x100b0
    /*00010264*/ STRDEQ      R0, [R0], -R8 
FUNC_END VouChnVpssSend


FUNC_BEGIN VouUsrSendFrameTimeOut
    /*00010268*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001026c*/ SUB         SP, SP, #452                @ 0x1c4 
    /*00010270*/ MOV         R8, R1 
    /*00010274*/ MOV         R5, R2 
    /*00010278*/ MOV         R4, R3 
    /*0001027c*/ MOV         R7, R0 
    /*00010280*/ MOV         R3, #0 
    /*00010284*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00010288*/ STR         R3, [SP, #40]               @ 0x28 
    /*0001028c*/ STR         R3, [SP, #48]               @ 0x30 
    /*00010290*/ STR         R3, [SP, #52]               @ 0x34 
    /*00010294*/ BL          0x0000000000010294          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00010298*/ CMP         R0, #0 
    /*0001029c*/ BNE         VouUsrSendFrameTimeOut_x1078c
    /*000102a0*/ MOV         R1, R8 
    /*000102a4*/ MOV         R0, R7 
    /*000102a8*/ BL          0x00000000000102A8          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*000102ac*/ CMP         R0, #0 
    /*000102b0*/ BNE         VouUsrSendFrameTimeOut_x10798
    /*000102b4*/ MOV         R0, R5 
    /*000102b8*/ BL          0x00000000000102B8          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*000102bc*/ CMP         R0, #0 
    /*000102c0*/ BNE         VouUsrSendFrameTimeOut_x107a4
    /*000102c4*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*000102c8*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*000102cc*/ BL          0x00000000000102CC          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000102d0*/ CMP         R0, #0 
    /*000102d4*/ BNE         VouUsrSendFrameTimeOut_x1070c
    /*000102d8*/ LSL         R9, R7, #2 
    /*000102dc*/ MOVW        R6, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*000102e0*/ ADD         R3, R9, R8 
    /*000102e4*/ MOVT        R6, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*000102e8*/ LDR         R3, [R6, R3, LSL #2] 
    /*000102ec*/ CMP         R3, #0 
    /*000102f0*/ BEQ         VouUsrSendFrameTimeOut_x107e4
    VouUsrSendFrameTimeOut_x102f4:
    /*000102f4*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*000102f8*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*000102fc*/ BL          0x00000000000102FC          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010300*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00010304*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00010308*/ MOVW        IP, #12192                  @ 0x2fa0 
    /*0001030c*/ ADD         LR, SP, #88                 @ 0x58 
    /*00010310*/ ADD         R3, R9, R8 
    /*00010314*/ MLA         IP, IP, R7, R2 
    /*00010318*/ MOV         R1, R5 
    /*0001031c*/ MOV         R0, LR 
    /*00010320*/ MOV         R2, #336                    @ 0x150 
    /*00010324*/ MOV         R9, #1 
    /*00010328*/ LDR         FP, [R6, R3, LSL #2] 
    /*0001032c*/ STR         LR, [SP, #68]               @ 0x44 
    /*00010330*/ MOV         R3, #0 
    /*00010334*/ MOV         LR, #16 
    /*00010338*/ STR         R3, [SP, #72]               @ 0x48 
    /*0001033c*/ LDR         IP, [IP, #152]              @ 0x98 
    /*00010340*/ STR         LR, [SP, #424]              @ 0x1a8 
    /*00010344*/ STR         R3, [SP, #428]              @ 0x1ac 
    /*00010348*/ STR         IP, [SP, #36]               @ 0x24 
    /*0001034c*/ STR         R9, [SP, #56]               @ 0x38 
    /*00010350*/ LDR         SL, [R5, #24] 
    /*00010354*/ BL          0x0000000000010354          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00010358*/ LDRD        R2, [SP, #208]              @ 0xd0 
    /*0001035c*/ MOV         R0, R9 
    /*00010360*/ STRD        R2, [SP, #24] 
    /*00010364*/ LDR         R3, [SP, #416]              @ 0x1a0 
    /*00010368*/ STR         R3, [SP, #32] 
    /*0001036c*/ BL          0x000000000001036C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00010370*/ LDRD        R2, [SP, #24] 
    /*00010374*/ LDR         R1, [R0, #84]               @ 0x54 
    /*00010378*/ LDR         R0, [SP, #32] 
    /*0001037c*/ BLX         R1 
    /*00010380*/ CMP         R0, #0 
    /*00010384*/ BEQ         VouUsrSendFrameTimeOut_x10874
    /*00010388*/ MOV         R0, R9 
    /*0001038c*/ BL          0x000000000001038C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00010390*/ LDR         R3, [R0, #36]               @ 0x24 
    /*00010394*/ LDRD        R0, [SP, #208]              @ 0xd0 
    /*00010398*/ BLX         R3 
    /*0001039c*/ STR         R0, [SP, #32] 
    /*000103a0*/ MOV         R0, R9 
    /*000103a4*/ BL          0x00000000000103A4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000103a8*/ LDR         R2, [SP, #32] 
    /*000103ac*/ LDR         R3, [R0, #100]              @ 0x64 
    /*000103b0*/ MOV         R0, R2 
    /*000103b4*/ BLX         R3 
    /*000103b8*/ MOV         R2, #64                     @ 0x40 
    /*000103bc*/ MOV         R1, R0 
    /*000103c0*/ ADD         R0, SP, #352                @ 0x160 
    /*000103c4*/ BL          0x00000000000103C4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000103c8*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*000103cc*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*000103d0*/ BL          0x00000000000103D0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*000103d4*/ CMP         R0, #0 
    /*000103d8*/ BNE         VouUsrSendFrameTimeOut_x1070c
    /*000103dc*/ LDR         R3, [FP, #4] 
    /*000103e0*/ CMP         R3, #0 
    /*000103e4*/ BEQ         VouUsrSendFrameTimeOut_x108d4
    /*000103e8*/ MOV         R0, R9 
    /*000103ec*/ BL          0x00000000000103EC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000103f0*/ LDRD        R2, [R5, #120]              @ 0x78 
    /*000103f4*/ LDR         R1, [R0, #84]               @ 0x54 
    /*000103f8*/ LDR         R0, [R5, #328]              @ 0x148 
    /*000103fc*/ BLX         R1 
    /*00010400*/ CMP         R0, #1 
    /*00010404*/ BNE         VouUsrSendFrameTimeOut_x108a0
    /*00010408*/ LDR         IP, [R5, #12] 
    /*0001040c*/ SUB         R3, IP, #25 
    /*00010410*/ CMP         IP, #39                     @ 0x27 
    /*00010414*/ CMPNE       R3, #1 
    /*00010418*/ BHI         VouUsrSendFrameTimeOut_x10998
    /*0001041c*/ LDR         R3, [R5] 
    /*00010420*/ LDR         R2, [R5, #4] 
    /*00010424*/ CMP         R3, #31 
    /*00010428*/ BLS         VouUsrSendFrameTimeOut_x10810
    /*0001042c*/ CMP         R2, #31 
    /*00010430*/ BLS         VouUsrSendFrameTimeOut_x10810
    /*00010434*/ ORR         R1, R3, R2 
    /*00010438*/ TST         R1, #1 
    /*0001043c*/ BNE         VouUsrSendFrameTimeOut_x10848
    /*00010440*/ LDR         R3, [R5, #20] 
    /*00010444*/ CMP         R3, #1 
    /*00010448*/ BHI         VouUsrSendFrameTimeOut_x10914
    /*0001044c*/ LDR         R2, [R5, #16] 
    /*00010450*/ CMP         R2, #3 
    /*00010454*/ CMPNE       R2, #1 
    /*00010458*/ BHI         VouUsrSendFrameTimeOut_x109ec
    /*0001045c*/ LDR         R2, [R5, #8] 
    /*00010460*/ SUB         R1, R2, #1 
    /*00010464*/ CMP         R1, #3 
    /*00010468*/ BHI         VouUsrSendFrameTimeOut_x10a14
    /*0001046c*/ CMP         R3, #0 
    /*00010470*/ BNE         VouUsrSendFrameTimeOut_x105cc
    VouUsrSendFrameTimeOut_x10474:
    /*00010474*/ LDR         R3, [R5, #24] 
    /*00010478*/ CMP         R3, #5 
    /*0001047c*/ BHI         VouUsrSendFrameTimeOut_x10a3c
    /*00010480*/ SUB         R3, SL, #4 
    /*00010484*/ CMP         R3, #1 
    /*00010488*/ BLS         VouUsrSendFrameTimeOut_x10a64
    /*0001048c*/ CMP         SL, #1 
    /*00010490*/ BLS         VouUsrSendFrameTimeOut_x10718
    VouUsrSendFrameTimeOut_x10494:
    /*00010494*/ CMN         R4, #1 
    /*00010498*/ BLT         VouUsrSendFrameTimeOut_x109c0
    /*0001049c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*000104a0*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*000104a4*/ BL          0x00000000000104A4          @ osal_up [R_ARM_CALL: +0x0] 
    /*000104a8*/ CMP         R4, #0 
    /*000104ac*/ BEQ         VouUsrSendFrameTimeOut_x10574
    /*000104b0*/ LDR         IP, [FP, #24] 
    /*000104b4*/ ADD         R9, FP, #9472               @ 0x2500 
    /*000104b8*/ ADDS        IP, IP, #0 
    /*000104bc*/ MOVNE       IP, #1 
    /*000104c0*/ CMP         R4, #0 
    /*000104c4*/ BLE         VouUsrSendFrameTimeOut_x10688
    /*000104c8*/ MOVW        R3, #0                      @ VO_WaitChnSendTimeOutCallBack [R_ARM_MOVW_ABS_NC: .text+0x4bec] 
    /*000104cc*/ MOVT        R3, #0                      @ VO_WaitChnSendTimeOutCallBack [R_ARM_MOVT_ABS: .text+0x4bec] 
    /*000104d0*/ ADD         R9, R9, #28 
    /*000104d4*/ MOV         R0, R8 
    /*000104d8*/ MOV         SL, R3 
    /*000104dc*/ STR         R7, [SP, #40]               @ 0x28 
    /*000104e0*/ MOV         R3, R7 
    /*000104e4*/ STR         R8, [SP, #44]               @ 0x2c 
    /*000104e8*/ STR         IP, [SP, #48]               @ 0x30 
    /*000104ec*/ STR         R7, [SP, #32] 
    /*000104f0*/ STR         R5, [SP, #24] 
    /*000104f4*/ B           VouUsrSendFrameTimeOut_x10518
    VouUsrSendFrameTimeOut_x104f8:
    /*000104f8*/ BL          0x00000000000104F8          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*000104fc*/ ADD         R3, R0, #512                @ 0x200 
    /*00010500*/ MOV         R4, R0 
    /*00010504*/ BICS        R3, R3, #512                @ 0x200 
    /*00010508*/ BEQ         VouUsrSendFrameTimeOut_x10780
    /*0001050c*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00010510*/ LDR         R0, [SP, #44]               @ 0x2c 
    /*00010514*/ LDR         IP, [SP, #48]               @ 0x30 
    VouUsrSendFrameTimeOut_x10518:
    /*00010518*/ ADD         R0, R0, R3, LSL #2 
    /*0001051c*/ ADD         R2, SP, #40                 @ 0x28 
    /*00010520*/ MOV         R3, R4 
    /*00010524*/ MOV         R1, SL 
    /*00010528*/ LDR         LR, [R6, R0, LSL #2] 
    /*0001052c*/ MOV         R0, R9 
    /*00010530*/ ADD         R7, LR, #8192               @ 0x2000 
    /*00010534*/ LDR         R5, [R7, #1024]             @ 0x400 
    /*00010538*/ CMP         R5, #0 
    /*0001053c*/ BEQ         VouUsrSendFrameTimeOut_x104f8
    /*00010540*/ LDR         R7, [R7, #1020]             @ 0x3fc 
    /*00010544*/ LDR         LR, [LR, #1152]             @ 0x480 
    /*00010548*/ ADD         IP, IP, R7 
    /*0001054c*/ CMP         IP, LR 
    /*00010550*/ BCS         VouUsrSendFrameTimeOut_x104f8
    /*00010554*/ MOV         R0, R4 
    /*00010558*/ LDR         R7, [SP, #32] 
    /*0001055c*/ LDR         R5, [SP, #24] 
    /*00010560*/ BL          0x0000000000010560          @ osal_msecs_to_jiffies [R_ARM_CALL: +0x0] 
    /*00010564*/ MOV         R4, R0 
    VouUsrSendFrameTimeOut_x10568:
    /*00010568*/ CMP         R4, #0 
    /*0001056c*/ BLT         VouUsrSendFrameTimeOut_x1070c
    /*00010570*/ BEQ         VouUsrSendFrameTimeOut_x107b0
    VouUsrSendFrameTimeOut_x10574:
    /*00010574*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00010578*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0001057c*/ BL          0x000000000001057C          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00010580*/ CMP         R0, #0 
    /*00010584*/ BNE         VouUsrSendFrameTimeOut_x1070c
    /*00010588*/ LDR         R3, [FP, #4] 
    /*0001058c*/ CMP         R3, #0 
    /*00010590*/ BEQ         VouUsrSendFrameTimeOut_x1093c
    /*00010594*/ LDRD        R4, [R5, #240]              @ 0xf0 
    /*00010598*/ ADD         R2, SP, #56                 @ 0x38 
    /*0001059c*/ MOV         R1, R8 
    /*000105a0*/ MOV         R0, R7 
    /*000105a4*/ STRD        R4, [FP, #208]              @ 0xd0 
    /*000105a8*/ BL          0x00000000000105A8          @ VouChnVpssSend [R_ARM_CALL: .text+0xfe10] 
    /*000105ac*/ SUBS        SL, R0, #0 
    /*000105b0*/ BNE         VouUsrSendFrameTimeOut_x10754
    VouUsrSendFrameTimeOut_x105b4:
    /*000105b4*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*000105b8*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*000105bc*/ BL          0x00000000000105BC          @ osal_up [R_ARM_CALL: +0x0] 
    VouUsrSendFrameTimeOut_x105c0:
    /*000105c0*/ MOV         R0, SL 
    /*000105c4*/ ADD         SP, SP, #452                @ 0x1c4 
    /*000105c8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouUsrSendFrameTimeOut_x105cc:
    /*000105cc*/ LDRD        R2, [R5, #72]               @ 0x48 
    /*000105d0*/ ORRS        R1, R2, R3 
    /*000105d4*/ BEQ         VouUsrSendFrameTimeOut_x10968
    /*000105d8*/ AND         R0, R2, #1 
    /*000105dc*/ MOV         R1, #0 
    /*000105e0*/ ORRS        R1, R0, R1 
    /*000105e4*/ BNE         VouUsrSendFrameTimeOut_x10968
    /*000105e8*/ CMP         IP, #39                     @ 0x27 
    /*000105ec*/ BEQ         VouUsrSendFrameTimeOut_x10474
    /*000105f0*/ LDRD        R2, [R5, #80]               @ 0x50 
    /*000105f4*/ ORRS        R1, R2, R3 
    /*000105f8*/ BEQ         VouUsrSendFrameTimeOut_x1060c
    /*000105fc*/ AND         R0, R2, #1 
    /*00010600*/ MOV         R1, #0 
    /*00010604*/ ORRS        R1, R0, R1 
    /*00010608*/ BEQ         VouUsrSendFrameTimeOut_x10474
    VouUsrSendFrameTimeOut_x1060c:
    /*0001060c*/ STRD        R2, [SP, #16] 
    /*00010610*/ MOVW        R1, #5619                   @ 0x15f3 
    /*00010614*/ STRD        R2, [SP, #8] 
    /*00010618*/ MOV         R0, #3 
    /*0001061c*/ MOVW        R2, #0                      @ .LC206 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5a34] 
    /*00010620*/ STR         R1, [SP] 
    /*00010624*/ MOVT        R2, #0                      @ .LC206 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5a34] 
    /*00010628*/ LDR         R3, [PC, #1172]             @ 0x0000000000010ac4 
    /*0001062c*/ MOV         R1, #15 
    /*00010630*/ BL          0x0000000000010630          @ HI_LOG [R_ARM_CALL: +0x0] 
    VouUsrSendFrameTimeOut_x10634:
    /*00010634*/ MOVW        R3, #5706                   @ 0x164a 
    /*00010638*/ STR         R3, [SP] 
    /*0001063c*/ LDR         R3, [PC, #1156]             @ 0x0000000000010ac8 
    /*00010640*/ MOVW        R2, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5398] 
    /*00010644*/ MOVT        R2, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5398] 
    /*00010648*/ MOV         R1, #15 
    /*0001064c*/ MOV         R0, #3 
    /*00010650*/ MOVW        SL, #32847                  @ 0x804f 
    /*00010654*/ STR         R8, [SP, #8] 
    /*00010658*/ STR         R7, [SP, #4] 
    VouUsrSendFrameTimeOut_x1065c:
    /*0001065c*/ BL          0x000000000001065C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010660*/ LDR         R3, [FP, #180]              @ 0xb4 
    /*00010664*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00010668*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*0001066c*/ ADD         R3, R3, #1 
    /*00010670*/ STR         R3, [FP, #180]              @ 0xb4 
    /*00010674*/ BL          0x0000000000010674          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010678*/ MOVT        SL, #40975                  @ 0xa00f 
    /*0001067c*/ MOV         R0, SL 
    /*00010680*/ ADD         SP, SP, #452                @ 0x1c4 
    /*00010684*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouUsrSendFrameTimeOut_x10688:
    /*00010688*/ MOVW        R4, #0                      @ VO_WaitChnSendTimeOutCallBack [R_ARM_MOVW_ABS_NC: .text+0x4bec] 
    /*0001068c*/ ADD         R9, R9, #28 
    /*00010690*/ MOVT        R4, #0                      @ VO_WaitChnSendTimeOutCallBack [R_ARM_MOVT_ABS: .text+0x4bec] 
    /*00010694*/ MOV         LR, R8 
    /*00010698*/ MOV         SL, R7 
    /*0001069c*/ STR         R7, [SP, #40]               @ 0x28 
    /*000106a0*/ STR         R8, [SP, #44]               @ 0x2c 
    /*000106a4*/ STR         IP, [SP, #48]               @ 0x30 
    /*000106a8*/ STR         R5, [SP, #32] 
    /*000106ac*/ B           VouUsrSendFrameTimeOut_x106c8
    VouUsrSendFrameTimeOut_x106b0:
    /*000106b0*/ BL          0x00000000000106B0          @ osal_wait_timeout_interruptible [R_ARM_CALL: +0x0] 
    /*000106b4*/ CMP         R0, #0 
    /*000106b8*/ BLT         VouUsrSendFrameTimeOut_x10a90
    /*000106bc*/ LDR         SL, [SP, #40]               @ 0x28 
    /*000106c0*/ LDR         LR, [SP, #44]               @ 0x2c 
    /*000106c4*/ LDR         IP, [SP, #48]               @ 0x30 
    VouUsrSendFrameTimeOut_x106c8:
    /*000106c8*/ ADD         LR, LR, SL, LSL #2 
    /*000106cc*/ MOV         R3, #100                    @ 0x64 
    /*000106d0*/ ADD         R2, SP, #40                 @ 0x28 
    /*000106d4*/ MOV         R1, R4 
    /*000106d8*/ LDR         LR, [R6, LR, LSL #2] 
    /*000106dc*/ MOV         R0, R9 
    /*000106e0*/ ADD         SL, LR, #8192               @ 0x2000 
    /*000106e4*/ LDR         R5, [SL, #1024]             @ 0x400 
    /*000106e8*/ CMP         R5, #0 
    /*000106ec*/ BEQ         VouUsrSendFrameTimeOut_x106b0
    /*000106f0*/ LDR         SL, [SL, #1020]             @ 0x3fc 
    /*000106f4*/ LDR         LR, [LR, #1152]             @ 0x480 
    /*000106f8*/ ADD         IP, IP, SL 
    /*000106fc*/ CMP         IP, LR 
    /*00010700*/ BCS         VouUsrSendFrameTimeOut_x106b0
    /*00010704*/ LDR         R5, [SP, #32] 
    /*00010708*/ B           VouUsrSendFrameTimeOut_x10574
    VouUsrSendFrameTimeOut_x1070c:
    /*0001070c*/ MOV         SL, #65024                  @ 0xfe00 
    /*00010710*/ MOVT        SL, #65535                  @ 0xffff 
    /*00010714*/ B           VouUsrSendFrameTimeOut_x105c0
    VouUsrSendFrameTimeOut_x10718:
    /*00010718*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0001071c*/ SUB         R3, R3, #2 
    /*00010720*/ CMP         R3, #2 
    /*00010724*/ BHI         VouUsrSendFrameTimeOut_x10494
    /*00010728*/ MOVW        R3, #5726                   @ 0x165e 
    /*0001072c*/ MOVW        R2, #0                      @ .LC196 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5730] 
    /*00010730*/ STR         R3, [SP] 
    /*00010734*/ MOVT        R2, #0                      @ .LC196 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5730] 
    /*00010738*/ STR         R8, [SP, #8] 
    /*0001073c*/ MOV         R1, #15 
    /*00010740*/ STR         R7, [SP, #4] 
    /*00010744*/ MOV         R0, #3 
    /*00010748*/ LDR         R3, [PC, #888]              @ 0x0000000000010ac8 
    /*0001074c*/ MOVW        SL, #32776                  @ 0x8008 
    /*00010750*/ B           VouUsrSendFrameTimeOut_x1065c
    VouUsrSendFrameTimeOut_x10754:
    /*00010754*/ MOVW        R3, #5852                   @ 0x16dc 
    /*00010758*/ STR         R8, [SP, #8] 
    /*0001075c*/ STR         R3, [SP] 
    /*00010760*/ MOVW        R2, #0                      @ .LC210 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b70] 
    /*00010764*/ STR         R7, [SP, #4] 
    /*00010768*/ MOVT        R2, #0                      @ .LC210 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b70] 
    /*0001076c*/ LDR         R3, [PC, #852]              @ 0x0000000000010ac8 
    /*00010770*/ MOV         R1, #15 
    /*00010774*/ MOV         R0, #3 
    /*00010778*/ BL          0x0000000000010778          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001077c*/ B           VouUsrSendFrameTimeOut_x105b4
    VouUsrSendFrameTimeOut_x10780:
    /*00010780*/ LDR         R7, [SP, #32] 
    /*00010784*/ LDR         R5, [SP, #24] 
    /*00010788*/ B           VouUsrSendFrameTimeOut_x10568
    VouUsrSendFrameTimeOut_x1078c:
    /*0001078c*/ MOVW        SL, #32877                  @ 0x806d 
    /*00010790*/ MOVT        SL, #40975                  @ 0xa00f 
    /*00010794*/ B           VouUsrSendFrameTimeOut_x105c0
    VouUsrSendFrameTimeOut_x10798:
    /*00010798*/ MOVW        SL, #32770                  @ 0x8002 
    /*0001079c*/ MOVT        SL, #40975                  @ 0xa00f 
    /*000107a0*/ B           VouUsrSendFrameTimeOut_x105c0
    VouUsrSendFrameTimeOut_x107a4:
    /*000107a4*/ MOVW        SL, #32774                  @ 0x8006 
    /*000107a8*/ MOVT        SL, #40975                  @ 0xa00f 
    /*000107ac*/ B           VouUsrSendFrameTimeOut_x105c0
    VouUsrSendFrameTimeOut_x107b0:
    /*000107b0*/ MOVW        R3, #5815                   @ 0x16b7 
    /*000107b4*/ STR         R8, [SP, #8] 
    /*000107b8*/ STR         R3, [SP] 
    /*000107bc*/ MOVW        R2, #0                      @ .LC209 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b24] 
    /*000107c0*/ STR         R7, [SP, #4] 
    /*000107c4*/ MOVT        R2, #0                      @ .LC209 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b24] 
    /*000107c8*/ LDR         R3, [PC, #760]              @ 0x0000000000010ac8 
    /*000107cc*/ MOV         R1, #15 
    /*000107d0*/ MOV         R0, #3 
    /*000107d4*/ MOVW        SL, #32786                  @ 0x8012 
    /*000107d8*/ BL          0x00000000000107D8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000107dc*/ MOVT        SL, #40975                  @ 0xa00f 
    /*000107e0*/ B           VouUsrSendFrameTimeOut_x105c0
    VouUsrSendFrameTimeOut_x107e4:
    /*000107e4*/ MOV         R1, R8 
    /*000107e8*/ MOV         R0, R7 
    /*000107ec*/ BL          0x0000000000005468 
    /*000107f0*/ SUBS        SL, R0, #0 
    /*000107f4*/ BEQ         VouUsrSendFrameTimeOut_x102f4
    /*000107f8*/ MOVW        R0, #0                      @ g_stChnSem [R_ARM_MOVW_ABS_NC: .bss+0x30b4] 
    /*000107fc*/ MOVT        R0, #0                      @ g_stChnSem [R_ARM_MOVT_ABS: .bss+0x30b4] 
    /*00010800*/ BL          0x0000000000010800          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010804*/ MOV         R0, SL 
    /*00010808*/ ADD         SP, SP, #452                @ 0x1c4 
    /*0001080c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouUsrSendFrameTimeOut_x10810:
    /*00010810*/ MOV         R1, #32 
    /*00010814*/ STR         R2, [SP, #12] 
    /*00010818*/ STR         R3, [SP, #4] 
    /*0001081c*/ MOVW        R2, #0                      @ .LC201 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5894] 
    /*00010820*/ MOVW        R3, #5571                   @ 0x15c3 
    /*00010824*/ STR         R1, [SP, #16] 
    /*00010828*/ STR         R1, [SP, #8] 
    /*0001082c*/ MOVT        R2, #0                      @ .LC201 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5894] 
    /*00010830*/ STR         R3, [SP] 
    /*00010834*/ MOV         R1, #15 
    /*00010838*/ LDR         R3, [PC, #644]              @ 0x0000000000010ac4 
    /*0001083c*/ MOV         R0, #3 
    /*00010840*/ BL          0x0000000000010840          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010844*/ B           VouUsrSendFrameTimeOut_x10634
    VouUsrSendFrameTimeOut_x10848:
    /*00010848*/ STR         R2, [SP, #8] 
    /*0001084c*/ MOVW        R1, #5579                   @ 0x15cb 
    /*00010850*/ STR         R3, [SP, #4] 
    /*00010854*/ MOVW        R2, #0                      @ .LC202 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5910] 
    /*00010858*/ STR         R1, [SP] 
    /*0001085c*/ MOVT        R2, #0                      @ .LC202 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5910] 
    /*00010860*/ LDR         R3, [PC, #604]              @ 0x0000000000010ac4 
    /*00010864*/ MOV         R1, #15 
    /*00010868*/ MOV         R0, #3 
    /*0001086c*/ BL          0x000000000001086C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010870*/ B           VouUsrSendFrameTimeOut_x10634
    VouUsrSendFrameTimeOut_x10874:
    /*00010874*/ MOVW        R3, #5685                   @ 0x1635 
    /*00010878*/ MOVW        R2, #0                      @ .LC200 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x586c] 
    /*0001087c*/ STR         R3, [SP] 
    /*00010880*/ MOVT        R2, #0                      @ .LC200 [R_ARM_MOVT_ABS: .rodata.str1.4+0x586c] 
    /*00010884*/ LDR         R3, [PC, #572]              @ 0x0000000000010ac8 
    /*00010888*/ MOV         R1, #15 
    /*0001088c*/ MOV         R0, #3 
    /*00010890*/ MOVW        SL, #32771                  @ 0x8003 
    /*00010894*/ BL          0x0000000000010894          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010898*/ MOVT        SL, #40975                  @ 0xa00f 
    /*0001089c*/ B           VouUsrSendFrameTimeOut_x105c0
    VouUsrSendFrameTimeOut_x108a0:
    /*000108a0*/ LDRD        R0, [R5, #120]              @ 0x78 
    /*000108a4*/ MOVW        IP, #5556                   @ 0x15b4 
    /*000108a8*/ LDR         R3, [R5, #328]              @ 0x148 
    /*000108ac*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x21fc] 
    /*000108b0*/ STR         IP, [SP] 
    /*000108b4*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x21fc] 
    /*000108b8*/ STRD        R0, [SP, #8] 
    /*000108bc*/ MOV         R1, #15 
    /*000108c0*/ STR         R3, [SP, #4] 
    /*000108c4*/ MOV         R0, #3 
    /*000108c8*/ LDR         R3, [PC, #500]              @ 0x0000000000010ac4 
    /*000108cc*/ BL          0x00000000000108CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000108d0*/ B           VouUsrSendFrameTimeOut_x10634
    VouUsrSendFrameTimeOut_x108d4:
    /*000108d4*/ MOVW        R3, #5699                   @ 0x1643 
    /*000108d8*/ STR         R3, [SP] 
    /*000108dc*/ LDR         R3, [PC, #484]              @ 0x0000000000010ac8 
    /*000108e0*/ MOVW        R2, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x391c] 
    /*000108e4*/ MOVT        R2, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0x391c] 
    /*000108e8*/ MOV         R1, #15 
    /*000108ec*/ MOV         R0, #4 
    /*000108f0*/ MOVW        SL, #32841                  @ 0x8049 
    /*000108f4*/ STR         R8, [SP, #8] 
    /*000108f8*/ STR         R7, [SP, #4] 
    VouUsrSendFrameTimeOut_x108fc:
    /*000108fc*/ BL          0x00000000000108FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010900*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00010904*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00010908*/ MOVT        SL, #40975                  @ 0xa00f 
    /*0001090c*/ BL          0x000000000001090C          @ osal_up [R_ARM_CALL: +0x0] 
    /*00010910*/ B           VouUsrSendFrameTimeOut_x105c0
    VouUsrSendFrameTimeOut_x10914:
    /*00010914*/ STR         R3, [SP, #4] 
    /*00010918*/ MOVW        R2, #0                      @ .LC203 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5968] 
    /*0001091c*/ MOVW        R3, #5585                   @ 0x15d1 
    /*00010920*/ MOVT        R2, #0                      @ .LC203 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5968] 
    /*00010924*/ STR         R3, [SP] 
    /*00010928*/ MOV         R1, #15 
    /*0001092c*/ LDR         R3, [PC, #400]              @ 0x0000000000010ac4 
    /*00010930*/ MOV         R0, #3 
    /*00010934*/ BL          0x0000000000010934          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010938*/ B           VouUsrSendFrameTimeOut_x10634
    VouUsrSendFrameTimeOut_x1093c:
    /*0001093c*/ MOVW        R3, #5839                   @ 0x16cf 
    /*00010940*/ MOVW        R2, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x391c] 
    /*00010944*/ STR         R3, [SP] 
    /*00010948*/ MOVT        R2, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0x391c] 
    /*0001094c*/ STR         R8, [SP, #8] 
    /*00010950*/ MOV         R1, #15 
    /*00010954*/ STR         R7, [SP, #4] 
    /*00010958*/ MOV         R0, #3 
    /*0001095c*/ LDR         R3, [PC, #356]              @ 0x0000000000010ac8 
    /*00010960*/ MOVW        SL, #32841                  @ 0x8049 
    /*00010964*/ B           VouUsrSendFrameTimeOut_x108fc
    VouUsrSendFrameTimeOut_x10968:
    /*00010968*/ LDRD        R0, [R5, #80]               @ 0x50 
    /*0001096c*/ MOVW        IP, #5609                   @ 0x15e9 
    /*00010970*/ STRD        R2, [SP, #8] 
    /*00010974*/ MOVW        R2, #0                      @ .LC206 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5a34] 
    /*00010978*/ STR         IP, [SP] 
    /*0001097c*/ MOVT        R2, #0                      @ .LC206 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5a34] 
    /*00010980*/ STRD        R0, [SP, #16] 
    /*00010984*/ MOV         R1, #15 
    /*00010988*/ LDR         R3, [PC, #308]              @ 0x0000000000010ac4 
    /*0001098c*/ MOV         R0, #3 
    /*00010990*/ BL          0x0000000000010990          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010994*/ B           VouUsrSendFrameTimeOut_x10634
    VouUsrSendFrameTimeOut_x10998:
    /*00010998*/ MOVW        R3, #5564                   @ 0x15bc 
    /*0001099c*/ STR         IP, [SP, #4] 
    /*000109a0*/ STR         R3, [SP] 
    /*000109a4*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x223c] 
    /*000109a8*/ LDR         R3, [PC, #276]              @ 0x0000000000010ac4 
    /*000109ac*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x223c] 
    /*000109b0*/ MOV         R1, #15 
    /*000109b4*/ MOV         R0, #3 
    /*000109b8*/ BL          0x00000000000109B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000109bc*/ B           VouUsrSendFrameTimeOut_x10634
    VouUsrSendFrameTimeOut_x109c0:
    /*000109c0*/ MOVW        R3, #5734                   @ 0x1666 
    /*000109c4*/ MOVW        R2, #0                      @ .LC208 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5ac8] 
    /*000109c8*/ STR         R3, [SP] 
    /*000109cc*/ MOVT        R2, #0                      @ .LC208 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5ac8] 
    /*000109d0*/ STR         R8, [SP, #8] 
    /*000109d4*/ MOV         R1, #15 
    /*000109d8*/ STR         R7, [SP, #4] 
    /*000109dc*/ MOV         R0, #3 
    /*000109e0*/ LDR         R3, [PC, #224]              @ 0x0000000000010ac8 
    /*000109e4*/ MOVW        SL, #32771                  @ 0x8003 
    /*000109e8*/ B           VouUsrSendFrameTimeOut_x108fc
    VouUsrSendFrameTimeOut_x109ec:
    /*000109ec*/ STR         R2, [SP, #4] 
    /*000109f0*/ MOVW        R3, #5593                   @ 0x15d9 
    /*000109f4*/ MOVW        R2, #0                      @ .LC204 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x59ac] 
    /*000109f8*/ STR         R3, [SP] 
    /*000109fc*/ MOVT        R2, #0                      @ .LC204 [R_ARM_MOVT_ABS: .rodata.str1.4+0x59ac] 
    /*00010a00*/ LDR         R3, [PC, #188]              @ 0x0000000000010ac4 
    /*00010a04*/ MOV         R1, #15 
    /*00010a08*/ MOV         R0, #3 
    /*00010a0c*/ BL          0x0000000000010A0C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010a10*/ B           VouUsrSendFrameTimeOut_x10634
    VouUsrSendFrameTimeOut_x10a14:
    /*00010a14*/ STR         R2, [SP, #4] 
    /*00010a18*/ MOVW        R3, #5599                   @ 0x15df 
    /*00010a1c*/ MOVW        R2, #0                      @ .LC205 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x59f0] 
    /*00010a20*/ STR         R3, [SP] 
    /*00010a24*/ MOVT        R2, #0                      @ .LC205 [R_ARM_MOVT_ABS: .rodata.str1.4+0x59f0] 
    /*00010a28*/ LDR         R3, [PC, #148]              @ 0x0000000000010ac4 
    /*00010a2c*/ MOV         R1, #15 
    /*00010a30*/ MOV         R0, #3 
    /*00010a34*/ BL          0x0000000000010A34          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010a38*/ B           VouUsrSendFrameTimeOut_x10634
    VouUsrSendFrameTimeOut_x10a3c:
    /*00010a3c*/ STR         R3, [SP, #4] 
    /*00010a40*/ MOVW        R2, #0                      @ .LC207 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5a84] 
    /*00010a44*/ MOVW        R3, #5627                   @ 0x15fb 
    /*00010a48*/ MOVT        R2, #0                      @ .LC207 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5a84] 
    /*00010a4c*/ STR         R3, [SP] 
    /*00010a50*/ MOV         R1, #15 
    /*00010a54*/ LDR         R3, [PC, #104]              @ 0x0000000000010ac4 
    /*00010a58*/ MOV         R0, #3 
    /*00010a5c*/ BL          0x0000000000010A5C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010a60*/ B           VouUsrSendFrameTimeOut_x10634
    VouUsrSendFrameTimeOut_x10a64:
    /*00010a64*/ MOVW        R3, #5716                   @ 0x1654 
    /*00010a68*/ MOVW        R2, #0                      @ .LC195 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x56e8] 
    /*00010a6c*/ STR         R3, [SP] 
    /*00010a70*/ MOVT        R2, #0                      @ .LC195 [R_ARM_MOVT_ABS: .rodata.str1.4+0x56e8] 
    /*00010a74*/ STR         R8, [SP, #8] 
    /*00010a78*/ MOV         R1, #15 
    /*00010a7c*/ STR         R7, [SP, #4] 
    /*00010a80*/ MOV         R0, #3 
    /*00010a84*/ LDR         R3, [PC, #60]               @ 0x0000000000010ac8 
    /*00010a88*/ MOVW        SL, #32776                  @ 0x8008 
    /*00010a8c*/ B           VouUsrSendFrameTimeOut_x1065c
    VouUsrSendFrameTimeOut_x10a90:
    /*00010a90*/ MOVW        R3, #5829                   @ 0x16c5 
    /*00010a94*/ STR         R8, [SP, #8] 
    /*00010a98*/ STR         R3, [SP] 
    /*00010a9c*/ MOVW        R2, #0                      @ .LC209 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5b24] 
    /*00010aa0*/ STR         R7, [SP, #4] 
    /*00010aa4*/ MOVT        R2, #0                      @ .LC209 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5b24] 
    /*00010aa8*/ LDR         R3, [PC, #24]               @ 0x0000000000010ac8 
    /*00010aac*/ MOV         R1, #15 
    /*00010ab0*/ MOV         R0, #3 
    /*00010ab4*/ MOV         SL, #65024                  @ 0xfe00 
    /*00010ab8*/ BL          0x0000000000010AB8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010abc*/ MOVT        SL, #65535                  @ 0xffff 
    /*00010ac0*/ B           VouUsrSendFrameTimeOut_x105c0
    /*00010ac4*/ ANDEQ       R0, R0, R0, LSR #20 
    /*00010ac8*/ ANDEQ       R0, R0, R8, LSL #20 
FUNC_END VouUsrSendFrameTimeOut


FUNC_BEGIN VouChnSdVdecSendNoQuery
    /*00010acc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00010ad0*/ MOV         R6, R0 
    /*00010ad4*/ LDR         R0, [R2] 
    /*00010ad8*/ MOV         R5, R2 
    /*00010adc*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00010ae0*/ ADD         R2, R1, R6, LSL #2 
    /*00010ae4*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00010ae8*/ CMP         R0, #0 
    /*00010aec*/ SUB         SP, SP, #20 
    /*00010af0*/ MOV         R7, R1 
    /*00010af4*/ LDR         R4, [R3, R2, LSL #2] 
    /*00010af8*/ BEQ         VouChnSdVdecSendNoQuery_x10c84
    /*00010afc*/ LDR         R0, [R5, #12] 
    /*00010b00*/ BL          0x00000000000053A8 
    /*00010b04*/ SUBS        R9, R0, #0 
    /*00010b08*/ BNE         VouChnSdVdecSendNoQuery_x10ce4
    /*00010b0c*/ LDR         R8, [R5, #12] 
    /*00010b10*/ LDRD        R2, [R8, #240]              @ 0xf0 
    /*00010b14*/ ORRS        R1, R2, R3 
    /*00010b18*/ BEQ         VouChnSdVdecSendNoQuery_x10c38
    VouChnSdVdecSendNoQuery_x10b1c:
    /*00010b1c*/ MVN         R1, #0 
    /*00010b20*/ CMP         R3, R1 
    /*00010b24*/ MVN         R0, #0 
    /*00010b28*/ CMPEQ       R2, R0 
    /*00010b2c*/ BEQ         VouChnSdVdecSendNoQuery_x10c50
    /*00010b30*/ LDR         SL, [R4, #344]              @ 0x158 
    /*00010b34*/ MOV         R2, R8 
    /*00010b38*/ MOV         R1, R7 
    /*00010b3c*/ MOV         R0, R6 
    /*00010b40*/ MOV         R3, SL 
    /*00010b44*/ BL          0x0000000000010B44          @ VouChnResetScalePts [R_ARM_CALL: .text+0xdcb4] 
    /*00010b48*/ LDR         R3, [R4, #328]              @ 0x148 
    /*00010b4c*/ CMP         R3, #0 
    /*00010b50*/ BEQ         VouChnSdVdecSendNoQuery_x10cb4
    /*00010b54*/ MOV         R3, SL 
    /*00010b58*/ MOV         R2, R8 
    /*00010b5c*/ MOV         R1, R7 
    /*00010b60*/ MOV         R0, R6 
    /*00010b64*/ BL          0x0000000000010B64          @ VouChnPlayFrmRtControl [R_ARM_CALL: .text+0xddcc] 
    /*00010b68*/ SUBS        SL, R0, #0 
    /*00010b6c*/ BNE         VouChnSdVdecSendNoQuery_x10bf8
    /*00010b70*/ ADD         R8, R4, #8960               @ 0x2300 
    /*00010b74*/ ADD         R8, R8, #56                 @ 0x38 
    /*00010b78*/ MOV         R0, R8 
    /*00010b7c*/ BL          0x0000000000010B7C          @ VouBufGetFree [R_ARM_CALL: .text+0x3e84] 
    /*00010b80*/ SUBS        FP, R0, #0 
    /*00010b84*/ BEQ         VouChnSdVdecSendNoQuery_x10d24
    /*00010b88*/ LDR         R6, [FP] 
    /*00010b8c*/ MOV         R2, #336                    @ 0x150 
    /*00010b90*/ LDR         R1, [R5, #12] 
    /*00010b94*/ MOV         R9, SL 
    /*00010b98*/ MOV         R0, R6 
    /*00010b9c*/ BL          0x0000000000010B9C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00010ba0*/ MOV         R3, #1 
    /*00010ba4*/ MOV         R1, FP 
    /*00010ba8*/ STR         R3, [R6, #676]              @ 0x2a4 
    /*00010bac*/ MOV         R0, R8 
    /*00010bb0*/ STR         SL, [R6, #672]              @ 0x2a0 
    /*00010bb4*/ BL          0x0000000000010BB4          @ VouBufPutBusy [R_ARM_CALL: .text+0x3e58] 
    /*00010bb8*/ MOV         R0, R6 
    /*00010bbc*/ BL          0x0000000000010BBC          @ VouBufAddBlkVb [R_ARM_CALL: .text+0x4220] 
    /*00010bc0*/ LDR         R3, [R4, #176]              @ 0xb0 
    /*00010bc4*/ ADD         R1, R4, #304                @ 0x130 
    /*00010bc8*/ ADD         R3, R3, #1 
    /*00010bcc*/ STR         R3, [R4, #176]              @ 0xb0 
    /*00010bd0*/ LDR         R3, [R5, #12] 
    /*00010bd4*/ LDRD        R2, [R3, #120]              @ 0x78 
    /*00010bd8*/ STR         R6, [R4, #344]              @ 0x158 
    /*00010bdc*/ STRD        R2, [R4, #160]              @ 0xa0 
    /*00010be0*/ LDR         R3, [R5, #12] 
    /*00010be4*/ LDRD        R2, [R3, #240]              @ 0xf0 
    /*00010be8*/ STRD        R2, [R1] 
    VouChnSdVdecSendNoQuery_x10bec:
    /*00010bec*/ MOV         R0, R9 
    /*00010bf0*/ ADD         SP, SP, #20 
    /*00010bf4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnSdVdecSendNoQuery_x10bf8:
    /*00010bf8*/ STR         R7, [SP, #8] 
    /*00010bfc*/ MOVW        R3, #12267                  @ 0x2feb 
    /*00010c00*/ STR         R6, [SP, #4] 
    /*00010c04*/ MOV         R1, #15 
    /*00010c08*/ STR         R3, [SP] 
    /*00010c0c*/ MOVW        R2, #0                      @ .LC213 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5c54] 
    /*00010c10*/ LDR         R3, [PC, #312]              @ 0x0000000000010d50 
    /*00010c14*/ MOVT        R2, #0                      @ .LC213 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5c54] 
    /*00010c18*/ MOV         R0, #3 
    /*00010c1c*/ BL          0x0000000000010C1C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010c20*/ LDR         R3, [R4, #180]              @ 0xb4 
    /*00010c24*/ MOV         R0, R9 
    /*00010c28*/ ADD         R3, R3, #1 
    /*00010c2c*/ STR         R3, [R4, #180]              @ 0xb4 
    /*00010c30*/ ADD         SP, SP, #20 
    /*00010c34*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnSdVdecSendNoQuery_x10c38:
    /*00010c38*/ MOV         R2, R8 
    /*00010c3c*/ MOV         R1, R7 
    /*00010c40*/ MOV         R0, R6 
    /*00010c44*/ BL          0x0000000000010C44          @ VouChnTagPseudoPts [R_ARM_CALL: .text+0xe100] 
    /*00010c48*/ LDRD        R2, [R8, #240]              @ 0xf0 
    /*00010c4c*/ B           VouChnSdVdecSendNoQuery_x10b1c
    VouChnSdVdecSendNoQuery_x10c50:
    /*00010c50*/ STR         R7, [SP, #8] 
    /*00010c54*/ MOVW        R3, #12247                  @ 0x2fd7 
    /*00010c58*/ STR         R6, [SP, #4] 
    /*00010c5c*/ MOV         R1, #15 
    /*00010c60*/ STR         R3, [SP] 
    /*00010c64*/ MOVW        R2, #0                      @ .LC211 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5bd4] 
    /*00010c68*/ LDR         R3, [PC, #224]              @ 0x0000000000010d50 
    /*00010c6c*/ MOVT        R2, #0                      @ .LC211 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5bd4] 
    /*00010c70*/ MOV         R0, #7 
    /*00010c74*/ BL          0x0000000000010C74          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010c78*/ MOV         R0, R9 
    /*00010c7c*/ ADD         SP, SP, #20 
    /*00010c80*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnSdVdecSendNoQuery_x10c84:
    /*00010c84*/ STR         R1, [SP, #8] 
    /*00010c88*/ MOV         R3, #12224                  @ 0x2fc0 
    /*00010c8c*/ STR         R6, [SP, #4] 
    /*00010c90*/ MOVW        R2, #0                      @ .LC178 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x52bc] 
    /*00010c94*/ STR         R3, [SP] 
    /*00010c98*/ MOVT        R2, #0                      @ .LC178 [R_ARM_MOVT_ABS: .rodata.str1.4+0x52bc] 
    /*00010c9c*/ LDR         R3, [PC, #172]              @ 0x0000000000010d50 
    /*00010ca0*/ MOV         R1, #15 
    /*00010ca4*/ MOV         R0, #3 
    /*00010ca8*/ MVN         R9, #0 
    /*00010cac*/ BL          0x0000000000010CAC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010cb0*/ B           VouChnSdVdecSendNoQuery_x10bec
    VouChnSdVdecSendNoQuery_x10cb4:
    /*00010cb4*/ MOVW        R3, #12259                  @ 0x2fe3 
    /*00010cb8*/ STR         R7, [SP, #8] 
    /*00010cbc*/ STR         R3, [SP] 
    /*00010cc0*/ MOVW        R2, #0                      @ .LC212 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5c1c] 
    /*00010cc4*/ STR         R6, [SP, #4] 
    /*00010cc8*/ MOVT        R2, #0                      @ .LC212 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5c1c] 
    /*00010ccc*/ LDR         R3, [PC, #124]              @ 0x0000000000010d50 
    /*00010cd0*/ MOV         R1, #15 
    /*00010cd4*/ MOV         R0, #6 
    /*00010cd8*/ MVN         R9, #0 
    /*00010cdc*/ BL          0x0000000000010CDC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010ce0*/ B           VouChnSdVdecSendNoQuery_x10bec
    VouChnSdVdecSendNoQuery_x10ce4:
    /*00010ce4*/ MOVW        R3, #12231                  @ 0x2fc7 
    /*00010ce8*/ STR         R3, [SP] 
    /*00010cec*/ LDR         R3, [PC, #92]               @ 0x0000000000010d50 
    /*00010cf0*/ MOVW        R2, #0                      @ .LC181 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5398] 
    /*00010cf4*/ MOVT        R2, #0                      @ .LC181 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5398] 
    /*00010cf8*/ MOV         R1, #15 
    /*00010cfc*/ MOV         R0, #3 
    /*00010d00*/ MOVW        R9, #32847                  @ 0x804f 
    /*00010d04*/ STR         R7, [SP, #8] 
    /*00010d08*/ STR         R6, [SP, #4] 
    VouChnSdVdecSendNoQuery_x10d0c:
    /*00010d0c*/ BL          0x0000000000010D0C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010d10*/ LDR         R3, [R4, #180]              @ 0xb4 
    /*00010d14*/ MOVT        R9, #40975                  @ 0xa00f 
    /*00010d18*/ ADD         R3, R3, #1 
    /*00010d1c*/ STR         R3, [R4, #180]              @ 0xb4 
    /*00010d20*/ B           VouChnSdVdecSendNoQuery_x10bec
    VouChnSdVdecSendNoQuery_x10d24:
    /*00010d24*/ MOVW        R3, #12276                  @ 0x2ff4 
    /*00010d28*/ MOVW        R2, #0                      @ .LC184 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5474] 
    /*00010d2c*/ STR         R3, [SP] 
    /*00010d30*/ MOVT        R2, #0                      @ .LC184 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5474] 
    /*00010d34*/ STR         R7, [SP, #8] 
    /*00010d38*/ MOV         R1, #15 
    /*00010d3c*/ STR         R6, [SP, #4] 
    /*00010d40*/ MOV         R0, #3 
    /*00010d44*/ LDR         R3, [PC, #4]                @ 0x0000000000010d50 
    /*00010d48*/ MOVW        R9, #32780                  @ 0x800c 
    /*00010d4c*/ B           VouChnSdVdecSendNoQuery_x10d0c
    /*00010d50*/ ANDEQ       R0, R0, R0, LSR SL 
FUNC_END VouChnSdVdecSendNoQuery


FUNC_BEGIN VouGetChnValidData
    /*00010d54*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00010d58*/ ADD         R2, R1, R0, LSL #2 
    /*00010d5c*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00010d60*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00010d64*/ MOV         R5, R0 
    /*00010d68*/ LDR         R4, [R3, R2, LSL #2] 
    /*00010d6c*/ SUB         SP, SP, #28 
    /*00010d70*/ MOV         R6, R1 
    /*00010d74*/ LDR         R3, [R4, #24] 
    /*00010d78*/ CMP         R3, #0 
    /*00010d7c*/ BEQ         VouGetChnValidData_x10ef0
    /*00010d80*/ LDR         R2, [R4, #328]              @ 0x148 
    /*00010d84*/ CMP         R2, #0 
    /*00010d88*/ BNE         VouGetChnValidData_x10dd4
    /*00010d8c*/ MOVW        R3, #12370                  @ 0x3052 
    /*00010d90*/ STR         R1, [SP, #8] 
    /*00010d94*/ STR         R0, [SP, #4] 
    /*00010d98*/ MOVW        R2, #0                      @ .LC215 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5ce0] 
    /*00010d9c*/ STR         R3, [SP] 
    /*00010da0*/ MOVT        R2, #0                      @ .LC215 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5ce0] 
    /*00010da4*/ LDR         R3, [PC, #464]              @ 0x0000000000010f7c 
    /*00010da8*/ MOV         R1, #15 
    /*00010dac*/ MOV         R0, #7 
    /*00010db0*/ BL          0x0000000000010DB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    VouGetChnValidData_x10db4:
    /*00010db4*/ LDR         R3, [R4, #24] 
    /*00010db8*/ LDR         R2, [R3] 
    /*00010dbc*/ LDR         R3, [R2, #672]              @ 0x2a0 
    /*00010dc0*/ ADD         R3, R3, #1 
    /*00010dc4*/ STR         R3, [R2, #672]              @ 0x2a0 
    VouGetChnValidData_x10dc8:
    /*00010dc8*/ LDR         R0, [R4, #24] 
    /*00010dcc*/ ADD         SP, SP, #28 
    /*00010dd0*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouGetChnValidData_x10dd4:
    /*00010dd4*/ LDR         R7, [R3] 
    /*00010dd8*/ MOVW        IP, #12522                  @ 0x30ea 
    /*00010ddc*/ LDR         R3, [PC, #408]              @ 0x0000000000010f7c 
    /*00010de0*/ MOVW        R2, #0                      @ .LC216 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5d14] 
    /*00010de4*/ MOV         R1, #15 
    /*00010de8*/ MOVT        R2, #0                      @ .LC216 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5d14] 
    /*00010dec*/ LDR         LR, [R7, #676]              @ 0x2a4 
    /*00010df0*/ MOV         R0, #7 
    /*00010df4*/ STR         LR, [SP, #16] 
    /*00010df8*/ LDR         LR, [R7, #672]              @ 0x2a0 
    /*00010dfc*/ STR         IP, [SP] 
    /*00010e00*/ STMIB       SP, {R5, R6, LR} 
    /*00010e04*/ BL          0x0000000000010E04          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010e08*/ LDR         R2, [R7, #672]              @ 0x2a0 
    /*00010e0c*/ LDR         R3, [R7, #676]              @ 0x2a4 
    /*00010e10*/ CMP         R2, R3 
    /*00010e14*/ BCC         VouGetChnValidData_x10ec4
    /*00010e18*/ ADD         R8, R4, #8960               @ 0x2300 
    /*00010e1c*/ ADD         R8, R8, #56                 @ 0x38 
    /*00010e20*/ MOV         R0, R8 
    /*00010e24*/ BL          0x0000000000010E24          @ VouBufGetBusy [R_ARM_CALL: .text+0x3da8] 
    /*00010e28*/ SUBS        R9, R0, #0 
    /*00010e2c*/ BEQ         VouGetChnValidData_x10f44
    /*00010e30*/ MOV         R1, #15 
    /*00010e34*/ STR         R6, [SP, #8] 
    /*00010e38*/ MOVW        R3, #12534                  @ 0x30f6 
    /*00010e3c*/ STR         R5, [SP, #4] 
    /*00010e40*/ STR         R3, [SP] 
    /*00010e44*/ MOVW        R2, #0                      @ .LC218 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5dbc] 
    /*00010e48*/ LDR         R3, [PC, #300]              @ 0x0000000000010f7c 
    /*00010e4c*/ MOVT        R2, #0                      @ .LC218 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5dbc] 
    /*00010e50*/ MOV         R0, #7 
    /*00010e54*/ BL          0x0000000000010E54          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010e58*/ MOV         R0, R7 
    /*00010e5c*/ BL          0x0000000000010E5C          @ VouBufSubBlkVb [R_ARM_CALL: .text+0x4324] 
    /*00010e60*/ LDR         R0, [R4, #24] 
    /*00010e64*/ BL          0x0000000000010E64          @ VouBufResetNode [R_ARM_CALL: .text+0x3d70] 
    /*00010e68*/ LDR         R1, [R4, #24] 
    /*00010e6c*/ MOV         R0, R8 
    /*00010e70*/ BL          0x0000000000010E70          @ VouBufPutFree [R_ARM_CALL: .text+0x3fd0] 
    /*00010e74*/ ADD         R0, R4, #9472               @ 0x2500 
    /*00010e78*/ ADD         R0, R0, #28 
    /*00010e7c*/ BL          0x0000000000010E7C          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00010e80*/ ADD         R0, R4, #9472               @ 0x2500 
    /*00010e84*/ ADD         R0, R0, #56                 @ 0x38 
    /*00010e88*/ BL          0x0000000000010E88          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00010e8c*/ ADD         R0, R4, #9472               @ 0x2500 
    /*00010e90*/ ADD         R0, R0, #52                 @ 0x34 
    /*00010e94*/ BL          0x0000000000010E94          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00010e98*/ STR         R9, [R4, #24] 
    /*00010e9c*/ MOVW        R3, #12542                  @ 0x30fe 
    /*00010ea0*/ STMIB       SP, {R5, R6} 
    /*00010ea4*/ STR         R3, [SP] 
    /*00010ea8*/ MOVW        R2, #0                      @ .LC219 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e04] 
    /*00010eac*/ LDR         R3, [PC, #200]              @ 0x0000000000010f7c 
    /*00010eb0*/ MOVT        R2, #0                      @ .LC219 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e04] 
    /*00010eb4*/ MOV         R1, #15 
    /*00010eb8*/ MOV         R0, #7 
    /*00010ebc*/ BL          0x0000000000010EBC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010ec0*/ B           VouGetChnValidData_x10db4
    VouGetChnValidData_x10ec4:
    /*00010ec4*/ MOVW        R3, #12547                  @ 0x3103 
    /*00010ec8*/ STR         R6, [SP, #8] 
    /*00010ecc*/ STR         R3, [SP] 
    /*00010ed0*/ MOVW        R2, #0                      @ .LC220 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e4c] 
    /*00010ed4*/ STR         R5, [SP, #4] 
    /*00010ed8*/ MOVT        R2, #0                      @ .LC220 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e4c] 
    /*00010edc*/ LDR         R3, [PC, #152]              @ 0x0000000000010f7c 
    /*00010ee0*/ MOV         R1, #15 
    /*00010ee4*/ MOV         R0, #7 
    /*00010ee8*/ BL          0x0000000000010EE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010eec*/ B           VouGetChnValidData_x10db4
    VouGetChnValidData_x10ef0:
    /*00010ef0*/ STR         R1, [SP, #8] 
    /*00010ef4*/ MOVW        R3, #12363                  @ 0x304b 
    /*00010ef8*/ STR         R0, [SP, #4] 
    /*00010efc*/ MOV         R1, #15 
    /*00010f00*/ STR         R3, [SP] 
    /*00010f04*/ MOVW        R2, #0                      @ .LC214 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5cac] 
    /*00010f08*/ LDR         R3, [PC, #108]              @ 0x0000000000010f7c 
    /*00010f0c*/ MOVT        R2, #0                      @ .LC214 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5cac] 
    /*00010f10*/ MOV         R0, #7 
    /*00010f14*/ BL          0x0000000000010F14          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010f18*/ ADD         R0, R4, #8960               @ 0x2300 
    /*00010f1c*/ ADD         R0, R0, #56                 @ 0x38 
    /*00010f20*/ BL          0x0000000000010F20          @ VouBufGetBusy [R_ARM_CALL: .text+0x3da8] 
    /*00010f24*/ CMP         R0, #0 
    /*00010f28*/ BEQ         VouGetChnValidData_x10dc8
    /*00010f2c*/ STR         R0, [R4, #24] 
    /*00010f30*/ LDR         R2, [R0] 
    /*00010f34*/ LDR         R3, [R2, #672]              @ 0x2a0 
    /*00010f38*/ ADD         R3, R3, #1 
    /*00010f3c*/ STR         R3, [R2, #672]              @ 0x2a0 
    /*00010f40*/ B           VouGetChnValidData_x10dc8
    VouGetChnValidData_x10f44:
    /*00010f44*/ LDR         R1, [R4, #184]              @ 0xb8 
    /*00010f48*/ MOVW        IP, #12529                  @ 0x30f1 
    /*00010f4c*/ MOVW        R2, #0                      @ .LC217 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5d78] 
    /*00010f50*/ LDR         R3, [PC, #36]               @ 0x0000000000010f7c 
    /*00010f54*/ ADD         R1, R1, #1 
    /*00010f58*/ MOVT        R2, #0                      @ .LC217 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5d78] 
    /*00010f5c*/ STR         R1, [R4, #184]              @ 0xb8 
    /*00010f60*/ MOV         R0, #7 
    /*00010f64*/ MOV         R1, #15 
    /*00010f68*/ STR         R6, [SP, #8] 
    /*00010f6c*/ STR         R5, [SP, #4] 
    /*00010f70*/ STR         IP, [SP] 
    /*00010f74*/ BL          0x0000000000010F74          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00010f78*/ B           VouGetChnValidData_x10db4
    /*00010f7c*/ ANDEQ       R0, R0, R8, ASR #20 
FUNC_END VouGetChnValidData


FUNC_BEGIN VouGetOsd
    /*00010f80*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00010f84*/ ADD         R2, R1, R0, LSL #2 
    /*00010f88*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00010f8c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00010f90*/ MOV         R5, R0 
    /*00010f94*/ LDR         R4, [R3, R2, LSL #2] 
    /*00010f98*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00010f9c*/ MOV         R6, R1 
    /*00010fa0*/ CMP         R4, #0 
    /*00010fa4*/ BEQ         VouGetOsd_x110e4
    VouGetOsd_x10fa8:
    /*00010fa8*/ MOV         R0, #3 
    /*00010fac*/ BL          0x0000000000010FAC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00010fb0*/ CMP         R0, #0 
    /*00010fb4*/ BEQ         VouGetOsd_x110d8
    /*00010fb8*/ MOV         R0, #3 
    /*00010fbc*/ BL          0x0000000000010FBC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00010fc0*/ LDR         R3, [R0, #8] 
    /*00010fc4*/ CMP         R3, #0 
    /*00010fc8*/ BEQ         VouGetOsd_x110d8
    /*00010fcc*/ MOV         R0, #3 
    /*00010fd0*/ STR         R6, [SP, #24] 
    /*00010fd4*/ STR         R5, [SP, #20] 
    /*00010fd8*/ MOV         R7, #15 
    /*00010fdc*/ STR         R7, [SP, #16] 
    /*00010fe0*/ BL          0x0000000000010FE0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00010fe4*/ ADD         R2, SP, #28 
    /*00010fe8*/ ADD         R1, SP, #16 
    /*00010fec*/ LDR         R3, [R0, #8] 
    /*00010ff0*/ MOV         R0, #3 
    /*00010ff4*/ BLX         R3 
    /*00010ff8*/ CMP         R0, #0 
    /*00010ffc*/ BNE         VouGetOsd_x11104
    /*00011000*/ LDR         IP, [SP, #28] 
    /*00011004*/ ADD         LR, R4, #8192               @ 0x2000 
    /*00011008*/ LDR         R3, [SP, #32] 
    /*0001100c*/ MOV         R2, #57                     @ 0x39 
    /*00011010*/ CMP         IP, #0 
    /*00011014*/ STR         R2, [LR, #1136]             @ 0x470 
    /*00011018*/ STR         IP, [LR, #1132]             @ 0x46c 
    /*0001101c*/ STR         R3, [LR, #1128]             @ 0x468 
    /*00011020*/ BEQ         VouGetOsd_x110d8
    /*00011024*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00011028*/ MOV         R1, #12 
    /*0001102c*/ ADD         R2, R4, #9280               @ 0x2440 
    /*00011030*/ ADD         R2, R2, #56                 @ 0x38 
    /*00011034*/ MLA         IP, R1, IP, R3 
    VouGetOsd_x11038:
    /*00011038*/ LDR         R1, [R3, #8] 
    /*0001103c*/ ADD         R3, R3, #12 
    /*00011040*/ ADD         R2, R2, #64                 @ 0x40 
    /*00011044*/ LDR         R1, [R1, #112]              @ 0x70 
    /*00011048*/ STR         R1, [LR, #1136]             @ 0x470 
    /*0001104c*/ LDR         R1, [R3, #-4] 
    /*00011050*/ LDR         R1, [R1, #8] 
    /*00011054*/ STR         R1, [R2, #-64]              @ 0xffffffc0 
    /*00011058*/ LDR         R1, [R3, #-4] 
    /*0001105c*/ LDR         R1, [R1, #12] 
    /*00011060*/ STR         R1, [R2, #-60]              @ 0xffffffc4 
    /*00011064*/ LDR         R1, [R3, #-4] 
    /*00011068*/ LDR         R1, [R1, #16] 
    /*0001106c*/ STR         R1, [R2, #-56]              @ 0xffffffc8 
    /*00011070*/ LDR         R1, [R3, #-4] 
    /*00011074*/ LDR         R1, [R1, #20] 
    /*00011078*/ STR         R1, [R2, #-52]              @ 0xffffffcc 
    /*0001107c*/ LDR         R1, [R3, #-4] 
    /*00011080*/ LDR         R1, [R1, #76]               @ 0x4c 
    /*00011084*/ STR         R1, [R2, #-36]              @ 0xffffffdc 
    /*00011088*/ LDR         R1, [R3, #-4] 
    /*0001108c*/ LDR         R1, [R1, #80]               @ 0x50 
    /*00011090*/ STR         R1, [R2, #-40]              @ 0xffffffd8 
    /*00011094*/ LDR         R1, [R3, #-4] 
    /*00011098*/ LDR         R1, [R1, #72]               @ 0x48 
    /*0001109c*/ STR         R1, [R2, #-44]              @ 0xffffffd4 
    /*000110a0*/ LDR         R1, [R3, #-4] 
    /*000110a4*/ LDR         R1, [R1, #64]               @ 0x40 
    /*000110a8*/ STR         R1, [R2, #-48]              @ 0xffffffd0 
    /*000110ac*/ LDR         R1, [R3, #-4] 
    /*000110b0*/ LDRD        R0, [R1, #88]               @ 0x58 
    /*000110b4*/ STRD        R0, [R2, #-32]              @ 0xffffffe0 
    /*000110b8*/ LDR         R1, [R3, #-4] 
    /*000110bc*/ LDR         R1, [R1, #104]              @ 0x68 
    /*000110c0*/ STR         R1, [R2, #-12] 
    /*000110c4*/ LDR         R1, [R3, #-4] 
    /*000110c8*/ CMP         R3, IP 
    /*000110cc*/ LDR         R1, [R1, #112]              @ 0x70 
    /*000110d0*/ STR         R1, [R2, #-8] 
    /*000110d4*/ BNE         VouGetOsd_x11038
    VouGetOsd_x110d8:
    /*000110d8*/ MOV         R0, #0 
    VouGetOsd_x110dc:
    /*000110dc*/ ADD         SP, SP, #44                 @ 0x2c 
    /*000110e0*/ POP         {R4, R5, R6, R7, PC} 
    VouGetOsd_x110e4:
    /*000110e4*/ MOVW        R3, #0                      @ .LC221 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e9c] 
    /*000110e8*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*000110ec*/ MOVT        R3, #0                      @ .LC221 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e9c] 
    /*000110f0*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    /*000110f4*/ MOVW        R2, #12584                  @ 0x3128 
    /*000110f8*/ LDR         R1, [PC, #52]               @ 0x0000000000011134 
    /*000110fc*/ BL          0x00000000000110FC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011100*/ B           VouGetOsd_x10fa8
    VouGetOsd_x11104:
    /*00011104*/ MOVW        R3, #12598                  @ 0x3136 
    /*00011108*/ STR         R6, [SP, #8] 
    /*0001110c*/ STR         R3, [SP] 
    /*00011110*/ MOV         R1, R7 
    /*00011114*/ STR         R5, [SP, #4] 
    /*00011118*/ MOVW        R2, #0                      @ .LC222 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5ea8] 
    /*0001111c*/ LDR         R3, [PC, #16]               @ 0x0000000000011134 
    /*00011120*/ MOVT        R2, #0                      @ .LC222 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5ea8] 
    /*00011124*/ MOV         R0, #3 
    /*00011128*/ BL          0x0000000000011128          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001112c*/ MVN         R0, #0 
    /*00011130*/ B           VouGetOsd_x110dc
    /*00011134*/ ANDEQ       R0, R0, IP, ASR SL 
FUNC_END VouGetOsd


FUNC_BEGIN VouPutOsd
    /*00011138*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001113c*/ SUB         SP, SP, #20 
    /*00011140*/ MOV         R3, #15 
    /*00011144*/ STR         R0, [SP, #8] 
    /*00011148*/ MOV         R0, #3 
    /*0001114c*/ STR         R1, [SP, #12] 
    /*00011150*/ STR         R3, [SP, #4] 
    /*00011154*/ BL          0x0000000000011154          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011158*/ CMP         R0, #0 
    /*0001115c*/ BEQ         VouPutOsd_x11198
    /*00011160*/ MOV         R0, #3 
    /*00011164*/ BL          0x0000000000011164          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011168*/ LDR         R3, [R0, #12] 
    /*0001116c*/ CMP         R3, #0 
    /*00011170*/ BEQ         VouPutOsd_x11198
    /*00011174*/ MOV         R0, #3 
    /*00011178*/ BL          0x0000000000011178          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001117c*/ MOV         R2, #0 
    /*00011180*/ ADD         R1, SP, #4 
    /*00011184*/ LDR         R3, [R0, #12] 
    /*00011188*/ MOV         R0, #3 
    /*0001118c*/ BLX         R3 
    /*00011190*/ CMP         R0, #0 
    /*00011194*/ BNE         VouPutOsd_x111a4
    VouPutOsd_x11198:
    /*00011198*/ MOV         R0, #0 
    /*0001119c*/ ADD         SP, SP, #20 
    /*000111a0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VouPutOsd_x111a4:
    /*000111a4*/ MOVW        R2, #12641                  @ 0x3161 
    /*000111a8*/ LDR         R1, [PC, #28]               @ 0x00000000000111cc 
    /*000111ac*/ MOVW        R3, #0                      @ .LC223 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5edc] 
    /*000111b0*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*000111b4*/ MOVT        R3, #0                      @ .LC223 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5edc] 
    /*000111b8*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    /*000111bc*/ BL          0x00000000000111BC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000111c0*/ MOV         R0, #0 
    /*000111c4*/ ADD         SP, SP, #20 
    /*000111c8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000111cc*/ ANDEQ       R0, R0, R8, ROR #20 
FUNC_END VouPutOsd


FUNC_BEGIN VouSetVgsOsdParam
    /*000111d0*/ ADD         R1, R1, R0, LSL #2 
    /*000111d4*/ MOVW        IP, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*000111d8*/ MOVT        IP, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*000111dc*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000111e0*/ MOV         R8, R3 
    /*000111e4*/ LDR         R7, [IP, R1, LSL #2] 
    /*000111e8*/ MOV         SL, R2 
    /*000111ec*/ ADD         R9, R7, #8192               @ 0x2000 
    /*000111f0*/ LDR         R3, [R9, #1132]             @ 0x46c 
    /*000111f4*/ CMP         R3, #0 
    /*000111f8*/ BEQ         VouSetVgsOsdParam_x11284
    /*000111fc*/ ADD         R4, R7, #9280               @ 0x2440 
    /*00011200*/ MOV         R6, #0 
    /*00011204*/ ADD         R4, R4, #56                 @ 0x38 
    /*00011208*/ ADD         R5, R2, #32 
    /*0001120c*/ MOV         FP, R6 
    /*00011210*/ B           VouSetVgsOsdParam_x1124c
    VouSetVgsOsdParam_x11214:
    /*00011214*/ LDR         R1, [R8] 
    /*00011218*/ CMP         R1, R2 
    /*0001121c*/ BCC         VouSetVgsOsdParam_x11230
    /*00011220*/ LDR         R1, [R4, #4] 
    /*00011224*/ LDR         R2, [R8, #4] 
    /*00011228*/ CMP         R1, R2 
    /*0001122c*/ BLS         VouSetVgsOsdParam_x11290
    VouSetVgsOsdParam_x11230:
    /*00011230*/ STR         FP, [R5, #-32]              @ 0xffffffe0 
    VouSetVgsOsdParam_x11234:
    /*00011234*/ LDR         R2, [R9, #1132]             @ 0x46c 
    /*00011238*/ ADD         R6, R6, #1 
    /*0001123c*/ ADD         R5, R5, #80                 @ 0x50 
    /*00011240*/ ADD         R4, R4, #64                 @ 0x40 
    /*00011244*/ CMP         R2, R6 
    /*00011248*/ BLS         VouSetVgsOsdParam_x1127c
    VouSetVgsOsdParam_x1124c:
    /*0001124c*/ LDR         R2, [R7, #256]              @ 0x100 
    /*00011250*/ CMP         R2, #1 
    /*00011254*/ LDR         R2, [R4] 
    /*00011258*/ BNE         VouSetVgsOsdParam_x11214
    /*0001125c*/ LDR         R1, [R7, #268]              @ 0x10c 
    /*00011260*/ CMP         R2, R1 
    /*00011264*/ BCS         VouSetVgsOsdParam_x11230
    /*00011268*/ LDR         R0, [R4, #4] 
    /*0001126c*/ LDR         R1, [R7, #272]              @ 0x110 
    /*00011270*/ CMP         R0, R1 
    /*00011274*/ BCS         VouSetVgsOsdParam_x11230
    /*00011278*/ B           VouSetVgsOsdParam_x11214
    VouSetVgsOsdParam_x1127c:
    /*0001127c*/ CMP         R6, #0 
    /*00011280*/ BGT         VouSetVgsOsdParam_x112e0
    VouSetVgsOsdParam_x11284:
    /*00011284*/ MOV         R3, #0 
    /*00011288*/ STR         R3, [SL] 
    /*0001128c*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouSetVgsOsdParam_x11290:
    /*00011290*/ MOV         R2, #16 
    /*00011294*/ MOV         R1, R4 
    /*00011298*/ MOV         R0, R5 
    /*0001129c*/ BL          0x000000000001129C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000112a0*/ MVN         R3, #0 
    /*000112a4*/ STRB        R3, [R5, #-28]              @ 0xffffffe4 
    /*000112a8*/ MOV         IP, #1 
    /*000112ac*/ LDR         R2, [R4, #56]               @ 0x38 
    /*000112b0*/ STR         R2, [R5, #-16] 
    /*000112b4*/ LDRD        R0, [R4, #32] 
    /*000112b8*/ STRD        R0, [R5, #-24]              @ 0xffffffe8 
    /*000112bc*/ LDR         R2, [R4, #24] 
    /*000112c0*/ STRB        R2, [R5, #-4] 
    /*000112c4*/ LDR         R2, [R4, #28] 
    /*000112c8*/ STRB        R2, [R5, #-3] 
    /*000112cc*/ LDR         R2, [R4, #52]               @ 0x34 
    /*000112d0*/ STR         FP, [R5, #-8] 
    /*000112d4*/ STR         IP, [R5, #-32]              @ 0xffffffe0 
    /*000112d8*/ STR         R2, [R5, #-12] 
    /*000112dc*/ B           VouSetVgsOsdParam_x11234
    VouSetVgsOsdParam_x112e0:
    /*000112e0*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END VouSetVgsOsdParam


FUNC_BEGIN VouGetCover
    /*000112e4*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*000112e8*/ ADD         R2, R1, R0, LSL #2 
    /*000112ec*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*000112f0*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*000112f4*/ MOV         R6, R0 
    /*000112f8*/ LDR         R4, [R3, R2, LSL #2] 
    /*000112fc*/ SUB         SP, SP, #40                 @ 0x28 
    /*00011300*/ MOV         R7, R1 
    /*00011304*/ CMP         R4, #0 
    /*00011308*/ BEQ         VouGetCover_x1142c
    VouGetCover_x1130c:
    /*0001130c*/ MOV         R0, #3 
    /*00011310*/ BL          0x0000000000011310          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011314*/ CMP         R0, #0 
    /*00011318*/ BEQ         VouGetCover_x11420
    /*0001131c*/ MOV         R0, #3 
    /*00011320*/ BL          0x0000000000011320          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011324*/ LDR         R3, [R0, #8] 
    /*00011328*/ CMP         R3, #0 
    /*0001132c*/ BEQ         VouGetCover_x11420
    /*00011330*/ MOV         R0, #3 
    /*00011334*/ STR         R7, [SP, #24] 
    /*00011338*/ STR         R6, [SP, #20] 
    /*0001133c*/ MOV         R8, #15 
    /*00011340*/ STR         R8, [SP, #16] 
    /*00011344*/ BL          0x0000000000011344          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011348*/ ADD         R2, SP, #28 
    /*0001134c*/ ADD         R1, SP, #16 
    /*00011350*/ LDR         R3, [R0, #8] 
    /*00011354*/ MOV         R0, #2 
    /*00011358*/ BLX         R3 
    /*0001135c*/ SUBS        R5, R0, #0 
    /*00011360*/ BNE         VouGetCover_x1144c
    /*00011364*/ LDR         R2, [SP, #28] 
    /*00011368*/ ADD         R3, R4, #8192               @ 0x2000 
    /*0001136c*/ LDR         R1, [SP, #32] 
    /*00011370*/ MOV         IP, #57                     @ 0x39 
    /*00011374*/ CMP         R2, #0 
    /*00011378*/ STR         IP, [R3, #1216]             @ 0x4c0 
    /*0001137c*/ STR         R2, [R3, #1212]             @ 0x4bc 
    /*00011380*/ STR         R1, [R3, #1208]             @ 0x4b8 
    /*00011384*/ BEQ         VouGetCover_x11420
    /*00011388*/ ADD         R4, R4, #9408               @ 0x24c0 
    /*0001138c*/ MOV         R6, R5 
    /*00011390*/ ADD         R4, R4, #4 
    /*00011394*/ B           VouGetCover_x113e0
    VouGetCover_x11398:
    /*00011398*/ LDR         R2, [R3, #8] 
    /*0001139c*/ LDR         R2, [R2, #8] 
    /*000113a0*/ STR         R2, [R4, #4] 
    /*000113a4*/ LDR         R2, [R3, #8] 
    /*000113a8*/ LDR         R2, [R2, #12] 
    /*000113ac*/ STR         R2, [R4, #8] 
    /*000113b0*/ LDR         R2, [R3, #8] 
    /*000113b4*/ LDR         R2, [R2, #16] 
    /*000113b8*/ STR         R2, [R4, #12] 
    /*000113bc*/ LDR         R3, [R3, #8] 
    /*000113c0*/ LDR         R3, [R3, #20] 
    /*000113c4*/ STR         R3, [R4, #16] 
    VouGetCover_x113c8:
    /*000113c8*/ LDR         R3, [SP, #28] 
    /*000113cc*/ ADD         R6, R6, #1 
    /*000113d0*/ ADD         R5, R5, #12 
    /*000113d4*/ ADD         R4, R4, #48                 @ 0x30 
    /*000113d8*/ CMP         R3, R6 
    /*000113dc*/ BLS         VouGetCover_x11420
    VouGetCover_x113e0:
    /*000113e0*/ LDR         R3, [SP, #36]               @ 0x24 
    /*000113e4*/ ADD         R3, R3, R5 
    /*000113e8*/ LDR         R2, [R3, #8] 
    /*000113ec*/ LDR         R2, [R2, #4] 
    /*000113f0*/ CMP         R2, #0 
    /*000113f4*/ STR         R2, [R4] 
    /*000113f8*/ LDR         R2, [R3, #8] 
    /*000113fc*/ LDR         R2, [R2, #68]               @ 0x44 
    /*00011400*/ STR         R2, [R4, #44]               @ 0x2c 
    /*00011404*/ BEQ         VouGetCover_x11398
    /*00011408*/ LDR         R1, [R3, #8] 
    /*0001140c*/ MOV         R2, #40                     @ 0x28 
    /*00011410*/ ADD         R0, R4, #4 
    /*00011414*/ ADD         R1, R1, #24 
    /*00011418*/ BL          0x0000000000011418          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001141c*/ B           VouGetCover_x113c8
    VouGetCover_x11420:
    /*00011420*/ MOV         R0, #0 
    VouGetCover_x11424:
    /*00011424*/ ADD         SP, SP, #40                 @ 0x28 
    /*00011428*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouGetCover_x1142c:
    /*0001142c*/ MOVW        R3, #0                      @ .LC221 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5e9c] 
    /*00011430*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*00011434*/ MOVT        R3, #0                      @ .LC221 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5e9c] 
    /*00011438*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    /*0001143c*/ MOVW        R2, #12708                  @ 0x31a4 
    /*00011440*/ LDR         R1, [PC, #52]               @ 0x000000000001147c 
    /*00011444*/ BL          0x0000000000011444          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011448*/ B           VouGetCover_x1130c
    VouGetCover_x1144c:
    /*0001144c*/ MOVW        R3, #12722                  @ 0x31b2 
    /*00011450*/ STR         R7, [SP, #8] 
    /*00011454*/ STR         R3, [SP] 
    /*00011458*/ MOV         R1, R8 
    /*0001145c*/ STR         R6, [SP, #4] 
    /*00011460*/ MOVW        R2, #0                      @ .LC224 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5ef4] 
    /*00011464*/ LDR         R3, [PC, #16]               @ 0x000000000001147c 
    /*00011468*/ MOVT        R2, #0                      @ .LC224 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5ef4] 
    /*0001146c*/ MOV         R0, #3 
    /*00011470*/ BL          0x0000000000011470          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011474*/ MVN         R0, #0 
    /*00011478*/ B           VouGetCover_x11424
    /*0001147c*/ ANDEQ       R0, R0, R4, ROR SL 
FUNC_END VouGetCover


FUNC_BEGIN VouPutCover
    /*00011480*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00011484*/ SUB         SP, SP, #20 
    /*00011488*/ MOV         R3, #15 
    /*0001148c*/ STR         R0, [SP, #8] 
    /*00011490*/ MOV         R0, #3 
    /*00011494*/ STR         R1, [SP, #12] 
    /*00011498*/ STR         R3, [SP, #4] 
    /*0001149c*/ BL          0x000000000001149C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000114a0*/ CMP         R0, #0 
    /*000114a4*/ BEQ         VouPutCover_x114e0
    /*000114a8*/ MOV         R0, #3 
    /*000114ac*/ BL          0x00000000000114AC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000114b0*/ LDR         R3, [R0, #12] 
    /*000114b4*/ CMP         R3, #0 
    /*000114b8*/ BEQ         VouPutCover_x114e0
    /*000114bc*/ MOV         R0, #3 
    /*000114c0*/ BL          0x00000000000114C0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000114c4*/ MOV         R2, #0 
    /*000114c8*/ ADD         R1, SP, #4 
    /*000114cc*/ LDR         R3, [R0, #12] 
    /*000114d0*/ MOV         R0, #2 
    /*000114d4*/ BLX         R3 
    /*000114d8*/ CMP         R0, #0 
    /*000114dc*/ BNE         VouPutCover_x114ec
    VouPutCover_x114e0:
    /*000114e0*/ MOV         R0, #0 
    /*000114e4*/ ADD         SP, SP, #20 
    /*000114e8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VouPutCover_x114ec:
    /*000114ec*/ MOVW        R2, #12769                  @ 0x31e1 
    /*000114f0*/ LDR         R1, [PC, #28]               @ 0x0000000000011514 
    /*000114f4*/ MOVW        R3, #0                      @ .LC223 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5edc] 
    /*000114f8*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*000114fc*/ MOVT        R3, #0                      @ .LC223 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5edc] 
    /*00011500*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    /*00011504*/ BL          0x0000000000011504          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00011508*/ MOV         R0, #0 
    /*0001150c*/ ADD         SP, SP, #20 
    /*00011510*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00011514*/ ANDEQ       R0, R0, R0, LSL #21 
FUNC_END VouPutCover


FUNC_BEGIN VouVgsTaskDone
    /*00011518*/ PUSH        {R4, R5, R6, LR} 
    /*0001151c*/ LDR         R0, [R3, #672]              @ 0x2a0 
    /*00011520*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00011524*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00011528*/ UBFX        R6, R0, #16, #8 
    /*0001152c*/ UXTB        R4, R0 
    /*00011530*/ ADD         R2, R6, R4, LSL #2 
    /*00011534*/ LDR         R3, [R3, R2, LSL #2] 
    /*00011538*/ CMP         R3, #0 
    /*0001153c*/ POPEQ       {R4, R5, R6, PC} 
    /*00011540*/ ADD         R5, R3, #8192               @ 0x2000 
    /*00011544*/ LDR         R3, [R5, #1268]             @ 0x4f4 
    /*00011548*/ CMP         R3, #0 
    /*0001154c*/ BNE         VouVgsTaskDone_x1156c
    VouVgsTaskDone_x11550:
    /*00011550*/ LDR         R3, [R5, #1272]             @ 0x4f8 
    /*00011554*/ CMP         R3, #0 
    /*00011558*/ POPEQ       {R4, R5, R6, PC} 
    /*0001155c*/ MOV         R1, R6 
    /*00011560*/ MOV         R0, R4 
    /*00011564*/ POP         {R4, R5, R6, LR} 
    VouVgsTaskDone_x11568:
    /*00011568*/ B           VouVgsTaskDone_x11568       @ VouPutOsd [R_ARM_JUMP24: .text+0x11138] 
    VouVgsTaskDone_x1156c:
    /*0001156c*/ MOV         R1, R6 
    /*00011570*/ MOV         R0, R4 
    /*00011574*/ BL          0x0000000000011574          @ VouPutCover [R_ARM_CALL: .text+0x11480] 
    /*00011578*/ B           VouVgsTaskDone_x11550
FUNC_END VouVgsTaskDone


FUNC_BEGIN VouSetVgsCoverParam
    /*0001157c*/ ADD         R1, R1, R0, LSL #2 
    /*00011580*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00011584*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00011588*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*0001158c*/ LDR         R4, [R3, R1, LSL #2] 
    /*00011590*/ ADD         R9, R4, #8192               @ 0x2000 
    /*00011594*/ LDR         R3, [R9, #1212]             @ 0x4bc 
    /*00011598*/ CMP         R3, #0 
    /*0001159c*/ BEQ         VouSetVgsCoverParam_x11608
    /*000115a0*/ ADD         R4, R4, #9408               @ 0x24c0 
    /*000115a4*/ ADD         R6, R2, #8 
    /*000115a8*/ ADD         R4, R4, #8 
    /*000115ac*/ MOV         R5, R2 
    /*000115b0*/ MOV         R7, #0 
    /*000115b4*/ MOV         R8, #1 
    VouSetVgsCoverParam_x115b8:
    /*000115b8*/ LDR         R3, [R4, #-4] 
    /*000115bc*/ MOV         R1, R4 
    /*000115c0*/ MOV         R0, R6 
    /*000115c4*/ MOV         R2, #40                     @ 0x28 
    /*000115c8*/ CMP         R3, #0 
    /*000115cc*/ ADD         R7, R7, #1 
    /*000115d0*/ ADD         R6, R6, #52                 @ 0x34 
    /*000115d4*/ ADD         R4, R4, #48                 @ 0x30 
    /*000115d8*/ MOVEQ       R2, #16 
    /*000115dc*/ ADD         R5, R5, #52                 @ 0x34 
    /*000115e0*/ BL          0x00000000000115E0          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000115e4*/ LDR         R3, [R4, #-8] 
    /*000115e8*/ STR         R8, [R5, #-52]              @ 0xffffffcc 
    /*000115ec*/ STR         R3, [R5, #-4] 
    /*000115f0*/ LDR         R3, [R4, #-52]              @ 0xffffffcc 
    /*000115f4*/ STR         R3, [R5, #-48]              @ 0xffffffd0 
    /*000115f8*/ LDR         R3, [R9, #1212]             @ 0x4bc 
    /*000115fc*/ CMP         R3, R7 
    /*00011600*/ BHI         VouSetVgsCoverParam_x115b8
    /*00011604*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouSetVgsCoverParam_x11608:
    /*00011608*/ STR         R3, [R2] 
    /*0001160c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
FUNC_END VouSetVgsCoverParam


FUNC_BEGIN VouChnVgs
    /*00011610*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00011614*/ SUB         SP, SP, #116                @ 0x74 
    /*00011618*/ MOV         R6, R0 
    /*0001161c*/ MOV         R8, R1 
    /*00011620*/ STR         R2, [SP, #20] 
    /*00011624*/ MOV         R1, #0 
    /*00011628*/ MOV         R2, #52                     @ 0x34 
    /*0001162c*/ ADD         R0, SP, #60                 @ 0x3c 
    /*00011630*/ MOV         R5, #0 
    /*00011634*/ STR         R3, [SP, #24] 
    /*00011638*/ BL          0x0000000000011638          @ memset [R_ARM_CALL: +0x0] 
    /*0001163c*/ ADD         IP, R8, R6, LSL #2 
    /*00011640*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00011644*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00011648*/ MOV         R1, R5 
    /*0001164c*/ MOV         R2, #320                    @ 0x140 
    /*00011650*/ MOVW        R0, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x30d8] 
    /*00011654*/ MOVT        R0, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x30d8] 
    /*00011658*/ LDR         R4, [R3, IP, LSL #2] 
    /*0001165c*/ STR         R5, [SP, #44]               @ 0x2c 
    /*00011660*/ STR         R5, [SP, #40]               @ 0x28 
    /*00011664*/ STR         R5, [SP, #48]               @ 0x30 
    /*00011668*/ STR         R5, [SP, #52]               @ 0x34 
    /*0001166c*/ STR         R5, [SP, #56]               @ 0x38 
    /*00011670*/ BL          0x0000000000011670          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00011674*/ MOV         R1, R8 
    /*00011678*/ MOV         R0, R6 
    /*0001167c*/ BL          0x000000000001167C          @ VouGetChnValidData [R_ARM_CALL: .text+0x10d54] 
    /*00011680*/ SUBS        R7, R0, #0 
    /*00011684*/ BEQ         VouChnVgs_x11ad0
    /*00011688*/ LDR         R0, [R4, #16] 
    /*0001168c*/ CMP         R0, #0 
    /*00011690*/ BNE         VouChnVgs_x1169c
    VouChnVgs_x11694:
    /*00011694*/ ADD         SP, SP, #116                @ 0x74 
    /*00011698*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnVgs_x1169c:
    /*0001169c*/ LDR         R9, [R7] 
    /*000116a0*/ ADD         FP, R4, #8192               @ 0x2000 
    /*000116a4*/ ADD         R3, R4, #68                 @ 0x44 
    /*000116a8*/ STR         R3, [SP, #28] 
    /*000116ac*/ STR         R5, [FP, #1300]             @ 0x514 
    /*000116b0*/ MOV         R0, #45                     @ 0x2d 
    /*000116b4*/ LDR         R3, [R9] 
    /*000116b8*/ STR         R3, [R4, #192]              @ 0xc0 
    /*000116bc*/ LDR         R3, [R9, #4] 
    /*000116c0*/ STR         R3, [R4, #196]              @ 0xc4 
    /*000116c4*/ BL          0x00000000000116C4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000116c8*/ SUBS        SL, R0, #0 
    /*000116cc*/ BEQ         VouChnVgs_x11c80
    /*000116d0*/ LDR         R3, [SL, #32] 
    /*000116d4*/ CMP         R3, #0 
    /*000116d8*/ BEQ         VouChnVgs_x11c80
    /*000116dc*/ LDR         R3, [SL, #64]               @ 0x40 
    /*000116e0*/ BLX         R3 
    /*000116e4*/ SUBS        R5, R0, #0 
    /*000116e8*/ BEQ         VouChnVgs_x11d14
    /*000116ec*/ ADD         R3, R5, #336                @ 0x150 
    /*000116f0*/ MOV         R2, #336                    @ 0x150 
    /*000116f4*/ MOV         R1, R9 
    /*000116f8*/ STR         R3, [SP, #32] 
    /*000116fc*/ MOV         R7, R3 
    /*00011700*/ BL          0x0000000000011700          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011704*/ MOV         R0, R7 
    /*00011708*/ LDR         R7, [SP, #20] 
    /*0001170c*/ MOV         R2, #336                    @ 0x150 
    /*00011710*/ MOV         R1, R7 
    /*00011714*/ BL          0x0000000000011714          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011718*/ LDRD        R2, [R9, #240]              @ 0xf0 
    /*0001171c*/ STRD        R2, [R7, #240]              @ 0xf0 
    /*00011720*/ LDR         R3, [R4, #256]              @ 0x100 
    /*00011724*/ CMP         R3, #1 
    /*00011728*/ BEQ         VouChnVgs_x11a40
    /*0001172c*/ MOVW        R7, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x30d8] 
    /*00011730*/ MOVT        R7, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x30d8] 
    VouChnVgs_x11734:
    /*00011734*/ MOV         R3, #1 
    /*00011738*/ STR         R3, [R7, #184]              @ 0xb8 
    /*0001173c*/ LDR         R2, [R4, #68]               @ 0x44 
    /*00011740*/ MOV         R1, R8 
    /*00011744*/ LDR         R3, [R9, #224]              @ 0xe0 
    /*00011748*/ MOV         R0, R6 
    /*0001174c*/ STR         R2, [R7, #188]              @ 0xbc 
    /*00011750*/ LDR         R2, [R4, #72]               @ 0x48 
    /*00011754*/ STR         R2, [R7, #192]              @ 0xc0 
    /*00011758*/ LDR         R2, [R4, #76]               @ 0x4c 
    /*0001175c*/ STR         R2, [R7, #196]              @ 0xc4 
    /*00011760*/ LDR         R2, [R4, #80]               @ 0x50 
    /*00011764*/ STR         R3, [R5, #560]              @ 0x230 
    /*00011768*/ LDR         R3, [R9, #228]              @ 0xe4 
    /*0001176c*/ STR         R2, [R7, #200]              @ 0xc8 
    /*00011770*/ STR         R3, [R5, #564]              @ 0x234 
    /*00011774*/ BL          0x0000000000011774          @ VouGetOsd [R_ARM_CALL: .text+0x10f80] 
    /*00011778*/ CMP         R0, #0 
    /*0001177c*/ BNE         VouChnVgs_x1192c
    /*00011780*/ LDR         R3, [FP, #1132]             @ 0x46c 
    /*00011784*/ CMP         R3, #0 
    /*00011788*/ BNE         VouChnVgs_x119d8
    /*0001178c*/ STR         R3, [R7, #76]               @ 0x4c 
    /*00011790*/ STR         R3, [FP, #1272]             @ 0x4f8 
    VouChnVgs_x11794:
    /*00011794*/ MOV         R1, R8 
    /*00011798*/ MOV         R0, R6 
    /*0001179c*/ BL          0x000000000001179C          @ VouGetCover [R_ARM_CALL: .text+0x112e4] 
    /*000117a0*/ CMP         R0, #0 
    /*000117a4*/ BEQ         VouChnVgs_x119c0
    /*000117a8*/ MOV         R3, #0 
    /*000117ac*/ STR         R3, [R7, #20] 
    /*000117b0*/ STR         R3, [FP, #1268]             @ 0x4f4 
    VouChnVgs_x117b4:
    /*000117b4*/ MOV         R3, #0 
    /*000117b8*/ BFI         R3, R6, #0, #8 
    /*000117bc*/ ADD         R2, R4, #68                 @ 0x44 
    /*000117c0*/ BFI         R3, R8, #16, #8 
    /*000117c4*/ ADD         R1, R4, #1120               @ 0x460 
    /*000117c8*/ STR         R3, [R5, #672]              @ 0x2a0 
    /*000117cc*/ ADD         R0, SP, #60                 @ 0x3c 
    /*000117d0*/ MOV         R9, #0 
    /*000117d4*/ MOVW        R3, #0                      @ VouVgsTaskDone [R_ARM_MOVW_ABS_NC: .text+0x11518] 
    /*000117d8*/ STR         R9, [R5, #676]              @ 0x2a4 
    /*000117dc*/ MOVT        R3, #0                      @ VouVgsTaskDone [R_ARM_MOVT_ABS: .text+0x11518] 
    /*000117e0*/ STR         R6, [R5, #728]              @ 0x2d8 
    /*000117e4*/ STR         R3, [R5, #720]              @ 0x2d0 
    /*000117e8*/ MOV         FP, #15 
    /*000117ec*/ STR         R6, [R5, #732]              @ 0x2dc 
    /*000117f0*/ STR         FP, [R5, #724]              @ 0x2d4 
    /*000117f4*/ BL          0x00000000000117F4          @ VOU_DRV_SetCoverParamForBorder [R_ARM_CALL: .text+0x194ac] 
    /*000117f8*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x30d8] 
    /*000117fc*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x30d8] 
    /*00011800*/ MOV         R1, R5 
    /*00011804*/ ADD         R2, R3, #188                @ 0xbc 
    /*00011808*/ ADD         R0, R4, #92                 @ 0x5c 
    /*0001180c*/ BL          0x000000000001180C          @ VOU_DRV_CalcAspectRatio [R_ARM_CALL: .text+0x1953c] 
    /*00011810*/ LDR         R3, [R4, #84]               @ 0x54 
    /*00011814*/ STR         R3, [R7, #176]              @ 0xb0 
    /*00011818*/ LDR         R3, [R5, #8] 
    /*0001181c*/ STR         R3, [R5, #344]              @ 0x158 
    /*00011820*/ BL          0x0000000000011820          @ VOU_DRV_IsSupportHollowCover [R_ARM_CALL: .text+0x185d4] 
    /*00011824*/ SUBS        R3, R0, #0 
    /*00011828*/ STR         R3, [SP, #28] 
    /*0001182c*/ BEQ         VouChnVgs_x1183c
    /*00011830*/ LDR         R3, [R7, #20] 
    /*00011834*/ CMP         R3, R9 
    /*00011838*/ BNE         VouChnVgs_x11b80
    VouChnVgs_x1183c:
    /*0001183c*/ LDR         R0, [SP, #20] 
    /*00011840*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x30d8] 
    /*00011844*/ LDR         R3, [SL, #32] 
    /*00011848*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x30d8] 
    /*0001184c*/ MOV         R1, R5 
    /*00011850*/ LDR         R0, [R0, #744]              @ 0x2e8 
    /*00011854*/ BLX         R3 
    /*00011858*/ SUBS        R9, R0, #0 
    /*0001185c*/ BNE         VouChnVgs_x11c50
    VouChnVgs_x11860:
    /*00011860*/ LDR         R2, [SP, #24] 
    /*00011864*/ LDR         R3, [R2] 
    /*00011868*/ ADD         R3, R3, #1 
    /*0001186c*/ STR         R3, [R2] 
    /*00011870*/ BL          0x0000000000011870          @ VOU_DRV_IsSolid [R_ARM_CALL: .text+0x194a4] 
    /*00011874*/ SUBS        R7, R0, #0 
    /*00011878*/ BNE         VouChnVgs_x119a8
    /*0001187c*/ LDR         R3, [R4, #1120]             @ 0x460 
    /*00011880*/ CMP         R3, #0 
    /*00011884*/ BEQ         VouChnVgs_x119a8
    /*00011888*/ LDR         R3, [SP, #28] 
    /*0001188c*/ CMP         R3, #0 
    /*00011890*/ LDR         R3, [SL, #64]               @ 0x40 
    /*00011894*/ BNE         VouChnVgs_x1193c
    /*00011898*/ BLX         R3 
    /*0001189c*/ SUBS        R7, R0, #0 
    /*000118a0*/ STREQ       R6, [SP, #4] 
    /*000118a4*/ MOVWEQ      R3, #13384                  @ 0x3448 
    /*000118a8*/ BEQ         VouChnVgs_x11d1c
    /*000118ac*/ MOV         R1, R5 
    /*000118b0*/ MOV         R2, #744                    @ 0x2e8 
    /*000118b4*/ BL          0x00000000000118B4          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000118b8*/ LDR         R3, [SP, #28] 
    /*000118bc*/ LDR         R1, [SP, #32] 
    /*000118c0*/ MOV         R2, #336                    @ 0x150 
    /*000118c4*/ MOV         R0, R7 
    /*000118c8*/ STR         R3, [R7, #720]              @ 0x2d0 
    /*000118cc*/ BL          0x00000000000118CC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000118d0*/ LDR         R0, [SP, #20] 
    /*000118d4*/ LDR         R3, [SL, #16] 
    /*000118d8*/ ADD         R2, SP, #60                 @ 0x3c 
    /*000118dc*/ MOV         R1, R7 
    /*000118e0*/ LDR         R0, [R0, #744]              @ 0x2e8 
    /*000118e4*/ BLX         R3 
    /*000118e8*/ CMP         R0, #0 
    /*000118ec*/ BEQ         VouChnVgs_x119a8
    /*000118f0*/ LDR         R3, [SP, #28] 
    /*000118f4*/ STR         R3, [SP, #12] 
    /*000118f8*/ MOVW        R3, #13405                  @ 0x345d 
    VouChnVgs_x118fc:
    /*000118fc*/ STR         R3, [SP] 
    /*00011900*/ MOVW        R2, #0                      @ .LC227 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5fa8] 
    /*00011904*/ STR         R8, [SP, #8] 
    /*00011908*/ MOVT        R2, #0                      @ .LC227 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5fa8] 
    /*0001190c*/ STR         R6, [SP, #4] 
    /*00011910*/ MOV         R1, #15 
    /*00011914*/ LDR         R3, [PC, #1132]             @ 0x0000000000011d88 
    /*00011918*/ MOV         R0, #3 
    /*0001191c*/ BL          0x000000000001191C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011920*/ MOVW        R0, #32786                  @ 0x8012 
    /*00011924*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00011928*/ B           VouChnVgs_x11694
    VouChnVgs_x1192c:
    /*0001192c*/ MOV         R3, #0 
    /*00011930*/ STR         R3, [R7, #76]               @ 0x4c 
    /*00011934*/ STR         R3, [FP, #1272]             @ 0x4f8 
    /*00011938*/ B           VouChnVgs_x11794
    VouChnVgs_x1193c:
    /*0001193c*/ BLX         R3 
    /*00011940*/ SUBS        R9, R0, #0 
    /*00011944*/ STREQ       R6, [SP, #4] 
    /*00011948*/ MOVWEQ      R3, #13361                  @ 0x3431 
    /*0001194c*/ BEQ         VouChnVgs_x11d1c
    /*00011950*/ MOV         R1, R5 
    /*00011954*/ MOV         R2, #744                    @ 0x2e8 
    /*00011958*/ BL          0x0000000000011958          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001195c*/ LDR         R1, [SP, #32] 
    /*00011960*/ MOV         R2, #336                    @ 0x150 
    /*00011964*/ STR         R7, [R9, #720]              @ 0x2d0 
    /*00011968*/ MOV         R0, R9 
    /*0001196c*/ BL          0x000000000001196C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011970*/ ADD         R1, SP, #60                 @ 0x3c 
    /*00011974*/ MOV         R2, #52                     @ 0x34 
    /*00011978*/ LDR         R0, [PC, #1036]             @ 0x0000000000011d8c 
    /*0001197c*/ BL          0x000000000001197C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011980*/ LDR         R2, [SP, #20] 
    /*00011984*/ LDR         R3, [SL, #16] 
    /*00011988*/ MOV         R1, R9 
    /*0001198c*/ LDR         R0, [R2, #744]              @ 0x2e8 
    /*00011990*/ LDR         R2, [PC, #1012]             @ 0x0000000000011d8c 
    /*00011994*/ BLX         R3 
    /*00011998*/ CMP         R0, #0 
    /*0001199c*/ STRNE       R0, [SP, #12] 
    /*000119a0*/ MOVWNE      R3, #13375                  @ 0x343f 
    /*000119a4*/ BNE         VouChnVgs_x118fc
    VouChnVgs_x119a8:
    /*000119a8*/ LDR         R3, [R4, #128]              @ 0x80 
    /*000119ac*/ MOV         R0, #0 
    /*000119b0*/ ADD         R3, R3, #1 
    /*000119b4*/ STR         R3, [R4, #128]              @ 0x80 
    /*000119b8*/ ADD         SP, SP, #116                @ 0x74 
    /*000119bc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnVgs_x119c0:
    /*000119c0*/ LDR         R3, [FP, #1212]             @ 0x4bc 
    /*000119c4*/ CMP         R3, #0 
    /*000119c8*/ BNE         VouChnVgs_x11a0c
    /*000119cc*/ STR         R3, [R7, #20] 
    /*000119d0*/ STR         R3, [FP, #1268]             @ 0x4f4 
    /*000119d4*/ B           VouChnVgs_x117b4
    VouChnVgs_x119d8:
    /*000119d8*/ MOV         R3, R9 
    /*000119dc*/ MOV         R1, R8 
    /*000119e0*/ MOV         R0, R6 
    /*000119e4*/ LDR         R2, [PC, #932]              @ 0x0000000000011d90 
    /*000119e8*/ BL          0x00000000000119E8          @ VouSetVgsOsdParam [R_ARM_CALL: .text+0x111d0] 
    /*000119ec*/ LDR         R1, [PC, #924]              @ 0x0000000000011d90 
    /*000119f0*/ MOV         R3, #1 
    /*000119f4*/ MOV         R2, #80                     @ 0x50 
    /*000119f8*/ STR         R3, [FP, #1272]             @ 0x4f8 
    /*000119fc*/ SUB         R0, R1, #240                @ 0xf0 
    /*00011a00*/ STR         R3, [R7, #76]               @ 0x4c 
    /*00011a04*/ BL          0x0000000000011A04          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011a08*/ B           VouChnVgs_x11794
    VouChnVgs_x11a0c:
    /*00011a0c*/ MOV         R3, R9 
    /*00011a10*/ MOV         R1, R8 
    /*00011a14*/ MOV         R0, R6 
    /*00011a18*/ LDR         R2, [PC, #884]              @ 0x0000000000011d94 
    /*00011a1c*/ BL          0x0000000000011A1C          @ VouSetVgsCoverParam [R_ARM_CALL: .text+0x1157c] 
    /*00011a20*/ LDR         R1, [PC, #876]              @ 0x0000000000011d94 
    /*00011a24*/ MOV         R3, #1 
    /*00011a28*/ MOV         R2, #52                     @ 0x34 
    /*00011a2c*/ SUB         R0, R1, #376                @ 0x178 
    /*00011a30*/ STR         R3, [FP, #1268]             @ 0x4f4 
    /*00011a34*/ STR         R3, [R7, #20] 
    /*00011a38*/ BL          0x0000000000011A38          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011a3c*/ B           VouChnVgs_x117b4
    VouChnVgs_x11a40:
    /*00011a40*/ MOV         R2, #20 
    /*00011a44*/ ADD         R1, R4, #236                @ 0xec 
    /*00011a48*/ ADD         R0, SP, #40                 @ 0x28 
    /*00011a4c*/ BL          0x0000000000011A4C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011a50*/ LDR         R3, [SP, #40]               @ 0x28 
    /*00011a54*/ CMP         R3, #0 
    /*00011a58*/ BNE         VouChnVgs_x11af8
    /*00011a5c*/ ADD         R0, SP, #40                 @ 0x28 
    /*00011a60*/ MOV         R1, R9 
    /*00011a64*/ BL          0x0000000000004CA0 
    /*00011a68*/ LDR         R3, [R9, #8] 
    /*00011a6c*/ CMP         R3, #3 
    /*00011a70*/ BEQ         VouChnVgs_x11cac
    VouChnVgs_x11a74:
    /*00011a74*/ LDR         R3, [R9, #708]              @ 0x2c4 
    /*00011a78*/ CMP         R3, #1 
    /*00011a7c*/ BEQ         VouChnVgs_x11ce4
    VouChnVgs_x11a80:
    /*00011a80*/ MOVW        R7, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x30d8] 
    /*00011a84*/ MOVT        R7, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x30d8] 
    /*00011a88*/ MOV         R3, #1 
    /*00011a8c*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00011a90*/ MOV         R0, R7 
    /*00011a94*/ MOV         R2, #16 
    /*00011a98*/ STR         R3, [R0], #4 
    /*00011a9c*/ BL          0x0000000000011A9C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011aa0*/ ADD         R1, SP, #44                 @ 0x2c 
    /*00011aa4*/ MOV         R2, #16 
    /*00011aa8*/ ADD         R0, R4, #260                @ 0x104 
    /*00011aac*/ BL          0x0000000000011AAC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011ab0*/ LDR         R3, [FP, #1344]             @ 0x540 
    /*00011ab4*/ ADD         R0, R4, #9536               @ 0x2540 
    /*00011ab8*/ CMP         R3, #1 
    /*00011abc*/ ADD         R0, R0, #4 
    /*00011ac0*/ MOVEQ       R3, #0 
    /*00011ac4*/ STREQ       R3, [FP, #1344]             @ 0x540 
    /*00011ac8*/ BL          0x0000000000011AC8          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00011acc*/ B           VouChnVgs_x11734
    VouChnVgs_x11ad0:
    /*00011ad0*/ MOVW        R3, #13094                  @ 0x3326 
    /*00011ad4*/ MOVW        R2, #0                      @ .LC225 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5f2c] 
    /*00011ad8*/ STR         R3, [SP] 
    /*00011adc*/ MOVT        R2, #0                      @ .LC225 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5f2c] 
    /*00011ae0*/ LDR         R3, [PC, #672]              @ 0x0000000000011d88 
    /*00011ae4*/ MOV         R1, #15 
    /*00011ae8*/ MOV         R0, #4 
    /*00011aec*/ BL          0x0000000000011AEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011af0*/ MOV         R0, R7 
    /*00011af4*/ B           VouChnVgs_x11694
    VouChnVgs_x11af8:
    /*00011af8*/ LDR         R3, [R5] 
    /*00011afc*/ MOVW        IP, #19923                  @ 0x4dd3 
    /*00011b00*/ LDR         R2, [R4, #240]              @ 0xf0 
    /*00011b04*/ MOVT        IP, #4194                   @ 0x1062 
    /*00011b08*/ LDR         LR, [R4, #244]              @ 0xf4 
    /*00011b0c*/ ADD         R0, SP, #40                 @ 0x28 
    /*00011b10*/ LDR         R7, [R4, #248]              @ 0xf8 
    /*00011b14*/ MOV         R1, R9 
    /*00011b18*/ MUL         R2, R2, R3 
    /*00011b1c*/ UMULL       R2, R3, R2, IP 
    /*00011b20*/ LSR         R3, R3, #6 
    /*00011b24*/ BIC         R3, R3, #1 
    /*00011b28*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00011b2c*/ LDR         R2, [R5, #4] 
    /*00011b30*/ MUL         R2, LR, R2 
    /*00011b34*/ UMULL       R2, R3, R2, IP 
    /*00011b38*/ LSR         R3, R3, #6 
    /*00011b3c*/ BIC         R3, R3, #1 
    /*00011b40*/ STR         R3, [SP, #48]               @ 0x30 
    /*00011b44*/ LDR         R2, [R5] 
    /*00011b48*/ MUL         R2, R7, R2 
    /*00011b4c*/ UMULL       R2, R3, R2, IP 
    /*00011b50*/ LSR         R3, R3, #6 
    /*00011b54*/ BIC         R3, R3, #1 
    /*00011b58*/ STR         R3, [SP, #52]               @ 0x34 
    /*00011b5c*/ LDR         R3, [R4, #252]              @ 0xfc 
    /*00011b60*/ LDR         R2, [R5, #4] 
    /*00011b64*/ MUL         R3, R3, R2 
    /*00011b68*/ UMULL       R2, R3, R3, IP 
    /*00011b6c*/ LSR         R3, R3, #6 
    /*00011b70*/ BIC         R3, R3, #1 
    /*00011b74*/ STR         R3, [SP, #56]               @ 0x38 
    /*00011b78*/ BL          0x0000000000004CA0 
    /*00011b7c*/ B           VouChnVgs_x11a80
    VouChnVgs_x11b80:
    /*00011b80*/ LDR         R1, [PC, #528]              @ 0x0000000000011d98 
    /*00011b84*/ MOV         R2, #52                     @ 0x34 
    /*00011b88*/ ADD         R0, R1, #428                @ 0x1ac 
    /*00011b8c*/ BL          0x0000000000011B8C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011b90*/ LDR         R3, [SL, #64]               @ 0x40 
    /*00011b94*/ BLX         R3 
    /*00011b98*/ SUBS        R3, R0, #0 
    /*00011b9c*/ STR         R3, [SP, #36]               @ 0x24 
    /*00011ba0*/ BEQ         VouChnVgs_x11d2c
    /*00011ba4*/ MOV         R2, #744                    @ 0x2e8 
    /*00011ba8*/ MOV         R1, R5 
    /*00011bac*/ BL          0x0000000000011BAC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011bb0*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00011bb4*/ MOV         R2, #336                    @ 0x150 
    /*00011bb8*/ MOV         R1, R5 
    /*00011bbc*/ STR         R9, [R3, #720]              @ 0x2d0 
    /*00011bc0*/ MOV         R0, R3 
    /*00011bc4*/ MOV         R9, R3 
    /*00011bc8*/ BL          0x0000000000011BC8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011bcc*/ MOV         R2, #336                    @ 0x150 
    /*00011bd0*/ MOV         R1, R5 
    /*00011bd4*/ ADD         R0, R9, R2 
    /*00011bd8*/ BL          0x0000000000011BD8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00011bdc*/ LDR         FP, [SP, #20] 
    /*00011be0*/ MOV         R1, R9 
    /*00011be4*/ LDR         R3, [SL, #16] 
    /*00011be8*/ LDR         R2, [PC, #428]              @ 0x0000000000011d9c 
    /*00011bec*/ LDR         R0, [FP, #744]              @ 0x2e8 
    /*00011bf0*/ BLX         R3 
    /*00011bf4*/ SUBS        R9, R0, #0 
    /*00011bf8*/ BNE         VouChnVgs_x11d58
    /*00011bfc*/ STR         R9, [R7, #20] 
    /*00011c00*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x30d8] 
    /*00011c04*/ LDR         R3, [SL, #32] 
    /*00011c08*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x30d8] 
    /*00011c0c*/ MOV         R1, R5 
    /*00011c10*/ LDR         R0, [FP, #744]              @ 0x2e8 
    /*00011c14*/ BLX         R3 
    /*00011c18*/ SUBS        R9, R0, #0 
    /*00011c1c*/ BEQ         VouChnVgs_x11860
    /*00011c20*/ MOV         R1, R8 
    /*00011c24*/ MOV         R0, R6 
    /*00011c28*/ BL          0x0000000000011C28          @ VouPutCover [R_ARM_CALL: .text+0x11480] 
    /*00011c2c*/ LDR         R3, [R7, #76]               @ 0x4c 
    /*00011c30*/ CMP         R3, #0 
    /*00011c34*/ BEQ         VouChnVgs_x11c44
    /*00011c38*/ MOV         R1, R8 
    /*00011c3c*/ MOV         R0, R6 
    /*00011c40*/ BL          0x0000000000011C40          @ VouPutOsd [R_ARM_CALL: .text+0x11138] 
    VouChnVgs_x11c44:
    /*00011c44*/ STR         R9, [SP, #12] 
    /*00011c48*/ MOVW        R3, #13315                  @ 0x3403 
    /*00011c4c*/ B           VouChnVgs_x118fc
    VouChnVgs_x11c50:
    /*00011c50*/ LDR         R3, [R7, #76]               @ 0x4c 
    /*00011c54*/ CMP         R3, #0 
    /*00011c58*/ BNE         VouChnVgs_x11d04
    VouChnVgs_x11c5c:
    /*00011c5c*/ LDR         R3, [R7, #20] 
    /*00011c60*/ CMP         R3, #0 
    /*00011c64*/ BEQ         VouChnVgs_x11c74
    /*00011c68*/ MOV         R1, R8 
    /*00011c6c*/ MOV         R0, R6 
    /*00011c70*/ BL          0x0000000000011C70          @ VouPutCover [R_ARM_CALL: .text+0x11480] 
    VouChnVgs_x11c74:
    /*00011c74*/ STR         R9, [SP, #12] 
    /*00011c78*/ MOVW        R3, #13344                  @ 0x3420 
    /*00011c7c*/ B           VouChnVgs_x118fc
    VouChnVgs_x11c80:
    /*00011c80*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f80] 
    /*00011c84*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f80] 
    /*00011c88*/ MOVW        R3, #13119                  @ 0x333f 
    /*00011c8c*/ STR         R6, [SP, #4] 
    /*00011c90*/ STR         R3, [SP] 
    VouChnVgs_x11c94:
    /*00011c94*/ LDR         R3, [PC, #236]              @ 0x0000000000011d88 
    /*00011c98*/ MOV         R1, #15 
    /*00011c9c*/ MOV         R0, #3 
    /*00011ca0*/ BL          0x0000000000011CA0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011ca4*/ MVN         R0, #0 
    /*00011ca8*/ B           VouChnVgs_x11694
    VouChnVgs_x11cac:
    /*00011cac*/ LDR         R3, [SP, #48]               @ 0x30 
    /*00011cb0*/ LDR         R0, [SP, #56]               @ 0x38 
    /*00011cb4*/ LDR         R1, [R5, #44]               @ 0x2c 
    /*00011cb8*/ LDR         R2, [R5, #48]               @ 0x30 
    /*00011cbc*/ ADD         R3, R3, R3, LSR #31 
    /*00011cc0*/ LSR         R0, R0, #1 
    /*00011cc4*/ STR         R0, [SP, #56]               @ 0x38 
    /*00011cc8*/ ASR         R3, R3, #1 
    /*00011ccc*/ LSL         R1, R1, #1 
    /*00011cd0*/ STR         R3, [SP, #48]               @ 0x30 
    /*00011cd4*/ LSL         R3, R2, #1 
    /*00011cd8*/ STR         R1, [R5, #44]               @ 0x2c 
    /*00011cdc*/ STR         R3, [R5, #48]               @ 0x30 
    /*00011ce0*/ B           VouChnVgs_x11a74
    VouChnVgs_x11ce4:
    /*00011ce4*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*00011ce8*/ LDR         R2, [SP, #52]               @ 0x34 
    /*00011cec*/ ADD         R3, R3, R3, LSR #31 
    /*00011cf0*/ LSR         R2, R2, #1 
    /*00011cf4*/ STR         R2, [SP, #52]               @ 0x34 
    /*00011cf8*/ ASR         R3, R3, #1 
    /*00011cfc*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00011d00*/ B           VouChnVgs_x11a80
    VouChnVgs_x11d04:
    /*00011d04*/ MOV         R1, R8 
    /*00011d08*/ MOV         R0, R6 
    /*00011d0c*/ BL          0x0000000000011D0C          @ VouPutOsd [R_ARM_CALL: .text+0x11138] 
    /*00011d10*/ B           VouChnVgs_x11c5c
    VouChnVgs_x11d14:
    /*00011d14*/ MOVW        R3, #13127                  @ 0x3347 
    /*00011d18*/ STR         R6, [SP, #4] 
    VouChnVgs_x11d1c:
    /*00011d1c*/ MOVW        R2, #0                      @ .LC226 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5f68] 
    /*00011d20*/ STR         R3, [SP] 
    /*00011d24*/ MOVT        R2, #0                      @ .LC226 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5f68] 
    /*00011d28*/ B           VouChnVgs_x11c94
    VouChnVgs_x11d2c:
    /*00011d2c*/ MOVW        R3, #13278                  @ 0x33de 
    /*00011d30*/ STR         R6, [SP, #4] 
    /*00011d34*/ STR         R3, [SP] 
    /*00011d38*/ MOV         R1, FP 
    /*00011d3c*/ MOVW        R2, #0                      @ .LC226 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5f68] 
    /*00011d40*/ LDR         R3, [PC, #64]               @ 0x0000000000011d88 
    /*00011d44*/ MOVT        R2, #0                      @ .LC226 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5f68] 
    /*00011d48*/ MOV         R0, #3 
    /*00011d4c*/ BL          0x0000000000011D4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011d50*/ MVN         R0, #0 
    /*00011d54*/ B           VouChnVgs_x11694
    VouChnVgs_x11d58:
    /*00011d58*/ MOV         R1, R8 
    /*00011d5c*/ MOV         R0, R6 
    /*00011d60*/ BL          0x0000000000011D60          @ VouPutCover [R_ARM_CALL: .text+0x11480] 
    /*00011d64*/ LDR         R3, [R7, #76]               @ 0x4c 
    /*00011d68*/ CMP         R3, #0 
    /*00011d6c*/ BEQ         VouChnVgs_x11d7c
    /*00011d70*/ MOV         R1, R8 
    /*00011d74*/ MOV         R0, R6 
    /*00011d78*/ BL          0x0000000000011D78          @ VouPutOsd [R_ARM_CALL: .text+0x11138] 
    VouChnVgs_x11d7c:
    /*00011d7c*/ STR         R9, [SP, #12] 
    /*00011d80*/ MOVW        R3, #13296                  @ 0x33f0 
    /*00011d84*/ B           VouChnVgs_x118fc
    /*00011d88*/ ANDEQ       R0, R0, IP, LSL #21 
    /*00011d8c*/ LDRDEQ      R3, [R0], -R0 
    /*00011d90*/ ANDEQ       R3, R0, R8, LSL R2 
    /*00011d94*/ ANDEQ       R3, R0, R8, ROR #4 
    /*00011d98*/ STRDEQ      R3, [R0], -R0 
    /*00011d9c*/ MULEQ       R0, IP, R2 
FUNC_END VouChnVgs


FUNC_BEGIN VouGetOsdEnableFlag
    /*00011da0*/ ADD         R2, R1, R0, LSL #2 
    /*00011da4*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00011da8*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00011dac*/ PUSH        {R4, R5, R6, LR} 
    /*00011db0*/ SUB         SP, SP, #8 
    /*00011db4*/ LDR         R4, [R3, R2, LSL #2] 
    /*00011db8*/ MOV         R5, R0 
    /*00011dbc*/ MOV         R6, R1 
    /*00011dc0*/ BL          0x0000000000011DC0          @ VouGetOsd [R_ARM_CALL: .text+0x10f80] 
    /*00011dc4*/ CMP         R0, #0 
    /*00011dc8*/ MOVNE       R4, #0 
    /*00011dcc*/ BNE         VouGetOsdEnableFlag_x11de0
    /*00011dd0*/ ADD         R4, R4, #8192               @ 0x2000 
    /*00011dd4*/ LDR         R4, [R4, #1132]             @ 0x46c 
    /*00011dd8*/ ADDS        R4, R4, #0 
    /*00011ddc*/ MOVNE       R4, #1 
    VouGetOsdEnableFlag_x11de0:
    /*00011de0*/ MOV         R1, R6 
    /*00011de4*/ MOV         R0, R5 
    /*00011de8*/ BL          0x0000000000011DE8          @ VouPutOsd [R_ARM_CALL: .text+0x11138] 
    /*00011dec*/ STR         R4, [SP, #4] 
    /*00011df0*/ MOVW        R3, #12848                  @ 0x3230 
    /*00011df4*/ MOV         R1, #15 
    /*00011df8*/ STR         R3, [SP] 
    /*00011dfc*/ MOVW        R2, #0                      @ .LC228 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5fe4] 
    /*00011e00*/ LDR         R3, [PC, #20]               @ 0x0000000000011e1c 
    /*00011e04*/ MOVT        R2, #0                      @ .LC228 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5fe4] 
    /*00011e08*/ MOV         R0, #7 
    /*00011e0c*/ BL          0x0000000000011E0C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011e10*/ MOV         R0, R4 
    /*00011e14*/ ADD         SP, SP, #8 
    /*00011e18*/ POP         {R4, R5, R6, PC} 
    /*00011e1c*/ MULEQ       R0, R8, SL 
FUNC_END VouGetOsdEnableFlag


FUNC_BEGIN VouGetCoverEnableFlag
    /*00011e20*/ ADD         R2, R1, R0, LSL #2 
    /*00011e24*/ MOVW        R3, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00011e28*/ MOVT        R3, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00011e2c*/ PUSH        {R4, R5, R6, LR} 
    /*00011e30*/ SUB         SP, SP, #8 
    /*00011e34*/ LDR         R4, [R3, R2, LSL #2] 
    /*00011e38*/ MOV         R5, R0 
    /*00011e3c*/ MOV         R6, R1 
    /*00011e40*/ BL          0x0000000000011E40          @ VouGetCover [R_ARM_CALL: .text+0x112e4] 
    /*00011e44*/ CMP         R0, #0 
    /*00011e48*/ MOVNE       R4, #0 
    /*00011e4c*/ BNE         VouGetCoverEnableFlag_x11e60
    /*00011e50*/ ADD         R4, R4, #8192               @ 0x2000 
    /*00011e54*/ LDR         R4, [R4, #1212]             @ 0x4bc 
    /*00011e58*/ ADDS        R4, R4, #0 
    /*00011e5c*/ MOVNE       R4, #1 
    VouGetCoverEnableFlag_x11e60:
    /*00011e60*/ MOV         R1, R6 
    /*00011e64*/ MOV         R0, R5 
    /*00011e68*/ BL          0x0000000000011E68          @ VouPutCover [R_ARM_CALL: .text+0x11480] 
    /*00011e6c*/ STR         R4, [SP, #4] 
    /*00011e70*/ MOVW        R3, #12878                  @ 0x324e 
    /*00011e74*/ MOV         R1, #15 
    /*00011e78*/ STR         R3, [SP] 
    /*00011e7c*/ MOVW        R2, #0                      @ .LC229 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6018] 
    /*00011e80*/ LDR         R3, [PC, #20]               @ 0x0000000000011e9c 
    /*00011e84*/ MOVT        R2, #0                      @ .LC229 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6018] 
    /*00011e88*/ MOV         R0, #7 
    /*00011e8c*/ BL          0x0000000000011E8C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00011e90*/ MOV         R0, R4 
    /*00011e94*/ ADD         SP, SP, #8 
    /*00011e98*/ POP         {R4, R5, R6, PC} 
    /*00011e9c*/ ANDEQ       R0, R0, IP, LSR #21 
FUNC_END VouGetCoverEnableFlag


FUNC_BEGIN VouChnVgsProcess
    /*00011ea0*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00011ea4*/ SUB         SP, SP, #108                @ 0x6c 
    /*00011ea8*/ MOV         R5, R0 
    /*00011eac*/ MOV         R0, #45                     @ 0x2d 
    /*00011eb0*/ MOV         R3, #0 
    /*00011eb4*/ STR         R3, [SP, #36]               @ 0x24 
    /*00011eb8*/ BL          0x0000000000011EB8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00011ebc*/ SUBS        R4, R0, #0 
    /*00011ec0*/ BEQ         VouChnVgsProcess_x12144
    /*00011ec4*/ LDR         R3, [R4] 
    /*00011ec8*/ CMP         R3, #0 
    /*00011ecc*/ BEQ         VouChnVgsProcess_x12144
    /*00011ed0*/ LDR         R3, [R4, #12] 
    /*00011ed4*/ CMP         R3, #0 
    /*00011ed8*/ BEQ         VouChnVgsProcess_x12144
    /*00011edc*/ LDR         R3, [R4, #4] 
    /*00011ee0*/ CMP         R3, #0 
    /*00011ee4*/ BEQ         VouChnVgsProcess_x12144
    /*00011ee8*/ MOVW        R6, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00011eec*/ MOVT        R6, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00011ef0*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00011ef4*/ MLA         R3, R3, R5, R6 
    /*00011ef8*/ LDR         R3, [R3, #220]              @ 0xdc 
    /*00011efc*/ CMP         R3, #0 
    /*00011f00*/ BNE         VouChnVgsProcess_x12114
    /*00011f04*/ MOV         R0, R5 
    /*00011f08*/ BL          0x0000000000011F08          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*00011f0c*/ CMN         R0, #1 
    /*00011f10*/ MOV         R8, R0 
    /*00011f14*/ BEQ         VouChnVgsProcess_x123dc
    VouChnVgsProcess_x11f18:
    /*00011f18*/ MOVW        FP, #12192                  @ 0x2fa0 
    /*00011f1c*/ MUL         FP, FP, R5 
    /*00011f20*/ ADD         R0, FP, #11840              @ 0x2e40 
    /*00011f24*/ ADD         R9, R6, FP 
    /*00011f28*/ ADD         R0, R0, #20 
    /*00011f2c*/ ADD         SL, R6, R0 
    /*00011f30*/ LDR         R1, [R9, #220]              @ 0xdc 
    /*00011f34*/ MOV         R0, SL 
    /*00011f38*/ BL          0x0000000000011F38          @ VouBufQueryFreeNth [R_ARM_CALL: .text+0x4148] 
    /*00011f3c*/ SUBS        R7, R0, #0 
    /*00011f40*/ BEQ         VouChnVgsProcess_x12330
    VouChnVgsProcess_x11f44:
    /*00011f44*/ MOV         R1, R7 
    /*00011f48*/ MOV         R0, R5 
    /*00011f4c*/ BL          0x0000000000011F4C          @ VouBufFillDispNode [R_ARM_CALL: .text+0x4678] 
    /*00011f50*/ CMP         R0, #0 
    /*00011f54*/ BEQ         VouChnVgsProcess_x11f9c
    /*00011f58*/ MOV         R0, R8 
    /*00011f5c*/ BL          0x0000000000011F5C          @ VOU_DRV_IsVirtDev [R_ARM_CALL: .text+0x17648] 
    /*00011f60*/ CMP         R0, #0 
    /*00011f64*/ BEQ         VouChnVgsProcess_x1227c
    /*00011f68*/ MOV         R0, SL 
    /*00011f6c*/ BL          0x0000000000011F6C          @ VouBufGetUser [R_ARM_CALL: .text+0x3ffc] 
    /*00011f70*/ SUBS        R9, R0, #0 
    /*00011f74*/ BEQ         VouChnVgsProcess_x1213c
    /*00011f78*/ BL          0x0000000000011F78          @ VouBufClearDispNode [R_ARM_CALL: .text+0x4848] 
    /*00011f7c*/ MOV         R1, R9 
    /*00011f80*/ MOV         R0, SL 
    /*00011f84*/ BL          0x0000000000011F84          @ VouBufPutFree [R_ARM_CALL: .text+0x3fd0] 
    /*00011f88*/ MOV         R1, R7 
    /*00011f8c*/ MOV         R0, R5 
    /*00011f90*/ BL          0x0000000000011F90          @ VouBufFillDispNode [R_ARM_CALL: .text+0x4678] 
    /*00011f94*/ CMP         R0, #0 
    /*00011f98*/ BNE         VouChnVgsProcess_x12308
    VouChnVgsProcess_x11f9c:
    /*00011f9c*/ LDR         SL, [R7] 
    /*00011fa0*/ MOV         R3, #0 
    /*00011fa4*/ BFI         R3, R8, #0, #8 
    /*00011fa8*/ MOV         R1, #0 
    /*00011fac*/ BFI         R3, R5, #8, #8 
    /*00011fb0*/ STR         R7, [SP, #48]               @ 0x30 
    /*00011fb4*/ BFC         R3, #16, #8 
    /*00011fb8*/ STR         R5, [SP] 
    /*00011fbc*/ STR         R3, [SP, #40]               @ 0x28 
    /*00011fc0*/ MOV         R2, #1 
    /*00011fc4*/ STR         R1, [SP, #44]               @ 0x2c 
    /*00011fc8*/ MOVW        R3, #0                      @ VouVgsJobDone [R_ARM_MOVW_ABS_NC: .text+0x4fd4] 
    /*00011fcc*/ STR         R2, [SP, #92]               @ 0x5c 
    /*00011fd0*/ MOVT        R3, #0                      @ VouVgsJobDone [R_ARM_MOVT_ABS: .text+0x4fd4] 
    /*00011fd4*/ STR         R1, [SP, #52]               @ 0x34 
    /*00011fd8*/ ADD         R0, SL, #744                @ 0x2e8 
    /*00011fdc*/ STR         R3, [SP, #96]               @ 0x60 
    /*00011fe0*/ MOV         R2, #15 
    /*00011fe4*/ ADD         R3, SP, #40                 @ 0x28 
    /*00011fe8*/ STR         R3, [SP, #4] 
    /*00011fec*/ MOV         R3, R5 
    /*00011ff0*/ LDR         R8, [R4] 
    /*00011ff4*/ BLX         R8 
    /*00011ff8*/ CMP         R0, #0 
    /*00011ffc*/ BNE         VouChnVgsProcess_x12230
    /*00012000*/ MOV         R1, SL 
    /*00012004*/ ADD         R2, SP, #36                 @ 0x24 
    /*00012008*/ MOV         R0, R5 
    /*0001200c*/ ADD         R7, FP, #240                @ 0xf0 
    /*00012010*/ BL          0x0000000000004E28 
    /*00012014*/ LDR         R1, [SP, #36]               @ 0x24 
    /*00012018*/ MOVW        R0, #13634                  @ 0x3542 
    /*0001201c*/ LDR         R3, [PC, #1072]             @ 0x0000000000012454 
    /*00012020*/ ADD         FP, FP, #256                @ 0x100 
    /*00012024*/ MOVW        R2, #0                      @ .LC238 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x62a0] 
    /*00012028*/ STR         R1, [SP, #12] 
    /*0001202c*/ MOVT        R2, #0                      @ .LC238 [R_ARM_MOVT_ABS: .rodata.str1.4+0x62a0] 
    /*00012030*/ LDR         IP, [SL, #744]              @ 0x2e8 
    /*00012034*/ MOV         R1, #15 
    /*00012038*/ STM         SP, {R0, R5} 
    /*0001203c*/ MOV         R0, #7 
    /*00012040*/ MOVW        R8, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00012044*/ ADD         R7, R6, R7 
    /*00012048*/ STR         IP, [SP, #8] 
    /*0001204c*/ MOVW        IP, #0                      @ .LC230 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x604c] 
    /*00012050*/ MOV         R9, IP 
    /*00012054*/ BL          0x0000000000012054          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012058*/ ADD         R3, R6, FP 
    /*0001205c*/ MOVT        R8, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00012060*/ LSL         FP, R5, #2 
    /*00012064*/ STR         R4, [SP, #28] 
    /*00012068*/ MOV         R2, R3 
    /*0001206c*/ MOV         IP, R9 
    /*00012070*/ MOV         R4, R2 
    /*00012074*/ MOVT        IP, #0                      @ .LC230 [R_ARM_MOVT_ABS: .rodata.str1.4+0x604c] 
    /*00012078*/ MOVW        R3, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*0001207c*/ STR         IP, [SP, #20] 
    /*00012080*/ MOVT        R3, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    /*00012084*/ STR         R3, [SP, #24] 
    VouChnVgsProcess_x12088:
    /*00012088*/ LDR         R9, [R7, #4]! 
    /*0001208c*/ CMP         R9, #3 
    /*00012090*/ BHI         VouChnVgsProcess_x12264
    VouChnVgsProcess_x12094:
    /*00012094*/ ADD         R3, FP, R9 
    /*00012098*/ LDR         R3, [R8, R3, LSL #2] 
    /*0001209c*/ CMP         R3, #0 
    /*000120a0*/ BEQ         VouChnVgsProcess_x120b0
    /*000120a4*/ LDR         R3, [R3, #4] 
    /*000120a8*/ CMP         R3, #1 
    /*000120ac*/ BEQ         VouChnVgsProcess_x122a4
    VouChnVgsProcess_x120b0:
    /*000120b0*/ CMP         R7, R4 
    /*000120b4*/ BNE         VouChnVgsProcess_x12088
    /*000120b8*/ LDR         R3, [SP, #36]               @ 0x24 
    /*000120bc*/ LDR         R4, [SP, #28] 
    /*000120c0*/ CMP         R3, #0 
    /*000120c4*/ BEQ         VouChnVgsProcess_x12394
    /*000120c8*/ LDR         R3, [R4, #12] 
    /*000120cc*/ MOV         R2, #0 
    /*000120d0*/ MOV         R1, #1 
    /*000120d4*/ LDR         R0, [SL, #744]              @ 0x2e8 
    /*000120d8*/ BLX         R3 
    /*000120dc*/ CMP         R0, #0 
    /*000120e0*/ BNE         VouChnVgsProcess_x12434
    /*000120e4*/ LDR         R2, [SL, #700]              @ 0x2bc 
    /*000120e8*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*000120ec*/ MLA         R3, R3, R5, R6 
    /*000120f0*/ MOVW        R1, #3048                   @ 0xbe8 
    /*000120f4*/ MLA         R5, R1, R5, R2 
    /*000120f8*/ ADD         R5, R5, #2944               @ 0xb80 
    /*000120fc*/ LDR         R2, [R3, #220]              @ 0xdc 
    /*00012100*/ ADD         R5, R5, #6 
    /*00012104*/ ADD         R2, R2, #1 
    /*00012108*/ STR         R2, [R3, #220]              @ 0xdc 
    /*0001210c*/ STR         R0, [R6, R5, LSL #2] 
    /*00012110*/ B           VouChnVgsProcess_x1213c
    VouChnVgsProcess_x12114:
    /*00012114*/ STR         R3, [SP, #8] 
    /*00012118*/ MOVW        R2, #0                      @ .LC232 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x60b4] 
    /*0001211c*/ MOVW        R3, #13540                  @ 0x34e4 
    /*00012120*/ STR         R5, [SP, #4] 
    /*00012124*/ STR         R3, [SP] 
    /*00012128*/ MOVT        R2, #0                      @ .LC232 [R_ARM_MOVT_ABS: .rodata.str1.4+0x60b4] 
    /*0001212c*/ LDR         R3, [PC, #800]              @ 0x0000000000012454 
    /*00012130*/ MOV         R1, #15 
    /*00012134*/ MOV         R0, #4 
    /*00012138*/ BL          0x0000000000012138          @ HI_LOG [R_ARM_CALL: +0x0] 
    VouChnVgsProcess_x1213c:
    /*0001213c*/ ADD         SP, SP, #108                @ 0x6c 
    /*00012140*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnVgsProcess_x12144:
    /*00012144*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00012148*/ MOVW        R7, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0001214c*/ MUL         R3, R3, R5 
    /*00012150*/ MOVT        R7, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00012154*/ MOVW        R8, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00012158*/ MOVW        SL, #0                      @ .LC230 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x604c] 
    /*0001215c*/ MOVW        R9, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*00012160*/ MOVT        R8, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00012164*/ ADD         R4, R3, #240                @ 0xf0 
    /*00012168*/ ADD         R3, R3, #256                @ 0x100 
    /*0001216c*/ ADD         R4, R4, R7 
    /*00012170*/ MOVT        SL, #0                      @ .LC230 [R_ARM_MOVT_ABS: .rodata.str1.4+0x604c] 
    /*00012174*/ ADD         R7, R3, R7 
    /*00012178*/ LSL         FP, R5, #2 
    /*0001217c*/ MOVT        R9, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    VouChnVgsProcess_x12180:
    /*00012180*/ LDR         R6, [R4, #4]! 
    /*00012184*/ CMP         R6, #3 
    /*00012188*/ BHI         VouChnVgsProcess_x121dc
    VouChnVgsProcess_x1218c:
    /*0001218c*/ ADD         R3, FP, R6 
    /*00012190*/ LDR         R3, [R8, R3, LSL #2] 
    /*00012194*/ CMP         R3, #0 
    /*00012198*/ BEQ         VouChnVgsProcess_x121a8
    /*0001219c*/ LDR         R3, [R3, #4] 
    /*000121a0*/ CMP         R3, #1 
    /*000121a4*/ BEQ         VouChnVgsProcess_x121f4
    VouChnVgsProcess_x121a8:
    /*000121a8*/ CMP         R7, R4 
    /*000121ac*/ BNE         VouChnVgsProcess_x12180
    /*000121b0*/ STR         R5, [SP, #4] 
    /*000121b4*/ MOVW        R3, #13533                  @ 0x34dd 
    /*000121b8*/ MOV         R1, #15 
    /*000121bc*/ STR         R3, [SP] 
    /*000121c0*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x1f80] 
    /*000121c4*/ LDR         R3, [PC, #648]              @ 0x0000000000012454 
    /*000121c8*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x1f80] 
    /*000121cc*/ MOV         R0, #3 
    /*000121d0*/ BL          0x00000000000121D0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000121d4*/ ADD         SP, SP, #108                @ 0x6c 
    /*000121d8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnVgsProcess_x121dc:
    /*000121dc*/ MOV         R3, SL 
    /*000121e0*/ MOVW        R2, #13513                  @ 0x34c9 
    /*000121e4*/ LDR         R1, [PC, #616]              @ 0x0000000000012454 
    /*000121e8*/ MOV         R0, R9 
    /*000121ec*/ BL          0x00000000000121EC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000121f0*/ B           VouChnVgsProcess_x1218c
    VouChnVgsProcess_x121f4:
    /*000121f4*/ MOV         R1, R6 
    /*000121f8*/ MOV         R0, R5 
    /*000121fc*/ BL          0x00000000000121FC          @ VouGetChnValidData [R_ARM_CALL: .text+0x10d54] 
    /*00012200*/ MOVW        R2, #0                      @ .LC231 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6074] 
    /*00012204*/ MOVW        IP, #13529                  @ 0x34d9 
    /*00012208*/ LDR         R3, [PC, #580]              @ 0x0000000000012454 
    /*0001220c*/ MOVT        R2, #0                      @ .LC231 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6074] 
    /*00012210*/ MOV         R1, #15 
    /*00012214*/ CMP         R0, #0 
    /*00012218*/ MOV         R0, #3 
    /*0001221c*/ BEQ         VouChnVgsProcess_x122e8
    /*00012220*/ STMIB       SP, {R5, R6} 
    /*00012224*/ STR         IP, [SP] 
    /*00012228*/ BL          0x0000000000012228          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001222c*/ B           VouChnVgsProcess_x121a8
    VouChnVgsProcess_x12230:
    /*00012230*/ STR         R0, [SP, #8] 
    /*00012234*/ MOVW        R3, #13626                  @ 0x353a 
    /*00012238*/ STR         R5, [SP, #4] 
    /*0001223c*/ MOV         R1, #15 
    /*00012240*/ STR         R3, [SP] 
    /*00012244*/ MOVW        R2, #0                      @ .LC237 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x623c] 
    /*00012248*/ LDR         R3, [PC, #516]              @ 0x0000000000012454 
    /*0001224c*/ MOVT        R2, #0                      @ .LC237 [R_ARM_MOVT_ABS: .rodata.str1.4+0x623c] 
    /*00012250*/ MOV         R0, #3 
    /*00012254*/ BL          0x0000000000012254          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012258*/ MOV         R0, R7 
    /*0001225c*/ BL          0x000000000001225C          @ VouBufClearDispNode [R_ARM_CALL: .text+0x4848] 
    /*00012260*/ B           VouChnVgsProcess_x1213c
    VouChnVgsProcess_x12264:
    /*00012264*/ LDR         R3, [SP, #20] 
    /*00012268*/ MOVW        R2, #13640                  @ 0x3548 
    /*0001226c*/ LDR         R1, [PC, #480]              @ 0x0000000000012454 
    /*00012270*/ LDR         R0, [SP, #24] 
    /*00012274*/ BL          0x0000000000012274          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00012278*/ B           VouChnVgsProcess_x12094
    VouChnVgsProcess_x1227c:
    /*0001227c*/ MOVW        R3, #13604                  @ 0x3524 
    /*00012280*/ STR         R5, [SP, #4] 
    /*00012284*/ STR         R3, [SP] 
    /*00012288*/ MOVW        R2, #0                      @ .LC236 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x61e0] 
    /*0001228c*/ LDR         R3, [PC, #448]              @ 0x0000000000012454 
    /*00012290*/ MOVT        R2, #0                      @ .LC236 [R_ARM_MOVT_ABS: .rodata.str1.4+0x61e0] 
    /*00012294*/ MOV         R1, #15 
    /*00012298*/ MOV         R0, #3 
    /*0001229c*/ BL          0x000000000001229C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000122a0*/ B           VouChnVgsProcess_x1213c
    VouChnVgsProcess_x122a4:
    /*000122a4*/ MOV         R1, R9 
    /*000122a8*/ ADD         R3, SP, #36                 @ 0x24 
    /*000122ac*/ MOV         R2, SL 
    /*000122b0*/ MOV         R0, R5 
    /*000122b4*/ BL          0x0000000000011610 
    /*000122b8*/ CMP         R0, #0 
    /*000122bc*/ BEQ         VouChnVgsProcess_x120b0
    /*000122c0*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*000122c4*/ LDR         R4, [SP, #28] 
    /*000122c8*/ MLA         R5, R3, R5, R6 
    /*000122cc*/ LDR         R3, [R5, #220]              @ 0xdc 
    /*000122d0*/ ADD         R3, R3, #1 
    /*000122d4*/ STR         R3, [R5, #220]              @ 0xdc 
    /*000122d8*/ LDR         R3, [R4, #4] 
    /*000122dc*/ LDR         R0, [SL, #744]              @ 0x2e8 
    /*000122e0*/ BLX         R3 
    /*000122e4*/ B           VouChnVgsProcess_x1213c
    VouChnVgsProcess_x122e8:
    /*000122e8*/ MOVW        R3, #13525                  @ 0x34d5 
    /*000122ec*/ MOVW        R2, #0                      @ .LC225 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5f2c] 
    /*000122f0*/ STR         R3, [SP] 
    /*000122f4*/ MOVT        R2, #0                      @ .LC225 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5f2c] 
    /*000122f8*/ LDR         R3, [PC, #340]              @ 0x0000000000012454 
    /*000122fc*/ MOV         R0, #4 
    /*00012300*/ BL          0x0000000000012300          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012304*/ B           VouChnVgsProcess_x121a8
    VouChnVgsProcess_x12308:
    /*00012308*/ MOVW        R3, #13597                  @ 0x351d 
    /*0001230c*/ STR         R5, [SP, #4] 
    /*00012310*/ STR         R3, [SP] 
    /*00012314*/ MOVW        R2, #0                      @ .LC235 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6180] 
    /*00012318*/ LDR         R3, [PC, #308]              @ 0x0000000000012454 
    /*0001231c*/ MOVT        R2, #0                      @ .LC235 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6180] 
    /*00012320*/ MOV         R1, #15 
    /*00012324*/ MOV         R0, #3 
    /*00012328*/ BL          0x0000000000012328          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001232c*/ B           VouChnVgsProcess_x1213c
    VouChnVgsProcess_x12330:
    /*00012330*/ MOV         R0, R8 
    /*00012334*/ BL          0x0000000000012334          @ VOU_DRV_IsVirtDev [R_ARM_CALL: .text+0x17648] 
    /*00012338*/ CMP         R0, #0 
    /*0001233c*/ BEQ         VouChnVgsProcess_x12404
    /*00012340*/ MOV         R0, SL 
    /*00012344*/ BL          0x0000000000012344          @ VouBufGetUser [R_ARM_CALL: .text+0x3ffc] 
    /*00012348*/ SUBS        R7, R0, #0 
    /*0001234c*/ BEQ         VouChnVgsProcess_x1213c
    /*00012350*/ BL          0x0000000000012350          @ VouBufClearDispNode [R_ARM_CALL: .text+0x4848] 
    /*00012354*/ MOV         R1, R7 
    /*00012358*/ MOV         R0, SL 
    /*0001235c*/ BL          0x000000000001235C          @ VouBufPutFree [R_ARM_CALL: .text+0x3fd0] 
    /*00012360*/ LDR         R1, [R9, #220]              @ 0xdc 
    /*00012364*/ MOV         R0, SL 
    /*00012368*/ BL          0x0000000000012368          @ VouBufQueryFreeNth [R_ARM_CALL: .text+0x4148] 
    /*0001236c*/ SUBS        R7, R0, #0 
    /*00012370*/ BNE         VouChnVgsProcess_x11f44
    /*00012374*/ MOVW        R3, #0                      @ .LC233 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6118] 
    /*00012378*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*0001237c*/ MOVT        R3, #0                      @ .LC233 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6118] 
    /*00012380*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    /*00012384*/ MOV         R2, #13568                  @ 0x3500 
    /*00012388*/ LDR         R1, [PC, #196]              @ 0x0000000000012454 
    /*0001238c*/ BL          0x000000000001238C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00012390*/ B           VouChnVgsProcess_x11f44
    VouChnVgsProcess_x12394:
    /*00012394*/ MOVW        R2, #0                      @ .LC240 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6328] 
    /*00012398*/ MOVT        R2, #0                      @ .LC240 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6328] 
    /*0001239c*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*000123a0*/ STR         R5, [SP, #4] 
    /*000123a4*/ MLA         R5, R3, R5, R6 
    /*000123a8*/ MOVW        R3, #13683                  @ 0x3573 
    /*000123ac*/ STR         R3, [SP] 
    VouChnVgsProcess_x123b0:
    /*000123b0*/ LDR         IP, [R5, #220]              @ 0xdc 
    /*000123b4*/ MOV         R1, #15 
    /*000123b8*/ LDR         R3, [PC, #148]              @ 0x0000000000012454 
    /*000123bc*/ MOV         R0, #7 
    /*000123c0*/ ADD         IP, IP, #1 
    /*000123c4*/ STR         IP, [R5, #220]              @ 0xdc 
    /*000123c8*/ BL          0x00000000000123C8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000123cc*/ LDR         R3, [R4, #4] 
    /*000123d0*/ LDR         R0, [SL, #744]              @ 0x2e8 
    /*000123d4*/ BLX         R3 
    /*000123d8*/ B           VouChnVgsProcess_x1213c
    VouChnVgsProcess_x123dc:
    /*000123dc*/ MOVW        R3, #13548                  @ 0x34ec 
    /*000123e0*/ STR         R5, [SP, #4] 
    /*000123e4*/ STR         R3, [SP] 
    /*000123e8*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x2794] 
    /*000123ec*/ LDR         R3, [PC, #96]               @ 0x0000000000012454 
    /*000123f0*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x2794] 
    /*000123f4*/ MOV         R1, #15 
    /*000123f8*/ MOV         R0, #3 
    /*000123fc*/ BL          0x00000000000123FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012400*/ B           VouChnVgsProcess_x11f18
    VouChnVgsProcess_x12404:
    /*00012404*/ LDR         R3, [R9, #220]              @ 0xdc 
    /*00012408*/ MOVW        R1, #13573                  @ 0x3505 
    /*0001240c*/ STR         R5, [SP, #4] 
    /*00012410*/ MOVW        R2, #0                      @ .LC234 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x612c] 
    /*00012414*/ STR         R1, [SP] 
    /*00012418*/ MOVT        R2, #0                      @ .LC234 [R_ARM_MOVT_ABS: .rodata.str1.4+0x612c] 
    /*0001241c*/ STR         R3, [SP, #8] 
    /*00012420*/ MOV         R1, #15 
    /*00012424*/ LDR         R3, [PC, #40]               @ 0x0000000000012454 
    /*00012428*/ MOV         R0, #3 
    /*0001242c*/ BL          0x000000000001242C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012430*/ B           VouChnVgsProcess_x1213c
    VouChnVgsProcess_x12434:
    /*00012434*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00012438*/ STR         R5, [SP, #4] 
    /*0001243c*/ MOVW        R2, #0                      @ .LC239 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x62ec] 
    /*00012440*/ MOVT        R2, #0                      @ .LC239 [R_ARM_MOVT_ABS: .rodata.str1.4+0x62ec] 
    /*00012444*/ MLA         R5, R3, R5, R6 
    /*00012448*/ MOVW        R3, #13672                  @ 0x3568 
    /*0001244c*/ STR         R3, [SP] 
    /*00012450*/ B           VouChnVgsProcess_x123b0
    /*00012454*/ ANDEQ       R0, R0, R4, ASR #21 
FUNC_END VouChnVgsProcess


FUNC_BEGIN VouChnVgsBypassProcess
    /*00012458*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001245c*/ MOVW        R4, #12192                  @ 0x2fa0 
    /*00012460*/ MUL         R4, R4, R0 
    /*00012464*/ MOVW        R5, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00012468*/ MOVT        R5, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*0001246c*/ SUB         SP, SP, #36                 @ 0x24 
    /*00012470*/ MOV         R8, R0 
    /*00012474*/ ADD         R7, R5, R4 
    /*00012478*/ LDR         R9, [R7, #220]              @ 0xdc 
    /*0001247c*/ CMP         R9, #0 
    /*00012480*/ BNE         VouChnVgsBypassProcess_x125e0
    /*00012484*/ BL          0x0000000000012484          @ VouBufFreeDispBusyList [R_ARM_CALL: .text+0x49b0] 
    /*00012488*/ CMP         R0, #0 
    /*0001248c*/ BNE         VouChnVgsBypassProcess_x125b8
    /*00012490*/ ADD         R3, R4, #256                @ 0x100 
    /*00012494*/ ADD         R6, R4, #240                @ 0xf0 
    /*00012498*/ ADD         R3, R5, R3 
    /*0001249c*/ LSL         R2, R8, #2 
    /*000124a0*/ MOVW        SL, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*000124a4*/ ADD         R6, R5, R6 
    /*000124a8*/ MOVT        SL, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*000124ac*/ STR         R4, [SP, #20] 
    /*000124b0*/ MOV         FP, R2 
    /*000124b4*/ MOV         R4, R3 
    /*000124b8*/ STR         R7, [SP, #24] 
    /*000124bc*/ STR         R9, [SP, #16] 
    /*000124c0*/ STR         R9, [SP, #12] 
    VouChnVgsBypassProcess_x124c4:
    /*000124c4*/ LDR         R7, [R6, #4]! 
    /*000124c8*/ CMP         R7, #3 
    /*000124cc*/ BHI         VouChnVgsBypassProcess_x125c0
    VouChnVgsBypassProcess_x124d0:
    /*000124d0*/ ADD         R3, FP, R7 
    /*000124d4*/ LDR         R3, [SL, R3, LSL #2] 
    /*000124d8*/ CMP         R3, #0 
    /*000124dc*/ BEQ         VouChnVgsBypassProcess_x124ec
    /*000124e0*/ LDR         R2, [R3, #4] 
    /*000124e4*/ CMP         R2, #1 
    /*000124e8*/ BEQ         VouChnVgsBypassProcess_x1260c
    VouChnVgsBypassProcess_x124ec:
    /*000124ec*/ CMP         R6, R4 
    /*000124f0*/ BNE         VouChnVgsBypassProcess_x124c4
    /*000124f4*/ LDR         R3, [SP, #12] 
    /*000124f8*/ LDR         R4, [SP, #20] 
    /*000124fc*/ CMP         R3, #0 
    /*00012500*/ BEQ         VouChnVgsBypassProcess_x12660
    /*00012504*/ ADD         R4, R4, #11840              @ 0x2e40 
    /*00012508*/ ADD         R4, R4, #20 
    /*0001250c*/ ADD         R5, R5, R4 
    /*00012510*/ MOV         R0, R5 
    /*00012514*/ BL          0x0000000000012514          @ VouBufGetFree [R_ARM_CALL: .text+0x3e84] 
    /*00012518*/ SUBS        R4, R0, #0 
    /*0001251c*/ BEQ         VouChnVgsBypassProcess_x12684
    /*00012520*/ LDR         R6, [R4] 
    /*00012524*/ MOV         R2, #752                    @ 0x2f0 
    /*00012528*/ LDR         R3, [SP, #12] 
    /*0001252c*/ MOV         R0, R6 
    /*00012530*/ LDR         R1, [R3] 
    /*00012534*/ BL          0x0000000000012534          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00012538*/ LDR         R3, [SP, #16] 
    /*0001253c*/ MOV         R0, R5 
    /*00012540*/ MOV         R1, R4 
    /*00012544*/ STR         R9, [R6, #720]              @ 0x2d0 
    /*00012548*/ STR         R3, [R6, #724]              @ 0x2d4 
    /*0001254c*/ BL          0x000000000001254C          @ VouBufPutBusy [R_ARM_CALL: .text+0x3e58] 
    /*00012550*/ STR         R8, [SP, #4] 
    /*00012554*/ MOVW        R3, #16046                  @ 0x3eae 
    /*00012558*/ MOV         R1, #15 
    /*0001255c*/ STR         R3, [SP] 
    /*00012560*/ MOVW        R2, #0                      @ .LC243 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6414] 
    /*00012564*/ LDR         R3, [PC, #320]              @ 0x00000000000126ac 
    /*00012568*/ MOVT        R2, #0                      @ .LC243 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6414] 
    /*0001256c*/ MOV         R0, #7 
    /*00012570*/ BL          0x0000000000012570          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012574*/ LDR         R0, [R4] 
    /*00012578*/ ADD         SP, SP, #36                 @ 0x24 
    /*0001257c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    VouChnVgsBypassProcess_x12580:
    /*00012580*/ B           VouChnVgsBypassProcess_x12580@ VouBufAddBlkVb [R_ARM_JUMP24: .text+0x4220] 
    VouChnVgsBypassProcess_x12584:
    /*00012584*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00012588*/ MOV         IP, R1 
    /*0001258c*/ MLA         R5, R3, R8, R5 
    /*00012590*/ MOV         FP, R2 
    /*00012594*/ MOVW        R3, #16002                  @ 0x3e82 
    /*00012598*/ MOVW        R2, #0                      @ .LC225 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5f2c] 
    /*0001259c*/ STR         R3, [SP] 
    /*000125a0*/ MOVT        R2, #0                      @ .LC225 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5f2c] 
    /*000125a4*/ LDR         R3, [PC, #256]              @ 0x00000000000126ac 
    /*000125a8*/ MOV         R1, #15 
    /*000125ac*/ MOV         R0, #4 
    /*000125b0*/ STR         FP, [R5, IP] 
    /*000125b4*/ BL          0x00000000000125B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    VouChnVgsBypassProcess_x125b8:
    /*000125b8*/ ADD         SP, SP, #36                 @ 0x24 
    /*000125bc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnVgsBypassProcess_x125c0:
    /*000125c0*/ MOVW        R3, #0                      @ .LC230 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x604c] 
    /*000125c4*/ MOVW        R0, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x20d4] 
    /*000125c8*/ MOVT        R3, #0                      @ .LC230 [R_ARM_MOVT_ABS: .rodata.str1.4+0x604c] 
    /*000125cc*/ MOVT        R0, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x20d4] 
    /*000125d0*/ MOVW        R2, #15988                  @ 0x3e74 
    /*000125d4*/ LDR         R1, [PC, #208]              @ 0x00000000000126ac 
    /*000125d8*/ BL          0x00000000000125D8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000125dc*/ B           VouChnVgsBypassProcess_x124d0
    VouChnVgsBypassProcess_x125e0:
    /*000125e0*/ STR         R0, [SP, #4] 
    /*000125e4*/ MOVW        R3, #15974                  @ 0x3e66 
    /*000125e8*/ MOV         R1, #15 
    /*000125ec*/ STR         R3, [SP] 
    /*000125f0*/ MOVW        R2, #0                      @ .LC241 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6364] 
    /*000125f4*/ LDR         R3, [PC, #176]              @ 0x00000000000126ac 
    /*000125f8*/ MOVT        R2, #0                      @ .LC241 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6364] 
    /*000125fc*/ MOV         R0, #4 
    /*00012600*/ BL          0x0000000000012600          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012604*/ ADD         SP, SP, #36                 @ 0x24 
    /*00012608*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouChnVgsBypassProcess_x1260c:
    /*0001260c*/ MOV         R1, R7 
    /*00012610*/ MOV         R0, R8 
    /*00012614*/ STR         R2, [SP, #28] 
    /*00012618*/ STR         R3, [SP, #16] 
    /*0001261c*/ BL          0x000000000001261C          @ VouGetChnValidData [R_ARM_CALL: .text+0x10d54] 
    /*00012620*/ MOVW        R1, #12176                  @ 0x2f90 
    /*00012624*/ MOV         IP, #0 
    /*00012628*/ LDR         R2, [SP, #28] 
    /*0001262c*/ SUBS        R3, R0, #0 
    /*00012630*/ STR         R3, [SP, #12] 
    /*00012634*/ LDR         R3, [SP, #16] 
    /*00012638*/ BEQ         VouChnVgsBypassProcess_x12584
    /*0001263c*/ LDR         R2, [SP, #24] 
    /*00012640*/ STR         IP, [R2, R1] 
    /*00012644*/ LDR         R2, [R3, #16] 
    /*00012648*/ LDR         R9, [R3, #76]               @ 0x4c 
    /*0001264c*/ LDR         R3, [R3, #80]               @ 0x50 
    /*00012650*/ CMP         R2, #0 
    /*00012654*/ STR         R3, [SP, #16] 
    /*00012658*/ BNE         VouChnVgsBypassProcess_x124ec
    /*0001265c*/ B           VouChnVgsBypassProcess_x125b8
    VouChnVgsBypassProcess_x12660:
    /*00012660*/ MOVW        R3, #16023                  @ 0x3e97 
    /*00012664*/ MOVW        R2, #0                      @ .LC225 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x5f2c] 
    /*00012668*/ STR         R3, [SP] 
    /*0001266c*/ MOVT        R2, #0                      @ .LC225 [R_ARM_MOVT_ABS: .rodata.str1.4+0x5f2c] 
    /*00012670*/ LDR         R3, [PC, #52]               @ 0x00000000000126ac 
    /*00012674*/ MOV         R1, #15 
    /*00012678*/ MOV         R0, #3 
    /*0001267c*/ BL          0x000000000001267C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012680*/ B           VouChnVgsBypassProcess_x125b8
    VouChnVgsBypassProcess_x12684:
    /*00012684*/ MOVW        R3, #16032                  @ 0x3ea0 
    /*00012688*/ STR         R8, [SP, #4] 
    /*0001268c*/ STR         R3, [SP] 
    /*00012690*/ MOVW        R2, #0                      @ .LC242 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x63d0] 
    /*00012694*/ LDR         R3, [PC, #16]               @ 0x00000000000126ac 
    /*00012698*/ MOVT        R2, #0                      @ .LC242 [R_ARM_MOVT_ABS: .rodata.str1.4+0x63d0] 
    /*0001269c*/ MOV         R1, #15 
    /*000126a0*/ MOV         R0, #3 
    /*000126a4*/ BL          0x00000000000126A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000126a8*/ B           VouChnVgsBypassProcess_x125b8
    /*000126ac*/ LDRDEQ      R0, [R0], -R8 
FUNC_END VouChnVgsBypassProcess


FUNC_BEGIN VouGetRegionLumaTimeout
    /*000126b0*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000126b4*/ SUB         SP, SP, #12 
    /*000126b8*/ MOVW        R3, #16499                  @ 0x4073 
    /*000126bc*/ MOV         R1, #15 
    /*000126c0*/ STR         R3, [SP] 
    /*000126c4*/ MOVW        R2, #0                      @ .LC244 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x645c] 
    /*000126c8*/ LDR         R3, [PC, #24]               @ 0x00000000000126e8 
    /*000126cc*/ MOVT        R2, #0                      @ .LC244 [R_ARM_MOVT_ABS: .rodata.str1.4+0x645c] 
    /*000126d0*/ MOV         R0, #3 
    /*000126d4*/ BL          0x00000000000126D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000126d8*/ MOVW        R0, #32776                  @ 0x8008 
    /*000126dc*/ MOVT        R0, #40975                  @ 0xa00f 
    /*000126e0*/ ADD         SP, SP, #12 
    /*000126e4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000126e8*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VouGetRegionLumaTimeout


FUNC_BEGIN VouChnGetLuma
    /*000126ec*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000126f0*/ SUB         SP, SP, #32 
    /*000126f4*/ MOV         R7, R1 
    /*000126f8*/ MOV         R4, R2 
    /*000126fc*/ MOV         R6, R0 
    /*00012700*/ BL          0x0000000000012700          @ VoDefCheckLayerId [R_ARM_CALL: .text+0x34c8] 
    /*00012704*/ CMP         R0, #0 
    /*00012708*/ BNE         VouChnGetLuma_x12834
    /*0001270c*/ MOV         R1, R7 
    /*00012710*/ MOV         R0, R6 
    /*00012714*/ BL          0x0000000000012714          @ VOU_DRV_CheckChnId [R_ARM_CALL: .text+0x183c8] 
    /*00012718*/ CMP         R0, #0 
    /*0001271c*/ BNE         VouChnGetLuma_x12840
    /*00012720*/ MOV         R0, R4 
    /*00012724*/ BL          0x0000000000012724          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00012728*/ CMP         R0, #0 
    /*0001272c*/ BNE         VouChnGetLuma_x12820
    /*00012730*/ LDR         R0, [R4, #4] 
    /*00012734*/ BL          0x0000000000012734          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00012738*/ CMP         R0, #0 
    /*0001273c*/ BNE         VouChnGetLuma_x12820
    /*00012740*/ LDR         R0, [R4, #12] 
    /*00012744*/ BL          0x0000000000012744          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00012748*/ SUBS        R9, R0, #0 
    /*0001274c*/ BNE         VouChnGetLuma_x12820
    /*00012750*/ MOV         R0, #1024                   @ 0x400 
    /*00012754*/ BL          0x0000000000012754          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00012758*/ SUBS        R8, R0, #0 
    /*0001275c*/ BEQ         VouChnGetLuma_x128e0
    /*00012760*/ MOV         R2, #1024                   @ 0x400 
    /*00012764*/ MOV         R1, R9 
    /*00012768*/ BL          0x0000000000012768          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0001276c*/ LDR         R2, [R4] 
    /*00012770*/ SUB         R3, R2, #1 
    /*00012774*/ CMP         R3, #63                     @ 0x3f 
    /*00012778*/ BLS         VouChnGetLuma_x127cc
    /*0001277c*/ STR         R2, [SP, #12] 
    /*00012780*/ MOV         R1, #64                     @ 0x40 
    /*00012784*/ MOVW        R3, #16531                  @ 0x4093 
    /*00012788*/ STR         R1, [SP, #16] 
    /*0001278c*/ STR         R3, [SP] 
    /*00012790*/ MOVW        R2, #0                      @ .LC246 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x64e4] 
    /*00012794*/ STR         R7, [SP, #8] 
    /*00012798*/ MOVT        R2, #0                      @ .LC246 [R_ARM_MOVT_ABS: .rodata.str1.4+0x64e4] 
    /*0001279c*/ STR         R6, [SP, #4] 
    /*000127a0*/ MOV         R1, #15 
    /*000127a4*/ LDR         R3, [PC, #352]              @ 0x000000000001290c 
    /*000127a8*/ MOV         R0, #3 
    /*000127ac*/ BL          0x00000000000127AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000127b0*/ MOVW        R4, #32771                  @ 0x8003 
    /*000127b4*/ MOVT        R4, #40975                  @ 0xa00f 
    VouChnGetLuma_x127b8:
    /*000127b8*/ MOV         R0, R8 
    /*000127bc*/ BL          0x00000000000127BC          @ osal_vfree [R_ARM_CALL: +0x0] 
    VouChnGetLuma_x127c0:
    /*000127c0*/ MOV         R0, R4 
    /*000127c4*/ ADD         SP, SP, #32 
    /*000127c8*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouChnGetLuma_x127cc:
    /*000127cc*/ LDR         SL, [R4, #4] 
    /*000127d0*/ LSL         R5, R2, #4 
    /*000127d4*/ MOV         R0, R9 
    /*000127d8*/ MOV         R2, R5 
    /*000127dc*/ MOV         R1, SL 
    /*000127e0*/ BL          0x00000000000127E0          @ osal_access_ok [R_ARM_CALL: +0x0] 
    /*000127e4*/ CMP         R0, #0 
    /*000127e8*/ BNE         VouChnGetLuma_x1284c
    VouChnGetLuma_x127ec:
    /*000127ec*/ MOVW        R3, #16539                  @ 0x409b 
    /*000127f0*/ STR         R7, [SP, #8] 
    /*000127f4*/ STR         R3, [SP] 
    /*000127f8*/ MOVW        R2, #0                      @ .LC248 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6580] 
    /*000127fc*/ STR         R6, [SP, #4] 
    /*00012800*/ MOVT        R2, #0                      @ .LC248 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6580] 
    /*00012804*/ LDR         R3, [PC, #256]              @ 0x000000000001290c 
    /*00012808*/ MOV         R1, #15 
    /*0001280c*/ MOV         R0, #3 
    /*00012810*/ MOVW        R4, #32771                  @ 0x8003 
    /*00012814*/ BL          0x0000000000012814          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012818*/ MOVT        R4, #40975                  @ 0xa00f 
    /*0001281c*/ B           VouChnGetLuma_x127b8
    VouChnGetLuma_x12820:
    /*00012820*/ MOVW        R4, #32774                  @ 0x8006 
    /*00012824*/ MOVT        R4, #40975                  @ 0xa00f 
    /*00012828*/ MOV         R0, R4 
    /*0001282c*/ ADD         SP, SP, #32 
    /*00012830*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VouChnGetLuma_x12834:
    /*00012834*/ MOVW        R4, #32877                  @ 0x806d 
    /*00012838*/ MOVT        R4, #40975                  @ 0xa00f 
    /*0001283c*/ B           VouChnGetLuma_x127c0
    VouChnGetLuma_x12840:
    /*00012840*/ MOVW        R4, #32770                  @ 0x8002 
    /*00012844*/ MOVT        R4, #40975                  @ 0xa00f 
    /*00012848*/ B           VouChnGetLuma_x127c0
    VouChnGetLuma_x1284c:
    /*0001284c*/ SUB         R1, R5, #1 
    /*00012850*/ MOV         R2, #1 
    /*00012854*/ ADD         R1, SL, R1 
    /*00012858*/ ADD         R0, SP, #31 
    /*0001285c*/ BL          0x000000000001285C          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*00012860*/ CMP         R0, #0 
    /*00012864*/ BNE         VouChnGetLuma_x127ec
    /*00012868*/ LDR         R2, [R4] 
    /*0001286c*/ MOV         R0, R8 
    /*00012870*/ LDR         R1, [R4, #4] 
    /*00012874*/ LSL         R2, R2, #4 
    /*00012878*/ BL          0x0000000000012878          @ osal_copy_from_user [R_ARM_CALL: +0x0] 
    /*0001287c*/ CMP         R0, #0 
    /*00012880*/ BEQ         VouChnGetLuma_x128b0
    /*00012884*/ MOVW        R3, #16548                  @ 0x40a4 
    /*00012888*/ MOVW        R2, #0                      @ .LC247 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6534] 
    /*0001288c*/ STR         R3, [SP] 
    /*00012890*/ MOVT        R2, #0                      @ .LC247 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6534] 
    /*00012894*/ LDR         R3, [PC, #112]              @ 0x000000000001290c 
    /*00012898*/ MOV         R1, #15 
    /*0001289c*/ MOV         R0, #3 
    /*000128a0*/ MOVW        R4, #32771                  @ 0x8003 
    /*000128a4*/ BL          0x00000000000128A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000128a8*/ MOVT        R4, #40975                  @ 0xa00f 
    /*000128ac*/ B           VouChnGetLuma_x127b8
    VouChnGetLuma_x128b0:
    /*000128b0*/ STR         R8, [R4, #4] 
    /*000128b4*/ MOVW        R3, #16499                  @ 0x4073 
    /*000128b8*/ MOVW        R2, #0                      @ .LC244 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x645c] 
    /*000128bc*/ STR         R3, [SP] 
    /*000128c0*/ MOVT        R2, #0                      @ .LC244 [R_ARM_MOVT_ABS: .rodata.str1.4+0x645c] 
    /*000128c4*/ LDR         R3, [PC, #68]               @ 0x0000000000012910 
    /*000128c8*/ MOV         R1, #15 
    /*000128cc*/ MOV         R0, #3 
    /*000128d0*/ MOVW        R4, #32776                  @ 0x8008 
    /*000128d4*/ BL          0x00000000000128D4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000128d8*/ MOVT        R4, #40975                  @ 0xa00f 
    /*000128dc*/ B           VouChnGetLuma_x127b8
    VouChnGetLuma_x128e0:
    /*000128e0*/ MOVW        R3, #16521                  @ 0x4089 
    /*000128e4*/ MOVW        R2, #0                      @ .LC245 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x64a8] 
    /*000128e8*/ STR         R3, [SP] 
    /*000128ec*/ MOVT        R2, #0                      @ .LC245 [R_ARM_MOVT_ABS: .rodata.str1.4+0x64a8] 
    /*000128f0*/ LDR         R3, [PC, #20]               @ 0x000000000001290c 
    /*000128f4*/ MOV         R1, #45                     @ 0x2d 
    /*000128f8*/ MOV         R0, #3 
    /*000128fc*/ MOVW        R4, #32780                  @ 0x800c 
    /*00012900*/ BL          0x0000000000012900          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012904*/ MOVT        R4, #40975                  @ 0xa00f 
    /*00012908*/ B           VouChnGetLuma_x127c0
    /*0001290c*/ ANDEQ       R0, R0, R8, LSL #22 
    /*00012910*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VouChnGetLuma


FUNC_BEGIN VoSetModParam
    /*00012914*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00012918*/ SUB         SP, SP, #20 
    /*0001291c*/ MOV         R4, R0 
    /*00012920*/ BL          0x0000000000012920          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00012924*/ SUBS        R7, R0, #0 
    /*00012928*/ BNE         VoSetModParam_x12a5c
    /*0001292c*/ LDR         R3, [R4] 
    /*00012930*/ CMP         R3, #1 
    /*00012934*/ BHI         VoSetModParam_x12a2c
    /*00012938*/ LDR         R3, [R4, #4] 
    /*0001293c*/ CMP         R3, #1 
    /*00012940*/ BHI         VoSetModParam_x12a44
    /*00012944*/ LDR         R3, [R4, #8] 
    /*00012948*/ CMP         R3, #1 
    /*0001294c*/ BHI         VoSetModParam_x12a68
    /*00012950*/ LDR         R3, [R4, #12] 
    /*00012954*/ CMP         R3, #1 
    /*00012958*/ BHI         VoSetModParam_x129e8
    /*0001295c*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00012960*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00012964*/ BL          0x0000000000012964          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00012968*/ CMP         R0, #0 
    /*0001296c*/ BNE         VoSetModParam_x12a20
    /*00012970*/ LDR         R1, [R4] 
    /*00012974*/ ADD         R6, SP, #16 
    /*00012978*/ LDR         IP, [R4, #4] 
    /*0001297c*/ MOVW        R5, #0                      @ g_stVoModParam [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00012980*/ LDR         R2, [R4, #8] 
    /*00012984*/ MOVT        R5, #0                      @ g_stVoModParam [R_ARM_MOVT_ABS: .data+0x0] 
    /*00012988*/ LDR         R3, [R4, #12] 
    /*0001298c*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*00012990*/ STR         R7, [R6, #-4]! 
    /*00012994*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*00012998*/ STR         R1, [R5] 
    /*0001299c*/ MOV         R1, R6 
    /*000129a0*/ STR         IP, [R5, #4] 
    /*000129a4*/ STR         R2, [R5, #8] 
    /*000129a8*/ STR         R3, [R5, #12] 
    /*000129ac*/ BL          0x00000000000129AC          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000129b0*/ LDR         R4, [SP, #12] 
    /*000129b4*/ LDR         R0, [R5] 
    /*000129b8*/ BL          0x00000000000129B8          @ VO_DRV_TransparentTransmitSetting [R_ARM_CALL: .text+0x1839c] 
    /*000129bc*/ MOV         R1, R6 
    /*000129c0*/ MOVW        R0, #0                      @ g_VoLock [R_ARM_MOVW_ABS_NC: .bss+0x30a4] 
    /*000129c4*/ MOVT        R0, #0                      @ g_VoLock [R_ARM_MOVT_ABS: .bss+0x30a4] 
    /*000129c8*/ STR         R4, [SP, #12] 
    /*000129cc*/ BL          0x00000000000129CC          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000129d0*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*000129d4*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*000129d8*/ BL          0x00000000000129D8          @ osal_up [R_ARM_CALL: +0x0] 
    VoSetModParam_x129dc:
    /*000129dc*/ MOV         R0, R7 
    /*000129e0*/ ADD         SP, SP, #20 
    /*000129e4*/ POP         {R4, R5, R6, R7, PC} 
    VoSetModParam_x129e8:
    /*000129e8*/ MOVW        R2, #0                      @ .LC252 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6694] 
    /*000129ec*/ MOVT        R2, #0                      @ .LC252 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6694] 
    /*000129f0*/ STR         R3, [SP, #4] 
    /*000129f4*/ MOVW        R3, #16593                  @ 0x40d1 
    /*000129f8*/ STR         R3, [SP] 
    VoSetModParam_x129fc:
    /*000129fc*/ LDR         R3, [PC, #124]              @ 0x0000000000012a80 
    /*00012a00*/ MOV         R1, #15 
    /*00012a04*/ MOV         R0, #3 
    /*00012a08*/ MOVW        R7, #32771                  @ 0x8003 
    /*00012a0c*/ BL          0x0000000000012A0C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012a10*/ MOVT        R7, #40975                  @ 0xa00f 
    /*00012a14*/ MOV         R0, R7 
    /*00012a18*/ ADD         SP, SP, #20 
    /*00012a1c*/ POP         {R4, R5, R6, R7, PC} 
    VoSetModParam_x12a20:
    /*00012a20*/ MOV         R7, #65024                  @ 0xfe00 
    /*00012a24*/ MOVT        R7, #65535                  @ 0xffff 
    /*00012a28*/ B           VoSetModParam_x129dc
    VoSetModParam_x12a2c:
    /*00012a2c*/ STR         R3, [SP, #4] 
    /*00012a30*/ MOVW        R2, #0                      @ .LC249 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x65d8] 
    /*00012a34*/ MOVW        R3, #16575                  @ 0x40bf 
    /*00012a38*/ MOVT        R2, #0                      @ .LC249 [R_ARM_MOVT_ABS: .rodata.str1.4+0x65d8] 
    /*00012a3c*/ STR         R3, [SP] 
    /*00012a40*/ B           VoSetModParam_x129fc
    VoSetModParam_x12a44:
    /*00012a44*/ STR         R3, [SP, #4] 
    /*00012a48*/ MOVW        R2, #0                      @ .LC250 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x661c] 
    /*00012a4c*/ MOVW        R3, #16581                  @ 0x40c5 
    /*00012a50*/ MOVT        R2, #0                      @ .LC250 [R_ARM_MOVT_ABS: .rodata.str1.4+0x661c] 
    /*00012a54*/ STR         R3, [SP] 
    /*00012a58*/ B           VoSetModParam_x129fc
    VoSetModParam_x12a5c:
    /*00012a5c*/ MOVW        R7, #32774                  @ 0x8006 
    /*00012a60*/ MOVT        R7, #40975                  @ 0xa00f 
    /*00012a64*/ B           VoSetModParam_x129dc
    VoSetModParam_x12a68:
    /*00012a68*/ STR         R3, [SP, #4] 
    /*00012a6c*/ MOVW        R2, #0                      @ .LC251 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6654] 
    /*00012a70*/ MOVW        R3, #16587                  @ 0x40cb 
    /*00012a74*/ MOVT        R2, #0                      @ .LC251 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6654] 
    /*00012a78*/ STR         R3, [SP] 
    /*00012a7c*/ B           VoSetModParam_x129fc
    /*00012a80*/ ANDEQ       R0, R0, R8, LSL FP 
FUNC_END VoSetModParam


FUNC_BEGIN VoGetModParam
    /*00012a84*/ PUSH        {R4, R5, R6, LR} 
    /*00012a88*/ MOV         R5, R0 
    /*00012a8c*/ BL          0x0000000000012A8C          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00012a90*/ SUBS        R4, R0, #0 
    /*00012a94*/ BNE         VoGetModParam_x12ad4
    /*00012a98*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00012a9c*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00012aa0*/ BL          0x0000000000012AA0          @ osal_down_interruptible [R_ARM_CALL: +0x0] 
    /*00012aa4*/ CMP         R0, #0 
    /*00012aa8*/ BNE         VoGetModParam_x12ae0
    /*00012aac*/ MOV         R0, R5 
    /*00012ab0*/ MOVW        R1, #0                      @ g_stVoModParam [R_ARM_MOVW_ABS_NC: .data+0x0] 
    /*00012ab4*/ MOV         R2, #16 
    /*00012ab8*/ MOVT        R1, #0                      @ g_stVoModParam [R_ARM_MOVT_ABS: .data+0x0] 
    /*00012abc*/ BL          0x0000000000012ABC          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00012ac0*/ MOVW        R0, #0                      @ g_stDevSem [R_ARM_MOVW_ABS_NC: .bss+0x30b0] 
    /*00012ac4*/ MOVT        R0, #0                      @ g_stDevSem [R_ARM_MOVT_ABS: .bss+0x30b0] 
    /*00012ac8*/ BL          0x0000000000012AC8          @ osal_up [R_ARM_CALL: +0x0] 
    VoGetModParam_x12acc:
    /*00012acc*/ MOV         R0, R4 
    /*00012ad0*/ POP         {R4, R5, R6, PC} 
    VoGetModParam_x12ad4:
    /*00012ad4*/ MOVW        R4, #32774                  @ 0x8006 
    /*00012ad8*/ MOVT        R4, #40975                  @ 0xa00f 
    /*00012adc*/ B           VoGetModParam_x12acc
    VoGetModParam_x12ae0:
    /*00012ae0*/ MOV         R4, #65024                  @ 0xfe00 
    /*00012ae4*/ MOVT        R4, #65535                  @ 0xffff 
    /*00012ae8*/ B           VoGetModParam_x12acc
FUNC_END VoGetModParam


FUNC_BEGIN VouDispFrameRateControl
    /*00012aec*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00012af0*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00012af4*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00012af8*/ MLA         R3, R3, R0, R2 
    /*00012afc*/ LDR         R0, [R3, #48]               @ 0x30 
    /*00012b00*/ LDR         R2, [R3, #52]               @ 0x34 
    /*00012b04*/ LDR         R1, [R3, #44]               @ 0x2c 
    /*00012b08*/ ADD         R2, R2, R0 
    /*00012b0c*/ STR         R2, [R3, #52]               @ 0x34 
    /*00012b10*/ CMP         R2, R1 
    /*00012b14*/ SUBCS       R2, R2, R1 
    /*00012b18*/ STRCS       R2, [R3, #52]               @ 0x34 
    /*00012b1c*/ MOVCS       R0, #1 
    /*00012b20*/ MOVCC       R0, #0 
    /*00012b24*/ BX          LR 
FUNC_END VouDispFrameRateControl


FUNC_BEGIN VouDispGetValidData
    /*00012b28*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00012b2c*/ MOVW        R4, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00012b30*/ MOVT        R4, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00012b34*/ MOVW        IP, #12192                  @ 0x2fa0 
    /*00012b38*/ MOV         LR, #0 
    /*00012b3c*/ STR         LR, [R3] 
    /*00012b40*/ MLA         IP, IP, R0, R4 
    /*00012b44*/ SUB         SP, SP, #20 
    /*00012b48*/ LDR         IP, [IP, #180]              @ 0xb4 
    /*00012b4c*/ CMP         IP, LR 
    /*00012b50*/ BEQ         VouDispGetValidData_x12b70
    /*00012b54*/ ADD         R1, R1, R0, LSL #2 
    /*00012b58*/ MOVW        IP, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00012b5c*/ MOVT        IP, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00012b60*/ LDR         R1, [IP, R1, LSL #2] 
    /*00012b64*/ LDR         R1, [R1] 
    /*00012b68*/ CMP         R0, R1 
    /*00012b6c*/ BNE         VouDispGetValidData_x12c40
    VouDispGetValidData_x12b70:
    /*00012b70*/ CMP         R2, #0 
    /*00012b74*/ MOV         R5, R3 
    /*00012b78*/ MOV         R6, R0 
    /*00012b7c*/ BNE         VouDispGetValidData_x12bb8
    /*00012b80*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00012b84*/ MLA         R3, R3, R0, R4 
    /*00012b88*/ MOVW        R0, #12192                  @ 0x2fa0 
    /*00012b8c*/ MLA         R0, R0, R6, R4 
    /*00012b90*/ LDR         R3, [R3, #264]              @ 0x108 
    /*00012b94*/ ADD         R0, R0, #12096              @ 0x2f40 
    /*00012b98*/ ADD         R0, R0, #28 
    /*00012b9c*/ CMP         R3, #0 
    /*00012ba0*/ LDRNE       R3, [R3] 
    /*00012ba4*/ STRNE       R3, [R5] 
    /*00012ba8*/ BL          0x0000000000012BA8          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00012bac*/ MOV         R0, #0 
    VouDispGetValidData_x12bb0:
    /*00012bb0*/ ADD         SP, SP, #20 
    /*00012bb4*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouDispGetValidData_x12bb8:
    /*00012bb8*/ MOVW        R0, #12192                  @ 0x2fa0 
    /*00012bbc*/ MUL         R7, R0, R6 
    /*00012bc0*/ ADD         R0, R7, #11840              @ 0x2e40 
    /*00012bc4*/ ADD         R0, R0, #20 
    /*00012bc8*/ ADD         R9, R4, R0 
    /*00012bcc*/ MOV         R0, R9 
    /*00012bd0*/ BL          0x0000000000012BD0          @ VouBufGetBusy [R_ARM_CALL: .text+0x3da8] 
    /*00012bd4*/ SUBS        R8, R0, #0 
    /*00012bd8*/ BEQ         VouDispGetValidData_x12c48
    /*00012bdc*/ LDR         R3, [R8] 
    /*00012be0*/ CMP         R3, #0 
    /*00012be4*/ STR         R3, [R5] 
    /*00012be8*/ BEQ         VouDispGetValidData_x12cdc
    VouDispGetValidData_x12bec:
    /*00012bec*/ MOVW        R5, #12192                  @ 0x2fa0 
    /*00012bf0*/ MLA         R5, R5, R6, R4 
    /*00012bf4*/ LDR         R0, [R5, #272]              @ 0x110 
    /*00012bf8*/ CMP         R0, #0 
    /*00012bfc*/ BEQ         VouDispGetValidData_x12c10
    /*00012c00*/ BL          0x0000000000012C00          @ VouBufClearDispNode [R_ARM_CALL: .text+0x4848] 
    /*00012c04*/ LDR         R1, [R5, #272]              @ 0x110 
    /*00012c08*/ MOV         R0, R9 
    /*00012c0c*/ BL          0x0000000000012C0C          @ VouBufPutFree [R_ARM_CALL: .text+0x3fd0] 
    VouDispGetValidData_x12c10:
    /*00012c10*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00012c14*/ ADD         R0, R7, #12096              @ 0x2f40 
    /*00012c18*/ MLA         R3, R3, R6, R4 
    /*00012c1c*/ ADD         R0, R0, #28 
    /*00012c20*/ ADD         R0, R4, R0 
    /*00012c24*/ LDR         R2, [R3, #264]              @ 0x108 
    /*00012c28*/ STR         R8, [R3, #264]              @ 0x108 
    /*00012c2c*/ STR         R2, [R3, #272]              @ 0x110 
    /*00012c30*/ BL          0x0000000000012C30          @ osal_wakeup [R_ARM_CALL: +0x0] 
    /*00012c34*/ MOV         R0, #0 
    /*00012c38*/ ADD         SP, SP, #20 
    /*00012c3c*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VouDispGetValidData_x12c40:
    /*00012c40*/ MVN         R0, #0 
    /*00012c44*/ B           VouDispGetValidData_x12bb0
    VouDispGetValidData_x12c48:
    /*00012c48*/ MOVW        R8, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xb28] 
    /*00012c4c*/ MOVT        R8, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xb28] 
    /*00012c50*/ ADD         R7, R4, R7 
    /*00012c54*/ MOVW        R1, #325                    @ 0x145 
    /*00012c58*/ MOV         R3, R8 
    /*00012c5c*/ STR         R1, [SP, #8] 
    /*00012c60*/ STR         R1, [SP] 
    /*00012c64*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x66d0] 
    /*00012c68*/ STR         R8, [SP, #4] 
    /*00012c6c*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x66d0] 
    /*00012c70*/ MOV         R1, #15 
    /*00012c74*/ MOV         R0, #6 
    /*00012c78*/ BL          0x0000000000012C78          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012c7c*/ LDR         R3, [R7, #264]              @ 0x108 
    /*00012c80*/ CMP         R3, #0 
    /*00012c84*/ BEQ         VouDispGetValidData_x12cc0
    /*00012c88*/ MOV         R1, #328                    @ 0x148 
    /*00012c8c*/ MOV         R3, R8 
    /*00012c90*/ STR         R1, [SP, #8] 
    /*00012c94*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x671c] 
    /*00012c98*/ STR         R1, [SP] 
    /*00012c9c*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x671c] 
    /*00012ca0*/ STR         R6, [SP, #12] 
    /*00012ca4*/ MOV         R1, #15 
    /*00012ca8*/ STR         R8, [SP, #4] 
    /*00012cac*/ MOV         R0, #7 
    /*00012cb0*/ BL          0x0000000000012CB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012cb4*/ LDR         R3, [R7, #264]              @ 0x108 
    /*00012cb8*/ LDR         R3, [R3] 
    /*00012cbc*/ STR         R3, [R5] 
    VouDispGetValidData_x12cc0:
    /*00012cc0*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00012cc4*/ MOV         R0, #0 
    /*00012cc8*/ MLA         R4, R3, R6, R4 
    /*00012ccc*/ LDR         R3, [R4, #224]              @ 0xe0 
    /*00012cd0*/ ADD         R3, R3, #1 
    /*00012cd4*/ STR         R3, [R4, #224]              @ 0xe0 
    /*00012cd8*/ B           VouDispGetValidData_x12bb0
    VouDispGetValidData_x12cdc:
    /*00012cdc*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6770] 
    /*00012ce0*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xb28] 
    /*00012ce4*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6770] 
    /*00012ce8*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xb28] 
    /*00012cec*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6784] 
    /*00012cf0*/ MOV         R2, #336                    @ 0x150 
    /*00012cf4*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6784] 
    /*00012cf8*/ BL          0x0000000000012CF8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00012cfc*/ B           VouDispGetValidData_x12bec
FUNC_END VouDispGetValidData


FUNC_BEGIN VouDispSetLayerDataFmt
    /*00012d00*/ MOVW        R2, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00012d04*/ MOVT        R2, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00012d08*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00012d0c*/ MLA         R3, R3, R0, R2 
    /*00012d10*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00012d14*/ SUB         SP, SP, #12 
    /*00012d18*/ LDR         R3, [R3, #140]              @ 0x8c 
    /*00012d1c*/ CMP         R3, #25 
    /*00012d20*/ BEQ         VouDispSetLayerDataFmt_x12d48
    /*00012d24*/ CMP         R3, #26 
    /*00012d28*/ BEQ         VouDispSetLayerDataFmt_x12d58
    /*00012d2c*/ CMP         R3, #39                     @ 0x27 
    /*00012d30*/ BNE         VouDispSetLayerDataFmt_x12d68
    /*00012d34*/ MOV         R1, #1 
    /*00012d38*/ BL          0x0000000000012D38          @ VOU_DRV_SetLayerDataFmt [R_ARM_CALL: .text+0x1759c] 
    /*00012d3c*/ MOV         R0, #0 
    VouDispSetLayerDataFmt_x12d40:
    /*00012d40*/ ADD         SP, SP, #12 
    /*00012d44*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VouDispSetLayerDataFmt_x12d48:
    /*00012d48*/ MOV         R1, #3 
    /*00012d4c*/ BL          0x0000000000012D4C          @ VOU_DRV_SetLayerDataFmt [R_ARM_CALL: .text+0x1759c] 
    /*00012d50*/ MOV         R0, #0 
    /*00012d54*/ B           VouDispSetLayerDataFmt_x12d40
    VouDispSetLayerDataFmt_x12d58:
    /*00012d58*/ MOV         R1, #2 
    /*00012d5c*/ BL          0x0000000000012D5C          @ VOU_DRV_SetLayerDataFmt [R_ARM_CALL: .text+0x1759c] 
    /*00012d60*/ MOV         R0, #0 
    /*00012d64*/ B           VouDispSetLayerDataFmt_x12d40
    VouDispSetLayerDataFmt_x12d68:
    /*00012d68*/ MOVW        R3, #375                    @ 0x177 
    /*00012d6c*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x67c4] 
    /*00012d70*/ STR         R3, [SP] 
    /*00012d74*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x67c4] 
    /*00012d78*/ LDR         R3, [PC, #16]               @ 0x0000000000012d90 
    /*00012d7c*/ MOV         R1, #15 
    /*00012d80*/ MOV         R0, #4 
    /*00012d84*/ BL          0x0000000000012D84          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012d88*/ MVN         R0, #0 
    /*00012d8c*/ B           VouDispSetLayerDataFmt_x12d40
    /*00012d90*/ ANDEQ       R0, R0, IP, LSR FP 
FUNC_END VouDispSetLayerDataFmt


FUNC_BEGIN VouDispLayerConfig
    /*00012d94*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00012d98*/ SUB         SP, SP, #24 
    /*00012d9c*/ MOV         R3, #0 
    /*00012da0*/ MOV         R6, R0 
    /*00012da4*/ STR         R3, [SP, #8] 
    /*00012da8*/ STR         R3, [SP, #12] 
    /*00012dac*/ STR         R3, [SP, #16] 
    /*00012db0*/ STR         R3, [SP, #20] 
    /*00012db4*/ BL          0x0000000000012DB4          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*00012db8*/ CMN         R0, #1 
    /*00012dbc*/ MOV         R8, R0 
    /*00012dc0*/ BEQ         VouDispLayerConfig_x12f58
    /*00012dc4*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00012dc8*/ MOVW        R5, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00012dcc*/ MUL         R3, R3, R6 
    /*00012dd0*/ MOVT        R5, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00012dd4*/ ADD         R7, R5, R3 
    /*00012dd8*/ LDR         R4, [R5, R3] 
    /*00012ddc*/ CMP         R4, #0 
    /*00012de0*/ BNE         VouDispLayerConfig_x12df0
    VouDispLayerConfig_x12de4:
    /*00012de4*/ MOV         R0, R4 
    /*00012de8*/ ADD         SP, SP, #24 
    /*00012dec*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouDispLayerConfig_x12df0:
    /*00012df0*/ MOV         R0, R6 
    /*00012df4*/ BL          0x0000000000012DF4          @ VouDispSetLayerDataFmt [R_ARM_CALL: .text+0x12d00] 
    /*00012df8*/ SUBS        R4, R0, #0 
    /*00012dfc*/ BNE         VouDispLayerConfig_x12f30
    /*00012e00*/ LDR         R2, [R7, #120]              @ 0x78 
    /*00012e04*/ ADD         R1, SP, #8 
    /*00012e08*/ LDR         R3, [R7, #128]              @ 0x80 
    /*00012e0c*/ MOV         R0, R6 
    /*00012e10*/ STR         R4, [SP, #8] 
    /*00012e14*/ CMP         R3, R2 
    /*00012e18*/ STR         R4, [SP, #12] 
    /*00012e1c*/ MOVCC       R2, R3 
    /*00012e20*/ LDR         R3, [R7, #132]              @ 0x84 
    /*00012e24*/ STR         R2, [SP, #16] 
    /*00012e28*/ LDR         R2, [R7, #124]              @ 0x7c 
    /*00012e2c*/ CMP         R3, R2 
    /*00012e30*/ MOVCS       R3, R2 
    /*00012e34*/ STR         R3, [SP, #20] 
    /*00012e38*/ BL          0x0000000000012E38          @ VOU_DRV_SetImageInReso [R_ARM_CALL: .text+0x17654] 
    /*00012e3c*/ ADD         R1, SP, #8 
    /*00012e40*/ MOV         R0, R6 
    /*00012e44*/ BL          0x0000000000012E44          @ VOU_DRV_SetSrcImageReso [R_ARM_CALL: .text+0x17658] 
    /*00012e48*/ LDR         R3, [R7, #140]              @ 0x8c 
    /*00012e4c*/ CMP         R3, #26 
    /*00012e50*/ BEQ         VouDispLayerConfig_x12ea0
    VouDispLayerConfig_x12e54:
    /*00012e54*/ ADD         R1, SP, #8 
    /*00012e58*/ MOV         R0, R6 
    /*00012e5c*/ BL          0x0000000000012E5C          @ VOU_DRV_SetLayerDispRect [R_ARM_CALL: .text+0x17660] 
    /*00012e60*/ ADD         R1, SP, #8 
    /*00012e64*/ MOV         R0, R6 
    /*00012e68*/ BL          0x0000000000012E68          @ VOU_DRV_SetLayerVideoRect [R_ARM_CALL: .text+0x17664] 
    /*00012e6c*/ MOV         R3, #0 
    /*00012e70*/ MOV         R2, R3 
    /*00012e74*/ MOV         R1, R3 
    /*00012e78*/ MOV         R0, R6 
    /*00012e7c*/ BL          0x0000000000012E7C          @ HAL_VIDEO_SetMultiAreaLAddr [R_ARM_CALL: .text+0x1c8fc] 
    /*00012e80*/ MOV         R3, #0 
    /*00012e84*/ MOV         R0, R6 
    /*00012e88*/ MOV         R2, R3 
    /*00012e8c*/ MOV         R1, R3 
    /*00012e90*/ BL          0x0000000000012E90          @ HAL_VIDEO_SetMultiAreaCAddr [R_ARM_CALL: .text+0x1ca04] 
    /*00012e94*/ MOV         R0, R4 
    /*00012e98*/ ADD         SP, SP, #24 
    /*00012e9c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouDispLayerConfig_x12ea0:
    /*00012ea0*/ MOV         R0, R8 
    /*00012ea4*/ BL          0x0000000000012EA4          @ VOU_DRV_Is_Progressive [R_ARM_CALL: .text+0x15588] 
    /*00012ea8*/ CMP         R0, #0 
    /*00012eac*/ BEQ         VouDispLayerConfig_x12f38
    /*00012eb0*/ LDR         R3, [SP, #16] 
    /*00012eb4*/ MOV         R0, R6 
    /*00012eb8*/ LDR         R2, [SP, #20] 
    /*00012ebc*/ MOV         R1, R3 
    /*00012ec0*/ STR         R2, [SP] 
    /*00012ec4*/ BL          0x0000000000012EC4          @ VOU_DRV_SetZoomReso [R_ARM_CALL: .text+0x17cb8] 
    VouDispLayerConfig_x12ec8:
    /*00012ec8*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00012ecc*/ MOVW        R2, #12100                  @ 0x2f44 
    /*00012ed0*/ MLA         R5, R3, R6, R5 
    /*00012ed4*/ MOV         R0, R6 
    /*00012ed8*/ ADD         R3, R5, #12096              @ 0x2f40 
    /*00012edc*/ LDR         R2, [R5, R2] 
    /*00012ee0*/ LDR         R1, [R3] 
    /*00012ee4*/ BL          0x0000000000012EE4          @ VOU_DRV_ZoomConfig [R_ARM_CALL: .text+0x17ce4] 
    /*00012ee8*/ MOV         R3, #1 
    /*00012eec*/ LDR         R2, [SP, #20] 
    /*00012ef0*/ MOV         R0, R6 
    /*00012ef4*/ LDR         R1, [SP, #16] 
    /*00012ef8*/ BL          0x0000000000012EF8          @ HAL_LAYER_SetZmeInfo [R_ARM_CALL: .text+0x1cb08] 
    /*00012efc*/ MOV         R0, R6 
    /*00012f00*/ MOV         R1, #0 
    /*00012f04*/ BL          0x0000000000012F04          @ VOU_DRV_LayerZoomEnable [R_ARM_CALL: .text+0x17c5c] 
    /*00012f08*/ MOV         R0, R6 
    /*00012f0c*/ MOV         R1, #1 
    /*00012f10*/ BL          0x0000000000012F10          @ VOU_DRV_LayerVChZoomEnable [R_ARM_CALL: .text+0x17c68] 
    /*00012f14*/ MOV         R0, R6 
    /*00012f18*/ MOV         R1, #1 
    /*00012f1c*/ BL          0x0000000000012F1C          @ VOU_DRV_LayerVChZoomFir [R_ARM_CALL: .text+0x17c74] 
    /*00012f20*/ MOV         R1, #1 
    /*00012f24*/ MOV         R0, R6 
    /*00012f28*/ BL          0x0000000000012F28          @ VOU_DRV_LayerHChZoomFir [R_ARM_CALL: .text+0x17ca8] 
    /*00012f2c*/ B           VouDispLayerConfig_x12e54
    VouDispLayerConfig_x12f30:
    /*00012f30*/ MVN         R4, #0 
    /*00012f34*/ B           VouDispLayerConfig_x12de4
    VouDispLayerConfig_x12f38:
    /*00012f38*/ LDR         R2, [SP, #20] 
    /*00012f3c*/ MOV         R0, R6 
    /*00012f40*/ LDR         R3, [SP, #16] 
    /*00012f44*/ LSR         R2, R2, #1 
    /*00012f48*/ STR         R2, [SP] 
    /*00012f4c*/ MOV         R1, R3 
    /*00012f50*/ BL          0x0000000000012F50          @ VOU_DRV_SetZoomReso [R_ARM_CALL: .text+0x17cb8] 
    /*00012f54*/ B           VouDispLayerConfig_x12ec8
    VouDispLayerConfig_x12f58:
    /*00012f58*/ MOV         R3, #516                    @ 0x204 
    /*00012f5c*/ STR         R6, [SP, #4] 
    /*00012f60*/ STR         R3, [SP] 
    /*00012f64*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x67f8] 
    /*00012f68*/ LDR         R3, [PC, #20]               @ 0x0000000000012f84 
    /*00012f6c*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x67f8] 
    /*00012f70*/ MOV         R1, #15 
    /*00012f74*/ MOV         R0, #3 
    /*00012f78*/ MOV         R4, R8 
    /*00012f7c*/ BL          0x0000000000012F7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00012f80*/ B           VouDispLayerConfig_x12de4
    /*00012f84*/ ANDEQ       R0, R0, R4, ASR FP 
FUNC_END VouDispLayerConfig


FUNC_BEGIN VouDispLayerDisplay
    /*00012f88*/ MOVW        R2, #12192                  @ 0x2fa0 
    /*00012f8c*/ MOV         R3, #0 
    /*00012f90*/ MUL         R2, R2, R0 
    /*00012f94*/ MOV         R1, #4 
    /*00012f98*/ PUSH        {R4, R5, R6, LR} 
    /*00012f9c*/ MOVW        R4, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00012fa0*/ MOVT        R4, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00012fa4*/ SUB         SP, SP, #32 
    /*00012fa8*/ ADD         IP, R4, R2 
    /*00012fac*/ LDR         R2, [R4, R2] 
    /*00012fb0*/ STR         R3, [SP, #12] 
    /*00012fb4*/ CMP         R2, R3 
    /*00012fb8*/ STR         R3, [SP, #16] 
    /*00012fbc*/ STR         R3, [SP, #20] 
    /*00012fc0*/ STR         R3, [SP, #24] 
    /*00012fc4*/ STR         R1, [SP, #28] 
    /*00012fc8*/ BEQ         VouDispLayerDisplay_x13054
    /*00012fcc*/ LDR         R6, [IP, #180]              @ 0xb4 
    /*00012fd0*/ MOV         R5, R0 
    /*00012fd4*/ CMP         R6, R3 
    /*00012fd8*/ BNE         VouDispLayerDisplay_x13024
    /*00012fdc*/ ADD         R3, SP, #16 
    /*00012fe0*/ ADD         R2, SP, #12 
    /*00012fe4*/ MOV         R1, R6 
    /*00012fe8*/ BL          0x0000000000012FE8          @ HAL_VIDEO_GetMultiAreaLAddr [R_ARM_CALL: .text+0x1c990] 
    /*00012fec*/ ADD         R3, SP, #24 
    /*00012ff0*/ ADD         R2, SP, #20 
    /*00012ff4*/ MOV         R1, R6 
    /*00012ff8*/ MOV         R0, R5 
    /*00012ffc*/ BL          0x0000000000012FFC          @ HAL_VIDEO_GetMultiAreaCAddr [R_ARM_CALL: .text+0x1ca94] 
    /*00013000*/ ADD         R1, SP, #28 
    /*00013004*/ MOV         R0, R5 
    /*00013008*/ BL          0x0000000000013008          @ VOU_DRV_GetLayerDataFmt [R_ARM_CALL: .text+0x175c8] 
    /*0001300c*/ LDR         R3, [SP, #28] 
    /*00013010*/ SUB         R2, R3, #2 
    /*00013014*/ CMP         R2, #1 
    /*00013018*/ BLS         VouDispLayerDisplay_x13090
    /*0001301c*/ CMP         R3, #1 
    /*00013020*/ BEQ         VouDispLayerDisplay_x13074
    VouDispLayerDisplay_x13024:
    /*00013024*/ MOV         R0, R5 
    /*00013028*/ BL          0x0000000000013028          @ VOU_DRV_GetLayerEnable [R_ARM_CALL: .text+0x17568] 
    /*0001302c*/ CMP         R0, #1 
    /*00013030*/ BEQ         VouDispLayerDisplay_x13040
    /*00013034*/ MOV         R1, #1 
    /*00013038*/ MOV         R0, R5 
    /*0001303c*/ BL          0x000000000001303C          @ VOU_DRV_LayerEnable [R_ARM_CALL: .text+0x17548] 
    VouDispLayerDisplay_x13040:
    /*00013040*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00013044*/ MLA         R4, R3, R5, R4 
    /*00013048*/ LDR         R1, [R4, #180]              @ 0xb4 
    /*0001304c*/ CMP         R1, #1 
    /*00013050*/ BEQ         VouDispLayerDisplay_x13060
    VouDispLayerDisplay_x13054:
    /*00013054*/ MOV         R0, #0 
    /*00013058*/ ADD         SP, SP, #32 
    /*0001305c*/ POP         {R4, R5, R6, PC} 
    VouDispLayerDisplay_x13060:
    /*00013060*/ MOV         R0, R5 
    /*00013064*/ BL          0x0000000000013064          @ VO_DRV_SetMultiRegionEnable [R_ARM_CALL: .text+0x1794c] 
    /*00013068*/ MOV         R0, #0 
    /*0001306c*/ ADD         SP, SP, #32 
    /*00013070*/ POP         {R4, R5, R6, PC} 
    VouDispLayerDisplay_x13074:
    /*00013074*/ LDR         R3, [SP, #12] 
    /*00013078*/ CMP         R3, #0 
    /*0001307c*/ BNE         VouDispLayerDisplay_x13024
    /*00013080*/ LDR         R3, [SP, #16] 
    /*00013084*/ CMP         R3, #0 
    /*00013088*/ BNE         VouDispLayerDisplay_x13024
    /*0001308c*/ B           VouDispLayerDisplay_x130a8
    VouDispLayerDisplay_x13090:
    /*00013090*/ LDR         R3, [SP, #12] 
    /*00013094*/ CMP         R3, #0 
    /*00013098*/ BNE         VouDispLayerDisplay_x130dc
    /*0001309c*/ LDR         R3, [SP, #16] 
    /*000130a0*/ CMP         R3, #0 
    /*000130a4*/ BNE         VouDispLayerDisplay_x130dc
    VouDispLayerDisplay_x130a8:
    /*000130a8*/ STR         R5, [SP, #4] 
    /*000130ac*/ MOVW        R3, #650                    @ 0x28a 
    /*000130b0*/ MOV         R1, #15 
    /*000130b4*/ STR         R3, [SP] 
    /*000130b8*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6838] 
    /*000130bc*/ LDR         R3, [PC, #52]               @ 0x00000000000130f8 
    /*000130c0*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6838] 
    /*000130c4*/ MOV         R0, #4 
    /*000130c8*/ BL          0x00000000000130C8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000130cc*/ MOV         R0, R5 
    /*000130d0*/ MOV         R1, #0 
    /*000130d4*/ BL          0x00000000000130D4          @ VOU_DRV_LayerEnable [R_ARM_CALL: .text+0x17548] 
    /*000130d8*/ B           VouDispLayerDisplay_x13054
    VouDispLayerDisplay_x130dc:
    /*000130dc*/ LDR         R3, [SP, #20] 
    /*000130e0*/ CMP         R3, #0 
    /*000130e4*/ BNE         VouDispLayerDisplay_x13024
    /*000130e8*/ LDR         R3, [SP, #24] 
    /*000130ec*/ CMP         R3, #0 
    /*000130f0*/ BNE         VouDispLayerDisplay_x13024
    /*000130f4*/ B           VouDispLayerDisplay_x130a8
    /*000130f8*/ ANDEQ       R0, R0, R8, ROR #22 
FUNC_END VouDispLayerDisplay


FUNC_BEGIN VouDispLayerRegUp
    /*000130fc*/ PUSH        {R4, LR} 
    /*00013100*/ BL          0x0000000000013100          @ VOU_DRV_SetLayerRegUp [R_ARM_CALL: .text+0x182d4] 
    /*00013104*/ MOV         R0, #0 
    /*00013108*/ POP         {R4, PC} 
FUNC_END VouDispLayerRegUp


FUNC_BEGIN VouSetSingleAreaDispLocation
    /*0001310c*/ PUSH        {R4, R5, R6, LR} 
    /*00013110*/ MOV         R5, R1 
    /*00013114*/ MOV         R4, R0 
    /*00013118*/ BL          0x0000000000013118          @ VOU_DRV_GetLayerChnNum [R_ARM_CALL: .text+0x1927c] 
    /*0001311c*/ CMP         R0, #1 
    /*00013120*/ POPNE       {R4, R5, R6, PC} 
    /*00013124*/ MOV         R1, R5 
    /*00013128*/ MOV         R0, R4 
    /*0001312c*/ BL          0x000000000001312C          @ VOU_DRV_SetLayerVideoRect [R_ARM_CALL: .text+0x17664] 
    /*00013130*/ MOV         R1, R5 
    /*00013134*/ MOV         R0, R4 
    /*00013138*/ BL          0x0000000000013138          @ VOU_DRV_SetLayerDispRect [R_ARM_CALL: .text+0x17660] 
    /*0001313c*/ MOV         R1, R5 
    /*00013140*/ MOV         R0, R4 
    /*00013144*/ POP         {R4, R5, R6, LR} 
    VouSetSingleAreaDispLocation_x13148:
    /*00013148*/ B           VouSetSingleAreaDispLocation_x13148@ VOU_DRV_SetImageInReso [R_ARM_JUMP24: .text+0x17654] 
FUNC_END VouSetSingleAreaDispLocation


FUNC_BEGIN VouGetDispFrame
    /*0001314c*/ MOV         R0, R1 
    /*00013150*/ BX          LR 
FUNC_END VouGetDispFrame


FUNC_BEGIN VouCalcAutoLBX
    /*00013154*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00013158*/ MOV         R4, R0 
    /*0001315c*/ LDR         R3, [R1] 
    /*00013160*/ MOV         R5, R2 
    /*00013164*/ LDR         R6, [R0, #12] 
    /*00013168*/ LDR         R1, [R1, #4] 
    /*0001316c*/ LDR         R7, [R0, #8] 
    /*00013170*/ MUL         R2, R6, R3 
    /*00013174*/ MUL         R0, R7, R1 
    /*00013178*/ CMP         R2, R0 
    /*0001317c*/ BCC         VouCalcAutoLBX_x131b4
    /*00013180*/ BEQ         VouCalcAutoLBX_x131e4
    /*00013184*/ LDR         R2, [R4] 
    /*00013188*/ MOV         R1, R3 
    /*0001318c*/ STR         R7, [R5, #8] 
    /*00013190*/ STR         R2, [R5] 
    /*00013194*/ BL          0x0000000000013194          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*00013198*/ STR         R0, [R5, #12] 
    /*0001319c*/ SUB         R6, R6, R0 
    /*000131a0*/ LDR         R0, [R4, #4] 
    /*000131a4*/ ADD         R6, R0, R6, LSR #1 
    /*000131a8*/ MOV         R0, #0 
    /*000131ac*/ STR         R6, [R5, #4] 
    /*000131b0*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouCalcAutoLBX_x131b4:
    /*000131b4*/ LDR         R3, [R4, #4] 
    /*000131b8*/ MOV         R0, R2 
    /*000131bc*/ STR         R3, [R5, #4] 
    /*000131c0*/ BL          0x00000000000131C0          @ __aeabi_uidiv [R_ARM_CALL: +0x0] 
    /*000131c4*/ STR         R6, [R5, #12] 
    /*000131c8*/ STR         R0, [R5, #8] 
    /*000131cc*/ SUB         R7, R7, R0 
    /*000131d0*/ LDR         R3, [R4] 
    /*000131d4*/ MOV         R0, #0 
    /*000131d8*/ ADD         R7, R3, R7, LSR #1 
    /*000131dc*/ STR         R7, [R5] 
    /*000131e0*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouCalcAutoLBX_x131e4:
    /*000131e4*/ LDR         R3, [R4] 
    /*000131e8*/ MOV         R0, #0 
    /*000131ec*/ STR         R3, [R5] 
    /*000131f0*/ LDR         R3, [R4, #4] 
    /*000131f4*/ STR         R7, [R5, #8] 
    /*000131f8*/ STR         R6, [R5, #12] 
    /*000131fc*/ STR         R3, [R5, #4] 
    /*00013200*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VouCalcAutoLBX


FUNC_BEGIN VouCheckAspectRatio
    /*00013204*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00013208*/ SUB         SP, SP, #28 
    /*0001320c*/ LDR         R3, [R2] 
    /*00013210*/ CMP         R3, #2 
    /*00013214*/ BHI         VouCheckAspectRatio_x13300
    /*00013218*/ BEQ         VouCheckAspectRatio_x13234
    VouCheckAspectRatio_x1321c:
    /*0001321c*/ LDR         R3, [R2, #4] 
    /*00013220*/ CMP         R3, #16777216               @ 0x1000000 
    /*00013224*/ MOVCC       R0, #0 
    /*00013228*/ BCS         VouCheckAspectRatio_x1332c
    VouCheckAspectRatio_x1322c:
    /*0001322c*/ ADD         SP, SP, #28 
    /*00013230*/ POP         {R4, R5, R6, R7, PC} 
    VouCheckAspectRatio_x13234:
    /*00013234*/ LDR         IP, [R2, #8] 
    /*00013238*/ LDR         LR, [R2, #12] 
    /*0001323c*/ CMP         IP, #0 
    /*00013240*/ BLT         VouCheckAspectRatio_x132f4
    /*00013244*/ CMP         LR, #0 
    /*00013248*/ BLT         VouCheckAspectRatio_x132f4
    /*0001324c*/ LDR         R3, [R1, #8] 
    /*00013250*/ CMP         R3, IP 
    /*00013254*/ BCC         VouCheckAspectRatio_x132f4
    /*00013258*/ LDR         R0, [R1, #12] 
    /*0001325c*/ LDR         R4, [R2, #16] 
    /*00013260*/ CMP         R0, LR 
    /*00013264*/ LDR         R5, [R2, #20] 
    /*00013268*/ BCC         VouCheckAspectRatio_x132bc
    /*0001326c*/ CMP         R4, #31 
    /*00013270*/ BLS         VouCheckAspectRatio_x132bc
    /*00013274*/ CMP         R3, R4 
    /*00013278*/ CMPCS       R0, R5 
    /*0001327c*/ MOVCC       R6, #1 
    /*00013280*/ MOVCS       R6, #0 
    /*00013284*/ CMP         R5, #31 
    /*00013288*/ ORRLS       R6, R6, #1 
    /*0001328c*/ CMP         R6, #0 
    /*00013290*/ BNE         VouCheckAspectRatio_x132bc
    /*00013294*/ LDR         R7, [R1] 
    /*00013298*/ ADD         R6, IP, R4 
    /*0001329c*/ ADD         R3, R3, R7 
    /*000132a0*/ CMP         R6, R3 
    /*000132a4*/ BHI         VouCheckAspectRatio_x132bc
    /*000132a8*/ LDR         R1, [R1, #4] 
    /*000132ac*/ ADD         R3, LR, R5 
    /*000132b0*/ ADD         R0, R0, R1 
    /*000132b4*/ CMP         R3, R0 
    /*000132b8*/ BLS         VouCheckAspectRatio_x1321c
    VouCheckAspectRatio_x132bc:
    /*000132bc*/ MOV         R3, #804                    @ 0x324 
    /*000132c0*/ STR         R5, [SP, #16] 
    /*000132c4*/ STR         R3, [SP] 
    /*000132c8*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x68b4] 
    /*000132cc*/ STR         R4, [SP, #12] 
    /*000132d0*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x68b4] 
    /*000132d4*/ STR         LR, [SP, #8] 
    /*000132d8*/ MOV         R1, #15 
    /*000132dc*/ STR         IP, [SP, #4] 
    /*000132e0*/ MOV         R0, #3 
    /*000132e4*/ LDR         R3, [PC, #88]               @ 0x0000000000013344 
    /*000132e8*/ BL          0x00000000000132E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000132ec*/ MVN         R0, #0 
    /*000132f0*/ B           VouCheckAspectRatio_x1322c
    VouCheckAspectRatio_x132f4:
    /*000132f4*/ LDR         R4, [R2, #16] 
    /*000132f8*/ LDR         R5, [R2, #20] 
    /*000132fc*/ B           VouCheckAspectRatio_x132bc
    VouCheckAspectRatio_x13300:
    /*00013300*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x686c] 
    /*00013304*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x686c] 
    /*00013308*/ STR         R3, [SP, #4] 
    /*0001330c*/ MOV         R3, #784                    @ 0x310 
    /*00013310*/ STR         R3, [SP] 
    VouCheckAspectRatio_x13314:
    /*00013314*/ LDR         R3, [PC, #40]               @ 0x0000000000013344 
    /*00013318*/ MOV         R1, #15 
    /*0001331c*/ MOV         R0, #3 
    /*00013320*/ BL          0x0000000000013320          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013324*/ MVN         R0, #0 
    /*00013328*/ B           VouCheckAspectRatio_x1322c
    VouCheckAspectRatio_x1332c:
    /*0001332c*/ STR         R3, [SP, #4] 
    /*00013330*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x690c] 
    /*00013334*/ MOVW        R3, #811                    @ 0x32b 
    /*00013338*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x690c] 
    /*0001333c*/ STR         R3, [SP] 
    /*00013340*/ B           VouCheckAspectRatio_x13314
    /*00013344*/ ANDEQ       R0, R0, IP, ROR FP 
FUNC_END VouCheckAspectRatio


FUNC_BEGIN VouCalcAspectRatio
    /*00013348*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001334c*/ MOVW        FP, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00013350*/ MOVT        FP, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00013354*/ MOVW        SL, #12192                  @ 0x2fa0 
    /*00013358*/ MOVW        IP, #12136                  @ 0x2f68 
    /*0001335c*/ SUB         SP, SP, #52                 @ 0x34 
    /*00013360*/ MLA         SL, SL, R0, FP 
    /*00013364*/ MOV         R6, R0 
    /*00013368*/ MOV         R5, R1 
    /*0001336c*/ MOV         R8, R2 
    /*00013370*/ MOV         R4, R3 
    /*00013374*/ LDR         R7, [SL, IP] 
    /*00013378*/ BL          0x0000000000013378          @ VOU_DRV_IsLayerEnlargeable [R_ARM_CALL: .text+0x17e44] 
    /*0001337c*/ CMP         R0, #1 
    /*00013380*/ MOV         R9, R0 
    /*00013384*/ BEQ         VouCalcAspectRatio_x1349c
    /*00013388*/ CMP         R7, #1 
    /*0001338c*/ BEQ         VouCalcAspectRatio_x135c0
    /*00013390*/ BCC         VouCalcAspectRatio_x13568
    /*00013394*/ CMP         R7, #2 
    /*00013398*/ BEQ         VouCalcAspectRatio_x134f8
    /*0001339c*/ MOVW        R3, #12132                  @ 0x2f64 
    /*000133a0*/ MOV         R2, #0 
    /*000133a4*/ STR         R2, [SL, R3] 
    /*000133a8*/ MOVW        R3, #913                    @ 0x391 
    VouCalcAspectRatio_x133ac:
    /*000133ac*/ LDR         R0, [R5] 
    /*000133b0*/ MOV         R1, #15 
    /*000133b4*/ STR         R7, [SP, #8] 
    /*000133b8*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x694c] 
    /*000133bc*/ STR         R6, [SP, #4] 
    /*000133c0*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x694c] 
    /*000133c4*/ STR         R0, [R4] 
    /*000133c8*/ MOV         R0, #4 
    /*000133cc*/ LDR         IP, [R5, #4] 
    /*000133d0*/ STR         R3, [SP] 
    /*000133d4*/ LDR         R3, [PC, #668]              @ 0x0000000000013678 
    /*000133d8*/ STR         IP, [R4, #4] 
    /*000133dc*/ LDR         IP, [R5, #8] 
    /*000133e0*/ STR         IP, [R4, #8] 
    /*000133e4*/ LDR         IP, [R5, #12] 
    /*000133e8*/ STR         IP, [R4, #12] 
    /*000133ec*/ BL          0x00000000000133EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000133f0*/ LDM         R4, {R1, R3, IP, LR} 
    VouCalcAspectRatio_x133f4:
    /*000133f4*/ MOVW        SL, #12192                  @ 0x2fa0 
    /*000133f8*/ MLA         SL, SL, R6, FP 
    /*000133fc*/ MOVW        R2, #12140                  @ 0x2f6c 
    /*00013400*/ ADD         R1, R1, R1, LSR #31 
    /*00013404*/ ADD         R3, R3, R3, LSR #31 
    /*00013408*/ BIC         R1, R1, #1 
    /*0001340c*/ BIC         R3, R3, #1 
    /*00013410*/ BIC         IP, IP, #1 
    /*00013414*/ STM         R4, {R1, R3} 
    /*00013418*/ BIC         LR, LR, #1 
    /*0001341c*/ STR         IP, [R4, #8] 
    /*00013420*/ STR         LR, [R4, #12] 
    /*00013424*/ MOV         R0, R6 
    /*00013428*/ LDR         R6, [SL, R2] 
    /*0001342c*/ ADD         R2, SP, #24 
    /*00013430*/ STR         R1, [SP, #32] 
    /*00013434*/ MOV         R1, R5 
    /*00013438*/ STR         R3, [SP, #36]               @ 0x24 
    /*0001343c*/ STR         IP, [SP, #40]               @ 0x28 
    /*00013440*/ STR         LR, [SP, #44]               @ 0x2c 
    /*00013444*/ STR         R7, [SP, #24] 
    /*00013448*/ STR         R6, [SP, #28] 
    /*0001344c*/ BL          0x000000000001344C          @ VouCheckAspectRatio [R_ARM_CALL: .text+0x13204] 
    /*00013450*/ CMN         R0, #1 
    /*00013454*/ BNE         VouCalcAspectRatio_x13494
    /*00013458*/ MOVW        R3, #12132                  @ 0x2f64 
    /*0001345c*/ MOV         R2, #0 
    /*00013460*/ STR         R2, [SL, R3] 
    /*00013464*/ CMP         R9, #1 
    /*00013468*/ LDR         R3, [R5] 
    /*0001346c*/ STR         R3, [R4] 
    /*00013470*/ LDR         R3, [R5, #4] 
    /*00013474*/ STR         R3, [R4, #4] 
    /*00013478*/ LDREQ       R3, [R5, #8] 
    /*0001347c*/ LDRNE       R3, [R8] 
    /*00013480*/ STREQ       R3, [R4, #8] 
    /*00013484*/ STRNE       R3, [R4, #8] 
    /*00013488*/ LDREQ       R3, [R5, #12] 
    /*0001348c*/ LDRNE       R3, [R8, #4] 
    /*00013490*/ STR         R3, [R4, #12] 
    VouCalcAspectRatio_x13494:
    /*00013494*/ ADD         SP, SP, #52                 @ 0x34 
    /*00013498*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouCalcAspectRatio_x1349c:
    /*0001349c*/ CMP         R7, #1 
    /*000134a0*/ BEQ         VouCalcAspectRatio_x13658
    /*000134a4*/ BCC         VouCalcAspectRatio_x13594
    /*000134a8*/ CMP         R7, #2 
    /*000134ac*/ BNE         VouCalcAspectRatio_x13644
    /*000134b0*/ MOVW        R3, #12132                  @ 0x2f64 
    /*000134b4*/ MOVW        R2, #12144                  @ 0x2f70 
    /*000134b8*/ STR         R0, [SL, R3] 
    /*000134bc*/ MOVW        R3, #12148                  @ 0x2f74 
    /*000134c0*/ LDR         IP, [SL, R2] 
    /*000134c4*/ MOVW        R0, #12152                  @ 0x2f78 
    /*000134c8*/ LDR         R1, [R5] 
    /*000134cc*/ MOVW        R2, #12156                  @ 0x2f7c 
    /*000134d0*/ ADD         R1, IP, R1 
    /*000134d4*/ STR         R1, [R4] 
    /*000134d8*/ LDR         IP, [SL, R3] 
    /*000134dc*/ LDR         R3, [R5, #4] 
    /*000134e0*/ ADD         R3, IP, R3 
    /*000134e4*/ STR         R3, [R4, #4] 
    /*000134e8*/ LDR         IP, [SL, R0] 
    /*000134ec*/ STR         IP, [R4, #8] 
    /*000134f0*/ LDR         LR, [SL, R2] 
    /*000134f4*/ B           VouCalcAspectRatio_x133f4
    VouCalcAspectRatio_x134f8:
    /*000134f8*/ MOVW        R2, #12132                  @ 0x2f64 
    /*000134fc*/ MOVW        R3, #12144                  @ 0x2f70 
    /*00013500*/ LDR         R3, [SL, R3] 
    /*00013504*/ MOV         R1, #1 
    /*00013508*/ STR         R1, [SL, R2] 
    /*0001350c*/ MOVW        R2, #12148                  @ 0x2f74 
    /*00013510*/ LDR         R0, [R5] 
    /*00013514*/ MOVW        R1, #905                    @ 0x389 
    /*00013518*/ STR         R6, [SP, #4] 
    /*0001351c*/ ADD         R3, R3, R0 
    /*00013520*/ STR         R3, [R4] 
    /*00013524*/ LDR         R3, [SL, R2] 
    /*00013528*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x69e4] 
    /*0001352c*/ LDR         R0, [R5, #4] 
    /*00013530*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x69e4] 
    /*00013534*/ STR         R1, [SP] 
    /*00013538*/ MOV         R1, #15 
    /*0001353c*/ ADD         R3, R3, R0 
    /*00013540*/ STR         R3, [R4, #4] 
    /*00013544*/ LDR         IP, [R8] 
    /*00013548*/ MOV         R0, #4 
    /*0001354c*/ LDR         R3, [PC, #292]              @ 0x0000000000013678 
    /*00013550*/ STR         IP, [R4, #8] 
    /*00013554*/ LDR         IP, [R8, #4] 
    /*00013558*/ STR         IP, [R4, #12] 
    /*0001355c*/ BL          0x000000000001355C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013560*/ LDM         R4, {R1, R3, IP, LR} 
    /*00013564*/ B           VouCalcAspectRatio_x133f4
    VouCalcAspectRatio_x13568:
    /*00013568*/ MOVW        R3, #12132                  @ 0x2f64 
    /*0001356c*/ MOV         R2, #0 
    /*00013570*/ STR         R2, [SL, R3] 
    /*00013574*/ LDR         R1, [R5] 
    /*00013578*/ STR         R1, [R4] 
    /*0001357c*/ LDR         R3, [R5, #4] 
    /*00013580*/ STR         R3, [R4, #4] 
    /*00013584*/ LDR         IP, [R8] 
    /*00013588*/ STR         IP, [R4, #8] 
    /*0001358c*/ LDR         LR, [R8, #4] 
    /*00013590*/ B           VouCalcAspectRatio_x133f4
    VouCalcAspectRatio_x13594:
    /*00013594*/ MOVW        R3, #12132                  @ 0x2f64 
    /*00013598*/ MOV         R2, #0 
    /*0001359c*/ STR         R2, [SL, R3] 
    /*000135a0*/ LDR         R1, [R5] 
    /*000135a4*/ STR         R1, [R4] 
    /*000135a8*/ LDR         R3, [R5, #4] 
    /*000135ac*/ STR         R3, [R4, #4] 
    /*000135b0*/ LDR         IP, [R5, #8] 
    /*000135b4*/ STR         IP, [R4, #8] 
    /*000135b8*/ LDR         LR, [R5, #12] 
    /*000135bc*/ B           VouCalcAspectRatio_x133f4
    VouCalcAspectRatio_x135c0:
    /*000135c0*/ MOVW        R3, #12132                  @ 0x2f64 
    /*000135c4*/ STR         R6, [SP, #4] 
    /*000135c8*/ STR         R7, [SL, R3] 
    /*000135cc*/ MOVW        R3, #895                    @ 0x37f 
    /*000135d0*/ LDR         R1, [R8] 
    /*000135d4*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6990] 
    /*000135d8*/ LDR         R0, [R5, #8] 
    /*000135dc*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6990] 
    /*000135e0*/ LDR         IP, [R5] 
    /*000135e4*/ SUB         R0, R0, R1 
    /*000135e8*/ STR         R3, [SP] 
    /*000135ec*/ MOV         R1, #15 
    /*000135f0*/ LDR         R3, [PC, #128]              @ 0x0000000000013678 
    /*000135f4*/ ADD         IP, IP, R0, LSR #1 
    /*000135f8*/ STR         IP, [R4] 
    /*000135fc*/ LDR         R0, [R5, #12] 
    /*00013600*/ LDR         LR, [R8, #4] 
    /*00013604*/ STR         IP, [SP, #8] 
    /*00013608*/ SUB         IP, R0, LR 
    /*0001360c*/ LDR         R0, [R5, #4] 
    /*00013610*/ ADD         R0, R0, IP, LSR #1 
    /*00013614*/ STR         R0, [R4, #4] 
    /*00013618*/ LDR         LR, [R8] 
    /*0001361c*/ STR         R0, [SP, #12] 
    /*00013620*/ MOV         R0, #6 
    /*00013624*/ STR         LR, [R4, #8] 
    /*00013628*/ LDR         IP, [R8, #4] 
    /*0001362c*/ STR         LR, [SP, #16] 
    /*00013630*/ STR         IP, [R4, #12] 
    /*00013634*/ STR         IP, [SP, #20] 
    /*00013638*/ BL          0x0000000000013638          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001363c*/ LDM         R4, {R1, R3, IP, LR} 
    /*00013640*/ B           VouCalcAspectRatio_x133f4
    VouCalcAspectRatio_x13644:
    /*00013644*/ MOVW        R3, #12132                  @ 0x2f64 
    /*00013648*/ MOV         R2, #0 
    /*0001364c*/ STR         R2, [SL, R3] 
    /*00013650*/ MOV         R3, #868                    @ 0x364 
    /*00013654*/ B           VouCalcAspectRatio_x133ac
    VouCalcAspectRatio_x13658:
    /*00013658*/ MOVW        R3, #12132                  @ 0x2f64 
    /*0001365c*/ MOV         R1, R8 
    /*00013660*/ STR         R7, [SL, R3] 
    /*00013664*/ MOV         R2, R4 
    /*00013668*/ MOV         R0, R5 
    /*0001366c*/ BL          0x000000000001366C          @ VouCalcAutoLBX [R_ARM_CALL: .text+0x13154] 
    /*00013670*/ LDM         R4, {R1, R3, IP, LR} 
    /*00013674*/ B           VouCalcAspectRatio_x133f4
    /*00013678*/ MULEQ       R0, R0, FP 
FUNC_END VouCalcAspectRatio


FUNC_BEGIN VouDispNeedCrop
    /*0001367c*/ LDR         R2, [R0] 
    /*00013680*/ LDR         R3, [R1, #8] 
    /*00013684*/ CMP         R2, R3 
    /*00013688*/ BHI         VouDispNeedCrop_x136a4
    /*0001368c*/ LDR         R0, [R0, #4] 
    /*00013690*/ LDR         R3, [R1, #12] 
    /*00013694*/ CMP         R0, R3 
    /*00013698*/ MOVLS       R0, #0 
    /*0001369c*/ MOVHI       R0, #1 
    /*000136a0*/ BX          LR 
    VouDispNeedCrop_x136a4:
    /*000136a4*/ MOV         R0, #1 
    /*000136a8*/ BX          LR 
FUNC_END VouDispNeedCrop


FUNC_BEGIN VouDispSetCVFIR
    /*000136ac*/ PUSH        {R4, R5, LR} 
    /*000136b0*/ SUB         SP, SP, #300                @ 0x12c 
    /*000136b4*/ MOV         R4, R0 
    /*000136b8*/ MOV         R5, R1 
    /*000136bc*/ MOV         R2, #296                    @ 0x128 
    /*000136c0*/ MOV         R0, SP 
    /*000136c4*/ MOV         R1, #0 
    /*000136c8*/ BL          0x00000000000136C8          @ memset [R_ARM_CALL: +0x0] 
    /*000136cc*/ LDR         R2, [R5, #8] 
    /*000136d0*/ LDR         R3, [R5, #12] 
    /*000136d4*/ MOV         R1, SP 
    /*000136d8*/ MOV         R0, R4 
    /*000136dc*/ MOV         R5, #1 
    /*000136e0*/ STR         R2, [SP] 
    /*000136e4*/ STR         R2, [SP, #8] 
    /*000136e8*/ STR         R3, [SP, #4] 
    /*000136ec*/ STR         R3, [SP, #12] 
    /*000136f0*/ STR         R5, [SP, #20] 
    /*000136f4*/ BL          0x00000000000136F4          @ VO_VID_SetZmeEnable [R_ARM_CALL: .text+0x166f8] 
    /*000136f8*/ MOV         R3, R5 
    /*000136fc*/ MOV         R0, R4 
    /*00013700*/ LDR         R2, [SP, #12] 
    /*00013704*/ LDR         R1, [SP, #8] 
    /*00013708*/ BL          0x0000000000013708          @ HAL_LAYER_SetZmeInfo [R_ARM_CALL: .text+0x1cb08] 
    /*0001370c*/ ADD         SP, SP, #300                @ 0x12c 
    /*00013710*/ POP         {R4, R5, PC} 
FUNC_END VouDispSetCVFIR


FUNC_BEGIN VouDispChnDisplay
    /*00013714*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00013718*/ SUB         SP, SP, #100                @ 0x64 
    /*0001371c*/ MOV         R3, #0 
    /*00013720*/ MOV         FP, R1 
    /*00013724*/ MOV         R5, R2 
    /*00013728*/ MOV         R4, R0 
    /*0001372c*/ STR         R3, [SP, #68]               @ 0x44 
    /*00013730*/ STR         R3, [SP, #64]               @ 0x40 
    /*00013734*/ STR         R3, [SP, #72]               @ 0x48 
    /*00013738*/ STR         R3, [SP, #76]               @ 0x4c 
    /*0001373c*/ BL          0x000000000001373C          @ VOU_DRV_GetVideoLayerBindDev [R_ARM_CALL: .text+0x19218] 
    /*00013740*/ CMN         R0, #1 
    /*00013744*/ MOV         R7, R0 
    /*00013748*/ BEQ         VouDispChnDisplay_x13bd4
    /*0001374c*/ CMN         R4, #1 
    /*00013750*/ BEQ         VouDispChnDisplay_x13bf8
    VouDispChnDisplay_x13754:
    /*00013754*/ BL          0x0000000000013754          @ VO_DRV_IsChipSupportZme [R_ARM_CALL: .text+0x17e24] 
    /*00013758*/ MOVW        R6, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*0001375c*/ MOVT        R6, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00013760*/ MOVW        R9, #12192                  @ 0x2fa0 
    /*00013764*/ LDR         R2, [R5, #720]              @ 0x2d0 
    /*00013768*/ MOV         R1, R5 
    /*0001376c*/ MLA         R9, R9, R4, R6 
    /*00013770*/ LDR         R3, [R5, #724]              @ 0x2d4 
    /*00013774*/ LDR         IP, [R9, #120]              @ 0x78 
    /*00013778*/ LDR         LR, [R9, #112]              @ 0x70 
    /*0001377c*/ CMP         R2, IP 
    /*00013780*/ MOVCS       R2, IP 
    /*00013784*/ STR         R2, [SP, #56]               @ 0x38 
    /*00013788*/ LDR         R2, [R9, #124]              @ 0x7c 
    /*0001378c*/ LDR         IP, [R9, #116]              @ 0x74 
    /*00013790*/ CMP         R3, R2 
    /*00013794*/ STR         LR, [SP, #48]               @ 0x30 
    /*00013798*/ MOVCS       R3, R2 
    /*0001379c*/ STR         IP, [SP, #52]               @ 0x34 
    /*000137a0*/ STR         R3, [SP, #60]               @ 0x3c 
    /*000137a4*/ MOV         R8, R0 
    /*000137a8*/ ADD         R0, SP, #48                 @ 0x30 
    /*000137ac*/ BL          0x00000000000137AC          @ VOU_DRV_GetMinWidthAndHeight [R_ARM_CALL: .text+0x17e74] 
    /*000137b0*/ LDR         R3, [R9, #156]              @ 0x9c 
    /*000137b4*/ CMP         R3, #0 
    /*000137b8*/ STREQ       R3, [SP, #40]               @ 0x28 
    /*000137bc*/ STREQ       R3, [SP, #44]               @ 0x2c 
    /*000137c0*/ BEQ         VouDispChnDisplay_x137fc
    /*000137c4*/ LDR         R2, [SP, #56]               @ 0x38 
    /*000137c8*/ LDR         R0, [R9, #168]              @ 0xa8 
    /*000137cc*/ LDR         R3, [SP, #60]               @ 0x3c 
    /*000137d0*/ CMP         R2, R0 
    /*000137d4*/ LDR         R1, [R9, #172]              @ 0xac 
    /*000137d8*/ LDR         IP, [R9, #160]              @ 0xa0 
    /*000137dc*/ MOVCS       R2, R0 
    /*000137e0*/ LDR         R0, [R9, #164]              @ 0xa4 
    /*000137e4*/ CMP         R3, R1 
    /*000137e8*/ STR         R2, [SP, #56]               @ 0x38 
    /*000137ec*/ STR         IP, [SP, #40]               @ 0x28 
    /*000137f0*/ MOVCS       R3, R1 
    /*000137f4*/ STR         R0, [SP, #44]               @ 0x2c 
    /*000137f8*/ STR         R3, [SP, #60]               @ 0x3c 
    VouDispChnDisplay_x137fc:
    /*000137fc*/ CMP         R8, #0 
    /*00013800*/ BNE         VouDispChnDisplay_x13944
    /*00013804*/ MOVW        R1, #12192                  @ 0x2fa0 
    /*00013808*/ LDR         R2, [R5] 
    /*0001380c*/ MUL         R1, R1, R4 
    /*00013810*/ LDR         R0, [R5, #4] 
    /*00013814*/ STR         R2, [SP, #32] 
    /*00013818*/ ADD         R3, R6, R1 
    /*0001381c*/ STR         R0, [SP, #36]               @ 0x24 
    /*00013820*/ LDR         IP, [R3, #120]              @ 0x78 
    /*00013824*/ CMP         R2, IP 
    /*00013828*/ BLS         VouDispChnDisplay_x138b0
    VouDispChnDisplay_x1382c:
    /*0001382c*/ ADD         R1, SP, #48                 @ 0x30 
    /*00013830*/ MOV         R0, R4 
    /*00013834*/ BL          0x0000000000013834          @ VOU_DRV_SetLayerDispRect [R_ARM_CALL: .text+0x17660] 
    /*00013838*/ ADD         R1, SP, #48                 @ 0x30 
    /*0001383c*/ MOV         R0, R4 
    /*00013840*/ ADD         R6, R5, #712                @ 0x2c8 
    /*00013844*/ BL          0x0000000000013844          @ VOU_DRV_SetLayerVideoRect [R_ARM_CALL: .text+0x17664] 
    /*00013848*/ ADD         R1, SP, #48                 @ 0x30 
    /*0001384c*/ MOV         R0, R4 
    /*00013850*/ BL          0x0000000000013850          @ VOU_DRV_SetImageInReso [R_ARM_CALL: .text+0x17654] 
    VouDispChnDisplay_x13854:
    /*00013854*/ ADD         R1, SP, #40                 @ 0x28 
    /*00013858*/ MOV         R0, R4 
    /*0001385c*/ BL          0x000000000001385C          @ VOU_DRV_SetSrcCropXY [R_ARM_CALL: .text+0x192e4] 
    /*00013860*/ MOV         R1, R6 
    /*00013864*/ MOV         R0, R4 
    /*00013868*/ BL          0x0000000000013868          @ VOU_DRV_SetSrcImageReso [R_ARM_CALL: .text+0x17658] 
    /*0001386c*/ LDR         R1, [R5, #20] 
    /*00013870*/ CMP         R1, #1 
    /*00013874*/ BEQ         VouDispChnDisplay_x13c18
    /*00013878*/ CMP         R1, #0 
    /*0001387c*/ BEQ         VouDispChnDisplay_x13ab8
    VouDispChnDisplay_x13880:
    /*00013880*/ ADD         R1, SP, #48                 @ 0x30 
    /*00013884*/ MOV         R0, R4 
    /*00013888*/ BL          0x0000000000013888          @ VouDispSetCVFIR [R_ARM_CALL: .text+0x136ac] 
    VouDispChnDisplay_x1388c:
    /*0001388c*/ MOV         R0, R4 
    /*00013890*/ MOV         R1, #0 
    /*00013894*/ BL          0x0000000000013894          @ VO_DRV_SetMultiRegionEnable [R_ARM_CALL: .text+0x1794c] 
    /*00013898*/ MOV         R0, R7 
    /*0001389c*/ MOV         R1, #10 
    /*000138a0*/ BL          0x00000000000138A0          @ VOU_DRV_SetDevDither [R_ARM_CALL: .text+0x19cb0] 
    /*000138a4*/ MOV         R0, #0 
    /*000138a8*/ ADD         SP, SP, #100                @ 0x64 
    /*000138ac*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouDispChnDisplay_x138b0:
    /*000138b0*/ LDR         R2, [R3, #124]              @ 0x7c 
    /*000138b4*/ CMP         R0, R2 
    /*000138b8*/ BHI         VouDispChnDisplay_x1382c
    /*000138bc*/ LDR         R3, [R3, #156]              @ 0x9c 
    /*000138c0*/ CMP         R3, #0 
    /*000138c4*/ BNE         VouDispChnDisplay_x1382c
    /*000138c8*/ ADD         R1, R1, #112                @ 0x70 
    /*000138cc*/ ADD         R9, SP, #80                 @ 0x50 
    /*000138d0*/ ADD         R8, R6, R1 
    /*000138d4*/ ADD         R2, SP, #32 
    /*000138d8*/ MOV         R3, R9 
    /*000138dc*/ MOV         R0, R4 
    /*000138e0*/ MOV         R1, R8 
    /*000138e4*/ BL          0x00000000000138E4          @ VouCalcAspectRatio [R_ARM_CALL: .text+0x13348] 
    /*000138e8*/ CMN         R0, #1 
    /*000138ec*/ BEQ         VouDispChnDisplay_x13d48
    VouDispChnDisplay_x138f0:
    /*000138f0*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*000138f4*/ MOVW        R2, #12136                  @ 0x2f68 
    /*000138f8*/ MLA         R6, R3, R4, R6 
    /*000138fc*/ LDR         R3, [R6, R2] 
    /*00013900*/ CMP         R3, #0 
    /*00013904*/ BEQ         VouDispChnDisplay_x13cac
    /*00013908*/ MOV         R1, R8 
    /*0001390c*/ MOV         R0, R4 
    /*00013910*/ BL          0x0000000000013910          @ VOU_DRV_SetLayerDispRect [R_ARM_CALL: .text+0x17660] 
    /*00013914*/ MOVW        R3, #12140                  @ 0x2f6c 
    /*00013918*/ LDR         R1, [R6, R3] 
    /*0001391c*/ MOV         R0, R4 
    /*00013920*/ BL          0x0000000000013920          @ VOU_DRV_SetLayerBgcolor [R_ARM_CALL: .text+0x17668] 
    VouDispChnDisplay_x13924:
    /*00013924*/ ADD         R6, R5, #712                @ 0x2c8 
    /*00013928*/ MOV         R1, R9 
    /*0001392c*/ MOV         R0, R4 
    /*00013930*/ BL          0x0000000000013930          @ VOU_DRV_SetLayerVideoRect [R_ARM_CALL: .text+0x17664] 
    /*00013934*/ MOV         R1, R6 
    /*00013938*/ MOV         R0, R4 
    /*0001393c*/ BL          0x000000000001393C          @ VOU_DRV_SetImageInReso [R_ARM_CALL: .text+0x17654] 
    /*00013940*/ B           VouDispChnDisplay_x13854
    VouDispChnDisplay_x13944:
    /*00013944*/ MOV         R0, R4 
    /*00013948*/ BL          0x0000000000013948          @ VOU_DRV_IsLayerEnlargeable [R_ARM_CALL: .text+0x17e44] 
    /*0001394c*/ CMP         R0, #1 
    /*00013950*/ BEQ         VouDispChnDisplay_x13c90
    VouDispChnDisplay_x13954:
    /*00013954*/ ADD         R1, SP, #48                 @ 0x30 
    /*00013958*/ MOV         R0, R4 
    /*0001395c*/ BL          0x000000000001395C          @ VouSetSingleAreaDispLocation [R_ARM_CALL: .text+0x1310c] 
    /*00013960*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00013964*/ MLA         R3, R3, R4, R6 
    /*00013968*/ LDR         R1, [R5, #4] 
    /*0001396c*/ LDR         IP, [R5] 
    /*00013970*/ ADD         R9, SP, #80                 @ 0x50 
    /*00013974*/ ADD         R2, SP, #32 
    /*00013978*/ MOV         R0, R4 
    /*0001397c*/ ADD         R3, R3, #112                @ 0x70 
    /*00013980*/ STR         R1, [SP, #36]               @ 0x24 
    /*00013984*/ STR         R3, [SP, #28] 
    /*00013988*/ MOV         LR, R3 
    /*0001398c*/ MOV         R3, R9 
    /*00013990*/ MOV         R1, LR 
    /*00013994*/ STR         IP, [SP, #32] 
    /*00013998*/ BL          0x0000000000013998          @ VouCalcAspectRatio [R_ARM_CALL: .text+0x13348] 
    /*0001399c*/ CMN         R0, #1 
    /*000139a0*/ BEQ         VouDispChnDisplay_x13d20
    VouDispChnDisplay_x139a4:
    /*000139a4*/ MOVW        IP, #12192                  @ 0x2fa0 
    /*000139a8*/ MOVW        R3, #12136                  @ 0x2f68 
    /*000139ac*/ MLA         IP, IP, R4, R6 
    /*000139b0*/ MOVW        SL, #12192                  @ 0x2fa0 
    /*000139b4*/ MLA         SL, SL, R4, R6 
    /*000139b8*/ LDR         R3, [IP, R3] 
    /*000139bc*/ CMP         R3, #1 
    /*000139c0*/ ADDLS       IP, IP, #12096              @ 0x2f40 
    /*000139c4*/ LDMLS       R9, {R0, R1, R2, R3} 
    /*000139c8*/ ADDLS       IP, IP, #48                 @ 0x30 
    /*000139cc*/ STMLS       IP, {R0, R1, R2, R3} 
    /*000139d0*/ MOV         R1, R9 
    /*000139d4*/ MOV         R0, R4 
    /*000139d8*/ BL          0x00000000000139D8          @ VOU_DRV_SetLayerVideoRect [R_ARM_CALL: .text+0x17664] 
    /*000139dc*/ MOVW        R3, #12140                  @ 0x2f6c 
    /*000139e0*/ LDR         R1, [SL, R3] 
    /*000139e4*/ MOV         R0, R4 
    /*000139e8*/ BL          0x00000000000139E8          @ VOU_DRV_SetLayerBgcolor [R_ARM_CALL: .text+0x17668] 
    /*000139ec*/ ADD         R1, R5, #712                @ 0x2c8 
    /*000139f0*/ MOV         R0, R4 
    /*000139f4*/ BL          0x00000000000139F4          @ VOU_DRV_SetImageInReso [R_ARM_CALL: .text+0x17654] 
    /*000139f8*/ MOV         R0, R4 
    /*000139fc*/ BL          0x00000000000139FC          @ VOU_DRV_IsLayerEnlargeable [R_ARM_CALL: .text+0x17e44] 
    /*00013a00*/ CMP         R0, #0 
    /*00013a04*/ BEQ         VouDispChnDisplay_x13ac8
    /*00013a08*/ LDR         R1, [SP, #28] 
    /*00013a0c*/ MOV         R0, R4 
    /*00013a10*/ BL          0x0000000000013A10          @ VOU_DRV_SetLayerDispRect [R_ARM_CALL: .text+0x17660] 
    VouDispChnDisplay_x13a14:
    /*00013a14*/ LDR         R1, [R5, #20] 
    /*00013a18*/ CMP         R1, #1 
    /*00013a1c*/ BEQ         VouDispChnDisplay_x13d10
    /*00013a20*/ CMP         R1, #0 
    /*00013a24*/ BEQ         VouDispChnDisplay_x13cbc
    VouDispChnDisplay_x13a28:
    /*00013a28*/ MOV         R1, R5 
    /*00013a2c*/ MOV         R0, R4 
    /*00013a30*/ BL          0x0000000000013A30          @ VO_DRV_HihdrConfig [R_ARM_CALL: .text+0x1557c] 
    /*00013a34*/ LDR         R3, [R5, #16] 
    /*00013a38*/ CMP         R3, #3 
    /*00013a3c*/ BEQ         VouDispChnDisplay_x13d00
    VouDispChnDisplay_x13a40:
    /*00013a40*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00013a44*/ MOVW        R9, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3308] 
    /*00013a48*/ MLA         R6, R3, R4, R6 
    /*00013a4c*/ MOVT        R9, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3308] 
    /*00013a50*/ MOVW        R3, #12136                  @ 0x2f68 
    /*00013a54*/ MOV         R2, #0 
    /*00013a58*/ STR         R2, [R9, #24] 
    /*00013a5c*/ MOV         R2, #1 
    /*00013a60*/ STR         R2, [R9, #20] 
    /*00013a64*/ LDR         R1, [R5] 
    /*00013a68*/ LDR         R3, [R6, R3] 
    /*00013a6c*/ LDR         R2, [R5, #4] 
    /*00013a70*/ CMP         R3, #0 
    /*00013a74*/ STM         R9, {R1, R2} 
    /*00013a78*/ BNE         VouDispChnDisplay_x13b90
    /*00013a7c*/ LDR         R2, [R6, #120]              @ 0x78 
    /*00013a80*/ LDR         R3, [R6, #124]              @ 0x7c 
    /*00013a84*/ STR         R2, [R9, #8] 
    /*00013a88*/ STR         R3, [R9, #12] 
    VouDispChnDisplay_x13a8c:
    /*00013a8c*/ MOV         R0, R4 
    /*00013a90*/ MOVW        R1, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3308] 
    /*00013a94*/ MOVT        R1, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3308] 
    /*00013a98*/ STR         R8, [R9, #16] 
    /*00013a9c*/ BL          0x0000000000013A9C          @ VO_VID_SetZmeEnable [R_ARM_CALL: .text+0x166f8] 
    /*00013aa0*/ MOV         R3, #1 
    /*00013aa4*/ LDR         R2, [R9, #12] 
    /*00013aa8*/ MOV         R0, R4 
    /*00013aac*/ LDR         R1, [R9, #8] 
    /*00013ab0*/ BL          0x0000000000013AB0          @ HAL_LAYER_SetZmeInfo [R_ARM_CALL: .text+0x1cb08] 
    /*00013ab4*/ B           VouDispChnDisplay_x1388c
    VouDispChnDisplay_x13ab8:
    /*00013ab8*/ MOV         R2, R5 
    /*00013abc*/ MOV         R0, R4 
    /*00013ac0*/ BL          0x0000000000013AC0          @ VOU_DRV_SetMultiDispFrameInfo [R_ARM_CALL: .text+0x17954] 
    /*00013ac4*/ B           VouDispChnDisplay_x13880
    VouDispChnDisplay_x13ac8:
    /*00013ac8*/ LDR         R0, [SP, #60]               @ 0x3c 
    /*00013acc*/ MOVW        R3, #1133                   @ 0x46d 
    /*00013ad0*/ LDR         IP, [SP, #56]               @ 0x38 
    /*00013ad4*/ MOVW        R2, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6adc] 
    /*00013ad8*/ STR         R3, [SP] 
    /*00013adc*/ MOVT        R2, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6adc] 
    /*00013ae0*/ STR         R0, [SP, #16] 
    /*00013ae4*/ MOV         R1, #15 
    /*00013ae8*/ LDR         R3, [PC, #640]              @ 0x0000000000013d70 
    /*00013aec*/ MOV         R0, #6 
    /*00013af0*/ STR         FP, [SP, #8] 
    /*00013af4*/ STR         R4, [SP, #4] 
    /*00013af8*/ STR         IP, [SP, #12] 
    /*00013afc*/ BL          0x0000000000013AFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013b00*/ LDR         R2, [SP, #32] 
    /*00013b04*/ LDR         R3, [SL, #120]              @ 0x78 
    /*00013b08*/ CMP         R2, R3 
    /*00013b0c*/ BHI         VouDispChnDisplay_x13c28
    /*00013b10*/ LDR         R2, [SP, #36]               @ 0x24 
    /*00013b14*/ LDR         R3, [SL, #124]              @ 0x7c 
    /*00013b18*/ CMP         R2, R3 
    /*00013b1c*/ BHI         VouDispChnDisplay_x13c28
    /*00013b20*/ MOVW        R3, #12136                  @ 0x2f68 
    /*00013b24*/ LDR         R3, [SL, R3] 
    /*00013b28*/ CMP         R3, #0 
    /*00013b2c*/ BNE         VouDispChnDisplay_x13ce0
    /*00013b30*/ MOV         R1, R9 
    /*00013b34*/ MOV         R0, R4 
    /*00013b38*/ BL          0x0000000000013B38          @ VOU_DRV_SetLayerDispRect [R_ARM_CALL: .text+0x17660] 
    VouDispChnDisplay_x13b3c:
    /*00013b3c*/ ADD         R1, SP, #48                 @ 0x30 
    /*00013b40*/ MOV         R0, R4 
    /*00013b44*/ BL          0x0000000000013B44          @ VOU_DRV_SetImageInReso [R_ARM_CALL: .text+0x17654] 
    /*00013b48*/ LDR         R1, [SP, #92]               @ 0x5c 
    /*00013b4c*/ LDR         R0, [SP, #88]               @ 0x58 
    /*00013b50*/ MOVW        R3, #1149                   @ 0x47d 
    /*00013b54*/ STR         FP, [SP, #8] 
    /*00013b58*/ MOVW        R2, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b18] 
    /*00013b5c*/ STR         R1, [SP, #16] 
    /*00013b60*/ MOVT        R2, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b18] 
    /*00013b64*/ STR         R0, [SP, #12] 
    /*00013b68*/ MOV         R1, #15 
    /*00013b6c*/ STR         R3, [SP] 
    /*00013b70*/ MOV         R0, #6 
    /*00013b74*/ STR         R4, [SP, #4] 
    /*00013b78*/ LDR         R3, [PC, #496]              @ 0x0000000000013d70 
    /*00013b7c*/ BL          0x0000000000013B7C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013b80*/ MOV         R1, R9 
    /*00013b84*/ MOV         R0, R4 
    /*00013b88*/ BL          0x0000000000013B88          @ VOU_DRV_SetLayerVideoRect [R_ARM_CALL: .text+0x17664] 
    /*00013b8c*/ B           VouDispChnDisplay_x13a14
    VouDispChnDisplay_x13b90:
    /*00013b90*/ SUB         R2, R3, #1 
    /*00013b94*/ CMP         R2, #1 
    /*00013b98*/ BLS         VouDispChnDisplay_x13ccc
    /*00013b9c*/ LDR         LR, [R6, #120]              @ 0x78 
    /*00013ba0*/ MOV         R1, #1216                   @ 0x4c0 
    /*00013ba4*/ LDR         IP, [R6, #124]              @ 0x7c 
    /*00013ba8*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b5c] 
    /*00013bac*/ STR         R3, [SP, #4] 
    /*00013bb0*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b5c] 
    /*00013bb4*/ STR         R1, [SP] 
    /*00013bb8*/ MOV         R0, #3 
    /*00013bbc*/ MOV         R1, #15 
    /*00013bc0*/ LDR         R3, [PC, #424]              @ 0x0000000000013d70 
    /*00013bc4*/ STR         LR, [R9, #8] 
    /*00013bc8*/ STR         IP, [R9, #12] 
    /*00013bcc*/ BL          0x0000000000013BCC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013bd0*/ B           VouDispChnDisplay_x13a8c
    VouDispChnDisplay_x13bd4:
    /*00013bd4*/ MOVW        R3, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6a44] 
    /*00013bd8*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6784] 
    /*00013bdc*/ MOVT        R3, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6a44] 
    /*00013be0*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6784] 
    /*00013be4*/ MOVW        R2, #1018                   @ 0x3fa 
    /*00013be8*/ LDR         R1, [PC, #384]              @ 0x0000000000013d70 
    /*00013bec*/ BL          0x0000000000013BEC          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00013bf0*/ CMN         R4, #1 
    /*00013bf4*/ BNE         VouDispChnDisplay_x13754
    VouDispChnDisplay_x13bf8:
    /*00013bf8*/ MOVW        R3, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6a60] 
    /*00013bfc*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6784] 
    /*00013c00*/ MOVT        R3, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6a60] 
    /*00013c04*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6784] 
    /*00013c08*/ MOVW        R2, #1019                   @ 0x3fb 
    /*00013c0c*/ LDR         R1, [PC, #348]              @ 0x0000000000013d70 
    /*00013c10*/ BL          0x0000000000013C10          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00013c14*/ B           VouDispChnDisplay_x13754
    VouDispChnDisplay_x13c18:
    /*00013c18*/ MOV         R1, R5 
    /*00013c1c*/ MOV         R0, R4 
    /*00013c20*/ BL          0x0000000000013C20          @ VO_DRV_VID_FdrDcmpCfg [R_ARM_CALL: .text+0x15bd8] 
    /*00013c24*/ B           VouDispChnDisplay_x13880
    VouDispChnDisplay_x13c28:
    /*00013c28*/ MOVW        R9, #12192                  @ 0x2fa0 
    /*00013c2c*/ ADD         R1, SP, #48                 @ 0x30 
    /*00013c30*/ MLA         R9, R9, R4, R6 
    /*00013c34*/ MOV         R0, R4 
    /*00013c38*/ BL          0x0000000000013C38          @ VOU_DRV_SetLayerDispRect [R_ARM_CALL: .text+0x17660] 
    /*00013c3c*/ LDR         R3, [SP, #32] 
    /*00013c40*/ LDR         IP, [SP, #36]               @ 0x24 
    /*00013c44*/ ADD         R1, SP, #64                 @ 0x40 
    /*00013c48*/ MOV         R0, R4 
    /*00013c4c*/ LDR         R2, [R9, #120]              @ 0x78 
    /*00013c50*/ CMP         R2, R3 
    /*00013c54*/ MOVCS       R2, R3 
    /*00013c58*/ LDR         R3, [R9, #124]              @ 0x7c 
    /*00013c5c*/ STR         R2, [SP, #72]               @ 0x48 
    /*00013c60*/ CMP         R3, IP 
    /*00013c64*/ MOVCS       R3, IP 
    /*00013c68*/ STR         R3, [SP, #76]               @ 0x4c 
    /*00013c6c*/ BL          0x0000000000013C6C          @ VOU_DRV_SetImageInReso [R_ARM_CALL: .text+0x17654] 
    /*00013c70*/ LDR         R2, [R9, #112]              @ 0x70 
    /*00013c74*/ LDR         R3, [R9, #116]              @ 0x74 
    /*00013c78*/ ADD         R1, SP, #64                 @ 0x40 
    /*00013c7c*/ MOV         R0, R4 
    /*00013c80*/ STR         R2, [SP, #64]               @ 0x40 
    /*00013c84*/ STR         R3, [SP, #68]               @ 0x44 
    /*00013c88*/ BL          0x0000000000013C88          @ VOU_DRV_SetLayerVideoRect [R_ARM_CALL: .text+0x17664] 
    /*00013c8c*/ B           VouDispChnDisplay_x13a14
    VouDispChnDisplay_x13c90:
    /*00013c90*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00013c94*/ MLA         R3, R3, R4, R6 
    /*00013c98*/ LDR         R2, [R3, #120]              @ 0x78 
    /*00013c9c*/ LDR         R3, [R3, #124]              @ 0x7c 
    /*00013ca0*/ STR         R2, [SP, #56]               @ 0x38 
    /*00013ca4*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00013ca8*/ B           VouDispChnDisplay_x13954
    VouDispChnDisplay_x13cac:
    /*00013cac*/ MOV         R1, R9 
    /*00013cb0*/ MOV         R0, R4 
    /*00013cb4*/ BL          0x0000000000013CB4          @ VOU_DRV_SetLayerDispRect [R_ARM_CALL: .text+0x17660] 
    /*00013cb8*/ B           VouDispChnDisplay_x13924
    VouDispChnDisplay_x13cbc:
    /*00013cbc*/ MOV         R2, R5 
    /*00013cc0*/ MOV         R0, R4 
    /*00013cc4*/ BL          0x0000000000013CC4          @ VOU_DRV_SetMultiDispFrameInfo [R_ARM_CALL: .text+0x17954] 
    /*00013cc8*/ B           VouDispChnDisplay_x13a28
    VouDispChnDisplay_x13ccc:
    /*00013ccc*/ LDR         R2, [SP, #88]               @ 0x58 
    /*00013cd0*/ LDR         R3, [SP, #92]               @ 0x5c 
    /*00013cd4*/ STR         R2, [R9, #8] 
    /*00013cd8*/ STR         R3, [R9, #12] 
    /*00013cdc*/ B           VouDispChnDisplay_x13a8c
    VouDispChnDisplay_x13ce0:
    /*00013ce0*/ LDR         R1, [SP, #28] 
    /*00013ce4*/ MOV         R0, R4 
    /*00013ce8*/ BL          0x0000000000013CE8          @ VOU_DRV_SetLayerDispRect [R_ARM_CALL: .text+0x17660] 
    /*00013cec*/ MOVW        R3, #12140                  @ 0x2f6c 
    /*00013cf0*/ LDR         R1, [SL, R3] 
    /*00013cf4*/ MOV         R0, R4 
    /*00013cf8*/ BL          0x0000000000013CF8          @ VOU_DRV_SetLayerBgcolor [R_ARM_CALL: .text+0x17668] 
    /*00013cfc*/ B           VouDispChnDisplay_x13b3c
    VouDispChnDisplay_x13d00:
    /*00013d00*/ MOV         R1, #4 
    /*00013d04*/ MOV         R0, R4 
    /*00013d08*/ BL          0x0000000000013D08          @ VO_DRV_SetLayerBitWidth [R_ARM_CALL: .text+0x1550c] 
    /*00013d0c*/ B           VouDispChnDisplay_x13a40
    VouDispChnDisplay_x13d10:
    /*00013d10*/ MOV         R1, R5 
    /*00013d14*/ MOV         R0, R4 
    /*00013d18*/ BL          0x0000000000013D18          @ VO_DRV_VID_FdrDcmpCfg [R_ARM_CALL: .text+0x15bd8] 
    /*00013d1c*/ B           VouDispChnDisplay_x13a28
    VouDispChnDisplay_x13d20:
    /*00013d20*/ MOVW        R3, #1117                   @ 0x45d 
    /*00013d24*/ STR         R4, [SP, #4] 
    /*00013d28*/ STR         R3, [SP] 
    /*00013d2c*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6a80] 
    /*00013d30*/ LDR         R3, [PC, #56]               @ 0x0000000000013d70 
    /*00013d34*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6a80] 
    /*00013d38*/ MOV         R1, #15 
    /*00013d3c*/ MOV         R0, #3 
    /*00013d40*/ BL          0x0000000000013D40          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013d44*/ B           VouDispChnDisplay_x139a4
    VouDispChnDisplay_x13d48:
    /*00013d48*/ MOV         R3, #1248                   @ 0x4e0 
    /*00013d4c*/ STR         R4, [SP, #4] 
    /*00013d50*/ STR         R3, [SP] 
    /*00013d54*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6a80] 
    /*00013d58*/ LDR         R3, [PC, #16]               @ 0x0000000000013d70 
    /*00013d5c*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6a80] 
    /*00013d60*/ MOV         R1, #15 
    /*00013d64*/ MOV         R0, #3 
    /*00013d68*/ BL          0x0000000000013D68          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013d6c*/ B           VouDispChnDisplay_x138f0
    /*00013d70*/ ANDEQ       R0, R0, R4, LSR #23 
FUNC_END VouDispChnDisplay


FUNC_BEGIN VouGetChnNode
    /*00013d74*/ PUSH        {R4, LR} 
    /*00013d78*/ MOV         R4, R0 
    /*00013d7c*/ ADD         R0, R0, #8960               @ 0x2300 
    /*00013d80*/ ADD         R0, R0, #56                 @ 0x38 
    /*00013d84*/ BL          0x0000000000013D84          @ VouBufQueryBusy [R_ARM_CALL: .text+0x40b0] 
    /*00013d88*/ CMP         R0, #0 
    /*00013d8c*/ LDREQ       R0, [R4, #24] 
    /*00013d90*/ POP         {R4, PC} 
FUNC_END VouGetChnNode


FUNC_BEGIN VouCmpImageResAndChnRect
    /*00013d94*/ CMP         R1, #0 
    /*00013d98*/ PUSH        {R4, LR} 
    /*00013d9c*/ MOV         R4, R3 
    /*00013da0*/ SUB         SP, SP, #8 
    /*00013da4*/ BEQ         VouCmpImageResAndChnRect_x13de4
    /*00013da8*/ LDR         IP, [R1] 
    /*00013dac*/ LDR         R3, [R2, #76]               @ 0x4c 
    /*00013db0*/ CMP         IP, R3 
    /*00013db4*/ BEQ         VouCmpImageResAndChnRect_x13e48
    /*00013db8*/ MOVW        R3, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00013dbc*/ MOVT        R3, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    VouCmpImageResAndChnRect_x13dc0:
    /*00013dc0*/ MOVW        R2, #12192                  @ 0x2fa0 
    /*00013dc4*/ MLA         R3, R2, R0, R3 
    /*00013dc8*/ LDR         R0, [R3, #28] 
    /*00013dcc*/ CMP         R0, #0 
    /*00013dd0*/ STRNE       R0, [SP, #4] 
    /*00013dd4*/ MOVWNE      R3, #1372                   @ 0x55c 
    /*00013dd8*/ BNE         VouCmpImageResAndChnRect_x13e20
    VouCmpImageResAndChnRect_x13ddc:
    /*00013ddc*/ ADD         SP, SP, #8 
    /*00013de0*/ POP         {R4, PC} 
    VouCmpImageResAndChnRect_x13de4:
    /*00013de4*/ MOVW        R3, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00013de8*/ MOVT        R3, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00013dec*/ MOVW        R1, #12192                  @ 0x2fa0 
    /*00013df0*/ LDR         LR, [R2, #76]               @ 0x4c 
    /*00013df4*/ MLA         R1, R1, R0, R3 
    /*00013df8*/ LDR         IP, [R1, #128]              @ 0x80 
    /*00013dfc*/ CMP         LR, IP 
    /*00013e00*/ BEQ         VouCmpImageResAndChnRect_x13ea8
    VouCmpImageResAndChnRect_x13e04:
    /*00013e04*/ MOVW        R2, #12192                  @ 0x2fa0 
    /*00013e08*/ MLA         R3, R2, R0, R3 
    /*00013e0c*/ LDR         R0, [R3, #28] 
    /*00013e10*/ CMP         R0, #0 
    /*00013e14*/ BEQ         VouCmpImageResAndChnRect_x13ddc
    /*00013e18*/ MOV         R3, #1392                   @ 0x570 
    /*00013e1c*/ STR         R0, [SP, #4] 
    VouCmpImageResAndChnRect_x13e20:
    /*00013e20*/ STR         R3, [SP] 
    /*00013e24*/ MOV         R1, #15 
    /*00013e28*/ LDR         R3, [PC, #144]              @ 0x0000000000013ec0 
    /*00013e2c*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6b98] 
    /*00013e30*/ MOV         R0, #7 
    /*00013e34*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6b98] 
    /*00013e38*/ BL          0x0000000000013E38          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013e3c*/ MOV         R0, #0 
    /*00013e40*/ ADD         SP, SP, #8 
    /*00013e44*/ POP         {R4, PC} 
    VouCmpImageResAndChnRect_x13e48:
    /*00013e48*/ LDR         R3, [R2, #80]               @ 0x50 
    /*00013e4c*/ LDR         R1, [R1, #4] 
    /*00013e50*/ CMP         R1, R3 
    /*00013e54*/ MOVW        R3, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00013e58*/ MOVT        R3, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00013e5c*/ BNE         VouCmpImageResAndChnRect_x13dc0
    /*00013e60*/ MOVW        R2, #12192                  @ 0x2fa0 
    /*00013e64*/ MLA         R2, R2, R0, R3 
    /*00013e68*/ LDR         LR, [R2, #128]              @ 0x80 
    /*00013e6c*/ CMP         IP, LR 
    /*00013e70*/ BNE         VouCmpImageResAndChnRect_x13dc0
    /*00013e74*/ LDR         R2, [R2, #132]              @ 0x84 
    /*00013e78*/ CMP         R1, R2 
    /*00013e7c*/ BNE         VouCmpImageResAndChnRect_x13dc0
    /*00013e80*/ MOVW        R3, #1378                   @ 0x562 
    VouCmpImageResAndChnRect_x13e84:
    /*00013e84*/ STR         R3, [SP] 
    /*00013e88*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6c00] 
    /*00013e8c*/ LDR         R3, [PC, #44]               @ 0x0000000000013ec0 
    /*00013e90*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6c00] 
    /*00013e94*/ MOV         R1, #15 
    /*00013e98*/ MOV         R0, #7 
    /*00013e9c*/ BL          0x0000000000013E9C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013ea0*/ MOV         R0, R4 
    /*00013ea4*/ B           VouCmpImageResAndChnRect_x13ddc
    VouCmpImageResAndChnRect_x13ea8:
    /*00013ea8*/ LDR         IP, [R2, #80]               @ 0x50 
    /*00013eac*/ LDR         R2, [R1, #132]              @ 0x84 
    /*00013eb0*/ CMP         IP, R2 
    /*00013eb4*/ BNE         VouCmpImageResAndChnRect_x13e04
    /*00013eb8*/ MOVW        R3, #1398                   @ 0x576 
    /*00013ebc*/ B           VouCmpImageResAndChnRect_x13e84
    /*00013ec0*/ @           <UNDEFINED> instruction: 0x00000bb8 
FUNC_END VouCmpImageResAndChnRect


FUNC_BEGIN VouIsImagePixelFormatConsistent
    /*00013ec4*/ MOVW        R3, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00013ec8*/ MOVT        R3, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00013ecc*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00013ed0*/ MOVW        R7, #12192                  @ 0x2fa0 
    /*00013ed4*/ MLA         R7, R7, R0, R3 
    /*00013ed8*/ LSL         R0, R0, #4 
    /*00013edc*/ SUB         R4, R0, #4 
    /*00013ee0*/ MOVW        R5, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*00013ee4*/ ADD         R0, R0, #12 
    /*00013ee8*/ MOVT        R5, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*00013eec*/ LDR         R9, [PC, #484]              @ 0x00000000000140d8 
    /*00013ef0*/ MOVW        R8, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6c58] 
    /*00013ef4*/ ADD         R4, R4, R5 
    /*00013ef8*/ SUB         SP, SP, #20 
    /*00013efc*/ ADD         R5, R0, R5 
    /*00013f00*/ MOVT        R8, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6c58] 
    /*00013f04*/ MOV         SL, #1 
    VouIsImagePixelFormatConsistent_x13f08:
    /*00013f08*/ LDR         R6, [R4, #4]! 
    /*00013f0c*/ CMP         R6, #0 
    /*00013f10*/ BEQ         VouIsImagePixelFormatConsistent_x13f20
    /*00013f14*/ LDR         R3, [R6, #4] 
    /*00013f18*/ CMP         R3, #1 
    /*00013f1c*/ BEQ         VouIsImagePixelFormatConsistent_x13f58
    VouIsImagePixelFormatConsistent_x13f20:
    /*00013f20*/ CMP         R4, R5 
    /*00013f24*/ BNE         VouIsImagePixelFormatConsistent_x13f08
    /*00013f28*/ MOVW        R3, #1489                   @ 0x5d1 
    /*00013f2c*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d44] 
    /*00013f30*/ STR         R3, [SP] 
    /*00013f34*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d44] 
    /*00013f38*/ STR         SL, [SP, #4] 
    /*00013f3c*/ MOV         R1, #15 
    /*00013f40*/ LDR         R3, [PC, #400]              @ 0x00000000000140d8 
    /*00013f44*/ MOV         R0, #7 
    /*00013f48*/ BL          0x0000000000013F48          @ HI_LOG [R_ARM_CALL: +0x0] 
    VouIsImagePixelFormatConsistent_x13f4c:
    /*00013f4c*/ MOV         R0, SL 
    /*00013f50*/ ADD         SP, SP, #20 
    /*00013f54*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouIsImagePixelFormatConsistent_x13f58:
    /*00013f58*/ LDR         R3, [R6, #16] 
    /*00013f5c*/ CMP         R3, #1 
    /*00013f60*/ BNE         VouIsImagePixelFormatConsistent_x13f20
    /*00013f64*/ ADD         FP, R6, #8960               @ 0x2300 
    /*00013f68*/ ADD         FP, FP, #56                 @ 0x38 
    /*00013f6c*/ MOV         R0, FP 
    /*00013f70*/ BL          0x0000000000013F70          @ VouBufQueryBusy [R_ARM_CALL: .text+0x40b0] 
    /*00013f74*/ SUBS        SL, R0, #0 
    /*00013f78*/ BEQ         VouIsImagePixelFormatConsistent_x14080
    VouIsImagePixelFormatConsistent_x13f7c:
    /*00013f7c*/ LDR         SL, [SL] 
    /*00013f80*/ LDR         R2, [R7, #140]              @ 0x8c 
    /*00013f84*/ LDR         R3, [SL, #12] 
    /*00013f88*/ CMP         R3, R2 
    /*00013f8c*/ BNE         VouIsImagePixelFormatConsistent_x13fa4
    /*00013f90*/ LDR         R1, [SL, #16] 
    /*00013f94*/ SUB         R1, R1, #1 
    /*00013f98*/ CMP         R1, #1 
    /*00013f9c*/ MOVHI       SL, #1 
    /*00013fa0*/ BHI         VouIsImagePixelFormatConsistent_x13f20
    VouIsImagePixelFormatConsistent_x13fa4:
    /*00013fa4*/ STR         R3, [SP, #8] 
    /*00013fa8*/ MOVW        R1, #1450                   @ 0x5aa 
    /*00013fac*/ STR         R2, [SP, #4] 
    /*00013fb0*/ MOV         R3, R9 
    /*00013fb4*/ STR         R1, [SP] 
    /*00013fb8*/ MOV         R2, R8 
    /*00013fbc*/ MOV         R1, #15 
    /*00013fc0*/ MOV         R0, #4 
    /*00013fc4*/ BL          0x0000000000013FC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013fc8*/ LDR         R3, [SL, #16] 
    /*00013fcc*/ MOVW        R1, #1452                   @ 0x5ac 
    /*00013fd0*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6cb8] 
    /*00013fd4*/ STR         R1, [SP] 
    /*00013fd8*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6cb8] 
    /*00013fdc*/ STR         R3, [SP, #4] 
    /*00013fe0*/ MOV         R1, #15 
    /*00013fe4*/ MOV         R3, R9 
    /*00013fe8*/ MOV         R0, #4 
    /*00013fec*/ BL          0x0000000000013FEC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00013ff0*/ MOV         R0, FP 
    /*00013ff4*/ BL          0x0000000000013FF4          @ VouBufIsBusyEmpty [R_ARM_CALL: .text+0x41b0] 
    /*00013ff8*/ CMP         R0, #0 
    /*00013ffc*/ BNE         VouIsImagePixelFormatConsistent_x14078
    /*00014000*/ LDR         R3, [R7, #28] 
    /*00014004*/ CMP         R3, #0 
    /*00014008*/ BNE         VouIsImagePixelFormatConsistent_x14078
    /*0001400c*/ MOV         R0, FP 
    /*00014010*/ BL          0x0000000000014010          @ VouBufGetBusy [R_ARM_CALL: .text+0x3da8] 
    /*00014014*/ SUBS        SL, R0, #0 
    /*00014018*/ BEQ         VouIsImagePixelFormatConsistent_x14038
    /*0001401c*/ LDR         R0, [SL] 
    /*00014020*/ BL          0x0000000000014020          @ VouBufSubBlkVb [R_ARM_CALL: .text+0x4324] 
    /*00014024*/ MOV         R0, SL 
    /*00014028*/ BL          0x0000000000014028          @ VouBufResetNode [R_ARM_CALL: .text+0x3d70] 
    /*0001402c*/ MOV         R1, SL 
    /*00014030*/ MOV         R0, FP 
    /*00014034*/ BL          0x0000000000014034          @ VouBufPutFree [R_ARM_CALL: .text+0x3fd0] 
    VouIsImagePixelFormatConsistent_x14038:
    /*00014038*/ LDR         R3, [R6, #24] 
    /*0001403c*/ CMP         R3, #0 
    /*00014040*/ BEQ         VouIsImagePixelFormatConsistent_x14078
    /*00014044*/ LDR         R0, [R3] 
    /*00014048*/ CMP         R0, #0 
    /*0001404c*/ BEQ         VouIsImagePixelFormatConsistent_x140b0
    VouIsImagePixelFormatConsistent_x14050:
    /*00014050*/ BL          0x0000000000014050          @ VouBufSubBlkVb [R_ARM_CALL: .text+0x4324] 
    /*00014054*/ LDR         R0, [R6, #24] 
    /*00014058*/ BL          0x0000000000014058          @ VouBufResetNode [R_ARM_CALL: .text+0x3d70] 
    /*0001405c*/ MOV         R0, FP 
    /*00014060*/ LDR         R1, [R6, #24] 
    /*00014064*/ BL          0x0000000000014064          @ VouBufPutFree [R_ARM_CALL: .text+0x3fd0] 
    /*00014068*/ MOV         R3, #0 
    /*0001406c*/ MOV         SL, R3 
    /*00014070*/ STR         R3, [R6, #24] 
    /*00014074*/ B           VouIsImagePixelFormatConsistent_x13f20
    VouIsImagePixelFormatConsistent_x14078:
    /*00014078*/ MOV         SL, #0 
    /*0001407c*/ B           VouIsImagePixelFormatConsistent_x13f20
    VouIsImagePixelFormatConsistent_x14080:
    /*00014080*/ LDR         SL, [R6, #24] 
    /*00014084*/ CMP         SL, #0 
    /*00014088*/ BNE         VouIsImagePixelFormatConsistent_x13f7c
    /*0001408c*/ MOVW        R3, #1437                   @ 0x59d 
    /*00014090*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d80] 
    /*00014094*/ STR         R3, [SP] 
    /*00014098*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d80] 
    /*0001409c*/ LDR         R3, [PC, #52]               @ 0x00000000000140d8 
    /*000140a0*/ MOV         R1, #15 
    /*000140a4*/ MOV         R0, #4 
    /*000140a8*/ BL          0x00000000000140A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000140ac*/ B           VouIsImagePixelFormatConsistent_x13f4c
    VouIsImagePixelFormatConsistent_x140b0:
    /*000140b0*/ MOVW        R3, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d1c] 
    /*000140b4*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6784] 
    /*000140b8*/ MOVT        R3, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d1c] 
    /*000140bc*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6784] 
    /*000140c0*/ MOVW        R2, #1478                   @ 0x5c6 
    /*000140c4*/ MOV         R1, R9 
    /*000140c8*/ BL          0x00000000000140C8          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000140cc*/ LDR         R3, [R6, #24] 
    /*000140d0*/ LDR         R0, [R3] 
    /*000140d4*/ B           VouIsImagePixelFormatConsistent_x14050
    /*000140d8*/ LDRDEQ      R0, [R0], -R4 
FUNC_END VouIsImagePixelFormatConsistent


FUNC_BEGIN VouIsOnlyOneChnShow
    /*000140dc*/ LSL         R0, R0, #4 
    /*000140e0*/ MOVW        R2, #0                      @ g_apstVoChn [R_ARM_MOVW_ABS_NC: .bss+0x3090] 
    /*000140e4*/ SUB         R3, R0, #4 
    /*000140e8*/ MOVT        R2, #0                      @ g_apstVoChn [R_ARM_MOVT_ABS: .bss+0x3090] 
    /*000140ec*/ ADD         R0, R0, #12 
    /*000140f0*/ ADD         R3, R3, R2 
    /*000140f4*/ PUSH        {R4, LR} 
    /*000140f8*/ ADD         R0, R0, R2 
    /*000140fc*/ SUB         SP, SP, #8 
    /*00014100*/ MOV         R4, #0 
    VouIsOnlyOneChnShow_x14104:
    /*00014104*/ LDR         R2, [R3, #4]! 
    /*00014108*/ CMP         R2, #0 
    /*0001410c*/ BEQ         VouIsOnlyOneChnShow_x1411c
    /*00014110*/ LDR         R1, [R2, #4] 
    /*00014114*/ CMP         R1, #1 
    /*00014118*/ BEQ         VouIsOnlyOneChnShow_x1415c
    VouIsOnlyOneChnShow_x1411c:
    /*0001411c*/ CMP         R3, R0 
    /*00014120*/ BNE         VouIsOnlyOneChnShow_x14104
    /*00014124*/ STR         R4, [SP, #4] 
    /*00014128*/ MOVW        R3, #1518                   @ 0x5ee 
    /*0001412c*/ MOV         R1, #15 
    /*00014130*/ STR         R3, [SP] 
    /*00014134*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6db4] 
    /*00014138*/ LDR         R3, [PC, #44]               @ 0x000000000001416c 
    /*0001413c*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6db4] 
    /*00014140*/ MOV         R0, #7 
    /*00014144*/ BL          0x0000000000014144          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014148*/ SUB         R0, R4, #1 
    /*0001414c*/ CLZ         R0, R0 
    /*00014150*/ LSR         R0, R0, #5 
    /*00014154*/ ADD         SP, SP, #8 
    /*00014158*/ POP         {R4, PC} 
    VouIsOnlyOneChnShow_x1415c:
    /*0001415c*/ LDR         R2, [R2, #16] 
    /*00014160*/ CMP         R2, #1 
    /*00014164*/ ADDEQ       R4, R4, #1 
    /*00014168*/ B           VouIsOnlyOneChnShow_x1411c
    /*0001416c*/ STRDEQ      R0, [R0], -R4 
FUNC_END VouIsOnlyOneChnShow


FUNC_BEGIN VouGetVgsBypassMode
    /*00014170*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00014174*/ SUB         SP, SP, #12 
    /*00014178*/ MOV         R4, R0 
    /*0001417c*/ BL          0x000000000001417C          @ VOU_DRV_IsChipSupportVgsBypassMode [R_ARM_CALL: .text+0x1942c] 
    /*00014180*/ CMP         R0, #0 
    /*00014184*/ BNE         VouGetVgsBypassMode_x14198
    VouGetVgsBypassMode_x14188:
    /*00014188*/ MOV         SL, #0 
    VouGetVgsBypassMode_x1418c:
    /*0001418c*/ MOV         R0, SL 
    /*00014190*/ ADD         SP, SP, #12 
    /*00014194*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VouGetVgsBypassMode_x14198:
    /*00014198*/ MOV         R0, R4 
    /*0001419c*/ BL          0x000000000001419C          @ VouIsOnlyOneChnShow [R_ARM_CALL: .text+0x140dc] 
    /*000141a0*/ CMP         R0, #0 
    /*000141a4*/ BEQ         VouGetVgsBypassMode_x14188
    /*000141a8*/ MOV         R0, R4 
    /*000141ac*/ BL          0x00000000000141AC          @ VouIsImagePixelFormatConsistent [R_ARM_CALL: .text+0x13ec4] 
    /*000141b0*/ CMP         R0, #0 
    /*000141b4*/ BEQ         VouGetVgsBypassMode_x14188
    /*000141b8*/ LDR         R7, [PC, #316]              @ 0x00000000000142fc 
    /*000141bc*/ MOVW        R8, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6d80] 
    /*000141c0*/ MOVT        R8, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6d80] 
    /*000141c4*/ MOV         SL, #1 
    /*000141c8*/ ADD         R7, R7, R4, LSL #4 
    /*000141cc*/ MOV         R6, #0 
    /*000141d0*/ MOVW        R9, #9016                   @ 0x2338 
    VouGetVgsBypassMode_x141d4:
    /*000141d4*/ LDR         R5, [R7, #4]! 
    /*000141d8*/ CMP         R5, #0 
    /*000141dc*/ BEQ         VouGetVgsBypassMode_x141ec
    /*000141e0*/ LDR         R3, [R5, #4] 
    /*000141e4*/ CMP         R3, #1 
    /*000141e8*/ BEQ         VouGetVgsBypassMode_x141fc
    VouGetVgsBypassMode_x141ec:
    /*000141ec*/ ADD         R6, R6, #1 
    /*000141f0*/ CMP         R6, #4 
    /*000141f4*/ BNE         VouGetVgsBypassMode_x141d4
    /*000141f8*/ B           VouGetVgsBypassMode_x1418c
    VouGetVgsBypassMode_x141fc:
    /*000141fc*/ LDR         R3, [R5, #16] 
    /*00014200*/ CMP         R3, #1 
    /*00014204*/ BNE         VouGetVgsBypassMode_x141ec
    /*00014208*/ LDR         SL, [R5, #84]               @ 0x54 
    /*0001420c*/ CMP         SL, #0 
    /*00014210*/ MOVNE       SL, #0 
    /*00014214*/ BNE         VouGetVgsBypassMode_x14240
    /*00014218*/ LDR         R3, [R5, #1120]             @ 0x460 
    /*0001421c*/ CMP         R3, #0 
    /*00014220*/ BNE         VouGetVgsBypassMode_x14240
    /*00014224*/ LDR         SL, [R5, #256]              @ 0x100 
    /*00014228*/ CMP         SL, #0 
    /*0001422c*/ MOVNE       SL, R3 
    /*00014230*/ BNE         VouGetVgsBypassMode_x14240
    /*00014234*/ LDR         R3, [R5, #92]               @ 0x5c 
    /*00014238*/ CMP         R3, #0 
    /*0001423c*/ BEQ         VouGetVgsBypassMode_x142d0
    VouGetVgsBypassMode_x14240:
    /*00014240*/ ADD         R0, R5, R9 
    /*00014244*/ BL          0x0000000000014244          @ VouBufQueryBusy [R_ARM_CALL: .text+0x40b0] 
    /*00014248*/ SUBS        FP, R0, #0 
    /*0001424c*/ BEQ         VouGetVgsBypassMode_x1428c
    VouGetVgsBypassMode_x14250:
    /*00014250*/ LDR         FP, [FP] 
    /*00014254*/ MOV         R3, SL 
    /*00014258*/ MOV         R2, R5 
    /*0001425c*/ MOV         R0, R4 
    /*00014260*/ MOV         R1, FP 
    /*00014264*/ BL          0x0000000000014264          @ VouCmpImageResAndChnRect [R_ARM_CALL: .text+0x13d94] 
    /*00014268*/ LDR         R3, [FP, #20] 
    /*0001426c*/ CMP         R3, #0 
    /*00014270*/ MOV         SL, R0 
    /*00014274*/ BEQ         VouGetVgsBypassMode_x141ec
    /*00014278*/ MOV         R0, R4 
    /*0001427c*/ BL          0x000000000001427C          @ VO_DRV_IsLayerSupportDecompress [R_ARM_CALL: .text+0x18554] 
    /*00014280*/ CMP         R0, #0 
    /*00014284*/ MOVEQ       SL, #0 
    /*00014288*/ B           VouGetVgsBypassMode_x141ec
    VouGetVgsBypassMode_x1428c:
    /*0001428c*/ LDR         FP, [R5, #24] 
    /*00014290*/ CMP         FP, #0 
    /*00014294*/ BNE         VouGetVgsBypassMode_x14250
    /*00014298*/ MOVW        R2, #1578                   @ 0x62a 
    /*0001429c*/ LDR         R3, [PC, #92]               @ 0x0000000000014300 
    /*000142a0*/ STR         R2, [SP] 
    /*000142a4*/ MOV         R1, #15 
    /*000142a8*/ MOV         R2, R8 
    /*000142ac*/ MOV         R0, #4 
    /*000142b0*/ BL          0x00000000000142B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000142b4*/ MOV         R3, SL 
    /*000142b8*/ MOV         R2, R5 
    /*000142bc*/ MOV         R1, FP 
    /*000142c0*/ MOV         R0, R4 
    /*000142c4*/ BL          0x00000000000142C4          @ VouCmpImageResAndChnRect [R_ARM_CALL: .text+0x13d94] 
    /*000142c8*/ MOV         SL, R0 
    /*000142cc*/ B           VouGetVgsBypassMode_x141ec
    VouGetVgsBypassMode_x142d0:
    /*000142d0*/ MOV         R1, R6 
    /*000142d4*/ MOV         R0, R4 
    /*000142d8*/ BL          0x00000000000142D8          @ VouGetOsdEnableFlag [R_ARM_CALL: .text+0x11da0] 
    /*000142dc*/ MOV         R1, R6 
    /*000142e0*/ MOV         SL, R0 
    /*000142e4*/ MOV         R0, R4 
    /*000142e8*/ BL          0x00000000000142E8          @ VouGetCoverEnableFlag [R_ARM_CALL: .text+0x11e20] 
    /*000142ec*/ ORRS        R3, SL, R0 
    /*000142f0*/ MOVEQ       SL, #1 
    /*000142f4*/ MOVNE       SL, #0 
    /*000142f8*/ B           VouGetVgsBypassMode_x14240
    /*000142fc*/ @           <UNDEFINED> instruction: 0xfffffffc @ g_apstVoChn [R_ARM_ABS32: .bss+0x3090] 
    /*00014300*/ ANDEQ       R0, R0, R8, LSL #24 
FUNC_END VouGetVgsBypassMode


FUNC_BEGIN VouIsLayerWorking
    /*00014304*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00014308*/ MUL         R3, R3, R0 
    /*0001430c*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00014310*/ MOVW        R6, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*00014314*/ MOVT        R6, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*00014318*/ SUB         SP, SP, #8 
    /*0001431c*/ ADD         R2, R6, R3 
    /*00014320*/ LDR         R3, [R6, R3] 
    /*00014324*/ CMP         R3, #1 
    /*00014328*/ BEQ         VouIsLayerWorking_x1434c
    VouIsLayerWorking_x1432c:
    /*0001432c*/ MOV         R5, R0 
    /*00014330*/ BL          0x0000000000014330          @ VOU_DRV_GetLayerEnable [R_ARM_CALL: .text+0x17568] 
    /*00014334*/ CMP         R0, #1 
    /*00014338*/ MOVNE       R3, #0 
    /*0001433c*/ BEQ         VouIsLayerWorking_x1435c
    VouIsLayerWorking_x14340:
    /*00014340*/ MOV         R0, R3 
    /*00014344*/ ADD         SP, SP, #8 
    /*00014348*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouIsLayerWorking_x1434c:
    /*0001434c*/ LDR         R2, [R2, #208]              @ 0xd0 
    /*00014350*/ CMP         R2, #0 
    /*00014354*/ BEQ         VouIsLayerWorking_x1432c
    /*00014358*/ B           VouIsLayerWorking_x14340
    VouIsLayerWorking_x1435c:
    /*0001435c*/ MOVW        R4, #12192                  @ 0x2fa0 
    /*00014360*/ MUL         R4, R4, R5 
    /*00014364*/ ADD         R2, R6, R4 
    /*00014368*/ LDR         R3, [R2, #180]              @ 0xb4 
    /*0001436c*/ CMP         R3, #0 
    /*00014370*/ BNE         VouIsLayerWorking_x14480
    /*00014374*/ LDR         R7, [R2, #220]              @ 0xdc 
    /*00014378*/ CMP         R7, #0 
    /*0001437c*/ BNE         VouIsLayerWorking_x14340
    /*00014380*/ ADD         R4, R4, #11840              @ 0x2e40 
    /*00014384*/ ADD         R1, SP, #4 
    /*00014388*/ ADD         R4, R4, #20 
    /*0001438c*/ ADD         R4, R6, R4 
    /*00014390*/ MOV         R0, R4 
    /*00014394*/ BL          0x0000000000014394          @ VouBufGetBusyLen [R_ARM_CALL: .text+0x41e0] 
    /*00014398*/ LDR         R3, [SP, #4] 
    /*0001439c*/ CMP         R3, #0 
    /*000143a0*/ BEQ         VouIsLayerWorking_x143d4
    VouIsLayerWorking_x143a4:
    /*000143a4*/ MOV         R0, R4 
    /*000143a8*/ ADD         R7, R7, #1 
    /*000143ac*/ BL          0x00000000000143AC          @ VouBufGetBusy [R_ARM_CALL: .text+0x3da8] 
    /*000143b0*/ SUBS        R8, R0, #0 
    /*000143b4*/ BEQ         VouIsLayerWorking_x143c8
    /*000143b8*/ BL          0x00000000000143B8          @ VouBufClearDispNode [R_ARM_CALL: .text+0x4848] 
    /*000143bc*/ MOV         R1, R8 
    /*000143c0*/ MOV         R0, R4 
    /*000143c4*/ BL          0x00000000000143C4          @ VouBufPutFree [R_ARM_CALL: .text+0x3fd0] 
    VouIsLayerWorking_x143c8:
    /*000143c8*/ LDR         R3, [SP, #4] 
    /*000143cc*/ CMP         R7, R3 
    /*000143d0*/ BCC         VouIsLayerWorking_x143a4
    VouIsLayerWorking_x143d4:
    /*000143d4*/ MOVW        R7, #12192                  @ 0x2fa0 
    /*000143d8*/ MLA         R7, R7, R5, R6 
    /*000143dc*/ LDR         R0, [R7, #264]              @ 0x108 
    /*000143e0*/ CMP         R0, #0 
    /*000143e4*/ BEQ         VouIsLayerWorking_x14400
    /*000143e8*/ BL          0x00000000000143E8          @ VouBufClearDispNode [R_ARM_CALL: .text+0x4848] 
    /*000143ec*/ LDR         R1, [R7, #264]              @ 0x108 
    /*000143f0*/ MOV         R0, R4 
    /*000143f4*/ BL          0x00000000000143F4          @ VouBufPutFree [R_ARM_CALL: .text+0x3fd0] 
    /*000143f8*/ MOV         R3, #0 
    /*000143fc*/ STR         R3, [R7, #264]              @ 0x108 
    VouIsLayerWorking_x14400:
    /*00014400*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00014404*/ MLA         R6, R3, R5, R6 
    /*00014408*/ LDR         R0, [R6, #272]              @ 0x110 
    /*0001440c*/ CMP         R0, #0 
    /*00014410*/ BEQ         VouIsLayerWorking_x1442c
    /*00014414*/ BL          0x0000000000014414          @ VouBufClearDispNode [R_ARM_CALL: .text+0x4848] 
    /*00014418*/ MOV         R0, R4 
    /*0001441c*/ LDR         R1, [R6, #272]              @ 0x110 
    /*00014420*/ BL          0x0000000000014420          @ VouBufPutFree [R_ARM_CALL: .text+0x3fd0] 
    /*00014424*/ MOV         R3, #0 
    /*00014428*/ STR         R3, [R6, #272]              @ 0x110 
    VouIsLayerWorking_x1442c:
    /*0001442c*/ MOV         R0, R5 
    /*00014430*/ BL          0x0000000000014430          @ VOU_DRV_DisableAllArea [R_ARM_CALL: .text+0x17950] 
    /*00014434*/ MOV         R3, #0 
    /*00014438*/ MOV         R2, R3 
    /*0001443c*/ MOV         R1, R3 
    /*00014440*/ MOV         R0, R5 
    /*00014444*/ BL          0x0000000000014444          @ HAL_VIDEO_SetMultiAreaLAddr [R_ARM_CALL: .text+0x1c8fc] 
    /*00014448*/ MOV         R3, #0 
    /*0001444c*/ MOV         R2, R3 
    /*00014450*/ MOV         R1, R3 
    /*00014454*/ MOV         R0, R5 
    /*00014458*/ BL          0x0000000000014458          @ HAL_VIDEO_SetMultiAreaCAddr [R_ARM_CALL: .text+0x1ca04] 
    VouIsLayerWorking_x1445c:
    /*0001445c*/ MOV         R1, #0 
    /*00014460*/ MOV         R0, R5 
    /*00014464*/ BL          0x0000000000014464          @ VOU_DRV_LayerEnable [R_ARM_CALL: .text+0x17548] 
    /*00014468*/ MOV         R0, R5 
    /*0001446c*/ BL          0x000000000001446C          @ VOU_DRV_SetLayerRegUp [R_ARM_CALL: .text+0x182d4] 
    /*00014470*/ MOV         R3, #0 
    /*00014474*/ MOV         R0, R3 
    /*00014478*/ ADD         SP, SP, #8 
    /*0001447c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VouIsLayerWorking_x14480:
    /*00014480*/ MOV         R0, R5 
    /*00014484*/ BL          0x0000000000014484          @ VOU_DRV_DisableAllArea [R_ARM_CALL: .text+0x17950] 
    /*00014488*/ B           VouIsLayerWorking_x1445c
FUNC_END VouIsLayerWorking


FUNC_BEGIN VouDisableVideoOfOneArea
    /*0001448c*/ PUSH        {R4, LR} 
    /*00014490*/ MOV         R4, R0 
    /*00014494*/ BL          0x0000000000014494          @ VOU_DRV_IsVideoOfOneArea [R_ARM_CALL: .text+0x19544] 
    /*00014498*/ CMP         R0, #0 
    /*0001449c*/ POPEQ       {R4, PC} 
    /*000144a0*/ MOV         R0, R4 
    /*000144a4*/ BL          0x00000000000144A4          @ VOU_DRV_GetLayerEnable [R_ARM_CALL: .text+0x17568] 
    /*000144a8*/ CMP         R0, #1 
    /*000144ac*/ POPNE       {R4, PC} 
    /*000144b0*/ MOV         R0, R4 
    /*000144b4*/ BL          0x00000000000144B4          @ VOU_DRV_DisableAllArea [R_ARM_CALL: .text+0x17950] 
    /*000144b8*/ MOV         R0, R4 
    /*000144bc*/ MOV         R1, #0 
    /*000144c0*/ POP         {R4, LR} 
    VouDisableVideoOfOneArea_x144c4:
    /*000144c4*/ B           VouDisableVideoOfOneArea_x144c4@ VOU_DRV_LayerEnable [R_ARM_JUMP24: .text+0x17548] 
FUNC_END VouDisableVideoOfOneArea


FUNC_BEGIN VouDispProcess
    /*000144c8*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000144cc*/ SUB         SP, SP, #36                 @ 0x24 
    /*000144d0*/ ADD         R1, SP, #32 
    /*000144d4*/ MOV         R5, R0 
    /*000144d8*/ MOV         R3, #2 
    /*000144dc*/ STR         R3, [R1, #-4]! 
    /*000144e0*/ MOV         R3, #0 
    /*000144e4*/ STR         R3, [SP, #16] 
    /*000144e8*/ STR         R3, [SP, #20] 
    /*000144ec*/ STR         R3, [SP, #24] 
    /*000144f0*/ BL          0x00000000000144F0          @ VOU_DRV_IntGetMode [R_ARM_CALL: .text+0x1714c] 
    /*000144f4*/ MOV         R0, R5 
    /*000144f8*/ ADD         R1, SP, #24 
    /*000144fc*/ BL          0x00000000000144FC          @ VOU_DRV_GetDevIntState [R_ARM_CALL: .text+0x16988] 
    /*00014500*/ MOV         R0, R5 
    /*00014504*/ BL          0x0000000000014504          @ VO_DRV_IsPhyDevHD [R_ARM_CALL: .text+0x1858c] 
    /*00014508*/ CMP         R0, #1 
    /*0001450c*/ BEQ         VouDispProcess_x14548
    /*00014510*/ MOV         R0, R5 
    /*00014514*/ BL          0x0000000000014514          @ VO_DRV_IsPhyDevSD [R_ARM_CALL: .text+0x185b0] 
    /*00014518*/ CMP         R0, #1 
    /*0001451c*/ BEQ         VouDispProcess_x14548
    VouDispProcess_x14520:
    /*00014520*/ MOV         R0, R5 
    /*00014524*/ BL          0x0000000000014524          @ VOU_DRV_IsDevSupportLoadDetect [R_ARM_CALL: .text+0x185dc] 
    /*00014528*/ CMP         R0, #0 
    /*0001452c*/ BNE         VouDispProcess_x14570
    VouDispProcess_x14530:
    /*00014530*/ MOV         R0, R5 
    /*00014534*/ BL          0x0000000000014534          @ VOU_DRV_GetDevLayerNum [R_ARM_CALL: .text+0x19230] 
    /*00014538*/ CMP         R0, #0 
    /*0001453c*/ BNE         VouDispProcess_x145c8
    VouDispProcess_x14540:
    /*00014540*/ ADD         SP, SP, #36                 @ 0x24 
    /*00014544*/ POP         {R4, R5, R6, R7, PC} 
    VouDispProcess_x14548:
    /*00014548*/ LDR         R3, [SP, #28] 
    /*0001454c*/ CMP         R3, #1 
    /*00014550*/ BNE         VouDispProcess_x14520
    /*00014554*/ LDR         R3, [SP, #24] 
    /*00014558*/ CMP         R3, #0 
    /*0001455c*/ BEQ         VouDispProcess_x14540
    /*00014560*/ MOV         R0, R5 
    /*00014564*/ BL          0x0000000000014564          @ VOU_DRV_IsDevSupportLoadDetect [R_ARM_CALL: .text+0x185dc] 
    /*00014568*/ CMP         R0, #0 
    /*0001456c*/ BEQ         VouDispProcess_x14530
    VouDispProcess_x14570:
    /*00014570*/ MOVW        R6, #0                      @ g_astVoDev [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*00014574*/ MOVT        R6, #0                      @ g_astVoDev [R_ARM_MOVT_ABS: .bss+0x8] 
    /*00014578*/ MOV         R4, #232                    @ 0xe8 
    /*0001457c*/ MLA         R4, R4, R5, R6 
    /*00014580*/ LDR         R3, [R4, #108]              @ 0x6c 
    /*00014584*/ CMP         R3, #0 
    /*00014588*/ BEQ         VouDispProcess_x14530
    /*0001458c*/ LDR         R3, [R4, #112]              @ 0x70 
    /*00014590*/ LDR         R2, [R4, #116]              @ 0x74 
    /*00014594*/ CMP         R3, R2 
    /*00014598*/ BEQ         VouDispProcess_x1487c
    /*0001459c*/ SUB         R2, R2, #2 
    /*000145a0*/ CMP         R3, R2 
    /*000145a4*/ BEQ         VouDispProcess_x1488c
    VouDispProcess_x145a8:
    /*000145a8*/ MOV         R2, #232                    @ 0xe8 
    /*000145ac*/ SUB         R3, R3, #1 
    /*000145b0*/ MLA         R6, R2, R5, R6 
    /*000145b4*/ CMP         R3, #0 
    /*000145b8*/ STR         R3, [R6, #112]              @ 0x70 
    /*000145bc*/ LDREQ       R3, [R6, #116]              @ 0x74 
    /*000145c0*/ STREQ       R3, [R6, #112]              @ 0x70 
    /*000145c4*/ B           VouDispProcess_x14530
    VouDispProcess_x145c8:
    /*000145c8*/ ADD         R1, SP, #20 
    /*000145cc*/ MOV         R0, R5 
    /*000145d0*/ BL          0x00000000000145D0          @ VOU_DRV_GetDevLayer [R_ARM_CALL: .text+0x19248] 
    /*000145d4*/ LDR         R0, [SP, #20] 
    /*000145d8*/ BL          0x00000000000145D8          @ VouIsLayerWorking [R_ARM_CALL: .text+0x14304] 
    /*000145dc*/ CMP         R0, #0 
    /*000145e0*/ BEQ         VouDispProcess_x14540
    /*000145e4*/ LDR         R3, [SP, #20] 
    /*000145e8*/ MOVW        R4, #0                      @ g_astVoLayer [R_ARM_MOVW_ABS_NC: .bss+0xf0] 
    /*000145ec*/ MOVT        R4, #0                      @ g_astVoLayer [R_ARM_MOVT_ABS: .bss+0xf0] 
    /*000145f0*/ MOVW        R2, #12192                  @ 0x2fa0 
    /*000145f4*/ MLA         R3, R2, R3, R4 
    /*000145f8*/ LDR         R2, [R3, #52]               @ 0x34 
    /*000145fc*/ LDR         R0, [R3, #48]               @ 0x30 
    /*00014600*/ LDR         R1, [R3, #44]               @ 0x2c 
    /*00014604*/ ADD         R2, R2, R0 
    /*00014608*/ MOV         R0, #7 
    /*0001460c*/ CMP         R2, R1 
    /*00014610*/ STR         R2, [R3, #52]               @ 0x34 
    /*00014614*/ SUBCS       R2, R2, R1 
    /*00014618*/ STRCS       R2, [R3, #52]               @ 0x34 
    /*0001461c*/ MOVWCS      R1, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6df0] 
    /*00014620*/ MOVWCC      R1, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6df8] 
    /*00014624*/ MOVTCS      R1, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6df0] 
    /*00014628*/ MOVTCC      R1, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6df8] 
    /*0001462c*/ MOVW        R3, #1906                   @ 0x772 
    /*00014630*/ STR         R1, [SP, #8] 
    /*00014634*/ STR         R5, [SP, #4] 
    /*00014638*/ MOV         R1, #15 
    /*0001463c*/ STR         R3, [SP] 
    /*00014640*/ MOVW        R2, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e00] 
    /*00014644*/ LDR         R3, [PC, #616]              @ 0x00000000000148b4 
    /*00014648*/ MOVT        R2, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e00] 
    /*0001464c*/ MOVCS       R6, #1 
    /*00014650*/ MOVCC       R6, #0 
    /*00014654*/ BL          0x0000000000014654          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014658*/ LDR         R5, [SP, #20] 
    /*0001465c*/ MOV         R0, R5 
    /*00014660*/ BL          0x0000000000014660          @ VouDispLayerDisplay [R_ARM_CALL: .text+0x12f88] 
    /*00014664*/ LDR         R0, [SP, #20] 
    /*00014668*/ BL          0x0000000000014668          @ VO_DRV_GetVDcmpState [R_ARM_CALL: .text+0x17ad4] 
    /*0001466c*/ CMP         R0, #0 
    /*00014670*/ BEQ         VouDispProcess_x1480c
    VouDispProcess_x14674:
    /*00014674*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00014678*/ MUL         R3, R3, R5 
    /*0001467c*/ ADD         R7, R4, R3 
    /*00014680*/ LDR         R3, [R4, R3] 
    /*00014684*/ CMP         R3, #0 
    /*00014688*/ BEQ         VouDispProcess_x14540
    /*0001468c*/ LDR         R3, [R7, #208]              @ 0xd0 
    /*00014690*/ CMP         R3, #0 
    /*00014694*/ BEQ         VouDispProcess_x14540
    /*00014698*/ LDR         R0, [SP, #20] 
    /*0001469c*/ BL          0x000000000001469C          @ VouGetVgsBypassMode [R_ARM_CALL: .text+0x14170] 
    /*000146a0*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6df0] 
    /*000146a4*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6df0] 
    /*000146a8*/ MOVW        R1, #2027                   @ 0x7eb 
    /*000146ac*/ MOVW        R3, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6df8] 
    /*000146b0*/ STR         R1, [SP] 
    /*000146b4*/ MOVT        R3, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6df8] 
    /*000146b8*/ MOV         R1, #15 
    /*000146bc*/ MOV         IP, R0 
    /*000146c0*/ LDR         R0, [SP, #20] 
    /*000146c4*/ CMP         IP, #1 
    /*000146c8*/ MOVEQ       R3, R2 
    /*000146cc*/ MOVW        R2, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e70] 
    /*000146d0*/ STMIB       SP, {R0, R3} 
    /*000146d4*/ MOVT        R2, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e70] 
    /*000146d8*/ LDR         R3, [PC, #468]              @ 0x00000000000148b4 
    /*000146dc*/ MOV         R0, #7 
    /*000146e0*/ STR         IP, [R7, #60]               @ 0x3c 
    /*000146e4*/ BL          0x00000000000146E4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000146e8*/ CMP         R6, #0 
    /*000146ec*/ BEQ         VouDispProcess_x14708
    /*000146f0*/ LDR         R3, [R7, #60]               @ 0x3c 
    /*000146f4*/ CMP         R3, #0 
    /*000146f8*/ BNE         VouDispProcess_x14800
    /*000146fc*/ LDR         R7, [R7, #28] 
    /*00014700*/ CMP         R7, #0 
    /*00014704*/ BEQ         VouDispProcess_x14838
    VouDispProcess_x14708:
    /*00014708*/ ADD         R3, SP, #16 
    /*0001470c*/ MOV         R2, R6 
    /*00014710*/ MOV         R1, #0 
    /*00014714*/ LDR         R0, [SP, #20] 
    /*00014718*/ BL          0x0000000000014718          @ VouDispGetValidData [R_ARM_CALL: .text+0x12b28] 
    /*0001471c*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00014720*/ MLA         R3, R3, R5, R4 
    /*00014724*/ LDR         R2, [R3, #60]               @ 0x3c 
    /*00014728*/ CMP         R2, #0 
    /*0001472c*/ BEQ         VouDispProcess_x14740
    /*00014730*/ MOVW        R2, #12176                  @ 0x2f90 
    /*00014734*/ LDR         R3, [R3, R2] 
    /*00014738*/ CMP         R3, #0 
    /*0001473c*/ BNE         VouDispProcess_x147b0
    VouDispProcess_x14740:
    /*00014740*/ LDR         R3, [SP, #16] 
    /*00014744*/ CMP         R3, #0 
    /*00014748*/ BEQ         VouDispProcess_x147b0
    /*0001474c*/ MOVW        R3, #2060                   @ 0x80c 
    /*00014750*/ MOV         R1, #15 
    /*00014754*/ STR         R3, [SP] 
    /*00014758*/ MOVW        R2, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6ef4] 
    /*0001475c*/ LDR         R3, [PC, #336]              @ 0x00000000000148b4 
    /*00014760*/ MOVT        R2, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6ef4] 
    /*00014764*/ MOV         R0, #7 
    /*00014768*/ BL          0x0000000000014768          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001476c*/ LDR         R2, [SP, #16] 
    /*00014770*/ MOV         R1, #0 
    /*00014774*/ LDR         R0, [SP, #20] 
    /*00014778*/ BL          0x0000000000014778          @ VouDispChnDisplay [R_ARM_CALL: .text+0x13714] 
    VouDispProcess_x1477c:
    /*0001477c*/ LDR         R0, [SP, #20] 
    /*00014780*/ BL          0x0000000000014780          @ VOU_DRV_SetLayerRegUp [R_ARM_CALL: .text+0x182d4] 
    /*00014784*/ CMP         R6, #1 
    /*00014788*/ BNE         VouDispProcess_x14540
    /*0001478c*/ MOVW        R3, #12192                  @ 0x2fa0 
    /*00014790*/ MLA         R4, R3, R5, R4 
    /*00014794*/ LDR         R3, [R4, #60]               @ 0x3c 
    /*00014798*/ CMP         R3, #0 
    /*0001479c*/ BNE         VouDispProcess_x14540
    /*000147a0*/ LDR         R0, [SP, #20] 
    /*000147a4*/ BL          0x00000000000147A4          @ VouChnVgsProcess [R_ARM_CALL: .text+0x11ea0] 
    /*000147a8*/ ADD         SP, SP, #36                 @ 0x24 
    /*000147ac*/ POP         {R4, R5, R6, R7, PC} 
    VouDispProcess_x147b0:
    /*000147b0*/ MOV         R1, #15 
    /*000147b4*/ MOVW        R3, #2072                   @ 0x818 
    /*000147b8*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6f30] 
    /*000147bc*/ STR         R3, [SP] 
    /*000147c0*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6f30] 
    /*000147c4*/ LDR         R3, [PC, #232]              @ 0x00000000000148b4 
    /*000147c8*/ MOV         R0, #7 
    /*000147cc*/ BL          0x00000000000147CC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000147d0*/ LDR         R0, [SP, #20] 
    /*000147d4*/ BL          0x00000000000147D4          @ VouDisableVideoOfOneArea [R_ARM_CALL: .text+0x1448c] 
    /*000147d8*/ LDR         R0, [SP, #20] 
    /*000147dc*/ BL          0x00000000000147DC          @ VOU_DRV_GetLayerEnable [R_ARM_CALL: .text+0x17568] 
    /*000147e0*/ CMP         R0, #1 
    /*000147e4*/ BNE         VouDispProcess_x1477c
    /*000147e8*/ LDR         R0, [SP, #20] 
    /*000147ec*/ BL          0x00000000000147EC          @ VOU_DRV_DisableAllArea [R_ARM_CALL: .text+0x17950] 
    /*000147f0*/ MOV         R1, #0 
    /*000147f4*/ LDR         R0, [SP, #20] 
    /*000147f8*/ BL          0x00000000000147F8          @ VOU_DRV_LayerEnable [R_ARM_CALL: .text+0x17548] 
    /*000147fc*/ B           VouDispProcess_x1477c
    VouDispProcess_x14800:
    /*00014800*/ LDR         R0, [SP, #20] 
    /*00014804*/ BL          0x0000000000014804          @ VouChnVgsBypassProcess [R_ARM_CALL: .text+0x12458] 
    /*00014808*/ B           VouDispProcess_x14708
    VouDispProcess_x1480c:
    /*0001480c*/ LDR         R1, [SP, #20] 
    /*00014810*/ MOVW        R3, #1928                   @ 0x788 
    /*00014814*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6e30] 
    /*00014818*/ STR         R3, [SP] 
    /*0001481c*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6e30] 
    /*00014820*/ LDR         R3, [PC, #140]              @ 0x00000000000148b4 
    /*00014824*/ STR         R1, [SP, #4] 
    /*00014828*/ MOV         R0, #3 
    /*0001482c*/ MOV         R1, #15 
    /*00014830*/ BL          0x0000000000014830          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014834*/ B           VouDispProcess_x14674
    VouDispProcess_x14838:
    /*00014838*/ MOV         R1, #15 
    /*0001483c*/ MOVW        R3, #2031                   @ 0x7ef 
    /*00014840*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6ea8] 
    /*00014844*/ STR         R3, [SP] 
    /*00014848*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6ea8] 
    /*0001484c*/ LDR         R3, [PC, #96]               @ 0x00000000000148b4 
    /*00014850*/ MOV         R0, #4 
    /*00014854*/ BL          0x0000000000014854          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014858*/ LDR         R0, [SP, #20] 
    /*0001485c*/ BL          0x000000000001485C          @ VouDisableVideoOfOneArea [R_ARM_CALL: .text+0x1448c] 
    /*00014860*/ LDR         R0, [SP, #20] 
    /*00014864*/ BL          0x0000000000014864          @ VOU_DRV_GetLayerEnable [R_ARM_CALL: .text+0x17568] 
    /*00014868*/ CMP         R0, #1 
    /*0001486c*/ BEQ         VouDispProcess_x1489c
    VouDispProcess_x14870:
    /*00014870*/ LDR         R0, [SP, #20] 
    /*00014874*/ BL          0x0000000000014874          @ VOU_DRV_SetLayerRegUp [R_ARM_CALL: .text+0x182d4] 
    /*00014878*/ B           VouDispProcess_x14540
    VouDispProcess_x1487c:
    /*0001487c*/ MOV         R0, R5 
    /*00014880*/ BL          0x0000000000014880          @ VOU_DRV_EnableLoadDetect [R_ARM_CALL: .text+0x185fc] 
    /*00014884*/ LDR         R3, [R4, #112]              @ 0x70 
    /*00014888*/ B           VouDispProcess_x145a8
    VouDispProcess_x1488c:
    /*0001488c*/ MOV         R0, R5 
    /*00014890*/ BL          0x0000000000014890          @ VOU_DRV_DisableLoadDetect [R_ARM_CALL: .text+0x18604] 
    /*00014894*/ LDR         R3, [R4, #112]              @ 0x70 
    /*00014898*/ B           VouDispProcess_x145a8
    VouDispProcess_x1489c:
    /*0001489c*/ LDR         R0, [SP, #20] 
    /*000148a0*/ BL          0x00000000000148A0          @ VOU_DRV_DisableAllArea [R_ARM_CALL: .text+0x17950] 
    /*000148a4*/ MOV         R1, R7 
    /*000148a8*/ LDR         R0, [SP, #20] 
    /*000148ac*/ BL          0x00000000000148AC          @ VOU_DRV_LayerEnable [R_ARM_CALL: .text+0x17548] 
    /*000148b0*/ B           VouDispProcess_x14870
    /*000148b4*/ ANDEQ       R0, R0, IP, LSL IP 
FUNC_END VouDispProcess


FUNC_BEGIN VOU_GetGfxDcmpPixel
    /*000148b8*/ CMP         R0, #73                     @ 0x49 
    /*000148bc*/ BEQ         VOU_GetGfxDcmpPixel_x14920
    /*000148c0*/ CMP         R0, #104                    @ 0x68 
    /*000148c4*/ BEQ         VOU_GetGfxDcmpPixel_x14920
    /*000148c8*/ CMP         R0, #72                     @ 0x48 
    /*000148cc*/ BEQ         VOU_GetGfxDcmpPixel_x14920
    /*000148d0*/ PUSH        {R4, LR} 
    /*000148d4*/ SUB         SP, SP, #8 
    /*000148d8*/ MOV         R4, R0 
    /*000148dc*/ MOV         R2, #32 
    /*000148e0*/ MOV         R1, #15 
    /*000148e4*/ STR         R2, [SP] 
    /*000148e8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xc2c] 
    /*000148ec*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6f64] 
    /*000148f0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xc2c] 
    /*000148f4*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6f64] 
    /*000148f8*/ MOV         R0, #3 
    /*000148fc*/ BL          0x00000000000148FC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014900*/ MOV         R3, R4 
    /*00014904*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6f80] 
    /*00014908*/ MOV         R1, #15 
    /*0001490c*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6f80] 
    /*00014910*/ MOV         R0, #3 
    /*00014914*/ ADD         SP, SP, #8 
    /*00014918*/ POP         {R4, LR} 
    VOU_GetGfxDcmpPixel_x1491c:
    /*0001491c*/ B           VOU_GetGfxDcmpPixel_x1491c  @ HI_LOG [R_ARM_JUMP24: +0x0] 
    VOU_GetGfxDcmpPixel_x14920:
    /*00014920*/ STR         R0, [R1] 
    /*00014924*/ BX          LR 
FUNC_END VOU_GetGfxDcmpPixel


FUNC_BEGIN VO_GraphicsWbcIntProcess
    /*00014928*/ PUSH        {R4, LR} 
    /*0001492c*/ MOV         R3, #0 
    /*00014930*/ SUB         SP, SP, #16 
    /*00014934*/ MOV         R4, R0 
    /*00014938*/ ADD         R1, SP, #4 
    /*0001493c*/ MOV         R0, R3 
    /*00014940*/ STR         R3, [SP, #4] 
    /*00014944*/ STR         R3, [SP, #12] 
    /*00014948*/ BL          0x0000000000014948          @ GRAPHIC_DRV_GetHalLayer [R_ARM_CALL: .text+0x1f390] 
    /*0001494c*/ CMP         R0, #0 
    /*00014950*/ BNE         VO_GraphicsWbcIntProcess_x14978
    VO_GraphicsWbcIntProcess_x14954:
    /*00014954*/ MOV         R2, R4 
    /*00014958*/ ADD         R1, SP, #12 
    /*0001495c*/ LDR         R0, [SP, #4] 
    /*00014960*/ BL          0x0000000000014960          @ GRAPHIC_DRV_GetLayerWbcIntState [R_ARM_CALL: .text+0x1f46c] 
    /*00014964*/ LDR         R3, [SP, #12] 
    /*00014968*/ CMP         R3, #0 
    /*0001496c*/ BNE         VO_GraphicsWbcIntProcess_x14998
    /*00014970*/ ADD         SP, SP, #16 
    /*00014974*/ POP         {R4, PC} 
    VO_GraphicsWbcIntProcess_x14978:
    /*00014978*/ MOVW        R3, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6fa0] 
    /*0001497c*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6fb8] 
    /*00014980*/ MOVT        R3, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6fa0] 
    /*00014984*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6fb8] 
    /*00014988*/ MOVW        R2, #727                    @ 0x2d7 
    /*0001498c*/ LDR         R1, [PC, #88]               @ 0x00000000000149ec 
    /*00014990*/ BL          0x0000000000014990          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00014994*/ B           VO_GraphicsWbcIntProcess_x14954
    VO_GraphicsWbcIntProcess_x14998:
    /*00014998*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3434] 
    /*0001499c*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3434] 
    /*000149a0*/ ADD         R0, R4, #64                 @ 0x40 
    /*000149a4*/ ADD         R1, SP, #8 
    /*000149a8*/ BL          0x00000000000149A8          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*000149ac*/ LDR         R3, [R4, #4] 
    /*000149b0*/ CMP         R3, #0 
    /*000149b4*/ BNE         VO_GraphicsWbcIntProcess_x149cc
    /*000149b8*/ ADD         R1, SP, #8 
    /*000149bc*/ ADD         R0, R4, #64                 @ 0x40 
    /*000149c0*/ BL          0x00000000000149C0          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VO_GraphicsWbcIntProcess_x149c4:
    /*000149c4*/ ADD         SP, SP, #16 
    /*000149c8*/ POP         {R4, PC} 
    VO_GraphicsWbcIntProcess_x149cc:
    /*000149cc*/ LDR         R3, [R4, #24] 
    /*000149d0*/ MOV         R1, #0 
    /*000149d4*/ LDR         R0, [R4, #28] 
    /*000149d8*/ BLX         R3 
    /*000149dc*/ ADD         R1, SP, #8 
    /*000149e0*/ ADD         R0, R4, #64                 @ 0x40 
    /*000149e4*/ BL          0x00000000000149E4          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*000149e8*/ B           VO_GraphicsWbcIntProcess_x149c4
    /*000149ec*/ ANDEQ       R0, R0, R0, ASR #24 
FUNC_END VO_GraphicsWbcIntProcess


FUNC_BEGIN VO_GraphicsVtthIntProcess
    /*000149f0*/ PUSH        {R4, R5, LR} 
    /*000149f4*/ SUB         SP, SP, #20 
    /*000149f8*/ MOV         R5, R0 
    /*000149fc*/ ADD         R1, SP, #8 
    /*00014a00*/ MOV         R3, #0 
    /*00014a04*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3434] 
    /*00014a08*/ STR         R3, [SP, #8] 
    /*00014a0c*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3434] 
    /*00014a10*/ STR         R3, [SP, #12] 
    /*00014a14*/ BL          0x0000000000014A14          @ GRAPHIC_DRV_GetScanMode [R_ARM_CALL: .text+0x1f458] 
    /*00014a18*/ ADD         R1, SP, #12 
    /*00014a1c*/ MOV         R0, R5 
    /*00014a20*/ BL          0x0000000000014A20          @ GRAPHIC_DRV_GetIntState [R_ARM_CALL: .text+0x1f470] 
    /*00014a24*/ ADD         R0, R4, #64                 @ 0x40 
    /*00014a28*/ ADD         R1, SP, #4 
    /*00014a2c*/ BL          0x0000000000014A2C          @ osal_spin_lock_irqsave [R_ARM_CALL: +0x0] 
    /*00014a30*/ LDR         R3, [R4, #4] 
    /*00014a34*/ CMP         R3, #0 
    /*00014a38*/ BEQ         VO_GraphicsVtthIntProcess_x14a54
    /*00014a3c*/ LDR         R3, [R4, #8] 
    /*00014a40*/ CMP         R3, #0 
    /*00014a44*/ BEQ         VO_GraphicsVtthIntProcess_x14a54
    /*00014a48*/ LDR         R3, [R4, #12] 
    /*00014a4c*/ CMP         R5, R3 
    /*00014a50*/ BEQ         VO_GraphicsVtthIntProcess_x14a68
    VO_GraphicsVtthIntProcess_x14a54:
    /*00014a54*/ ADD         R1, SP, #4 
    /*00014a58*/ LDR         R0, [PC, #72]               @ 0x0000000000014aa8 
    /*00014a5c*/ BL          0x0000000000014A5C          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    VO_GraphicsVtthIntProcess_x14a60:
    /*00014a60*/ ADD         SP, SP, #20 
    /*00014a64*/ POP         {R4, R5, PC} 
    VO_GraphicsVtthIntProcess_x14a68:
    /*00014a68*/ LDR         R3, [SP, #8] 
    /*00014a6c*/ CMP         R3, #0 
    /*00014a70*/ BNE         VO_GraphicsVtthIntProcess_x14a80
    /*00014a74*/ LDR         R3, [SP, #12] 
    /*00014a78*/ CMP         R3, #0 
    /*00014a7c*/ BEQ         VO_GraphicsVtthIntProcess_x14a54
    VO_GraphicsVtthIntProcess_x14a80:
    /*00014a80*/ LDR         R5, [R4, #16] 
    /*00014a84*/ CMP         R5, #0 
    /*00014a88*/ BEQ         VO_GraphicsVtthIntProcess_x14a54
    /*00014a8c*/ ADD         R1, SP, #4 
    /*00014a90*/ LDR         R0, [PC, #16]               @ 0x0000000000014aa8 
    /*00014a94*/ BL          0x0000000000014A94          @ osal_spin_unlock_irqrestore [R_ARM_CALL: +0x0] 
    /*00014a98*/ LDR         R0, [R4, #20] 
    /*00014a9c*/ MOV         R1, #0 
    /*00014aa0*/ BLX         R5 
    /*00014aa4*/ B           VO_GraphicsVtthIntProcess_x14a60
    /*00014aa8*/ ANDEQ       R3, R0, R4, ROR R4 
FUNC_END VO_GraphicsVtthIntProcess


FUNC_BEGIN VOU_GraphicsLockInit
    VOU_GraphicsLockInit_x14aac:
    /*00014aac*/ B           VOU_GraphicsLockInit_x14aac @ GRAPHIC_DRV_Lock_Init [R_ARM_JUMP24: .text+0x1f4e0] 
FUNC_END VOU_GraphicsLockInit


FUNC_BEGIN VOU_GraphicsLockDeInit
    VOU_GraphicsLockDeInit_x14ab0:
    /*00014ab0*/ B           VOU_GraphicsLockDeInit_x14ab0@ GRAPHIC_DRV_Lock_Exit [R_ARM_JUMP24: .text+0x1f50c] 
FUNC_END VOU_GraphicsLockDeInit


FUNC_BEGIN VO_GraphicsInit
    VO_GraphicsInit_x14ab4:
    /*00014ab4*/ B           VO_GraphicsInit_x14ab4      @ GRAPHIC_DRV_Init [R_ARM_JUMP24: .text+0x1f524] 
FUNC_END VO_GraphicsInit


FUNC_BEGIN VO_GraphicsDeInit
    VO_GraphicsDeInit_x14ab8:
    /*00014ab8*/ B           VO_GraphicsDeInit_x14ab8    @ GRAPHIC_DRV_Exit [R_ARM_JUMP24: .text+0x1f584] 
FUNC_END VO_GraphicsDeInit


FUNC_BEGIN VOU_GraphicsBindDev
    /*00014abc*/ PUSH        {R4, R5, R6, LR} 
    /*00014ac0*/ MOV         R4, R0 
    /*00014ac4*/ MOV         R5, R1 
    /*00014ac8*/ BL          0x0000000000014AC8          @ GRAPHIC_DRV_CheckGraphicBindSupport [R_ARM_CALL: .text+0x1f480] 
    /*00014acc*/ CMP         R0, #0 
    /*00014ad0*/ POPNE       {R4, R5, R6, PC} 
    /*00014ad4*/ MOV         R1, R5 
    /*00014ad8*/ MOV         R0, R4 
    /*00014adc*/ POP         {R4, R5, R6, LR} 
    VOU_GraphicsBindDev_x14ae0:
    /*00014ae0*/ B           VOU_GraphicsBindDev_x14ae0  @ GRAPHIC_DRV_GraphicBindDev [R_ARM_JUMP24: .text+0x1f4d0] 
FUNC_END VOU_GraphicsBindDev


FUNC_BEGIN VOU_GraphicsUnBindDev
    /*00014ae4*/ PUSH        {R4, R5, R6, LR} 
    /*00014ae8*/ MOV         R4, R0 
    /*00014aec*/ MOV         R5, R1 
    /*00014af0*/ BL          0x0000000000014AF0          @ GRAPHIC_DRV_CheckGraphicBindSupport [R_ARM_CALL: .text+0x1f480] 
    /*00014af4*/ CMP         R0, #0 
    /*00014af8*/ POPNE       {R4, R5, R6, PC} 
    /*00014afc*/ MOV         R1, R5 
    /*00014b00*/ MOV         R0, R4 
    /*00014b04*/ POP         {R4, R5, R6, LR} 
    VOU_GraphicsUnBindDev_x14b08:
    /*00014b08*/ B           VOU_GraphicsUnBindDev_x14b08@ GRAPHIC_DRV_GraphicUnBindDev [R_ARM_JUMP24: .text+0x1f4d8] 
FUNC_END VOU_GraphicsUnBindDev


FUNC_BEGIN VOU_GraphicsSetCSC
    /*00014b0c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00014b10*/ SUB         SP, SP, #20 
    /*00014b14*/ MOV         R6, R0 
    /*00014b18*/ MOV         R4, R1 
    /*00014b1c*/ BL          0x0000000000014B1C          @ GRAPHIC_DRV_IsChipSupportCsc [R_ARM_CALL: .text+0x1f58c] 
    /*00014b20*/ CMP         R0, #0 
    /*00014b24*/ BEQ         VOU_GraphicsSetCSC_x14bdc
    /*00014b28*/ CMP         R4, #0 
    /*00014b2c*/ BEQ         VOU_GraphicsSetCSC_x14c20
    /*00014b30*/ ADD         R1, SP, #12 
    /*00014b34*/ MOV         R0, R6 
    /*00014b38*/ BL          0x0000000000014B38          @ GRAPHIC_DRV_GetHalLayer [R_ARM_CALL: .text+0x1f390] 
    /*00014b3c*/ CMP         R0, #0 
    /*00014b40*/ BNE         VOU_GraphicsSetCSC_x14b98
    /*00014b44*/ MOV         R1, R4 
    /*00014b48*/ LDR         R0, [SP, #12] 
    /*00014b4c*/ BL          0x0000000000014B4C          @ GRAPHIC_DRV_CheckCscCoef [R_ARM_CALL: .text+0x1f594] 
    /*00014b50*/ CMP         R0, #0 
    /*00014b54*/ BNE         VOU_GraphicsSetCSC_x14b90
    /*00014b58*/ MOV         R5, #80                     @ 0x50 
    /*00014b5c*/ MOVW        R7, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3434] 
    /*00014b60*/ MUL         R5, R5, R6 
    /*00014b64*/ MOVT        R7, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3434] 
    /*00014b68*/ MOV         R2, #20 
    /*00014b6c*/ MOV         R1, R4 
    /*00014b70*/ ADD         R0, R5, #32 
    /*00014b74*/ ADD         R0, R7, R0 
    /*00014b78*/ BL          0x0000000000014B78          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00014b7c*/ ADD         R2, R5, #52                 @ 0x34 
    /*00014b80*/ ADD         R2, R7, R2 
    /*00014b84*/ MOV         R1, R4 
    /*00014b88*/ LDR         R0, [SP, #12] 
    /*00014b8c*/ BL          0x0000000000014B8C          @ GRAPHIC_DRV_SetCscCoef [R_ARM_CALL: .text+0x1f750] 
    VOU_GraphicsSetCSC_x14b90:
    /*00014b90*/ ADD         SP, SP, #20 
    /*00014b94*/ POP         {R4, R5, R6, R7, PC} 
    VOU_GraphicsSetCSC_x14b98:
    /*00014b98*/ MOVW        R3, #871                    @ 0x367 
    /*00014b9c*/ MOV         R1, #15 
    /*00014ba0*/ STR         R3, [SP] 
    /*00014ba4*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6f64] 
    /*00014ba8*/ LDR         R3, [PC, #176]              @ 0x0000000000014c60 
    /*00014bac*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6f64] 
    /*00014bb0*/ MOV         R0, #3 
    /*00014bb4*/ BL          0x0000000000014BB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014bb8*/ MOV         R3, R6 
    /*00014bbc*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7038] 
    /*00014bc0*/ MOV         R1, #15 
    /*00014bc4*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7038] 
    /*00014bc8*/ MOV         R0, #3 
    /*00014bcc*/ BL          0x0000000000014BCC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014bd0*/ MOVW        R0, #32872                  @ 0x8068 
    /*00014bd4*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00014bd8*/ B           VOU_GraphicsSetCSC_x14b90
    VOU_GraphicsSetCSC_x14bdc:
    /*00014bdc*/ MOVW        R3, #862                    @ 0x35e 
    /*00014be0*/ MOV         R1, #15 
    /*00014be4*/ STR         R3, [SP] 
    /*00014be8*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6f64] 
    /*00014bec*/ LDR         R3, [PC, #108]              @ 0x0000000000014c60 
    /*00014bf0*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6f64] 
    /*00014bf4*/ MOV         R0, #3 
    /*00014bf8*/ BL          0x0000000000014BF8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014bfc*/ MOV         R3, R6 
    /*00014c00*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6ff8] 
    /*00014c04*/ MOV         R1, #15 
    /*00014c08*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6ff8] 
    /*00014c0c*/ MOV         R0, #3 
    /*00014c10*/ BL          0x0000000000014C10          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014c14*/ MOVW        R0, #32776                  @ 0x8008 
    /*00014c18*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00014c1c*/ B           VOU_GraphicsSetCSC_x14b90
    VOU_GraphicsSetCSC_x14c20:
    /*00014c20*/ MOVW        R3, #866                    @ 0x362 
    /*00014c24*/ MOV         R1, #15 
    /*00014c28*/ STR         R3, [SP] 
    /*00014c2c*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6f64] 
    /*00014c30*/ LDR         R3, [PC, #40]               @ 0x0000000000014c60 
    /*00014c34*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6f64] 
    /*00014c38*/ MOV         R0, #3 
    /*00014c3c*/ BL          0x0000000000014C3C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014c40*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x702c] 
    /*00014c44*/ MOV         R1, #15 
    /*00014c48*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x702c] 
    /*00014c4c*/ MOV         R0, #3 
    /*00014c50*/ BL          0x0000000000014C50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014c54*/ MOVW        R0, #32774                  @ 0x8006 
    /*00014c58*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00014c5c*/ B           VOU_GraphicsSetCSC_x14b90
    /*00014c60*/ ANDEQ       R0, R0, IP, ASR IP 
FUNC_END VOU_GraphicsSetCSC


FUNC_BEGIN VOU_GraphicsGetCSC
    /*00014c64*/ PUSH        {R4, R5, R6, LR} 
    /*00014c68*/ SUB         SP, SP, #16 
    /*00014c6c*/ MOV         R4, R0 
    /*00014c70*/ MOV         R5, R1 
    /*00014c74*/ BL          0x0000000000014C74          @ GRAPHIC_DRV_IsChipSupportCsc [R_ARM_CALL: .text+0x1f58c] 
    /*00014c78*/ CMP         R0, #0 
    /*00014c7c*/ BEQ         VOU_GraphicsGetCSC_x14d0c
    /*00014c80*/ CMP         R5, #0 
    /*00014c84*/ BEQ         VOU_GraphicsGetCSC_x14d50
    /*00014c88*/ ADD         R1, SP, #12 
    /*00014c8c*/ MOV         R0, R4 
    /*00014c90*/ BL          0x0000000000014C90          @ GRAPHIC_DRV_GetHalLayer [R_ARM_CALL: .text+0x1f390] 
    /*00014c94*/ SUBS        R6, R0, #0 
    /*00014c98*/ BNE         VOU_GraphicsGetCSC_x14cc8
    /*00014c9c*/ MOVW        R1, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3434] 
    /*00014ca0*/ MOVT        R1, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3434] 
    /*00014ca4*/ MOV         R3, #80                     @ 0x50 
    /*00014ca8*/ MOV         R0, R5 
    /*00014cac*/ MLA         R1, R3, R4, R1 
    /*00014cb0*/ MOV         R2, #20 
    /*00014cb4*/ ADD         R1, R1, #32 
    /*00014cb8*/ BL          0x0000000000014CB8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    VOU_GraphicsGetCSC_x14cbc:
    /*00014cbc*/ MOV         R0, R6 
    /*00014cc0*/ ADD         SP, SP, #16 
    /*00014cc4*/ POP         {R4, R5, R6, PC} 
    VOU_GraphicsGetCSC_x14cc8:
    /*00014cc8*/ MOV         R3, #904                    @ 0x388 
    /*00014ccc*/ MOV         R1, #15 
    /*00014cd0*/ STR         R3, [SP] 
    /*00014cd4*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6f64] 
    /*00014cd8*/ LDR         R3, [PC, #176]              @ 0x0000000000014d90 
    /*00014cdc*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6f64] 
    /*00014ce0*/ MOV         R0, #3 
    /*00014ce4*/ MOVW        R6, #32872                  @ 0x8068 
    /*00014ce8*/ BL          0x0000000000014CE8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014cec*/ MOV         R3, R4 
    /*00014cf0*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7038] 
    /*00014cf4*/ MOV         R1, #15 
    /*00014cf8*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7038] 
    /*00014cfc*/ MOV         R0, #3 
    /*00014d00*/ BL          0x0000000000014D00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014d04*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00014d08*/ B           VOU_GraphicsGetCSC_x14cbc
    VOU_GraphicsGetCSC_x14d0c:
    /*00014d0c*/ MOVW        R3, #895                    @ 0x37f 
    /*00014d10*/ MOV         R1, #15 
    /*00014d14*/ STR         R3, [SP] 
    /*00014d18*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6f64] 
    /*00014d1c*/ LDR         R3, [PC, #108]              @ 0x0000000000014d90 
    /*00014d20*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6f64] 
    /*00014d24*/ MOV         R0, #3 
    /*00014d28*/ MOVW        R6, #32776                  @ 0x8008 
    /*00014d2c*/ BL          0x0000000000014D2C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014d30*/ MOV         R3, R4 
    /*00014d34*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7058] 
    /*00014d38*/ MOV         R1, #15 
    /*00014d3c*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7058] 
    /*00014d40*/ MOV         R0, #3 
    /*00014d44*/ BL          0x0000000000014D44          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014d48*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00014d4c*/ B           VOU_GraphicsGetCSC_x14cbc
    VOU_GraphicsGetCSC_x14d50:
    /*00014d50*/ MOVW        R3, #899                    @ 0x383 
    /*00014d54*/ MOV         R1, #15 
    /*00014d58*/ STR         R3, [SP] 
    /*00014d5c*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x6f64] 
    /*00014d60*/ LDR         R3, [PC, #40]               @ 0x0000000000014d90 
    /*00014d64*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x6f64] 
    /*00014d68*/ MOV         R0, #3 
    /*00014d6c*/ MOVW        R6, #32774                  @ 0x8006 
    /*00014d70*/ BL          0x0000000000014D70          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014d74*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x702c] 
    /*00014d78*/ MOV         R1, #15 
    /*00014d7c*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x702c] 
    /*00014d80*/ MOV         R0, #3 
    /*00014d84*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00014d88*/ BL          0x0000000000014D88          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014d8c*/ B           VOU_GraphicsGetCSC_x14cbc
    /*00014d90*/ ANDEQ       R0, R0, R0, ROR IP 
FUNC_END VOU_GraphicsGetCSC


FUNC_BEGIN VO_GraphicsSetLayerAttr
    /*00014d94*/ MOV         R0, #0 
    /*00014d98*/ BX          LR 
FUNC_END VO_GraphicsSetLayerAttr


FUNC_BEGIN VO_GraphicsGetLayerAttr
    /*00014d9c*/ MOV         R0, #0 
    /*00014da0*/ BX          LR 
FUNC_END VO_GraphicsGetLayerAttr


FUNC_BEGIN VOU_GraphicsShowProc
    /*00014da4*/ PUSH        {R4, R5, LR} 
    /*00014da8*/ MOV         R4, R0 
    /*00014dac*/ SUB         SP, SP, #20 
    /*00014db0*/ BL          0x0000000000014DB0          @ GRAPHIC_DRV_ShowProc [R_ARM_CALL: .text+0x1fa34] 
    /*00014db4*/ MOV         R0, R4 
    /*00014db8*/ MOVW        R1, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7088] 
    /*00014dbc*/ MOVT        R1, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7088] 
    /*00014dc0*/ BL          0x0000000000014DC0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00014dc4*/ MOV         R0, R4 
    /*00014dc8*/ MOVW        R1, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x708c] 
    /*00014dcc*/ MOVT        R1, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x708c] 
    /*00014dd0*/ BL          0x0000000000014DD0          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00014dd4*/ MOVW        R2, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x70f0] 
    /*00014dd8*/ MOVW        R3, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x70fc] 
    /*00014ddc*/ MOVT        R2, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x70f0] 
    /*00014de0*/ MOVT        R3, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x70fc] 
    /*00014de4*/ STR         R2, [SP, #12] 
    /*00014de8*/ STR         R3, [SP, #8] 
    /*00014dec*/ MOVW        R2, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7108] 
    /*00014df0*/ MOVW        R3, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7114] 
    /*00014df4*/ MOVT        R2, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7108] 
    /*00014df8*/ MOVT        R3, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7114] 
    /*00014dfc*/ STR         R2, [SP, #4] 
    /*00014e00*/ STR         R3, [SP] 
    /*00014e04*/ MOV         R0, R4 
    /*00014e08*/ MOVW        R3, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x70c8] 
    /*00014e0c*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x70d4] 
    /*00014e10*/ MOVT        R3, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x70c8] 
    /*00014e14*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x70d4] 
    /*00014e18*/ MOVW        R1, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x70e0] 
    /*00014e1c*/ MOVT        R1, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x70e0] 
    /*00014e20*/ BL          0x0000000000014E20          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00014e24*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3434] 
    /*00014e28*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3434] 
    /*00014e2c*/ MOV         R3, #232                    @ 0xe8 
    /*00014e30*/ MOVW        R1, #0                      @ g_astVoDev [R_ARM_MOVW_ABS_NC: .bss+0x8] 
    /*00014e34*/ MOVT        R1, #0                      @ g_astVoDev [R_ARM_MOVT_ABS: .bss+0x8] 
    /*00014e38*/ LDR         R0, [R2, #12] 
    /*00014e3c*/ MUL         R3, R3, R0 
    /*00014e40*/ LDR         R3, [R1, R3] 
    /*00014e44*/ CMP         R3, #0 
    /*00014e48*/ BNE         VOU_GraphicsShowProc_x14e58
    /*00014e4c*/ MOV         R0, #0 
    /*00014e50*/ ADD         SP, SP, #20 
    /*00014e54*/ POP         {R4, R5, PC} 
    VOU_GraphicsShowProc_x14e58:
    /*00014e58*/ LDR         R5, [R2, #48]               @ 0x30 
    /*00014e5c*/ MOV         R0, R4 
    /*00014e60*/ LDR         LR, [R2, #40]               @ 0x28 
    /*00014e64*/ MOVW        R1, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7120] 
    /*00014e68*/ LDR         R4, [R2, #44]               @ 0x2c 
    /*00014e6c*/ MOVT        R1, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7120] 
    /*00014e70*/ LDR         IP, [R2, #36]               @ 0x24 
    /*00014e74*/ LDR         R3, [R2, #32] 
    /*00014e78*/ MOV         R2, #0 
    /*00014e7c*/ STR         R5, [SP, #12] 
    /*00014e80*/ STR         R4, [SP, #8] 
    /*00014e84*/ STM         SP, {IP, LR} 
    /*00014e88*/ BL          0x0000000000014E88          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*00014e8c*/ MOV         R0, #0 
    /*00014e90*/ ADD         SP, SP, #20 
    /*00014e94*/ POP         {R4, R5, PC} 
FUNC_END VOU_GraphicsShowProc


FUNC_BEGIN VOU_UF_AllocNode
    /*00014e98*/ PUSH        {R4, LR} 
    /*00014e9c*/ MOV         R0, #344                    @ 0x158 
    /*00014ea0*/ SUB         SP, SP, #8 
    /*00014ea4*/ BL          0x0000000000014EA4          @ osal_vmalloc [R_ARM_CALL: +0x0] 
    /*00014ea8*/ SUBS        R4, R0, #0 
    /*00014eac*/ BEQ         VOU_UF_AllocNode_x14ed0
    /*00014eb0*/ MOV         R2, #344                    @ 0x158 
    /*00014eb4*/ MOV         R1, #0 
    /*00014eb8*/ BL          0x0000000000014EB8          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00014ebc*/ MOV         R0, R4 
    /*00014ec0*/ STR         R4, [R4] 
    /*00014ec4*/ STR         R4, [R4, #4] 
    /*00014ec8*/ ADD         SP, SP, #8 
    /*00014ecc*/ POP         {R4, PC} 
    VOU_UF_AllocNode_x14ed0:
    /*00014ed0*/ MOV         R2, #34                     @ 0x22 
    /*00014ed4*/ MOV         R1, #15 
    /*00014ed8*/ STR         R2, [SP] 
    /*00014edc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xc84] 
    /*00014ee0*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7134] 
    /*00014ee4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xc84] 
    /*00014ee8*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7134] 
    /*00014eec*/ MOV         R0, #3 
    /*00014ef0*/ BL          0x0000000000014EF0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00014ef4*/ MOV         R0, R4 
    /*00014ef8*/ ADD         SP, SP, #8 
    /*00014efc*/ POP         {R4, PC} 
FUNC_END VOU_UF_AllocNode


FUNC_BEGIN VOU_UF_PutFree
    /*00014f00*/ PUSH        {R4, R5, R6, LR} 
    /*00014f04*/ MOV         R4, R1 
    /*00014f08*/ MOV         R5, R0 
    /*00014f0c*/ BL          0x0000000000014F0C          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00014f10*/ CMP         R0, #0 
    /*00014f14*/ BNE         VOU_UF_PutFree_x14f4c
    /*00014f18*/ MOV         R0, R4 
    /*00014f1c*/ BL          0x0000000000014F1C          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00014f20*/ CMP         R0, #0 
    /*00014f24*/ BNE         VOU_UF_PutFree_x14f4c
    /*00014f28*/ LDR         R3, [R5, #4] 
    /*00014f2c*/ STR         R4, [R5, #4] 
    /*00014f30*/ STR         R5, [R4] 
    /*00014f34*/ STR         R3, [R4, #4] 
    /*00014f38*/ STR         R4, [R3] 
    /*00014f3c*/ LDR         R3, [R5, #16] 
    /*00014f40*/ ADD         R3, R3, #1 
    /*00014f44*/ STR         R3, [R5, #16] 
    /*00014f48*/ POP         {R4, R5, R6, PC} 
    VOU_UF_PutFree_x14f4c:
    /*00014f4c*/ MOVW        R0, #32774                  @ 0x8006 
    /*00014f50*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00014f54*/ POP         {R4, R5, R6, PC} 
FUNC_END VOU_UF_PutFree


FUNC_BEGIN VOU_UF_GetFree
    /*00014f58*/ LDR         R3, [R0] 
    /*00014f5c*/ CMP         R0, R3 
    /*00014f60*/ BEQ         VOU_UF_GetFree_x14fa8
    /*00014f64*/ PUSH        {R4, LR} 
    /*00014f68*/ MOV         R2, R0 
    /*00014f6c*/ LDR         LR, [R3, #4] 
    /*00014f70*/ MOV         R0, R3 
    /*00014f74*/ LDR         R4, [R3] 
    /*00014f78*/ MOV         IP, #256                    @ 0x100 
    /*00014f7c*/ MOV         R1, #512                    @ 0x200 
    /*00014f80*/ MOVT        IP, #16 
    /*00014f84*/ MOVT        R1, #32 
    /*00014f88*/ STR         LR, [R4, #4] 
    /*00014f8c*/ STR         R4, [LR] 
    /*00014f90*/ STR         IP, [R3] 
    /*00014f94*/ STR         R1, [R3, #4] 
    /*00014f98*/ LDR         R3, [R2, #16] 
    /*00014f9c*/ SUB         R3, R3, #1 
    /*00014fa0*/ STR         R3, [R2, #16] 
    /*00014fa4*/ POP         {R4, PC} 
    VOU_UF_GetFree_x14fa8:
    /*00014fa8*/ MOV         R0, #0 
    /*00014fac*/ BX          LR 
FUNC_END VOU_UF_GetFree


FUNC_BEGIN VOU_UF_PutBusy
    /*00014fb0*/ PUSH        {R4, R5, R6, LR} 
    /*00014fb4*/ MOV         R4, R1 
    /*00014fb8*/ MOV         R5, R0 
    /*00014fbc*/ BL          0x0000000000014FBC          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00014fc0*/ CMP         R0, #0 
    /*00014fc4*/ BNE         VOU_UF_PutBusy_x14ffc
    /*00014fc8*/ MOV         R0, R4 
    /*00014fcc*/ BL          0x0000000000014FCC          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00014fd0*/ CMP         R0, #0 
    /*00014fd4*/ BNE         VOU_UF_PutBusy_x14ffc
    /*00014fd8*/ LDR         R3, [R5, #12] 
    /*00014fdc*/ ADD         R2, R5, #8 
    /*00014fe0*/ STR         R4, [R5, #12] 
    /*00014fe4*/ STM         R4, {R2, R3} 
    /*00014fe8*/ STR         R4, [R3] 
    /*00014fec*/ LDR         R3, [R5, #20] 
    /*00014ff0*/ ADD         R3, R3, #1 
    /*00014ff4*/ STR         R3, [R5, #20] 
    /*00014ff8*/ POP         {R4, R5, R6, PC} 
    VOU_UF_PutBusy_x14ffc:
    /*00014ffc*/ MOVW        R0, #32774                  @ 0x8006 
    /*00015000*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00015004*/ POP         {R4, R5, R6, PC} 
FUNC_END VOU_UF_PutBusy


FUNC_BEGIN VOU_UF_GetBusy
    /*00015008*/ MOV         R2, R0 
    /*0001500c*/ LDR         R3, [R2, #8]! 
    /*00015010*/ CMP         R3, R2 
    /*00015014*/ BEQ         VOU_UF_GetBusy_x1505c
    /*00015018*/ PUSH        {R4, LR} 
    /*0001501c*/ MOV         R1, R0 
    /*00015020*/ LDR         LR, [R3, #4] 
    /*00015024*/ MOV         R0, R3 
    /*00015028*/ LDR         R4, [R3] 
    /*0001502c*/ MOV         IP, #256                    @ 0x100 
    /*00015030*/ MOV         R2, #512                    @ 0x200 
    /*00015034*/ MOVT        IP, #16 
    /*00015038*/ MOVT        R2, #32 
    /*0001503c*/ STR         LR, [R4, #4] 
    /*00015040*/ STR         R4, [LR] 
    /*00015044*/ STR         IP, [R3] 
    /*00015048*/ STR         R2, [R3, #4] 
    /*0001504c*/ LDR         R3, [R1, #20] 
    /*00015050*/ SUB         R3, R3, #1 
    /*00015054*/ STR         R3, [R1, #20] 
    /*00015058*/ POP         {R4, PC} 
    VOU_UF_GetBusy_x1505c:
    /*0001505c*/ MOV         R0, #0 
    /*00015060*/ BX          LR 
FUNC_END VOU_UF_GetBusy


FUNC_BEGIN VOU_UF_QueryFreeNum
    /*00015064*/ LDR         R0, [R0, #16] 
    /*00015068*/ BX          LR 
FUNC_END VOU_UF_QueryFreeNum


FUNC_BEGIN VOU_UF_QueryBusyNum
    /*0001506c*/ LDR         R0, [R0, #20] 
    /*00015070*/ BX          LR 
FUNC_END VOU_UF_QueryBusyNum


FUNC_BEGIN VOU_UF_BUF_Init
    /*00015074*/ PUSH        {R4, LR} 
    /*00015078*/ MOV         R4, R0 
    /*0001507c*/ BL          0x000000000001507C          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00015080*/ CMP         R0, #0 
    /*00015084*/ STREQ       R4, [R4] 
    /*00015088*/ ADDEQ       R3, R4, #8 
    /*0001508c*/ STREQ       R4, [R4, #4] 
    /*00015090*/ MOVWNE      R0, #32774                  @ 0x8006 
    /*00015094*/ STREQ       R0, [R4, #20] 
    /*00015098*/ STREQ       R0, [R4, #16] 
    /*0001509c*/ MOVTNE      R0, #40975                  @ 0xa00f 
    /*000150a0*/ STREQ       R3, [R4, #8] 
    /*000150a4*/ STREQ       R3, [R4, #12] 
    /*000150a8*/ POP         {R4, PC} 
FUNC_END VOU_UF_BUF_Init


FUNC_BEGIN VOU_UF_BUF_Deinit
    /*000150ac*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000150b0*/ SUB         SP, SP, #8 
    /*000150b4*/ MOV         R6, R0 
    /*000150b8*/ BL          0x00000000000150B8          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*000150bc*/ SUBS        SL, R0, #0 
    /*000150c0*/ BNE         VOU_UF_BUF_Deinit_x151a8
    /*000150c4*/ LDR         R4, [R6] 
    /*000150c8*/ CMP         R4, R6 
    /*000150cc*/ LDR         R5, [R4] 
    /*000150d0*/ BEQ         VOU_UF_BUF_Deinit_x1515c
    /*000150d4*/ MOVW        R9, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7168] 
    /*000150d8*/ MOVW        R8, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7178] 
    /*000150dc*/ MOVT        R9, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7168] 
    /*000150e0*/ MOVT        R8, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7178] 
    /*000150e4*/ LDR         R7, [PC, #200]              @ 0x00000000000151b4 
    /*000150e8*/ B           VOU_UF_BUF_Deinit_x150f0
    VOU_UF_BUF_Deinit_x150ec:
    /*000150ec*/ MOV         R5, R3 
    VOU_UF_BUF_Deinit_x150f0:
    /*000150f0*/ CMP         R4, #0 
    /*000150f4*/ BEQ         VOU_UF_BUF_Deinit_x15190
    VOU_UF_BUF_Deinit_x150f8:
    /*000150f8*/ LDR         R3, [R4, #4] 
    /*000150fc*/ MOV         IP, #149                    @ 0x95 
    /*00015100*/ LDR         LR, [R4] 
    /*00015104*/ MOV         R1, #256                    @ 0x100 
    /*00015108*/ MOV         R0, #512                    @ 0x200 
    /*0001510c*/ MOVT        R1, #16 
    /*00015110*/ MOVT        R0, #32 
    /*00015114*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x71b8] 
    /*00015118*/ STR         R3, [LR, #4] 
    /*0001511c*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x71b8] 
    /*00015120*/ STR         LR, [R3] 
    /*00015124*/ MOV         R3, R7 
    /*00015128*/ STR         R1, [R4] 
    /*0001512c*/ MOV         R1, #15 
    /*00015130*/ STR         R0, [R4, #4] 
    /*00015134*/ MOV         R0, #7 
    /*00015138*/ STR         R4, [SP, #4] 
    /*0001513c*/ STR         IP, [SP] 
    /*00015140*/ BL          0x0000000000015140          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00015144*/ MOV         R0, R4 
    /*00015148*/ BL          0x0000000000015148          @ osal_vfree [R_ARM_CALL: +0x0] 
    /*0001514c*/ CMP         R6, R5 
    /*00015150*/ LDR         R3, [R5] 
    /*00015154*/ MOV         R4, R5 
    /*00015158*/ BNE         VOU_UF_BUF_Deinit_x150ec
    VOU_UF_BUF_Deinit_x1515c:
    /*0001515c*/ LDR         R3, [R6, #20] 
    /*00015160*/ CMP         R3, #0 
    /*00015164*/ BEQ         VOU_UF_BUF_Deinit_x15184
    /*00015168*/ MOVW        R3, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x71f0] 
    /*0001516c*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7178] 
    /*00015170*/ MOVT        R3, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x71f0] 
    /*00015174*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7178] 
    /*00015178*/ MOV         R2, #155                    @ 0x9b 
    /*0001517c*/ LDR         R1, [PC, #48]               @ 0x00000000000151b4 
    /*00015180*/ BL          0x0000000000015180          @ osal_panic [R_ARM_CALL: +0x0] 
    VOU_UF_BUF_Deinit_x15184:
    /*00015184*/ MOV         R0, SL 
    /*00015188*/ ADD         SP, SP, #8 
    /*0001518c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VOU_UF_BUF_Deinit_x15190:
    /*00015190*/ MOV         R3, R9 
    /*00015194*/ MOV         R2, #146                    @ 0x92 
    /*00015198*/ MOV         R1, R7 
    /*0001519c*/ MOV         R0, R8 
    /*000151a0*/ BL          0x00000000000151A0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000151a4*/ B           VOU_UF_BUF_Deinit_x150f8
    VOU_UF_BUF_Deinit_x151a8:
    /*000151a8*/ MOVW        SL, #32774                  @ 0x8006 
    /*000151ac*/ MOVT        SL, #40975                  @ 0xa00f 
    /*000151b0*/ B           VOU_UF_BUF_Deinit_x15184
    /*000151b4*/ MULEQ       R0, R8, IP 
FUNC_END VOU_UF_BUF_Deinit


FUNC_BEGIN VOU_UF_PutVb
    /*000151b8*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*000151bc*/ SUB         SP, SP, #12 
    /*000151c0*/ MOV         R7, R1 
    /*000151c4*/ MOV         R4, R0 
    /*000151c8*/ BL          0x00000000000151C8          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*000151cc*/ SUBS        R5, R0, #0 
    /*000151d0*/ BNE         VOU_UF_PutVb_x1525c
    /*000151d4*/ MOV         R0, #1 
    /*000151d8*/ LDRD        R8, [R4, #120]              @ 0x78 
    /*000151dc*/ LDR         R6, [R4, #328]              @ 0x148 
    /*000151e0*/ BL          0x00000000000151E0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000151e4*/ MOV         R2, R8 
    /*000151e8*/ MOV         R3, R9 
    /*000151ec*/ LDR         R1, [R0, #84]               @ 0x54 
    /*000151f0*/ MOV         R0, R6 
    /*000151f4*/ BLX         R1 
    /*000151f8*/ CMP         R0, #0 
    /*000151fc*/ BNE         VOU_UF_PutVb_x1520c
    VOU_UF_PutVb_x15200:
    /*00015200*/ MOV         R0, R5 
    /*00015204*/ ADD         SP, SP, #12 
    /*00015208*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VOU_UF_PutVb_x1520c:
    /*0001520c*/ MOV         R0, #1 
    /*00015210*/ BL          0x0000000000015210          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00015214*/ STR         R7, [SP] 
    /*00015218*/ MOV         R2, R8 
    /*0001521c*/ MOV         R3, R9 
    /*00015220*/ LDR         R1, [R0, #64]               @ 0x40 
    /*00015224*/ MOV         R0, R6 
    /*00015228*/ BLX         R1 
    /*0001522c*/ CMP         R0, #0 
    /*00015230*/ BEQ         VOU_UF_PutVb_x15200
    /*00015234*/ MOV         R2, #173                    @ 0xad 
    /*00015238*/ LDR         R1, [PC, #40]               @ 0x0000000000015268 
    /*0001523c*/ MOVW        R3, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x71fc] 
    /*00015240*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7178] 
    /*00015244*/ MOVT        R3, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x71fc] 
    /*00015248*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7178] 
    /*0001524c*/ BL          0x000000000001524C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00015250*/ MOV         R0, R5 
    /*00015254*/ ADD         SP, SP, #12 
    /*00015258*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VOU_UF_PutVb_x1525c:
    /*0001525c*/ MOVW        R5, #32774                  @ 0x8006 
    /*00015260*/ MOVT        R5, #40975                  @ 0xa00f 
    /*00015264*/ B           VOU_UF_PutVb_x15200
    /*00015268*/ ANDEQ       R0, R0, IP, LSR #25 
FUNC_END VOU_UF_PutVb


FUNC_BEGIN VOU_UF_GetVb
    /*0001526c*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00015270*/ SUB         SP, SP, #12 
    /*00015274*/ MOV         R5, R1 
    /*00015278*/ MOV         R4, R0 
    /*0001527c*/ BL          0x000000000001527C          @ VoDefCheckNullPtr [R_ARM_CALL: .text+0x34a8] 
    /*00015280*/ SUBS        R7, R0, #0 
    /*00015284*/ BNE         VOU_UF_GetVb_x152e0
    /*00015288*/ MOV         R0, #1 
    /*0001528c*/ LDRD        R8, [R4, #120]              @ 0x78 
    /*00015290*/ LDR         R6, [R4, #328]              @ 0x148 
    /*00015294*/ BL          0x0000000000015294          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00015298*/ STR         R5, [SP] 
    /*0001529c*/ MOV         R2, R8 
    /*000152a0*/ MOV         R3, R9 
    /*000152a4*/ LDR         R1, [R0, #60]               @ 0x3c 
    /*000152a8*/ MOV         R0, R6 
    /*000152ac*/ BLX         R1 
    /*000152b0*/ CMP         R0, #0 
    /*000152b4*/ BEQ         VOU_UF_GetVb_x152d8
    /*000152b8*/ MOVW        R3, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x71fc] 
    /*000152bc*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7178] 
    /*000152c0*/ MOVT        R3, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x71fc] 
    /*000152c4*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7178] 
    /*000152c8*/ MOV         R2, #190                    @ 0xbe 
    /*000152cc*/ LDR         R1, [PC, #24]               @ 0x00000000000152ec 
    /*000152d0*/ BL          0x00000000000152D0          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000152d4*/ MOV         R0, R7 
    VOU_UF_GetVb_x152d8:
    /*000152d8*/ ADD         SP, SP, #12 
    /*000152dc*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    VOU_UF_GetVb_x152e0:
    /*000152e0*/ MOVW        R0, #32774                  @ 0x8006 
    /*000152e4*/ MOVT        R0, #40975                  @ 0xa00f 
    /*000152e8*/ B           VOU_UF_GetVb_x152d8
    /*000152ec*/ @           <UNDEFINED> instruction: 0x00000cbc 
FUNC_END VOU_UF_GetVb


FUNC_BEGIN VOU_UF_RlsBusy
    /*000152f0*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000152f4*/ SUBS        R7, R1, #0 
    /*000152f8*/ BLE         VOU_UF_RlsBusy_x153a4
    /*000152fc*/ MOV         SL, #256                    @ 0x100 
    /*00015300*/ MOV         R9, #512                    @ 0x200 
    /*00015304*/ MOVW        FP, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7168] 
    /*00015308*/ MOV         R4, R0 
    /*0001530c*/ MOVT        SL, #16 
    /*00015310*/ MOVT        R9, #32 
    /*00015314*/ ADD         R8, R0, #8 
    /*00015318*/ MOVT        FP, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7168] 
    /*0001531c*/ MOV         R6, #0 
    /*00015320*/ B           VOU_UF_RlsBusy_x15374
    VOU_UF_RlsBusy_x15324:
    /*00015324*/ LDR         R2, [R3, #4] 
    /*00015328*/ CMP         R3, #0 
    /*0001532c*/ LDR         R1, [R3] 
    /*00015330*/ STR         R2, [R1, #4] 
    /*00015334*/ STR         R1, [R2] 
    /*00015338*/ STR         SL, [R3] 
    /*0001533c*/ STR         R9, [R3, #4] 
    /*00015340*/ LDR         R3, [R4, #20] 
    /*00015344*/ SUB         R3, R3, #1 
    /*00015348*/ STR         R3, [R4, #20] 
    /*0001534c*/ BEQ         VOU_UF_RlsBusy_x15384
    VOU_UF_RlsBusy_x15350:
    /*00015350*/ MOV         R1, #1 
    /*00015354*/ ADD         R0, R5, #8 
    /*00015358*/ ADD         R6, R6, R1 
    /*0001535c*/ BL          0x000000000001535C          @ VOU_UF_PutVb [R_ARM_CALL: .text+0x151b8] 
    /*00015360*/ MOV         R1, R5 
    /*00015364*/ MOV         R0, R4 
    /*00015368*/ BL          0x0000000000015368          @ VOU_UF_PutFree [R_ARM_CALL: .text+0x14f00] 
    /*0001536c*/ CMP         R7, R6 
    /*00015370*/ BEQ         VOU_UF_RlsBusy_x153a4
    VOU_UF_RlsBusy_x15374:
    /*00015374*/ LDR         R3, [R4, #8] 
    /*00015378*/ CMP         R8, R3 
    /*0001537c*/ MOV         R5, R3 
    /*00015380*/ BNE         VOU_UF_RlsBusy_x15324
    VOU_UF_RlsBusy_x15384:
    /*00015384*/ MOVW        R0, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7178] 
    /*00015388*/ MOV         R3, FP 
    /*0001538c*/ MOVT        R0, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7178] 
    /*00015390*/ MOV         R2, #204                    @ 0xcc 
    /*00015394*/ LDR         R1, [PC, #16]               @ 0x00000000000153ac 
    /*00015398*/ MOV         R5, #0 
    /*0001539c*/ BL          0x000000000001539C          @ osal_panic [R_ARM_CALL: +0x0] 
    /*000153a0*/ B           VOU_UF_RlsBusy_x15350
    VOU_UF_RlsBusy_x153a4:
    /*000153a4*/ MOV         R0, #0 
    /*000153a8*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*000153ac*/ ANDEQ       R0, R0, IP, ASR #25 
FUNC_END VOU_UF_RlsBusy


FUNC_BEGIN VO_DRV_CheckRgnAttr
    /*000153b0*/ LDR         R3, [R2, #4] 
    /*000153b4*/ CMP         R3, #2 
    /*000153b8*/ BEQ         VO_DRV_CheckRgnAttr_x153c4
    VO_DRV_CheckRgnAttr_x153bc:
    /*000153bc*/ MOV         R0, #1 
    /*000153c0*/ BX          LR 
    VO_DRV_CheckRgnAttr_x153c4:
    /*000153c4*/ LDR         R3, [R2, #8] 
    /*000153c8*/ CMP         R3, #1 
    /*000153cc*/ BNE         VO_DRV_CheckRgnAttr_x153bc
    /*000153d0*/ PUSH        {R4, R5, R6, R7, LR} 
    /*000153d4*/ MOV         R0, #0 
    /*000153d8*/ LDR         LR, [R2, #24] 
    /*000153dc*/ SUB         SP, SP, #44                 @ 0x2c 
    /*000153e0*/ LDR         IP, [R2, #20] 
    /*000153e4*/ ADD         R4, R2, #24 
    /*000153e8*/ MOV         R5, R0 
    /*000153ec*/ MOV         R3, R2 
    VO_DRV_CheckRgnAttr_x153f0:
    /*000153f0*/ LDR         R1, [R3, #32] 
    /*000153f4*/ ADD         R3, R3, #8 
    /*000153f8*/ CMP         R1, LR 
    /*000153fc*/ LDR         R1, [R3, #20] 
    /*00015400*/ ADDEQ       R5, R5, #1 
    /*00015404*/ CMP         IP, R1 
    /*00015408*/ ADDEQ       R0, R0, #1 
    /*0001540c*/ CMP         R4, R3 
    /*00015410*/ BNE         VO_DRV_CheckRgnAttr_x153f0
    /*00015414*/ CMP         R0, #3 
    /*00015418*/ CMPNE       R5, #3 
    /*0001541c*/ MOVNE       R0, #1 
    /*00015420*/ BNE         VO_DRV_CheckRgnAttr_x15484
    /*00015424*/ LDR         R1, [R2, #40]               @ 0x28 
    /*00015428*/ MOVW        R4, #4573                   @ 0x11dd 
    /*0001542c*/ LDR         R0, [R2, #36]               @ 0x24 
    /*00015430*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xcdc] 
    /*00015434*/ LDR         R7, [R2, #48]               @ 0x30 
    /*00015438*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xcdc] 
    /*0001543c*/ LDR         R6, [R2, #44]               @ 0x2c 
    /*00015440*/ STR         LR, [SP, #8] 
    /*00015444*/ LDR         R5, [R2, #32] 
    /*00015448*/ LDR         LR, [R2, #28] 
    /*0001544c*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7214] 
    /*00015450*/ STR         R1, [SP, #24] 
    /*00015454*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7214] 
    /*00015458*/ STR         R0, [SP, #20] 
    /*0001545c*/ MOV         R1, #15 
    /*00015460*/ STR         IP, [SP, #4] 
    /*00015464*/ MOV         R0, #3 
    /*00015468*/ STR         R7, [SP, #32] 
    /*0001546c*/ STR         R6, [SP, #28] 
    /*00015470*/ STR         R5, [SP, #16] 
    /*00015474*/ STR         LR, [SP, #12] 
    /*00015478*/ STR         R4, [SP] 
    /*0001547c*/ BL          0x000000000001547C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00015480*/ MOV         R0, #0 
    VO_DRV_CheckRgnAttr_x15484:
    /*00015484*/ ADD         SP, SP, #44                 @ 0x2c 
    /*00015488*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END VO_DRV_CheckRgnAttr


FUNC_BEGIN VO_DRV_GetChannelHalId.part.3
    /*0001548c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00015490*/ SUB         SP, SP, #12 
    /*00015494*/ MOVW        R3, #2371                   @ 0x943 
    /*00015498*/ MOV         R1, #15 
    /*0001549c*/ STR         R0, [SP, #4] 
    /*000154a0*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x729c] 
    /*000154a4*/ STR         R3, [SP] 
    /*000154a8*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x729c] 
    /*000154ac*/ LDR         R3, [PC, #12]               @ 0x00000000000154c0 
    /*000154b0*/ MOV         R0, #3 
    /*000154b4*/ BL          0x00000000000154B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000154b8*/ ADD         SP, SP, #12 
    /*000154bc*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000154c0*/ STRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VO_DRV_GetChannelHalId.part.3


FUNC_BEGIN VOU_DRV_SetLayerCvfirCoef.constprop.8
    /*000154c4*/ PUSH        {R4, LR} 
    /*000154c8*/ MOV         R4, R0 
    /*000154cc*/ LDR         LR, [PC, #40]               @ 0x00000000000154fc 
    /*000154d0*/ SUB         SP, SP, #32 
    /*000154d4*/ MOV         IP, SP 
    /*000154d8*/ LDM         LR!, {R0, R1, R2, R3} 
    /*000154dc*/ STMIA       IP!, {R0, R1, R2, R3} 
    /*000154e0*/ LDM         LR, {R0, R1, R2, R3} 
    /*000154e4*/ STM         IP, {R0, R1, R2, R3} 
    /*000154e8*/ MOV         R0, R4 
    /*000154ec*/ MOV         R1, SP 
    /*000154f0*/ BL          0x00000000000154F0          @ HAL_VIDEO_CVFIR_SetCoef [R_ARM_CALL: .text+0x1d598] 
    /*000154f4*/ ADD         SP, SP, #32 
    /*000154f8*/ POP         {R4, PC} 
    /*000154fc*/ ANDEQ       R0, R0, R8, LSL #26 
FUNC_END VOU_DRV_SetLayerCvfirCoef.constprop.8


FUNC_BEGIN VO_ZME_COEF_INIT
    /*00015500*/ BX          LR 
FUNC_END VO_ZME_COEF_INIT


FUNC_BEGIN VO_DRV_IsVHDR
    /*00015504*/ MOV         R0, #0 
    /*00015508*/ BX          LR 
FUNC_END VO_DRV_IsVHDR


FUNC_BEGIN VO_DRV_SetLayerBitWidth
    /*0001550c*/ CMP         R1, #1 
    /*00015510*/ PUSH        {R4, LR} 
    /*00015514*/ MOV         R4, R0 
    /*00015518*/ SUB         SP, SP, #16 
    /*0001551c*/ BEQ         VO_DRV_SetLayerBitWidth_x15560
    /*00015520*/ MOVCC       R1, #0 
    /*00015524*/ BCC         VO_DRV_SetLayerBitWidth_x15560
    /*00015528*/ CMP         R1, #4 
    /*0001552c*/ MOVEQ       R1, #3 
    /*00015530*/ BEQ         VO_DRV_SetLayerBitWidth_x15560
    /*00015534*/ STR         R1, [SP, #8] 
    /*00015538*/ MOV         R3, #328                    @ 0x148 
    /*0001553c*/ STR         R0, [SP, #4] 
    /*00015540*/ MOV         R1, #15 
    /*00015544*/ STR         R3, [SP] 
    /*00015548*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x72d0] 
    /*0001554c*/ LDR         R3, [PC, #28]               @ 0x0000000000015570 
    /*00015550*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x72d0] 
    /*00015554*/ MOV         R0, #4 
    /*00015558*/ BL          0x0000000000015558          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001555c*/ MOV         R1, #4 
    VO_DRV_SetLayerBitWidth_x15560:
    /*00015560*/ MOV         R0, R4 
    /*00015564*/ ADD         SP, SP, #16 
    /*00015568*/ POP         {R4, LR} 
    VO_DRV_SetLayerBitWidth_x1556c:
    /*0001556c*/ B           VO_DRV_SetLayerBitWidth_x1556c@ HAL_LAYER_SetLayerBitWidth [R_ARM_JUMP24: .text+0x1d16c] 
    /*00015570*/ ANDEQ       R0, R0, R8, LSR #26 
FUNC_END VO_DRV_SetLayerBitWidth


FUNC_BEGIN VO_DRV_SendCoef
    /*00015574*/ MOV         R0, #0 
    /*00015578*/ BX          LR 
FUNC_END VO_DRV_SendCoef


FUNC_BEGIN VO_DRV_HihdrConfig
    /*0001557c*/ BX          LR 
FUNC_END VO_DRV_HihdrConfig


FUNC_BEGIN VO_DRV_LayerBufAddrDistribute
    /*00015580*/ MOV         R0, #0 
    /*00015584*/ BX          LR 
FUNC_END VO_DRV_LayerBufAddrDistribute


FUNC_BEGIN VOU_DRV_Is_Progressive
    /*00015588*/ MOV         R3, #144                    @ 0x90 
    /*0001558c*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*00015590*/ MUL         R3, R3, R0 
    /*00015594*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*00015598*/ LDR         R3, [R2, R3] 
    /*0001559c*/ BICS        R3, R3, #2 
    /*000155a0*/ MOVWEQ      R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x188] 
    /*000155a4*/ MOVTEQ      R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x188] 
    /*000155a8*/ MOVEQ       R2, #20 
    /*000155ac*/ MOVNE       R0, #1 
    /*000155b0*/ MLAEQ       R0, R2, R0, R3 
    /*000155b4*/ MOVEQ       R1, #48                     @ 0x30 
    /*000155b8*/ LDREQ       R2, [R0, #2316]             @ 0x90c 
    /*000155bc*/ MLAEQ       R3, R1, R2, R3 
    /*000155c0*/ LDREQ       R0, [R3, #4] 
    /*000155c4*/ BX          LR 
FUNC_END VOU_DRV_Is_Progressive


FUNC_BEGIN VO_DRV_AddrInit
    /*000155c8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*000155cc*/ MOV         R8, R0 
    /*000155d0*/ SUB         SP, SP, #12 
    /*000155d4*/ MOV         SL, #54272                  @ 0xd400 
    /*000155d8*/ ADD         R0, R0, #192                @ 0xc0 
    /*000155dc*/ MOVT        SL, #6013                   @ 0x177d 
    /*000155e0*/ MOV         FP, #0 
    /*000155e4*/ MOV         R1, R8 
    /*000155e8*/ MOV         IP, #0 
    /*000155ec*/ STR         R8, [SP, #4] 
    VO_DRV_AddrInit_x155f0:
    /*000155f0*/ CMP         IP, #0 
    /*000155f4*/ BEQ         VO_DRV_AddrInit_x15894
    /*000155f8*/ LDRD        R8, [R1, #160]              @ 0xa0 
    /*000155fc*/ MOV         R2, #32768                  @ 0x8000 
    /*00015600*/ MOVT        R2, #1687                   @ 0x697 
    /*00015604*/ MOV         R3, #0 
    /*00015608*/ ADDS        R2, R2, R8 
    /*0001560c*/ ADC         R3, R3, R9 
    /*00015610*/ MOV         R8, R2 
    /*00015614*/ MOV         R9, R3 
    /*00015618*/ STRD        R8, [R1] 
    VO_DRV_AddrInit_x1561c:
    /*0001561c*/ MOV         R4, #49152                  @ 0xc000 
    /*00015620*/ MOVT        R4, #843                    @ 0x34b 
    /*00015624*/ ADDS        R4, R4, R8 
    /*00015628*/ MOV         R5, #0 
    /*0001562c*/ MOV         R2, #16384                  @ 0x4000 
    /*00015630*/ ADC         R5, R5, R9 
    /*00015634*/ MOVT        R2, #2531                   @ 0x9e3 
    /*00015638*/ STRD        R4, [R1, #24] 
    /*0001563c*/ ADD         R5, PC, #620                @ 0x26c 
    /*00015640*/ LDRD        R4, [R5] 
    /*00015644*/ ADDS        R2, R2, R8 
    /*00015648*/ ADD         R7, PC, #616                @ 0x268 
    /*0001564c*/ LDRD        R6, [R7] 
    /*00015650*/ MOV         R3, #0 
    /*00015654*/ ADC         R3, R3, R9 
    /*00015658*/ ADDS        R4, R4, R8 
    /*0001565c*/ STRD        R2, [R1, #48]               @ 0x30 
    /*00015660*/ MOV         R2, #54272                  @ 0xd400 
    /*00015664*/ MOVT        R2, #2638                   @ 0xa4e 
    /*00015668*/ ADC         R5, R5, R9 
    /*0001566c*/ ADDS        R2, R2, R8 
    /*00015670*/ STRD        R4, [R1, #72]               @ 0x48 
    /*00015674*/ ADD         R5, PC, #580                @ 0x244 
    /*00015678*/ LDRD        R4, [R5] 
    /*0001567c*/ MOV         R3, #0 
    /*00015680*/ ADC         R3, R3, R9 
    /*00015684*/ ADDS        R6, R6, R8 
    /*00015688*/ ADC         R7, R7, R9 
    /*0001568c*/ ADDS        R4, R4, R8 
    /*00015690*/ STRD        R2, [R1, #96]               @ 0x60 
    /*00015694*/ ADC         R5, R5, R9 
    /*00015698*/ ADD         IP, IP, #1 
    /*0001569c*/ ADDS        R2, R8, SL 
    /*000156a0*/ ADC         R3, R9, FP 
    /*000156a4*/ CMP         IP, #3 
    /*000156a8*/ STRD        R2, [R1, #168]              @ 0xa8 
    /*000156ac*/ MOV         LR, #10240                  @ 0x2800 
    /*000156b0*/ STRD        R4, [R1, #144]              @ 0x90 
    /*000156b4*/ MOV         R3, #20480                  @ 0x5000 
    /*000156b8*/ STRD        R6, [R1, #120]              @ 0x78 
    /*000156bc*/ MOV         R4, #32 
    /*000156c0*/ STR         LR, [R0], #4 
    /*000156c4*/ MOV         R2, #64                     @ 0x40 
    /*000156c8*/ ADD         R1, R1, #8 
    /*000156cc*/ STR         LR, [R0, #44]               @ 0x2c 
    /*000156d0*/ STR         LR, [R0, #68]               @ 0x44 
    /*000156d4*/ STR         R4, [R0, #20] 
    /*000156d8*/ STR         R2, [R0, #32] 
    /*000156dc*/ STR         R3, [R0, #8] 
    /*000156e0*/ STR         R3, [R0, #56]               @ 0x38 
    /*000156e4*/ STR         R3, [R0, #80]               @ 0x50 
    /*000156e8*/ BNE         VO_DRV_AddrInit_x155f0
    /*000156ec*/ LDR         R8, [SP, #4] 
    /*000156f0*/ MOV         IP, #1 
    /*000156f4*/ CMP         IP, #1 
    /*000156f8*/ MOV         SL, #0 
    /*000156fc*/ ADD         R7, R8, #288                @ 0x120 
    /*00015700*/ ADD         R6, R8, #336                @ 0x150 
    /*00015704*/ MOVT        SL, #270                    @ 0x10e 
    /*00015708*/ MOV         FP, #0 
    /*0001570c*/ MOV         R1, R7 
    /*00015710*/ MOV         R0, R6 
    /*00015714*/ MOV         LR, #2048                   @ 0x800 
    /*00015718*/ BEQ         VO_DRV_AddrInit_x1575c
    VO_DRV_AddrInit_x1571c:
    /*0001571c*/ LDRD        R2, [R1, #16] 
    /*00015720*/ ADDS        R4, R2, #8847360            @ 0x870000 
    /*00015724*/ ADC         R5, R3, #0 
    /*00015728*/ ADDS        R2, R2, SL 
    /*0001572c*/ ADC         R3, R3, FP 
    /*00015730*/ CMP         IP, #3 
    /*00015734*/ STRD        R4, [R1] 
    /*00015738*/ STRD        R2, [R1, #24] 
    /*0001573c*/ STR         LR, [R0] 
    /*00015740*/ STR         LR, [R0, #12] 
    /*00015744*/ BEQ         VO_DRV_AddrInit_x1579c
    VO_DRV_AddrInit_x15748:
    /*00015748*/ ADD         IP, IP, #1 
    /*0001574c*/ ADD         R1, R1, #8 
    /*00015750*/ CMP         IP, #1 
    /*00015754*/ ADD         R0, R0, #4 
    /*00015758*/ BNE         VO_DRV_AddrInit_x1571c
    VO_DRV_AddrInit_x1575c:
    /*0001575c*/ LDRD        R2, [R8, #184]              @ 0xb8 
    /*00015760*/ MOV         R4, #32768                  @ 0x8000 
    /*00015764*/ MOVT        R4, #1687                   @ 0x697 
    /*00015768*/ MOV         R5, #0 
    /*0001576c*/ ADDS        R4, R4, R2 
    /*00015770*/ ADC         R5, R5, R3 
    /*00015774*/ MOV         R2, R4 
    /*00015778*/ MOV         R3, R5 
    /*0001577c*/ STRD        R2, [R7] 
    /*00015780*/ LDRD        R2, [R1] 
    /*00015784*/ ADDS        R2, R2, #8847360            @ 0x870000 
    /*00015788*/ ADC         R3, R3, #0 
    /*0001578c*/ STRD        R2, [R1, #24] 
    /*00015790*/ STR         LR, [R0] 
    /*00015794*/ STR         LR, [R0, #12] 
    /*00015798*/ B           VO_DRV_AddrInit_x15748
    VO_DRV_AddrInit_x1579c:
    /*0001579c*/ LDRD        R2, [R6, #-8] 
    /*000157a0*/ ADD         R7, R8, #368                @ 0x170 
    /*000157a4*/ MOV         R0, #49152                  @ 0xc000 
    /*000157a8*/ MOVT        R0, #978                    @ 0x3d2 
    /*000157ac*/ ADDS        R4, R2, #8847360            @ 0x870000 
    /*000157b0*/ MOV         R1, #0 
    /*000157b4*/ ADC         R5, R3, #0 
    /*000157b8*/ ADDS        R0, R0, R2 
    /*000157bc*/ ADC         R1, R1, R3 
    /*000157c0*/ STRD        R0, [R7] 
    /*000157c4*/ MOV         R0, #16384                  @ 0x4000 
    /*000157c8*/ MOVT        R0, #2666                   @ 0xa6a 
    /*000157cc*/ STRD        R4, [R7, #-8] 
    /*000157d0*/ ADDS        R0, R0, R2 
    /*000157d4*/ ADD         R6, R8, #384                @ 0x180 
    /*000157d8*/ MOV         R4, #7168                   @ 0x1c00 
    /*000157dc*/ MOVT        R4, #2702                   @ 0xa8e 
    /*000157e0*/ ADD         LR, R8, #416                @ 0x1a0 
    /*000157e4*/ MOV         R1, #0 
    /*000157e8*/ ADC         R1, R1, R3 
    /*000157ec*/ ADDS        R4, R4, R2 
    /*000157f0*/ STRD        R0, [R6, #-8] 
    /*000157f4*/ MOV         R5, #0 
    /*000157f8*/ ADC         R5, R5, R3 
    /*000157fc*/ STRD        R4, [R6] 
    /*00015800*/ MOV         R4, #10240                  @ 0x2800 
    /*00015804*/ STR         R4, [R8, #392]              @ 0x188 
    /*00015808*/ MOV         R4, #20480                  @ 0x5000 
    /*0001580c*/ STR         R4, [R8, #396]              @ 0x18c 
    /*00015810*/ MOV         R4, #32 
    /*00015814*/ STR         R4, [R8, #400]              @ 0x190 
    /*00015818*/ MOV         R4, #64                     @ 0x40 
    /*0001581c*/ STR         R4, [R8, #404]              @ 0x194 
    /*00015820*/ MOV         R4, #24576                  @ 0x6000 
    /*00015824*/ MOVT        R4, #2666                   @ 0xa6a 
    /*00015828*/ STRD        R0, [LR, #-8] 
    /*0001582c*/ ADDS        R4, R4, R2 
    /*00015830*/ ADD         IP, R8, #432                @ 0x1b0 
    /*00015834*/ MOV         R0, #32768                  @ 0x8000 
    /*00015838*/ MOVT        R0, #2666                   @ 0xa6a 
    /*0001583c*/ MOV         R5, #0 
    /*00015840*/ ADC         R5, R5, R3 
    /*00015844*/ ADDS        R0, R0, R2 
    /*00015848*/ STRD        R4, [LR] 
    /*0001584c*/ MOV         R4, #32768                  @ 0x8000 
    /*00015850*/ MOVT        R4, #3206                   @ 0xc86 
    /*00015854*/ ADD         R6, R8, #448                @ 0x1c0 
    /*00015858*/ MOV         R1, #0 
    /*0001585c*/ ADC         R1, R1, R3 
    /*00015860*/ ADDS        R4, R4, R2 
    /*00015864*/ STRD        R0, [IP, #-8] 
    /*00015868*/ MOV         R0, #32768                  @ 0x8000 
    /*0001586c*/ MOVT        R0, #3746                   @ 0xea2 
    /*00015870*/ MOV         R5, #0 
    /*00015874*/ ADC         R5, R5, R3 
    /*00015878*/ ADDS        R2, R2, R0 
    /*0001587c*/ MOV         R1, #0 
    /*00015880*/ STRD        R4, [IP] 
    /*00015884*/ ADC         R3, R3, R1 
    /*00015888*/ STRD        R2, [R6, #-8] 
    /*0001588c*/ ADD         SP, SP, #12 
    /*00015890*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VO_DRV_AddrInit_x15894:
    /*00015894*/ LDR         LR, [SP, #4] 
    /*00015898*/ MOV         R2, #268435456              @ 0x10000000 
    /*0001589c*/ MOV         R3, #0 
    /*000158a0*/ STRD        R2, [LR] 
    /*000158a4*/ LDRD        R8, [R1] 
    /*000158a8*/ B           VO_DRV_AddrInit_x1561c
    /*000158ac*/ NOP         {0} 
    /*000158b0*/ BEQ         0x00000000001DC8B8 
    /*000158b4*/ ANDEQ       R0, R0, R0 
    /*000158b8*/ CFLDRSEQ    MVF9, [SL] 
    /*000158bc*/ ANDEQ       R0, R0, R0 
    /*000158c0*/ LDRTNE      R1, [R2], #-1024            @ 0xfffffc00 
    /*000158c4*/ ANDEQ       R0, R0, R0 
FUNC_END VO_DRV_AddrInit


FUNC_BEGIN VDP_MAC_VID_SetDcmpSeg
    /*000158c8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*000158cc*/ MOV         R9, R1 
    /*000158d0*/ LDR         R3, [R2, #24] 
    /*000158d4*/ SUB         SP, SP, #40                 @ 0x28 
    /*000158d8*/ MOV         R1, #0 
    /*000158dc*/ LDR         R4, [R2, #332]              @ 0x14c 
    /*000158e0*/ SUBS        R3, R3, R1 
    /*000158e4*/ LDR         LR, [R2, #12] 
    /*000158e8*/ LDR         IP, [R2] 
    /*000158ec*/ MOV         R0, #2 
    /*000158f0*/ LDR         R2, [R2, #4] 
    /*000158f4*/ MOVNE       R3, #1 
    /*000158f8*/ STR         R3, [SP, #12] 
    /*000158fc*/ MOV         R3, #1 
    /*00015900*/ MOV         R7, R1 
    /*00015904*/ MOV         R6, R3 
    /*00015908*/ STR         R2, [SP, #24] 
    /*0001590c*/ STR         R1, [SP, #28] 
    /*00015910*/ STR         R1, [SP, #32] 
    /*00015914*/ STR         R3, [SP, #8] 
    /*00015918*/ STR         R3, [SP, #36]               @ 0x24 
    /*0001591c*/ STR         R4, [SP] 
    /*00015920*/ STR         LR, [SP, #4] 
    /*00015924*/ STR         IP, [SP, #20] 
    /*00015928*/ BL          0x0000000000015928          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001592c*/ LDR         R2, [PC, #244]              @ 0x0000000000015a28 
    /*00015930*/ SUB         R5, R2, #216                @ 0xd8 
    /*00015934*/ MOV         SL, R2 
    /*00015938*/ MOV         R1, R5 
    /*0001593c*/ LDR         R3, [R0, #128]              @ 0x80 
    /*00015940*/ MOV         R0, SP 
    /*00015944*/ BLX         R3 
    VDP_MAC_VID_SetDcmpSeg_x15948:
    /*00015948*/ LDR         R4, [R9] 
    /*0001594c*/ CMP         R4, #0 
    /*00015950*/ BEQ         VDP_MAC_VID_SetDcmpSeg_x15970
    VDP_MAC_VID_SetDcmpSeg_x15954:
    /*00015954*/ CMP         R7, #1 
    /*00015958*/ ADD         R6, R6, #2 
    /*0001595c*/ MOV         R7, #1 
    /*00015960*/ MOV         R5, SL 
    /*00015964*/ BNE         VDP_MAC_VID_SetDcmpSeg_x15948
    /*00015968*/ ADD         SP, SP, #40                 @ 0x28 
    /*0001596c*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VDP_MAC_VID_SetDcmpSeg_x15970:
    /*00015970*/ LSL         R8, R7, #1 
    /*00015974*/ LDR         R2, [R9, #24] 
    /*00015978*/ MOV         R0, R4 
    /*0001597c*/ MOV         R1, R8 
    /*00015980*/ BL          0x0000000000015980          @ VDP_DCMP_SetIceEn [R_ARM_CALL: .text+0x1eb9c] 
    /*00015984*/ MOV         R1, R8 
    /*00015988*/ LDR         R2, [R5, #12] 
    /*0001598c*/ MOV         R0, R4 
    /*00015990*/ BL          0x0000000000015990          @ VDP_DCMP_SetCmpMode [R_ARM_CALL: .text+0x1eb3c] 
    /*00015994*/ LDR         R2, [R5, #44]               @ 0x2c 
    /*00015998*/ MOV         R1, R8 
    /*0001599c*/ MOV         R0, R4 
    /*000159a0*/ SUB         R2, R2, #1 
    /*000159a4*/ BL          0x00000000000159A4          @ VDP_DCMP_SetFrameHeight [R_ARM_CALL: .text+0x1ebfc] 
    /*000159a8*/ LDR         R2, [R5, #40]               @ 0x28 
    /*000159ac*/ MOV         R1, R8 
    /*000159b0*/ MOV         R0, R4 
    /*000159b4*/ SUB         R2, R2, #1 
    /*000159b8*/ BL          0x00000000000159B8          @ VDP_DCMP_SetFrameWidth [R_ARM_CALL: .text+0x1ec5c] 
    /*000159bc*/ MOV         R1, R8 
    /*000159c0*/ LDR         R2, [R5, #8] 
    /*000159c4*/ MOV         R0, R4 
    /*000159c8*/ BL          0x00000000000159C8          @ VDP_DCMP_SetIsLossless [R_ARM_CALL: .text+0x1eadc] 
    /*000159cc*/ LDR         R2, [R9, #24] 
    /*000159d0*/ MOV         R1, R6 
    /*000159d4*/ MOV         R0, R4 
    /*000159d8*/ BL          0x00000000000159D8          @ VDP_DCMP_SetIceEn [R_ARM_CALL: .text+0x1eb9c] 
    /*000159dc*/ LDR         R2, [R5, #12] 
    /*000159e0*/ MOV         R1, R6 
    /*000159e4*/ MOV         R0, R4 
    /*000159e8*/ BL          0x00000000000159E8          @ VDP_DCMP_SetCmpMode [R_ARM_CALL: .text+0x1eb3c] 
    /*000159ec*/ LDR         R2, [R5, #44]               @ 0x2c 
    /*000159f0*/ MOV         R1, R6 
    /*000159f4*/ MOV         R0, R4 
    /*000159f8*/ SUB         R2, R2, #1 
    /*000159fc*/ BL          0x00000000000159FC          @ VDP_DCMP_SetFrameHeight [R_ARM_CALL: .text+0x1ebfc] 
    /*00015a00*/ LDR         R2, [R5, #40]               @ 0x28 
    /*00015a04*/ MOV         R1, R6 
    /*00015a08*/ MOV         R0, R4 
    /*00015a0c*/ SUB         R2, R2, #1 
    /*00015a10*/ BL          0x0000000000015A10          @ VDP_DCMP_SetFrameWidth [R_ARM_CALL: .text+0x1ec5c] 
    /*00015a14*/ LDR         R2, [R5, #8] 
    /*00015a18*/ MOV         R0, R4 
    /*00015a1c*/ MOV         R1, R6 
    /*00015a20*/ BL          0x0000000000015A20          @ VDP_DCMP_SetIsLossless [R_ARM_CALL: .text+0x1eadc] 
    /*00015a24*/ B           VDP_MAC_VID_SetDcmpSeg_x15954
    /*00015a28*/ STRDEQ      R3, [R0], -R0 
FUNC_END VDP_MAC_VID_SetDcmpSeg


FUNC_BEGIN VDP_VID_SetSingleDcmpCfg
    /*00015a2c*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00015a30*/ SUB         SP, SP, #84                 @ 0x54 
    /*00015a34*/ MOV         R4, R0 
    /*00015a38*/ MOV         R5, R1 
    /*00015a3c*/ MOV         R7, R2 
    /*00015a40*/ MOV         R1, #0 
    /*00015a44*/ MOV         R2, #80                     @ 0x50 
    /*00015a48*/ MOV         R0, SP 
    /*00015a4c*/ BL          0x0000000000015A4C          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00015a50*/ LDR         R1, [R5] 
    /*00015a54*/ MOV         R0, R4 
    /*00015a58*/ LDR         R6, [R5, #268]              @ 0x10c 
    /*00015a5c*/ BL          0x0000000000015A5C          @ VDP_FDR_VID_SetVhdaddrL [R_ARM_CALL: .text+0x1eda0] 
    /*00015a60*/ LDR         R1, [R5, #8] 
    /*00015a64*/ MOV         R0, R4 
    /*00015a68*/ BL          0x0000000000015A68          @ VDP_FDR_VID_SetVhdcaddrL [R_ARM_CALL: .text+0x1ee48] 
    /*00015a6c*/ LDR         R1, [R5, #48]               @ 0x30 
    /*00015a70*/ MOV         R0, R4 
    /*00015a74*/ BL          0x0000000000015A74          @ VDP_FDR_VID_SetHVhdaddrL [R_ARM_CALL: .text+0x1f19c] 
    /*00015a78*/ LDR         R1, [R5, #56]               @ 0x38 
    /*00015a7c*/ MOV         R0, R4 
    /*00015a80*/ BL          0x0000000000015A80          @ VDP_FDR_VID_SetHVhdcaddrL [R_ARM_CALL: .text+0x1f244] 
    /*00015a84*/ LDR         R1, [R5, #24] 
    /*00015a88*/ MOV         R0, R4 
    /*00015a8c*/ BL          0x0000000000015A8C          @ VDP_FDR_VID_SetVhdnaddrL [R_ARM_CALL: .text+0x1eef0] 
    /*00015a90*/ LDR         R1, [R5, #32] 
    /*00015a94*/ MOV         R0, R4 
    /*00015a98*/ BL          0x0000000000015A98          @ VDP_FDR_VID_SetVhdncaddrL [R_ARM_CALL: .text+0x1ef98] 
    /*00015a9c*/ LDR         R1, [R5, #4] 
    /*00015aa0*/ MOV         R0, R4 
    /*00015aa4*/ BL          0x0000000000015AA4          @ VDP_FDR_VID_SetVhdaddrH [R_ARM_CALL: .text+0x1ed4c] 
    /*00015aa8*/ LDR         R1, [R5, #12] 
    /*00015aac*/ MOV         R0, R4 
    /*00015ab0*/ BL          0x0000000000015AB0          @ VDP_FDR_VID_SetVhdcaddrH [R_ARM_CALL: .text+0x1edf4] 
    /*00015ab4*/ LDR         R1, [R5, #52]               @ 0x34 
    /*00015ab8*/ MOV         R0, R4 
    /*00015abc*/ BL          0x0000000000015ABC          @ VDP_FDR_VID_SetHVhdaddrH [R_ARM_CALL: .text+0x1f298] 
    /*00015ac0*/ LDR         R1, [R5, #60]               @ 0x3c 
    /*00015ac4*/ MOV         R0, R4 
    /*00015ac8*/ BL          0x0000000000015AC8          @ VDP_FDR_VID_SetHVhdcaddrH [R_ARM_CALL: .text+0x1f1f0] 
    /*00015acc*/ LDR         R1, [R5, #28] 
    /*00015ad0*/ MOV         R0, R4 
    /*00015ad4*/ BL          0x0000000000015AD4          @ VDP_FDR_VID_SetVhdnaddrH [R_ARM_CALL: .text+0x1ee9c] 
    /*00015ad8*/ LDR         R1, [R5, #36]               @ 0x24 
    /*00015adc*/ MOV         R0, R4 
    /*00015ae0*/ BL          0x0000000000015AE0          @ VDP_FDR_VID_SetVhdncaddrH [R_ARM_CALL: .text+0x1ef44] 
    /*00015ae4*/ LDR         R1, [R5, #16] 
    /*00015ae8*/ MOV         R0, R4 
    /*00015aec*/ BL          0x0000000000015AEC          @ VDP_FDR_VID_SetLmStride [R_ARM_CALL: .text+0x1f034] 
    /*00015af0*/ LDR         R1, [R5, #20] 
    /*00015af4*/ MOV         R0, R4 
    /*00015af8*/ BL          0x0000000000015AF8          @ VDP_FDR_VID_SetChmStride [R_ARM_CALL: .text+0x1efec] 
    /*00015afc*/ LDR         R1, [R5, #64]               @ 0x40 
    /*00015b00*/ MOV         R0, R4 
    /*00015b04*/ BL          0x0000000000015B04          @ VDP_FDR_VID_SetLmHeadStride [R_ARM_CALL: .text+0x1f154] 
    /*00015b08*/ LDR         R1, [R5, #68]               @ 0x44 
    /*00015b0c*/ MOV         R0, R4 
    /*00015b10*/ BL          0x0000000000015B10          @ VDP_FDR_VID_SetChmHeadStride [R_ARM_CALL: .text+0x1f10c] 
    /*00015b14*/ LDR         R1, [R5, #40]               @ 0x28 
    /*00015b18*/ MOV         R0, R4 
    /*00015b1c*/ BL          0x0000000000015B1C          @ VDP_FDR_VID_SetLmTileStride [R_ARM_CALL: .text+0x1f0c4] 
    /*00015b20*/ LDR         R1, [R5, #44]               @ 0x2c 
    /*00015b24*/ MOV         R0, R4 
    /*00015b28*/ BL          0x0000000000015B28          @ VDP_FDR_VID_SetChmTileStride [R_ARM_CALL: .text+0x1f07c] 
    /*00015b2c*/ MOV         R0, R4 
    /*00015b30*/ MOV         R1, #1 
    /*00015b34*/ BL          0x0000000000015B34          @ HAL_FDR_VID_SetVidOutUVOrder [R_ARM_CALL: .text+0x1f334] 
    /*00015b38*/ LDR         R3, [R5, #180]              @ 0xb4 
    /*00015b3c*/ MOV         R1, #0 
    /*00015b40*/ MOV         R0, R4 
    /*00015b44*/ CMP         R3, #1 
    /*00015b48*/ STR         R4, [SP] 
    /*00015b4c*/ MOVNE       R3, #0 
    /*00015b50*/ STR         R3, [SP, #24] 
    /*00015b54*/ BL          0x0000000000015B54          @ VO_DRV_SetLayerBitWidth [R_ARM_CALL: .text+0x1550c] 
    /*00015b58*/ CMP         R4, #0 
    /*00015b5c*/ BEQ         VDP_VID_SetSingleDcmpCfg_x15b8c
    /*00015b60*/ LDR         R3, [R5, #120]              @ 0x78 
    /*00015b64*/ CMP         R3, #1 
    /*00015b68*/ BEQ         VDP_VID_SetSingleDcmpCfg_x15bb4
    VDP_VID_SetSingleDcmpCfg_x15b6c:
    /*00015b6c*/ LDR         R1, [R6] 
    /*00015b70*/ MOV         R0, R4 
    /*00015b74*/ BL          0x0000000000015B74          @ VDP_FDR_VID_SetMrgEnable [R_ARM_CALL: .text+0x1ecbc] 
    /*00015b78*/ MOV         R0, R4 
    /*00015b7c*/ MOV         R1, #1 
    /*00015b80*/ BL          0x0000000000015B80          @ VDP_FDR_VID_SetMrgMuteMode [R_ARM_CALL: .text+0x1ed04] 
    /*00015b84*/ ADD         SP, SP, #84                 @ 0x54 
    /*00015b88*/ POP         {R4, R5, R6, R7, PC} 
    VDP_VID_SetSingleDcmpCfg_x15b8c:
    /*00015b8c*/ LDR         R1, [R5, #180]              @ 0xb4 
    /*00015b90*/ MOV         R0, R4 
    /*00015b94*/ BL          0x0000000000015B94          @ HAL_FDR_VID_SetDcmpEn [R_ARM_CALL: .text+0x1f2ec] 
    /*00015b98*/ MOV         R2, R7 
    /*00015b9c*/ MOV         R1, SP 
    /*00015ba0*/ MOV         R0, R4 
    /*00015ba4*/ BL          0x0000000000015BA4          @ VDP_MAC_VID_SetDcmpSeg [R_ARM_CALL: .text+0x158c8] 
    /*00015ba8*/ LDR         R3, [R5, #120]              @ 0x78 
    /*00015bac*/ CMP         R3, #1 
    /*00015bb0*/ BNE         VDP_VID_SetSingleDcmpCfg_x15b6c
    VDP_VID_SetSingleDcmpCfg_x15bb4:
    /*00015bb4*/ MOV         R2, #0 
    /*00015bb8*/ MOV         R1, #2 
    /*00015bbc*/ MOV         R0, R2 
    /*00015bc0*/ BL          0x0000000000015BC0          @ VDP_DCMP_SetIceEn [R_ARM_CALL: .text+0x1eb9c] 
    /*00015bc4*/ MOV         R2, #0 
    /*00015bc8*/ MOV         R0, R2 
    /*00015bcc*/ MOV         R1, #3 
    /*00015bd0*/ BL          0x0000000000015BD0          @ VDP_DCMP_SetIceEn [R_ARM_CALL: .text+0x1eb9c] 
    /*00015bd4*/ B           VDP_VID_SetSingleDcmpCfg_x15b6c
FUNC_END VDP_VID_SetSingleDcmpCfg


FUNC_BEGIN VO_DRV_VID_FdrDcmpCfg
    /*00015bd8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00015bdc*/ SUB         SP, SP, #280                @ 0x118 
    /*00015be0*/ MOV         R4, R1 
    /*00015be4*/ MOV         R8, R0 
    /*00015be8*/ MOV         R2, #280                    @ 0x118 
    /*00015bec*/ MOV         R0, SP 
    /*00015bf0*/ MOV         R1, #0 
    /*00015bf4*/ BL          0x0000000000015BF4          @ memset [R_ARM_CALL: +0x0] 
    /*00015bf8*/ LDRD        R6, [R4, #120]              @ 0x78 
    /*00015bfc*/ LDR         IP, [R4, #44]               @ 0x2c 
    /*00015c00*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*00015c04*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*00015c08*/ LDR         R2, [R4, #24] 
    /*00015c0c*/ STRD        R6, [SP] 
    /*00015c10*/ MOV         R1, SP 
    /*00015c14*/ LDRD        R6, [R4, #128]              @ 0x80 
    /*00015c18*/ ADDS        R2, R2, #0 
    /*00015c1c*/ STR         IP, [SP, #16] 
    /*00015c20*/ MOV         IP, #0 
    /*00015c24*/ STR         IP, [R3, #576]              @ 0x240 
    /*00015c28*/ ADD         IP, R3, #576                @ 0x240 
    /*00015c2c*/ STRD        R6, [SP, #8] 
    /*00015c30*/ MOVNE       R2, #1 
    /*00015c34*/ LDRD        R6, [R4, #168]              @ 0xa8 
    /*00015c38*/ MOV         R0, R8 
    /*00015c3c*/ STR         IP, [SP, #268]              @ 0x10c 
    /*00015c40*/ MOV         R3, #1 
    /*00015c44*/ LDR         IP, [R4, #36]               @ 0x24 
    /*00015c48*/ LDR         R5, [R4, #48]               @ 0x30 
    /*00015c4c*/ STRD        R6, [SP, #24] 
    /*00015c50*/ STR         IP, [SP, #68]               @ 0x44 
    /*00015c54*/ LDRD        R6, [R4, #176]              @ 0xb0 
    /*00015c58*/ LDR         IP, [R4, #56]               @ 0x38 
    /*00015c5c*/ LDR         LR, [R4, #32] 
    /*00015c60*/ STR         R2, [SP, #124]              @ 0x7c 
    /*00015c64*/ MOV         R2, R4 
    /*00015c68*/ STR         R5, [SP, #20] 
    /*00015c6c*/ STR         IP, [SP, #40]               @ 0x28 
    /*00015c70*/ STRD        R6, [SP, #32] 
    /*00015c74*/ LDR         IP, [R4, #60]               @ 0x3c 
    /*00015c78*/ LDRD        R6, [R4, #72]               @ 0x48 
    /*00015c7c*/ LDRD        R4, [R4, #80]               @ 0x50 
    /*00015c80*/ STR         LR, [SP, #64]               @ 0x40 
    /*00015c84*/ STR         IP, [SP, #44]               @ 0x2c 
    /*00015c88*/ STRD        R6, [SP, #48]               @ 0x30 
    /*00015c8c*/ STR         R3, [SP, #180]              @ 0xb4 
    /*00015c90*/ STRD        R4, [SP, #56]               @ 0x38 
    /*00015c94*/ BL          0x0000000000015C94          @ VDP_VID_SetSingleDcmpCfg [R_ARM_CALL: .text+0x15a2c] 
    /*00015c98*/ ADD         SP, SP, #280                @ 0x118 
    /*00015c9c*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VO_DRV_VID_FdrDcmpCfg


FUNC_BEGIN VO_FUNC_GetZmeCommPqCfg
    /*00015ca0*/ BX          LR 
FUNC_END VO_FUNC_GetZmeCommPqCfg


FUNC_BEGIN VO_FUNC_SetV0ZmeMode
    /*00015ca4*/ BX          LR 
FUNC_END VO_FUNC_SetV0ZmeMode


FUNC_BEGIN VO_DRV_vSetV0ZmeCoef
    /*00015ca8*/ MOV         R0, #0 
    /*00015cac*/ B           0x00000000000154C4 
FUNC_END VO_DRV_vSetV0ZmeCoef


FUNC_BEGIN VDP_FUNC_GetCvfirPqCfg
    /*00015cb0*/ CMP         R1, #0 
    /*00015cb4*/ LDR         R3, [R0] 
    /*00015cb8*/ BEQ         VDP_FUNC_GetCvfirPqCfg_x15d38
    /*00015cbc*/ CMP         R1, #3 
    /*00015cc0*/ LDR         R0, [R0, #4] 
    /*00015cc4*/ BEQ         VDP_FUNC_GetCvfirPqCfg_x15da8
    /*00015cc8*/ CMP         R1, #4 
    /*00015ccc*/ BXNE        LR 
    /*00015cd0*/ MOV         R1, #0 
    /*00015cd4*/ RSB         R3, R3, #0 
    /*00015cd8*/ RSB         R0, R0, #0 
    /*00015cdc*/ STR         R3, [R2] 
    /*00015ce0*/ STR         R3, [R2, #4] 
    /*00015ce4*/ STR         R3, [R2, #8] 
    /*00015ce8*/ STR         R3, [R2, #12] 
    /*00015cec*/ STR         R0, [R2, #16] 
    /*00015cf0*/ STR         R0, [R2, #20] 
    /*00015cf4*/ STR         R1, [R2, #24] 
    /*00015cf8*/ STR         R1, [R2, #28] 
    /*00015cfc*/ STR         R1, [R2, #32] 
    /*00015d00*/ STR         R1, [R2, #36]               @ 0x24 
    /*00015d04*/ STR         R1, [R2, #40]               @ 0x28 
    /*00015d08*/ STR         R1, [R2, #44]               @ 0x2c 
    /*00015d0c*/ STR         R1, [R2, #48]               @ 0x30 
    /*00015d10*/ STR         R1, [R2, #52]               @ 0x34 
    /*00015d14*/ STR         R1, [R2, #56]               @ 0x38 
    /*00015d18*/ STR         R1, [R2, #60]               @ 0x3c 
    /*00015d1c*/ STR         R1, [R2, #64]               @ 0x40 
    /*00015d20*/ STR         R1, [R2, #68]               @ 0x44 
    /*00015d24*/ STR         R1, [R2, #72]               @ 0x48 
    /*00015d28*/ STR         R1, [R2, #76]               @ 0x4c 
    /*00015d2c*/ STR         R1, [R2, #80]               @ 0x50 
    /*00015d30*/ STR         R1, [R2, #84]               @ 0x54 
    /*00015d34*/ BX          LR 
    VDP_FUNC_GetCvfirPqCfg_x15d38:
    /*00015d38*/ RSB         R3, R3, #0 
    /*00015d3c*/ MOV         R0, #1 
    /*00015d40*/ MOV         IP, #32 
    /*00015d44*/ STR         R1, [R2] 
    /*00015d48*/ LSR         R3, R3, R0 
    /*00015d4c*/ STR         R1, [R2, #4] 
    /*00015d50*/ STR         R3, [R2, #8] 
    /*00015d54*/ STR         R3, [R2, #12] 
    /*00015d58*/ MOV         R3, #16 
    /*00015d5c*/ STR         R1, [R2, #16] 
    /*00015d60*/ STR         R1, [R2, #20] 
    /*00015d64*/ STR         R0, [R2, #24] 
    /*00015d68*/ STR         R0, [R2, #28] 
    /*00015d6c*/ STR         R0, [R2, #40]               @ 0x28 
    /*00015d70*/ STR         R0, [R2, #44]               @ 0x2c 
    /*00015d74*/ STR         R0, [R2, #56]               @ 0x38 
    /*00015d78*/ STR         R0, [R2, #60]               @ 0x3c 
    /*00015d7c*/ STR         R0, [R2, #72]               @ 0x48 
    /*00015d80*/ STR         R0, [R2, #76]               @ 0x4c 
    /*00015d84*/ STR         IP, [R2, #32] 
    /*00015d88*/ STR         IP, [R2, #48]               @ 0x30 
    /*00015d8c*/ STR         IP, [R2, #64]               @ 0x40 
    /*00015d90*/ STR         IP, [R2, #80]               @ 0x50 
    /*00015d94*/ STR         R3, [R2, #36]               @ 0x24 
    /*00015d98*/ STR         R3, [R2, #52]               @ 0x34 
    /*00015d9c*/ STR         R3, [R2, #68]               @ 0x44 
    /*00015da0*/ STR         R3, [R2, #84]               @ 0x54 
    /*00015da4*/ BX          LR 
    VDP_FUNC_GetCvfirPqCfg_x15da8:
    /*00015da8*/ MOV         R1, #1 
    /*00015dac*/ ADD         R3, R3, R3, LSL #1 
    /*00015db0*/ MOV         IP, #255                    @ 0xff 
    /*00015db4*/ ADD         R0, R0, R0, LSL #1 
    /*00015db8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00015dbc*/ MOV         LR, #63                     @ 0x3f 
    /*00015dc0*/ STR         R3, [R2] 
    /*00015dc4*/ STR         R3, [R2, #4] 
    /*00015dc8*/ STR         R3, [R2, #8] 
    /*00015dcc*/ STR         R3, [R2, #12] 
    /*00015dd0*/ STR         R0, [R2, #16] 
    /*00015dd4*/ STR         R0, [R2, #20] 
    /*00015dd8*/ STR         R1, [R2, #24] 
    /*00015ddc*/ STR         R1, [R2, #28] 
    /*00015de0*/ STR         R1, [R2, #40]               @ 0x28 
    /*00015de4*/ STR         R1, [R2, #44]               @ 0x2c 
    /*00015de8*/ STR         R1, [R2, #56]               @ 0x38 
    /*00015dec*/ STR         R1, [R2, #60]               @ 0x3c 
    /*00015df0*/ STR         R1, [R2, #72]               @ 0x48 
    /*00015df4*/ STR         R1, [R2, #76]               @ 0x4c 
    /*00015df8*/ STR         LR, [R2, #32] 
    /*00015dfc*/ STR         LR, [R2, #48]               @ 0x30 
    /*00015e00*/ STR         LR, [R2, #64]               @ 0x40 
    /*00015e04*/ STR         LR, [R2, #80]               @ 0x50 
    /*00015e08*/ STR         IP, [R2, #36]               @ 0x24 
    /*00015e0c*/ STR         IP, [R2, #52]               @ 0x34 
    /*00015e10*/ STR         IP, [R2, #68]               @ 0x44 
    /*00015e14*/ STR         IP, [R2, #84]               @ 0x54 
    /*00015e18*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VDP_FUNC_GetCvfirPqCfg


FUNC_BEGIN VOU_DRV_SetLayerCvfirMode.constprop.7
    /*00015e1c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00015e20*/ MOV         R7, #0 
    /*00015e24*/ SUB         SP, SP, #108                @ 0x6c 
    /*00015e28*/ MOV         R4, R0 
    /*00015e2c*/ MOV         R5, R1 
    /*00015e30*/ ADD         R0, SP, #16 
    /*00015e34*/ MOV         R1, R7 
    /*00015e38*/ MOV         R2, #88                     @ 0x58 
    /*00015e3c*/ BL          0x0000000000015E3C          @ memset [R_ARM_CALL: +0x0] 
    /*00015e40*/ LDR         R3, [R5, #20] 
    /*00015e44*/ LDR         R6, [R5, #16] 
    /*00015e48*/ MOV         IP, #4096                   @ 0x1000 
    /*00015e4c*/ LDR         LR, [R5, #56]               @ 0x38 
    /*00015e50*/ LSL         R1, R3, #12 
    /*00015e54*/ STR         IP, [SP, #8] 
    /*00015e58*/ MOV         R2, R6 
    /*00015e5c*/ ORR         R1, R1, R6, LSR #20 
    /*00015e60*/ LSL         R0, R6, #12 
    /*00015e64*/ LDR         SL, [R5] 
    /*00015e68*/ LDR         R9, [R5, #48]               @ 0x30 
    /*00015e6c*/ LDR         R8, [R5, #52]               @ 0x34 
    /*00015e70*/ LDR         FP, [R5, #4] 
    /*00015e74*/ STR         LR, [SP] 
    /*00015e78*/ MOV         LR, #1048576                @ 0x100000 
    /*00015e7c*/ LDR         R5, [R5, #8] 
    /*00015e80*/ STR         LR, [SP, #12] 
    /*00015e84*/ BL          0x0000000000015E84          @ osal_div64_u64 [R_ARM_CALL: +0x0] 
    /*00015e88*/ ADD         R2, SP, #16 
    /*00015e8c*/ MOV         R1, R7 
    /*00015e90*/ STR         R0, [SP, #4] 
    /*00015e94*/ ADD         R0, SP, #8 
    /*00015e98*/ BL          0x0000000000015E98          @ VDP_FUNC_GetCvfirPqCfg [R_ARM_CALL: .text+0x15cb0] 
    /*00015e9c*/ SUB         R1, R6, #1 
    /*00015ea0*/ MOV         R0, R4 
    /*00015ea4*/ LDR         R7, [SP, #20] 
    /*00015ea8*/ LDR         R6, [SP, #28] 
    /*00015eac*/ BL          0x0000000000015EAC          @ HAL_VIDEO_CVFIR_SetOutHeight [R_ARM_CALL: .text+0x1d2ac] 
    /*00015eb0*/ MOV         R1, R5 
    /*00015eb4*/ MOV         R0, R4 
    /*00015eb8*/ BL          0x0000000000015EB8          @ HAL_VIDEO_CVFIR_SetOutFmt [R_ARM_CALL: .text+0x1d2f8] 
    /*00015ebc*/ MOV         R1, FP 
    /*00015ec0*/ MOV         R0, R4 
    /*00015ec4*/ BL          0x0000000000015EC4          @ HAL_VIDEO_CVFIR_SetOutPro [R_ARM_CALL: .text+0x1d340] 
    /*00015ec8*/ MOV         R1, SL 
    /*00015ecc*/ MOV         R0, R4 
    /*00015ed0*/ BL          0x0000000000015ED0          @ HAL_VIDEO_CVFIR_SetVzmeCkGtEn [R_ARM_CALL: .text+0x1d388] 
    /*00015ed4*/ MOV         R1, R9 
    /*00015ed8*/ MOV         R0, R4 
    /*00015edc*/ BL          0x0000000000015EDC          @ HAL_VIDEO_CVFIR_SetCvfirEn [R_ARM_CALL: .text+0x1d3d0] 
    /*00015ee0*/ MOV         R1, R8 
    /*00015ee4*/ MOV         R0, R4 
    /*00015ee8*/ BL          0x0000000000015EE8          @ HAL_VIDEO_CVFIR_SetCvmidEn [R_ARM_CALL: .text+0x1d41c] 
    /*00015eec*/ LDR         R1, [SP] 
    /*00015ef0*/ MOV         R0, R4 
    /*00015ef4*/ BL          0x0000000000015EF4          @ HAL_VIDEO_CVFIR_SetCvfirMode [R_ARM_CALL: .text+0x1d468] 
    /*00015ef8*/ LDR         R3, [SP, #4] 
    /*00015efc*/ MOV         R0, R4 
    /*00015f00*/ MOV         R1, R3 
    /*00015f04*/ BL          0x0000000000015F04          @ HAL_VIDEO_CVFIR_SetVratio [R_ARM_CALL: .text+0x1d4b4] 
    /*00015f08*/ MOV         R1, R7 
    /*00015f0c*/ MOV         R0, R4 
    /*00015f10*/ BL          0x0000000000015F10          @ HAL_VIDEO_CVFIR_SetVChromaOffset [R_ARM_CALL: .text+0x1d500] 
    /*00015f14*/ MOV         R1, R6 
    /*00015f18*/ MOV         R0, R4 
    /*00015f1c*/ BL          0x0000000000015F1C          @ HAL_VIDEO_CVFIR_SetVbChromaOffset [R_ARM_CALL: .text+0x1d54c] 
    /*00015f20*/ ADD         SP, SP, #108                @ 0x6c 
    /*00015f24*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END VOU_DRV_SetLayerCvfirMode.constprop.7


FUNC_BEGIN vSetV0ZmeCoef
    /*00015f28*/ BX          LR 
FUNC_END vSetV0ZmeCoef


FUNC_BEGIN VDP_FUNC_SetV0HfirMode
    /*00015f2c*/ BX          LR 
FUNC_END VDP_FUNC_SetV0HfirMode


FUNC_BEGIN VDP_FUNC_SetV1HfirMode
    /*00015f30*/ BX          LR 
FUNC_END VDP_FUNC_SetV1HfirMode


FUNC_BEGIN VO_VID_SetCscMode
    /*00015f34*/ BX          LR 
FUNC_END VO_VID_SetCscMode


FUNC_BEGIN VO_FUNC_SetCscV1Mode
    /*00015f38*/ BX          LR 
FUNC_END VO_FUNC_SetCscV1Mode


FUNC_BEGIN VOU_DRV_CalcCscMatrix
    /*00015f3c*/ MOV         IP, #60                     @ 0x3c 
    /*00015f40*/ LSL         R0, R0, #6 
    /*00015f44*/ MUL         R2, IP, R2 
    /*00015f48*/ PUSH        {R3, R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00015f4c*/ MOVW        R4, #34079                  @ 0x851f 
    /*00015f50*/ MOVT        R4, #20971                  @ 0x51eb 
    /*00015f54*/ LSL         R6, R1, #1 
    /*00015f58*/ LDR         R1, [SP, #40]               @ 0x28 
    /*00015f5c*/ ASR         LR, R0, #31 
    /*00015f60*/ SMULL       R8, R9, R0, R4 
    /*00015f64*/ SUB         R0, R1, #1 
    /*00015f68*/ SMULL       R4, R5, R2, R4 
    /*00015f6c*/ ASR         R2, R2, #31 
    /*00015f70*/ LSL         R3, R3, #1 
    /*00015f74*/ LDR         R4, [SP, #44]               @ 0x2c 
    /*00015f78*/ RSB         LR, LR, R9, ASR #5 
    /*00015f7c*/ SUB         LR, LR, #32 
    /*00015f80*/ RSB         R2, R2, R5, ASR #5 
    /*00015f84*/ CMP         R0, #14 
    /*00015f88*/ LDRLS       PC, [PC, R0, LSL #2] 
    /*00015f8c*/ B           VOU_DRV_CalcCscMatrix_x16228
    /*00015f90*/ ANDEQ       R5, R1, IP, ASR #31 
    /*00015f94*/ ANDEQ       R5, R1, IP, ASR #31 
    /*00015f98*/ ANDEQ       R5, R1, IP, ASR #31 
    /*00015f9c*/ ANDEQ       R6, R1, R8, ASR #3 
    /*00015fa0*/ ANDEQ       R6, R1, IP, LSL R2 
    /*00015fa4*/ ANDEQ       R6, R1, R4, LSL #4 
    /*00015fa8*/ ANDEQ       R6, R1, R0, LSL R2 
    /*00015fac*/ ANDEQ       R6, R1, R8, LSR #4 
    /*00015fb0*/ LDRDEQ      R6, [R1], -R4 
    /*00015fb4*/ ANDEQ       R6, R1, R0, ROR #3 
    /*00015fb8*/ ANDEQ       R6, R1, R8, LSR #4 
    /*00015fbc*/ ANDEQ       R6, R1, R8, LSR #4 
    /*00015fc0*/ ANDEQ       R6, R1, R8, LSR #4 
    /*00015fc4*/ ANDEQ       R6, R1, IP, ROR #3 
    /*00015fc8*/ STRDEQ      R6, [R1], -R8 
    /*00015fcc*/ MOVW        IP, #0                      @ g_stCSC_Init [R_ARM_MOVW_ABS_NC: .rodata+0x12e8] 
    /*00015fd0*/ MOVT        IP, #0                      @ g_stCSC_Init [R_ARM_MOVT_ABS: .rodata+0x12e8] 
    VOU_DRV_CalcCscMatrix_x15fd4:
    /*00015fd4*/ LDR         R7, [IP, #36]               @ 0x24 
    /*00015fd8*/ SUB         R0, R1, #6 
    /*00015fdc*/ SUB         R1, R1, #12 
    /*00015fe0*/ CMP         R1, #1 
    /*00015fe4*/ CMPHI       R0, #1 
    /*00015fe8*/ STR         R7, [R4, #36]               @ 0x24 
    /*00015fec*/ LDR         R1, [IP, #40]               @ 0x28 
    /*00015ff0*/ MOVLS       R0, #1 
    /*00015ff4*/ MOVHI       R0, #0 
    /*00015ff8*/ STR         R1, [R4, #40]               @ 0x28 
    /*00015ffc*/ LDR         R1, [IP, #44]               @ 0x2c 
    /*00016000*/ STR         R1, [R4, #44]               @ 0x2c 
    /*00016004*/ LDR         FP, [IP, #48]               @ 0x30 
    /*00016008*/ STR         FP, [R4, #48]               @ 0x30 
    /*0001600c*/ LDR         R1, [IP, #52]               @ 0x34 
    /*00016010*/ STR         R1, [R4, #52]               @ 0x34 
    /*00016014*/ LDR         R1, [IP, #56]               @ 0x38 
    /*00016018*/ STR         R1, [R4, #56]               @ 0x38 
    /*0001601c*/ BLS         VOU_DRV_CalcCscMatrix_x16230
    /*00016020*/ LDR         R7, [IP] 
    /*00016024*/ MOVW        R5, #34079                  @ 0x851f 
    /*00016028*/ MOVT        R5, #20971                  @ 0x51eb 
    /*0001602c*/ MOVW        R1, #0                      @ SIN_TABLE [R_ARM_MOVW_ABS_NC: .rodata+0x11f4] 
    /*00016030*/ MOVT        R1, #0                      @ SIN_TABLE [R_ARM_MOVT_ABS: .rodata+0x11f4] 
    /*00016034*/ ADD         FP, LR, FP 
    /*00016038*/ MUL         R7, R7, R6 
    /*0001603c*/ LDR         LR, [R1, R2, LSL #2] 
    /*00016040*/ MUL         R3, R3, R6 
    /*00016044*/ MOVW        SL, #0                      @ COS_TABLE [R_ARM_MOVW_ABS_NC: .rodata+0x1100] 
    /*00016048*/ MOVT        SL, #0                      @ COS_TABLE [R_ARM_MOVT_ABS: .rodata+0x1100] 
    /*0001604c*/ SMULL       R8, R9, R7, R5 
    /*00016050*/ ASR         R1, R7, #31 
    /*00016054*/ LDR         SL, [SL, R2, LSL #2] 
    /*00016058*/ MOVW        R7, #19923                  @ 0x4dd3 
    /*0001605c*/ MOVT        R7, #4194                   @ 0x1062 
    /*00016060*/ MOVW        R2, #35757                  @ 0x8bad 
    /*00016064*/ MOVT        R2, #26843                  @ 0x68db 
    /*00016068*/ RSB         R1, R1, R9, ASR #5 
    /*0001606c*/ STR         R1, [R4] 
    /*00016070*/ LDR         R1, [IP, #4] 
    /*00016074*/ MUL         R1, R1, R6 
    /*00016078*/ SMULL       R8, R9, R1, R5 
    /*0001607c*/ ASR         R1, R1, #31 
    /*00016080*/ RSB         R1, R1, R9, ASR #5 
    /*00016084*/ STR         R1, [R4, #4] 
    /*00016088*/ LDR         R1, [IP, #8] 
    /*0001608c*/ MUL         R6, R1, R6 
    /*00016090*/ SMULL       R8, R9, R6, R5 
    /*00016094*/ ASR         R6, R6, #31 
    /*00016098*/ RSB         R6, R6, R9, ASR #5 
    /*0001609c*/ STR         R6, [R4, #8] 
    /*000160a0*/ LDR         R5, [IP, #24] 
    /*000160a4*/ LDR         R1, [IP, #12] 
    /*000160a8*/ MUL         R5, R5, LR 
    /*000160ac*/ MLA         R1, R1, SL, R5 
    /*000160b0*/ SMULL       R8, R9, R1, R7 
    /*000160b4*/ ASR         R1, R1, #31 
    /*000160b8*/ RSB         R1, R1, R9, ASR #6 
    /*000160bc*/ MUL         R1, R3, R1 
    /*000160c0*/ SMULL       R8, R9, R1, R2 
    /*000160c4*/ ASR         R1, R1, #31 
    /*000160c8*/ RSB         R1, R1, R9, ASR #12 
    /*000160cc*/ STR         R1, [R4, #12] 
    /*000160d0*/ LDR         R5, [IP, #28] 
    /*000160d4*/ LDR         R1, [IP, #16] 
    /*000160d8*/ MUL         R5, R5, LR 
    /*000160dc*/ MLA         R1, R1, SL, R5 
    /*000160e0*/ SMULL       R8, R9, R1, R7 
    /*000160e4*/ ASR         R1, R1, #31 
    /*000160e8*/ RSB         R1, R1, R9, ASR #6 
    /*000160ec*/ MUL         R1, R3, R1 
    /*000160f0*/ SMULL       R8, R9, R1, R2 
    /*000160f4*/ ASR         R1, R1, #31 
    /*000160f8*/ RSB         R1, R1, R9, ASR #12 
    /*000160fc*/ STR         R1, [R4, #16] 
    /*00016100*/ LDR         R5, [IP, #32] 
    /*00016104*/ LDR         R1, [IP, #20] 
    /*00016108*/ MUL         R5, R5, LR 
    /*0001610c*/ MLA         R1, R1, SL, R5 
    /*00016110*/ SMULL       R8, R9, R1, R7 
    /*00016114*/ ASR         R1, R1, #31 
    /*00016118*/ RSB         R1, R1, R9, ASR #6 
    /*0001611c*/ MUL         R1, R3, R1 
    /*00016120*/ SMULL       R8, R9, R1, R2 
    /*00016124*/ ASR         R1, R1, #31 
    /*00016128*/ RSB         R1, R1, R9, ASR #12 
    /*0001612c*/ STR         R1, [R4, #20] 
    /*00016130*/ LDR         R5, [IP, #24] 
    /*00016134*/ LDR         R1, [IP, #12] 
    /*00016138*/ MUL         R5, R5, SL 
    /*0001613c*/ MLS         R1, R1, LR, R5 
    /*00016140*/ SMULL       R8, R9, R1, R7 
    /*00016144*/ ASR         R1, R1, #31 
    /*00016148*/ RSB         R1, R1, R9, ASR #6 
    /*0001614c*/ MUL         R1, R3, R1 
    /*00016150*/ SMULL       R8, R9, R1, R2 
    /*00016154*/ ASR         R1, R1, #31 
    /*00016158*/ RSB         R1, R1, R9, ASR #12 
    /*0001615c*/ STR         R1, [R4, #24] 
    /*00016160*/ LDR         R5, [IP, #28] 
    /*00016164*/ LDR         R1, [IP, #16] 
    /*00016168*/ MUL         R5, R5, SL 
    /*0001616c*/ MLS         R1, R1, LR, R5 
    /*00016170*/ SMULL       R8, R9, R1, R7 
    /*00016174*/ ASR         R1, R1, #31 
    /*00016178*/ RSB         R1, R1, R9, ASR #6 
    /*0001617c*/ MUL         R1, R3, R1 
    /*00016180*/ SMULL       R8, R9, R1, R2 
    /*00016184*/ ASR         R1, R1, #31 
    /*00016188*/ RSB         R1, R1, R9, ASR #12 
    /*0001618c*/ STR         R1, [R4, #28] 
    /*00016190*/ LDR         R1, [IP, #32] 
    /*00016194*/ LDR         IP, [IP, #20] 
    /*00016198*/ STR         FP, [R4, #48]               @ 0x30 
    /*0001619c*/ MUL         SL, R1, SL 
    /*000161a0*/ MLS         LR, IP, LR, SL 
    /*000161a4*/ SMULL       R6, R7, LR, R7 
    /*000161a8*/ ASR         LR, LR, #31 
    /*000161ac*/ RSB         LR, LR, R7, ASR #6 
    /*000161b0*/ MUL         R3, R3, LR 
    /*000161b4*/ SMULL       R6, R7, R3, R2 
    /*000161b8*/ ASR         R3, R3, #31 
    /*000161bc*/ RSB         R3, R3, R7, ASR #12 
    /*000161c0*/ STR         R3, [R4, #32] 
    /*000161c4*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    /*000161c8*/ MOVW        IP, #0                      @ g_stCSC_YUV2YUV_601_709 [R_ARM_MOVW_ABS_NC: .rodata+0x1378] 
    /*000161cc*/ MOVT        IP, #0                      @ g_stCSC_YUV2YUV_601_709 [R_ARM_MOVT_ABS: .rodata+0x1378] 
    /*000161d0*/ B           VOU_DRV_CalcCscMatrix_x15fd4
    /*000161d4*/ MOVW        IP, #0                      @ g_stCSC_RGB2YUV601_pc [R_ARM_MOVW_ABS_NC: .rodata+0x1570] 
    /*000161d8*/ MOVT        IP, #0                      @ g_stCSC_RGB2YUV601_pc [R_ARM_MOVT_ABS: .rodata+0x1570] 
    /*000161dc*/ B           VOU_DRV_CalcCscMatrix_x15fd4
    /*000161e0*/ MOVW        IP, #0                      @ g_stCSC_RGB2YUV709_pc [R_ARM_MOVW_ABS_NC: .rodata+0x14e0] 
    /*000161e4*/ MOVT        IP, #0                      @ g_stCSC_RGB2YUV709_pc [R_ARM_MOVT_ABS: .rodata+0x14e0] 
    /*000161e8*/ B           VOU_DRV_CalcCscMatrix_x15fd4
    /*000161ec*/ MOVW        IP, #0                      @ g_stCSC_RGB2YUV601_tv [R_ARM_MOVW_ABS_NC: .rodata+0x15b8] 
    /*000161f0*/ MOVT        IP, #0                      @ g_stCSC_RGB2YUV601_tv [R_ARM_MOVT_ABS: .rodata+0x15b8] 
    /*000161f4*/ B           VOU_DRV_CalcCscMatrix_x15fd4
    /*000161f8*/ MOVW        IP, #0                      @ g_stCSC_RGB2YUV709_tv [R_ARM_MOVW_ABS_NC: .rodata+0x1528] 
    /*000161fc*/ MOVT        IP, #0                      @ g_stCSC_RGB2YUV709_tv [R_ARM_MOVT_ABS: .rodata+0x1528] 
    /*00016200*/ B           VOU_DRV_CalcCscMatrix_x15fd4
    /*00016204*/ MOVW        IP, #0                      @ g_stCSC_YUV6012RGB_pc [R_ARM_MOVW_ABS_NC: .rodata+0x1450] 
    /*00016208*/ MOVT        IP, #0                      @ g_stCSC_YUV6012RGB_pc [R_ARM_MOVT_ABS: .rodata+0x1450] 
    /*0001620c*/ B           VOU_DRV_CalcCscMatrix_x15fd4
    /*00016210*/ MOVW        IP, #0                      @ g_stCSC_YUV7092RGB_pc [R_ARM_MOVW_ABS_NC: .rodata+0x1408] 
    /*00016214*/ MOVT        IP, #0                      @ g_stCSC_YUV7092RGB_pc [R_ARM_MOVT_ABS: .rodata+0x1408] 
    /*00016218*/ B           VOU_DRV_CalcCscMatrix_x15fd4
    /*0001621c*/ MOVW        IP, #0                      @ g_stCSC_YUV2YUV_709_601 [R_ARM_MOVW_ABS_NC: .rodata+0x1330] 
    /*00016220*/ MOVT        IP, #0                      @ g_stCSC_YUV2YUV_709_601 [R_ARM_MOVT_ABS: .rodata+0x1330] 
    /*00016224*/ B           VOU_DRV_CalcCscMatrix_x15fd4
    VOU_DRV_CalcCscMatrix_x16228:
    /*00016228*/ MVN         R0, #0 
    /*0001622c*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VOU_DRV_CalcCscMatrix_x16230:
    /*00016230*/ LDR         R0, [IP] 
    /*00016234*/ MOVW        SL, #34079                  @ 0x851f 
    /*00016238*/ MOVW        R5, #0                      @ COS_TABLE [R_ARM_MOVW_ABS_NC: .rodata+0x1100] 
    /*0001623c*/ MOVT        SL, #20971                  @ 0x51eb 
    /*00016240*/ MOVT        R5, #0                      @ COS_TABLE [R_ARM_MOVT_ABS: .rodata+0x1100] 
    /*00016244*/ MOVW        R1, #0                      @ SIN_TABLE [R_ARM_MOVW_ABS_NC: .rodata+0x11f4] 
    /*00016248*/ MUL         R0, R0, R6 
    /*0001624c*/ MOVT        R1, #0                      @ SIN_TABLE [R_ARM_MOVT_ABS: .rodata+0x11f4] 
    /*00016250*/ LDR         R9, [R5, R2, LSL #2] 
    /*00016254*/ MOVW        R8, #19923                  @ 0x4dd3 
    /*00016258*/ LDR         R2, [R1, R2, LSL #2] 
    /*0001625c*/ MOVT        R8, #4194                   @ 0x1062 
    /*00016260*/ MUL         R3, R3, R6 
    /*00016264*/ MOVW        R5, #35757                  @ 0x8bad 
    /*00016268*/ ASR         FP, R0, #31 
    /*0001626c*/ MOVT        R5, #26843                  @ 0x68db 
    /*00016270*/ SMULL       R0, R1, R0, SL 
    /*00016274*/ CMP         R6, #0 
    /*00016278*/ RSB         FP, FP, R1, ASR #5 
    /*0001627c*/ STR         FP, [R4] 
    /*00016280*/ LDMIB       IP, {R1, FP} 
    /*00016284*/ MUL         R1, R1, R9 
    /*00016288*/ MLS         FP, FP, R2, R1 
    /*0001628c*/ SMULL       R0, R1, FP, R8 
    /*00016290*/ ASR         FP, FP, #31 
    /*00016294*/ RSB         FP, FP, R1, ASR #6 
    /*00016298*/ MUL         FP, R3, FP 
    /*0001629c*/ SMULL       R0, R1, FP, R5 
    /*000162a0*/ ASR         FP, FP, #31 
    /*000162a4*/ RSB         FP, FP, R1, ASR #12 
    /*000162a8*/ STR         FP, [R4, #4] 
    /*000162ac*/ LDR         R1, [IP, #8] 
    /*000162b0*/ LDR         FP, [IP, #4] 
    /*000162b4*/ MUL         R1, R1, R9 
    /*000162b8*/ MLA         FP, FP, R2, R1 
    /*000162bc*/ SMULL       R0, R1, FP, R8 
    /*000162c0*/ ASR         FP, FP, #31 
    /*000162c4*/ RSB         FP, FP, R1, ASR #6 
    /*000162c8*/ MUL         FP, R3, FP 
    /*000162cc*/ SMULL       R0, R1, FP, R5 
    /*000162d0*/ ASR         FP, FP, #31 
    /*000162d4*/ RSB         FP, FP, R1, ASR #12 
    /*000162d8*/ STR         FP, [R4, #8] 
    /*000162dc*/ LDR         FP, [IP, #12] 
    /*000162e0*/ MUL         FP, FP, R6 
    /*000162e4*/ SMULL       R0, R1, FP, SL 
    /*000162e8*/ ASR         FP, FP, #31 
    /*000162ec*/ RSB         FP, FP, R1, ASR #5 
    /*000162f0*/ STR         FP, [R4, #12] 
    /*000162f4*/ LDR         R1, [IP, #16] 
    /*000162f8*/ LDR         FP, [IP, #20] 
    /*000162fc*/ MUL         R1, R1, R9 
    /*00016300*/ MLS         FP, FP, R2, R1 
    /*00016304*/ SMULL       R0, R1, FP, R8 
    /*00016308*/ ASR         FP, FP, #31 
    /*0001630c*/ RSB         FP, FP, R1, ASR #6 
    /*00016310*/ MUL         FP, R3, FP 
    /*00016314*/ SMULL       R0, R1, FP, R5 
    /*00016318*/ ASR         FP, FP, #31 
    /*0001631c*/ RSB         FP, FP, R1, ASR #12 
    /*00016320*/ STR         FP, [R4, #16] 
    /*00016324*/ LDR         R1, [IP, #20] 
    /*00016328*/ LDR         FP, [IP, #16] 
    /*0001632c*/ MUL         R1, R1, R9 
    /*00016330*/ MLA         FP, FP, R2, R1 
    /*00016334*/ SMULL       R0, R1, FP, R8 
    /*00016338*/ ASR         FP, FP, #31 
    /*0001633c*/ RSB         FP, FP, R1, ASR #6 
    /*00016340*/ MUL         FP, R3, FP 
    /*00016344*/ SMULL       R0, R1, FP, R5 
    /*00016348*/ ASR         FP, FP, #31 
    /*0001634c*/ RSB         FP, FP, R1, ASR #12 
    /*00016350*/ STR         FP, [R4, #20] 
    /*00016354*/ LDR         R1, [IP, #24] 
    /*00016358*/ MUL         R1, R1, R6 
    /*0001635c*/ SMULL       SL, FP, R1, SL 
    /*00016360*/ ASR         R1, R1, #31 
    /*00016364*/ RSB         R1, R1, FP, ASR #5 
    /*00016368*/ STR         R1, [R4, #24] 
    /*0001636c*/ LDR         R1, [IP, #28] 
    /*00016370*/ LDR         SL, [IP, #32] 
    /*00016374*/ MUL         R1, R1, R9 
    /*00016378*/ MLS         SL, SL, R2, R1 
    /*0001637c*/ SMULL       R0, R1, SL, R8 
    /*00016380*/ ASR         SL, SL, #31 
    /*00016384*/ RSB         SL, SL, R1, ASR #6 
    /*00016388*/ MUL         SL, R3, SL 
    /*0001638c*/ SMULL       R0, R1, SL, R5 
    /*00016390*/ ASR         SL, SL, #31 
    /*00016394*/ RSB         SL, SL, R1, ASR #12 
    /*00016398*/ STR         SL, [R4, #28] 
    /*0001639c*/ LDR         R1, [IP, #32] 
    /*000163a0*/ LDR         R0, [IP, #28] 
    /*000163a4*/ MUL         R9, R1, R9 
    /*000163a8*/ MLA         R2, R0, R2, R9 
    /*000163ac*/ SMULL       R8, R9, R2, R8 
    /*000163b0*/ ASR         R2, R2, #31 
    /*000163b4*/ RSB         R2, R2, R9, ASR #6 
    /*000163b8*/ MUL         R3, R3, R2 
    /*000163bc*/ SMULL       R0, R1, R3, R5 
    /*000163c0*/ ASR         R3, R3, #31 
    /*000163c4*/ MOV         R0, #100                    @ 0x64 
    /*000163c8*/ MULEQ       R0, R0, LR 
    /*000163cc*/ RSB         R3, R3, R1, ASR #12 
    /*000163d0*/ STR         R3, [R4, #32] 
    /*000163d4*/ BEQ         VOU_DRV_CalcCscMatrix_x163e4
    /*000163d8*/ MOV         R1, R6 
    /*000163dc*/ MUL         R0, R0, LR 
    /*000163e0*/ BL          0x00000000000163E0          @ __aeabi_idiv [R_ARM_CALL: +0x0] 
    VOU_DRV_CalcCscMatrix_x163e4:
    /*000163e4*/ ADD         R7, R0, R7 
    /*000163e8*/ MOV         R0, #0 
    /*000163ec*/ STR         R7, [R4, #36]               @ 0x24 
    /*000163f0*/ POP         {R3, R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END VOU_DRV_CalcCscMatrix


FUNC_BEGIN VOU_DRV_CheckVideoCsc
    /*000163f4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000163f8*/ SUB         SP, SP, #20 
    /*000163fc*/ LDR         R3, [R1] 
    /*00016400*/ CMP         R3, #4 
    /*00016404*/ BHI         VOU_DRV_CheckVideoCsc_x16444
    /*00016408*/ LDR         R3, [R1, #8] 
    /*0001640c*/ CMP         R3, #100                    @ 0x64 
    /*00016410*/ BHI         VOU_DRV_CheckVideoCsc_x16480
    /*00016414*/ LDR         R3, [R1, #12] 
    /*00016418*/ CMP         R3, #100                    @ 0x64 
    /*0001641c*/ BHI         VOU_DRV_CheckVideoCsc_x164b4
    /*00016420*/ LDR         R3, [R1, #4] 
    /*00016424*/ CMP         R3, #100                    @ 0x64 
    /*00016428*/ BHI         VOU_DRV_CheckVideoCsc_x164d0
    /*0001642c*/ LDR         R3, [R1, #16] 
    /*00016430*/ CMP         R3, #100                    @ 0x64 
    /*00016434*/ MOVLS       R0, #0 
    /*00016438*/ BHI         VOU_DRV_CheckVideoCsc_x164ec
    VOU_DRV_CheckVideoCsc_x1643c:
    /*0001643c*/ ADD         SP, SP, #20 
    /*00016440*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VOU_DRV_CheckVideoCsc_x16444:
    /*00016444*/ STR         R3, [SP, #8] 
    /*00016448*/ MOV         R2, #4 
    /*0001644c*/ STR         R0, [SP, #4] 
    /*00016450*/ MOVW        R3, #1003                   @ 0x3eb 
    /*00016454*/ STR         R2, [SP, #12] 
    /*00016458*/ MOV         R1, #15 
    /*0001645c*/ STR         R3, [SP] 
    /*00016460*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7314] 
    /*00016464*/ LDR         R3, [PC, #156]              @ 0x0000000000016508 
    /*00016468*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7314] 
    /*0001646c*/ MOV         R0, #3 
    /*00016470*/ BL          0x0000000000016470          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016474*/ MOVW        R0, #32771                  @ 0x8003 
    /*00016478*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0001647c*/ B           VOU_DRV_CheckVideoCsc_x1643c
    VOU_DRV_CheckVideoCsc_x16480:
    /*00016480*/ MOVW        R2, #0                      @ .LC9 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7368] 
    /*00016484*/ MOVT        R2, #0                      @ .LC9 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7368] 
    /*00016488*/ STR         R3, [SP, #8] 
    /*0001648c*/ MOVW        R3, #1009                   @ 0x3f1 
    /*00016490*/ STR         R0, [SP, #4] 
    /*00016494*/ STR         R3, [SP] 
    VOU_DRV_CheckVideoCsc_x16498:
    /*00016498*/ LDR         R3, [PC, #104]              @ 0x0000000000016508 
    /*0001649c*/ MOV         R1, #15 
    /*000164a0*/ MOV         R0, #3 
    /*000164a4*/ BL          0x00000000000164A4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000164a8*/ MOVW        R0, #32771                  @ 0x8003 
    /*000164ac*/ MOVT        R0, #40975                  @ 0xa00f 
    /*000164b0*/ B           VOU_DRV_CheckVideoCsc_x1643c
    VOU_DRV_CheckVideoCsc_x164b4:
    /*000164b4*/ STR         R3, [SP, #8] 
    /*000164b8*/ MOVW        R2, #0                      @ .LC10 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x73b8] 
    /*000164bc*/ MOVW        R3, #1015                   @ 0x3f7 
    /*000164c0*/ STR         R0, [SP, #4] 
    /*000164c4*/ STR         R3, [SP] 
    /*000164c8*/ MOVT        R2, #0                      @ .LC10 [R_ARM_MOVT_ABS: .rodata.str1.4+0x73b8] 
    /*000164cc*/ B           VOU_DRV_CheckVideoCsc_x16498
    VOU_DRV_CheckVideoCsc_x164d0:
    /*000164d0*/ STR         R3, [SP, #8] 
    /*000164d4*/ MOVW        R2, #0                      @ .LC11 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7404] 
    /*000164d8*/ MOVW        R3, #1021                   @ 0x3fd 
    /*000164dc*/ STR         R0, [SP, #4] 
    /*000164e0*/ STR         R3, [SP] 
    /*000164e4*/ MOVT        R2, #0                      @ .LC11 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7404] 
    /*000164e8*/ B           VOU_DRV_CheckVideoCsc_x16498
    VOU_DRV_CheckVideoCsc_x164ec:
    /*000164ec*/ STR         R3, [SP, #8] 
    /*000164f0*/ MOVW        R2, #0                      @ .LC12 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7450] 
    /*000164f4*/ MOVW        R3, #1027                   @ 0x403 
    /*000164f8*/ STR         R0, [SP, #4] 
    /*000164fc*/ STR         R3, [SP] 
    /*00016500*/ MOVT        R2, #0                      @ .LC12 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7450] 
    /*00016504*/ B           VOU_DRV_CheckVideoCsc_x16498
    /*00016508*/ ANDEQ       R0, R0, R0, ASR #26 
FUNC_END VOU_DRV_CheckVideoCsc


FUNC_BEGIN VOU_DRV_GetLayerCscParam
    /*0001650c*/ LDR         IP, [PC, #20]               @ 0x0000000000016528 
    /*00016510*/ MOV         R3, #188                    @ 0xbc 
    /*00016514*/ MOV         R2, #12 
    /*00016518*/ MLA         R3, R3, R0, IP 
    /*0001651c*/ MOV         R0, R1 
    /*00016520*/ ADD         R1, R3, #152                @ 0x98 
    VOU_DRV_GetLayerCscParam_x16524:
    /*00016524*/ B           VOU_DRV_GetLayerCscParam_x16524@ osal_memcpy [R_ARM_JUMP24: +0x0] 
    /*00016528*/ LDRDEQ      R5, [R0], -R8 
FUNC_END VOU_DRV_GetLayerCscParam


FUNC_BEGIN VOU_DRV_LayerCSCConfig
    /*0001652c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00016530*/ MOV         R5, R0 
    /*00016534*/ LDR         R3, [R1] 
    /*00016538*/ SUB         SP, SP, #92                 @ 0x5c 
    /*0001653c*/ LDMIB       R1, {R0, IP} 
    /*00016540*/ ADD         R9, SP, #16 
    /*00016544*/ SUB         R3, R3, #1 
    /*00016548*/ MOVW        R8, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x5480] 
    /*0001654c*/ CMP         R3, #7 
    /*00016550*/ MOVT        R8, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x5480] 
    /*00016554*/ MOVWLS      R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xcdc] 
    /*00016558*/ MOVTLS      R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xcdc] 
    /*0001655c*/ ADDLS       R3, R2, R3, LSL #2 
    /*00016560*/ MOVHI       LR, #1 
    /*00016564*/ LDR         R2, [R1, #12] 
    /*00016568*/ LDRLS       LR, [R3, #124]              @ 0x7c 
    /*0001656c*/ LDR         R3, [R1, #16] 
    /*00016570*/ MOV         R1, IP 
    /*00016574*/ STR         R9, [SP, #4] 
    /*00016578*/ STR         LR, [SP] 
    /*0001657c*/ BL          0x000000000001657C          @ VOU_DRV_CalcCscMatrix [R_ARM_CALL: .text+0x15f3c] 
    /*00016580*/ LDR         R6, [SP, #16] 
    /*00016584*/ MOVW        R3, #19923                  @ 0x4dd3 
    /*00016588*/ MOVT        R3, #4194                   @ 0x1062 
    /*0001658c*/ LDR         R0, [SP, #20] 
    /*00016590*/ MOV         R1, R9 
    /*00016594*/ LSL         R6, R6, #10 
    /*00016598*/ LDR         R4, [SP, #28] 
    /*0001659c*/ LDR         SL, [SP, #24] 
    /*000165a0*/ ASR         FP, R6, #31 
    /*000165a4*/ LSL         R0, R0, #10 
    /*000165a8*/ SMULL       R6, R7, R6, R3 
    /*000165ac*/ LSL         R2, R4, #10 
    /*000165b0*/ STR         R2, [SP, #12] 
    /*000165b4*/ LSL         SL, SL, #10 
    /*000165b8*/ LDR         R2, [SP, #40]               @ 0x28 
    /*000165bc*/ LDR         R4, [SP, #48]               @ 0x30 
    /*000165c0*/ LDR         LR, [SP, #32] 
    /*000165c4*/ RSB         FP, FP, R7, ASR #6 
    /*000165c8*/ ASR         R7, R0, #31 
    /*000165cc*/ LSL         R2, R2, #10 
    /*000165d0*/ STR         R2, [SP, #8] 
    /*000165d4*/ MOV         R2, R7 
    /*000165d8*/ STR         FP, [SP, #16] 
    /*000165dc*/ SMULL       R6, R7, R0, R3 
    /*000165e0*/ MOV         R0, #188                    @ 0xbc 
    /*000165e4*/ MLA         R8, R0, R5, R8 
    /*000165e8*/ LSL         FP, R4, #10 
    /*000165ec*/ MOV         R0, R5 
    /*000165f0*/ LDR         IP, [SP, #36]               @ 0x24 
    /*000165f4*/ SMULL       R4, R5, SL, R3 
    /*000165f8*/ MOV         R6, R7 
    /*000165fc*/ RSB         R6, R2, R6, ASR #6 
    /*00016600*/ LDR         R2, [SP, #12] 
    /*00016604*/ STR         R6, [SP, #20] 
    /*00016608*/ LSL         LR, LR, #10 
    /*0001660c*/ LSL         IP, IP, #10 
    /*00016610*/ ASR         SL, SL, #31 
    /*00016614*/ SMULL       R6, R7, R2, R3 
    /*00016618*/ ASR         R6, R2, #31 
    /*0001661c*/ RSB         SL, SL, R5, ASR #6 
    /*00016620*/ LDR         R9, [SP, #44]               @ 0x2c 
    /*00016624*/ SMULL       R4, R5, LR, R3 
    /*00016628*/ LDR         R2, [SP, #8] 
    /*0001662c*/ RSB         R4, R6, R7, ASR #6 
    /*00016630*/ LSL         R9, R9, #10 
    /*00016634*/ SMULL       R6, R7, IP, R3 
    /*00016638*/ ASR         LR, LR, #31 
    /*0001663c*/ ASR         IP, IP, #31 
    /*00016640*/ STR         R4, [SP, #28] 
    /*00016644*/ RSB         LR, LR, R5, ASR #6 
    /*00016648*/ STR         LR, [SP, #32] 
    /*0001664c*/ SMULL       R4, R5, R2, R3 
    /*00016650*/ ASR         LR, R2, #31 
    /*00016654*/ RSB         IP, IP, R7, ASR #6 
    /*00016658*/ LDR         R4, [R8, #2292]             @ 0x8f4 
    /*0001665c*/ SMULL       R6, R7, R9, R3 
    /*00016660*/ LDR         R6, [SP, #52]               @ 0x34 
    /*00016664*/ SMULL       R2, R3, FP, R3 
    /*00016668*/ ASR         FP, FP, #31 
    /*0001666c*/ RSB         R2, LR, R5, ASR #6 
    /*00016670*/ LDR         LR, [R8, #2288]             @ 0x8f0 
    /*00016674*/ STR         R2, [SP, #40]               @ 0x28 
    /*00016678*/ ASR         R9, R9, #31 
    /*0001667c*/ LDR         R5, [R8, #2296]             @ 0x8f8 
    /*00016680*/ RSB         R9, R9, R7, ASR #6 
    /*00016684*/ LDR         R2, [SP, #60]               @ 0x3c 
    /*00016688*/ LSL         R6, R6, #2 
    /*0001668c*/ RSB         FP, FP, R3, ASR #6 
    /*00016690*/ LDR         R3, [SP, #64]               @ 0x40 
    /*00016694*/ STR         IP, [SP, #36]               @ 0x24 
    /*00016698*/ STR         LR, [SP, #76]               @ 0x4c 
    /*0001669c*/ LSL         R2, R2, #2 
    /*000166a0*/ LDR         IP, [SP, #56]               @ 0x38 
    /*000166a4*/ LSL         R3, R3, #2 
    /*000166a8*/ STR         SL, [SP, #24] 
    /*000166ac*/ STR         R9, [SP, #44]               @ 0x2c 
    /*000166b0*/ STR         FP, [SP, #48]               @ 0x30 
    /*000166b4*/ LSL         IP, IP, #2 
    /*000166b8*/ STR         R5, [SP, #84]               @ 0x54 
    /*000166bc*/ STR         R4, [SP, #80]               @ 0x50 
    /*000166c0*/ STR         R6, [SP, #52]               @ 0x34 
    /*000166c4*/ STR         R2, [SP, #60]               @ 0x3c 
    /*000166c8*/ STR         R3, [SP, #64]               @ 0x40 
    /*000166cc*/ LDR         R2, [SP, #68]               @ 0x44 
    /*000166d0*/ LDR         R3, [SP, #72]               @ 0x48 
    /*000166d4*/ STR         IP, [SP, #56]               @ 0x38 
    /*000166d8*/ LSL         R2, R2, #2 
    /*000166dc*/ STR         R2, [SP, #68]               @ 0x44 
    /*000166e0*/ LSL         R3, R3, #2 
    /*000166e4*/ STR         R3, [SP, #72]               @ 0x48 
    /*000166e8*/ BL          0x00000000000166E8          @ HAL_LAYER_SetCscCoef [R_ARM_CALL: .text+0x1e1e8] 
    /*000166ec*/ ADD         SP, SP, #92                 @ 0x5c 
    /*000166f0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
FUNC_END VOU_DRV_LayerCSCConfig


FUNC_BEGIN VOU_DRV_LayerCSCEnable
    VOU_DRV_LayerCSCEnable_x166f4:
    /*000166f4*/ B           VOU_DRV_LayerCSCEnable_x166f4@ HAL_LAYER_SetCscEn [R_ARM_JUMP24: .text+0x1e23c] 
FUNC_END VOU_DRV_LayerCSCEnable


FUNC_BEGIN VO_VID_SetZmeEnable
    /*000166f8*/ PUSH        {R4, R5, LR} 
    /*000166fc*/ MOV         R5, R1 
    /*00016700*/ LDR         R3, [R1] 
    /*00016704*/ SUB         SP, SP, #156                @ 0x9c 
    /*00016708*/ MOV         R4, R0 
    /*0001670c*/ CMP         R3, #0 
    /*00016710*/ BEQ         VO_VID_SetZmeEnable_x16850
    VO_VID_SetZmeEnable_x16714:
    /*00016714*/ LDR         R3, [R5, #4] 
    /*00016718*/ CMP         R3, #0 
    /*0001671c*/ BEQ         VO_VID_SetZmeEnable_x16830
    VO_VID_SetZmeEnable_x16720:
    /*00016720*/ LDR         R3, [R5, #8] 
    /*00016724*/ CMP         R3, #0 
    /*00016728*/ BEQ         VO_VID_SetZmeEnable_x16810
    VO_VID_SetZmeEnable_x1672c:
    /*0001672c*/ LDR         R3, [R5, #12] 
    /*00016730*/ CMP         R3, #0 
    /*00016734*/ BEQ         VO_VID_SetZmeEnable_x167f0
    VO_VID_SetZmeEnable_x16738:
    /*00016738*/ CMP         R4, #0 
    /*0001673c*/ BNE         VO_VID_SetZmeEnable_x167e8
    /*00016740*/ LDR         LR, [R5] 
    /*00016744*/ MOV         R3, #1 
    /*00016748*/ LDR         IP, [R5, #4] 
    /*0001674c*/ MOV         R0, R4 
    /*00016750*/ LDR         R2, [R5, #8] 
    /*00016754*/ MOV         R1, SP 
    /*00016758*/ STR         LR, [SP, #32] 
    /*0001675c*/ STR         IP, [SP, #16] 
    /*00016760*/ STR         R2, [SP, #40]               @ 0x28 
    /*00016764*/ STR         R3, [SP, #48]               @ 0x30 
    /*00016768*/ STR         R3, [SP, #56]               @ 0x38 
    /*0001676c*/ STR         R3, [SP, #4] 
    /*00016770*/ STR         R3, [SP, #8] 
    /*00016774*/ STR         R4, [SP, #60]               @ 0x3c 
    /*00016778*/ STR         R4, [SP, #64]               @ 0x40 
    /*0001677c*/ STR         R4, [SP, #68]               @ 0x44 
    /*00016780*/ STR         R4, [SP, #72]               @ 0x48 
    /*00016784*/ STR         R4, [SP, #76]               @ 0x4c 
    /*00016788*/ STR         R4, [SP, #84]               @ 0x54 
    /*0001678c*/ STR         R4, [SP, #88]               @ 0x58 
    /*00016790*/ STR         R4, [SP, #92]               @ 0x5c 
    /*00016794*/ STR         R4, [SP, #96]               @ 0x60 
    /*00016798*/ STR         R4, [SP, #100]              @ 0x64 
    /*0001679c*/ STR         R4, [SP, #104]              @ 0x68 
    /*000167a0*/ STR         R4, [SP, #116]              @ 0x74 
    /*000167a4*/ STR         R4, [SP, #120]              @ 0x78 
    /*000167a8*/ STR         R4, [SP, #128]              @ 0x80 
    /*000167ac*/ STR         R4, [SP, #132]              @ 0x84 
    /*000167b0*/ STR         R4, [SP, #136]              @ 0x88 
    /*000167b4*/ STR         R4, [SP, #140]              @ 0x8c 
    /*000167b8*/ STR         R4, [SP, #144]              @ 0x90 
    /*000167bc*/ STR         R4, [SP] 
    /*000167c0*/ STR         R4, [SP, #52]               @ 0x34 
    /*000167c4*/ STR         R4, [SP, #36]               @ 0x24 
    /*000167c8*/ STR         R4, [SP, #20] 
    /*000167cc*/ STR         R4, [SP, #44]               @ 0x2c 
    /*000167d0*/ LDR         R3, [R5, #12] 
    /*000167d4*/ STR         R4, [SP, #28] 
    /*000167d8*/ STR         R3, [SP, #24] 
    /*000167dc*/ BL          0x0000000000015E1C 
    /*000167e0*/ MOV         R0, R4 
    /*000167e4*/ BL          0x00000000000154C4 
    VO_VID_SetZmeEnable_x167e8:
    /*000167e8*/ ADD         SP, SP, #156                @ 0x9c 
    /*000167ec*/ POP         {R4, R5, PC} 
    VO_VID_SetZmeEnable_x167f0:
    /*000167f0*/ MOVW        R3, #0                      @ .LC17 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7534] 
    /*000167f4*/ MOVW        R0, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x74bc] 
    /*000167f8*/ MOVT        R3, #0                      @ .LC17 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7534] 
    /*000167fc*/ MOVT        R0, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x74bc] 
    /*00016800*/ MOVW        R2, #1141                   @ 0x475 
    /*00016804*/ LDR         R1, [PC, #100]              @ 0x0000000000016870 
    /*00016808*/ BL          0x0000000000016808          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001680c*/ B           VO_VID_SetZmeEnable_x16738
    VO_VID_SetZmeEnable_x16810:
    /*00016810*/ MOVW        R3, #0                      @ .LC16 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7518] 
    /*00016814*/ MOVW        R0, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x74bc] 
    /*00016818*/ MOVT        R3, #0                      @ .LC16 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7518] 
    /*0001681c*/ MOVT        R0, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x74bc] 
    /*00016820*/ MOVW        R2, #1140                   @ 0x474 
    /*00016824*/ LDR         R1, [PC, #68]               @ 0x0000000000016870 
    /*00016828*/ BL          0x0000000000016828          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001682c*/ B           VO_VID_SetZmeEnable_x1672c
    VO_VID_SetZmeEnable_x16830:
    /*00016830*/ MOVW        R3, #0                      @ .LC15 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x74fc] 
    /*00016834*/ MOVW        R0, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x74bc] 
    /*00016838*/ MOVT        R3, #0                      @ .LC15 [R_ARM_MOVT_ABS: .rodata.str1.4+0x74fc] 
    /*0001683c*/ MOVT        R0, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x74bc] 
    /*00016840*/ MOVW        R2, #1139                   @ 0x473 
    /*00016844*/ LDR         R1, [PC, #36]               @ 0x0000000000016870 
    /*00016848*/ BL          0x0000000000016848          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001684c*/ B           VO_VID_SetZmeEnable_x16720
    VO_VID_SetZmeEnable_x16850:
    /*00016850*/ MOVW        R3, #0                      @ .LC13 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x74a0] 
    /*00016854*/ MOVW        R0, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x74bc] 
    /*00016858*/ MOVT        R3, #0                      @ .LC13 [R_ARM_MOVT_ABS: .rodata.str1.4+0x74a0] 
    /*0001685c*/ MOVT        R0, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x74bc] 
    /*00016860*/ MOVW        R2, #1138                   @ 0x472 
    /*00016864*/ LDR         R1, [PC, #4]                @ 0x0000000000016870 
    /*00016868*/ BL          0x0000000000016868          @ osal_panic [R_ARM_CALL: +0x0] 
    /*0001686c*/ B           VO_VID_SetZmeEnable_x16714
    /*00016870*/ ANDEQ       R0, R0, R8, ROR SP 
FUNC_END VO_VID_SetZmeEnable


FUNC_BEGIN VOU_DRV_BoardInit
    VOU_DRV_BoardInit_x16874:
    /*00016874*/ B           VOU_DRV_BoardInit_x16874    @ HAL_VOU_Init [R_ARM_JUMP24: .text+0x1a844] 
FUNC_END VOU_DRV_BoardInit


FUNC_BEGIN VOU_DRV_BoardDeInit
    VOU_DRV_BoardDeInit_x16878:
    /*00016878*/ B           VOU_DRV_BoardDeInit_x16878  @ HAL_VOU_Exit [R_ARM_JUMP24: .text+0x1a888] 
FUNC_END VOU_DRV_BoardDeInit


FUNC_BEGIN VO_DRV_IntRegUpMode
    VO_DRV_IntRegUpMode_x1687c:
    /*0001687c*/ B           VO_DRV_IntRegUpMode_x1687c  @ HAL_VIDEO_SetLayerUpMode [R_ARM_JUMP24: .text+0x1c4e4] 
FUNC_END VO_DRV_IntRegUpMode


FUNC_BEGIN VOU_DRV_SetDevIntfType
    /*00016880*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x188] 
    /*00016884*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x188] 
    /*00016888*/ MOV         R3, #20 
    /*0001688c*/ MLA         R0, R3, R0, R2 
    /*00016890*/ STR         R1, [R0, #2312]             @ 0x908 
    /*00016894*/ BX          LR 
FUNC_END VOU_DRV_SetDevIntfType


FUNC_BEGIN VOU_DRV_SetDevBkGrd
    /*00016898*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x188] 
    /*0001689c*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x188] 
    /*000168a0*/ MOV         R3, #20 
    /*000168a4*/ MLA         R0, R3, R0, R2 
    /*000168a8*/ STR         R1, [R0, #2308]             @ 0x904 
    /*000168ac*/ BX          LR 
FUNC_END VOU_DRV_SetDevBkGrd


FUNC_BEGIN VOU_DRV_SetDevOutSync
    /*000168b0*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x188] 
    /*000168b4*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x188] 
    /*000168b8*/ MOV         R3, #20 
    /*000168bc*/ MLA         R0, R3, R0, R2 
    /*000168c0*/ STR         R1, [R0, #2316]             @ 0x90c 
    /*000168c4*/ BX          LR 
FUNC_END VOU_DRV_SetDevOutSync


FUNC_BEGIN VOU_DRV_SetDevDefaultVtth
    /*000168c8*/ MOV         R3, #144                    @ 0x90 
    /*000168cc*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*000168d0*/ MUL         R3, R3, R0 
    /*000168d4*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*000168d8*/ MOV         R1, #20 
    /*000168dc*/ LDR         R3, [R2, R3] 
    /*000168e0*/ BICS        R3, R3, #2 
    /*000168e4*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x188] 
    /*000168e8*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x188] 
    /*000168ec*/ MOVEQ       R2, #240                    @ 0xf0 
    /*000168f0*/ MOVNE       R2, #100                    @ 0x64 
    /*000168f4*/ MLA         R0, R1, R0, R3 
    /*000168f8*/ STR         R2, [R0, #2304]             @ 0x900 
    /*000168fc*/ BX          LR 
FUNC_END VOU_DRV_SetDevDefaultVtth


FUNC_BEGIN VOU_DRV_SetDevVtth
    /*00016900*/ MOV         R2, #144                    @ 0x90 
    /*00016904*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x188] 
    /*00016908*/ MUL         R2, R2, R0 
    /*0001690c*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x188] 
    /*00016910*/ MOVW        IP, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*00016914*/ MOVT        IP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*00016918*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001691c*/ MOV         LR, #20 
    /*00016920*/ MLA         R3, LR, R0, R3 
    /*00016924*/ LDR         R2, [IP, R2] 
    /*00016928*/ MOV         R0, #0 
    /*0001692c*/ BICS        R2, R2, #2 
    /*00016930*/ MOVNE       R2, #100                    @ 0x64 
    /*00016934*/ MOVEQ       R2, #240                    @ 0xf0 
    /*00016938*/ CMP         R2, R1 
    /*0001693c*/ MOVCS       R1, R2 
    /*00016940*/ STR         R1, [R3, #2304]             @ 0x900 
    /*00016944*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VOU_DRV_SetDevVtth


FUNC_BEGIN VOU_DRV_GetDevVtth
    /*00016948*/ MOVW        R2, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x188] 
    /*0001694c*/ MOVT        R2, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x188] 
    /*00016950*/ MOV         R3, #20 
    /*00016954*/ MLA         R0, R3, R0, R2 
    /*00016958*/ LDR         R3, [R0, #2304]             @ 0x900 
    /*0001695c*/ STR         R3, [R1] 
    /*00016960*/ BX          LR 
FUNC_END VOU_DRV_GetDevVtth


FUNC_BEGIN VOU_DRV_GetDevEnable
    /*00016964*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00016968*/ SUB         SP, SP, #12 
    /*0001696c*/ ADD         R1, SP, #8 
    /*00016970*/ MOV         R3, #0 
    /*00016974*/ STR         R3, [R1, #-4]! 
    /*00016978*/ BL          0x0000000000016978          @ HAL_DISP_GetIntfEnable [R_ARM_CALL: .text+0x1ac18] 
    /*0001697c*/ LDR         R0, [SP, #4] 
    /*00016980*/ ADD         SP, SP, #12 
    /*00016984*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VOU_DRV_GetDevEnable


FUNC_BEGIN VOU_DRV_GetDevIntState
    VOU_DRV_GetDevIntState_x16988:
    /*00016988*/ B           VOU_DRV_GetDevIntState_x16988@ HAL_DISP_GetIntState [R_ARM_JUMP24: .text+0x1ac78] 
FUNC_END VOU_DRV_GetDevIntState


FUNC_BEGIN VOU_DRV_CheckUsrSyncTiming
    /*0001698c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00016990*/ SUB         SP, SP, #20 
    /*00016994*/ LDRH        R3, [R1, #16] 
    /*00016998*/ LDRH        R2, [R1, #18] 
    /*0001699c*/ CMP         R3, #0 
    /*000169a0*/ LDRH        R0, [R1, #20] 
    /*000169a4*/ BEQ         VOU_DRV_CheckUsrSyncTiming_x16a30
    /*000169a8*/ CMP         R2, #0 
    /*000169ac*/ BEQ         VOU_DRV_CheckUsrSyncTiming_x16a30
    /*000169b0*/ CMP         R0, #0 
    /*000169b4*/ BEQ         VOU_DRV_CheckUsrSyncTiming_x16a30
    /*000169b8*/ LDRH        R3, [R1, #10] 
    /*000169bc*/ LDRH        R2, [R1, #12] 
    /*000169c0*/ CMP         R3, #99                     @ 0x63 
    /*000169c4*/ LDRH        R0, [R1, #14] 
    /*000169c8*/ BLS         VOU_DRV_CheckUsrSyncTiming_x16a6c
    /*000169cc*/ CMP         R2, #0 
    /*000169d0*/ BEQ         VOU_DRV_CheckUsrSyncTiming_x16a6c
    /*000169d4*/ CMP         R0, #0 
    /*000169d8*/ BEQ         VOU_DRV_CheckUsrSyncTiming_x16a6c
    /*000169dc*/ LDRH        IP, [R1, #30] 
    /*000169e0*/ LDRH        LR, [R1, #32] 
    /*000169e4*/ CMP         IP, #0 
    /*000169e8*/ BEQ         VOU_DRV_CheckUsrSyncTiming_x16aa4
    /*000169ec*/ CMP         LR, #0 
    /*000169f0*/ BEQ         VOU_DRV_CheckUsrSyncTiming_x16aa4
    /*000169f4*/ LDR         IP, [R1, #4] 
    /*000169f8*/ CMP         IP, #0 
    /*000169fc*/ BNE         VOU_DRV_CheckUsrSyncTiming_x16a24
    /*00016a00*/ LDRH        IP, [R1, #24] 
    /*00016a04*/ CMP         IP, #0 
    /*00016a08*/ BEQ         VOU_DRV_CheckUsrSyncTiming_x16a88
    /*00016a0c*/ LDRH        IP, [R1, #26] 
    /*00016a10*/ CMP         IP, #0 
    /*00016a14*/ BEQ         VOU_DRV_CheckUsrSyncTiming_x16a88
    /*00016a18*/ LDRH        R1, [R1, #28] 
    /*00016a1c*/ CMP         R1, #0 
    /*00016a20*/ BEQ         VOU_DRV_CheckUsrSyncTiming_x16a88
    VOU_DRV_CheckUsrSyncTiming_x16a24:
    /*00016a24*/ MOV         R0, #0 
    VOU_DRV_CheckUsrSyncTiming_x16a28:
    /*00016a28*/ ADD         SP, SP, #20 
    /*00016a2c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VOU_DRV_CheckUsrSyncTiming_x16a30:
    /*00016a30*/ STR         R2, [SP, #8] 
    /*00016a34*/ MOVW        R2, #0                      @ .LC18 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7550] 
    /*00016a38*/ MOVT        R2, #0                      @ .LC18 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7550] 
    /*00016a3c*/ MOV         R1, #1328                   @ 0x530 
    /*00016a40*/ STR         R0, [SP, #12] 
    /*00016a44*/ STR         R3, [SP, #4] 
    VOU_DRV_CheckUsrSyncTiming_x16a48:
    /*00016a48*/ STR         R1, [SP] 
    /*00016a4c*/ MOV         R0, #3 
    /*00016a50*/ MOV         R1, #15 
    /*00016a54*/ LDR         R3, [PC, #124]              @ 0x0000000000016ad8 
    /*00016a58*/ BL          0x0000000000016A58          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016a5c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00016a60*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00016a64*/ ADD         SP, SP, #20 
    /*00016a68*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VOU_DRV_CheckUsrSyncTiming_x16a6c:
    /*00016a6c*/ STR         R2, [SP, #8] 
    /*00016a70*/ MOVW        R1, #1334                   @ 0x536 
    /*00016a74*/ MOVW        R2, #0                      @ .LC19 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x75a0] 
    /*00016a78*/ STR         R0, [SP, #12] 
    /*00016a7c*/ STR         R3, [SP, #4] 
    /*00016a80*/ MOVT        R2, #0                      @ .LC19 [R_ARM_MOVT_ABS: .rodata.str1.4+0x75a0] 
    /*00016a84*/ B           VOU_DRV_CheckUsrSyncTiming_x16a48
    VOU_DRV_CheckUsrSyncTiming_x16a88:
    /*00016a88*/ STR         R2, [SP, #8] 
    /*00016a8c*/ MOVW        R1, #1346                   @ 0x542 
    /*00016a90*/ MOVW        R2, #0                      @ .LC21 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7654] 
    /*00016a94*/ STR         R0, [SP, #12] 
    /*00016a98*/ STR         R3, [SP, #4] 
    /*00016a9c*/ MOVT        R2, #0                      @ .LC21 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7654] 
    /*00016aa0*/ B           VOU_DRV_CheckUsrSyncTiming_x16a48
    VOU_DRV_CheckUsrSyncTiming_x16aa4:
    /*00016aa4*/ MOVW        R3, #1340                   @ 0x53c 
    /*00016aa8*/ STR         LR, [SP, #8] 
    /*00016aac*/ STR         R3, [SP] 
    /*00016ab0*/ MOVW        R2, #0                      @ .LC20 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x760c] 
    /*00016ab4*/ STR         IP, [SP, #4] 
    /*00016ab8*/ MOVT        R2, #0                      @ .LC20 [R_ARM_MOVT_ABS: .rodata.str1.4+0x760c] 
    /*00016abc*/ LDR         R3, [PC, #20]               @ 0x0000000000016ad8 
    /*00016ac0*/ MOV         R1, #15 
    /*00016ac4*/ MOV         R0, #3 
    /*00016ac8*/ BL          0x0000000000016AC8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016acc*/ MOVW        R0, #32771                  @ 0x8003 
    /*00016ad0*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00016ad4*/ B           VOU_DRV_CheckUsrSyncTiming_x16a28
    /*00016ad8*/ ANDEQ       R0, R0, IP, LSL #27 
FUNC_END VOU_DRV_CheckUsrSyncTiming


FUNC_BEGIN VOU_DRV_GetDevIntStateVcnt
    VOU_DRV_GetDevIntStateVcnt_x16adc:
    /*00016adc*/ B           VOU_DRV_GetDevIntStateVcnt_x16adc@ HAL_DISP_GetIntStateVcnt [R_ARM_JUMP24: .text+0x1ada4] 
FUNC_END VOU_DRV_GetDevIntStateVcnt


FUNC_BEGIN VOU_DRV_SetUsrSyncTiming
    /*00016ae0*/ MOV         R2, #48                     @ 0x30 
    /*00016ae4*/ LDR         R0, [PC]                    @ 0x0000000000016aec 
    VOU_DRV_SetUsrSyncTiming_x16ae8:
    /*00016ae8*/ B           VOU_DRV_SetUsrSyncTiming_x16ae8@ osal_memcpy [R_ARM_JUMP24: +0x0] 
    /*00016aec*/ ANDEQ       R0, R0, R8, ASR SL 
FUNC_END VOU_DRV_SetUsrSyncTiming


FUNC_BEGIN VO_DRV_CheckDevUserSyncInfo
    /*00016af0*/ CMP         R0, #0 
    /*00016af4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00016af8*/ SUB         SP, SP, #36                 @ 0x24 
    /*00016afc*/ BNE         VO_DRV_CheckDevUserSyncInfo_x16c44
    /*00016b00*/ LDR         R3, [R1] 
    /*00016b04*/ CMP         R3, #0 
    /*00016b08*/ BEQ         VO_DRV_CheckDevUserSyncInfo_x16b74
    /*00016b0c*/ CMP         R3, #1 
    /*00016b10*/ BNE         VO_DRV_CheckDevUserSyncInfo_x16c24
    /*00016b14*/ LDR         R3, [R1, #4] 
    /*00016b18*/ CMN         R3, #-134217727             @ 0xf8000001 
    /*00016b1c*/ BHI         VO_DRV_CheckDevUserSyncInfo_x16cb8
    VO_DRV_CheckDevUserSyncInfo_x16b20:
    /*00016b20*/ LDR         R3, [R1, #28] 
    /*00016b24*/ SUB         R2, R3, #1 
    /*00016b28*/ CMP         R2, #3 
    /*00016b2c*/ BHI         VO_DRV_CheckDevUserSyncInfo_x16c74
    /*00016b30*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00016b34*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00016b38*/ LDR         R3, [R3] 
    /*00016b3c*/ LDRB        R3, [R3, #40]               @ 0x28 
    /*00016b40*/ SUB         R3, R3, #1 
    /*00016b44*/ CMP         R3, #1 
    /*00016b48*/ BLS         VO_DRV_CheckDevUserSyncInfo_x16b5c
    /*00016b4c*/ LDR         R3, [R1, #24] 
    /*00016b50*/ SUB         R2, R3, #1 
    /*00016b54*/ CMP         R2, #31 
    /*00016b58*/ BHI         VO_DRV_CheckDevUserSyncInfo_x16cd8
    VO_DRV_CheckDevUserSyncInfo_x16b5c:
    /*00016b5c*/ LDR         R3, [R1, #32] 
    /*00016b60*/ CMP         R3, #1 
    /*00016b64*/ MOVLS       R0, #0 
    /*00016b68*/ BHI         VO_DRV_CheckDevUserSyncInfo_x16bf0
    VO_DRV_CheckDevUserSyncInfo_x16b6c:
    /*00016b6c*/ ADD         SP, SP, #36                 @ 0x24 
    /*00016b70*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VO_DRV_CheckDevUserSyncInfo_x16b74:
    /*00016b74*/ LDR         R3, [R1, #4] 
    /*00016b78*/ ADD         R0, R1, #8 
    /*00016b7c*/ CMP         R3, #4096                   @ 0x1000 
    /*00016b80*/ LDM         R0, {R0, R2, IP, LR} 
    /*00016b84*/ BCS         VO_DRV_CheckDevUserSyncInfo_x16ba8
    /*00016b88*/ CMP         R0, #16777216               @ 0x1000000 
    /*00016b8c*/ BCS         VO_DRV_CheckDevUserSyncInfo_x16ba8
    /*00016b90*/ CMP         R2, #63                     @ 0x3f 
    /*00016b94*/ BHI         VO_DRV_CheckDevUserSyncInfo_x16ba8
    /*00016b98*/ CMP         IP, #7 
    /*00016b9c*/ BHI         VO_DRV_CheckDevUserSyncInfo_x16ba8
    /*00016ba0*/ CMP         LR, #7 
    /*00016ba4*/ BLS         VO_DRV_CheckDevUserSyncInfo_x16b20
    VO_DRV_CheckDevUserSyncInfo_x16ba8:
    /*00016ba8*/ STR         LR, [SP, #24] 
    /*00016bac*/ MOV         R1, #15 
    /*00016bb0*/ MOV         LR, #0 
    /*00016bb4*/ STR         IP, [SP, #20] 
    /*00016bb8*/ STR         R2, [SP, #16] 
    /*00016bbc*/ MOVW        IP, #1390                   @ 0x56e 
    /*00016bc0*/ STR         R0, [SP, #12] 
    /*00016bc4*/ MOVW        R2, #0                      @ .LC22 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x76c0] 
    /*00016bc8*/ STR         R3, [SP, #8] 
    /*00016bcc*/ MOVT        R2, #0                      @ .LC22 [R_ARM_MOVT_ABS: .rodata.str1.4+0x76c0] 
    /*00016bd0*/ STR         LR, [SP, #4] 
    /*00016bd4*/ MOV         R0, #3 
    /*00016bd8*/ STR         IP, [SP] 
    /*00016bdc*/ LDR         R3, [PC, #292]              @ 0x0000000000016d08 
    /*00016be0*/ BL          0x0000000000016BE0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016be4*/ MOVW        R0, #32771                  @ 0x8003 
    /*00016be8*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00016bec*/ B           VO_DRV_CheckDevUserSyncInfo_x16b6c
    VO_DRV_CheckDevUserSyncInfo_x16bf0:
    /*00016bf0*/ MOVW        R2, #1431                   @ 0x597 
    /*00016bf4*/ STR         R3, [SP, #8] 
    /*00016bf8*/ MOV         R3, #0 
    /*00016bfc*/ STM         SP, {R2, R3} 
    /*00016c00*/ LDR         R3, [PC, #256]              @ 0x0000000000016d08 
    /*00016c04*/ MOVW        R2, #0                      @ .LC28 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7898] 
    /*00016c08*/ MOVT        R2, #0                      @ .LC28 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7898] 
    VO_DRV_CheckDevUserSyncInfo_x16c0c:
    /*00016c0c*/ MOV         R1, #15 
    /*00016c10*/ MOV         R0, #3 
    /*00016c14*/ BL          0x0000000000016C14          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016c18*/ MOVW        R0, #32771                  @ 0x8003 
    /*00016c1c*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00016c20*/ B           VO_DRV_CheckDevUserSyncInfo_x16b6c
    VO_DRV_CheckDevUserSyncInfo_x16c24:
    /*00016c24*/ STR         R3, [SP, #8] 
    /*00016c28*/ MOVW        R2, #0                      @ .LC24 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7780] 
    /*00016c2c*/ MOVW        R3, #1404                   @ 0x57c 
    /*00016c30*/ STR         R0, [SP, #4] 
    /*00016c34*/ STR         R3, [SP] 
    /*00016c38*/ MOVT        R2, #0                      @ .LC24 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7780] 
    /*00016c3c*/ LDR         R3, [PC, #196]              @ 0x0000000000016d08 
    /*00016c40*/ B           VO_DRV_CheckDevUserSyncInfo_x16c0c
    VO_DRV_CheckDevUserSyncInfo_x16c44:
    /*00016c44*/ STR         R0, [SP, #4] 
    /*00016c48*/ MOVW        R3, #1410                   @ 0x582 
    /*00016c4c*/ MOVW        R2, #0                      @ .LC25 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x77c0] 
    /*00016c50*/ STR         R3, [SP] 
    /*00016c54*/ MOVT        R2, #0                      @ .LC25 [R_ARM_MOVT_ABS: .rodata.str1.4+0x77c0] 
    /*00016c58*/ LDR         R3, [PC, #168]              @ 0x0000000000016d08 
    /*00016c5c*/ MOV         R1, #15 
    /*00016c60*/ MOV         R0, #3 
    /*00016c64*/ BL          0x0000000000016C64          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016c68*/ MOVW        R0, #32771                  @ 0x8003 
    /*00016c6c*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00016c70*/ B           VO_DRV_CheckDevUserSyncInfo_x16b6c
    VO_DRV_CheckDevUserSyncInfo_x16c74:
    /*00016c74*/ MOV         R2, #4 
    /*00016c78*/ STR         R3, [SP, #8] 
    /*00016c7c*/ STR         R2, [SP, #16] 
    /*00016c80*/ MOV         R3, #1 
    /*00016c84*/ MOVW        R2, #1416                   @ 0x588 
    /*00016c88*/ STR         R3, [SP, #12] 
    /*00016c8c*/ MOV         R3, #0 
    /*00016c90*/ STM         SP, {R2, R3} 
    /*00016c94*/ LDR         R3, [PC, #108]              @ 0x0000000000016d08 
    /*00016c98*/ MOVW        R2, #0                      @ .LC26 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x77f4] 
    /*00016c9c*/ MOVT        R2, #0                      @ .LC26 [R_ARM_MOVT_ABS: .rodata.str1.4+0x77f4] 
    VO_DRV_CheckDevUserSyncInfo_x16ca0:
    /*00016ca0*/ MOV         R1, #15 
    /*00016ca4*/ MOV         R0, #3 
    /*00016ca8*/ BL          0x0000000000016CA8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016cac*/ MOVW        R0, #32771                  @ 0x8003 
    /*00016cb0*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00016cb4*/ B           VO_DRV_CheckDevUserSyncInfo_x16b6c
    VO_DRV_CheckDevUserSyncInfo_x16cb8:
    /*00016cb8*/ STR         R3, [SP, #8] 
    /*00016cbc*/ MOVW        R2, #0                      @ .LC23 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x773c] 
    /*00016cc0*/ MOVW        R3, #1398                   @ 0x576 
    /*00016cc4*/ STR         R0, [SP, #4] 
    /*00016cc8*/ STR         R3, [SP] 
    /*00016ccc*/ MOVT        R2, #0                      @ .LC23 [R_ARM_MOVT_ABS: .rodata.str1.4+0x773c] 
    /*00016cd0*/ LDR         R3, [PC, #48]               @ 0x0000000000016d08 
    /*00016cd4*/ B           VO_DRV_CheckDevUserSyncInfo_x16c0c
    VO_DRV_CheckDevUserSyncInfo_x16cd8:
    /*00016cd8*/ MOV         R2, #32 
    /*00016cdc*/ STR         R3, [SP, #8] 
    /*00016ce0*/ STR         R2, [SP, #16] 
    /*00016ce4*/ MOV         R3, #1 
    /*00016ce8*/ MOV         R2, #1424                   @ 0x590 
    /*00016cec*/ STR         R3, [SP, #12] 
    /*00016cf0*/ MOV         R3, #0 
    /*00016cf4*/ STM         SP, {R2, R3} 
    /*00016cf8*/ MOVW        R2, #0                      @ .LC27 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7848] 
    /*00016cfc*/ LDR         R3, [PC, #4]                @ 0x0000000000016d08 
    /*00016d00*/ MOVT        R2, #0                      @ .LC27 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7848] 
    /*00016d04*/ B           VO_DRV_CheckDevUserSyncInfo_x16ca0
    /*00016d08*/ ANDEQ       R0, R0, R8, LSR #27 
FUNC_END VO_DRV_CheckDevUserSyncInfo


FUNC_BEGIN VO_DRV_SetDevUserIntfSyncAttr
    /*00016d0c*/ PUSH        {R4, R5, LR} 
    /*00016d10*/ MOV         R4, R1 
    /*00016d14*/ LDR         R5, [R1, #4] 
    /*00016d18*/ SUB         SP, SP, #60                 @ 0x3c 
    /*00016d1c*/ LDR         R3, [R1, #8] 
    /*00016d20*/ CMP         R0, #0 
    /*00016d24*/ LDR         R1, [R1, #12] 
    /*00016d28*/ MOVW        R2, #58563                  @ 0xe4c3 
    /*00016d2c*/ LDR         LR, [R4, #16] 
    /*00016d30*/ MOVT        R2, #21 
    /*00016d34*/ LDR         IP, [R4, #20] 
    /*00016d38*/ STR         R5, [SP, #12] 
    /*00016d3c*/ MOV         R5, #15 
    /*00016d40*/ STR         R3, [SP, #16] 
    /*00016d44*/ MOV         R3, #0 
    /*00016d48*/ STR         R1, [SP, #20] 
    /*00016d4c*/ MOV         R1, #1 
    /*00016d50*/ STR         R0, [SP, #48]               @ 0x30 
    /*00016d54*/ STR         LR, [SP, #24] 
    /*00016d58*/ STR         IP, [SP, #28] 
    /*00016d5c*/ STR         R2, [SP, #36]               @ 0x24 
    /*00016d60*/ STR         R3, [SP, #52]               @ 0x34 
    /*00016d64*/ STR         R3, [SP, #32] 
    /*00016d68*/ STR         R1, [SP, #40]               @ 0x28 
    /*00016d6c*/ STR         R5, [SP, #44]               @ 0x2c 
    /*00016d70*/ BNE         VO_DRV_SetDevUserIntfSyncAttr_x16d90
    /*00016d74*/ LDR         R3, [R4] 
    /*00016d78*/ CMP         R3, #0 
    /*00016d7c*/ BEQ         VO_DRV_SetDevUserIntfSyncAttr_x16e2c
    /*00016d80*/ CMP         R3, #1 
    /*00016d84*/ BEQ         VO_DRV_SetDevUserIntfSyncAttr_x16dbc
    VO_DRV_SetDevUserIntfSyncAttr_x16d88:
    /*00016d88*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00016d8c*/ POP         {R4, R5, PC} 
    VO_DRV_SetDevUserIntfSyncAttr_x16d90:
    /*00016d90*/ STR         R0, [SP, #4] 
    /*00016d94*/ MOV         R1, R5 
    /*00016d98*/ MOVW        R3, #1489                   @ 0x5d1 
    /*00016d9c*/ MOVW        R2, #0                      @ .LC29 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x78f8] 
    /*00016da0*/ STR         R3, [SP] 
    /*00016da4*/ MOVT        R2, #0                      @ .LC29 [R_ARM_MOVT_ABS: .rodata.str1.4+0x78f8] 
    /*00016da8*/ LDR         R3, [PC, #300]              @ 0x0000000000016edc 
    /*00016dac*/ MOV         R0, #3 
    /*00016db0*/ BL          0x0000000000016DB0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00016db4*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00016db8*/ POP         {R4, R5, PC} 
    VO_DRV_SetDevUserIntfSyncAttr_x16dbc:
    /*00016dbc*/ ADD         R5, SP, #56                 @ 0x38 
    /*00016dc0*/ MOV         R0, #2 
    /*00016dc4*/ MOV         R3, #6 
    /*00016dc8*/ STR         R3, [R5, #-24]!             @ 0xffffffe8 
    /*00016dcc*/ BL          0x0000000000016DCC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016dd0*/ MOV         R2, R5 
    /*00016dd4*/ MOV         R1, #90                     @ 0x5a 
    /*00016dd8*/ ADD         R5, SP, #56                 @ 0x38 
    /*00016ddc*/ LDR         R3, [R0, #20] 
    /*00016de0*/ ADD         R0, SP, #44                 @ 0x2c 
    /*00016de4*/ BLX         R3 
    /*00016de8*/ LDR         R3, [R4, #4] 
    /*00016dec*/ MOV         R0, #2 
    /*00016df0*/ STR         R3, [R5, #-20]!             @ 0xffffffec 
    /*00016df4*/ BL          0x0000000000016DF4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016df8*/ MOV         R2, R5 
    /*00016dfc*/ MOV         R1, #110                    @ 0x6e 
    /*00016e00*/ LDR         R3, [R0, #20] 
    /*00016e04*/ ADD         R0, SP, #44                 @ 0x2c 
    /*00016e08*/ BLX         R3 
    /*00016e0c*/ MOV         R0, #2 
    /*00016e10*/ BL          0x0000000000016E10          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016e14*/ ADD         R2, SP, #40                 @ 0x28 
    /*00016e18*/ MOV         R1, #109                    @ 0x6d 
    /*00016e1c*/ LDR         R3, [R0, #20] 
    /*00016e20*/ ADD         R0, SP, #44                 @ 0x2c 
    /*00016e24*/ BLX         R3 
    /*00016e28*/ B           VO_DRV_SetDevUserIntfSyncAttr_x16d88
    VO_DRV_SetDevUserIntfSyncAttr_x16e2c:
    /*00016e2c*/ MOV         R0, #2 
    /*00016e30*/ BL          0x0000000000016E30          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016e34*/ ADD         R2, SP, #32 
    /*00016e38*/ MOV         R1, #90                     @ 0x5a 
    /*00016e3c*/ LDR         R3, [R0, #20] 
    /*00016e40*/ ADD         R0, SP, #44                 @ 0x2c 
    /*00016e44*/ BLX         R3 
    /*00016e48*/ MOV         R0, #2 
    /*00016e4c*/ BL          0x0000000000016E4C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016e50*/ MOV         R1, R5 
    /*00016e54*/ ADD         R2, SP, #12 
    /*00016e58*/ LDR         R3, [R0, #20] 
    /*00016e5c*/ ADD         R0, SP, #44                 @ 0x2c 
    /*00016e60*/ BLX         R3 
    /*00016e64*/ MOV         R0, #2 
    /*00016e68*/ BL          0x0000000000016E68          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016e6c*/ ADD         R2, SP, #16 
    /*00016e70*/ MOV         R1, #11 
    /*00016e74*/ LDR         R3, [R0, #20] 
    /*00016e78*/ ADD         R0, SP, #44                 @ 0x2c 
    /*00016e7c*/ BLX         R3 
    /*00016e80*/ MOV         R0, #2 
    /*00016e84*/ BL          0x0000000000016E84          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016e88*/ ADD         R2, SP, #20 
    /*00016e8c*/ MOV         R1, #14 
    /*00016e90*/ LDR         R3, [R0, #20] 
    /*00016e94*/ ADD         R0, SP, #44                 @ 0x2c 
    /*00016e98*/ BLX         R3 
    /*00016e9c*/ MOV         R0, #2 
    /*00016ea0*/ BL          0x0000000000016EA0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016ea4*/ ADD         R2, SP, #24 
    /*00016ea8*/ MOV         R1, #12 
    /*00016eac*/ LDR         R3, [R0, #20] 
    /*00016eb0*/ ADD         R0, SP, #44                 @ 0x2c 
    /*00016eb4*/ BLX         R3 
    /*00016eb8*/ MOV         R0, #2 
    /*00016ebc*/ BL          0x0000000000016EBC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016ec0*/ ADD         R2, SP, #28 
    /*00016ec4*/ MOV         R1, #13 
    /*00016ec8*/ LDR         R3, [R0, #20] 
    /*00016ecc*/ ADD         R0, SP, #44                 @ 0x2c 
    /*00016ed0*/ BLX         R3 
    /*00016ed4*/ ADD         SP, SP, #60                 @ 0x3c 
    /*00016ed8*/ POP         {R4, R5, PC} 
    /*00016edc*/ ANDEQ       R0, R0, R4, ASR #27 
FUNC_END VO_DRV_SetDevUserIntfSyncAttr


FUNC_BEGIN VO_DRV_SetDevDiv
    /*00016ee0*/ PUSH        {R4, R5, LR} 
    /*00016ee4*/ SUBS        R4, R0, #0 
    /*00016ee8*/ SUB         SP, SP, #20 
    /*00016eec*/ MOV         R3, #0 
    /*00016ef0*/ SUB         R2, R1, #1 
    /*00016ef4*/ MOV         R5, R1 
    /*00016ef8*/ STR         R3, [SP, #12] 
    /*00016efc*/ MOV         R3, #15 
    /*00016f00*/ STR         R0, [SP, #8] 
    /*00016f04*/ STR         R2, [SP] 
    /*00016f08*/ STR         R3, [SP, #4] 
    /*00016f0c*/ BEQ         VO_DRV_SetDevDiv_x16f44
    VO_DRV_SetDevDiv_x16f10:
    /*00016f10*/ MOVW        R3, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x188] 
    /*00016f14*/ MOVT        R3, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x188] 
    /*00016f18*/ MOV         R2, #20 
    /*00016f1c*/ MLA         R4, R2, R4, R3 
    /*00016f20*/ LDR         R3, [R4, #2312]             @ 0x908 
    /*00016f24*/ TST         R3, #1536                   @ 0x600 
    /*00016f28*/ BEQ         VO_DRV_SetDevDiv_x16f3c
    /*00016f2c*/ CMP         R5, #3 
    /*00016f30*/ MOVEQ       R0, #0 
    /*00016f34*/ MOVNE       R0, #1 
    /*00016f38*/ BL          0x0000000000016F38          @ HAL_DISP_SetLcdSerialPerd [R_ARM_CALL: .text+0x1b428] 
    VO_DRV_SetDevDiv_x16f3c:
    /*00016f3c*/ ADD         SP, SP, #20 
    /*00016f40*/ POP         {R4, R5, PC} 
    VO_DRV_SetDevDiv_x16f44:
    /*00016f44*/ MOV         R0, #2 
    /*00016f48*/ BL          0x0000000000016F48          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016f4c*/ MOV         R2, SP 
    /*00016f50*/ MOV         R1, #95                     @ 0x5f 
    /*00016f54*/ LDR         R3, [R0, #20] 
    /*00016f58*/ ADD         R0, SP, #4 
    /*00016f5c*/ BLX         R3 
    /*00016f60*/ B           VO_DRV_SetDevDiv_x16f10
FUNC_END VO_DRV_SetDevDiv


FUNC_BEGIN VO_DRV_SetHdmiDiv
    /*00016f64*/ MOVW        R2, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00016f68*/ MOVT        R2, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00016f6c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00016f70*/ SUB         SP, SP, #20 
    /*00016f74*/ LDR         IP, [R2] 
    /*00016f78*/ MOV         LR, #1 
    /*00016f7c*/ MOV         R3, #0 
    /*00016f80*/ STR         LR, [SP] 
    /*00016f84*/ STR         R3, [SP, #8] 
    /*00016f88*/ MOV         R2, R0 
    /*00016f8c*/ STR         R3, [SP, #4] 
    /*00016f90*/ MOV         R0, #2 
    /*00016f94*/ STR         R3, [SP, #12] 
    /*00016f98*/ LDRB        R3, [IP, #40]               @ 0x28 
    /*00016f9c*/ STR         R2, [SP, #8] 
    /*00016fa0*/ SUB         R3, R3, #1 
    /*00016fa4*/ CMP         R3, LR 
    /*00016fa8*/ MOV         R3, #15 
    /*00016fac*/ SUBHI       R1, R1, #1 
    /*00016fb0*/ STR         R3, [SP, #4] 
    /*00016fb4*/ STRHI       R1, [SP] 
    /*00016fb8*/ BL          0x0000000000016FB8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00016fbc*/ MOV         R2, SP 
    /*00016fc0*/ MOV         R1, #3 
    /*00016fc4*/ LDR         R3, [R0, #20] 
    /*00016fc8*/ ADD         R0, SP, #4 
    /*00016fcc*/ BLX         R3 
    /*00016fd0*/ ADD         SP, SP, #20 
    /*00016fd4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VO_DRV_SetHdmiDiv


FUNC_BEGIN VO_DRV_SetClkReverse
    /*00016fd8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00016fdc*/ SUB         SP, SP, #28 
    /*00016fe0*/ MOV         R3, #0 
    /*00016fe4*/ MOV         R2, #15 
    /*00016fe8*/ STR         R0, [SP, #4] 
    /*00016fec*/ MOV         R0, #2 
    /*00016ff0*/ STR         R3, [SP, #16] 
    /*00016ff4*/ STR         R3, [SP, #20] 
    /*00016ff8*/ STR         R2, [SP, #12] 
    /*00016ffc*/ BL          0x0000000000016FFC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00017000*/ ADD         R2, SP, #4 
    /*00017004*/ MOV         R1, #83                     @ 0x53 
    /*00017008*/ LDR         R3, [R0, #20] 
    /*0001700c*/ ADD         R0, SP, #12 
    /*00017010*/ BLX         R3 
    /*00017014*/ ADD         SP, SP, #28 
    /*00017018*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VO_DRV_SetClkReverse


FUNC_BEGIN VO_DRV_DevIntEnable
    /*0001701c*/ CMP         R0, #0 
    /*00017020*/ BXNE        LR 
    /*00017024*/ CMP         R1, #1 
    /*00017028*/ PUSH        {R4, LR} 
    /*0001702c*/ BEQ         VO_DRV_DevIntEnable_x17044
    /*00017030*/ MOV         R0, #1 
    /*00017034*/ BL          0x0000000000017034          @ HAL_DISP_ClrIntMask [R_ARM_CALL: .text+0x1ba50] 
    /*00017038*/ MOV         R0, #6 
    /*0001703c*/ POP         {R4, LR} 
    VO_DRV_DevIntEnable_x17040:
    /*00017040*/ B           VO_DRV_DevIntEnable_x17040  @ HAL_DISP_ClrIntMask1 [R_ARM_JUMP24: .text+0x1bafc] 
    VO_DRV_DevIntEnable_x17044:
    /*00017044*/ MOV         R0, R1 
    /*00017048*/ BL          0x0000000000017048          @ HAL_DISP_SetIntMask [R_ARM_CALL: .text+0x1ba04] 
    /*0001704c*/ MOV         R0, #6 
    /*00017050*/ POP         {R4, LR} 
    VO_DRV_DevIntEnable_x17054:
    /*00017054*/ B           VO_DRV_DevIntEnable_x17054  @ HAL_DISP_SetIntMask1 [R_ARM_JUMP24: .text+0x1ba9c] 
FUNC_END VO_DRV_DevIntEnable


FUNC_BEGIN VOU_DRV_IntClear
    VOU_DRV_IntClear_x17058:
    /*00017058*/ B           VOU_DRV_IntClear_x17058     @ HAL_DISP_ClearIntStatus [R_ARM_JUMP24: .text+0x1bbb0] 
FUNC_END VOU_DRV_IntClear


FUNC_BEGIN VOU_DRV_IntDisableAll
    /*0001705c*/ MVN         R0, #0 
    VOU_DRV_IntDisableAll_x17060:
    /*00017060*/ B           VOU_DRV_IntDisableAll_x17060@ HAL_DISP_ClrIntMask [R_ARM_JUMP24: .text+0x1ba50] 
FUNC_END VOU_DRV_IntDisableAll


FUNC_BEGIN VOU_DRV_IntGetStatus
    /*00017064*/ MVN         R0, #0 
    VOU_DRV_IntGetStatus_x17068:
    /*00017068*/ B           VOU_DRV_IntGetStatus_x17068 @ HAL_DISP_GetIntStatus [R_ARM_JUMP24: .text+0x1bb48] 
FUNC_END VOU_DRV_IntGetStatus


FUNC_BEGIN VOU_DRV_IntGetOriStatus
    /*0001706c*/ MVN         R0, #0 
    VOU_DRV_IntGetOriStatus_x17070:
    /*00017070*/ B           VOU_DRV_IntGetOriStatus_x17070@ HAL_DISP_GetOriIntStatus [R_ARM_JUMP24: .text+0x1bb7c] 
FUNC_END VOU_DRV_IntGetOriStatus


FUNC_BEGIN VOU_DRV_ClrIntStatus
    /*00017074*/ TST         R0, #1 
    /*00017078*/ PUSH        {R4, LR} 
    /*0001707c*/ MOV         R4, R0 
    /*00017080*/ SUB         SP, SP, #8 
    /*00017084*/ BNE         VOU_DRV_ClrIntStatus_x170fc
    VOU_DRV_ClrIntStatus_x17088:
    /*00017088*/ TST         R4, #16 
    /*0001708c*/ BNE         VOU_DRV_ClrIntStatus_x170d0
    VOU_DRV_ClrIntStatus_x17090:
    /*00017090*/ TST         R4, #32768                  @ 0x8000 
    /*00017094*/ BNE         VOU_DRV_ClrIntStatus_x170a0
    /*00017098*/ ADD         SP, SP, #8 
    /*0001709c*/ POP         {R4, PC} 
    VOU_DRV_ClrIntStatus_x170a0:
    /*000170a0*/ MOVW        R3, #1652                   @ 0x674 
    /*000170a4*/ MOV         R1, #15 
    /*000170a8*/ STR         R3, [SP] 
    /*000170ac*/ MOVW        R2, #0                      @ .LC32 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7984] 
    /*000170b0*/ LDR         R3, [PC, #112]              @ 0x0000000000017128 
    /*000170b4*/ MOVT        R2, #0                      @ .LC32 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7984] 
    /*000170b8*/ MOV         R0, #7 
    /*000170bc*/ BL          0x00000000000170BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000170c0*/ MOV         R0, #32768                  @ 0x8000 
    /*000170c4*/ ADD         SP, SP, #8 
    /*000170c8*/ POP         {R4, LR} 
    VOU_DRV_ClrIntStatus_x170cc:
    /*000170cc*/ B           VOU_DRV_ClrIntStatus_x170cc @ HAL_DISP_ClearIntStatus [R_ARM_JUMP24: .text+0x1bbb0] 
    VOU_DRV_ClrIntStatus_x170d0:
    /*000170d0*/ MOVW        R3, #1645                   @ 0x66d 
    /*000170d4*/ MOV         R1, #15 
    /*000170d8*/ STR         R3, [SP] 
    /*000170dc*/ MOVW        R2, #0                      @ .LC31 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7958] 
    /*000170e0*/ LDR         R3, [PC, #64]               @ 0x0000000000017128 
    /*000170e4*/ MOVT        R2, #0                      @ .LC31 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7958] 
    /*000170e8*/ MOV         R0, #7 
    /*000170ec*/ BL          0x00000000000170EC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000170f0*/ MOV         R0, #16 
    /*000170f4*/ BL          0x00000000000170F4          @ HAL_DISP_ClearIntStatus [R_ARM_CALL: .text+0x1bbb0] 
    /*000170f8*/ B           VOU_DRV_ClrIntStatus_x17090
    VOU_DRV_ClrIntStatus_x170fc:
    /*000170fc*/ MOVW        R3, #1638                   @ 0x666 
    /*00017100*/ MOV         R1, #15 
    /*00017104*/ STR         R3, [SP] 
    /*00017108*/ MOVW        R2, #0                      @ .LC30 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x792c] 
    /*0001710c*/ LDR         R3, [PC, #20]               @ 0x0000000000017128 
    /*00017110*/ MOVT        R2, #0                      @ .LC30 [R_ARM_MOVT_ABS: .rodata.str1.4+0x792c] 
    /*00017114*/ MOV         R0, #7 
    /*00017118*/ BL          0x0000000000017118          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001711c*/ MOV         R0, #1 
    /*00017120*/ BL          0x0000000000017120          @ HAL_DISP_ClearIntStatus [R_ARM_CALL: .text+0x1bbb0] 
    /*00017124*/ B           VOU_DRV_ClrIntStatus_x17088
    /*00017128*/ ANDEQ       R0, R0, R4, ROR #27 
FUNC_END VOU_DRV_ClrIntStatus


FUNC_BEGIN VOU_DRV_NotifyUser
    /*0001712c*/ MOVW        R3, #0                      @ g_stVoExpCallback [R_ARM_MOVW_ABS_NC: .bss+0x0] 
    /*00017130*/ MOVT        R3, #0                      @ g_stVoExpCallback [R_ARM_MOVT_ABS: .bss+0x0] 
    /*00017134*/ LDR         R3, [R3] 
    /*00017138*/ CMP         R3, #0 
    /*0001713c*/ BXEQ        LR 
    /*00017140*/ BX          R3 
FUNC_END VOU_DRV_NotifyUser


FUNC_BEGIN VO_DRV_SetIntvsyncTeMode
    VO_DRV_SetIntvsyncTeMode_x17144:
    /*00017144*/ B           VO_DRV_SetIntvsyncTeMode_x17144@ HAL_DISP_SetIntvsyncTeMode [R_ARM_JUMP24: .text+0x1b840] 
FUNC_END VO_DRV_SetIntvsyncTeMode


FUNC_BEGIN VO_DRV_IntSetMode
    VO_DRV_IntSetMode_x17148:
    /*00017148*/ B           VO_DRV_IntSetMode_x17148    @ HAL_DISP_SetVtThdMode [R_ARM_JUMP24: .text+0x1b8b0] 
FUNC_END VO_DRV_IntSetMode


FUNC_BEGIN VOU_DRV_IntGetMode
    VOU_DRV_IntGetMode_x1714c:
    /*0001714c*/ B           VOU_DRV_IntGetMode_x1714c   @ HAL_DISP_GetVtThdMode [R_ARM_JUMP24: .text+0x1b920] 
FUNC_END VOU_DRV_IntGetMode


FUNC_BEGIN VOU_DRV_CheckDevPubAttr
    /*00017150*/ PUSH        {R4, R5, R6, LR} 
    /*00017154*/ SUBS        R4, R0, #0 
    /*00017158*/ SUB         SP, SP, #16 
    /*0001715c*/ MOV         R5, R1 
    /*00017160*/ LDR         R6, [R1, #4] 
    /*00017164*/ BNE         VOU_DRV_CheckDevPubAttr_x17308
    VOU_DRV_CheckDevPubAttr_x17168:
    /*00017168*/ CLZ         R3, R6 
    /*0001716c*/ BIC         R2, R6, #32256              @ 0x7e00 
    /*00017170*/ BIC         R2, R2, #56                 @ 0x38 
    /*00017174*/ LSR         R3, R3, #5 
    /*00017178*/ CMP         R2, #0 
    /*0001717c*/ ORRNE       R3, R3, #1 
    /*00017180*/ CMP         R3, #0 
    /*00017184*/ BNE         VOU_DRV_CheckDevPubAttr_x17334
    /*00017188*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*0001718c*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00017190*/ LDR         R3, [R3] 
    /*00017194*/ LDRB        R2, [R3, #40]               @ 0x28 
    /*00017198*/ CMP         R2, #0 
    /*0001719c*/ BNE         VOU_DRV_CheckDevPubAttr_x17270
    VOU_DRV_CheckDevPubAttr_x171a0:
    /*000171a0*/ LDR         R3, [R5, #8] 
    /*000171a4*/ CMP         R3, #47                     @ 0x2f 
    /*000171a8*/ BEQ         VOU_DRV_CheckDevPubAttr_x17328
    /*000171ac*/ SUB         R1, R3, #23 
    /*000171b0*/ CMP         R1, #1 
    /*000171b4*/ BLS         VOU_DRV_CheckDevPubAttr_x17484
    /*000171b8*/ LDR         R0, [R5, #4] 
    /*000171bc*/ TST         R0, #32 
    /*000171c0*/ BEQ         VOU_DRV_CheckDevPubAttr_x17200
    /*000171c4*/ SUB         R1, R3, #25 
    /*000171c8*/ SUB         IP, R3, #2 
    /*000171cc*/ CMP         IP, #20 
    /*000171d0*/ CMPHI       R1, #6 
    /*000171d4*/ BHI         VOU_DRV_CheckDevPubAttr_x17468
    /*000171d8*/ CMP         R2, #0 
    /*000171dc*/ CMPNE       R2, #9 
    /*000171e0*/ MOVEQ       R2, #1 
    /*000171e4*/ MOVNE       R2, #0 
    /*000171e8*/ EOR         R2, R2, #1 
    /*000171ec*/ CMP         R1, #6 
    /*000171f0*/ MOVHI       R2, #0 
    /*000171f4*/ ANDLS       R2, R2, #1 
    /*000171f8*/ CMP         R2, #0 
    /*000171fc*/ BNE         VOU_DRV_CheckDevPubAttr_x173cc
    VOU_DRV_CheckDevPubAttr_x17200:
    /*00017200*/ TST         R0, #16384                  @ 0x4000 
    /*00017204*/ BEQ         VOU_DRV_CheckDevPubAttr_x17214
    /*00017208*/ SUB         R2, R3, #44                 @ 0x2c 
    /*0001720c*/ CMP         R2, #1 
    /*00017210*/ BHI         VOU_DRV_CheckDevPubAttr_x17398
    VOU_DRV_CheckDevPubAttr_x17214:
    /*00017214*/ TST         R0, #16 
    /*00017218*/ BNE         VOU_DRV_CheckDevPubAttr_x172b8
    VOU_DRV_CheckDevPubAttr_x1721c:
    /*0001721c*/ CMP         R3, #1 
    /*00017220*/ MOVLS       R2, #0 
    /*00017224*/ MOVHI       R2, #1 
    /*00017228*/ ANDS        R2, R2, R0, LSR #3 
    /*0001722c*/ BNE         VOU_DRV_CheckDevPubAttr_x17414
    /*00017230*/ SUBS        R2, R3, #39                 @ 0x27 
    /*00017234*/ MOVNE       R2, #1 
    /*00017238*/ ANDS        R2, R2, R0, LSR #10 
    /*0001723c*/ BNE         VOU_DRV_CheckDevPubAttr_x17430
    /*00017240*/ TST         R0, #512                    @ 0x200 
    /*00017244*/ BNE         VOU_DRV_CheckDevPubAttr_x172e0
    VOU_DRV_CheckDevPubAttr_x17248:
    /*00017248*/ SUBS        R2, R3, #42                 @ 0x2a 
    /*0001724c*/ MOVNE       R2, #1 
    /*00017250*/ ANDS        R2, R2, R0, LSR #11 
    /*00017254*/ BNE         VOU_DRV_CheckDevPubAttr_x1744c
    /*00017258*/ SUBS        R2, R3, #43                 @ 0x2b 
    /*0001725c*/ MOVNE       R2, #1 
    /*00017260*/ ANDS        R0, R2, R0, LSR #13 
    /*00017264*/ BNE         VOU_DRV_CheckDevPubAttr_x173f8
    VOU_DRV_CheckDevPubAttr_x17268:
    /*00017268*/ ADD         SP, SP, #16 
    /*0001726c*/ POP         {R4, R5, R6, PC} 
    VOU_DRV_CheckDevPubAttr_x17270:
    /*00017270*/ SUB         R1, R2, #5 
    /*00017274*/ CMP         R1, #7 
    /*00017278*/ BHI         VOU_DRV_CheckDevPubAttr_x1728c
    /*0001727c*/ MOV         R3, #147                    @ 0x93 
    /*00017280*/ MVN         R3, R3, LSR R1 
    /*00017284*/ TST         R3, #1 
    /*00017288*/ BEQ         VOU_DRV_CheckDevPubAttr_x171a0
    VOU_DRV_CheckDevPubAttr_x1728c:
    /*0001728c*/ TST         R6, #32 
    /*00017290*/ BEQ         VOU_DRV_CheckDevPubAttr_x171a0
    /*00017294*/ MOVW        R3, #1713                   @ 0x6b1 
    /*00017298*/ MOVW        R2, #0                      @ .LC35 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7a14] 
    /*0001729c*/ STR         R3, [SP] 
    /*000172a0*/ MOVT        R2, #0                      @ .LC35 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7a14] 
    /*000172a4*/ LDR         R3, [PC, #528]              @ 0x00000000000174bc 
    /*000172a8*/ MOV         R1, #15 
    /*000172ac*/ MOV         R0, #3 
    /*000172b0*/ BL          0x00000000000172B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000172b4*/ B           VOU_DRV_CheckDevPubAttr_x1735c
    VOU_DRV_CheckDevPubAttr_x172b8:
    /*000172b8*/ SUB         R2, R3, #2 
    /*000172bc*/ CMP         R2, #20 
    /*000172c0*/ BLS         VOU_DRV_CheckDevPubAttr_x1721c
    /*000172c4*/ STR         R3, [SP, #8] 
    /*000172c8*/ MOVW        R2, #0                      @ .LC40 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7b80] 
    /*000172cc*/ MOVW        R3, #1785                   @ 0x6f9 
    /*000172d0*/ STR         R4, [SP, #4] 
    /*000172d4*/ STR         R3, [SP] 
    /*000172d8*/ MOVT        R2, #0                      @ .LC40 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7b80] 
    /*000172dc*/ B           VOU_DRV_CheckDevPubAttr_x173b0
    VOU_DRV_CheckDevPubAttr_x172e0:
    /*000172e0*/ SUB         R2, R3, #40                 @ 0x28 
    /*000172e4*/ CMP         R2, #1 
    /*000172e8*/ BLS         VOU_DRV_CheckDevPubAttr_x17248
    /*000172ec*/ STR         R3, [SP, #8] 
    /*000172f0*/ MOVW        R2, #0                      @ .LC43 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7c68] 
    /*000172f4*/ MOVW        R3, #1812                   @ 0x714 
    /*000172f8*/ STR         R4, [SP, #4] 
    /*000172fc*/ STR         R3, [SP] 
    /*00017300*/ MOVT        R2, #0                      @ .LC43 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7c68] 
    /*00017304*/ B           VOU_DRV_CheckDevPubAttr_x173b0
    VOU_DRV_CheckDevPubAttr_x17308:
    /*00017308*/ MOVW        R3, #0                      @ .LC33 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x79b8] 
    /*0001730c*/ MOVW        R0, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x74bc] 
    /*00017310*/ MOVT        R3, #0                      @ .LC33 [R_ARM_MOVT_ABS: .rodata.str1.4+0x79b8] 
    /*00017314*/ MOVT        R0, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x74bc] 
    /*00017318*/ MOVW        R2, #1700                   @ 0x6a4 
    /*0001731c*/ LDR         R1, [PC, #408]              @ 0x00000000000174bc 
    /*00017320*/ BL          0x0000000000017320          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00017324*/ B           VOU_DRV_CheckDevPubAttr_x17168
    VOU_DRV_CheckDevPubAttr_x17328:
    /*00017328*/ MOV         R0, #0 
    /*0001732c*/ ADD         SP, SP, #16 
    /*00017330*/ POP         {R4, R5, R6, PC} 
    VOU_DRV_CheckDevPubAttr_x17334:
    /*00017334*/ MOVW        R3, #1707                   @ 0x6ab 
    /*00017338*/ MOVW        R2, #0                      @ .LC34 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x79d0] 
    /*0001733c*/ STR         R3, [SP] 
    /*00017340*/ MOVT        R2, #0                      @ .LC34 [R_ARM_MOVT_ABS: .rodata.str1.4+0x79d0] 
    /*00017344*/ STR         R6, [SP, #8] 
    /*00017348*/ MOV         R1, #15 
    /*0001734c*/ STR         R4, [SP, #4] 
    /*00017350*/ MOV         R0, #3 
    /*00017354*/ LDR         R3, [PC, #352]              @ 0x00000000000174bc 
    /*00017358*/ BL          0x0000000000017358          @ HI_LOG [R_ARM_CALL: +0x0] 
    VOU_DRV_CheckDevPubAttr_x1735c:
    /*0001735c*/ LDR         R3, [R5, #4] 
    /*00017360*/ MOV         R1, #1728                   @ 0x6c0 
    /*00017364*/ STR         R4, [SP, #4] 
    /*00017368*/ MOVW        R2, #0                      @ .LC46 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7d58] 
    /*0001736c*/ STR         R1, [SP] 
    /*00017370*/ MOVT        R2, #0                      @ .LC46 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7d58] 
    /*00017374*/ STR         R3, [SP, #8] 
    /*00017378*/ MOV         R1, #15 
    /*0001737c*/ LDR         R3, [PC, #316]              @ 0x00000000000174c0 
    /*00017380*/ MOV         R0, #3 
    /*00017384*/ BL          0x0000000000017384          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017388*/ MOVW        R0, #32776                  @ 0x8008 
    /*0001738c*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00017390*/ ADD         SP, SP, #16 
    /*00017394*/ POP         {R4, R5, R6, PC} 
    VOU_DRV_CheckDevPubAttr_x17398:
    /*00017398*/ MOVW        R2, #0                      @ .LC39 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7b28] 
    /*0001739c*/ MOVT        R2, #0                      @ .LC39 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7b28] 
    /*000173a0*/ STR         R3, [SP, #8] 
    /*000173a4*/ MOVW        R3, #1774                   @ 0x6ee 
    /*000173a8*/ STR         R4, [SP, #4] 
    /*000173ac*/ STR         R3, [SP] 
    VOU_DRV_CheckDevPubAttr_x173b0:
    /*000173b0*/ LDR         R3, [PC, #264]              @ 0x00000000000174c0 
    /*000173b4*/ MOV         R1, #15 
    /*000173b8*/ MOV         R0, #3 
    /*000173bc*/ BL          0x00000000000173BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000173c0*/ MOVW        R0, #32776                  @ 0x8008 
    /*000173c4*/ MOVT        R0, #40975                  @ 0xa00f 
    /*000173c8*/ B           VOU_DRV_CheckDevPubAttr_x17268
    VOU_DRV_CheckDevPubAttr_x173cc:
    /*000173cc*/ MOVW        R3, #1762                   @ 0x6e2 
    /*000173d0*/ MOVW        R2, #0                      @ .LC38 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7af0] 
    /*000173d4*/ STR         R3, [SP] 
    /*000173d8*/ MOVT        R2, #0                      @ .LC38 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7af0] 
    /*000173dc*/ LDR         R3, [PC, #220]              @ 0x00000000000174c0 
    /*000173e0*/ MOV         R1, #15 
    /*000173e4*/ MOV         R0, #3 
    /*000173e8*/ BL          0x00000000000173E8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000173ec*/ MOVW        R0, #32776                  @ 0x8008 
    /*000173f0*/ MOVT        R0, #40975                  @ 0xa00f 
    /*000173f4*/ B           VOU_DRV_CheckDevPubAttr_x17268
    VOU_DRV_CheckDevPubAttr_x173f8:
    /*000173f8*/ STR         R3, [SP, #8] 
    /*000173fc*/ MOVW        R2, #0                      @ .LC45 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7d08] 
    /*00017400*/ MOVW        R3, #1835                   @ 0x72b 
    /*00017404*/ STR         R4, [SP, #4] 
    /*00017408*/ STR         R3, [SP] 
    /*0001740c*/ MOVT        R2, #0                      @ .LC45 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7d08] 
    /*00017410*/ B           VOU_DRV_CheckDevPubAttr_x173b0
    VOU_DRV_CheckDevPubAttr_x17414:
    /*00017414*/ STR         R3, [SP, #8] 
    /*00017418*/ MOVW        R2, #0                      @ .LC41 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7bcc] 
    /*0001741c*/ MOVW        R3, #1794                   @ 0x702 
    /*00017420*/ STR         R4, [SP, #4] 
    /*00017424*/ STR         R3, [SP] 
    /*00017428*/ MOVT        R2, #0                      @ .LC41 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7bcc] 
    /*0001742c*/ B           VOU_DRV_CheckDevPubAttr_x173b0
    VOU_DRV_CheckDevPubAttr_x17430:
    /*00017430*/ STR         R3, [SP, #8] 
    /*00017434*/ MOVW        R2, #0                      @ .LC42 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7c18] 
    /*00017438*/ MOVW        R3, #1803                   @ 0x70b 
    /*0001743c*/ STR         R4, [SP, #4] 
    /*00017440*/ STR         R3, [SP] 
    /*00017444*/ MOVT        R2, #0                      @ .LC42 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7c18] 
    /*00017448*/ B           VOU_DRV_CheckDevPubAttr_x173b0
    VOU_DRV_CheckDevPubAttr_x1744c:
    /*0001744c*/ STR         R3, [SP, #8] 
    /*00017450*/ MOVW        R2, #0                      @ .LC44 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7cb8] 
    /*00017454*/ MOVW        R3, #1821                   @ 0x71d 
    /*00017458*/ STR         R4, [SP, #4] 
    /*0001745c*/ STR         R3, [SP] 
    /*00017460*/ MOVT        R2, #0                      @ .LC44 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7cb8] 
    /*00017464*/ B           VOU_DRV_CheckDevPubAttr_x173b0
    VOU_DRV_CheckDevPubAttr_x17468:
    /*00017468*/ STR         R3, [SP, #8] 
    /*0001746c*/ MOVW        R2, #0                      @ .LC37 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7aa4] 
    /*00017470*/ MOVW        R3, #1754                   @ 0x6da 
    /*00017474*/ STR         R4, [SP, #4] 
    /*00017478*/ STR         R3, [SP] 
    /*0001747c*/ MOVT        R2, #0                      @ .LC37 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7aa4] 
    /*00017480*/ B           VOU_DRV_CheckDevPubAttr_x173b0
    VOU_DRV_CheckDevPubAttr_x17484:
    /*00017484*/ STR         R3, [SP, #12] 
    /*00017488*/ MOVW        R1, #1742                   @ 0x6ce 
    /*0001748c*/ STR         R3, [SP, #8] 
    /*00017490*/ MOVW        R2, #0                      @ .LC36 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7a44] 
    /*00017494*/ STR         R1, [SP] 
    /*00017498*/ MOVT        R2, #0                      @ .LC36 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7a44] 
    /*0001749c*/ STR         R4, [SP, #4] 
    /*000174a0*/ MOV         R1, #15 
    /*000174a4*/ LDR         R3, [PC, #20]               @ 0x00000000000174c0 
    /*000174a8*/ MOV         R0, #3 
    /*000174ac*/ BL          0x00000000000174AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000174b0*/ MOVW        R0, #32776                  @ 0x8008 
    /*000174b4*/ MOVT        R0, #40975                  @ 0xa00f 
    /*000174b8*/ B           VOU_DRV_CheckDevPubAttr_x17268
    /*000174bc*/ STRDEQ      R0, [R0], -IP 
    /*000174c0*/ ANDEQ       R0, R0, R4, LSL LR 
FUNC_END VOU_DRV_CheckDevPubAttr


FUNC_BEGIN VOU_DRV_SetPubAttr
    /*000174c4*/ PUSH        {R4, R5, R6, LR} 
    /*000174c8*/ MOV         R5, #144                    @ 0x90 
    /*000174cc*/ MUL         R5, R5, R0 
    /*000174d0*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*000174d4*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*000174d8*/ MOV         R2, #60                     @ 0x3c 
    /*000174dc*/ ADD         R0, R5, #28 
    /*000174e0*/ ADD         R0, R4, R0 
    /*000174e4*/ ADD         R4, R4, R5 
    /*000174e8*/ BL          0x00000000000174E8          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*000174ec*/ MOV         R3, #1 
    /*000174f0*/ MOV         R0, #0 
    /*000174f4*/ STR         R3, [R4, #24] 
    /*000174f8*/ POP         {R4, R5, R6, PC} 
FUNC_END VOU_DRV_SetPubAttr


FUNC_BEGIN VOU_DRV_SetPartionMode
    /*000174fc*/ MOV         R0, #0 
    /*00017500*/ BX          LR 
FUNC_END VOU_DRV_SetPartionMode


FUNC_BEGIN VOU_DRV_GetWbcInSize
    /*00017504*/ MOV         R0, #0 
    /*00017508*/ BX          LR 
FUNC_END VOU_DRV_GetWbcInSize


FUNC_BEGIN VOU_DRV_SetLayerAttr
    /*0001750c*/ PUSH        {R4, R5, R6, LR} 
    /*00017510*/ MOV         R5, #188                    @ 0xbc 
    /*00017514*/ MUL         R5, R5, R0 
    /*00017518*/ MOVW        R4, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x5480] 
    /*0001751c*/ MOVT        R4, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x5480] 
    /*00017520*/ MOV         R2, #44                     @ 0x2c 
    /*00017524*/ ADD         R0, R4, R5 
    /*00017528*/ ADD         R4, R4, R5 
    /*0001752c*/ ADD         R0, R0, #2160               @ 0x870 
    /*00017530*/ ADD         R0, R0, #8 
    /*00017534*/ BL          0x0000000000017534          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00017538*/ MOV         R3, #1 
    /*0001753c*/ MOV         R0, #0 
    /*00017540*/ STR         R3, [R4, #2140]             @ 0x85c 
    /*00017544*/ POP         {R4, R5, R6, PC} 
FUNC_END VOU_DRV_SetLayerAttr


FUNC_BEGIN VOU_DRV_LayerEnable
    /*00017548*/ PUSH        {R4, R5, R6, LR} 
    /*0001754c*/ MOV         R4, R0 
    /*00017550*/ MOV         R5, R1 
    /*00017554*/ BL          0x0000000000017554          @ HAL_VIDEO_HFIR_SetCkGtEn [R_ARM_CALL: .text+0x1d668] 
    /*00017558*/ MOV         R1, R5 
    /*0001755c*/ MOV         R0, R4 
    /*00017560*/ POP         {R4, R5, R6, LR} 
    VOU_DRV_LayerEnable_x17564:
    /*00017564*/ B           VOU_DRV_LayerEnable_x17564  @ HAL_LAYER_EnableLayer [R_ARM_JUMP24: .text+0x1cf68] 
FUNC_END VOU_DRV_LayerEnable


FUNC_BEGIN VOU_DRV_GetLayerEnable
    /*00017568*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001756c*/ SUB         SP, SP, #12 
    /*00017570*/ ADD         R1, SP, #8 
    /*00017574*/ MOV         R3, #0 
    /*00017578*/ STR         R3, [R1, #-4]! 
    /*0001757c*/ BL          0x000000000001757C          @ HAL_LAYER_GetLayerEnable [R_ARM_CALL: .text+0x1d018] 
    /*00017580*/ LDR         R0, [SP, #4] 
    /*00017584*/ ADD         SP, SP, #12 
    /*00017588*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VOU_DRV_GetLayerEnable


FUNC_BEGIN VOU_DRV_SetPpcClkSel
    /*0001758c*/ BX          LR 
FUNC_END VOU_DRV_SetPpcClkSel


FUNC_BEGIN VOU_DRV_SetLayerAlpha
    /*00017590*/ UXTB        R1, R1 
    VOU_DRV_SetLayerAlpha_x17594:
    /*00017594*/ B           VOU_DRV_SetLayerAlpha_x17594@ HAL_LAYER_SetLayerGAlpha [R_ARM_JUMP24: .text+0x1e3a8] 
FUNC_END VOU_DRV_SetLayerAlpha


FUNC_BEGIN VOU_DRV_SetLayerBkGrd
    /*00017598*/ BX          LR 
FUNC_END VOU_DRV_SetLayerBkGrd


FUNC_BEGIN VOU_DRV_SetLayerDataFmt
    /*0001759c*/ CMP         R0, #0 
    /*000175a0*/ SUB         R1, R1, #1 
    /*000175a4*/ MOVEQ       R0, #0 
    /*000175a8*/ MOVNE       R0, #9 
    /*000175ac*/ CMP         R1, #2 
    /*000175b0*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0xcdc] 
    /*000175b4*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0xcdc] 
    /*000175b8*/ ADDLS       R3, R3, R1, LSL #2 
    /*000175bc*/ MOVHI       R1, #234                    @ 0xea 
    /*000175c0*/ LDRLS       R1, [R3, #336]              @ 0x150 
    VOU_DRV_SetLayerDataFmt_x175c4:
    /*000175c4*/ B           VOU_DRV_SetLayerDataFmt_x175c4@ HAL_LAYER_SetLayerDataFmt [R_ARM_JUMP24: .text+0x1d0b0] 
FUNC_END VOU_DRV_SetLayerDataFmt


FUNC_BEGIN VOU_DRV_GetLayerDataFmt
    /*000175c8*/ CMP         R0, #0 
    /*000175cc*/ PUSH        {R4, R5, LR} 
    /*000175d0*/ SUB         SP, SP, #28 
    /*000175d4*/ MOV         R5, R0 
    /*000175d8*/ MOV         R4, R1 
    /*000175dc*/ MOVNE       R0, #9 
    /*000175e0*/ MOVEQ       R0, #0 
    /*000175e4*/ ADD         R1, SP, #20 
    /*000175e8*/ BL          0x00000000000175E8          @ HAL_LAYER_GetLayerDataFmt [R_ARM_CALL: .text+0x1d24c] 
    /*000175ec*/ LDR         R3, [SP, #20] 
    /*000175f0*/ CMP         R3, #2 
    /*000175f4*/ BEQ         VOU_DRV_GetLayerDataFmt_x17638
    /*000175f8*/ CMP         R3, #3 
    /*000175fc*/ BEQ         VOU_DRV_GetLayerDataFmt_x17638
    /*00017600*/ CMP         R3, #1 
    /*00017604*/ BEQ         VOU_DRV_GetLayerDataFmt_x17638
    /*00017608*/ STR         R3, [SP, #8] 
    /*0001760c*/ MOV         R1, #15 
    /*00017610*/ MOVW        R3, #1967                   @ 0x7af 
    /*00017614*/ STR         R5, [SP, #4] 
    /*00017618*/ STR         R3, [SP] 
    /*0001761c*/ MOVW        R2, #0                      @ .LC47 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7da0] 
    /*00017620*/ LDR         R3, [PC, #28]               @ 0x0000000000017644 
    /*00017624*/ MOVT        R2, #0                      @ .LC47 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7da0] 
    /*00017628*/ MOV         R0, #4 
    /*0001762c*/ BL          0x000000000001762C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017630*/ ADD         SP, SP, #28 
    /*00017634*/ POP         {R4, R5, PC} 
    VOU_DRV_GetLayerDataFmt_x17638:
    /*00017638*/ STR         R3, [R4] 
    /*0001763c*/ ADD         SP, SP, #28 
    /*00017640*/ POP         {R4, R5, PC} 
    /*00017644*/ ANDEQ       R0, R0, R8, LSR LR 
FUNC_END VOU_DRV_GetLayerDataFmt


FUNC_BEGIN VOU_DRV_IsVirtDev
    /*00017648*/ MOV         R0, #0 
    /*0001764c*/ BX          LR 
FUNC_END VOU_DRV_IsVirtDev


FUNC_BEGIN VOU_DRV_VirtDev2VirtId
    /*00017650*/ BX          LR 
FUNC_END VOU_DRV_VirtDev2VirtId


FUNC_BEGIN VOU_DRV_SetImageInReso
    VOU_DRV_SetImageInReso_x17654:
    /*00017654*/ B           VOU_DRV_SetImageInReso_x17654@ HAL_LAYER_SetLayerInRect [R_ARM_JUMP24: .text+0x1e270] 
FUNC_END VOU_DRV_SetImageInReso


FUNC_BEGIN VOU_DRV_SetSrcImageReso
    VOU_DRV_SetSrcImageReso_x17658:
    /*00017658*/ B           VOU_DRV_SetSrcImageReso_x17658@ HAL_LAYER_SetSrcResolution [R_ARM_JUMP24: .text+0x1d1d8] 
FUNC_END VOU_DRV_SetSrcImageReso


FUNC_BEGIN VOU_DRV_SetImageOutReso
    VOU_DRV_SetImageOutReso_x1765c:
    /*0001765c*/ B           VOU_DRV_SetImageOutReso_x1765c@ HAL_LAYER_SetLayerOutRect [R_ARM_JUMP24: .text+0x1e3a0] 
FUNC_END VOU_DRV_SetImageOutReso


FUNC_BEGIN VOU_DRV_SetLayerDispRect
    VOU_DRV_SetLayerDispRect_x17660:
    /*00017660*/ B           VOU_DRV_SetLayerDispRect_x17660@ HAL_VIDEO_SetLayerDispRect [R_ARM_JUMP24: .text+0x1c5a0] 
FUNC_END VOU_DRV_SetLayerDispRect


FUNC_BEGIN VOU_DRV_SetLayerVideoRect
    VOU_DRV_SetLayerVideoRect_x17664:
    /*00017664*/ B           VOU_DRV_SetLayerVideoRect_x17664@ HAL_VIDEO_SetLayerVideoRect [R_ARM_JUMP24: .text+0x1c74c] 
FUNC_END VOU_DRV_SetLayerVideoRect


FUNC_BEGIN VOU_DRV_SetLayerBgcolor
    /*00017668*/ MOVW        R3, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x5480] 
    /*0001766c*/ MOVT        R3, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x5480] 
    /*00017670*/ MOV         IP, #188                    @ 0xbc 
    /*00017674*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*00017678*/ MLA         IP, IP, R0, R3 
    /*0001767c*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*00017680*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00017684*/ MOV         R4, #144                    @ 0x90 
    /*00017688*/ MOVW        LR, #65088                  @ 0xfe40 
    /*0001768c*/ SUB         SP, SP, #8 
    /*00017690*/ LDR         R3, [IP, #2144]             @ 0x860 
    /*00017694*/ MLA         R3, R4, R3, R2 
    /*00017698*/ LDR         R3, [R3, #32] 
    /*0001769c*/ TST         LR, R3 
    /*000176a0*/ BEQ         VOU_DRV_SetLayerBgcolor_x176d8
    /*000176a4*/ LSR         R2, R1, #14 
    /*000176a8*/ LSR         R3, R1, #6 
    /*000176ac*/ LSL         R1, R1, #2 
    /*000176b0*/ AND         R2, R2, #1020               @ 0x3fc 
    /*000176b4*/ AND         R1, R1, #1020               @ 0x3fc 
    /*000176b8*/ STRH        R1, [SP, #6] 
    /*000176bc*/ ADD         R1, SP, #2 
    /*000176c0*/ AND         R3, R3, #1020               @ 0x3fc 
    /*000176c4*/ STRH        R2, [SP, #2] 
    /*000176c8*/ STRH        R3, [SP, #4] 
    /*000176cc*/ BL          0x00000000000176CC          @ HAL_LAYER_SetLayerBgColor [R_ARM_CALL: .text+0x1e700] 
    /*000176d0*/ ADD         SP, SP, #8 
    /*000176d4*/ POP         {R4, R5, R6, R7, R8, PC} 
    VOU_DRV_SetLayerBgcolor_x176d8:
    /*000176d8*/ UBFX        R3, R1, #8, #8 
    /*000176dc*/ UBFX        R2, R1, #16, #8 
    /*000176e0*/ MVN         IP, #93                     @ 0x5d 
    /*000176e4*/ UXTB        R1, R1 
    /*000176e8*/ MOV         R5, #112                    @ 0x70 
    /*000176ec*/ ADD         R7, R3, R3, LSL #7 
    /*000176f0*/ MUL         IP, IP, R3 
    /*000176f4*/ MVN         LR, #37                     @ 0x25 
    /*000176f8*/ MLA         R4, R5, R2, IP 
    /*000176fc*/ MOV         R8, #66                     @ 0x42 
    /*00017700*/ MUL         LR, LR, R2 
    /*00017704*/ MVN         IP, #17 
    /*00017708*/ MLA         LR, R5, R1, LR 
    /*0001770c*/ MVN         R6, #73                     @ 0x49 
    /*00017710*/ MLA         R2, R8, R2, R7 
    /*00017714*/ MOV         R5, #25 
    /*00017718*/ MLA         IP, IP, R1, R4 
    /*0001771c*/ MOV         R4, #64512                  @ 0xfc00 
    /*00017720*/ MLA         LR, R6, R3, LR 
    /*00017724*/ MOVT        R4, #15 
    /*00017728*/ MLA         R1, R5, R1, R2 
    /*0001772c*/ MOV         R2, #0 
    /*00017730*/ ASR         IP, IP, #8 
    /*00017734*/ MOVT        R2, #16368                  @ 0x3ff0 
    /*00017738*/ ADD         IP, IP, #128                @ 0x80 
    /*0001773c*/ ASR         LR, LR, #8 
    /*00017740*/ ADD         LR, LR, #128                @ 0x80 
    /*00017744*/ LSL         IP, IP, #2 
    /*00017748*/ ASR         R3, R1, #8 
    /*0001774c*/ ADD         R3, R3, #16 
    /*00017750*/ AND         LR, R4, LR, LSL #12 
    /*00017754*/ UXTH        IP, IP 
    /*00017758*/ AND         R3, R2, R3, LSL #22 
    /*0001775c*/ ORR         R3, R3, LR 
    /*00017760*/ ORR         R3, R3, IP 
    /*00017764*/ UBFX        R1, R3, #10, #10 
    /*00017768*/ STRH        R1, [SP, #4] 
    /*0001776c*/ ADD         R1, SP, #2 
    /*00017770*/ UBFX        R2, R3, #0, #10 
    /*00017774*/ LSR         R3, R3, #20 
    /*00017778*/ STRH        R2, [SP, #6] 
    /*0001777c*/ STRH        R3, [SP, #2] 
    /*00017780*/ BL          0x0000000000017780          @ HAL_LAYER_SetLayerBgColor [R_ARM_CALL: .text+0x1e700] 
    /*00017784*/ ADD         SP, SP, #8 
    /*00017788*/ POP         {R4, R5, R6, R7, R8, PC} 
FUNC_END VOU_DRV_SetLayerBgcolor


FUNC_BEGIN VOU_DRV_GetDisplayRect
    /*0001778c*/ PUSH        {R4, R5, R6, LR} 
    /*00017790*/ SUB         SP, SP, #24 
    /*00017794*/ LDR         LR, [R1, #8] 
    /*00017798*/ LDR         IP, [R2] 
    /*0001779c*/ LDR         R5, [R1, #12] 
    /*000177a0*/ CMP         LR, IP 
    /*000177a4*/ LDR         R4, [R2, #4] 
    /*000177a8*/ BLS         VOU_DRV_GetDisplayRect_x1788c
    /*000177ac*/ CMP         R5, R4 
    /*000177b0*/ BLS         VOU_DRV_GetDisplayRect_x1788c
    /*000177b4*/ LDR         LR, [R0] 
    /*000177b8*/ LDR         R5, [R2, #8] 
    /*000177bc*/ LDR         R4, [R0, #4] 
    /*000177c0*/ CMP         LR, R5 
    /*000177c4*/ BLS         VOU_DRV_GetDisplayRect_x1787c
    VOU_DRV_GetDisplayRect_x177c8:
    /*000177c8*/ LDR         R6, [R0, #20] 
    /*000177cc*/ CMP         R6, #0 
    /*000177d0*/ BNE         VOU_DRV_GetDisplayRect_x17908
    VOU_DRV_GetDisplayRect_x177d4:
    /*000177d4*/ CMP         LR, #31 
    /*000177d8*/ BLS         VOU_DRV_GetDisplayRect_x178c8
    /*000177dc*/ CMP         R4, #31 
    /*000177e0*/ BLS         VOU_DRV_GetDisplayRect_x178c8
    /*000177e4*/ STR         IP, [R3] 
    /*000177e8*/ MOV         R6, #0 
    /*000177ec*/ LDR         IP, [R2, #4] 
    /*000177f0*/ STR         IP, [R3, #4] 
    /*000177f4*/ LDR         LR, [R0] 
    /*000177f8*/ LDR         IP, [R2, #8] 
    /*000177fc*/ CMP         LR, IP 
    /*00017800*/ MOVCS       R4, IP 
    /*00017804*/ MOVCC       R4, LR 
    /*00017808*/ STR         R4, [R3, #8] 
    /*0001780c*/ LDR         IP, [R0, #4] 
    /*00017810*/ LDR         R0, [R2, #12] 
    /*00017814*/ CMP         IP, R0 
    /*00017818*/ MOVCS       IP, R0 
    /*0001781c*/ STR         IP, [R3, #12] 
    /*00017820*/ LDR         R0, [R2] 
    /*00017824*/ LDR         LR, [R1, #8] 
    /*00017828*/ CMP         LR, R0 
    /*0001782c*/ MOVCC       R0, LR 
    /*00017830*/ STR         R0, [R3] 
    /*00017834*/ LDR         R5, [R2, #4] 
    /*00017838*/ LDR         R2, [R1, #12] 
    /*0001783c*/ CMP         R2, R5 
    /*00017840*/ MOVCC       R5, R2 
    /*00017844*/ STR         R5, [R3, #4] 
    /*00017848*/ LDR         LR, [R1, #8] 
    /*0001784c*/ SUB         LR, LR, R0 
    /*00017850*/ CMP         LR, R4 
    /*00017854*/ MOVCS       LR, R4 
    /*00017858*/ STR         LR, [R3, #8] 
    /*0001785c*/ LDR         R2, [R1, #12] 
    /*00017860*/ SUB         R2, R2, R5 
    /*00017864*/ CMP         R2, IP 
    /*00017868*/ MOVCS       R2, IP 
    /*0001786c*/ STR         R2, [R3, #12] 
    VOU_DRV_GetDisplayRect_x17870:
    /*00017870*/ MOV         R0, R6 
    /*00017874*/ ADD         SP, SP, #24 
    /*00017878*/ POP         {R4, R5, R6, PC} 
    VOU_DRV_GetDisplayRect_x1787c:
    /*0001787c*/ LDR         R6, [R2, #12] 
    /*00017880*/ CMP         R4, R6 
    /*00017884*/ BLS         VOU_DRV_GetDisplayRect_x177d4
    /*00017888*/ B           VOU_DRV_GetDisplayRect_x177c8
    VOU_DRV_GetDisplayRect_x1788c:
    /*0001788c*/ MOVW        R3, #2069                   @ 0x815 
    /*00017890*/ STR         R5, [SP, #16] 
    /*00017894*/ STR         R3, [SP] 
    /*00017898*/ MOVW        R2, #0                      @ .LC48 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7de0] 
    /*0001789c*/ STR         LR, [SP, #12] 
    /*000178a0*/ MOVT        R2, #0                      @ .LC48 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7de0] 
    /*000178a4*/ STR         R4, [SP, #8] 
    /*000178a8*/ MOV         R1, #15 
    /*000178ac*/ STR         IP, [SP, #4] 
    /*000178b0*/ MOV         R0, #3 
    /*000178b4*/ LDR         R3, [PC, #140]              @ 0x0000000000017948 
    /*000178b8*/ MOVW        R6, #32771                  @ 0x8003 
    /*000178bc*/ BL          0x00000000000178BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000178c0*/ MOVT        R6, #40975                  @ 0xa00f 
    /*000178c4*/ B           VOU_DRV_GetDisplayRect_x17870
    VOU_DRV_GetDisplayRect_x178c8:
    /*000178c8*/ MOV         R3, #32 
    /*000178cc*/ MOVW        R1, #2084                   @ 0x824 
    /*000178d0*/ STR         R3, [SP, #16] 
    /*000178d4*/ MOVW        R2, #0                      @ .LC50 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7ec8] 
    /*000178d8*/ STR         R3, [SP, #12] 
    /*000178dc*/ MOVT        R2, #0                      @ .LC50 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7ec8] 
    /*000178e0*/ STR         R1, [SP] 
    /*000178e4*/ MOV         R0, #3 
    /*000178e8*/ STR         R4, [SP, #8] 
    /*000178ec*/ MOV         R1, #15 
    /*000178f0*/ STR         LR, [SP, #4] 
    /*000178f4*/ MOVW        R6, #32771                  @ 0x8003 
    /*000178f8*/ LDR         R3, [PC, #72]               @ 0x0000000000017948 
    /*000178fc*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00017900*/ BL          0x0000000000017900          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017904*/ B           VOU_DRV_GetDisplayRect_x17870
    VOU_DRV_GetDisplayRect_x17908:
    /*00017908*/ LDR         R1, [R2, #12] 
    /*0001790c*/ MOVW        R3, #2077                   @ 0x81d 
    /*00017910*/ STR         R5, [SP, #12] 
    /*00017914*/ MOVW        R2, #0                      @ .LC49 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7e50] 
    /*00017918*/ STR         R3, [SP] 
    /*0001791c*/ MOVT        R2, #0                      @ .LC49 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7e50] 
    /*00017920*/ STR         R1, [SP, #16] 
    /*00017924*/ MOV         R0, #3 
    /*00017928*/ STR         R4, [SP, #8] 
    /*0001792c*/ MOV         R1, #15 
    /*00017930*/ STR         LR, [SP, #4] 
    /*00017934*/ MOVW        R6, #32771                  @ 0x8003 
    /*00017938*/ LDR         R3, [PC, #8]                @ 0x0000000000017948 
    /*0001793c*/ MOVT        R6, #40975                  @ 0xa00f 
    /*00017940*/ BL          0x0000000000017940          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017944*/ B           VOU_DRV_GetDisplayRect_x17870
    /*00017948*/ ANDEQ       R0, R0, R0, ASR LR 
FUNC_END VOU_DRV_GetDisplayRect


FUNC_BEGIN VO_DRV_SetMultiRegionEnable
    VO_DRV_SetMultiRegionEnable_x1794c:
    /*0001794c*/ B           VO_DRV_SetMultiRegionEnable_x1794c@ VDP_FDR_VID_SetMrgEnable [R_ARM_JUMP24: .text+0x1ecbc] 
FUNC_END VO_DRV_SetMultiRegionEnable


FUNC_BEGIN VOU_DRV_DisableAllArea
    /*00017950*/ BX          LR 
FUNC_END VOU_DRV_DisableAllArea


FUNC_BEGIN VOU_DRV_SetMultiDispFrameInfo
    /*00017954*/ PUSH        {R4, R5, R6, LR} 
    /*00017958*/ SUBS        R5, R2, #0 
    /*0001795c*/ MOV         R4, R0 
    /*00017960*/ MOV         R6, R1 
    /*00017964*/ BEQ         VOU_DRV_SetMultiDispFrameInfo_x17a04
    /*00017968*/ MOV         R1, #0 
    /*0001796c*/ BL          0x000000000001796C          @ HAL_FDR_VID_SetDcmpEn [R_ARM_CALL: .text+0x1f2ec] 
    /*00017970*/ MOV         R2, #0 
    /*00017974*/ MOV         R1, R2 
    /*00017978*/ MOV         R0, R4 
    /*0001797c*/ BL          0x000000000001797C          @ HAL_DCMP_SEG_SetIceEn [R_ARM_CALL: .text+0x1e8d0] 
    /*00017980*/ CMP         R4, #0 
    /*00017984*/ BEQ         VOU_DRV_SetMultiDispFrameInfo_x179d0
    /*00017988*/ MOV         R2, #0 
    /*0001798c*/ MOV         R1, #2 
    /*00017990*/ MOV         R0, R4 
    /*00017994*/ BL          0x0000000000017994          @ HAL_DCMP_SEG_SetIceEn [R_ARM_CALL: .text+0x1e8d0] 
    VOU_DRV_SetMultiDispFrameInfo_x17998:
    /*00017998*/ MOV         R0, R4 
    /*0001799c*/ MOV         R1, #0 
    /*000179a0*/ BL          0x00000000000179A0          @ HAL_FDR_VID_SetVidOutUVOrder [R_ARM_CALL: .text+0x1f334] 
    /*000179a4*/ LDRH        R3, [R5, #44]               @ 0x2c 
    /*000179a8*/ LDR         R2, [R5, #120]              @ 0x78 
    /*000179ac*/ MOV         R1, R6 
    /*000179b0*/ MOV         R0, R4 
    /*000179b4*/ BL          0x00000000000179B4          @ HAL_VIDEO_SetMultiAreaLAddr [R_ARM_CALL: .text+0x1c8fc] 
    /*000179b8*/ MOV         R1, R6 
    /*000179bc*/ MOV         R0, R4 
    /*000179c0*/ LDRH        R3, [R5, #48]               @ 0x30 
    /*000179c4*/ LDR         R2, [R5, #128]              @ 0x80 
    /*000179c8*/ POP         {R4, R5, R6, LR} 
    VOU_DRV_SetMultiDispFrameInfo_x179cc:
    /*000179cc*/ B           VOU_DRV_SetMultiDispFrameInfo_x179cc@ HAL_VIDEO_SetMultiAreaCAddr [R_ARM_JUMP24: .text+0x1ca04] 
    VOU_DRV_SetMultiDispFrameInfo_x179d0:
    /*000179d0*/ MOV         R2, R4 
    /*000179d4*/ MOV         R0, R4 
    /*000179d8*/ MOV         R1, #1 
    /*000179dc*/ BL          0x00000000000179DC          @ HAL_DCMP_SEG_SetIceEn [R_ARM_CALL: .text+0x1e8d0] 
    /*000179e0*/ MOV         R2, R4 
    /*000179e4*/ MOV         R0, R4 
    /*000179e8*/ MOV         R1, #2 
    /*000179ec*/ BL          0x00000000000179EC          @ HAL_DCMP_SEG_SetIceEn [R_ARM_CALL: .text+0x1e8d0] 
    /*000179f0*/ MOV         R2, R4 
    /*000179f4*/ MOV         R1, #3 
    /*000179f8*/ MOV         R0, R4 
    /*000179fc*/ BL          0x00000000000179FC          @ HAL_DCMP_SEG_SetIceEn [R_ARM_CALL: .text+0x1e8d0] 
    /*00017a00*/ B           VOU_DRV_SetMultiDispFrameInfo_x17998
    VOU_DRV_SetMultiDispFrameInfo_x17a04:
    /*00017a04*/ MOV         R3, R5 
    /*00017a08*/ BL          0x0000000000017A08          @ HAL_VIDEO_SetMultiAreaLAddr [R_ARM_CALL: .text+0x1c8fc] 
    /*00017a0c*/ MOV         R3, R5 
    /*00017a10*/ MOV         R2, R5 
    /*00017a14*/ MOV         R1, R6 
    /*00017a18*/ MOV         R0, R4 
    /*00017a1c*/ POP         {R4, R5, R6, LR} 
    VOU_DRV_SetMultiDispFrameInfo_x17a20:
    /*00017a20*/ B           VOU_DRV_SetMultiDispFrameInfo_x17a20@ HAL_VIDEO_SetMultiAreaCAddr [R_ARM_JUMP24: .text+0x1ca04] 
FUNC_END VOU_DRV_SetMultiDispFrameInfo


FUNC_BEGIN VOU_DRV_IsVDcmpStateOK
    /*00017a24*/ PUSH        {R4, R5, LR} 
    /*00017a28*/ SUB         SP, SP, #20 
    /*00017a2c*/ MOV         R5, R0 
    /*00017a30*/ ADD         R1, SP, #8 
    /*00017a34*/ MOV         R4, #0 
    /*00017a38*/ STR         R4, [SP, #8] 
    /*00017a3c*/ STR         R4, [SP, #12] 
    /*00017a40*/ BL          0x0000000000017A40          @ HAL_VIDEO_GetVDcmpLumaState [R_ARM_CALL: .text+0x1cf3c] 
    /*00017a44*/ MOV         R0, R5 
    /*00017a48*/ ADD         R1, SP, #12 
    /*00017a4c*/ BL          0x0000000000017A4C          @ HAL_VIDEO_GetVDcmpChromaState [R_ARM_CALL: .text+0x1cf44] 
    /*00017a50*/ LDR         R3, [SP, #8] 
    /*00017a54*/ CMP         R3, R4 
    /*00017a58*/ MOVEQ       R0, #1 
    /*00017a5c*/ BNE         VOU_DRV_IsVDcmpStateOK_x17aa0
    VOU_DRV_IsVDcmpStateOK_x17a60:
    /*00017a60*/ LDR         R3, [SP, #12] 
    /*00017a64*/ CMP         R3, #0 
    /*00017a68*/ BEQ         VOU_DRV_IsVDcmpStateOK_x17a98
    /*00017a6c*/ MOV         R0, R5 
    /*00017a70*/ BL          0x0000000000017A70          @ HAL_VIDEO_ClrVDcmpChromaState [R_ARM_CALL: .text+0x1cf54] 
    /*00017a74*/ MOVW        R3, #2184                   @ 0x888 
    /*00017a78*/ MOVW        R2, #0                      @ .LC52 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f6c] 
    /*00017a7c*/ STR         R3, [SP] 
    /*00017a80*/ MOVT        R2, #0                      @ .LC52 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f6c] 
    /*00017a84*/ LDR         R3, [PC, #68]               @ 0x0000000000017ad0 
    /*00017a88*/ MOV         R1, #15 
    /*00017a8c*/ MOV         R0, #4 
    /*00017a90*/ BL          0x0000000000017A90          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017a94*/ MOV         R0, #0 
    VOU_DRV_IsVDcmpStateOK_x17a98:
    /*00017a98*/ ADD         SP, SP, #20 
    /*00017a9c*/ POP         {R4, R5, PC} 
    VOU_DRV_IsVDcmpStateOK_x17aa0:
    /*00017aa0*/ MOV         R0, R5 
    /*00017aa4*/ BL          0x0000000000017AA4          @ HAL_VIDEO_ClrVDcmpLumaState [R_ARM_CALL: .text+0x1cf4c] 
    /*00017aa8*/ MOVW        R3, #2177                   @ 0x881 
    /*00017aac*/ MOVW        R2, #0                      @ .LC51 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f3c] 
    /*00017ab0*/ STR         R3, [SP] 
    /*00017ab4*/ MOVT        R2, #0                      @ .LC51 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f3c] 
    /*00017ab8*/ LDR         R3, [PC, #16]               @ 0x0000000000017ad0 
    /*00017abc*/ MOV         R1, #15 
    /*00017ac0*/ MOV         R0, #4 
    /*00017ac4*/ BL          0x0000000000017AC4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017ac8*/ MOV         R0, R4 
    /*00017acc*/ B           VOU_DRV_IsVDcmpStateOK_x17a60
    /*00017ad0*/ ANDEQ       R0, R0, R8, ROR #28 
FUNC_END VOU_DRV_IsVDcmpStateOK


FUNC_BEGIN VO_DRV_GetVDcmpState
    /*00017ad4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00017ad8*/ MOV         R5, R0 
    /*00017adc*/ LDR         R7, [PC, #372]              @ 0x0000000000017c58 
    /*00017ae0*/ SUB         SP, SP, #32 
    /*00017ae4*/ MOV         R4, #1 
    /*00017ae8*/ MOVW        R9, #0                      @ .LC55 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8040] 
    /*00017aec*/ MOVW        R8, #0                      @ .LC54 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7ff0] 
    /*00017af0*/ MOVT        R9, #0                      @ .LC55 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8040] 
    /*00017af4*/ LDR         R0, [R7], #4 
    /*00017af8*/ MOVT        R8, #0                      @ .LC54 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7ff0] 
    /*00017afc*/ MOV         R6, R4 
    /*00017b00*/ MOV         R3, #0 
    /*00017b04*/ STR         R3, [SP, #16] 
    /*00017b08*/ STR         R0, [SP, #28] 
    /*00017b0c*/ STR         R3, [SP, #20] 
    /*00017b10*/ STR         R3, [SP, #24] 
    VO_DRV_GetVDcmpState_x17b14:
    /*00017b14*/ CMP         R5, #0 
    /*00017b18*/ BEQ         VO_DRV_GetVDcmpState_x17b34
    VO_DRV_GetVDcmpState_x17b1c:
    /*00017b1c*/ ADD         R4, R4, #2 
    /*00017b20*/ CMP         R4, #5 
    /*00017b24*/ BNE         VO_DRV_GetVDcmpState_x17b14
    /*00017b28*/ MOV         R0, R6 
    /*00017b2c*/ ADD         SP, SP, #32 
    /*00017b30*/ POP         {R4, R5, R6, R7, R8, R9, SL, PC} 
    VO_DRV_GetVDcmpState_x17b34:
    /*00017b34*/ ADD         R3, SP, #32 
    /*00017b38*/ ADD         R2, SP, #16 
    /*00017b3c*/ ADD         R3, R3, R4 
    /*00017b40*/ MOV         R1, R4 
    /*00017b44*/ MOV         R0, R5 
    /*00017b48*/ SUB         SL, R3, #5 
    /*00017b4c*/ BL          0x0000000000017B4C          @ HAL_DCMP_SEG_GetForgive [R_ARM_CALL: .text+0x1eaa8] 
    /*00017b50*/ LDR         R3, [SP, #16] 
    /*00017b54*/ CMP         R3, #0 
    /*00017b58*/ BNE         VO_DRV_GetVDcmpState_x17bd4
    VO_DRV_GetVDcmpState_x17b5c:
    /*00017b5c*/ ADD         R2, SP, #20 
    /*00017b60*/ MOV         R1, R4 
    /*00017b64*/ MOV         R0, #0 
    /*00017b68*/ BL          0x0000000000017B68          @ HAL_DCMP_SEG_GetConsume [R_ARM_CALL: .text+0x1ea28] 
    /*00017b6c*/ LDR         R3, [SP, #20] 
    /*00017b70*/ CMP         R3, #0 
    /*00017b74*/ BNE         VO_DRV_GetVDcmpState_x17c18
    VO_DRV_GetVDcmpState_x17b78:
    /*00017b78*/ ADD         R2, SP, #24 
    /*00017b7c*/ MOV         R1, R4 
    /*00017b80*/ MOV         R0, #0 
    /*00017b84*/ BL          0x0000000000017B84          @ HAL_DCMP_SEG_GetBsErr [R_ARM_CALL: .text+0x1e9a8] 
    /*00017b88*/ LDR         R3, [SP, #24] 
    /*00017b8c*/ CMP         R3, #0 
    /*00017b90*/ BEQ         VO_DRV_GetVDcmpState_x17b1c
    /*00017b94*/ MOV         R1, R4 
    /*00017b98*/ MOV         R0, #0 
    /*00017b9c*/ MOV         R2, #1 
    /*00017ba0*/ MOV         R6, R0 
    /*00017ba4*/ BL          0x0000000000017BA4          @ HAL_DCMP_SEG_SetBsErr [R_ARM_CALL: .text+0x1e95c] 
    /*00017ba8*/ MOVW        R2, #2228                   @ 0x8b4 
    /*00017bac*/ STR         SL, [SP, #12] 
    /*00017bb0*/ MOV         R3, R7 
    /*00017bb4*/ STR         R2, [SP] 
    /*00017bb8*/ MOV         R1, #15 
    /*00017bbc*/ STR         R4, [SP, #8] 
    /*00017bc0*/ MOV         R2, R9 
    /*00017bc4*/ STR         R6, [SP, #4] 
    /*00017bc8*/ MOV         R0, #4 
    /*00017bcc*/ BL          0x0000000000017BCC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017bd0*/ B           VO_DRV_GetVDcmpState_x17b1c
    VO_DRV_GetVDcmpState_x17bd4:
    /*00017bd4*/ MOV         R1, R4 
    /*00017bd8*/ MOV         R0, R5 
    /*00017bdc*/ MOV         R2, #1 
    /*00017be0*/ MOV         R6, R5 
    /*00017be4*/ BL          0x0000000000017BE4          @ HAL_DCMP_SEG_SetForgive [R_ARM_CALL: .text+0x1ea5c] 
    /*00017be8*/ MOVW        R3, #2214                   @ 0x8a6 
    /*00017bec*/ STR         SL, [SP, #12] 
    /*00017bf0*/ MOVW        R2, #0                      @ .LC53 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x7f9c] 
    /*00017bf4*/ STR         R3, [SP] 
    /*00017bf8*/ MOVT        R2, #0                      @ .LC53 [R_ARM_MOVT_ABS: .rodata.str1.4+0x7f9c] 
    /*00017bfc*/ STR         R4, [SP, #8] 
    /*00017c00*/ MOV         R3, R7 
    /*00017c04*/ STR         R5, [SP, #4] 
    /*00017c08*/ MOV         R1, #15 
    /*00017c0c*/ MOV         R0, #4 
    /*00017c10*/ BL          0x0000000000017C10          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017c14*/ B           VO_DRV_GetVDcmpState_x17b5c
    VO_DRV_GetVDcmpState_x17c18:
    /*00017c18*/ MOV         R1, R4 
    /*00017c1c*/ MOV         R0, #0 
    /*00017c20*/ MOV         R2, #1 
    /*00017c24*/ MOV         R6, R0 
    /*00017c28*/ BL          0x0000000000017C28          @ HAL_DCMP_SEG_SetConsume [R_ARM_CALL: .text+0x1e9dc] 
    /*00017c2c*/ MOVW        R2, #2221                   @ 0x8ad 
    /*00017c30*/ STR         SL, [SP, #12] 
    /*00017c34*/ MOV         R3, R7 
    /*00017c38*/ STR         R2, [SP] 
    /*00017c3c*/ MOV         R1, #15 
    /*00017c40*/ STR         R4, [SP, #8] 
    /*00017c44*/ MOV         R2, R8 
    /*00017c48*/ STR         R6, [SP, #4] 
    /*00017c4c*/ MOV         R0, #4 
    /*00017c50*/ BL          0x0000000000017C50          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017c54*/ B           VO_DRV_GetVDcmpState_x17b78
    /*00017c58*/ ANDEQ       R0, R0, R0, LSL #29 
FUNC_END VO_DRV_GetVDcmpState


FUNC_BEGIN VOU_DRV_LayerZoomEnable
    /*00017c5c*/ MOV         R2, R1 
    /*00017c60*/ MOV         R1, #10 
    VOU_DRV_LayerZoomEnable_x17c64:
    /*00017c64*/ B           VOU_DRV_LayerZoomEnable_x17c64@ HAL_LAYER_SetZmeEnable [R_ARM_JUMP24: .text+0x1cb98] 
FUNC_END VOU_DRV_LayerZoomEnable


FUNC_BEGIN VOU_DRV_LayerVChZoomEnable
    /*00017c68*/ MOV         R2, R1 
    /*00017c6c*/ MOV         R1, #3 
    VOU_DRV_LayerVChZoomEnable_x17c70:
    /*00017c70*/ B           VOU_DRV_LayerVChZoomEnable_x17c70@ HAL_LAYER_SetZmeMscEnable [R_ARM_JUMP24: .text+0x1cf2c] 
FUNC_END VOU_DRV_LayerVChZoomEnable


FUNC_BEGIN VOU_DRV_LayerVChZoomFir
    /*00017c74*/ SUBS        R2, R1, #0 
    /*00017c78*/ BEQ         VOU_DRV_LayerVChZoomFir_x17c88
    /*00017c7c*/ MOV         R2, #1 
    /*00017c80*/ MOV         R1, #3 
    VOU_DRV_LayerVChZoomFir_x17c84:
    /*00017c84*/ B           VOU_DRV_LayerVChZoomFir_x17c84@ HAL_LAYER_SetZmeFirEnable [R_ARM_JUMP24: .text+0x1cd98] 
    VOU_DRV_LayerVChZoomFir_x17c88:
    /*00017c88*/ PUSH        {R4, LR} 
    /*00017c8c*/ MOV         R1, #3 
    /*00017c90*/ MOV         R4, R0 
    /*00017c94*/ BL          0x0000000000017C94          @ HAL_LAYER_SetZmeFirEnable [R_ARM_CALL: .text+0x1cd98] 
    /*00017c98*/ MOV         R0, R4 
    /*00017c9c*/ MOV         R1, #4096                   @ 0x1000 
    /*00017ca0*/ POP         {R4, LR} 
    VOU_DRV_LayerVChZoomFir_x17ca4:
    /*00017ca4*/ B           VOU_DRV_LayerVChZoomFir_x17ca4@ HAL_LAYER_SetVerRatio [R_ARM_JUMP24: .text+0x1e498] 
FUNC_END VOU_DRV_LayerVChZoomFir


FUNC_BEGIN VOU_DRV_LayerHChZoomFir
    /*00017ca8*/ SUBS        R2, R1, #0 
    /*00017cac*/ MOV         R1, #4 
    /*00017cb0*/ MOVNE       R2, #1 
    VOU_DRV_LayerHChZoomFir_x17cb4:
    /*00017cb4*/ B           VOU_DRV_LayerHChZoomFir_x17cb4@ HAL_LAYER_SetZmeFirEnable [R_ARM_JUMP24: .text+0x1cd98] 
FUNC_END VOU_DRV_LayerHChZoomFir


FUNC_BEGIN VOU_DRV_SetZoomReso
    /*00017cb8*/ PUSH        {R4, LR} 
    /*00017cbc*/ MOVW        LR, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x5480] 
    /*00017cc0*/ MOVT        LR, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x5480] 
    /*00017cc4*/ MOV         IP, #188                    @ 0xbc 
    /*00017cc8*/ LDR         R4, [SP, #8] 
    /*00017ccc*/ MLA         R0, IP, R0, LR 
    /*00017cd0*/ STR         R1, [R0, #2220]             @ 0x8ac 
    /*00017cd4*/ STR         R2, [R0, #2224]             @ 0x8b0 
    /*00017cd8*/ STR         R3, [R0, #2236]             @ 0x8bc 
    /*00017cdc*/ STR         R4, [R0, #2240]             @ 0x8c0 
    /*00017ce0*/ POP         {R4, PC} 
FUNC_END VOU_DRV_SetZoomReso


FUNC_BEGIN VOU_DRV_ZoomConfig
    /*00017ce4*/ CMP         R1, #0 
    /*00017ce8*/ PUSH        {R4, LR} 
    /*00017cec*/ BEQ         VOU_DRV_ZoomConfig_x17d30
    /*00017cf0*/ CMP         R2, #0 
    /*00017cf4*/ SUB         R1, R1, #1 
    /*00017cf8*/ BEQ         VOU_DRV_ZoomConfig_x17d68
    /*00017cfc*/ CMP         R1, #7 
    /*00017d00*/ SUB         R4, R2, #1 
    /*00017d04*/ BLS         VOU_DRV_ZoomConfig_x17d3c
    VOU_DRV_ZoomConfig_x17d08:
    /*00017d08*/ MOVW        R3, #0                      @ .LC56 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8080] 
    /*00017d0c*/ MOVW        R0, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x74bc] 
    /*00017d10*/ MOVT        R3, #0                      @ .LC56 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8080] 
    /*00017d14*/ MOVT        R0, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x74bc] 
    /*00017d18*/ MOVW        R2, #2314                   @ 0x90a 
    /*00017d1c*/ LDR         R1, [PC, #84]               @ 0x0000000000017d78 
    /*00017d20*/ BL          0x0000000000017D20          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00017d24*/ CMP         R4, #7 
    /*00017d28*/ BHI         VOU_DRV_ZoomConfig_x17d44
    /*00017d2c*/ POP         {R4, PC} 
    VOU_DRV_ZoomConfig_x17d30:
    /*00017d30*/ CMP         R2, #0 
    /*00017d34*/ BEQ         VOU_DRV_ZoomConfig_x17d64
    /*00017d38*/ SUB         R4, R2, #1 
    VOU_DRV_ZoomConfig_x17d3c:
    /*00017d3c*/ CMP         R4, #7 
    /*00017d40*/ POPLS       {R4, PC} 
    VOU_DRV_ZoomConfig_x17d44:
    /*00017d44*/ MOVW        R3, #0                      @ .LC57 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x80a0] 
    /*00017d48*/ MOVW        R0, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x74bc] 
    /*00017d4c*/ MOVT        R3, #0                      @ .LC57 [R_ARM_MOVT_ABS: .rodata.str1.4+0x80a0] 
    /*00017d50*/ MOVT        R0, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x74bc] 
    /*00017d54*/ MOVW        R2, #2315                   @ 0x90b 
    /*00017d58*/ LDR         R1, [PC, #24]               @ 0x0000000000017d78 
    /*00017d5c*/ POP         {R4, LR} 
    VOU_DRV_ZoomConfig_x17d60:
    /*00017d60*/ B           VOU_DRV_ZoomConfig_x17d60   @ osal_panic [R_ARM_JUMP24: +0x0] 
    VOU_DRV_ZoomConfig_x17d64:
    /*00017d64*/ POP         {R4, PC} 
    VOU_DRV_ZoomConfig_x17d68:
    /*00017d68*/ CMP         R1, #7 
    /*00017d6c*/ MOVHI       R4, #7 
    /*00017d70*/ BHI         VOU_DRV_ZoomConfig_x17d08
    /*00017d74*/ POP         {R4, PC} 
    /*00017d78*/ MULEQ       R0, IP, LR 
FUNC_END VOU_DRV_ZoomConfig


FUNC_BEGIN VOU_DRV_CheckVideoBindSupport
    /*00017d7c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00017d80*/ SUB         SP, SP, #12 
    /*00017d84*/ MOVW        R3, #2328                   @ 0x918 
    /*00017d88*/ MOV         R1, #15 
    /*00017d8c*/ STR         R3, [SP] 
    /*00017d90*/ MOVW        R2, #0                      @ .LC58 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x80c0] 
    /*00017d94*/ LDR         R3, [PC, #24]               @ 0x0000000000017db4 
    /*00017d98*/ MOVT        R2, #0                      @ .LC58 [R_ARM_MOVT_ABS: .rodata.str1.4+0x80c0] 
    /*00017d9c*/ MOV         R0, #3 
    /*00017da0*/ BL          0x0000000000017DA0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017da4*/ MOVW        R0, #32776                  @ 0x8008 
    /*00017da8*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00017dac*/ ADD         SP, SP, #12 
    /*00017db0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00017db4*/ @           <UNDEFINED> instruction: 0x00000eb0 
FUNC_END VOU_DRV_CheckVideoBindSupport


FUNC_BEGIN VOU_DRV_VideoBindDev
    /*00017db8*/ MOV         R0, #0 
    /*00017dbc*/ BX          LR 
FUNC_END VOU_DRV_VideoBindDev


FUNC_BEGIN VOU_DRV_VideoUnBindDev
    /*00017dc0*/ MOV         R0, #0 
    /*00017dc4*/ BX          LR 
FUNC_END VOU_DRV_VideoUnBindDev


FUNC_BEGIN VO_DRV_GetDevHalId
    /*00017dc8*/ CMP         R0, #0 
    /*00017dcc*/ BNE         VO_DRV_GetDevHalId_x17dd8
    /*00017dd0*/ STR         R0, [R1] 
    /*00017dd4*/ BX          LR 
    VO_DRV_GetDevHalId_x17dd8:
    /*00017dd8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00017ddc*/ SUB         SP, SP, #12 
    /*00017de0*/ MOVW        R3, #2358                   @ 0x936 
    /*00017de4*/ MOV         R1, #15 
    /*00017de8*/ STR         R0, [SP, #4] 
    /*00017dec*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x729c] 
    /*00017df0*/ STR         R3, [SP] 
    /*00017df4*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x729c] 
    /*00017df8*/ LDR         R3, [PC, #12]               @ 0x0000000000017e0c 
    /*00017dfc*/ MOV         R0, #3 
    /*00017e00*/ BL          0x0000000000017E00          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00017e04*/ ADD         SP, SP, #12 
    /*00017e08*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00017e0c*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VO_DRV_GetDevHalId


FUNC_BEGIN VO_DRV_GetChannelHalId
    /*00017e10*/ SUBS        R3, R0, #0 
    /*00017e14*/ BNE         VO_DRV_GetChannelHalId_x17e20
    /*00017e18*/ STR         R3, [R1] 
    /*00017e1c*/ BX          LR 
    VO_DRV_GetChannelHalId_x17e20:
    /*00017e20*/ B           0x000000000001548C 
FUNC_END VO_DRV_GetChannelHalId


FUNC_BEGIN VO_DRV_IsChipSupportZme
    /*00017e24*/ MOV         R0, #0 
    /*00017e28*/ BX          LR 
FUNC_END VO_DRV_IsChipSupportZme


FUNC_BEGIN VOU_DRV_IsSdTdeDisp
    /*00017e2c*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*00017e30*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*00017e34*/ MOV         R3, #144                    @ 0x90 
    /*00017e38*/ MLA         R0, R3, R0, R2 
    /*00017e3c*/ LDR         R0, [R0, #8] 
    /*00017e40*/ BX          LR 
FUNC_END VOU_DRV_IsSdTdeDisp


FUNC_BEGIN VOU_DRV_IsLayerEnlargeable
    /*00017e44*/ MOVW        R2, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x5480] 
    /*00017e48*/ MOVT        R2, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x5480] 
    /*00017e4c*/ MOV         R3, #188                    @ 0xbc 
    /*00017e50*/ MLA         R0, R3, R0, R2 
    /*00017e54*/ LDR         R0, [R0, #2148]             @ 0x864 
    /*00017e58*/ BX          LR 
FUNC_END VOU_DRV_IsLayerEnlargeable


FUNC_BEGIN VOU_DRV_GetLayerSize
    /*00017e5c*/ MOVW        R2, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x5480] 
    /*00017e60*/ MOVT        R2, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x5480] 
    /*00017e64*/ MOV         R3, #188                    @ 0xbc 
    /*00017e68*/ MLA         R0, R3, R0, R2 
    /*00017e6c*/ LDR         R0, [R0, #2156]             @ 0x86c 
    /*00017e70*/ BX          LR 
FUNC_END VOU_DRV_GetLayerSize


FUNC_BEGIN VOU_DRV_GetMinWidthAndHeight
    /*00017e74*/ LDR         R2, [R0, #8] 
    /*00017e78*/ LDR         IP, [R1] 
    /*00017e7c*/ LDR         R3, [R0, #12] 
    /*00017e80*/ CMP         R2, IP 
    /*00017e84*/ MOVCS       R2, IP 
    /*00017e88*/ STR         R2, [R0, #8] 
    /*00017e8c*/ LDR         R2, [R1, #4] 
    /*00017e90*/ CMP         R3, R2 
    /*00017e94*/ MOVCS       R3, R2 
    /*00017e98*/ STR         R3, [R0, #12] 
    /*00017e9c*/ BX          LR 
FUNC_END VOU_DRV_GetMinWidthAndHeight


FUNC_BEGIN VOU_DRV_DefLayerBindDev
    /*00017ea0*/ MOV         R2, #0 
    /*00017ea4*/ MOV         R1, R2 
    /*00017ea8*/ MOV         R0, R2 
    /*00017eac*/ PUSH        {R4, LR} 
    /*00017eb0*/ BL          0x0000000000017EB0          @ HAL_CBM_SetCbmMixerPrio [R_ARM_CALL: .text+0x1e830] 
    /*00017eb4*/ MOV         R2, #0 
    /*00017eb8*/ MOV         R1, #1 
    /*00017ebc*/ MOV         R0, #3 
    /*00017ec0*/ POP         {R4, LR} 
    VOU_DRV_DefLayerBindDev_x17ec4:
    /*00017ec4*/ B           VOU_DRV_DefLayerBindDev_x17ec4@ HAL_CBM_SetCbmMixerPrio [R_ARM_JUMP24: .text+0x1e830] 
FUNC_END VOU_DRV_DefLayerBindDev


FUNC_BEGIN VO_DRV_SetDevBgColor
    /*00017ec8*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00017ecc*/ CMP         R2, #0 
    /*00017ed0*/ SUB         SP, SP, #8 
    /*00017ed4*/ MOV         R3, #0 
    /*00017ed8*/ STR         R3, [SP] 
    /*00017edc*/ BEQ         VO_DRV_SetDevBgColor_x17f2c
    /*00017ee0*/ LSR         R2, R1, #14 
    /*00017ee4*/ LSR         R3, R1, #6 
    /*00017ee8*/ LSL         R1, R1, #2 
    /*00017eec*/ AND         R2, R2, #1020               @ 0x3fc 
    /*00017ef0*/ AND         R3, R3, #1020               @ 0x3fc 
    /*00017ef4*/ AND         R1, R1, #1020               @ 0x3fc 
    /*00017ef8*/ STRH        R2, [SP, #2] 
    /*00017efc*/ STRH        R3, [SP, #4] 
    /*00017f00*/ STRH        R1, [SP, #6] 
    VO_DRV_SetDevBgColor_x17f04:
    /*00017f04*/ CMP         R0, #0 
    /*00017f08*/ BEQ         VO_DRV_SetDevBgColor_x17f1c
    /*00017f0c*/ CMP         R0, #1 
    /*00017f10*/ BEQ         VO_DRV_SetDevBgColor_x17f1c
    /*00017f14*/ ADD         SP, SP, #8 
    /*00017f18*/ POP         {R4, R5, R6, R7, R8, PC} 
    VO_DRV_SetDevBgColor_x17f1c:
    /*00017f1c*/ MOV         R1, SP 
    /*00017f20*/ BL          0x0000000000017F20          @ HAL_CBM_SetCbmBkg [R_ARM_CALL: .text+0x1e788] 
    /*00017f24*/ ADD         SP, SP, #8 
    /*00017f28*/ POP         {R4, R5, R6, R7, R8, PC} 
    VO_DRV_SetDevBgColor_x17f2c:
    /*00017f2c*/ UBFX        R3, R1, #8, #8 
    /*00017f30*/ UBFX        R2, R1, #16, #8 
    /*00017f34*/ MVN         IP, #93                     @ 0x5d 
    /*00017f38*/ UXTB        R1, R1 
    /*00017f3c*/ MOV         R5, #112                    @ 0x70 
    /*00017f40*/ ADD         R7, R3, R3, LSL #7 
    /*00017f44*/ MUL         IP, IP, R3 
    /*00017f48*/ MVN         LR, #37                     @ 0x25 
    /*00017f4c*/ MLA         R4, R5, R2, IP 
    /*00017f50*/ MOV         R8, #66                     @ 0x42 
    /*00017f54*/ MUL         LR, LR, R2 
    /*00017f58*/ MVN         IP, #17 
    /*00017f5c*/ MLA         LR, R5, R1, LR 
    /*00017f60*/ MVN         R6, #73                     @ 0x49 
    /*00017f64*/ MLA         R2, R8, R2, R7 
    /*00017f68*/ MOV         R5, #25 
    /*00017f6c*/ MLA         IP, IP, R1, R4 
    /*00017f70*/ MOV         R4, #64512                  @ 0xfc00 
    /*00017f74*/ MLA         LR, R6, R3, LR 
    /*00017f78*/ MOVT        R4, #15 
    /*00017f7c*/ MLA         R1, R5, R1, R2 
    /*00017f80*/ MOV         R2, #0 
    /*00017f84*/ ASR         IP, IP, #8 
    /*00017f88*/ MOVT        R2, #16368                  @ 0x3ff0 
    /*00017f8c*/ ADD         IP, IP, #128                @ 0x80 
    /*00017f90*/ ASR         LR, LR, #8 
    /*00017f94*/ ADD         LR, LR, #128                @ 0x80 
    /*00017f98*/ LSL         IP, IP, #2 
    /*00017f9c*/ ASR         R3, R1, #8 
    /*00017fa0*/ ADD         R3, R3, #16 
    /*00017fa4*/ AND         LR, R4, LR, LSL #12 
    /*00017fa8*/ UXTH        IP, IP 
    /*00017fac*/ AND         R3, R2, R3, LSL #22 
    /*00017fb0*/ ORR         R3, R3, LR 
    /*00017fb4*/ ORR         R3, R3, IP 
    /*00017fb8*/ UBFX        R1, R3, #10, #10 
    /*00017fbc*/ UBFX        R2, R3, #0, #10 
    /*00017fc0*/ STRH        R1, [SP, #4] 
    /*00017fc4*/ LSR         R3, R3, #20 
    /*00017fc8*/ STRH        R2, [SP, #6] 
    /*00017fcc*/ STRH        R3, [SP, #2] 
    /*00017fd0*/ B           VO_DRV_SetDevBgColor_x17f04
FUNC_END VO_DRV_SetDevBgColor


FUNC_BEGIN VO_DRV_Close
    /*00017fd4*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00017fd8*/ MOVW        SL, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x188] 
    /*00017fdc*/ MOVT        SL, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x188] 
    /*00017fe0*/ MOV         R3, #20 
    /*00017fe4*/ SUB         SP, SP, #44                 @ 0x2c 
    /*00017fe8*/ MOV         R5, #0 
    /*00017fec*/ MLA         R3, R3, R0, SL 
    /*00017ff0*/ MOV         R4, R0 
    /*00017ff4*/ MOV         R1, R5 
    /*00017ff8*/ STR         R5, [SP, #8] 
    /*00017ffc*/ STR         R5, [SP, #12] 
    /*00018000*/ STR         R5, [SP, #16] 
    /*00018004*/ LDR         FP, [R3, #2312]             @ 0x908 
    /*00018008*/ BL          0x0000000000018008          @ HAL_DISP_SetIntfEnable [R_ARM_CALL: .text+0x1abac] 
    /*0001800c*/ MOV         R1, R5 
    /*00018010*/ MOV         R0, R4 
    /*00018014*/ BL          0x0000000000018014          @ VO_DRV_DevIntEnable [R_ARM_CALL: .text+0x1701c] 
    /*00018018*/ MOV         R0, R4 
    /*0001801c*/ BL          0x000000000001801C          @ HAL_DISP_SetRegUp [R_ARM_CALL: .text+0x1bc0c] 
    /*00018020*/ CMP         R4, R5 
    /*00018024*/ STREQ       R4, [SP, #4] 
    /*00018028*/ BNE         VO_DRV_Close_x18230
    VO_DRV_Close_x1802c:
    /*0001802c*/ ADD         R0, SP, #20 
    /*00018030*/ MOV         R3, #0 
    /*00018034*/ MOV         R2, #15 
    /*00018038*/ STR         R3, [SP, #36]               @ 0x24 
    /*0001803c*/ STR         R4, [SP, #32] 
    /*00018040*/ MOVW        R5, #16960                  @ 0x4240 
    /*00018044*/ STR         R2, [SP, #28] 
    /*00018048*/ BL          0x0000000000018048          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*0001804c*/ LDR         R6, [SP, #24] 
    /*00018050*/ MOVT        R5, #15 
    /*00018054*/ LDR         R3, [SP, #20] 
    /*00018058*/ MOVW        R8, #49999                  @ 0xc34f 
    /*0001805c*/ MOV         R9, #0 
    /*00018060*/ ASR         R7, R6, #31 
    /*00018064*/ SMLAL       R6, R7, R5, R3 
    /*00018068*/ B           VO_DRV_Close_x18078
    VO_DRV_Close_x1806c:
    /*0001806c*/ BL          0x000000000001806C          @ HAL_DISP_GetRegUp [R_ARM_CALL: .text+0x1bc7c] 
    /*00018070*/ CMP         R0, #0 
    /*00018074*/ BEQ         VO_DRV_Close_x180a8
    VO_DRV_Close_x18078:
    /*00018078*/ ADD         R0, SP, #20 
    /*0001807c*/ BL          0x000000000001807C          @ osal_gettimeofday [R_ARM_CALL: +0x0] 
    /*00018080*/ LDR         R2, [SP, #24] 
    /*00018084*/ LDR         R1, [SP, #20] 
    /*00018088*/ MOV         R0, R4 
    /*0001808c*/ ASR         R3, R2, #31 
    /*00018090*/ SMLAL       R2, R3, R5, R1 
    /*00018094*/ SUBS        R2, R2, R6 
    /*00018098*/ SBC         R3, R3, R7 
    /*0001809c*/ CMP         R3, R9 
    /*000180a0*/ CMPEQ       R2, R8 
    /*000180a4*/ BLS         VO_DRV_Close_x1806c
    VO_DRV_Close_x180a8:
    /*000180a8*/ TST         FP, #32 
    /*000180ac*/ BNE         VO_DRV_Close_x181ec
    /*000180b0*/ ADD         R6, SP, #8 
    /*000180b4*/ ADD         R5, SP, #28 
    VO_DRV_Close_x180b8:
    /*000180b8*/ MOV         R3, #20 
    /*000180bc*/ MLA         R4, R3, R4, SL 
    /*000180c0*/ LDR         R3, [R4, #2312]             @ 0x908 
    /*000180c4*/ TST         R3, #24 
    /*000180c8*/ BEQ         VO_DRV_Close_x180f4
    /*000180cc*/ MOV         R0, #2 
    /*000180d0*/ BL          0x00000000000180D0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000180d4*/ MOV         R1, #89                     @ 0x59 
    /*000180d8*/ MOV         R2, R6 
    /*000180dc*/ LDR         R3, [R0, #20] 
    /*000180e0*/ MOV         R0, R5 
    /*000180e4*/ BLX         R3 
    /*000180e8*/ MOV         R1, #65536                  @ 0x10000 
    /*000180ec*/ LDR         R0, [SP, #4] 
    /*000180f0*/ BL          0x00000000000180F0          @ HAL_DISP_SetIntfMuxSel [R_ARM_CALL: .text+0x1b630] 
    VO_DRV_Close_x180f4:
    /*000180f4*/ TST         FP, #16384                  @ 0x4000 
    /*000180f8*/ BNE         VO_DRV_Close_x181a4
    VO_DRV_Close_x180fc:
    /*000180fc*/ TST         FP, #15936                  @ 0x3e40 
    /*00018100*/ BEQ         VO_DRV_Close_x18148
    /*00018104*/ MOV         R0, #2 
    /*00018108*/ BL          0x0000000000018108          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001810c*/ MOV         R2, R6 
    /*00018110*/ MOV         R1, #5 
    /*00018114*/ LDR         R3, [R0, #20] 
    /*00018118*/ MOV         R0, R5 
    /*0001811c*/ BLX         R3 
    /*00018120*/ MOV         R0, #2 
    /*00018124*/ BL          0x0000000000018124          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018128*/ MOV         R1, #109                    @ 0x6d 
    /*0001812c*/ MOV         R2, R6 
    /*00018130*/ LDR         R3, [R0, #20] 
    /*00018134*/ MOV         R0, R5 
    /*00018138*/ BLX         R3 
    /*0001813c*/ LDR         R0, [SP, #4] 
    /*00018140*/ MOV         R1, #65536                  @ 0x10000 
    /*00018144*/ BL          0x0000000000018144          @ HAL_DISP_SetIntfMuxSel [R_ARM_CALL: .text+0x1b630] 
    VO_DRV_Close_x18148:
    /*00018148*/ MOV         R0, #2 
    /*0001814c*/ BL          0x000000000001814C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018150*/ ADD         R2, SP, #12 
    /*00018154*/ MOV         R1, #90                     @ 0x5a 
    /*00018158*/ LDR         R3, [R0, #20] 
    /*0001815c*/ MOV         R0, R5 
    /*00018160*/ BLX         R3 
    /*00018164*/ MOV         R0, #2 
    /*00018168*/ BL          0x0000000000018168          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001816c*/ ADD         R2, SP, #16 
    /*00018170*/ MOV         R1, #91                     @ 0x5b 
    /*00018174*/ LDR         R3, [R0, #20] 
    /*00018178*/ MOV         R0, R5 
    /*0001817c*/ BLX         R3 
    /*00018180*/ MOV         R0, #2 
    /*00018184*/ BL          0x0000000000018184          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018188*/ MOV         R2, R6 
    /*0001818c*/ MOV         R1, #81                     @ 0x51 
    /*00018190*/ LDR         R3, [R0, #20] 
    /*00018194*/ MOV         R0, R5 
    /*00018198*/ BLX         R3 
    /*0001819c*/ ADD         SP, SP, #44                 @ 0x2c 
    /*000181a0*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VO_DRV_Close_x181a4:
    /*000181a4*/ MOV         R0, #2 
    /*000181a8*/ BL          0x00000000000181A8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000181ac*/ MOV         R2, R6 
    /*000181b0*/ MOV         R1, #7 
    /*000181b4*/ LDR         R3, [R0, #20] 
    /*000181b8*/ MOV         R0, R5 
    /*000181bc*/ BLX         R3 
    /*000181c0*/ MOV         R0, #2 
    /*000181c4*/ BL          0x00000000000181C4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000181c8*/ MOV         R2, R6 
    /*000181cc*/ MOV         R1, #6 
    /*000181d0*/ LDR         R3, [R0, #20] 
    /*000181d4*/ MOV         R0, R5 
    /*000181d8*/ BLX         R3 
    /*000181dc*/ MOV         R1, #65536                  @ 0x10000 
    /*000181e0*/ LDR         R0, [SP, #4] 
    /*000181e4*/ BL          0x00000000000181E4          @ HAL_DISP_SetIntfMuxSel [R_ARM_CALL: .text+0x1b630] 
    /*000181e8*/ B           VO_DRV_Close_x180fc
    VO_DRV_Close_x181ec:
    /*000181ec*/ MOV         R0, #2 
    /*000181f0*/ ADD         R6, SP, #8 
    /*000181f4*/ BL          0x00000000000181F4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000181f8*/ ADD         R5, SP, #28 
    /*000181fc*/ MOV         R2, R6 
    /*00018200*/ MOV         R1, #96                     @ 0x60 
    /*00018204*/ LDR         R3, [R0, #20] 
    /*00018208*/ MOV         R0, R5 
    /*0001820c*/ BLX         R3 
    /*00018210*/ MOV         R0, #2 
    /*00018214*/ BL          0x0000000000018214          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018218*/ MOV         R2, R6 
    /*0001821c*/ MOV         R1, #8 
    /*00018220*/ LDR         R3, [R0, #20] 
    /*00018224*/ MOV         R0, R5 
    /*00018228*/ BLX         R3 
    /*0001822c*/ B           VO_DRV_Close_x180b8
    VO_DRV_Close_x18230:
    /*00018230*/ MOV         R0, R4 
    /*00018234*/ MOV         R3, #4 
    /*00018238*/ STR         R3, [SP, #4] 
    /*0001823c*/ BL          0x000000000001548C 
    /*00018240*/ B           VO_DRV_Close_x1802c
FUNC_END VO_DRV_Close


FUNC_BEGIN VO_DRV_Enable
    /*00018244*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*00018248*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*0001824c*/ MOV         R3, #144                    @ 0x90 
    /*00018250*/ MOV         R1, #1 
    /*00018254*/ MLA         R0, R3, R0, R2 
    /*00018258*/ STR         R1, [R0, #20] 
    /*0001825c*/ BX          LR 
FUNC_END VO_DRV_Enable


FUNC_BEGIN VO_DRV_Disable
    /*00018260*/ MOV         R3, #144                    @ 0x90 
    /*00018264*/ MOVW        IP, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*00018268*/ MUL         R0, R3, R0 
    /*0001826c*/ MOVT        IP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*00018270*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00018274*/ MOV         R3, #0 
    /*00018278*/ ADD         LR, IP, R0 
    /*0001827c*/ ADD         R0, R0, #28 
    /*00018280*/ MOV         R2, #60                     @ 0x3c 
    /*00018284*/ MOV         R1, R3 
    /*00018288*/ STR         R3, [LR, #24] 
    /*0001828c*/ ADD         R0, IP, R0 
    /*00018290*/ STR         R3, [LR, #20] 
    /*00018294*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    VO_DRV_Disable_x18298:
    /*00018298*/ B           VO_DRV_Disable_x18298       @ osal_memset [R_ARM_JUMP24: +0x0] 
FUNC_END VO_DRV_Disable


FUNC_BEGIN VO_DRV_EnableLayer
    /*0001829c*/ MOVW        R2, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x5480] 
    /*000182a0*/ MOVT        R2, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x5480] 
    /*000182a4*/ MOV         R3, #188                    @ 0xbc 
    /*000182a8*/ MOV         R1, #1 
    /*000182ac*/ MLA         R0, R3, R0, R2 
    /*000182b0*/ STR         R1, [R0, #2136]             @ 0x858 
    /*000182b4*/ BX          LR 
FUNC_END VO_DRV_EnableLayer


FUNC_BEGIN VO_DRV_DisableLayer
    /*000182b8*/ MOVW        R2, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x5480] 
    /*000182bc*/ MOVT        R2, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x5480] 
    /*000182c0*/ MOV         R3, #188                    @ 0xbc 
    /*000182c4*/ MOV         R1, #0 
    /*000182c8*/ MLA         R0, R3, R0, R2 
    /*000182cc*/ STR         R1, [R0, #2136]             @ 0x858 
    /*000182d0*/ BX          LR 
FUNC_END VO_DRV_DisableLayer


FUNC_BEGIN VOU_DRV_SetLayerRegUp
    VOU_DRV_SetLayerRegUp_x182d4:
    /*000182d4*/ B           VOU_DRV_SetLayerRegUp_x182d4@ HAL_LAYER_SetRegUp [R_ARM_JUMP24: .text+0x1e68c] 
FUNC_END VOU_DRV_SetLayerRegUp


FUNC_BEGIN VOU_DRV_DefaultSetting
    /*000182d8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000182dc*/ SUB         SP, SP, #36                 @ 0x24 
    /*000182e0*/ LDR         LR, [PC, #176]              @ 0x0000000000018398 
    /*000182e4*/ MOV         IP, SP 
    /*000182e8*/ LDM         LR!, {R0, R1, R2, R3} 
    /*000182ec*/ STMIA       IP!, {R0, R1, R2, R3} 
    /*000182f0*/ LDM         LR, {R0, R1, R2, R3} 
    /*000182f4*/ STM         IP, {R0, R1, R2, R3} 
    /*000182f8*/ MOV         R0, #1 
    /*000182fc*/ BL          0x00000000000182FC          @ HAL_SYS_SetRdBusId [R_ARM_CALL: .text+0x1aba8] 
    /*00018300*/ MOV         R1, #255                    @ 0xff 
    /*00018304*/ MOV         R0, #0 
    /*00018308*/ BL          0x0000000000018308          @ HAL_LAYER_SetLayerGAlpha [R_ARM_CALL: .text+0x1e3a8] 
    /*0001830c*/ MOV         R1, #255                    @ 0xff 
    /*00018310*/ MOV         R0, #0 
    /*00018314*/ BL          0x0000000000018314          @ HAL_VIDEO_SetLayerAlpha [R_ARM_CALL: .text+0x1c538] 
    /*00018318*/ MOV         R1, #1 
    /*0001831c*/ MOV         R0, #0 
    /*00018320*/ BL          0x0000000000018320          @ HAL_VIDEO_HFIR_SetHfirMode [R_ARM_CALL: .text+0x1d6f4] 
    /*00018324*/ MOV         R1, SP 
    /*00018328*/ MOV         R0, #0 
    /*0001832c*/ BL          0x000000000001832C          @ HAL_VIDEO_HFIR_SetCoef [R_ARM_CALL: .text+0x1d73c] 
    /*00018330*/ MOV         R1, #1 
    /*00018334*/ MOV         R0, #0 
    /*00018338*/ BL          0x0000000000018338          @ HAL_VIDEO_HFIR_SetMidEn [R_ARM_CALL: .text+0x1d6ac] 
    /*0001833c*/ MOVW        R3, #0                      @ transparentTransmit [R_ARM_MOVW_ABS_NC: .bss+0x30bc] 
    /*00018340*/ MOVT        R3, #0                      @ transparentTransmit [R_ARM_MOVT_ABS: .bss+0x30bc] 
    /*00018344*/ LDR         R1, [R3] 
    /*00018348*/ CMP         R1, #1 
    /*0001834c*/ BEQ         VOU_DRV_DefaultSetting_x1838c
    VOU_DRV_DefaultSetting_x18350:
    /*00018350*/ BL          0x0000000000018350          @ VOU_DRV_DefLayerBindDev [R_ARM_CALL: .text+0x17ea0] 
    /*00018354*/ BL          0x0000000000018354          @ HAL_SYS_SetOutstanding [R_ARM_CALL: .text+0x1ab1c] 
    /*00018358*/ MVN         R0, #0 
    /*0001835c*/ BL          0x000000000001835C          @ HAL_DISP_ClearIntStatus [R_ARM_CALL: .text+0x1bbb0] 
    /*00018360*/ MOV         R1, #0 
    /*00018364*/ MOV         R0, R1 
    /*00018368*/ BL          0x0000000000018368          @ HAL_VIDEO_HFIR_SetCkGtEn [R_ARM_CALL: .text+0x1d668] 
    /*0001836c*/ MOV         R1, #0 
    /*00018370*/ MOV         R0, R1 
    /*00018374*/ BL          0x0000000000018374          @ HAL_LAYER_EnableLayer [R_ARM_CALL: .text+0x1cf68] 
    /*00018378*/ MOV         R1, #3 
    /*0001837c*/ MOV         R0, #0 
    /*00018380*/ BL          0x0000000000018380          @ HAL_LAYER_SetLayerDataFmt [R_ARM_CALL: .text+0x1d0b0] 
    /*00018384*/ ADD         SP, SP, #36                 @ 0x24 
    /*00018388*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VOU_DRV_DefaultSetting_x1838c:
    /*0001838c*/ MOV         R0, #16 
    /*00018390*/ BL          0x0000000000018390          @ HAL_DISP_SetBt1120Bypass [R_ARM_CALL: .text+0x1e684] 
    /*00018394*/ B           VOU_DRV_DefaultSetting_x18350
    /*00018398*/ ANDEQ       R0, R0, R4, ROR #29 
FUNC_END VOU_DRV_DefaultSetting


FUNC_BEGIN VO_DRV_TransparentTransmitSetting
    /*0001839c*/ BX          LR 
FUNC_END VO_DRV_TransparentTransmitSetting


FUNC_BEGIN VOU_DRV_CheckDevId
    /*000183a0*/ CMP         R0, #0 
    /*000183a4*/ MOVW        R0, #32769                  @ 0x8001 
    /*000183a8*/ MOVT        R0, #40975                  @ 0xa00f 
    /*000183ac*/ MOVEQ       R0, #0 
    /*000183b0*/ BX          LR 
FUNC_END VOU_DRV_CheckDevId


FUNC_BEGIN VOU_DRV_CheckLayerId
    /*000183b4*/ CMP         R0, #0 
    /*000183b8*/ MOVW        R0, #32769                  @ 0x8001 
    /*000183bc*/ MOVT        R0, #40975                  @ 0xa00f 
    /*000183c0*/ MOVEQ       R0, #0 
    /*000183c4*/ BX          LR 
FUNC_END VOU_DRV_CheckLayerId


FUNC_BEGIN VOU_DRV_CheckChnId
    /*000183c8*/ CMP         R1, #0 
    /*000183cc*/ BLT         VOU_DRV_CheckChnId_x183f4
    /*000183d0*/ MOVW        R2, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x5480] 
    /*000183d4*/ MOVT        R2, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x5480] 
    /*000183d8*/ MOV         R3, #188                    @ 0xbc 
    /*000183dc*/ MLA         R3, R3, R0, R2 
    /*000183e0*/ LDR         R3, [R3, #2164]             @ 0x874 
    /*000183e4*/ CMP         R3, R1 
    /*000183e8*/ BLS         VOU_DRV_CheckChnId_x183f4
    /*000183ec*/ MOV         R0, #0 
    /*000183f0*/ BX          LR 
    VOU_DRV_CheckChnId_x183f4:
    /*000183f4*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000183f8*/ SUB         SP, SP, #20 
    /*000183fc*/ MOVW        R3, #3195                   @ 0xc7b 
    /*00018400*/ MOVW        R2, #0                      @ .LC59 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8100] 
    /*00018404*/ STR         R1, [SP, #8] 
    /*00018408*/ MOVT        R2, #0                      @ .LC59 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8100] 
    /*0001840c*/ STR         R0, [SP, #4] 
    /*00018410*/ MOV         R1, #15 
    /*00018414*/ STR         R3, [SP] 
    /*00018418*/ MOV         R0, #3 
    /*0001841c*/ LDR         R3, [PC, #16]               @ 0x0000000000018434 
    /*00018420*/ BL          0x0000000000018420          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018424*/ MOVW        R0, #32770                  @ 0x8002 
    /*00018428*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0001842c*/ ADD         SP, SP, #20 
    /*00018430*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00018434*/ ANDEQ       R0, R0, R4, LSL #30 
FUNC_END VOU_DRV_CheckChnId


FUNC_BEGIN VO_DRV_DevInfoDeInit
    /*00018438*/ BX          LR 
FUNC_END VO_DRV_DevInfoDeInit


FUNC_BEGIN VO_DRV_DevCapabilityInit
    /*0001843c*/ CMP         R0, #0 
    /*00018440*/ BNE         VO_DRV_DevCapabilityInit_x18470
    /*00018444*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*00018448*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*0001844c*/ MOV         R2, #1 
    /*00018450*/ MOV         R1, #2 
    /*00018454*/ STR         R0, [R3, #4] 
    /*00018458*/ MOV         R0, #0 
    /*0001845c*/ STR         R1, [R3] 
    /*00018460*/ STR         R2, [R3, #8] 
    /*00018464*/ STR         R2, [R3, #12] 
    /*00018468*/ STR         R2, [R3, #16] 
    /*0001846c*/ BX          LR 
    VO_DRV_DevCapabilityInit_x18470:
    /*00018470*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00018474*/ SUB         SP, SP, #12 
    /*00018478*/ MOVW        R3, #3283                   @ 0xcd3 
    /*0001847c*/ MOV         R1, #15 
    /*00018480*/ STR         R0, [SP, #4] 
    /*00018484*/ MOVW        R2, #0                      @ .LC60 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x813c] 
    /*00018488*/ STR         R3, [SP] 
    /*0001848c*/ MOVT        R2, #0                      @ .LC60 [R_ARM_MOVT_ABS: .rodata.str1.4+0x813c] 
    /*00018490*/ LDR         R3, [PC, #16]               @ 0x00000000000184a8 
    /*00018494*/ MOV         R0, #3 
    /*00018498*/ BL          0x0000000000018498          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001849c*/ MOV         R0, #0 
    /*000184a0*/ ADD         SP, SP, #12 
    /*000184a4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*000184a8*/ ANDEQ       R0, R0, R8, LSL PC 
FUNC_END VO_DRV_DevCapabilityInit


FUNC_BEGIN VO_DRV_DevInfoInit
    /*000184ac*/ PUSH        {R4, LR} 
    /*000184b0*/ MOVW        R4, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*000184b4*/ MOVT        R4, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*000184b8*/ MOV         R2, #144                    @ 0x90 
    /*000184bc*/ MOV         R1, #0 
    /*000184c0*/ MOV         R0, R4 
    /*000184c4*/ BL          0x00000000000184C4          @ osal_memset [R_ARM_CALL: +0x0] 
    /*000184c8*/ MOV         R0, #0 
    /*000184cc*/ BL          0x00000000000184CC          @ VO_DRV_DevCapabilityInit [R_ARM_CALL: .text+0x1843c] 
    /*000184d0*/ MOV         R3, #1 
    /*000184d4*/ MOV         R2, #8 
    /*000184d8*/ STR         R3, [R4, #88]               @ 0x58 
    /*000184dc*/ STR         R2, [R4, #140]              @ 0x8c 
    /*000184e0*/ STR         R3, [R4, #92]               @ 0x5c 
    /*000184e4*/ POP         {R4, PC} 
FUNC_END VO_DRV_DevInfoInit


FUNC_BEGIN VO_DRV_DevInfoPartInit
    /*000184e8*/ PUSH        {R4, LR} 
    /*000184ec*/ MOV         R0, #0 
    /*000184f0*/ BL          0x00000000000184F0          @ VO_DRV_DevCapabilityInit [R_ARM_CALL: .text+0x1843c] 
    /*000184f4*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*000184f8*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*000184fc*/ MOV         R2, #1 
    /*00018500*/ MOV         R1, #8 
    /*00018504*/ STR         R2, [R3, #88]               @ 0x58 
    /*00018508*/ STR         R1, [R3, #140]              @ 0x8c 
    /*0001850c*/ STR         R2, [R3, #92]               @ 0x5c 
    /*00018510*/ POP         {R4, PC} 
FUNC_END VO_DRV_DevInfoPartInit


FUNC_BEGIN VO_DRV_LayerInfoInit
    /*00018514*/ PUSH        {R4, LR} 
    /*00018518*/ MOVW        R4, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x5480] 
    /*0001851c*/ MOVT        R4, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x5480] 
    /*00018520*/ MOV         R2, #188                    @ 0xbc 
    /*00018524*/ ADD         R0, R4, #2128               @ 0x850 
    /*00018528*/ MOV         R1, #0 
    /*0001852c*/ ADD         R0, R0, #8 
    /*00018530*/ BL          0x0000000000018530          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00018534*/ MOV         R3, #0 
    /*00018538*/ MOV         R2, #4 
    /*0001853c*/ STR         R3, [R4, #2144]             @ 0x860 
    /*00018540*/ STR         R2, [R4, #2164]             @ 0x874 
    /*00018544*/ STR         R3, [R4, #2152]             @ 0x868 
    /*00018548*/ STR         R3, [R4, #2148]             @ 0x864 
    /*0001854c*/ STR         R3, [R4, #2160]             @ 0x870 
    /*00018550*/ POP         {R4, PC} 
FUNC_END VO_DRV_LayerInfoInit


FUNC_BEGIN VO_DRV_IsLayerSupportDecompress
    /*00018554*/ CLZ         R0, R0 
    /*00018558*/ LSR         R0, R0, #5 
    /*0001855c*/ BX          LR 
FUNC_END VO_DRV_IsLayerSupportDecompress


FUNC_BEGIN VOU_DRV_SpecialWorkFlow
    /*00018560*/ MOV         R0, #0 
    /*00018564*/ BX          LR 
FUNC_END VOU_DRV_SpecialWorkFlow


FUNC_BEGIN VOU_DRV_IsPhyDevUHD
    /*00018568*/ MOV         R3, #144                    @ 0x90 
    /*0001856c*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*00018570*/ MUL         R0, R3, R0 
    /*00018574*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*00018578*/ LDR         R0, [R2, R0] 
    /*0001857c*/ SUB         R0, R0, #2 
    /*00018580*/ CLZ         R0, R0 
    /*00018584*/ LSR         R0, R0, #5 
    /*00018588*/ BX          LR 
FUNC_END VOU_DRV_IsPhyDevUHD


FUNC_BEGIN VO_DRV_IsPhyDevHD
    /*0001858c*/ MOV         R3, #144                    @ 0x90 
    /*00018590*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*00018594*/ MUL         R0, R3, R0 
    /*00018598*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*0001859c*/ LDR         R3, [R2, R0] 
    /*000185a0*/ BICS        R3, R3, #2 
    /*000185a4*/ MOVEQ       R0, #1 
    /*000185a8*/ MOVNE       R0, #0 
    /*000185ac*/ BX          LR 
FUNC_END VO_DRV_IsPhyDevHD


FUNC_BEGIN VO_DRV_IsPhyDevSD
    /*000185b0*/ MOV         R3, #144                    @ 0x90 
    /*000185b4*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*000185b8*/ MUL         R0, R3, R0 
    /*000185bc*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*000185c0*/ LDR         R0, [R2, R0] 
    /*000185c4*/ SUB         R0, R0, #1 
    /*000185c8*/ CLZ         R0, R0 
    /*000185cc*/ LSR         R0, R0, #5 
    /*000185d0*/ BX          LR 
FUNC_END VO_DRV_IsPhyDevSD


FUNC_BEGIN VOU_DRV_IsSupportHollowCover
    /*000185d4*/ MOV         R0, #1 
    /*000185d8*/ BX          LR 
FUNC_END VOU_DRV_IsSupportHollowCover


FUNC_BEGIN VOU_DRV_IsDevSupportLoadDetect
    /*000185dc*/ MOV         R0, #0 
    /*000185e0*/ BX          LR 
FUNC_END VOU_DRV_IsDevSupportLoadDetect


FUNC_BEGIN VOU_DRV_LoadDetectInit
    /*000185e4*/ MOV         R0, #0 
    /*000185e8*/ BX          LR 
FUNC_END VOU_DRV_LoadDetectInit


FUNC_BEGIN VOU_DRV_LoadDetectDeInit
    /*000185ec*/ MOV         R0, #0 
    /*000185f0*/ BX          LR 
FUNC_END VOU_DRV_LoadDetectDeInit


FUNC_BEGIN VOU_DRV_CheckDetectInt
    /*000185f4*/ MOV         R0, #0 
    /*000185f8*/ BX          LR 
FUNC_END VOU_DRV_CheckDetectInt


FUNC_BEGIN VOU_DRV_EnableLoadDetect
    /*000185fc*/ MOV         R0, #0 
    /*00018600*/ BX          LR 
FUNC_END VOU_DRV_EnableLoadDetect


FUNC_BEGIN VOU_DRV_DisableLoadDetect
    /*00018604*/ MOV         R0, #0 
    /*00018608*/ BX          LR 
FUNC_END VOU_DRV_DisableLoadDetect


FUNC_BEGIN VOU_DRV_SetDispMaxSize
    /*0001860c*/ MOVW        IP, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*00018610*/ MOVT        IP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*00018614*/ MOV         R3, #144                    @ 0x90 
    /*00018618*/ MLA         R0, R3, R0, IP 
    /*0001861c*/ STR         R1, [R0, #100]              @ 0x64 
    /*00018620*/ STR         R2, [R0, #104]              @ 0x68 
    /*00018624*/ BX          LR 
FUNC_END VOU_DRV_SetDispMaxSize


FUNC_BEGIN VOU_DRV_SetDevClk
    /*00018628*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*0001862c*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*00018630*/ MOV         R2, #144                    @ 0x90 
    /*00018634*/ MOVW        R1, #58563                  @ 0xe4c3 
    /*00018638*/ MLA         R2, R2, R0, R3 
    /*0001863c*/ MOVT        R1, #21 
    /*00018640*/ PUSH        {R4, LR} 
    /*00018644*/ SUB         SP, SP, #48                 @ 0x30 
    /*00018648*/ MOV         R3, #0 
    /*0001864c*/ STR         R1, [SP, #8] 
    /*00018650*/ LDR         R2, [R2, #36]               @ 0x24 
    /*00018654*/ STR         R3, [SP, #40]               @ 0x28 
    /*00018658*/ CMP         R2, #47                     @ 0x2f 
    /*0001865c*/ STR         R3, [SP, #36]               @ 0x24 
    /*00018660*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00018664*/ STR         R3, [SP] 
    /*00018668*/ STR         R3, [SP, #4] 
    /*0001866c*/ STR         R3, [SP, #12] 
    /*00018670*/ BEQ         VOU_DRV_SetDevClk_x18858
    /*00018674*/ MOV         R3, #15 
    /*00018678*/ STR         R0, [SP, #40]               @ 0x28 
    /*0001867c*/ STR         R3, [SP, #36]               @ 0x24 
    /*00018680*/ CMP         R2, #46                     @ 0x2e 
    /*00018684*/ LDRLS       PC, [PC, R2, LSL #2] 
    /*00018688*/ B           VOU_DRV_SetDevClk_x1884c
    /*0001868c*/ ANDEQ       R8, R1, R0, ROR #21 
    /*00018690*/ ANDEQ       R8, R1, R0, ROR #21 
    /*00018694*/ LDRDEQ      R8, [R1], -R8               @ <UNPREDICTABLE> 
    /*00018698*/ LDRDEQ      R8, [R1], -R8               @ <UNPREDICTABLE> 
    /*0001869c*/ LDRDEQ      R8, [R1], -R8               @ <UNPREDICTABLE> 
    /*000186a0*/ LDRDEQ      R8, [R1], -R8               @ <UNPREDICTABLE> 
    /*000186a4*/ LDRDEQ      R8, [R1], -R8               @ <UNPREDICTABLE> 
    /*000186a8*/ LDRDEQ      R8, [R1], -R8               @ <UNPREDICTABLE> 
    /*000186ac*/ LDRDEQ      R8, [R1], -R8               @ <UNPREDICTABLE> 
    /*000186b0*/ LDRDEQ      R8, [R1], -R0 
    /*000186b4*/ LDRDEQ      R8, [R1], -R0 
    /*000186b8*/ ANDEQ       R8, R1, R0, ROR #21 
    /*000186bc*/ ANDEQ       R8, R1, R0, ROR #21 
    /*000186c0*/ MULEQ       R1, IP, SL 
    /*000186c4*/ MULEQ       R1, R4, SL 
    /*000186c8*/ ANDEQ       R8, R1, IP, LSL #21 
    /*000186cc*/ ANDEQ       R8, R1, IP, ASR SL 
    /*000186d0*/ ANDEQ       R8, R1, IP, LSR #20 
    /*000186d4*/ STRDEQ      R8, [R1], -R8               @ <UNPREDICTABLE> 
    /*000186d8*/ STRDEQ      R8, [R1], -R0 
    /*000186dc*/ ANDEQ       R8, R1, R0, ROR #19 
    /*000186e0*/ @           <UNDEFINED> instruction: 0x000189b0 
    /*000186e4*/ ANDEQ       R8, R1, IP, ROR R9 
    /*000186e8*/ ANDEQ       R8, R1, IP, ASR #16 
    /*000186ec*/ ANDEQ       R8, R1, IP, ASR #16 
    /*000186f0*/ LDRDEQ      R8, [R1], -R0 
    /*000186f4*/ ANDEQ       R8, R1, R8, ASR #18 
    /*000186f8*/ ANDEQ       R8, R1, R4, LSL R9 
    /*000186fc*/ ANDEQ       R8, R1, R4, ROR #17 
    /*00018700*/ @           <UNDEFINED> instruction: 0x000188b8 
    /*00018704*/ @           <UNDEFINED> instruction: 0x000188b8 
    /*00018708*/ @           <UNDEFINED> instruction: 0x000188b8 
    /*0001870c*/ ANDEQ       R8, R1, IP, ASR #16 
    /*00018710*/ ANDEQ       R8, R1, R8, ASR #14 
    /*00018714*/ ANDEQ       R8, R1, IP, ASR #16 
    /*00018718*/ ANDEQ       R8, R1, IP, ASR #16 
    /*0001871c*/ ANDEQ       R8, R1, IP, ASR #16 
    /*00018720*/ ANDEQ       R8, R1, IP, ASR #16 
    /*00018724*/ ANDEQ       R8, R1, IP, ASR #16 
    /*00018728*/ ANDEQ       R8, R1, R8, ROR R8 
    /*0001872c*/ ANDEQ       R8, R1, R8, ASR FP 
    /*00018730*/ ANDEQ       R8, R1, R0, ASR #22 
    /*00018734*/ ANDEQ       R8, R1, R8, LSR #22 
    /*00018738*/ ANDEQ       R8, R1, R0, LSL FP 
    /*0001873c*/ LDRDEQ      R8, [R1], -R8               @ <UNPREDICTABLE> 
    /*00018740*/ LDRDEQ      R8, [R1], -R0 
    /*00018744*/ ANDEQ       R8, R1, R8, ASR #14 
    /*00018748*/ MOV         R3, #99                     @ 0x63 
    /*0001874c*/ MOV         R2, #0 
    /*00018750*/ STR         R3, [SP, #28] 
    /*00018754*/ MOV         R3, #2 
    /*00018758*/ STR         R2, [SP, #16] 
    /*0001875c*/ MOV         R2, #1 
    /*00018760*/ STR         R3, [SP, #32] 
    /*00018764*/ STR         R3, [SP, #20] 
    /*00018768*/ STR         R2, [SP, #24] 
    VOU_DRV_SetDevClk_x1876c:
    /*0001876c*/ MOV         R0, #2 
    /*00018770*/ BL          0x0000000000018770          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018774*/ MOV         R2, SP 
    /*00018778*/ MOV         R1, #91                     @ 0x5b 
    /*0001877c*/ LDR         R3, [R0, #20] 
    /*00018780*/ ADD         R0, SP, #36                 @ 0x24 
    /*00018784*/ BLX         R3 
    /*00018788*/ MOV         R0, #2 
    /*0001878c*/ BL          0x000000000001878C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018790*/ ADD         R2, SP, #12 
    /*00018794*/ MOV         R1, #3 
    /*00018798*/ LDR         R3, [R0, #20] 
    /*0001879c*/ ADD         R0, SP, #36                 @ 0x24 
    /*000187a0*/ BLX         R3 
    /*000187a4*/ MOV         R0, #2 
    /*000187a8*/ BL          0x00000000000187A8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000187ac*/ ADD         R2, SP, #4 
    /*000187b0*/ MOV         R1, #90                     @ 0x5a 
    /*000187b4*/ LDR         R3, [R0, #20] 
    /*000187b8*/ ADD         R0, SP, #36                 @ 0x24 
    /*000187bc*/ BLX         R3 
    /*000187c0*/ MOV         R0, #2 
    /*000187c4*/ BL          0x00000000000187C4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000187c8*/ ADD         R2, SP, #28 
    /*000187cc*/ MOV         R1, #15 
    /*000187d0*/ LDR         R3, [R0, #20] 
    /*000187d4*/ ADD         R0, SP, #36                 @ 0x24 
    /*000187d8*/ BLX         R3 
    /*000187dc*/ MOV         R0, #2 
    /*000187e0*/ BL          0x00000000000187E0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000187e4*/ ADD         R2, SP, #16 
    /*000187e8*/ MOV         R1, #11 
    /*000187ec*/ LDR         R3, [R0, #20] 
    /*000187f0*/ ADD         R0, SP, #36                 @ 0x24 
    /*000187f4*/ BLX         R3 
    /*000187f8*/ MOV         R0, #2 
    /*000187fc*/ BL          0x00000000000187FC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018800*/ ADD         R2, SP, #32 
    /*00018804*/ MOV         R1, #14 
    /*00018808*/ LDR         R3, [R0, #20] 
    /*0001880c*/ ADD         R0, SP, #36                 @ 0x24 
    /*00018810*/ BLX         R3 
    /*00018814*/ MOV         R0, #2 
    /*00018818*/ BL          0x0000000000018818          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001881c*/ ADD         R2, SP, #20 
    /*00018820*/ MOV         R1, #12 
    /*00018824*/ LDR         R3, [R0, #20] 
    /*00018828*/ ADD         R0, SP, #36                 @ 0x24 
    /*0001882c*/ BLX         R3 
    /*00018830*/ MOV         R0, #2 
    /*00018834*/ BL          0x0000000000018834          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018838*/ ADD         R2, SP, #24 
    /*0001883c*/ MOV         R1, #13 
    /*00018840*/ LDR         R3, [R0, #20] 
    /*00018844*/ ADD         R0, SP, #36                 @ 0x24 
    /*00018848*/ BLX         R3 
    VOU_DRV_SetDevClk_x1884c:
    /*0001884c*/ MOV         R0, #0 
    /*00018850*/ ADD         SP, SP, #48                 @ 0x30 
    /*00018854*/ POP         {R4, PC} 
    VOU_DRV_SetDevClk_x18858:
    /*00018858*/ MOV         R0, #2 
    /*0001885c*/ BL          0x000000000001885C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018860*/ MOV         R2, SP 
    /*00018864*/ MOV         R1, #91                     @ 0x5b 
    /*00018868*/ LDR         R3, [R0, #20] 
    /*0001886c*/ ADD         R0, SP, #36                 @ 0x24 
    /*00018870*/ BLX         R3 
    /*00018874*/ B           VOU_DRV_SetDevClk_x1884c
    /*00018878*/ MOVW        R3, #58563                  @ 0xe4c3 
    /*0001887c*/ ADD         R4, SP, #48                 @ 0x30 
    /*00018880*/ MOVT        R3, #42                     @ 0x2a 
    /*00018884*/ MOV         R0, #2 
    /*00018888*/ MOV         R2, #6 
    VOU_DRV_SetDevClk_x1888c:
    /*0001888c*/ STR         R3, [R4, #-40]!             @ 0xffffffd8 
    /*00018890*/ STR         R2, [SP, #4] 
    /*00018894*/ BL          0x0000000000018894          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00018898*/ MOV         R2, R4 
    /*0001889c*/ MOV         R1, #110                    @ 0x6e 
    /*000188a0*/ LDR         R3, [R0, #20] 
    /*000188a4*/ ADD         R0, SP, #36                 @ 0x24 
    /*000188a8*/ BLX         R3 
    /*000188ac*/ MOV         R3, #0 
    /*000188b0*/ STR         R3, [SP, #12] 
    /*000188b4*/ B           VOU_DRV_SetDevClk_x1876c
    /*000188b8*/ MOV         R2, #99                     @ 0x63 
    /*000188bc*/ MOV         R3, #0 
    /*000188c0*/ STR         R2, [SP, #28] 
    /*000188c4*/ MOV         R2, #2 
    /*000188c8*/ STR         R3, [SP, #16] 
    /*000188cc*/ MOV         R3, #1 
    /*000188d0*/ STR         R2, [SP, #32] 
    /*000188d4*/ STR         R2, [SP, #20] 
    /*000188d8*/ STR         R3, [SP, #24] 
    /*000188dc*/ STR         R3, [SP, #12] 
    /*000188e0*/ B           VOU_DRV_SetDevClk_x1876c
    /*000188e4*/ MOVW        R3, #537                    @ 0x219 
    /*000188e8*/ MOV         R2, #0 
    /*000188ec*/ STR         R3, [SP, #28] 
    /*000188f0*/ MOV         R3, #12 
    /*000188f4*/ STR         R2, [SP, #16] 
    /*000188f8*/ MOV         R2, #2 
    /*000188fc*/ STR         R3, [SP, #32] 
    /*00018900*/ MOV         R3, #1 
    /*00018904*/ STR         R2, [SP, #20] 
    /*00018908*/ STR         R3, [SP, #24] 
    /*0001890c*/ STR         R3, [SP, #12] 
    /*00018910*/ B           VOU_DRV_SetDevClk_x1876c
    /*00018914*/ MOV         R2, #119                    @ 0x77 
    /*00018918*/ MOVW        R3, #3544                   @ 0xdd8 
    /*0001891c*/ STR         R2, [SP, #28] 
    /*00018920*/ MOVT        R3, #96                     @ 0x60 
    /*00018924*/ MOV         R2, #3 
    /*00018928*/ STR         R3, [SP, #16] 
    /*0001892c*/ STR         R2, [SP, #32] 
    /*00018930*/ MOV         R3, #2 
    /*00018934*/ STR         R3, [SP, #20] 
    /*00018938*/ MOV         R3, #1 
    /*0001893c*/ STR         R3, [SP, #24] 
    /*00018940*/ STR         R3, [SP, #12] 
    /*00018944*/ B           VOU_DRV_SetDevClk_x1876c
    /*00018948*/ MOVW        R3, #3544                   @ 0xdd8 
    /*0001894c*/ MOVT        R3, #96                     @ 0x60 
    /*00018950*/ MOV         R2, #119                    @ 0x77 
    VOU_DRV_SetDevClk_x18954:
    /*00018954*/ STR         R2, [SP, #28] 
    /*00018958*/ MOV         R2, #2 
    /*0001895c*/ STR         R3, [SP, #16] 
    /*00018960*/ MOV         R3, #3 
    /*00018964*/ STR         R2, [SP, #20] 
    /*00018968*/ STR         R3, [SP, #32] 
    /*0001896c*/ STR         R3, [SP, #12] 
    /*00018970*/ MOV         R3, #1 
    /*00018974*/ STR         R3, [SP, #24] 
    /*00018978*/ B           VOU_DRV_SetDevClk_x1876c
    /*0001897c*/ MOV         R2, #67                     @ 0x43 
    /*00018980*/ MOVW        R3, #54264                  @ 0xd3f8 
    /*00018984*/ STR         R2, [SP, #28] 
    /*00018988*/ MOVT        R3, #76                     @ 0x4c 
    /*0001898c*/ MOV         R2, #1 
    /*00018990*/ STR         R3, [SP, #16] 
    /*00018994*/ STR         R2, [SP, #24] 
    /*00018998*/ MOV         R3, #2 
    /*0001899c*/ STR         R3, [SP, #32] 
    /*000189a0*/ STR         R3, [SP, #20] 
    /*000189a4*/ MOV         R3, #15 
    /*000189a8*/ STR         R3, [SP, #12] 
    /*000189ac*/ B           VOU_DRV_SetDevClk_x1876c
    /*000189b0*/ MOV         R3, #154                    @ 0x9a 
    VOU_DRV_SetDevClk_x189b4:
    /*000189b4*/ MOV         R2, #0 
    /*000189b8*/ STR         R3, [SP, #28] 
    /*000189bc*/ STR         R2, [SP, #16] 
    /*000189c0*/ MOV         R3, #3 
    /*000189c4*/ MOV         R1, #2 
    /*000189c8*/ MOV         R2, #1 
    /*000189cc*/ STR         R3, [SP, #32] 
    /*000189d0*/ STR         R3, [SP, #12] 
    /*000189d4*/ STR         R1, [SP, #20] 
    /*000189d8*/ STR         R2, [SP, #24] 
    /*000189dc*/ B           VOU_DRV_SetDevClk_x1876c
    /*000189e0*/ MOV         R3, #696                    @ 0x2b8 
    /*000189e4*/ MOV         R2, #146                    @ 0x92 
    /*000189e8*/ MOVT        R3, #64                     @ 0x40 
    /*000189ec*/ B           VOU_DRV_SetDevClk_x18954
    /*000189f0*/ MOV         R3, #162                    @ 0xa2 
    /*000189f4*/ B           VOU_DRV_SetDevClk_x189b4
    /*000189f8*/ MOV         R2, #167                    @ 0xa7 
    VOU_DRV_SetDevClk_x189fc:
    /*000189fc*/ MOV         R3, #0 
    /*00018a00*/ STR         R2, [SP, #28] 
    /*00018a04*/ STR         R3, [SP, #16] 
    /*00018a08*/ MOV         R2, #3 
    /*00018a0c*/ MOV         R3, #2 
    /*00018a10*/ STR         R2, [SP, #32] 
    /*00018a14*/ STR         R3, [SP, #20] 
    /*00018a18*/ MOV         R2, #1 
    /*00018a1c*/ MOV         R3, #7 
    /*00018a20*/ STR         R2, [SP, #24] 
    /*00018a24*/ STR         R3, [SP, #12] 
    /*00018a28*/ B           VOU_DRV_SetDevClk_x1876c
    /*00018a2c*/ MOV         R3, #71                     @ 0x47 
    VOU_DRV_SetDevClk_x18a30:
    /*00018a30*/ MOV         R2, #0 
    /*00018a34*/ STR         R3, [SP, #28] 
    /*00018a38*/ STR         R2, [SP, #16] 
    /*00018a3c*/ MOV         R3, #2 
    /*00018a40*/ MOV         R1, #1 
    /*00018a44*/ MOV         R2, #3 
    /*00018a48*/ STR         R3, [SP, #32] 
    /*00018a4c*/ STR         R3, [SP, #20] 
    /*00018a50*/ STR         R1, [SP, #24] 
    /*00018a54*/ STR         R2, [SP, #12] 
    /*00018a58*/ B           VOU_DRV_SetDevClk_x1876c
    /*00018a5c*/ MOV         R3, #114                    @ 0x72 
    VOU_DRV_SetDevClk_x18a60:
    /*00018a60*/ MOV         R2, #0 
    /*00018a64*/ STR         R3, [SP, #28] 
    /*00018a68*/ STR         R2, [SP, #16] 
    /*00018a6c*/ MOV         R3, #2 
    /*00018a70*/ MOV         R1, #1 
    /*00018a74*/ MOV         R2, #7 
    /*00018a78*/ STR         R3, [SP, #32] 
    /*00018a7c*/ STR         R3, [SP, #20] 
    /*00018a80*/ STR         R1, [SP, #24] 
    /*00018a84*/ STR         R2, [SP, #12] 
    /*00018a88*/ B           VOU_DRV_SetDevClk_x1876c
    /*00018a8c*/ MOV         R3, #72                     @ 0x48 
    /*00018a90*/ B           VOU_DRV_SetDevClk_x18a30
    /*00018a94*/ MOV         R2, #130                    @ 0x82 
    /*00018a98*/ B           VOU_DRV_SetDevClk_x189fc
    /*00018a9c*/ MOV         R2, #160                    @ 0xa0 
    /*00018aa0*/ MOV         R3, #0 
    /*00018aa4*/ STR         R2, [SP, #28] 
    /*00018aa8*/ MOV         R2, #3 
    /*00018aac*/ STR         R3, [SP, #16] 
    /*00018ab0*/ MOV         R3, #2 
    /*00018ab4*/ STR         R2, [SP, #32] 
    /*00018ab8*/ MOV         R2, #1 
    /*00018abc*/ STR         R3, [SP, #20] 
    /*00018ac0*/ MOV         R3, #15 
    /*00018ac4*/ STR         R2, [SP, #24] 
    /*00018ac8*/ STR         R3, [SP, #12] 
    /*00018acc*/ B           VOU_DRV_SetDevClk_x1876c
    /*00018ad0*/ MOV         R3, #99                     @ 0x63 
    /*00018ad4*/ B           VOU_DRV_SetDevClk_x18a30
    /*00018ad8*/ MOV         R3, #99                     @ 0x63 
    /*00018adc*/ B           VOU_DRV_SetDevClk_x18a60
    /*00018ae0*/ MOV         R3, #72                     @ 0x48 
    /*00018ae4*/ MOV         R2, #0 
    /*00018ae8*/ STR         R3, [SP, #28] 
    /*00018aec*/ MOV         R1, #1 
    /*00018af0*/ MOV         R3, #2 
    /*00018af4*/ STR         R2, [SP, #16] 
    /*00018af8*/ STR         R3, [SP, #32] 
    /*00018afc*/ MOV         R2, #15 
    /*00018b00*/ STR         R3, [SP, #20] 
    /*00018b04*/ STR         R1, [SP, #24] 
    /*00018b08*/ STR         R2, [SP, #12] 
    /*00018b0c*/ B           VOU_DRV_SetDevClk_x1876c
    /*00018b10*/ MOVW        R3, #40130                  @ 0x9cc2 
    /*00018b14*/ ADD         R4, SP, #48                 @ 0x30 
    /*00018b18*/ MOV         R0, #2 
    /*00018b1c*/ MOV         R2, #6 
    /*00018b20*/ MOVT        R3, #58                     @ 0x3a 
    /*00018b24*/ B           VOU_DRV_SetDevClk_x1888c
    /*00018b28*/ MOVW        R3, #3156                   @ 0xc54 
    /*00018b2c*/ ADD         R4, SP, #48                 @ 0x30 
    /*00018b30*/ MOV         R0, #2 
    /*00018b34*/ MOV         R2, #6 
    /*00018b38*/ MOVT        R3, #9 
    /*00018b3c*/ B           VOU_DRV_SetDevClk_x1888c
    /*00018b40*/ MOVW        R3, #11990                  @ 0x2ed6 
    /*00018b44*/ ADD         R4, SP, #48                 @ 0x30 
    /*00018b48*/ MOV         R0, #2 
    /*00018b4c*/ MOV         R2, #6 
    /*00018b50*/ MOVT        R3, #24 
    /*00018b54*/ B           VOU_DRV_SetDevClk_x1888c
    /*00018b58*/ MOVW        R3, #8966                   @ 0x2306 
    /*00018b5c*/ ADD         R4, SP, #48                 @ 0x30 
    /*00018b60*/ MOV         R0, #2 
    /*00018b64*/ MOV         R2, #6 
    /*00018b68*/ MOVT        R3, #21 
    /*00018b6c*/ B           VOU_DRV_SetDevClk_x1888c
FUNC_END VOU_DRV_SetDevClk


FUNC_BEGIN VOU_DRV_GetInterruptDev
    /*00018b70*/ TST         R0, #1 
    /*00018b74*/ BEQ         VOU_DRV_GetInterruptDev_x18bc0
    /*00018b78*/ PUSH        {R4, LR} 
    /*00018b7c*/ SUB         SP, SP, #8 
    /*00018b80*/ MOV         R4, R1 
    /*00018b84*/ MOV         R3, #3888                   @ 0xf30 
    /*00018b88*/ MOV         R1, #15 
    /*00018b8c*/ STR         R3, [SP] 
    /*00018b90*/ MOVW        R2, #0                      @ .LC61 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8168] 
    /*00018b94*/ LDR         R3, [PC, #44]               @ 0x0000000000018bc8 
    /*00018b98*/ MOVT        R2, #0                      @ .LC61 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8168] 
    /*00018b9c*/ MOV         R0, #7 
    /*00018ba0*/ BL          0x0000000000018BA0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018ba4*/ MOV         R0, #1 
    /*00018ba8*/ BL          0x0000000000018BA8          @ HAL_DISP_ClearIntStatus [R_ARM_CALL: .text+0x1bbb0] 
    /*00018bac*/ MOV         R3, #0 
    /*00018bb0*/ MOV         R0, R3 
    /*00018bb4*/ STR         R3, [R4] 
    /*00018bb8*/ ADD         SP, SP, #8 
    /*00018bbc*/ POP         {R4, PC} 
    VOU_DRV_GetInterruptDev_x18bc0:
    /*00018bc0*/ MVN         R0, #0 
    /*00018bc4*/ BX          LR 
    /*00018bc8*/ ANDEQ       R0, R0, R4, LSR PC 
FUNC_END VOU_DRV_GetInterruptDev


FUNC_BEGIN VOU_DRV_CheckLayerAttr
    /*00018bcc*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00018bd0*/ MOV         R4, R2 
    /*00018bd4*/ LDR         LR, [R2] 
    /*00018bd8*/ SUB         SP, SP, #32 
    /*00018bdc*/ MOV         R5, R1 
    /*00018be0*/ CMP         LR, #0 
    /*00018be4*/ BLT         VOU_DRV_CheckLayerAttr_x18da8
    /*00018be8*/ LDR         R6, [R2, #4] 
    /*00018bec*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*00018bf0*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*00018bf4*/ MOV         R2, #144                    @ 0x90 
    /*00018bf8*/ CMP         R6, #0 
    /*00018bfc*/ LDR         R1, [R4, #8] 
    /*00018c00*/ MLA         R0, R2, R0, R3 
    /*00018c04*/ BLT         VOU_DRV_CheckLayerAttr_x18ec4
    /*00018c08*/ LDR         IP, [R0, #100]              @ 0x64 
    /*00018c0c*/ ADD         R3, R1, LR 
    /*00018c10*/ LDR         R7, [R4, #12] 
    /*00018c14*/ CMP         R3, IP 
    /*00018c18*/ LDR         R2, [R0, #104]              @ 0x68 
    /*00018c1c*/ BHI         VOU_DRV_CheckLayerAttr_x18dcc
    /*00018c20*/ CMP         R1, #31 
    /*00018c24*/ CMPHI       R7, #31 
    /*00018c28*/ ADD         R8, R7, R6 
    /*00018c2c*/ MOVLS       R3, #1 
    /*00018c30*/ MOVHI       R3, #0 
    /*00018c34*/ CMP         R8, R2 
    /*00018c38*/ ORRHI       R3, R3, #1 
    /*00018c3c*/ CMP         R3, #0 
    /*00018c40*/ BNE         VOU_DRV_CheckLayerAttr_x18dcc
    /*00018c44*/ LDR         IP, [R4, #16] 
    /*00018c48*/ LDR         R3, [R4, #20] 
    /*00018c4c*/ CMP         IP, #31 
    /*00018c50*/ BLS         VOU_DRV_CheckLayerAttr_x18e54
    /*00018c54*/ CMP         R3, #31 
    /*00018c58*/ BLS         VOU_DRV_CheckLayerAttr_x18e54
    /*00018c5c*/ ORR         R2, LR, R6 
    /*00018c60*/ TST         R2, #1 
    /*00018c64*/ BNE         VOU_DRV_CheckLayerAttr_x18e10
    /*00018c68*/ ORR         R2, R1, R7 
    /*00018c6c*/ TST         R2, #1 
    /*00018c70*/ BNE         VOU_DRV_CheckLayerAttr_x18e10
    /*00018c74*/ ORR         R2, IP, R3 
    /*00018c78*/ TST         R2, #1 
    /*00018c7c*/ BNE         VOU_DRV_CheckLayerAttr_x18e10
    /*00018c80*/ LDR         R2, [R0, #36]               @ 0x24 
    /*00018c84*/ SUB         R1, R2, #7 
    /*00018c88*/ CMP         R2, #1 
    /*00018c8c*/ CMPHI       R1, #1 
    /*00018c90*/ LDR         R2, [R4, #28] 
    /*00018c94*/ BLS         VOU_DRV_CheckLayerAttr_x18d18
    VOU_DRV_CheckLayerAttr_x18c98:
    /*00018c98*/ SUB         R3, R2, #25 
    /*00018c9c*/ CMP         R2, #39                     @ 0x27 
    /*00018ca0*/ CMPNE       R3, #1 
    /*00018ca4*/ BHI         VOU_DRV_CheckLayerAttr_x18ed4
    /*00018ca8*/ MOVW        R3, #0                      @ reg_otp_base_va [R_ARM_MOVW_ABS_NC: +0x0] 
    /*00018cac*/ MOVT        R3, #0                      @ reg_otp_base_va [R_ARM_MOVT_ABS: +0x0] 
    /*00018cb0*/ LDR         R3, [R3] 
    /*00018cb4*/ LDRB        R3, [R3, #40]               @ 0x28 
    /*00018cb8*/ CMP         R3, #9 
    /*00018cbc*/ CMPNE       R3, #0 
    /*00018cc0*/ BNE         VOU_DRV_CheckLayerAttr_x18d58
    /*00018cc4*/ LDR         R3, [R4, #8] 
    /*00018cc8*/ LDR         R2, [R4, #12] 
    /*00018ccc*/ CMP         R3, #3840                   @ 0xf00 
    /*00018cd0*/ BHI         VOU_DRV_CheckLayerAttr_x18e74
    /*00018cd4*/ CMP         R2, #3840                   @ 0xf00 
    /*00018cd8*/ BHI         VOU_DRV_CheckLayerAttr_x18e74
    VOU_DRV_CheckLayerAttr_x18cdc:
    /*00018cdc*/ LDR         R3, [R4, #24] 
    /*00018ce0*/ SUB         R2, R3, #1 
    /*00018ce4*/ CMP         R2, #239                    @ 0xef 
    /*00018ce8*/ BHI         VOU_DRV_CheckLayerAttr_x18ef0
    /*00018cec*/ LDR         R3, [R4, #32] 
    /*00018cf0*/ CMP         R3, #0 
    /*00018cf4*/ BNE         VOU_DRV_CheckLayerAttr_x18f2c
    /*00018cf8*/ LDR         R3, [R4, #36]               @ 0x24 
    /*00018cfc*/ CMP         R3, #1 
    /*00018d00*/ BHI         VOU_DRV_CheckLayerAttr_x18e90
    /*00018d04*/ LDR         R0, [R4, #40]               @ 0x28 
    /*00018d08*/ CMP         R0, #0 
    /*00018d0c*/ BNE         VOU_DRV_CheckLayerAttr_x18f5c
    VOU_DRV_CheckLayerAttr_x18d10:
    /*00018d10*/ ADD         SP, SP, #32 
    /*00018d14*/ POP         {R4, R5, R6, R7, R8, PC} 
    VOU_DRV_CheckLayerAttr_x18d18:
    /*00018d18*/ TST         R3, #3 
    /*00018d1c*/ BEQ         VOU_DRV_CheckLayerAttr_x18c98
    /*00018d20*/ CMP         R2, #26 
    /*00018d24*/ BNE         VOU_DRV_CheckLayerAttr_x18c98
    /*00018d28*/ STR         R3, [SP, #8] 
    /*00018d2c*/ MOVW        R2, #0                      @ .LC65 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x82f4] 
    /*00018d30*/ MOVW        R3, #3964                   @ 0xf7c 
    /*00018d34*/ MOVT        R2, #0                      @ .LC65 [R_ARM_MOVT_ABS: .rodata.str1.4+0x82f4] 
    /*00018d38*/ STR         R3, [SP] 
    /*00018d3c*/ MOV         R1, #15 
    /*00018d40*/ STR         R5, [SP, #4] 
    /*00018d44*/ MOV         R0, #4 
    /*00018d48*/ LDR         R3, [PC, #552]              @ 0x0000000000018f78 
    /*00018d4c*/ BL          0x0000000000018D4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018d50*/ LDR         R2, [R4, #28] 
    /*00018d54*/ B           VOU_DRV_CheckLayerAttr_x18c98
    VOU_DRV_CheckLayerAttr_x18d58:
    /*00018d58*/ LDR         R3, [R4, #8] 
    /*00018d5c*/ LDR         R2, [R4, #12] 
    /*00018d60*/ CMP         R3, #1920                   @ 0x780 
    /*00018d64*/ BHI         VOU_DRV_CheckLayerAttr_x18d70
    /*00018d68*/ CMP         R2, #1920                   @ 0x780 
    /*00018d6c*/ BLS         VOU_DRV_CheckLayerAttr_x18cdc
    VOU_DRV_CheckLayerAttr_x18d70:
    /*00018d70*/ STR         R2, [SP, #12] 
    /*00018d74*/ MOVW        R2, #0                      @ .LC67 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x83d0] 
    /*00018d78*/ MOVT        R2, #0                      @ .LC67 [R_ARM_MOVT_ABS: .rodata.str1.4+0x83d0] 
    /*00018d7c*/ MOVW        R1, #3985                   @ 0xf91 
    /*00018d80*/ STR         R3, [SP, #8] 
    /*00018d84*/ STR         R5, [SP, #4] 
    VOU_DRV_CheckLayerAttr_x18d88:
    /*00018d88*/ STR         R1, [SP] 
    VOU_DRV_CheckLayerAttr_x18d8c:
    /*00018d8c*/ MOV         R1, #15 
    /*00018d90*/ LDR         R3, [PC, #480]              @ 0x0000000000018f78 
    /*00018d94*/ MOV         R0, #3 
    /*00018d98*/ BL          0x0000000000018D98          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018d9c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00018da0*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00018da4*/ B           VOU_DRV_CheckLayerAttr_x18d10
    VOU_DRV_CheckLayerAttr_x18da8:
    /*00018da8*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*00018dac*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*00018db0*/ MOV         R2, #144                    @ 0x90 
    /*00018db4*/ LDR         R6, [R4, #4] 
    /*00018db8*/ MLA         R0, R2, R0, R3 
    /*00018dbc*/ LDR         R1, [R4, #8] 
    /*00018dc0*/ LDR         R7, [R4, #12] 
    /*00018dc4*/ LDR         IP, [R0, #100]              @ 0x64 
    /*00018dc8*/ LDR         R2, [R0, #104]              @ 0x68 
    VOU_DRV_CheckLayerAttr_x18dcc:
    /*00018dcc*/ STR         R2, [SP, #28] 
    /*00018dd0*/ MOVW        R3, #3926                   @ 0xf56 
    /*00018dd4*/ STR         R1, [SP, #16] 
    /*00018dd8*/ MOVW        R2, #0                      @ .LC62 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8194] 
    /*00018ddc*/ STM         SP, {R3, R5, LR} 
    /*00018de0*/ MOVT        R2, #0                      @ .LC62 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8194] 
    /*00018de4*/ STR         IP, [SP, #24] 
    /*00018de8*/ MOV         R1, #15 
    /*00018dec*/ STR         R7, [SP, #20] 
    /*00018df0*/ MOV         R0, #3 
    /*00018df4*/ STR         R6, [SP, #12] 
    /*00018df8*/ LDR         R3, [PC, #376]              @ 0x0000000000018f78 
    /*00018dfc*/ BL          0x0000000000018DFC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018e00*/ MOVW        R0, #32771                  @ 0x8003 
    /*00018e04*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00018e08*/ ADD         SP, SP, #32 
    /*00018e0c*/ POP         {R4, R5, R6, R7, R8, PC} 
    VOU_DRV_CheckLayerAttr_x18e10:
    /*00018e10*/ STR         R1, [SP, #24] 
    /*00018e14*/ MOV         R4, #3952                   @ 0xf70 
    /*00018e18*/ STR         R3, [SP, #12] 
    /*00018e1c*/ MOV         R1, #15 
    /*00018e20*/ STR         R7, [SP, #28] 
    /*00018e24*/ MOVW        R2, #0                      @ .LC64 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x827c] 
    /*00018e28*/ STR         R6, [SP, #20] 
    /*00018e2c*/ MOVT        R2, #0                      @ .LC64 [R_ARM_MOVT_ABS: .rodata.str1.4+0x827c] 
    /*00018e30*/ STR         LR, [SP, #16] 
    /*00018e34*/ MOV         R0, #3 
    /*00018e38*/ STM         SP, {R4, R5, IP} 
    /*00018e3c*/ LDR         R3, [PC, #308]              @ 0x0000000000018f78 
    /*00018e40*/ BL          0x0000000000018E40          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018e44*/ MOVW        R0, #32771                  @ 0x8003 
    /*00018e48*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00018e4c*/ ADD         SP, SP, #32 
    /*00018e50*/ POP         {R4, R5, R6, R7, R8, PC} 
    VOU_DRV_CheckLayerAttr_x18e54:
    /*00018e54*/ STR         R3, [SP, #12] 
    /*00018e58*/ MOVW        R2, #0                      @ .LC63 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8214] 
    /*00018e5c*/ MOVW        R3, #3934                   @ 0xf5e 
    /*00018e60*/ STR         IP, [SP, #8] 
    /*00018e64*/ STR         R5, [SP, #4] 
    /*00018e68*/ MOVT        R2, #0                      @ .LC63 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8214] 
    /*00018e6c*/ STR         R3, [SP] 
    /*00018e70*/ B           VOU_DRV_CheckLayerAttr_x18d8c
    VOU_DRV_CheckLayerAttr_x18e74:
    /*00018e74*/ STR         R2, [SP, #12] 
    /*00018e78*/ MOVW        R1, #3996                   @ 0xf9c 
    /*00018e7c*/ MOVW        R2, #0                      @ .LC68 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8438] 
    /*00018e80*/ STR         R3, [SP, #8] 
    /*00018e84*/ STR         R5, [SP, #4] 
    /*00018e88*/ MOVT        R2, #0                      @ .LC68 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8438] 
    /*00018e8c*/ B           VOU_DRV_CheckLayerAttr_x18d88
    VOU_DRV_CheckLayerAttr_x18e90:
    /*00018e90*/ MOVW        R2, #0                      @ .LC71 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8554] 
    /*00018e94*/ MOVT        R2, #0                      @ .LC71 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8554] 
    /*00018e98*/ STR         R3, [SP, #8] 
    /*00018e9c*/ MOV         R3, #4016                   @ 0xfb0 
    /*00018ea0*/ STR         R5, [SP, #4] 
    /*00018ea4*/ STR         R3, [SP] 
    VOU_DRV_CheckLayerAttr_x18ea8:
    /*00018ea8*/ LDR         R3, [PC, #200]              @ 0x0000000000018f78 
    /*00018eac*/ MOV         R1, #15 
    /*00018eb0*/ MOV         R0, #3 
    /*00018eb4*/ BL          0x0000000000018EB4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018eb8*/ MOVW        R0, #32771                  @ 0x8003 
    /*00018ebc*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00018ec0*/ B           VOU_DRV_CheckLayerAttr_x18d10
    VOU_DRV_CheckLayerAttr_x18ec4:
    /*00018ec4*/ LDR         R7, [R4, #12] 
    /*00018ec8*/ LDR         IP, [R0, #100]              @ 0x64 
    /*00018ecc*/ LDR         R2, [R0, #104]              @ 0x68 
    /*00018ed0*/ B           VOU_DRV_CheckLayerAttr_x18dcc
    VOU_DRV_CheckLayerAttr_x18ed4:
    /*00018ed4*/ STR         R2, [SP, #8] 
    /*00018ed8*/ MOVW        R3, #3974                   @ 0xf86 
    /*00018edc*/ MOVW        R2, #0                      @ .LC66 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8384] 
    /*00018ee0*/ STR         R5, [SP, #4] 
    /*00018ee4*/ STR         R3, [SP] 
    /*00018ee8*/ MOVT        R2, #0                      @ .LC66 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8384] 
    /*00018eec*/ B           VOU_DRV_CheckLayerAttr_x18ea8
    VOU_DRV_CheckLayerAttr_x18ef0:
    /*00018ef0*/ STR         R3, [SP, #8] 
    /*00018ef4*/ MOV         R2, #240                    @ 0xf0 
    /*00018ef8*/ MOVW        R3, #4003                   @ 0xfa3 
    /*00018efc*/ STR         R2, [SP, #12] 
    /*00018f00*/ STR         R3, [SP] 
    /*00018f04*/ MOVW        R2, #0                      @ .LC69 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x84a0] 
    /*00018f08*/ STR         R5, [SP, #4] 
    /*00018f0c*/ MOVT        R2, #0                      @ .LC69 [R_ARM_MOVT_ABS: .rodata.str1.4+0x84a0] 
    /*00018f10*/ LDR         R3, [PC, #96]               @ 0x0000000000018f78 
    /*00018f14*/ MOV         R1, #15 
    /*00018f18*/ MOV         R0, #3 
    /*00018f1c*/ BL          0x0000000000018F1C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018f20*/ MOVW        R0, #32771                  @ 0x8003 
    /*00018f24*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00018f28*/ B           VOU_DRV_CheckLayerAttr_x18d10
    VOU_DRV_CheckLayerAttr_x18f2c:
    /*00018f2c*/ MOVW        R3, #4010                   @ 0xfaa 
    /*00018f30*/ STR         R5, [SP, #4] 
    /*00018f34*/ STR         R3, [SP] 
    /*00018f38*/ MOVW        R2, #0                      @ .LC70 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x84fc] 
    /*00018f3c*/ LDR         R3, [PC, #52]               @ 0x0000000000018f78 
    /*00018f40*/ MOVT        R2, #0                      @ .LC70 [R_ARM_MOVT_ABS: .rodata.str1.4+0x84fc] 
    /*00018f44*/ MOV         R1, #15 
    /*00018f48*/ MOV         R0, #3 
    /*00018f4c*/ BL          0x0000000000018F4C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00018f50*/ MOVW        R0, #32771                  @ 0x8003 
    /*00018f54*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00018f58*/ B           VOU_DRV_CheckLayerAttr_x18d10
    VOU_DRV_CheckLayerAttr_x18f5c:
    /*00018f5c*/ MOVW        R3, #4023                   @ 0xfb7 
    /*00018f60*/ MOVW        R2, #0                      @ .LC72 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8598] 
    /*00018f64*/ STR         R0, [SP, #8] 
    /*00018f68*/ MOVT        R2, #0                      @ .LC72 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8598] 
    /*00018f6c*/ STR         R5, [SP, #4] 
    /*00018f70*/ STR         R3, [SP] 
    /*00018f74*/ B           VOU_DRV_CheckLayerAttr_x18ea8
    /*00018f78*/ ANDEQ       R0, R0, IP, ASR #30 
FUNC_END VOU_DRV_CheckLayerAttr


FUNC_BEGIN VO_DRV_CheckLayerSupportFrame
    /*00018f7c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00018f80*/ SUB         SP, SP, #12 
    /*00018f84*/ LDR         R3, [R1, #24] 
    /*00018f88*/ LDR         R2, [R1, #312]              @ 0x138 
    /*00018f8c*/ CMP         R3, #0 
    /*00018f90*/ MOVWNE      R3, #4035                   @ 0xfc3 
    /*00018f94*/ MOVWNE      R2, #0                      @ .LC73 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x85e4] 
    /*00018f98*/ STRNE       R3, [SP] 
    /*00018f9c*/ MOVTNE      R2, #0                      @ .LC73 [R_ARM_MOVT_ABS: .rodata.str1.4+0x85e4] 
    /*00018fa0*/ BNE         VO_DRV_CheckLayerSupportFrame_x19008
    /*00018fa4*/ LDR         R3, [R1, #28] 
    /*00018fa8*/ CMP         R3, #3 
    /*00018fac*/ CMPNE       R3, #1 
    /*00018fb0*/ BHI         VO_DRV_CheckLayerSupportFrame_x19028
    /*00018fb4*/ LDR         R0, [R1, #16] 
    /*00018fb8*/ CMP         R0, #0 
    /*00018fbc*/ MOVWNE      R3, #4050                   @ 0xfd2 
    /*00018fc0*/ MOVWNE      R2, #0                      @ .LC75 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8690] 
    /*00018fc4*/ STRNE       R3, [SP] 
    /*00018fc8*/ MOVTNE      R2, #0                      @ .LC75 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8690] 
    /*00018fcc*/ BNE         VO_DRV_CheckLayerSupportFrame_x19008
    /*00018fd0*/ CMP         R2, #0 
    /*00018fd4*/ BEQ         VO_DRV_CheckLayerSupportFrame_x19020
    /*00018fd8*/ LDRB        R3, [R2, #65]               @ 0x41 
    /*00018fdc*/ CMP         R3, #1 
    /*00018fe0*/ BEQ         VO_DRV_CheckLayerSupportFrame_x18fec
    VO_DRV_CheckLayerSupportFrame_x18fe4:
    /*00018fe4*/ ADD         SP, SP, #12 
    /*00018fe8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    VO_DRV_CheckLayerSupportFrame_x18fec:
    /*00018fec*/ LDR         R0, [R1, #20] 
    /*00018ff0*/ CMP         R0, #0 
    /*00018ff4*/ MOVWNE      R3, #4057                   @ 0xfd9 
    /*00018ff8*/ MOVWNE      R2, #0                      @ .LC76 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x86dc] 
    /*00018ffc*/ STRNE       R3, [SP] 
    /*00019000*/ MOVTNE      R2, #0                      @ .LC76 [R_ARM_MOVT_ABS: .rodata.str1.4+0x86dc] 
    /*00019004*/ BEQ         VO_DRV_CheckLayerSupportFrame_x18fe4
    VO_DRV_CheckLayerSupportFrame_x19008:
    /*00019008*/ LDR         R3, [PC, #44]               @ 0x000000000001903c 
    /*0001900c*/ MOV         R1, #15 
    /*00019010*/ MOV         R0, #3 
    /*00019014*/ BL          0x0000000000019014          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019018*/ MVN         R0, #0 
    /*0001901c*/ B           VO_DRV_CheckLayerSupportFrame_x18fe4
    VO_DRV_CheckLayerSupportFrame_x19020:
    /*00019020*/ MOV         R0, R2 
    /*00019024*/ B           VO_DRV_CheckLayerSupportFrame_x18fe4
    VO_DRV_CheckLayerSupportFrame_x19028:
    /*00019028*/ MOVW        R3, #4044                   @ 0xfcc 
    /*0001902c*/ MOVW        R2, #0                      @ .LC74 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8638] 
    /*00019030*/ STR         R3, [SP] 
    /*00019034*/ MOVT        R2, #0                      @ .LC74 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8638] 
    /*00019038*/ B           VO_DRV_CheckLayerSupportFrame_x19008
    /*0001903c*/ ANDEQ       R0, R0, R4, ROR #30 
FUNC_END VO_DRV_CheckLayerSupportFrame


FUNC_BEGIN VO_DRV_SetAllCrgClk
    /*00019040*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00019044*/ SUB         SP, SP, #20 
    /*00019048*/ MOV         R3, #0 
    /*0001904c*/ MOV         R2, #15 
    /*00019050*/ STR         R0, [SP] 
    /*00019054*/ MOV         R0, #2 
    /*00019058*/ STR         R2, [SP, #4] 
    /*0001905c*/ STR         R3, [SP, #12] 
    /*00019060*/ STR         R3, [SP, #8] 
    /*00019064*/ BL          0x0000000000019064          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019068*/ MOV         R2, SP 
    /*0001906c*/ MOV         R1, #81                     @ 0x51 
    /*00019070*/ LDR         R3, [R0, #20] 
    /*00019074*/ ADD         R0, SP, #4 
    /*00019078*/ BLX         R3 
    /*0001907c*/ MOV         R0, #2 
    /*00019080*/ BL          0x0000000000019080          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019084*/ MOV         R2, SP 
    /*00019088*/ MOV         R1, #86                     @ 0x56 
    /*0001908c*/ LDR         R3, [R0, #20] 
    /*00019090*/ ADD         R0, SP, #4 
    /*00019094*/ BLX         R3 
    /*00019098*/ MOV         R0, #2 
    /*0001909c*/ BL          0x000000000001909C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000190a0*/ MOV         R2, SP 
    /*000190a4*/ MOV         R1, #85                     @ 0x55 
    /*000190a8*/ LDR         R3, [R0, #20] 
    /*000190ac*/ ADD         R0, SP, #4 
    /*000190b0*/ BLX         R3 
    /*000190b4*/ MOV         R0, #2 
    /*000190b8*/ BL          0x00000000000190B8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000190bc*/ MOV         R2, SP 
    /*000190c0*/ MOV         R1, #75                     @ 0x4b 
    /*000190c4*/ LDR         R3, [R0, #20] 
    /*000190c8*/ ADD         R0, SP, #4 
    /*000190cc*/ BLX         R3 
    /*000190d0*/ MOV         R0, #2 
    /*000190d4*/ BL          0x00000000000190D4          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*000190d8*/ MOV         R2, SP 
    /*000190dc*/ MOV         R1, #88                     @ 0x58 
    /*000190e0*/ LDR         R3, [R0, #20] 
    /*000190e4*/ ADD         R0, SP, #4 
    /*000190e8*/ BLX         R3 
    /*000190ec*/ ADD         SP, SP, #20 
    /*000190f0*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VO_DRV_SetAllCrgClk


FUNC_BEGIN VO_DRV_SetHdClkSel
    /*000190f4*/ BX          LR 
FUNC_END VO_DRV_SetHdClkSel


FUNC_BEGIN VoLPWBusReset
    /*000190f8*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*000190fc*/ SUB         SP, SP, #20 
    /*00019100*/ MOV         R3, #0 
    /*00019104*/ MOV         R2, #15 
    /*00019108*/ STR         R0, [SP] 
    /*0001910c*/ MOV         R0, #2 
    /*00019110*/ STMIB       SP, {R2, R3} 
    /*00019114*/ STR         R3, [SP, #12] 
    /*00019118*/ BL          0x0000000000019118          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001911c*/ MOV         R2, SP 
    /*00019120*/ MOV         R1, #76                     @ 0x4c 
    /*00019124*/ LDR         R3, [R0, #20] 
    /*00019128*/ ADD         R0, SP, #4 
    /*0001912c*/ BLX         R3 
    /*00019130*/ ADD         SP, SP, #20 
    /*00019134*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END VoLPWBusReset


FUNC_BEGIN VO_SetLowPowerCtrlClkEn
    /*00019138*/ BX          LR 
FUNC_END VO_SetLowPowerCtrlClkEn


FUNC_BEGIN VOU_DRV_InitDefaultCsc
    /*0001913c*/ MOVW        R3, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x5480] 
    /*00019140*/ MOVT        R3, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x5480] 
    /*00019144*/ MOV         R2, #0 
    /*00019148*/ MOV         R1, #4 
    /*0001914c*/ STR         R2, [R3, #2244]             @ 0x8c4 
    /*00019150*/ MOV         R2, #50                     @ 0x32 
    /*00019154*/ STR         R1, [R3, #2268]             @ 0x8dc 
    /*00019158*/ STR         R2, [R3, #2248]             @ 0x8c8 
    /*0001915c*/ STR         R2, [R3, #2252]             @ 0x8cc 
    /*00019160*/ STR         R2, [R3, #2256]             @ 0x8d0 
    /*00019164*/ STR         R2, [R3, #2260]             @ 0x8d4 
    /*00019168*/ STR         R2, [R3, #2272]             @ 0x8e0 
    /*0001916c*/ STR         R2, [R3, #2276]             @ 0x8e4 
    /*00019170*/ STR         R2, [R3, #2280]             @ 0x8e8 
    /*00019174*/ STR         R2, [R3, #2284]             @ 0x8ec 
    /*00019178*/ BX          LR 
FUNC_END VOU_DRV_InitDefaultCsc


FUNC_BEGIN VOU_DRV_InitDefaultCscParam
    /*0001917c*/ MOVW        R3, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x5480] 
    /*00019180*/ MOVT        R3, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x5480] 
    /*00019184*/ MOV         R2, #10 
    /*00019188*/ MOV         R1, #0 
    /*0001918c*/ STR         R2, [R3, #2288]             @ 0x8f0 
    /*00019190*/ MOVW        R2, #4095                   @ 0xfff 
    /*00019194*/ STR         R1, [R3, #2292]             @ 0x8f4 
    /*00019198*/ STR         R2, [R3, #2296]             @ 0x8f8 
    /*0001919c*/ BX          LR 
FUNC_END VOU_DRV_InitDefaultCscParam


FUNC_BEGIN VOU_DRV_GetDefaultCsc
    /*000191a0*/ LDR         IP, [PC, #20]               @ 0x00000000000191bc 
    /*000191a4*/ MOV         R3, #188                    @ 0xbc 
    /*000191a8*/ MOV         R2, #20 
    /*000191ac*/ MLA         R3, R3, R0, IP 
    /*000191b0*/ MOV         R0, R1 
    /*000191b4*/ ADD         R1, R3, #108                @ 0x6c 
    VOU_DRV_GetDefaultCsc_x191b8:
    /*000191b8*/ B           VOU_DRV_GetDefaultCsc_x191b8@ osal_memcpy [R_ARM_JUMP24: +0x0] 
    /*000191bc*/ LDRDEQ      R5, [R0], -R8 
FUNC_END VOU_DRV_GetDefaultCsc


FUNC_BEGIN VOU_DRV_GetDefaultVHDRCsc
    /*000191c0*/ LDR         IP, [PC, #20]               @ 0x00000000000191dc 
    /*000191c4*/ MOV         R3, #188                    @ 0xbc 
    /*000191c8*/ MOV         R2, #20 
    /*000191cc*/ MLA         R3, R3, R0, IP 
    /*000191d0*/ MOV         R0, R1 
    /*000191d4*/ ADD         R1, R3, #132                @ 0x84 
    VOU_DRV_GetDefaultVHDRCsc_x191d8:
    /*000191d8*/ B           VOU_DRV_GetDefaultVHDRCsc_x191d8@ osal_memcpy [R_ARM_JUMP24: +0x0] 
    /*000191dc*/ LDRDEQ      R5, [R0], -R8 
FUNC_END VOU_DRV_GetDefaultVHDRCsc


FUNC_BEGIN VOU_DRV_SetDefaultCsc
    /*000191e0*/ LDR         IP, [PC, #16]               @ 0x00000000000191f8 
    /*000191e4*/ MOV         R3, #188                    @ 0xbc 
    /*000191e8*/ MOV         R2, #20 
    /*000191ec*/ MLA         R0, R3, R0, IP 
    /*000191f0*/ ADD         R0, R0, #108                @ 0x6c 
    VOU_DRV_SetDefaultCsc_x191f4:
    /*000191f4*/ B           VOU_DRV_SetDefaultCsc_x191f4@ osal_memcpy [R_ARM_JUMP24: +0x0] 
    /*000191f8*/ LDRDEQ      R5, [R0], -R8 
FUNC_END VOU_DRV_SetDefaultCsc


FUNC_BEGIN VOU_DRV_SetDefaultVHDRCsc
    /*000191fc*/ LDR         IP, [PC, #16]               @ 0x0000000000019214 
    /*00019200*/ MOV         R3, #188                    @ 0xbc 
    /*00019204*/ MOV         R2, #20 
    /*00019208*/ MLA         R0, R3, R0, IP 
    /*0001920c*/ ADD         R0, R0, #132                @ 0x84 
    VOU_DRV_SetDefaultVHDRCsc_x19210:
    /*00019210*/ B           VOU_DRV_SetDefaultVHDRCsc_x19210@ osal_memcpy [R_ARM_JUMP24: +0x0] 
    /*00019214*/ LDRDEQ      R5, [R0], -R8 
FUNC_END VOU_DRV_SetDefaultVHDRCsc


FUNC_BEGIN VOU_DRV_GetVideoLayerBindDev
    /*00019218*/ MOVW        R2, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x5480] 
    /*0001921c*/ MOVT        R2, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x5480] 
    /*00019220*/ MOV         R3, #188                    @ 0xbc 
    /*00019224*/ MLA         R0, R3, R0, R2 
    /*00019228*/ LDR         R0, [R0, #2144]             @ 0x860 
    /*0001922c*/ BX          LR 
FUNC_END VOU_DRV_GetVideoLayerBindDev


FUNC_BEGIN VOU_DRV_GetDevLayerNum
    /*00019230*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*00019234*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*00019238*/ MOV         R3, #144                    @ 0x90 
    /*0001923c*/ MLA         R0, R3, R0, R2 
    /*00019240*/ LDR         R0, [R0, #88]               @ 0x58 
    /*00019244*/ BX          LR 
FUNC_END VOU_DRV_GetDevLayerNum


FUNC_BEGIN VOU_DRV_GetDevLayer
    /*00019248*/ MOVW        R3, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x5480] 
    /*0001924c*/ MOVT        R3, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x5480] 
    /*00019250*/ LDR         R3, [R3, #2144]             @ 0x860 
    /*00019254*/ CMP         R0, R3 
    /*00019258*/ MOVEQ       R3, #0 
    /*0001925c*/ STREQ       R3, [R1] 
    /*00019260*/ BX          LR 
FUNC_END VOU_DRV_GetDevLayer


FUNC_BEGIN VOU_DRV_IsLayerSizeLimit
    /*00019264*/ MOVW        R2, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x5480] 
    /*00019268*/ MOVT        R2, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x5480] 
    /*0001926c*/ MOV         R3, #188                    @ 0xbc 
    /*00019270*/ MLA         R0, R3, R0, R2 
    /*00019274*/ LDR         R0, [R0, #2160]             @ 0x870 
    /*00019278*/ BX          LR 
FUNC_END VOU_DRV_IsLayerSizeLimit


FUNC_BEGIN VOU_DRV_GetLayerChnNum
    /*0001927c*/ MOVW        R2, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x5480] 
    /*00019280*/ MOVT        R2, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x5480] 
    /*00019284*/ MOV         R3, #188                    @ 0xbc 
    /*00019288*/ MLA         R0, R3, R0, R2 
    /*0001928c*/ LDR         R0, [R0, #2164]             @ 0x874 
    /*00019290*/ BX          LR 
FUNC_END VOU_DRV_GetLayerChnNum


FUNC_BEGIN VOU_DRV_IsChipSupportBorder
    /*00019294*/ PUSH        {R4, LR} 
    /*00019298*/ SUBS        R4, R1, #0 
    /*0001929c*/ SUB         SP, SP, #8 
    /*000192a0*/ MOVNE       R0, #1 
    /*000192a4*/ BNE         VOU_DRV_IsChipSupportBorder_x192d0
    /*000192a8*/ STR         R0, [SP, #4] 
    /*000192ac*/ MOVW        R3, #4331                   @ 0x10eb 
    /*000192b0*/ MOVW        R2, #0                      @ .LC77 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x872c] 
    /*000192b4*/ STR         R3, [SP] 
    /*000192b8*/ MOVT        R2, #0                      @ .LC77 [R_ARM_MOVT_ABS: .rodata.str1.4+0x872c] 
    /*000192bc*/ LDR         R3, [PC, #20]               @ 0x00000000000192d8 
    /*000192c0*/ MOV         R1, #15 
    /*000192c4*/ MOV         R0, #3 
    /*000192c8*/ BL          0x00000000000192C8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000192cc*/ MOV         R0, R4 
    VOU_DRV_IsChipSupportBorder_x192d0:
    /*000192d0*/ ADD         SP, SP, #8 
    /*000192d4*/ POP         {R4, PC} 
    /*000192d8*/ ANDEQ       R0, R0, R4, LSL #31 
FUNC_END VOU_DRV_IsChipSupportBorder


FUNC_BEGIN VO_DRV_IsSupportCrop
    /*000192dc*/ MOV         R0, #1 
    /*000192e0*/ BX          LR 
FUNC_END VO_DRV_IsSupportCrop


FUNC_BEGIN VOU_DRV_SetSrcCropXY
    VOU_DRV_SetSrcCropXY_x192e4:
    /*000192e4*/ B           VOU_DRV_SetSrcCropXY_x192e4 @ HAL_LAYER_SetLayerSrcCropXY [R_ARM_JUMP24: .text+0x1e318] 
FUNC_END VOU_DRV_SetSrcCropXY


FUNC_BEGIN VOU_DRV_SetVideoLayerCrop
    /*000192e8*/ LDR         IP, [PC, #16]               @ 0x0000000000019300 
    /*000192ec*/ MOV         R3, #188                    @ 0xbc 
    /*000192f0*/ MOV         R2, #20 
    /*000192f4*/ MLA         R0, R3, R0, IP 
    /*000192f8*/ ADD         R0, R0, #168                @ 0xa8 
    VOU_DRV_SetVideoLayerCrop_x192fc:
    /*000192fc*/ B           VOU_DRV_SetVideoLayerCrop_x192fc@ osal_memcpy [R_ARM_JUMP24: +0x0] 
    /*00019300*/ LDRDEQ      R5, [R0], -R8 
FUNC_END VOU_DRV_SetVideoLayerCrop


FUNC_BEGIN VOU_DRV_CheckBorderParam
    /*00019304*/ PUSH        {R4, R5, R6, LR} 
    /*00019308*/ MOV         R5, R0 
    /*0001930c*/ LDR         R3, [R2] 
    /*00019310*/ SUB         SP, SP, #24 
    /*00019314*/ MOV         R6, R1 
    /*00019318*/ CMP         R3, #1 
    /*0001931c*/ BLS         VOU_DRV_CheckBorderParam_x1935c
    /*00019320*/ MOVW        R2, #0                      @ .LC78 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8788] 
    /*00019324*/ MOVT        R2, #0                      @ .LC78 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8788] 
    /*00019328*/ STR         R3, [SP, #12] 
    /*0001932c*/ MOVW        R3, #4361                   @ 0x1109 
    /*00019330*/ STR         R1, [SP, #8] 
    /*00019334*/ STR         R0, [SP, #4] 
    VOU_DRV_CheckBorderParam_x19338:
    /*00019338*/ STR         R3, [SP] 
    /*0001933c*/ MOV         R1, #15 
    /*00019340*/ LDR         R3, [PC, #208]              @ 0x0000000000019418 
    /*00019344*/ MOV         R0, #3 
    /*00019348*/ BL          0x0000000000019348          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001934c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00019350*/ MOVT        R0, #40975                  @ 0xa00f 
    VOU_DRV_CheckBorderParam_x19354:
    /*00019354*/ ADD         SP, SP, #24 
    /*00019358*/ POP         {R4, R5, R6, PC} 
    VOU_DRV_CheckBorderParam_x1935c:
    /*0001935c*/ LDR         R3, [R2, #4] 
    /*00019360*/ MOV         R4, R2 
    /*00019364*/ SUB         R2, R3, #2 
    /*00019368*/ CMP         R2, #6 
    /*0001936c*/ BHI         VOU_DRV_CheckBorderParam_x193e4
    /*00019370*/ TST         R3, #1 
    /*00019374*/ BNE         VOU_DRV_CheckBorderParam_x193e4
    /*00019378*/ LDR         R1, [R4, #8] 
    /*0001937c*/ LDR         R0, [R4, #12] 
    /*00019380*/ CMP         R3, R1 
    /*00019384*/ LDR         R2, [R4, #16] 
    /*00019388*/ BEQ         VOU_DRV_CheckBorderParam_x19400
    VOU_DRV_CheckBorderParam_x1938c:
    /*0001938c*/ STR         R3, [SP, #16] 
    /*00019390*/ MOVW        R3, #4378                   @ 0x111a 
    /*00019394*/ STR         R2, [SP, #12] 
    /*00019398*/ MOVW        R2, #0                      @ .LC80 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8830] 
    /*0001939c*/ STR         R0, [SP, #8] 
    /*000193a0*/ MOVT        R2, #0                      @ .LC80 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8830] 
    /*000193a4*/ STR         R1, [SP, #4] 
    /*000193a8*/ MOV         R0, #6 
    /*000193ac*/ STR         R3, [SP] 
    /*000193b0*/ MOV         R1, #15 
    /*000193b4*/ LDR         R3, [PC, #92]               @ 0x0000000000019418 
    /*000193b8*/ BL          0x00000000000193B8          @ HI_LOG [R_ARM_CALL: +0x0] 
    VOU_DRV_CheckBorderParam_x193bc:
    /*000193bc*/ LDR         R3, [R4, #20] 
    /*000193c0*/ ANDS        R0, R3, #-16777216          @ 0xff000000 
    /*000193c4*/ BEQ         VOU_DRV_CheckBorderParam_x19354
    /*000193c8*/ STR         R3, [SP, #12] 
    /*000193cc*/ MOVW        R2, #0                      @ .LC81 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x88d8] 
    /*000193d0*/ MOVW        R3, #4384                   @ 0x1120 
    /*000193d4*/ STR         R6, [SP, #8] 
    /*000193d8*/ STR         R5, [SP, #4] 
    /*000193dc*/ MOVT        R2, #0                      @ .LC81 [R_ARM_MOVT_ABS: .rodata.str1.4+0x88d8] 
    /*000193e0*/ B           VOU_DRV_CheckBorderParam_x19338
    VOU_DRV_CheckBorderParam_x193e4:
    /*000193e4*/ STR         R3, [SP, #12] 
    /*000193e8*/ MOVW        R2, #0                      @ .LC79 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x87d4] 
    /*000193ec*/ MOVW        R3, #4368                   @ 0x1110 
    /*000193f0*/ STR         R6, [SP, #8] 
    /*000193f4*/ STR         R5, [SP, #4] 
    /*000193f8*/ MOVT        R2, #0                      @ .LC79 [R_ARM_MOVT_ABS: .rodata.str1.4+0x87d4] 
    /*000193fc*/ B           VOU_DRV_CheckBorderParam_x19338
    VOU_DRV_CheckBorderParam_x19400:
    /*00019400*/ CMP         R3, R0 
    /*00019404*/ BNE         VOU_DRV_CheckBorderParam_x1938c
    /*00019408*/ CMP         R3, R2 
    /*0001940c*/ BEQ         VOU_DRV_CheckBorderParam_x193bc
    /*00019410*/ MOV         R0, R3 
    /*00019414*/ B           VOU_DRV_CheckBorderParam_x1938c
    /*00019418*/ ANDEQ       R0, R0, R0, LSR #31 
FUNC_END VOU_DRV_CheckBorderParam


FUNC_BEGIN VO_DRV_GetPartitionMode
    /*0001941c*/ MOV         R0, #0 
    /*00019420*/ BX          LR 
FUNC_END VO_DRV_GetPartitionMode


FUNC_BEGIN VO_DRV_GetDefDispBlkNum
    /*00019424*/ MOV         R0, #0 
    /*00019428*/ BX          LR 
FUNC_END VO_DRV_GetDefDispBlkNum


FUNC_BEGIN VOU_DRV_IsChipSupportVgsBypassMode
    /*0001942c*/ MOV         R0, #1 
    /*00019430*/ BX          LR 
FUNC_END VOU_DRV_IsChipSupportVgsBypassMode


FUNC_BEGIN VOU_DRV_IsLayerCompressModeSupport
    /*00019434*/ CMP         R1, #0 
    /*00019438*/ BEQ         VOU_DRV_IsLayerCompressModeSupport_x19498
    /*0001943c*/ CMP         R1, #1 
    /*00019440*/ CMPEQ       R0, #0 
    /*00019444*/ PUSH        {R4, LR} 
    /*00019448*/ MOVEQ       R0, #1 
    /*0001944c*/ SUB         SP, SP, #16 
    /*00019450*/ MOVEQ       R4, #1 
    /*00019454*/ MOVNE       R4, #0 
    /*00019458*/ BNE         VOU_DRV_IsLayerCompressModeSupport_x19464
    /*0001945c*/ ADD         SP, SP, #16 
    /*00019460*/ POP         {R4, PC} 
    VOU_DRV_IsLayerCompressModeSupport_x19464:
    /*00019464*/ STR         R1, [SP, #8] 
    /*00019468*/ MOVW        R3, #4418                   @ 0x1142 
    /*0001946c*/ STR         R0, [SP, #4] 
    /*00019470*/ MOV         R1, #15 
    /*00019474*/ STR         R3, [SP] 
    /*00019478*/ MOVW        R2, #0                      @ .LC82 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8938] 
    /*0001947c*/ LDR         R3, [PC, #28]               @ 0x00000000000194a0 
    /*00019480*/ MOVT        R2, #0                      @ .LC82 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8938] 
    /*00019484*/ MOV         R0, #3 
    /*00019488*/ BL          0x0000000000019488          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001948c*/ MOV         R0, R4 
    /*00019490*/ ADD         SP, SP, #16 
    /*00019494*/ POP         {R4, PC} 
    VOU_DRV_IsLayerCompressModeSupport_x19498:
    /*00019498*/ MOV         R0, #1 
    /*0001949c*/ BX          LR 
    /*000194a0*/ @           <UNDEFINED> instruction: 0x00000fbc 
FUNC_END VOU_DRV_IsLayerCompressModeSupport


FUNC_BEGIN VOU_DRV_IsSolid
    /*000194a4*/ MOV         R0, #0 
    /*000194a8*/ BX          LR 
FUNC_END VOU_DRV_IsSolid


FUNC_BEGIN VOU_DRV_SetCoverParamForBorder
    /*000194ac*/ LDR         R3, [R1] 
    /*000194b0*/ CMP         R3, #0 
    /*000194b4*/ BXEQ        LR 
    /*000194b8*/ MOV         R3, #1 
    /*000194bc*/ MOV         IP, #0 
    /*000194c0*/ STR         R3, [R0] 
    /*000194c4*/ STMIB       R0, {R3, IP} 
    /*000194c8*/ LDR         R3, [R1, #4] 
    /*000194cc*/ STR         R3, [R0, #12] 
    /*000194d0*/ LDR         R3, [R1, #20] 
    /*000194d4*/ STR         R3, [R0, #48]               @ 0x30 
    /*000194d8*/ LDR         R3, [R2] 
    /*000194dc*/ STR         R3, [R0, #16] 
    /*000194e0*/ LDR         R3, [R2, #4] 
    /*000194e4*/ STR         R3, [R0, #20] 
    /*000194e8*/ LDR         R1, [R2] 
    /*000194ec*/ LDR         R3, [R2, #8] 
    /*000194f0*/ ADD         R3, R3, R1 
    /*000194f4*/ STR         R3, [R0, #24] 
    /*000194f8*/ LDR         R3, [R2, #4] 
    /*000194fc*/ STR         R3, [R0, #28] 
    /*00019500*/ LDR         R1, [R2] 
    /*00019504*/ LDR         R3, [R2, #8] 
    /*00019508*/ ADD         R3, R3, R1 
    /*0001950c*/ STR         R3, [R0, #32] 
    /*00019510*/ LDR         R3, [R2, #12] 
    /*00019514*/ LDR         R1, [R2, #4] 
    /*00019518*/ ADD         R3, R3, R1 
    /*0001951c*/ STR         R3, [R0, #36]               @ 0x24 
    /*00019520*/ LDR         R3, [R2] 
    /*00019524*/ STR         R3, [R0, #40]               @ 0x28 
    /*00019528*/ LDR         R3, [R2, #12] 
    /*0001952c*/ LDR         R2, [R2, #4] 
    /*00019530*/ ADD         R3, R3, R2 
    /*00019534*/ STR         R3, [R0, #44]               @ 0x2c 
    /*00019538*/ BX          LR 
FUNC_END VOU_DRV_SetCoverParamForBorder


FUNC_BEGIN VOU_DRV_CalcAspectRatio
    /*0001953c*/ MOV         R0, #0 
    /*00019540*/ BX          LR 
FUNC_END VOU_DRV_CalcAspectRatio


FUNC_BEGIN VOU_DRV_IsVideoOfOneArea
    /*00019544*/ MOV         R0, #1 
    /*00019548*/ BX          LR 
FUNC_END VOU_DRV_IsVideoOfOneArea


FUNC_BEGIN VO_DRV_IsSingleSupportAspectRatio
    /*0001954c*/ MOV         R0, #0 
    /*00019550*/ BX          LR 
FUNC_END VO_DRV_IsSingleSupportAspectRatio


FUNC_BEGIN VOU_DRV_CheckLayerParam
    /*00019554*/ PUSH        {R4, R5, R6, LR} 
    /*00019558*/ SUB         SP, SP, #24 
    /*0001955c*/ LDR         R3, [R1] 
    /*00019560*/ BICS        R2, R3, #2 
    /*00019564*/ BNE         VOU_DRV_CheckLayerParam_x196b0
    /*00019568*/ CMP         R3, #0 
    /*0001956c*/ BEQ         VOU_DRV_CheckLayerParam_x1960c
    /*00019570*/ MOVW        R2, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x5480] 
    /*00019574*/ MOVT        R2, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x5480] 
    /*00019578*/ MOV         R3, #188                    @ 0xbc 
    /*0001957c*/ LDR         R4, [R1, #16] 
    /*00019580*/ MLA         R3, R3, R0, R2 
    /*00019584*/ LDR         LR, [R1, #20] 
    /*00019588*/ LDR         IP, [R3, #2184]             @ 0x888 
    /*0001958c*/ LDR         R2, [R3, #2188]             @ 0x88c 
    /*00019590*/ CMP         R4, IP 
    /*00019594*/ BNE         VOU_DRV_CheckLayerParam_x1965c
    /*00019598*/ CMP         LR, R2 
    /*0001959c*/ BNE         VOU_DRV_CheckLayerParam_x1965c
    /*000195a0*/ LDR         IP, [R1, #8] 
    /*000195a4*/ LDR         LR, [R1, #12] 
    /*000195a8*/ CMP         IP, #0 
    /*000195ac*/ BLT         VOU_DRV_CheckLayerParam_x19618
    /*000195b0*/ CMP         LR, #0 
    /*000195b4*/ BLT         VOU_DRV_CheckLayerParam_x19618
    /*000195b8*/ ORR         R5, IP, LR 
    /*000195bc*/ TST         R5, #1 
    /*000195c0*/ BNE         VOU_DRV_CheckLayerParam_x19618
    /*000195c4*/ ORR         R5, R4, R2 
    /*000195c8*/ TST         R5, #1 
    /*000195cc*/ BNE         VOU_DRV_CheckLayerParam_x19618
    /*000195d0*/ LDR         R5, [R3, #2176]             @ 0x880 
    /*000195d4*/ CMP         IP, R5 
    /*000195d8*/ BHI         VOU_DRV_CheckLayerParam_x19618
    /*000195dc*/ LDR         R3, [R3, #2180]             @ 0x884 
    /*000195e0*/ CMP         LR, R3 
    /*000195e4*/ BHI         VOU_DRV_CheckLayerParam_x19618
    /*000195e8*/ ADD         R6, R4, IP 
    /*000195ec*/ CMP         R5, R6 
    /*000195f0*/ BCC         VOU_DRV_CheckLayerParam_x19618
    /*000195f4*/ ADD         R5, R2, LR 
    /*000195f8*/ CMP         R3, R5 
    /*000195fc*/ BCC         VOU_DRV_CheckLayerParam_x19618
    /*00019600*/ LDR         R3, [R1, #4] 
    /*00019604*/ CMP         R3, #16777216               @ 0x1000000 
    /*00019608*/ BCS         VOU_DRV_CheckLayerParam_x1967c
    VOU_DRV_CheckLayerParam_x1960c:
    /*0001960c*/ MOV         R0, #0 
    VOU_DRV_CheckLayerParam_x19610:
    /*00019610*/ ADD         SP, SP, #24 
    /*00019614*/ POP         {R4, R5, R6, PC} 
    VOU_DRV_CheckLayerParam_x19618:
    /*00019618*/ STR         R2, [SP, #20] 
    /*0001961c*/ MOVW        R2, #0                      @ .LC85 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8a50] 
    /*00019620*/ MOVT        R2, #0                      @ .LC85 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8a50] 
    /*00019624*/ MOVW        R3, #4511                   @ 0x119f 
    /*00019628*/ STR         R4, [SP, #16] 
    /*0001962c*/ STR         LR, [SP, #12] 
    /*00019630*/ STR         IP, [SP, #8] 
    VOU_DRV_CheckLayerParam_x19634:
    /*00019634*/ STR         R0, [SP, #4] 
    /*00019638*/ MOV         R1, #15 
    /*0001963c*/ STR         R3, [SP] 
    /*00019640*/ MOV         R0, #3 
    /*00019644*/ LDR         R3, [PC, #128]              @ 0x00000000000196cc 
    /*00019648*/ BL          0x0000000000019648          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001964c*/ MOVW        R0, #32771                  @ 0x8003 
    /*00019650*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00019654*/ ADD         SP, SP, #24 
    /*00019658*/ POP         {R4, R5, R6, PC} 
    VOU_DRV_CheckLayerParam_x1965c:
    /*0001965c*/ STR         R2, [SP, #20] 
    /*00019660*/ MOVW        R3, #4494                   @ 0x118e 
    /*00019664*/ MOVW        R2, #0                      @ .LC84 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x89d4] 
    /*00019668*/ STR         IP, [SP, #16] 
    /*0001966c*/ STR         LR, [SP, #12] 
    /*00019670*/ MOVT        R2, #0                      @ .LC84 [R_ARM_MOVT_ABS: .rodata.str1.4+0x89d4] 
    /*00019674*/ STR         R4, [SP, #8] 
    /*00019678*/ B           VOU_DRV_CheckLayerParam_x19634
    VOU_DRV_CheckLayerParam_x1967c:
    /*0001967c*/ MOVW        R2, #0                      @ .LC86 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8aa8] 
    /*00019680*/ MOVT        R2, #0                      @ .LC86 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8aa8] 
    /*00019684*/ STR         R3, [SP, #8] 
    /*00019688*/ MOVW        R3, #4518                   @ 0x11a6 
    /*0001968c*/ STR         R0, [SP, #4] 
    /*00019690*/ STR         R3, [SP] 
    VOU_DRV_CheckLayerParam_x19694:
    /*00019694*/ LDR         R3, [PC, #48]               @ 0x00000000000196cc 
    /*00019698*/ MOV         R1, #15 
    /*0001969c*/ MOV         R0, #3 
    /*000196a0*/ BL          0x00000000000196A0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*000196a4*/ MOVW        R0, #32771                  @ 0x8003 
    /*000196a8*/ MOVT        R0, #40975                  @ 0xa00f 
    /*000196ac*/ B           VOU_DRV_CheckLayerParam_x19610
    VOU_DRV_CheckLayerParam_x196b0:
    /*000196b0*/ STR         R3, [SP, #8] 
    /*000196b4*/ MOVW        R2, #0                      @ .LC83 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8988] 
    /*000196b8*/ MOV         R3, #4480                   @ 0x1180 
    /*000196bc*/ STR         R0, [SP, #4] 
    /*000196c0*/ STR         R3, [SP] 
    /*000196c4*/ MOVT        R2, #0                      @ .LC83 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8988] 
    /*000196c8*/ B           VOU_DRV_CheckLayerParam_x19694
    /*000196cc*/ ANDEQ       R0, R0, R0, ROR #31 
FUNC_END VOU_DRV_CheckLayerParam


FUNC_BEGIN VOU_DRV_CheckBufLen
    /*000196d0*/ CMP         R0, R2 
    /*000196d4*/ MOVLS       R2, #0 
    /*000196d8*/ MOVHI       R2, #1 
    /*000196dc*/ CMP         R0, R1 
    /*000196e0*/ MOVCS       R1, R2 
    /*000196e4*/ ORRCC       R1, R2, #1 
    /*000196e8*/ CMP         R0, #0 
    /*000196ec*/ MOVEQ       R1, #0 
    /*000196f0*/ ANDNE       R1, R1, #1 
    /*000196f4*/ CMP         R1, #0 
    /*000196f8*/ BNE         VOU_DRV_CheckBufLen_x19704
    /*000196fc*/ MOV         R0, R1 
    /*00019700*/ BX          LR 
    VOU_DRV_CheckBufLen_x19704:
    /*00019704*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*00019708*/ SUB         SP, SP, #12 
    /*0001970c*/ MOVW        R3, #4534                   @ 0x11b6 
    /*00019710*/ MOV         R1, #15 
    /*00019714*/ STR         R0, [SP, #4] 
    /*00019718*/ MOVW        R2, #0                      @ .LC87 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8af8] 
    /*0001971c*/ STR         R3, [SP] 
    /*00019720*/ MOVT        R2, #0                      @ .LC87 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8af8] 
    /*00019724*/ LDR         R3, [PC, #20]               @ 0x0000000000019740 
    /*00019728*/ MOV         R0, #3 
    /*0001972c*/ BL          0x000000000001972C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*00019730*/ MOVW        R0, #32771                  @ 0x8003 
    /*00019734*/ MOVT        R0, #40975                  @ 0xa00f 
    /*00019738*/ ADD         SP, SP, #12 
    /*0001973c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    /*00019740*/ STRDEQ      R0, [R0], -R8 
FUNC_END VOU_DRV_CheckBufLen


FUNC_BEGIN VOU_DRV_GetRgnCapacity
    /*00019744*/ PUSH        {R4, R5, R6, R7, R8, LR} 
    /*00019748*/ SUBS        R4, R1, #0 
    /*0001974c*/ MOV         R5, R0 
    /*00019750*/ BEQ         VOU_DRV_GetRgnCapacity_x19a08
    VOU_DRV_GetRgnCapacity_x19754:
    /*00019754*/ MOV         R2, #328                    @ 0x148 
    /*00019758*/ MOV         R1, #0 
    /*0001975c*/ MOV         R0, R4 
    /*00019760*/ BL          0x0000000000019760          @ osal_memset [R_ARM_CALL: +0x0] 
    /*00019764*/ CMP         R5, #3 
    /*00019768*/ MOVW        R2, #0                      @ VO_DRV_CheckRgnAttr [R_ARM_MOVW_ABS_NC: .text+0x153b0] 
    /*0001976c*/ MOV         R3, #0 
    /*00019770*/ MOVT        R2, #0                      @ VO_DRV_CheckRgnAttr [R_ARM_MOVT_ABS: .text+0x153b0] 
    /*00019774*/ STR         R3, [R4, #320]              @ 0x140 
    /*00019778*/ STR         R2, [R4, #324]              @ 0x144 
    /*0001977c*/ BEQ         VOU_DRV_GetRgnCapacity_x198e4
    /*00019780*/ CMP         R5, #2 
    /*00019784*/ POPNE       {R4, R5, R6, R7, R8, PC} 
    /*00019788*/ MOV         R2, #1 
    /*0001978c*/ MOVW        R0, #8190                   @ 0x1ffe 
    /*00019790*/ MOV         R6, #8192                   @ 0x2000 
    /*00019794*/ MOV         LR, #8 
    /*00019798*/ STR         R5, [R4, #40]               @ 0x28 
    /*0001979c*/ MOV         IP, #3 
    /*000197a0*/ STR         R5, [R4, #44]               @ 0x2c 
    /*000197a4*/ MOV         R1, #57344                  @ 0xe000 
    /*000197a8*/ STR         R5, [R4, #72]               @ 0x48 
    /*000197ac*/ MOVT        R1, #65535                  @ 0xffff 
    /*000197b0*/ STR         R5, [R4, #76]               @ 0x4c 
    /*000197b4*/ MOV         R7, #67108864               @ 0x4000000 
    /*000197b8*/ STR         R5, [R4, #56]               @ 0x38 
    /*000197bc*/ STR         R5, [R4, #60]               @ 0x3c 
    /*000197c0*/ STR         R5, [R4, #92]               @ 0x5c 
    /*000197c4*/ STR         R5, [R4, #116]              @ 0x74 
    /*000197c8*/ STR         R5, [R4, #120]              @ 0x78 
    /*000197cc*/ MOV         R5, #9 
    /*000197d0*/ STR         R1, [R4, #24] 
    /*000197d4*/ STR         R1, [R4, #28] 
    /*000197d8*/ STR         R1, [R4, #100]              @ 0x64 
    /*000197dc*/ STR         R1, [R4, #104]              @ 0x68 
    /*000197e0*/ MOV         R1, #255                    @ 0xff 
    /*000197e4*/ STR         R0, [R4, #32] 
    /*000197e8*/ STR         R0, [R4, #36]               @ 0x24 
    /*000197ec*/ STR         R0, [R4, #108]              @ 0x6c 
    /*000197f0*/ STR         R0, [R4, #112]              @ 0x70 
    /*000197f4*/ MOV         R0, #51                     @ 0x33 
    /*000197f8*/ STR         R6, [R4, #64]               @ 0x40 
    /*000197fc*/ STR         R6, [R4, #68]               @ 0x44 
    /*00019800*/ MOV         R6, #11 
    /*00019804*/ STR         LR, [R4, #96]               @ 0x60 
    /*00019808*/ STR         R3, [R4] 
    /*0001980c*/ STR         R3, [R4, #8] 
    /*00019810*/ STR         R3, [R4, #12] 
    /*00019814*/ STR         R3, [R4, #16] 
    /*00019818*/ STR         R3, [R4, #48]               @ 0x30 
    /*0001981c*/ STR         R3, [R4, #84]               @ 0x54 
    /*00019820*/ STR         R3, [R4, #124]              @ 0x7c 
    /*00019824*/ STR         R2, [R4, #4] 
    /*00019828*/ STR         R2, [R4, #20] 
    /*0001982c*/ STR         R2, [R4, #52]               @ 0x34 
    /*00019830*/ STR         R2, [R4, #88]               @ 0x58 
    /*00019834*/ STR         R7, [R4, #80]               @ 0x50 
    /*00019838*/ STR         R3, [R4, #128]              @ 0x80 
    /*0001983c*/ STR         LR, [R4, #140]              @ 0x8c 
    /*00019840*/ MOV         LR, #64                     @ 0x40 
    /*00019844*/ STR         R5, [R4, #144]              @ 0x90 
    /*00019848*/ MVN         R5, #50                     @ 0x32 
    /*0001984c*/ STR         R2, [R4, #216]              @ 0xd8 
    /*00019850*/ STR         R2, [R4, #224]              @ 0xe0 
    /*00019854*/ STR         R2, [R4, #232]              @ 0xe8 
    /*00019858*/ STR         R2, [R4, #240]              @ 0xf0 
    /*0001985c*/ STR         R3, [R4, #132]              @ 0x84 
    /*00019860*/ STR         R3, [R4, #156]              @ 0x9c 
    /*00019864*/ STR         R3, [R4, #160]              @ 0xa0 
    /*00019868*/ STR         R3, [R4, #164]              @ 0xa4 
    /*0001986c*/ STR         R3, [R4, #172]              @ 0xac 
    /*00019870*/ STR         R3, [R4, #176]              @ 0xb0 
    /*00019874*/ STR         R3, [R4, #180]              @ 0xb4 
    /*00019878*/ STR         R3, [R4, #184]              @ 0xb8 
    /*0001987c*/ STR         R3, [R4, #192]              @ 0xc0 
    /*00019880*/ STR         R3, [R4, #196]              @ 0xc4 
    /*00019884*/ STR         R3, [R4, #200]              @ 0xc8 
    /*00019888*/ STR         R3, [R4, #204]              @ 0xcc 
    /*0001988c*/ STR         R3, [R4, #212]              @ 0xd4 
    /*00019890*/ STR         R3, [R4, #220]              @ 0xdc 
    /*00019894*/ STR         R3, [R4, #236]              @ 0xec 
    /*00019898*/ STR         R3, [R4, #244]              @ 0xf4 
    /*0001989c*/ STR         R3, [R4, #248]              @ 0xf8 
    /*000198a0*/ STR         R3, [R4, #252]              @ 0xfc 
    /*000198a4*/ STR         R3, [R4, #260]              @ 0x104 
    /*000198a8*/ STR         IP, [R4, #136]              @ 0x88 
    /*000198ac*/ STR         R6, [R4, #148]              @ 0x94 
    /*000198b0*/ STR         R1, [R4, #168]              @ 0xa8 
    /*000198b4*/ STR         R1, [R4, #188]              @ 0xbc 
    /*000198b8*/ STR         R1, [R4, #208]              @ 0xd0 
    /*000198bc*/ STR         R0, [R4, #264]              @ 0x108 
    /*000198c0*/ STR         R0, [R4, #272]              @ 0x110 
    /*000198c4*/ STR         R5, [R4, #268]              @ 0x10c 
    /*000198c8*/ STR         IP, [R4, #280]              @ 0x118 
    /*000198cc*/ STR         R2, [R4, #308]              @ 0x134 
    /*000198d0*/ STR         R2, [R4, #316]              @ 0x13c 
    /*000198d4*/ STR         R2, [R4, #276]              @ 0x114 
    /*000198d8*/ STR         R3, [R4, #304]              @ 0x130 
    /*000198dc*/ STR         LR, [R4, #312]              @ 0x138 
    /*000198e0*/ POP         {R4, R5, R6, R7, R8, PC} 
    VOU_DRV_GetRgnCapacity_x198e4:
    /*000198e4*/ MOV         R2, #1 
    /*000198e8*/ MOV         R1, #2 
    /*000198ec*/ MOVW        IP, #8190                   @ 0x1ffe 
    /*000198f0*/ MOV         R0, #8192                   @ 0x2000 
    /*000198f4*/ STR         R5, [R4, #136]              @ 0x88 
    /*000198f8*/ MOV         LR, #8 
    /*000198fc*/ STR         R1, [R4, #40]               @ 0x28 
    /*00019900*/ MOV         R7, #67108864               @ 0x4000000 
    /*00019904*/ STR         R1, [R4, #44]               @ 0x2c 
    /*00019908*/ MOV         R6, #9 
    /*0001990c*/ STR         R1, [R4, #72]               @ 0x48 
    /*00019910*/ MOV         R5, #11 
    /*00019914*/ STR         R1, [R4, #76]               @ 0x4c 
    /*00019918*/ STR         R1, [R4, #56]               @ 0x38 
    /*0001991c*/ STR         R1, [R4, #60]               @ 0x3c 
    /*00019920*/ MOV         R1, #255                    @ 0xff 
    /*00019924*/ STR         IP, [R4, #32] 
    /*00019928*/ STR         IP, [R4, #36]               @ 0x24 
    /*0001992c*/ MOV         IP, #64                     @ 0x40 
    /*00019930*/ STR         R0, [R4, #64]               @ 0x40 
    /*00019934*/ STR         R0, [R4, #68]               @ 0x44 
    /*00019938*/ MOV         R0, #51                     @ 0x33 
    /*0001993c*/ STR         LR, [R4, #140]              @ 0x8c 
    /*00019940*/ MVN         LR, #50                     @ 0x32 
    /*00019944*/ STR         R3, [R4] 
    /*00019948*/ STR         R3, [R4, #8] 
    /*0001994c*/ STR         R3, [R4, #12] 
    /*00019950*/ STR         R3, [R4, #16] 
    /*00019954*/ STR         R3, [R4, #24] 
    /*00019958*/ STR         R3, [R4, #28] 
    /*0001995c*/ STR         R3, [R4, #52]               @ 0x34 
    /*00019960*/ STR         R3, [R4, #132]              @ 0x84 
    /*00019964*/ STR         R3, [R4, #160]              @ 0xa0 
    /*00019968*/ STR         R2, [R4, #4] 
    /*0001996c*/ STR         R2, [R4, #20] 
    /*00019970*/ STR         R2, [R4, #48]               @ 0x30 
    /*00019974*/ STR         R2, [R4, #124]              @ 0x7c 
    /*00019978*/ STR         R2, [R4, #128]              @ 0x80 
    /*0001997c*/ STR         R2, [R4, #156]              @ 0x9c 
    /*00019980*/ STR         R2, [R4, #164]              @ 0xa4 
    /*00019984*/ STR         R7, [R4, #80]               @ 0x50 
    /*00019988*/ STR         R6, [R4, #144]              @ 0x90 
    /*0001998c*/ STR         R5, [R4, #148]              @ 0x94 
    /*00019990*/ STR         R1, [R4, #168]              @ 0xa8 
    /*00019994*/ STR         R3, [R4, #172]              @ 0xac 
    /*00019998*/ STR         R2, [R4, #176]              @ 0xb0 
    /*0001999c*/ STR         R2, [R4, #184]              @ 0xb8 
    /*000199a0*/ STR         R1, [R4, #188]              @ 0xbc 
    /*000199a4*/ STR         R2, [R4, #204]              @ 0xcc 
    /*000199a8*/ STR         R1, [R4, #208]              @ 0xd0 
    /*000199ac*/ STR         R2, [R4, #216]              @ 0xd8 
    /*000199b0*/ STR         R2, [R4, #220]              @ 0xdc 
    /*000199b4*/ STR         R2, [R4, #224]              @ 0xe0 
    /*000199b8*/ STR         R2, [R4, #232]              @ 0xe8 
    /*000199bc*/ STR         R2, [R4, #240]              @ 0xf0 
    /*000199c0*/ STR         R2, [R4, #252]              @ 0xfc 
    /*000199c4*/ STR         R2, [R4, #304]              @ 0x130 
    /*000199c8*/ STR         R2, [R4, #308]              @ 0x134 
    /*000199cc*/ STR         R2, [R4, #316]              @ 0x13c 
    /*000199d0*/ STR         R3, [R4, #180]              @ 0xb4 
    /*000199d4*/ STR         R3, [R4, #192]              @ 0xc0 
    /*000199d8*/ STR         R3, [R4, #196]              @ 0xc4 
    /*000199dc*/ STR         R3, [R4, #200]              @ 0xc8 
    /*000199e0*/ STR         R3, [R4, #212]              @ 0xd4 
    /*000199e4*/ STR         R3, [R4, #236]              @ 0xec 
    /*000199e8*/ STR         R3, [R4, #244]              @ 0xf4 
    /*000199ec*/ STR         R3, [R4, #248]              @ 0xf8 
    /*000199f0*/ STR         R3, [R4, #260]              @ 0x104 
    /*000199f4*/ STR         R0, [R4, #264]              @ 0x108 
    /*000199f8*/ STR         R0, [R4, #272]              @ 0x110 
    /*000199fc*/ STR         LR, [R4, #268]              @ 0x10c 
    /*00019a00*/ STR         IP, [R4, #312]              @ 0x138 
    /*00019a04*/ POP         {R4, R5, R6, R7, R8, PC} 
    VOU_DRV_GetRgnCapacity_x19a08:
    /*00019a08*/ MOVW        R3, #0                      @ .LC88 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8b3c] 
    /*00019a0c*/ MOVW        R0, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x74bc] 
    /*00019a10*/ MOVT        R3, #0                      @ .LC88 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8b3c] 
    /*00019a14*/ MOVT        R0, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x74bc] 
    /*00019a18*/ MOVW        R2, #4583                   @ 0x11e7 
    /*00019a1c*/ LDR         R1, [PC, #4]                @ 0x0000000000019a28 
    /*00019a20*/ BL          0x0000000000019A20          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00019a24*/ B           VOU_DRV_GetRgnCapacity_x19754
    /*00019a28*/ ANDEQ       R1, R0, IP 
FUNC_END VOU_DRV_GetRgnCapacity


FUNC_BEGIN VOU_DRV_SetDevDitherMode
    /*00019a2c*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00019a30*/ SUB         SP, SP, #100                @ 0x64 
    /*00019a34*/ LDR         R3, [R2] 
    /*00019a38*/ MOV         R4, R0 
    /*00019a3c*/ LDR         R5, [R2, #104]              @ 0x68 
    /*00019a40*/ MOV         R6, R1 
    /*00019a44*/ STR         R3, [SP, #4] 
    /*00019a48*/ CMP         R5, #1 
    /*00019a4c*/ LDR         R3, [R2, #8] 
    /*00019a50*/ STR         R3, [SP, #8] 
    /*00019a54*/ LDR         R3, [R2, #12] 
    /*00019a58*/ STR         R3, [SP, #12] 
    /*00019a5c*/ LDR         R3, [R2, #24] 
    /*00019a60*/ STR         R3, [SP, #16] 
    /*00019a64*/ LDR         R3, [R2, #28] 
    /*00019a68*/ STR         R3, [SP, #20] 
    /*00019a6c*/ BEQ         VOU_DRV_SetDevDitherMode_x19ab8
    /*00019a70*/ CMP         R5, #2 
    /*00019a74*/ BEQ         VOU_DRV_SetDevDitherMode_x19bf4
    /*00019a78*/ CMP         R5, #3 
    /*00019a7c*/ BEQ         VOU_DRV_SetDevDitherMode_x19c08
    /*00019a80*/ CMP         R5, #4 
    /*00019a84*/ BEQ         VOU_DRV_SetDevDitherMode_x19c40
    /*00019a88*/ CMP         R5, #5 
    /*00019a8c*/ BEQ         VOU_DRV_SetDevDitherMode_x19c18
    /*00019a90*/ CMP         R5, #6 
    /*00019a94*/ CMPNE       R5, #0 
    /*00019a98*/ MOVEQ       R5, #1 
    /*00019a9c*/ MOVNE       R5, #0 
    /*00019aa0*/ BNE         VOU_DRV_SetDevDitherMode_x19c6c
    /*00019aa4*/ MOV         SL, #1 
    /*00019aa8*/ MOV         R3, #0 
    /*00019aac*/ MOV         R5, SL 
    /*00019ab0*/ STR         R3, [SP, #28] 
    /*00019ab4*/ B           VOU_DRV_SetDevDitherMode_x19ac8
    VOU_DRV_SetDevDitherMode_x19ab8:
    /*00019ab8*/ MOV         SL, #0 
    /*00019abc*/ MOV         R5, #5 
    /*00019ac0*/ MOV         R3, #4 
    /*00019ac4*/ STR         R3, [SP, #28] 
    VOU_DRV_SetDevDitherMode_x19ac8:
    /*00019ac8*/ CMP         R6, #0 
    /*00019acc*/ BEQ         VOU_DRV_SetDevDitherMode_x19bc8
    /*00019ad0*/ CMP         R6, #2 
    /*00019ad4*/ BEQ         VOU_DRV_SetDevDitherMode_x19c54
    /*00019ad8*/ CMP         R6, #3 
    /*00019adc*/ MOV         FP, #0 
    /*00019ae0*/ BEQ         VOU_DRV_SetDevDitherMode_x19c28
    VOU_DRV_SetDevDitherMode_x19ae4:
    /*00019ae4*/ MOV         R6, FP 
    /*00019ae8*/ MOV         R7, FP 
    /*00019aec*/ MOV         R8, FP 
    /*00019af0*/ MOV         R9, FP 
    /*00019af4*/ STR         FP, [SP, #24] 
    VOU_DRV_SetDevDitherMode_x19af8:
    /*00019af8*/ CMP         R4, #0 
    /*00019afc*/ BEQ         VOU_DRV_SetDevDitherMode_x19b0c
    /*00019b00*/ MOV         R0, R4 
    /*00019b04*/ MOV         R4, #4 
    /*00019b08*/ BL          0x000000000001548C 
    VOU_DRV_SetDevDitherMode_x19b0c:
    /*00019b0c*/ LDR         R1, [SP, #12] 
    /*00019b10*/ MOV         R0, R4 
    /*00019b14*/ BL          0x0000000000019B14          @ HAL_DISP_SetDitherRoundUnlim [R_ARM_CALL: .text+0x1bcc8] 
    /*00019b18*/ MOV         R2, R5 
    /*00019b1c*/ LDR         R1, [SP, #28] 
    /*00019b20*/ MOV         R0, R4 
    /*00019b24*/ BL          0x0000000000019B24          @ HAL_DISP_SetDitherDataInOut [R_ARM_CALL: .text+0x1bd38] 
    /*00019b28*/ LDR         R1, [SP, #4] 
    /*00019b2c*/ MOV         R0, R4 
    /*00019b30*/ BL          0x0000000000019B30          @ HAL_DISP_SetDitherEn [R_ARM_CALL: .text+0x1bdb8] 
    /*00019b34*/ MOV         R1, SL 
    /*00019b38*/ MOV         R0, R4 
    /*00019b3c*/ BL          0x0000000000019B3C          @ HAL_DISP_SetDitherMode [R_ARM_CALL: .text+0x1be28] 
    /*00019b40*/ LDR         R1, [SP, #8] 
    /*00019b44*/ MOV         R0, R4 
    /*00019b48*/ BL          0x0000000000019B48          @ HAL_DISP_SetDitherRound [R_ARM_CALL: .text+0x1be98] 
    /*00019b4c*/ LDR         R1, [SP, #16] 
    /*00019b50*/ MOV         R0, R4 
    /*00019b54*/ BL          0x0000000000019B54          @ HAL_DISP_SetDitherDomainMode [R_ARM_CALL: .text+0x1bf08] 
    /*00019b58*/ LDR         R1, [SP, #20] 
    /*00019b5c*/ MOV         R0, R4 
    /*00019b60*/ BL          0x0000000000019B60          @ HAL_DISP_SetDitherTapMode [R_ARM_CALL: .text+0x1bf78] 
    /*00019b64*/ ADD         R1, SP, #32 
    /*00019b68*/ MOV         R0, R4 
    /*00019b6c*/ STR         R9, [SP, #32] 
    /*00019b70*/ STR         R8, [SP, #36]               @ 0x24 
    /*00019b74*/ STR         R7, [SP, #40]               @ 0x28 
    /*00019b78*/ STR         R6, [SP, #44]               @ 0x2c 
    /*00019b7c*/ STR         R9, [SP, #48]               @ 0x30 
    /*00019b80*/ STR         R8, [SP, #52]               @ 0x34 
    /*00019b84*/ STR         R7, [SP, #56]               @ 0x38 
    /*00019b88*/ STR         R6, [SP, #60]               @ 0x3c 
    /*00019b8c*/ STR         R9, [SP, #64]               @ 0x40 
    /*00019b90*/ STR         R8, [SP, #68]               @ 0x44 
    /*00019b94*/ STR         R7, [SP, #72]               @ 0x48 
    /*00019b98*/ STR         R6, [SP, #76]               @ 0x4c 
    /*00019b9c*/ STR         R9, [SP, #80]               @ 0x50 
    /*00019ba0*/ STR         R8, [SP, #84]               @ 0x54 
    /*00019ba4*/ STR         R7, [SP, #88]               @ 0x58 
    /*00019ba8*/ STR         R6, [SP, #92]               @ 0x5c 
    /*00019bac*/ BL          0x0000000000019BAC          @ HAL_DISP_SetDitherSed [R_ARM_CALL: .text+0x1bfe8] 
    /*00019bb0*/ LDR         R2, [SP, #24] 
    /*00019bb4*/ MOV         R1, FP 
    /*00019bb8*/ MOV         R0, R4 
    /*00019bbc*/ BL          0x0000000000019BBC          @ HAL_DISP_SetDitherThrMinMax [R_ARM_CALL: .text+0x1c45c] 
    /*00019bc0*/ ADD         SP, SP, #100                @ 0x64 
    /*00019bc4*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VOU_DRV_SetDevDitherMode_x19bc8:
    /*00019bc8*/ MOVW        R6, #62535                  @ 0xf447 
    /*00019bcc*/ MOVW        R7, #63535                  @ 0xf82f 
    /*00019bd0*/ MOVW        R8, #64535                  @ 0xfc17 
    /*00019bd4*/ MOVW        R3, #60000                  @ 0xea60 
    /*00019bd8*/ MOVT        R6, #32767                  @ 0x7fff 
    /*00019bdc*/ MOVT        R7, #32767                  @ 0x7fff 
    /*00019be0*/ MOV         FP, #120                    @ 0x78 
    /*00019be4*/ MOVT        R8, #32767                  @ 0x7fff 
    /*00019be8*/ STR         R3, [SP, #24] 
    /*00019bec*/ MVN         R9, #-2147483648            @ 0x80000000 
    /*00019bf0*/ B           VOU_DRV_SetDevDitherMode_x19af8
    VOU_DRV_SetDevDitherMode_x19bf4:
    /*00019bf4*/ MOV         R3, #4 
    /*00019bf8*/ MOV         SL, #1 
    /*00019bfc*/ MOV         R5, #3 
    /*00019c00*/ STR         R3, [SP, #28] 
    /*00019c04*/ B           VOU_DRV_SetDevDitherMode_x19ac8
    VOU_DRV_SetDevDitherMode_x19c08:
    /*00019c08*/ MOV         R3, #2 
    /*00019c0c*/ MOV         SL, #1 
    /*00019c10*/ STR         R3, [SP, #28] 
    /*00019c14*/ B           VOU_DRV_SetDevDitherMode_x19ac8
    VOU_DRV_SetDevDitherMode_x19c18:
    /*00019c18*/ MOV         SL, #1 
    /*00019c1c*/ STR         SL, [SP, #28] 
    /*00019c20*/ MOV         R5, SL 
    /*00019c24*/ B           VOU_DRV_SetDevDitherMode_x19ac8
    VOU_DRV_SetDevDitherMode_x19c28:
    /*00019c28*/ MVN         R6, #-2147483648            @ 0x80000000 
    /*00019c2c*/ STR         FP, [SP, #24] 
    /*00019c30*/ MOV         R7, R6 
    /*00019c34*/ MOV         R8, R6 
    /*00019c38*/ MOV         R9, R6 
    /*00019c3c*/ B           VOU_DRV_SetDevDitherMode_x19af8
    VOU_DRV_SetDevDitherMode_x19c40:
    /*00019c40*/ MOV         SL, #1 
    /*00019c44*/ MOV         R3, #2 
    /*00019c48*/ MOV         R5, SL 
    /*00019c4c*/ STR         R3, [SP, #28] 
    /*00019c50*/ B           VOU_DRV_SetDevDitherMode_x19ac8
    VOU_DRV_SetDevDitherMode_x19c54:
    /*00019c54*/ MOVW        R0, #0                      @ .LC90 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8b58] 
    /*00019c58*/ LDR         R1, [PC, #52]               @ 0x0000000000019c94 
    /*00019c5c*/ MOVT        R0, #0                      @ .LC90 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8b58] 
    /*00019c60*/ MOV         FP, #0 
    /*00019c64*/ BL          0x0000000000019C64          @ osal_printk [R_ARM_CALL: +0x0] 
    /*00019c68*/ B           VOU_DRV_SetDevDitherMode_x19ae4
    VOU_DRV_SetDevDitherMode_x19c6c:
    /*00019c6c*/ MOVW        R3, #0                      @ .LC89 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8b54] 
    /*00019c70*/ MOVW        R0, #0                      @ .LC14 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x74bc] 
    /*00019c74*/ MOVT        R3, #0                      @ .LC89 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8b54] 
    /*00019c78*/ MOVT        R0, #0                      @ .LC14 [R_ARM_MOVT_ABS: .rodata.str1.4+0x74bc] 
    /*00019c7c*/ MOVW        R2, #4887                   @ 0x1317 
    /*00019c80*/ LDR         R1, [PC, #12]               @ 0x0000000000019c94 
    /*00019c84*/ BL          0x0000000000019C84          @ osal_panic [R_ARM_CALL: +0x0] 
    /*00019c88*/ MOV         SL, R5 
    /*00019c8c*/ STR         R5, [SP, #28] 
    /*00019c90*/ B           VOU_DRV_SetDevDitherMode_x19ac8
    /*00019c94*/ ANDEQ       R1, R0, R4, LSR #32 
FUNC_END VOU_DRV_SetDevDitherMode


FUNC_BEGIN VOU_DRV_SetDevDitherOut
    /*00019c98*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*00019c9c*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*00019ca0*/ MOV         R3, #144                    @ 0x90 
    /*00019ca4*/ MLA         R0, R3, R0, R2 
    /*00019ca8*/ STR         R1, [R0, #140]              @ 0x8c 
    /*00019cac*/ BX          LR 
FUNC_END VOU_DRV_SetDevDitherOut


FUNC_BEGIN VOU_DRV_SetDevDither
    /*00019cb0*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*00019cb4*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*00019cb8*/ MOV         R3, #144                    @ 0x90 
    /*00019cbc*/ CMP         R1, #10 
    /*00019cc0*/ MLA         R3, R3, R0, R2 
    /*00019cc4*/ PUSH        {R4, R5, LR} 
    /*00019cc8*/ MOV         R4, R0 
    /*00019ccc*/ SUB         SP, SP, #116                @ 0x74 
    /*00019cd0*/ STR         R1, [R3, #136]              @ 0x88 
    /*00019cd4*/ BEQ         VOU_DRV_SetDevDither_x19d08
    /*00019cd8*/ CMP         R1, #8 
    /*00019cdc*/ BEQ         VOU_DRV_SetDevDither_x19ce8
    VOU_DRV_SetDevDither_x19ce0:
    /*00019ce0*/ ADD         SP, SP, #116                @ 0x74 
    /*00019ce4*/ POP         {R4, R5, PC} 
    VOU_DRV_SetDevDither_x19ce8:
    /*00019ce8*/ LDR         R3, [R3, #140]              @ 0x8c 
    /*00019cec*/ CMP         R3, #8 
    /*00019cf0*/ BNE         VOU_DRV_SetDevDither_x19ce0
    VOU_DRV_SetDevDither_x19cf4:
    /*00019cf4*/ MOV         R0, R4 
    /*00019cf8*/ MOV         R1, #0 
    /*00019cfc*/ BL          0x0000000000019CFC          @ HAL_DISP_SetDitherEn [R_ARM_CALL: .text+0x1bdb8] 
    /*00019d00*/ ADD         SP, SP, #116                @ 0x74 
    /*00019d04*/ POP         {R4, R5, PC} 
    VOU_DRV_SetDevDither_x19d08:
    /*00019d08*/ LDR         R3, [R3, #140]              @ 0x8c 
    /*00019d0c*/ CMP         R3, #8 
    /*00019d10*/ BEQ         VOU_DRV_SetDevDither_x19d2c
    /*00019d14*/ CMP         R3, #6 
    /*00019d18*/ BEQ         VOU_DRV_SetDevDither_x19d78
    /*00019d1c*/ CMP         R3, #10 
    /*00019d20*/ BEQ         VOU_DRV_SetDevDither_x19cf4
    /*00019d24*/ ADD         SP, SP, #116                @ 0x74 
    /*00019d28*/ POP         {R4, R5, PC} 
    VOU_DRV_SetDevDither_x19d2c:
    /*00019d2c*/ MOV         R5, #1 
    /*00019d30*/ ADD         R2, SP, #4 
    /*00019d34*/ MOV         R1, #0 
    /*00019d38*/ MOV         R3, #2 
    /*00019d3c*/ STR         R5, [SP, #4] 
    /*00019d40*/ STR         R3, [SP, #108]              @ 0x6c 
    /*00019d44*/ STR         R5, [SP, #12] 
    /*00019d48*/ STR         R5, [SP, #16] 
    /*00019d4c*/ STR         R5, [SP, #28] 
    /*00019d50*/ STR         R5, [SP, #32] 
    /*00019d54*/ BL          0x0000000000019D54          @ VOU_DRV_SetDevDitherMode [R_ARM_CALL: .text+0x19a2c] 
    /*00019d58*/ MOV         R1, R5 
    /*00019d5c*/ MOV         R0, R4 
    /*00019d60*/ BL          0x0000000000019D60          @ HAL_DISP_SetDitherEn [R_ARM_CALL: .text+0x1bdb8] 
    /*00019d64*/ MOV         R0, R4 
    /*00019d68*/ MOV         R2, #5 
    /*00019d6c*/ MOV         R1, #4 
    /*00019d70*/ BL          0x0000000000019D70          @ HAL_DISP_SetDitherDataInOut [R_ARM_CALL: .text+0x1bd38] 
    /*00019d74*/ B           VOU_DRV_SetDevDither_x19ce0
    VOU_DRV_SetDevDither_x19d78:
    /*00019d78*/ MOV         R3, #0 
    /*00019d7c*/ MOV         R5, #1 
    /*00019d80*/ ADD         R2, SP, #4 
    /*00019d84*/ MOV         R1, R3 
    /*00019d88*/ STR         R3, [SP, #12] 
    /*00019d8c*/ MOV         R3, #4 
    /*00019d90*/ STR         R5, [SP, #4] 
    /*00019d94*/ STR         R3, [SP, #108]              @ 0x6c 
    /*00019d98*/ STR         R5, [SP, #16] 
    /*00019d9c*/ STR         R5, [SP, #28] 
    /*00019da0*/ STR         R5, [SP, #32] 
    /*00019da4*/ BL          0x0000000000019DA4          @ VOU_DRV_SetDevDitherMode [R_ARM_CALL: .text+0x19a2c] 
    /*00019da8*/ MOV         R1, R5 
    /*00019dac*/ MOV         R0, R4 
    /*00019db0*/ BL          0x0000000000019DB0          @ HAL_DISP_SetDitherEn [R_ARM_CALL: .text+0x1bdb8] 
    /*00019db4*/ MOV         R2, R5 
    /*00019db8*/ MOV         R0, R4 
    /*00019dbc*/ MOV         R1, #2 
    /*00019dc0*/ BL          0x0000000000019DC0          @ HAL_DISP_SetDitherDataInOut [R_ARM_CALL: .text+0x1bd38] 
    /*00019dc4*/ B           VOU_DRV_SetDevDither_x19ce0
FUNC_END VOU_DRV_SetDevDither


FUNC_BEGIN VO_DRV_Open
    /*00019dc8*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00019dcc*/ MOVW        R7, #0                      @ .LANCHOR2 [R_ARM_MOVW_ABS_NC: .data+0x188] 
    /*00019dd0*/ MOVT        R7, #0                      @ .LANCHOR2 [R_ARM_MOVT_ABS: .data+0x188] 
    /*00019dd4*/ MOV         R5, R0 
    /*00019dd8*/ MOV         R0, #20 
    /*00019ddc*/ SUB         SP, SP, #180                @ 0xb4 
    /*00019de0*/ MLA         R0, R0, R5, R7 
    /*00019de4*/ CMP         R5, #0 
    /*00019de8*/ MOV         R3, #1 
    /*00019dec*/ MOV         R2, #0 
    /*00019df0*/ MOV         R1, #15 
    /*00019df4*/ STR         R5, [SP, #92]               @ 0x5c 
    /*00019df8*/ STR         R2, [SP, #116]              @ 0x74 
    /*00019dfc*/ MOVEQ       R8, #0 
    /*00019e00*/ STR         R2, [SP, #112]              @ 0x70 
    /*00019e04*/ LDR         R4, [R0, #2312]             @ 0x908 
    /*00019e08*/ LDR         R0, [R0, #2316]             @ 0x90c 
    /*00019e0c*/ STR         R2, [SP, #120]              @ 0x78 
    /*00019e10*/ STR         R2, [SP, #124]              @ 0x7c 
    /*00019e14*/ STR         R0, [SP, #28] 
    /*00019e18*/ STR         R2, [SP, #76]               @ 0x4c 
    /*00019e1c*/ STR         R2, [SP, #96]               @ 0x60 
    /*00019e20*/ STR         R3, [SP, #40]               @ 0x28 
    /*00019e24*/ STR         R3, [SP, #44]               @ 0x2c 
    /*00019e28*/ STR         R3, [SP, #52]               @ 0x34 
    /*00019e2c*/ STR         R3, [SP, #60]               @ 0x3c 
    /*00019e30*/ STR         R3, [SP, #64]               @ 0x40 
    /*00019e34*/ STR         R3, [SP, #68]               @ 0x44 
    /*00019e38*/ STR         R3, [SP, #72]               @ 0x48 
    /*00019e3c*/ STR         R1, [SP, #88]               @ 0x58 
    /*00019e40*/ STREQ       R5, [SP, #32] 
    /*00019e44*/ BNE         VO_DRV_Open_x1a530
    VO_DRV_Open_x19e48:
    /*00019e48*/ MOV         R0, #1 
    /*00019e4c*/ BL          0x0000000000019E4C          @ VO_DRV_SetAllCrgClk [R_ARM_CALL: .text+0x19040] 
    /*00019e50*/ MOV         R0, #2 
    /*00019e54*/ BL          0x0000000000019E54          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019e58*/ ADD         R2, SP, #40                 @ 0x28 
    /*00019e5c*/ MOV         R1, #89                     @ 0x59 
    /*00019e60*/ LDR         R3, [R0, #20] 
    /*00019e64*/ ADD         R0, SP, #88                 @ 0x58 
    /*00019e68*/ BLX         R3 
    /*00019e6c*/ MOVW        R3, #65088                  @ 0xfe40 
    /*00019e70*/ TST         R4, R3 
    /*00019e74*/ BEQ         VO_DRV_Open_x1a568
    /*00019e78*/ MOV         R3, #20 
    /*00019e7c*/ MLA         R3, R3, R5, R7 
    /*00019e80*/ LDR         R3, [R3, #2308]             @ 0x904 
    /*00019e84*/ LSR         R1, R3, #14 
    /*00019e88*/ LSR         R2, R3, #6 
    /*00019e8c*/ LSL         R3, R3, #2 
    /*00019e90*/ AND         R1, R1, #1020               @ 0x3fc 
    /*00019e94*/ AND         R2, R2, #1020               @ 0x3fc 
    /*00019e98*/ AND         R3, R3, #1020               @ 0x3fc 
    /*00019e9c*/ STRH        R1, [SP, #82]               @ 0x52 
    /*00019ea0*/ STRH        R2, [SP, #84]               @ 0x54 
    /*00019ea4*/ STRH        R3, [SP, #86]               @ 0x56 
    VO_DRV_Open_x19ea8:
    /*00019ea8*/ MOV         R9, #20 
    /*00019eac*/ ADD         R1, SP, #80                 @ 0x50 
    /*00019eb0*/ MLA         R9, R9, R5, R7 
    /*00019eb4*/ MOV         R0, #0 
    /*00019eb8*/ BL          0x0000000000019EB8          @ HAL_CBM_SetCbmBkg [R_ARM_CALL: .text+0x1e788] 
    /*00019ebc*/ MOVW        R6, #0                      @ .LANCHOR3 [R_ARM_MOVW_ABS_NC: .bss+0x5480] 
    /*00019ec0*/ MOVT        R6, #0                      @ .LANCHOR3 [R_ARM_MOVT_ABS: .bss+0x5480] 
    /*00019ec4*/ MOV         R2, #48                     @ 0x30 
    /*00019ec8*/ MOV         R3, #0 
    /*00019ecc*/ ADD         R0, SP, #128                @ 0x80 
    /*00019ed0*/ STR         R3, [R6, #2244]             @ 0x8c4 
    /*00019ed4*/ MOV         R3, #4 
    /*00019ed8*/ LDR         R1, [R9, #2316]             @ 0x90c 
    /*00019edc*/ STR         R3, [R6, #2268]             @ 0x8dc 
    /*00019ee0*/ MOV         R3, #50                     @ 0x32 
    /*00019ee4*/ STR         R3, [R6, #2248]             @ 0x8c8 
    /*00019ee8*/ MLA         R1, R2, R1, R7 
    /*00019eec*/ STR         R3, [R6, #2252]             @ 0x8cc 
    /*00019ef0*/ STR         R3, [R6, #2256]             @ 0x8d0 
    /*00019ef4*/ STR         R3, [R6, #2260]             @ 0x8d4 
    /*00019ef8*/ STR         R3, [R6, #2272]             @ 0x8e0 
    /*00019efc*/ STR         R3, [R6, #2276]             @ 0x8e4 
    /*00019f00*/ STR         R3, [R6, #2280]             @ 0x8e8 
    /*00019f04*/ STR         R3, [R6, #2284]             @ 0x8ec 
    /*00019f08*/ BL          0x0000000000019F08          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*00019f0c*/ LDR         R1, [SP, #168]              @ 0xa8 
    /*00019f10*/ LDR         R2, [SP, #172]              @ 0xac 
    /*00019f14*/ ADDS        R1, R1, #0 
    /*00019f18*/ LDR         R3, [SP, #164]              @ 0xa4 
    /*00019f1c*/ MOVNE       R1, #1 
    /*00019f20*/ ADDS        R2, R2, #0 
    /*00019f24*/ STR         R1, [SP, #120]              @ 0x78 
    /*00019f28*/ MOVNE       R2, #1 
    /*00019f2c*/ ADDS        R3, R3, #0 
    /*00019f30*/ STR         R2, [SP, #116]              @ 0x74 
    /*00019f34*/ MOVNE       R3, #1 
    /*00019f38*/ ANDS        R1, R4, #32 
    /*00019f3c*/ STR         R3, [SP, #124]              @ 0x7c 
    /*00019f40*/ STR         R1, [SP, #36]               @ 0x24 
    /*00019f44*/ BNE         VO_DRV_Open_x1a4cc
    VO_DRV_Open_x19f48:
    /*00019f48*/ TST         R4, #16384                  @ 0x4000 
    /*00019f4c*/ BNE         VO_DRV_Open_x1a444
    VO_DRV_Open_x19f50:
    /*00019f50*/ TST         R4, #32768                  @ 0x8000 
    /*00019f54*/ BNE         VO_DRV_Open_x1a3b8
    VO_DRV_Open_x19f58:
    /*00019f58*/ ANDS        FP, R4, #16 
    /*00019f5c*/ BNE         VO_DRV_Open_x1a350
    VO_DRV_Open_x19f60:
    /*00019f60*/ ANDS        R9, R4, #8 
    /*00019f64*/ BNE         VO_DRV_Open_x1a2e0
    VO_DRV_Open_x19f68:
    /*00019f68*/ TST         R4, #15936                  @ 0x3e40 
    /*00019f6c*/ BNE         VO_DRV_Open_x1a208
    VO_DRV_Open_x19f70:
    /*00019f70*/ LDR         R3, [SP, #28] 
    /*00019f74*/ CMP         R3, #47                     @ 0x2f 
    /*00019f78*/ BEQ         VO_DRV_Open_x19fa4
    /*00019f7c*/ MOV         R0, #2 
    /*00019f80*/ BL          0x0000000000019F80          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*00019f84*/ ADD         R2, SP, #44                 @ 0x2c 
    /*00019f88*/ MOV         R1, #83                     @ 0x53 
    /*00019f8c*/ LDR         R3, [R0, #20] 
    /*00019f90*/ ADD         R0, SP, #88                 @ 0x58 
    /*00019f94*/ BLX         R3 
    /*00019f98*/ LDR         R3, [SP, #32] 
    /*00019f9c*/ CMP         R3, #0 
    /*00019fa0*/ BEQ         VO_DRV_Open_x1a61c
    VO_DRV_Open_x19fa4:
    /*00019fa4*/ CMP         R4, #8 
    /*00019fa8*/ BEQ         VO_DRV_Open_x1a1f8
    /*00019fac*/ CMP         R4, #16 
    /*00019fb0*/ BEQ         VO_DRV_Open_x1a090
    /*00019fb4*/ ADD         R2, SP, #112                @ 0x70 
    /*00019fb8*/ ADD         R1, SP, #128                @ 0x80 
    /*00019fbc*/ MOV         R0, R8 
    /*00019fc0*/ BL          0x0000000000019FC0          @ HAL_DISP_SetIntfSync [R_ARM_CALL: .text+0x1affc] 
    /*00019fc4*/ MOV         R1, #1 
    /*00019fc8*/ MOV         R0, R8 
    /*00019fcc*/ BL          0x0000000000019FCC          @ HAL_DISP_SetDevMultiChnEn [R_ARM_CALL: .text+0x1b338] 
    /*00019fd0*/ ANDS        R3, R4, #32 
    /*00019fd4*/ CMP         R3, #0 
    /*00019fd8*/ BEQ         VO_DRV_Open_x1a004
    /*00019fdc*/ LDR         R2, [PC, #1772]             @ 0x000000000001a6d0 
    /*00019fe0*/ ADD         R3, SP, #100                @ 0x64 
    /*00019fe4*/ LDR         R0, [R2] 
    /*00019fe8*/ LDR         R1, [R2, #4] 
    /*00019fec*/ LDR         R2, [R2, #8] 
    /*00019ff0*/ STMIA       R3!, {R0, R1, R2} 
    /*00019ff4*/ ADD         R2, SP, #100                @ 0x64 
    /*00019ff8*/ MOV         R1, #1 
    /*00019ffc*/ MOV         R0, #32 
    /*0001a000*/ BL          0x000000000001A000          @ HAL_DISP_SetIntfClip [R_ARM_CALL: .text+0x1b760] 
    VO_DRV_Open_x1a004:
    /*0001a004*/ CMP         FP, #0 
    /*0001a008*/ BNE         VO_DRV_Open_x1a0c4
    VO_DRV_Open_x1a00c:
    /*0001a00c*/ CMP         R9, #0 
    /*0001a010*/ BNE         VO_DRV_Open_x1a0f4
    VO_DRV_Open_x1a014:
    /*0001a014*/ MOV         R3, #144                    @ 0x90 
    /*0001a018*/ MOVW        R6, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*0001a01c*/ MUL         R3, R3, R5 
    /*0001a020*/ MOVT        R6, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*0001a024*/ LDR         R3, [R6, R3] 
    /*0001a028*/ CMP         R3, #2 
    /*0001a02c*/ MOVHI       R1, #0 
    /*0001a030*/ BLS         VO_DRV_Open_x1a120
    VO_DRV_Open_x1a034:
    /*0001a034*/ MOV         R0, R8 
    /*0001a038*/ BL          0x000000000001A038          @ HAL_DISP_SetVtThd [R_ARM_CALL: .text+0x1b984] 
    /*0001a03c*/ TST         R4, #6656                   @ 0x1a00 
    /*0001a040*/ MOV         R1, #10 
    /*0001a044*/ MOV         R0, R5 
    /*0001a048*/ MOVNE       R3, #144                    @ 0x90 
    /*0001a04c*/ MOVNE       R2, #6 
    /*0001a050*/ MLANE       R6, R3, R5, R6 
    /*0001a054*/ STRNE       R2, [R6, #140]              @ 0x8c 
    /*0001a058*/ BL          0x000000000001A058          @ VOU_DRV_SetDevDither [R_ARM_CALL: .text+0x19cb0] 
    /*0001a05c*/ MOV         R1, #1 
    /*0001a060*/ MOV         R0, R8 
    /*0001a064*/ BL          0x000000000001A064          @ HAL_DISP_SetIntfEnable [R_ARM_CALL: .text+0x1abac] 
    /*0001a068*/ CMP         R5, #0 
    /*0001a06c*/ BNE         VO_DRV_Open_x1a080
    /*0001a070*/ MOV         R0, #1 
    /*0001a074*/ BL          0x000000000001A074          @ HAL_DISP_SetIntMask [R_ARM_CALL: .text+0x1ba04] 
    /*0001a078*/ MOV         R0, #6 
    /*0001a07c*/ BL          0x000000000001A07C          @ HAL_DISP_SetIntMask1 [R_ARM_CALL: .text+0x1ba9c] 
    VO_DRV_Open_x1a080:
    /*0001a080*/ MOV         R0, R8 
    /*0001a084*/ BL          0x000000000001A084          @ HAL_DISP_SetRegUp [R_ARM_CALL: .text+0x1bc0c] 
    /*0001a088*/ ADD         SP, SP, #180                @ 0xb4 
    /*0001a08c*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    VO_DRV_Open_x1a090:
    /*0001a090*/ MOV         R3, #0 
    /*0001a094*/ STR         R3, [SP, #128]              @ 0x80 
    /*0001a098*/ MOV         R3, #1 
    /*0001a09c*/ STRB        R3, [SP, #136]              @ 0x88 
    VO_DRV_Open_x1a0a0:
    /*0001a0a0*/ ADD         R2, SP, #112                @ 0x70 
    /*0001a0a4*/ ADD         R1, SP, #128                @ 0x80 
    /*0001a0a8*/ MOV         R0, R8 
    /*0001a0ac*/ BL          0x000000000001A0AC          @ HAL_DISP_SetIntfSync [R_ARM_CALL: .text+0x1affc] 
    /*0001a0b0*/ MOV         R1, #1 
    /*0001a0b4*/ MOV         R0, R8 
    /*0001a0b8*/ BL          0x000000000001A0B8          @ HAL_DISP_SetDevMultiChnEn [R_ARM_CALL: .text+0x1b338] 
    /*0001a0bc*/ CMP         FP, #0 
    /*0001a0c0*/ BEQ         VO_DRV_Open_x1a00c
    VO_DRV_Open_x1a0c4:
    /*0001a0c4*/ LDR         R2, [PC, #1544]             @ 0x000000000001a6d4 
    /*0001a0c8*/ ADD         R3, SP, #100                @ 0x64 
    /*0001a0cc*/ LDR         R0, [R2] 
    /*0001a0d0*/ LDR         R1, [R2, #4] 
    /*0001a0d4*/ LDR         R2, [R2, #8] 
    /*0001a0d8*/ STMIA       R3!, {R0, R1, R2} 
    /*0001a0dc*/ ADD         R2, SP, #100                @ 0x64 
    /*0001a0e0*/ MOV         R1, #1 
    /*0001a0e4*/ MOV         R0, #16 
    /*0001a0e8*/ BL          0x000000000001A0E8          @ HAL_DISP_SetIntfClip [R_ARM_CALL: .text+0x1b760] 
    /*0001a0ec*/ CMP         R9, #0 
    /*0001a0f0*/ BEQ         VO_DRV_Open_x1a014
    VO_DRV_Open_x1a0f4:
    /*0001a0f4*/ LDR         R2, [PC, #1496]             @ 0x000000000001a6d4 
    /*0001a0f8*/ ADD         R3, SP, #100                @ 0x64 
    /*0001a0fc*/ LDR         R0, [R2] 
    /*0001a100*/ LDR         R1, [R2, #4] 
    /*0001a104*/ LDR         R2, [R2, #8] 
    /*0001a108*/ STMIA       R3!, {R0, R1, R2} 
    /*0001a10c*/ ADD         R2, SP, #100                @ 0x64 
    /*0001a110*/ MOV         R1, #1 
    /*0001a114*/ MOV         R0, #8 
    /*0001a118*/ BL          0x000000000001A118          @ HAL_DISP_SetIntfClip [R_ARM_CALL: .text+0x1b760] 
    /*0001a11c*/ B           VO_DRV_Open_x1a014
    VO_DRV_Open_x1a120:
    /*0001a120*/ LDR         R3, [SP, #132]              @ 0x84 
    /*0001a124*/ CMP         R3, #0 
    /*0001a128*/ BNE         VO_DRV_Open_x1a1dc
    /*0001a12c*/ MOV         R1, #1 
    /*0001a130*/ MOV         R0, R5 
    /*0001a134*/ BL          0x000000000001A134          @ HAL_DISP_SetVtThdMode [R_ARM_CALL: .text+0x1b8b0] 
    /*0001a138*/ MOV         R1, #1 
    /*0001a13c*/ MOV         R0, R5 
    /*0001a140*/ BL          0x000000000001A140          @ HAL_VIDEO_SetLayerUpMode [R_ARM_CALL: .text+0x1c4e4] 
    VO_DRV_Open_x1a144:
    /*0001a144*/ MOV         R2, #20 
    /*0001a148*/ LDRH        R1, [SP, #142]              @ 0x8e 
    /*0001a14c*/ MLA         R7, R2, R5, R7 
    /*0001a150*/ LDRH        R3, [SP, #138]              @ 0x8a 
    /*0001a154*/ LDRH        R2, [SP, #140]              @ 0x8c 
    /*0001a158*/ ADD         R3, R3, R1 
    /*0001a15c*/ ADD         R3, R3, R2 
    /*0001a160*/ LDR         R1, [R7, #2304]             @ 0x900 
    /*0001a164*/ UXTH        R3, R3 
    /*0001a168*/ CMP         R1, R3 
    /*0001a16c*/ SUBCC       R9, R3, #1 
    /*0001a170*/ BCC         VO_DRV_Open_x1a1d0
    /*0001a174*/ MOV         R2, #144                    @ 0x90 
    /*0001a178*/ SUB         R9, R3, #1 
    /*0001a17c*/ MUL         R3, R2, R5 
    /*0001a180*/ STR         R1, [SP, #8] 
    /*0001a184*/ STR         R9, [SP, #16] 
    /*0001a188*/ MOV         R2, #0 
    /*0001a18c*/ STR         R5, [SP, #4] 
    /*0001a190*/ MOVW        R1, #2900                   @ 0xb54 
    /*0001a194*/ STR         R2, [SP, #12] 
    /*0001a198*/ MOV         R0, #3 
    /*0001a19c*/ STR         R1, [SP] 
    /*0001a1a0*/ MOVW        R2, #0                      @ .LC91 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8b78] 
    /*0001a1a4*/ LDR         IP, [R6, R3] 
    /*0001a1a8*/ MOV         R1, #15 
    /*0001a1ac*/ MOVT        R2, #0                      @ .LC91 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8b78] 
    /*0001a1b0*/ LDR         R3, [PC, #1312]             @ 0x000000000001a6d8 
    /*0001a1b4*/ BICS        IP, IP, #2 
    /*0001a1b8*/ MOVNE       IP, #100                    @ 0x64 
    /*0001a1bc*/ MOVEQ       IP, #240                    @ 0xf0 
    /*0001a1c0*/ STR         IP, [SP, #20] 
    /*0001a1c4*/ STR         IP, [R7, #2304]             @ 0x900 
    /*0001a1c8*/ BL          0x000000000001A1C8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a1cc*/ LDR         R1, [R7, #2304]             @ 0x900 
    VO_DRV_Open_x1a1d0:
    /*0001a1d0*/ SUB         R1, R9, R1 
    /*0001a1d4*/ UXTH        R1, R1 
    /*0001a1d8*/ B           VO_DRV_Open_x1a034
    VO_DRV_Open_x1a1dc:
    /*0001a1dc*/ MOV         R1, #0 
    /*0001a1e0*/ MOV         R0, R5 
    /*0001a1e4*/ BL          0x000000000001A1E4          @ HAL_DISP_SetVtThdMode [R_ARM_CALL: .text+0x1b8b0] 
    /*0001a1e8*/ MOV         R1, #0 
    /*0001a1ec*/ MOV         R0, R5 
    /*0001a1f0*/ BL          0x000000000001A1F0          @ HAL_VIDEO_SetLayerUpMode [R_ARM_CALL: .text+0x1c4e4] 
    /*0001a1f4*/ B           VO_DRV_Open_x1a144
    VO_DRV_Open_x1a1f8:
    /*0001a1f8*/ MOV         R3, #0 
    /*0001a1fc*/ STR         R3, [SP, #128]              @ 0x80 
    /*0001a200*/ STRB        R3, [SP, #136]              @ 0x88 
    /*0001a204*/ B           VO_DRV_Open_x1a0a0
    VO_DRV_Open_x1a208:
    /*0001a208*/ MOV         R0, #2 
    /*0001a20c*/ MOV         SL, #1 
    /*0001a210*/ STR         SL, [SP, #52]               @ 0x34 
    /*0001a214*/ STR         SL, [SP, #40]               @ 0x28 
    /*0001a218*/ BL          0x000000000001A218          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a21c*/ ADD         R2, SP, #52                 @ 0x34 
    /*0001a220*/ MOV         R1, #5 
    /*0001a224*/ LDR         R3, [R0, #20] 
    /*0001a228*/ ADD         R0, SP, #88                 @ 0x58 
    /*0001a22c*/ BLX         R3 
    /*0001a230*/ MOV         R0, #2 
    /*0001a234*/ BL          0x000000000001A234          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a238*/ ADD         R2, SP, #40                 @ 0x28 
    /*0001a23c*/ MOV         R1, #109                    @ 0x6d 
    /*0001a240*/ LDR         R3, [R0, #20] 
    /*0001a244*/ ADD         R0, SP, #88                 @ 0x58 
    /*0001a248*/ BLX         R3 
    /*0001a24c*/ MOV         R1, R4 
    /*0001a250*/ MOV         R0, R8 
    /*0001a254*/ BL          0x000000000001A254          @ HAL_DISP_SetIntfMuxSel [R_ARM_CALL: .text+0x1b630] 
    /*0001a258*/ ANDS        R2, R4, #1024               @ 0x400 
    /*0001a25c*/ BNE         VO_DRV_Open_x1a63c
    /*0001a260*/ ANDS        R1, R4, #512                @ 0x200 
    /*0001a264*/ BEQ         VO_DRV_Open_x1a65c
    /*0001a268*/ LDRB        R3, [SP, #51]               @ 0x33 
    /*0001a26c*/ MOV         R1, #2 
    /*0001a270*/ STR         R1, [SP, #76]               @ 0x4c 
    /*0001a274*/ MOV         R1, #4 
    /*0001a278*/ ORR         R3, R3, #32 
    /*0001a27c*/ STR         R1, [SP, #56]               @ 0x38 
    /*0001a280*/ AND         R3, R3, #227                @ 0xe3 
    /*0001a284*/ BFI         R3, R2, #1, #1 
    /*0001a288*/ STRB        R3, [SP, #51]               @ 0x33 
    VO_DRV_Open_x1a28c:
    /*0001a28c*/ MOV         R0, #2 
    /*0001a290*/ BL          0x000000000001A290          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a294*/ ADD         R2, SP, #56                 @ 0x38 
    /*0001a298*/ MOV         R1, #111                    @ 0x6f 
    /*0001a29c*/ LDR         R3, [R0, #20] 
    /*0001a2a0*/ ADD         R0, SP, #88                 @ 0x58 
    /*0001a2a4*/ BLX         R3 
    /*0001a2a8*/ ADD         R1, SP, #48                 @ 0x30 
    /*0001a2ac*/ MOV         R0, R4 
    /*0001a2b0*/ BL          0x000000000001A2B0          @ HAL_DISP_SetIntfCtrl [R_ARM_CALL: .text+0x1b474] 
    /*0001a2b4*/ LDR         R3, [SP, #28] 
    /*0001a2b8*/ CMP         R3, #47                     @ 0x2f 
    /*0001a2bc*/ BEQ         VO_DRV_Open_x1a2cc
    /*0001a2c0*/ LDRB        R0, [SP, #51]               @ 0x33 
    /*0001a2c4*/ UBFX        R0, R0, #4, #1 
    /*0001a2c8*/ BL          0x000000000001A2C8          @ HAL_DISP_SetLcdSerialPerd [R_ARM_CALL: .text+0x1b428] 
    VO_DRV_Open_x1a2cc:
    /*0001a2cc*/ MOV         R3, #188                    @ 0xbc 
    /*0001a2d0*/ MOV         R2, #4 
    /*0001a2d4*/ MLA         R6, R3, R5, R6 
    /*0001a2d8*/ STR         R2, [R6, #2244]             @ 0x8c4 
    /*0001a2dc*/ B           VO_DRV_Open_x19f70
    VO_DRV_Open_x1a2e0:
    /*0001a2e0*/ ADD         SL, SP, #176                @ 0xb0 
    /*0001a2e4*/ MOV         R0, #2 
    /*0001a2e8*/ MOV         R3, #1 
    /*0001a2ec*/ STR         R3, [SL, #-124]!            @ 0xffffff84 
    /*0001a2f0*/ BL          0x000000000001A2F0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a2f4*/ MOV         R2, SL 
    /*0001a2f8*/ MOV         R1, #5 
    /*0001a2fc*/ ADD         SL, SP, #176                @ 0xb0 
    /*0001a300*/ LDR         R3, [R0, #20] 
    /*0001a304*/ ADD         R0, SP, #88                 @ 0x58 
    /*0001a308*/ BLX         R3 
    /*0001a30c*/ MOV         R1, #8 
    /*0001a310*/ MOV         R0, R8 
    /*0001a314*/ BL          0x000000000001A314          @ HAL_DISP_SetIntfMuxSel [R_ARM_CALL: .text+0x1b630] 
    /*0001a318*/ MOV         R0, #1 
    /*0001a31c*/ BL          0x000000000001A31C          @ HAL_INTF_BT_SetDfirEn [R_ARM_CALL: .text+0x1bbd4] 
    /*0001a320*/ MOV         R0, #2 
    /*0001a324*/ MOV         R3, #1 
    /*0001a328*/ STR         R3, [SP, #76]               @ 0x4c 
    /*0001a32c*/ MOV         R3, #6 
    /*0001a330*/ STR         R3, [SL, #-120]!            @ 0xffffff88 
    /*0001a334*/ BL          0x000000000001A334          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a338*/ MOV         R2, SL 
    /*0001a33c*/ MOV         R1, #111                    @ 0x6f 
    /*0001a340*/ LDR         R3, [R0, #20] 
    /*0001a344*/ ADD         R0, SP, #88                 @ 0x58 
    /*0001a348*/ BLX         R3 
    /*0001a34c*/ B           VO_DRV_Open_x19f68
    VO_DRV_Open_x1a350:
    /*0001a350*/ ADD         R9, SP, #176                @ 0xb0 
    /*0001a354*/ MOV         R0, #2 
    /*0001a358*/ MOV         SL, #1 
    /*0001a35c*/ STR         SL, [R9, #-124]!            @ 0xffffff84 
    /*0001a360*/ BL          0x000000000001A360          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a364*/ MOV         R2, R9 
    /*0001a368*/ MOV         R1, #5 
    /*0001a36c*/ ADD         R9, SP, #176                @ 0xb0 
    /*0001a370*/ LDR         R3, [R0, #20] 
    /*0001a374*/ ADD         R0, SP, #88                 @ 0x58 
    /*0001a378*/ BLX         R3 
    /*0001a37c*/ MOV         R1, #16 
    /*0001a380*/ MOV         R0, R8 
    /*0001a384*/ BL          0x000000000001A384          @ HAL_DISP_SetIntfMuxSel [R_ARM_CALL: .text+0x1b630] 
    /*0001a388*/ MOV         R0, SL 
    /*0001a38c*/ BL          0x000000000001A38C          @ HAL_INTF_BT_SetDfirEn [R_ARM_CALL: .text+0x1bbd4] 
    /*0001a390*/ MOV         R0, #2 
    /*0001a394*/ MOV         R3, #5 
    /*0001a398*/ STR         R3, [R9, #-120]!            @ 0xffffff88 
    /*0001a39c*/ BL          0x000000000001A39C          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a3a0*/ MOV         R2, R9 
    /*0001a3a4*/ MOV         R1, #111                    @ 0x6f 
    /*0001a3a8*/ LDR         R3, [R0, #20] 
    /*0001a3ac*/ ADD         R0, SP, #88                 @ 0x58 
    /*0001a3b0*/ BLX         R3 
    /*0001a3b4*/ B           VO_DRV_Open_x19f60
    VO_DRV_Open_x1a3b8:
    /*0001a3b8*/ MOV         R0, #2 
    /*0001a3bc*/ BL          0x000000000001A3BC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a3c0*/ ADD         R2, SP, #68                 @ 0x44 
    /*0001a3c4*/ MOV         R1, #7 
    /*0001a3c8*/ LDR         R3, [R0, #20] 
    /*0001a3cc*/ ADD         R0, SP, #88                 @ 0x58 
    /*0001a3d0*/ BLX         R3 
    /*0001a3d4*/ MOV         R0, #2 
    /*0001a3d8*/ BL          0x000000000001A3D8          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a3dc*/ ADD         R2, SP, #72                 @ 0x48 
    /*0001a3e0*/ MOV         R1, #6 
    /*0001a3e4*/ LDR         R3, [R0, #20] 
    /*0001a3e8*/ ADD         R0, SP, #88                 @ 0x58 
    /*0001a3ec*/ BLX         R3 
    /*0001a3f0*/ MOV         R1, #32768                  @ 0x8000 
    /*0001a3f4*/ MOV         R0, R8 
    /*0001a3f8*/ BL          0x000000000001A3F8          @ HAL_DISP_SetIntfMuxSel [R_ARM_CALL: .text+0x1b630] 
    /*0001a3fc*/ LDRB        R3, [SP, #51]               @ 0x33 
    /*0001a400*/ ADD         R1, SP, #48                 @ 0x30 
    /*0001a404*/ MOV         R0, R4 
    /*0001a408*/ ORR         R3, R3, #128                @ 0x80 
    /*0001a40c*/ STRB        R3, [SP, #51]               @ 0x33 
    /*0001a410*/ BL          0x000000000001A410          @ HAL_DISP_SetIntfCtrl [R_ARM_CALL: .text+0x1b474] 
    /*0001a414*/ MOV         R1, #1 
    /*0001a418*/ MOV         R0, R5 
    /*0001a41c*/ BL          0x000000000001A41C          @ HAL_DISP_SetIntvsyncTeMode [R_ARM_CALL: .text+0x1b840] 
    /*0001a420*/ MOV         R3, #188                    @ 0xbc 
    /*0001a424*/ MLA         R3, R3, R5, R6 
    /*0001a428*/ MOV         R2, #0 
    /*0001a42c*/ MOV         R1, #4 
    /*0001a430*/ STR         R2, [SP, #120]              @ 0x78 
    /*0001a434*/ STR         R2, [SP, #116]              @ 0x74 
    /*0001a438*/ STR         R2, [SP, #124]              @ 0x7c 
    /*0001a43c*/ STR         R1, [R3, #2244]             @ 0x8c4 
    /*0001a440*/ B           VO_DRV_Open_x19f58
    VO_DRV_Open_x1a444:
    /*0001a444*/ MOV         R0, #2 
    /*0001a448*/ BL          0x000000000001A448          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a44c*/ ADD         R2, SP, #68                 @ 0x44 
    /*0001a450*/ MOV         R1, #7 
    /*0001a454*/ LDR         R3, [R0, #20] 
    /*0001a458*/ ADD         R0, SP, #88                 @ 0x58 
    /*0001a45c*/ BLX         R3 
    /*0001a460*/ MOV         R0, #2 
    /*0001a464*/ BL          0x000000000001A464          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a468*/ ADD         R2, SP, #72                 @ 0x48 
    /*0001a46c*/ MOV         R1, #6 
    /*0001a470*/ LDR         R3, [R0, #20] 
    /*0001a474*/ ADD         R0, SP, #88                 @ 0x58 
    /*0001a478*/ BLX         R3 
    /*0001a47c*/ MOV         R1, #16384                  @ 0x4000 
    /*0001a480*/ MOV         R0, R8 
    /*0001a484*/ BL          0x000000000001A484          @ HAL_DISP_SetIntfMuxSel [R_ARM_CALL: .text+0x1b630] 
    /*0001a488*/ LDRB        R3, [SP, #51]               @ 0x33 
    /*0001a48c*/ ADD         R1, SP, #48                 @ 0x30 
    /*0001a490*/ MOV         R0, R4 
    /*0001a494*/ ORR         R3, R3, #128                @ 0x80 
    /*0001a498*/ STRB        R3, [SP, #51]               @ 0x33 
    /*0001a49c*/ BL          0x000000000001A49C          @ HAL_DISP_SetIntfCtrl [R_ARM_CALL: .text+0x1b474] 
    /*0001a4a0*/ MOV         R0, #1 
    /*0001a4a4*/ BL          0x000000000001A4A4          @ HAL_INTF_BT_SetDfirEn [R_ARM_CALL: .text+0x1bbd4] 
    /*0001a4a8*/ MOV         R3, #188                    @ 0xbc 
    /*0001a4ac*/ MLA         R3, R3, R5, R6 
    /*0001a4b0*/ MOV         R2, #0 
    /*0001a4b4*/ MOV         R1, #4 
    /*0001a4b8*/ STR         R2, [SP, #120]              @ 0x78 
    /*0001a4bc*/ STR         R2, [SP, #116]              @ 0x74 
    /*0001a4c0*/ STR         R2, [SP, #124]              @ 0x7c 
    /*0001a4c4*/ STR         R1, [R3, #2244]             @ 0x8c4 
    /*0001a4c8*/ B           VO_DRV_Open_x19f50
    VO_DRV_Open_x1a4cc:
    /*0001a4cc*/ MOV         R0, #2 
    /*0001a4d0*/ BL          0x000000000001A4D0          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a4d4*/ ADD         R2, SP, #60                 @ 0x3c 
    /*0001a4d8*/ MOV         R1, #96                     @ 0x60 
    /*0001a4dc*/ LDR         R3, [R0, #20] 
    /*0001a4e0*/ ADD         R0, SP, #88                 @ 0x58 
    /*0001a4e4*/ BLX         R3 
    /*0001a4e8*/ MOV         R0, #2 
    /*0001a4ec*/ BL          0x000000000001A4EC          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a4f0*/ ADD         R2, SP, #64                 @ 0x40 
    /*0001a4f4*/ MOV         R1, #8 
    /*0001a4f8*/ LDR         R3, [R0, #20] 
    /*0001a4fc*/ ADD         R0, SP, #88                 @ 0x58 
    /*0001a500*/ BLX         R3 
    /*0001a504*/ LDR         R3, [R9, #2316]             @ 0x90c 
    /*0001a508*/ SUB         R3, R3, #11 
    /*0001a50c*/ CMP         R3, #1 
    /*0001a510*/ BHI         VO_DRV_Open_x19f48
    /*0001a514*/ LDR         R2, [SP, #120]              @ 0x78 
    /*0001a518*/ LDR         R3, [SP, #116]              @ 0x74 
    /*0001a51c*/ RSB         R2, R2, #1 
    /*0001a520*/ STR         R2, [SP, #120]              @ 0x78 
    /*0001a524*/ RSB         R3, R3, #1 
    /*0001a528*/ STR         R3, [SP, #116]              @ 0x74 
    /*0001a52c*/ B           VO_DRV_Open_x19f48
    VO_DRV_Open_x1a530:
    /*0001a530*/ MOVW        R3, #2358                   @ 0x936 
    /*0001a534*/ STR         R5, [SP, #4] 
    /*0001a538*/ STR         R3, [SP] 
    /*0001a53c*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x729c] 
    /*0001a540*/ LDR         R3, [PC, #404]              @ 0x000000000001a6dc 
    /*0001a544*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x729c] 
    /*0001a548*/ MOV         R0, #3 
    /*0001a54c*/ MOV         R8, #4 
    /*0001a550*/ BL          0x000000000001A550          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a554*/ MOV         R0, R5 
    /*0001a558*/ BL          0x000000000001548C 
    /*0001a55c*/ MOV         R3, #2 
    /*0001a560*/ STR         R3, [SP, #32] 
    /*0001a564*/ B           VO_DRV_Open_x19e48
    VO_DRV_Open_x1a568:
    /*0001a568*/ MOV         R1, #20 
    /*0001a56c*/ MVN         R3, #93                     @ 0x5d 
    /*0001a570*/ MLA         R1, R1, R5, R7 
    /*0001a574*/ MOV         R2, #112                    @ 0x70 
    /*0001a578*/ MVN         R6, #37                     @ 0x25 
    /*0001a57c*/ MOV         SL, #66                     @ 0x42 
    /*0001a580*/ MVN         R9, #17 
    /*0001a584*/ MVN         FP, #73                     @ 0x49 
    /*0001a588*/ LDR         R0, [R1, #2308]             @ 0x904 
    /*0001a58c*/ UBFX        IP, R0, #8, #8 
    /*0001a590*/ UBFX        LR, R0, #16, #8 
    /*0001a594*/ UXTB        R0, R0 
    /*0001a598*/ MUL         R3, R3, IP 
    /*0001a59c*/ ADD         R1, IP, IP, LSL #7 
    /*0001a5a0*/ MLA         R3, R2, LR, R3 
    /*0001a5a4*/ MUL         R6, R6, LR 
    /*0001a5a8*/ MLA         R2, R2, R0, R6 
    /*0001a5ac*/ MOV         R6, #64512                  @ 0xfc00 
    /*0001a5b0*/ MLA         R1, SL, LR, R1 
    /*0001a5b4*/ MOV         SL, #25 
    /*0001a5b8*/ MLA         R3, R9, R0, R3 
    /*0001a5bc*/ MOVT        R6, #15 
    /*0001a5c0*/ MLA         IP, FP, IP, R2 
    /*0001a5c4*/ MLA         R1, SL, R0, R1 
    /*0001a5c8*/ MOV         R0, #0 
    /*0001a5cc*/ ASR         R3, R3, #8 
    /*0001a5d0*/ MOVT        R0, #16368                  @ 0x3ff0 
    /*0001a5d4*/ ADD         R3, R3, #128                @ 0x80 
    /*0001a5d8*/ ASR         IP, IP, #8 
    /*0001a5dc*/ LSL         R2, R3, #2 
    /*0001a5e0*/ ADD         IP, IP, #128                @ 0x80 
    /*0001a5e4*/ ASR         R3, R1, #8 
    /*0001a5e8*/ ADD         R3, R3, #16 
    /*0001a5ec*/ AND         R6, R6, IP, LSL #12 
    /*0001a5f0*/ UXTH        R2, R2 
    /*0001a5f4*/ AND         R3, R0, R3, LSL #22 
    /*0001a5f8*/ ORR         R3, R3, R6 
    /*0001a5fc*/ ORR         R3, R3, R2 
    /*0001a600*/ UBFX        R1, R3, #10, #10 
    /*0001a604*/ UBFX        R2, R3, #0, #10 
    /*0001a608*/ STRH        R1, [SP, #84]               @ 0x54 
    /*0001a60c*/ LSR         R3, R3, #20 
    /*0001a610*/ STRH        R2, [SP, #86]               @ 0x56 
    /*0001a614*/ STRH        R3, [SP, #82]               @ 0x52 
    /*0001a618*/ B           VO_DRV_Open_x19ea8
    VO_DRV_Open_x1a61c:
    /*0001a61c*/ MOV         R0, #2 
    /*0001a620*/ BL          0x000000000001A620          @ CMPI_GetModuleFuncById [R_ARM_CALL: +0x0] 
    /*0001a624*/ ADD         R2, SP, #76                 @ 0x4c 
    /*0001a628*/ MOV         R1, #95                     @ 0x5f 
    /*0001a62c*/ LDR         R3, [R0, #20] 
    /*0001a630*/ ADD         R0, SP, #88                 @ 0x58 
    /*0001a634*/ BLX         R3 
    /*0001a638*/ B           VO_DRV_Open_x19fa4
    VO_DRV_Open_x1a63c:
    /*0001a63c*/ LDRB        R3, [SP, #51]               @ 0x33 
    /*0001a640*/ MOV         R2, #3 
    /*0001a644*/ STR         R2, [SP, #76]               @ 0x4c 
    /*0001a648*/ AND         R3, R3, #65                 @ 0x41 
    /*0001a64c*/ STR         R2, [SP, #56]               @ 0x38 
    /*0001a650*/ ORR         R3, R3, #178                @ 0xb2 
    /*0001a654*/ STRB        R3, [SP, #51]               @ 0x33 
    /*0001a658*/ B           VO_DRV_Open_x1a28c
    VO_DRV_Open_x1a65c:
    /*0001a65c*/ ANDS        R2, R4, #2048               @ 0x800 
    /*0001a660*/ BNE         VO_DRV_Open_x1a688
    /*0001a664*/ ANDS        R3, R4, #4096               @ 0x1000 
    /*0001a668*/ BEQ         VO_DRV_Open_x1a6a8
    /*0001a66c*/ LDRB        R3, [SP, #51]               @ 0x33 
    /*0001a670*/ STR         R2, [SP, #76]               @ 0x4c 
    /*0001a674*/ AND         R3, R3, #195                @ 0xc3 
    /*0001a678*/ STR         SL, [SP, #56]               @ 0x38 
    /*0001a67c*/ ORR         R3, R3, #2 
    /*0001a680*/ STRB        R3, [SP, #51]               @ 0x33 
    /*0001a684*/ B           VO_DRV_Open_x1a28c
    VO_DRV_Open_x1a688:
    /*0001a688*/ LDRB        R3, [SP, #51]               @ 0x33 
    /*0001a68c*/ MOV         R2, #2 
    /*0001a690*/ STR         R1, [SP, #76]               @ 0x4c 
    /*0001a694*/ AND         R3, R3, #195                @ 0xc3 
    /*0001a698*/ STR         R2, [SP, #56]               @ 0x38 
    /*0001a69c*/ ORR         R3, R3, R2 
    /*0001a6a0*/ STRB        R3, [SP, #51]               @ 0x33 
    /*0001a6a4*/ B           VO_DRV_Open_x1a28c
    VO_DRV_Open_x1a6a8:
    /*0001a6a8*/ TST         R4, #8192                   @ 0x2000 
    /*0001a6ac*/ BEQ         VO_DRV_Open_x1a28c
    /*0001a6b0*/ LDRB        R2, [SP, #51]               @ 0x33 
    /*0001a6b4*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0001a6b8*/ AND         R2, R2, #195                @ 0xc3 
    /*0001a6bc*/ STR         R3, [SP, #76]               @ 0x4c 
    /*0001a6c0*/ STR         R3, [SP, #56]               @ 0x38 
    /*0001a6c4*/ ORR         R3, R2, #2 
    /*0001a6c8*/ STRB        R3, [SP, #51]               @ 0x33 
    /*0001a6cc*/ B           VO_DRV_Open_x1a28c
    /*0001a6d0*/ ANDEQ       R1, R0, R0, ASR #32 
    /*0001a6d4*/ ANDEQ       R1, R0, IP, ASR #32 
    /*0001a6d8*/ ANDEQ       R1, R0, R8, ASR R0 
    /*0001a6dc*/ LDRDEQ      R0, [R0], -R0               @ <UNPREDICTABLE> 
FUNC_END VO_DRV_Open


FUNC_BEGIN VOU_DRV_LowBandwidth
    /*0001a6e0*/ SUBS        R3, R0, #0 
    /*0001a6e4*/ BNE         VOU_DRV_LowBandwidth_x1a748
    /*0001a6e8*/ ANDS        R0, R1, #8 
    /*0001a6ec*/ BNE         VOU_DRV_LowBandwidth_x1a6f4
    VOU_DRV_LowBandwidth_x1a6f0:
    /*0001a6f0*/ B           VOU_DRV_LowBandwidth_x1a6f0 @ HAL_DISP_ClearIntStatus [R_ARM_JUMP24: .text+0x1bbb0] 
    VOU_DRV_LowBandwidth_x1a6f4:
    /*0001a6f4*/ MOVW        IP, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*0001a6f8*/ MOVT        IP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*0001a6fc*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001a700*/ SUB         SP, SP, #20 
    /*0001a704*/ LDR         LR, [IP, #120]              @ 0x78 
    /*0001a708*/ MOV         R1, #15 
    /*0001a70c*/ STR         R3, [SP, #4] 
    /*0001a710*/ MOVW        R2, #0                      @ .LC92 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8be0] 
    /*0001a714*/ ADD         LR, LR, #1 
    /*0001a718*/ MOVW        R3, #5095                   @ 0x13e7 
    /*0001a71c*/ MOVT        R2, #0                      @ .LC92 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8be0] 
    /*0001a720*/ STR         R3, [SP] 
    /*0001a724*/ STR         LR, [SP, #8] 
    /*0001a728*/ MOV         R0, #4 
    /*0001a72c*/ LDR         R3, [PC, #28]               @ 0x000000000001a750 
    /*0001a730*/ STR         LR, [IP, #120]              @ 0x78 
    /*0001a734*/ BL          0x000000000001A734          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a738*/ MOV         R0, #8 
    /*0001a73c*/ ADD         SP, SP, #20 
    /*0001a740*/ POP         {LR}                        @ (ldr lr, [sp], #4) 
    VOU_DRV_LowBandwidth_x1a744:
    /*0001a744*/ B           VOU_DRV_LowBandwidth_x1a744 @ HAL_DISP_ClearIntStatus [R_ARM_JUMP24: .text+0x1bbb0] 
    VOU_DRV_LowBandwidth_x1a748:
    /*0001a748*/ MOV         R0, #0 
    VOU_DRV_LowBandwidth_x1a74c:
    /*0001a74c*/ B           VOU_DRV_LowBandwidth_x1a74c @ HAL_DISP_ClearIntStatus [R_ARM_JUMP24: .text+0x1bbb0] 
    /*0001a750*/ ANDEQ       R1, R0, R4, RRX 
FUNC_END VOU_DRV_LowBandwidth


FUNC_BEGIN VO_DRV_BusErr
    /*0001a754*/ SUBS        R3, R0, #0 
    /*0001a758*/ BNE         VO_DRV_BusErr_x1a7c0
    /*0001a75c*/ ANDS        R0, R1, #4096               @ 0x1000 
    /*0001a760*/ BNE         VO_DRV_BusErr_x1a768
    VO_DRV_BusErr_x1a764:
    /*0001a764*/ B           VO_DRV_BusErr_x1a764        @ HAL_DISP_ClearIntStatus [R_ARM_JUMP24: .text+0x1bbb0] 
    VO_DRV_BusErr_x1a768:
    /*0001a768*/ MOVW        IP, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*0001a76c*/ MOVT        IP, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*0001a770*/ PUSH        {R4, R5, LR} 
    /*0001a774*/ SUB         SP, SP, #20 
    /*0001a778*/ LDRD        R4, [IP, #128]              @ 0x80 
    /*0001a77c*/ MOV         R1, #15 
    /*0001a780*/ STR         R3, [SP, #4] 
    /*0001a784*/ MOVW        R2, #0                      @ .LC93 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c1c] 
    /*0001a788*/ ADDS        R4, R4, #1 
    /*0001a78c*/ MOVW        R3, #5126                   @ 0x1406 
    /*0001a790*/ ADC         R5, R5, #0 
    /*0001a794*/ STR         R3, [SP] 
    /*0001a798*/ MOVT        R2, #0                      @ .LC93 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c1c] 
    /*0001a79c*/ LDR         R3, [PC, #36]               @ 0x000000000001a7c8 
    /*0001a7a0*/ STRD        R4, [SP, #8] 
    /*0001a7a4*/ MOV         R0, #4 
    /*0001a7a8*/ STRD        R4, [IP, #128]              @ 0x80 
    /*0001a7ac*/ BL          0x000000000001A7AC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001a7b0*/ MOV         R0, #4096                   @ 0x1000 
    /*0001a7b4*/ ADD         SP, SP, #20 
    /*0001a7b8*/ POP         {R4, R5, LR} 
    VO_DRV_BusErr_x1a7bc:
    /*0001a7bc*/ B           VO_DRV_BusErr_x1a7bc        @ HAL_DISP_ClearIntStatus [R_ARM_JUMP24: .text+0x1bbb0] 
    VO_DRV_BusErr_x1a7c0:
    /*0001a7c0*/ MOV         R0, #0 
    VO_DRV_BusErr_x1a7c4:
    /*0001a7c4*/ B           VO_DRV_BusErr_x1a7c4        @ HAL_DISP_ClearIntStatus [R_ARM_JUMP24: .text+0x1bbb0] 
    /*0001a7c8*/ ANDEQ       R1, R0, IP, ROR R0 
FUNC_END VO_DRV_BusErr


FUNC_BEGIN VOU_DRV_LBWShowProc
    /*0001a7cc*/ PUSH        {R4, LR} 
    /*0001a7d0*/ MOVW        R1, #0                      @ .LC94 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8c54] 
    /*0001a7d4*/ MOV         R4, R0 
    /*0001a7d8*/ MOVT        R1, #0                      @ .LC94 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8c54] 
    /*0001a7dc*/ BL          0x000000000001A7DC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001a7e0*/ MOV         R0, R4 
    /*0001a7e4*/ MOVW        R3, #0                      @ .LC95 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8cb4] 
    /*0001a7e8*/ MOVW        R2, #0                      @ .LC96 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8cc4] 
    /*0001a7ec*/ MOVT        R3, #0                      @ .LC95 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8cb4] 
    /*0001a7f0*/ MOVT        R2, #0                      @ .LC96 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8cc4] 
    /*0001a7f4*/ MOVW        R1, #0                      @ .LC97 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8ccc] 
    /*0001a7f8*/ MOVT        R1, #0                      @ .LC97 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8ccc] 
    /*0001a7fc*/ BL          0x000000000001A7FC          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001a800*/ MOVW        R3, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .bss+0x3488] 
    /*0001a804*/ MOVT        R3, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .bss+0x3488] 
    /*0001a808*/ LDR         R2, [R3, #20] 
    /*0001a80c*/ CMP         R2, #1 
    /*0001a810*/ BEQ         VOU_DRV_LBWShowProc_x1a828
    VOU_DRV_LBWShowProc_x1a814:
    /*0001a814*/ MOV         R0, R4 
    /*0001a818*/ MOVW        R1, #0                      @ .LC99 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8ce4] 
    /*0001a81c*/ POP         {R4, LR} 
    /*0001a820*/ MOVT        R1, #0                      @ .LC99 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8ce4] 
    VOU_DRV_LBWShowProc_x1a824:
    /*0001a824*/ B           VOU_DRV_LBWShowProc_x1a824  @ osal_seq_printf [R_ARM_JUMP24: +0x0] 
    VOU_DRV_LBWShowProc_x1a828:
    /*0001a828*/ LDR         R3, [R3, #120]              @ 0x78 
    /*0001a82c*/ MOVW        R1, #0                      @ .LC98 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8cd8] 
    /*0001a830*/ MOV         R2, #0 
    /*0001a834*/ MOVT        R1, #0                      @ .LC98 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8cd8] 
    /*0001a838*/ MOV         R0, R4 
    /*0001a83c*/ BL          0x000000000001A83C          @ osal_seq_printf [R_ARM_CALL: +0x0] 
    /*0001a840*/ B           VOU_DRV_LBWShowProc_x1a814
FUNC_END VOU_DRV_LBWShowProc


FUNC_BEGIN HAL_VOU_Init
    /*0001a844*/ PUSH        {R4, LR} 
    /*0001a848*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001a84c*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001a850*/ LDR         R3, [R4] 
    /*0001a854*/ CMP         R3, #0 
    /*0001a858*/ POPNE       {R4, PC} 
    /*0001a85c*/ MOV         R0, #0 
    /*0001a860*/ MOV         R1, #262144                 @ 0x40000 
    /*0001a864*/ MOVT        R0, #4420                   @ 0x1144 
    /*0001a868*/ BL          0x000000000001A868          @ osal_ioremap [R_ARM_CALL: +0x0] 
    /*0001a86c*/ CMP         R0, #0 
    /*0001a870*/ STR         R0, [R4] 
    /*0001a874*/ POPNE       {R4, PC} 
    /*0001a878*/ MOVW        R0, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8ce8] 
    /*0001a87c*/ MOVT        R0, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8ce8] 
    /*0001a880*/ POP         {R4, LR} 
    HAL_VOU_Init_x1a884:
    /*0001a884*/ B           HAL_VOU_Init_x1a884         @ osal_printk [R_ARM_JUMP24: +0x0] 
FUNC_END HAL_VOU_Init


FUNC_BEGIN HAL_VOU_Exit
    /*0001a888*/ BX          LR 
FUNC_END HAL_VOU_Exit


FUNC_BEGIN HAL_WriteReg
    /*0001a88c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001a890*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001a894*/ MOVW        IP, #8191                   @ 0x1fff 
    /*0001a898*/ MOVT        IP, #4421                   @ 0x1145 
    /*0001a89c*/ LDR         R3, [R3] 
    /*0001a8a0*/ SUB         R3, R0, R3 
    /*0001a8a4*/ ADD         R2, R3, #289406976          @ 0x11400000 
    /*0001a8a8*/ ADD         R2, R2, #262144             @ 0x40000 
    /*0001a8ac*/ CMP         R2, IP 
    /*0001a8b0*/ BLS         HAL_WriteReg_x1a8d0
    /*0001a8b4*/ MOVW        IP, #11263                  @ 0x2bff 
    /*0001a8b8*/ MOVT        IP, #4421                   @ 0x1145 
    /*0001a8bc*/ CMP         R2, IP 
    /*0001a8c0*/ BLS         HAL_WriteReg_x1a8d8
    /*0001a8c4*/ SUB         R3, R3, #76800              @ 0x12c00 
    /*0001a8c8*/ CMP         R3, #3072                   @ 0xc00 
    /*0001a8cc*/ BCC         HAL_WriteReg_x1a8f4
    HAL_WriteReg_x1a8d0:
    /*0001a8d0*/ STR         R1, [R0] 
    /*0001a8d4*/ BX          LR 
    HAL_WriteReg_x1a8d8:
    /*0001a8d8*/ MOVW        R2, #0                      @ gstVoCoefBufAddr [R_ARM_MOVW_ABS_NC: .bss+0x5d98] 
    /*0001a8dc*/ MOVT        R2, #0                      @ gstVoCoefBufAddr [R_ARM_MOVT_ABS: .bss+0x5d98] 
    /*0001a8e0*/ SUB         R3, R3, #73728              @ 0x12000 
    /*0001a8e4*/ LDR         R2, [R2, #68]               @ 0x44 
    /*0001a8e8*/ BIC         R3, R3, #3 
    /*0001a8ec*/ STR         R1, [R2, R3] 
    /*0001a8f0*/ BX          LR 
    HAL_WriteReg_x1a8f4:
    /*0001a8f4*/ MOVW        R2, #0                      @ gstVoCoefBufAddr [R_ARM_MOVW_ABS_NC: .bss+0x5d98] 
    /*0001a8f8*/ MOVT        R2, #0                      @ gstVoCoefBufAddr [R_ARM_MOVT_ABS: .bss+0x5d98] 
    /*0001a8fc*/ BIC         R3, R3, #3 
    /*0001a900*/ LDR         R2, [R2, #72]               @ 0x48 
    /*0001a904*/ STR         R1, [R2, R3] 
    /*0001a908*/ BX          LR 
FUNC_END HAL_WriteReg


FUNC_BEGIN HAL_ReadReg
    /*0001a90c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001a910*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001a914*/ MOVW        R1, #8191                   @ 0x1fff 
    /*0001a918*/ MOVT        R1, #4421                   @ 0x1145 
    /*0001a91c*/ LDR         R3, [R3] 
    /*0001a920*/ SUB         R3, R0, R3 
    /*0001a924*/ ADD         R2, R3, #289406976          @ 0x11400000 
    /*0001a928*/ ADD         R2, R2, #262144             @ 0x40000 
    /*0001a92c*/ CMP         R2, R1 
    /*0001a930*/ BLS         HAL_ReadReg_x1a950
    /*0001a934*/ MOVW        R1, #11263                  @ 0x2bff 
    /*0001a938*/ MOVT        R1, #4421                   @ 0x1145 
    /*0001a93c*/ CMP         R2, R1 
    /*0001a940*/ BLS         HAL_ReadReg_x1a958
    /*0001a944*/ SUB         R3, R3, #76800              @ 0x12c00 
    /*0001a948*/ CMP         R3, #3072                   @ 0xc00 
    /*0001a94c*/ BCC         HAL_ReadReg_x1a974
    HAL_ReadReg_x1a950:
    /*0001a950*/ LDR         R0, [R0] 
    /*0001a954*/ BX          LR 
    HAL_ReadReg_x1a958:
    /*0001a958*/ MOVW        R2, #0                      @ gstVoCoefBufAddr [R_ARM_MOVW_ABS_NC: .bss+0x5d98] 
    /*0001a95c*/ MOVT        R2, #0                      @ gstVoCoefBufAddr [R_ARM_MOVT_ABS: .bss+0x5d98] 
    /*0001a960*/ SUB         R3, R3, #73728              @ 0x12000 
    /*0001a964*/ LDR         R2, [R2, #68]               @ 0x44 
    /*0001a968*/ BIC         R3, R3, #3 
    /*0001a96c*/ LDR         R0, [R2, R3] 
    /*0001a970*/ BX          LR 
    HAL_ReadReg_x1a974:
    /*0001a974*/ MOVW        R2, #0                      @ gstVoCoefBufAddr [R_ARM_MOVW_ABS_NC: .bss+0x5d98] 
    /*0001a978*/ MOVT        R2, #0                      @ gstVoCoefBufAddr [R_ARM_MOVT_ABS: .bss+0x5d98] 
    /*0001a97c*/ BIC         R3, R3, #3 
    /*0001a980*/ LDR         R2, [R2, #72]               @ 0x48 
    /*0001a984*/ LDR         R0, [R2, R3] 
    /*0001a988*/ BX          LR 
FUNC_END HAL_ReadReg


FUNC_BEGIN Vou_GetAbsAddr
    /*0001a98c*/ CMP         R0, #0 
    /*0001a990*/ BEQ         Vou_GetAbsAddr_x1a99c
    /*0001a994*/ CMP         R0, #3 
    /*0001a998*/ BNE         Vou_GetAbsAddr_x1a9a4
    Vou_GetAbsAddr_x1a99c:
    /*0001a99c*/ MOV         R0, R1 
    /*0001a9a0*/ BX          LR 
    Vou_GetAbsAddr_x1a9a4:
    /*0001a9a4*/ MOV         R0, #0 
    /*0001a9a8*/ BX          LR 
FUNC_END Vou_GetAbsAddr


FUNC_BEGIN Vou_GetChnAbsAddr
    /*0001a9ac*/ CMP         R0, #1 
    /*0001a9b0*/ BHI         Vou_GetChnAbsAddr_x1a9cc
    /*0001a9b4*/ SUB         SP, SP, #8 
    /*0001a9b8*/ ADD         R1, R1, R0, LSL #12 
    /*0001a9bc*/ STR         R1, [SP, #4] 
    /*0001a9c0*/ LDR         R0, [SP, #4] 
    /*0001a9c4*/ ADD         SP, SP, #8 
    /*0001a9c8*/ BX          LR 
    Vou_GetChnAbsAddr_x1a9cc:
    /*0001a9cc*/ MOV         R0, #0 
    /*0001a9d0*/ BX          LR 
FUNC_END Vou_GetChnAbsAddr


FUNC_BEGIN Vou_GetHdmiOrMipiIntfAbsAddr
    /*0001a9d4*/ CMP         R0, #16384                  @ 0x4000 
    /*0001a9d8*/ SUB         SP, SP, #8 
    /*0001a9dc*/ BEQ         Vou_GetHdmiOrMipiIntfAbsAddr_x1a9fc
    /*0001a9e0*/ CMP         R0, #32768                  @ 0x8000 
    /*0001a9e4*/ BEQ         Vou_GetHdmiOrMipiIntfAbsAddr_x1a9fc
    /*0001a9e8*/ CMP         R0, #32 
    /*0001a9ec*/ MOVNE       R0, #0 
    /*0001a9f0*/ BEQ         Vou_GetHdmiOrMipiIntfAbsAddr_x1aa00
    /*0001a9f4*/ ADD         SP, SP, #8 
    /*0001a9f8*/ BX          LR 
    Vou_GetHdmiOrMipiIntfAbsAddr_x1a9fc:
    /*0001a9fc*/ ADD         R1, R1, #128                @ 0x80 
    Vou_GetHdmiOrMipiIntfAbsAddr_x1aa00:
    /*0001aa00*/ STR         R1, [SP, #4] 
    /*0001aa04*/ LDR         R0, [SP, #4] 
    /*0001aa08*/ ADD         SP, SP, #8 
    /*0001aa0c*/ BX          LR 
FUNC_END Vou_GetHdmiOrMipiIntfAbsAddr


FUNC_BEGIN Vou_GetIntfAbsAddr
    /*0001aa10*/ CMP         R0, #1024                   @ 0x400 
    /*0001aa14*/ SUB         SP, SP, #8 
    /*0001aa18*/ BEQ         Vou_GetIntfAbsAddr_x1aa58
    /*0001aa1c*/ BHI         Vou_GetIntfAbsAddr_x1aa6c
    /*0001aa20*/ CMP         R0, #32 
    /*0001aa24*/ BEQ         Vou_GetIntfAbsAddr_x1aa5c
    /*0001aa28*/ BHI         Vou_GetIntfAbsAddr_x1aa48
    /*0001aa2c*/ CMP         R0, #8 
    /*0001aa30*/ BEQ         Vou_GetIntfAbsAddr_x1aa3c
    /*0001aa34*/ CMP         R0, #16 
    /*0001aa38*/ BNE         Vou_GetIntfAbsAddr_x1aa88
    Vou_GetIntfAbsAddr_x1aa3c:
    /*0001aa3c*/ ADD         R1, R1, #256                @ 0x100 
    /*0001aa40*/ STR         R1, [SP, #4] 
    /*0001aa44*/ B           Vou_GetIntfAbsAddr_x1aa60
    Vou_GetIntfAbsAddr_x1aa48:
    /*0001aa48*/ CMP         R0, #64                     @ 0x40 
    /*0001aa4c*/ BEQ         Vou_GetIntfAbsAddr_x1aa58
    /*0001aa50*/ CMP         R0, #512                    @ 0x200 
    /*0001aa54*/ BNE         Vou_GetIntfAbsAddr_x1aa88
    Vou_GetIntfAbsAddr_x1aa58:
    /*0001aa58*/ ADD         R1, R1, #512                @ 0x200 
    Vou_GetIntfAbsAddr_x1aa5c:
    /*0001aa5c*/ STR         R1, [SP, #4] 
    Vou_GetIntfAbsAddr_x1aa60:
    /*0001aa60*/ LDR         R0, [SP, #4] 
    /*0001aa64*/ ADD         SP, SP, #8 
    /*0001aa68*/ BX          LR 
    Vou_GetIntfAbsAddr_x1aa6c:
    /*0001aa6c*/ CMP         R0, #8192                   @ 0x2000 
    /*0001aa70*/ BEQ         Vou_GetIntfAbsAddr_x1aa58
    /*0001aa74*/ BLS         Vou_GetIntfAbsAddr_x1aaa0
    /*0001aa78*/ CMP         R0, #16384                  @ 0x4000 
    /*0001aa7c*/ BEQ         Vou_GetIntfAbsAddr_x1aa94
    /*0001aa80*/ CMP         R0, #32768                  @ 0x8000 
    /*0001aa84*/ BEQ         Vou_GetIntfAbsAddr_x1aa94
    Vou_GetIntfAbsAddr_x1aa88:
    /*0001aa88*/ MOV         R0, #0 
    /*0001aa8c*/ ADD         SP, SP, #8 
    /*0001aa90*/ BX          LR 
    Vou_GetIntfAbsAddr_x1aa94:
    /*0001aa94*/ ADD         R1, R1, #128                @ 0x80 
    /*0001aa98*/ STR         R1, [SP, #4] 
    /*0001aa9c*/ B           Vou_GetIntfAbsAddr_x1aa60
    Vou_GetIntfAbsAddr_x1aaa0:
    /*0001aaa0*/ CMP         R0, #2048                   @ 0x800 
    /*0001aaa4*/ BEQ         Vou_GetIntfAbsAddr_x1aa58
    /*0001aaa8*/ CMP         R0, #4096                   @ 0x1000 
    /*0001aaac*/ BNE         Vou_GetIntfAbsAddr_x1aa88
    /*0001aab0*/ B           Vou_GetIntfAbsAddr_x1aa58
FUNC_END Vou_GetIntfAbsAddr


FUNC_BEGIN Vou_GetVidAbsAddr
    /*0001aab4*/ CMP         R0, #0 
    /*0001aab8*/ BNE         Vou_GetVidAbsAddr_x1aad0
    /*0001aabc*/ SUB         SP, SP, #8 
    /*0001aac0*/ STR         R1, [SP, #4] 
    /*0001aac4*/ LDR         R0, [SP, #4] 
    /*0001aac8*/ ADD         SP, SP, #8 
    /*0001aacc*/ BX          LR 
    Vou_GetVidAbsAddr_x1aad0:
    /*0001aad0*/ MOV         R0, #0 
    /*0001aad4*/ BX          LR 
FUNC_END Vou_GetVidAbsAddr


FUNC_BEGIN Vou_GetGfxAbsAddr
    /*0001aad8*/ CMP         R0, #6 
    /*0001aadc*/ BHI         Vou_GetGfxAbsAddr_x1aaf0
    /*0001aae0*/ MOV         R3, #1 
    /*0001aae4*/ LSL         R3, R3, R0 
    /*0001aae8*/ ANDS        R3, R3, #88                 @ 0x58 
    /*0001aaec*/ BNE         Vou_GetGfxAbsAddr_x1aaf8
    Vou_GetGfxAbsAddr_x1aaf0:
    /*0001aaf0*/ MOV         R0, #0 
    /*0001aaf4*/ BX          LR 
    Vou_GetGfxAbsAddr_x1aaf8:
    /*0001aaf8*/ SUB         SP, SP, #8 
    /*0001aafc*/ SUB         R0, R0, #3 
    /*0001ab00*/ ADD         R0, R1, R0, LSL #9 
    /*0001ab04*/ STR         R0, [SP, #4] 
    /*0001ab08*/ LDR         R0, [SP, #4] 
    /*0001ab0c*/ ADD         SP, SP, #8 
    /*0001ab10*/ BX          LR 
FUNC_END Vou_GetGfxAbsAddr


FUNC_BEGIN HAL_GetBkg_BUMA
    /*0001ab14*/ LSL         R0, R0, #2 
    /*0001ab18*/ BX          LR 
FUNC_END HAL_GetBkg_BUMA


FUNC_BEGIN HAL_SYS_SetOutstanding
    /*0001ab1c*/ PUSH        {R4, LR} 
    /*0001ab20*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ab24*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ab28*/ SUB         SP, SP, #8 
    /*0001ab2c*/ LDR         R0, [R4] 
    /*0001ab30*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001ab34*/ BL          0x000000000001AB34          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ab38*/ MOV         IP, #4 
    /*0001ab3c*/ MOV         R1, #7 
    /*0001ab40*/ MOV         R2, #3 
    /*0001ab44*/ STR         R0, [SP, #4] 
    /*0001ab48*/ LDR         R3, [SP, #4] 
    /*0001ab4c*/ LDR         R0, [R4] 
    /*0001ab50*/ ORR         R3, R3, #15 
    /*0001ab54*/ STR         R3, [SP, #4] 
    /*0001ab58*/ LDR         R3, [SP, #4] 
    /*0001ab5c*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001ab60*/ BFI         R3, IP, #4, #4 
    /*0001ab64*/ STR         R3, [SP, #4] 
    /*0001ab68*/ LDR         R3, [SP, #4] 
    /*0001ab6c*/ BFI         R3, R1, #8, #4 
    /*0001ab70*/ STR         R3, [SP, #4] 
    /*0001ab74*/ LDR         R3, [SP, #4] 
    /*0001ab78*/ BFI         R3, R1, #12, #4 
    /*0001ab7c*/ STR         R3, [SP, #4] 
    /*0001ab80*/ LDR         R3, [SP, #4] 
    /*0001ab84*/ BFI         R3, R2, #16, #4 
    /*0001ab88*/ STR         R3, [SP, #4] 
    /*0001ab8c*/ LDR         R3, [SP, #4] 
    /*0001ab90*/ BFI         R3, R2, #20, #4 
    /*0001ab94*/ STR         R3, [SP, #4] 
    /*0001ab98*/ LDR         R1, [SP, #4] 
    /*0001ab9c*/ BL          0x000000000001AB9C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001aba0*/ ADD         SP, SP, #8 
    /*0001aba4*/ POP         {R4, PC} 
FUNC_END HAL_SYS_SetOutstanding


FUNC_BEGIN HAL_SYS_SetRdBusId
    /*0001aba8*/ BX          LR 
FUNC_END HAL_SYS_SetRdBusId


FUNC_BEGIN HAL_DISP_SetIntfEnable
    /*0001abac*/ CMP         R0, #1 
    /*0001abb0*/ BHI         HAL_DISP_SetIntfEnable_x1ac10
    /*0001abb4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001abb8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001abbc*/ PUSH        {R4, LR} 
    /*0001abc0*/ SUB         SP, SP, #16 
    /*0001abc4*/ LDR         R3, [R3] 
    /*0001abc8*/ MOV         R4, R1 
    /*0001abcc*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001abd0*/ ADD         R0, R3, R0, LSL #12 
    /*0001abd4*/ STR         R0, [SP, #12] 
    /*0001abd8*/ LDR         R3, [SP, #12] 
    /*0001abdc*/ STR         R3, [SP, #8] 
    /*0001abe0*/ LDR         R0, [SP, #8] 
    /*0001abe4*/ BL          0x000000000001ABE4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001abe8*/ STR         R0, [SP, #4] 
    /*0001abec*/ LDR         R3, [SP, #4] 
    /*0001abf0*/ BFI         R3, R4, #31, #1 
    /*0001abf4*/ STR         R3, [SP, #4] 
    /*0001abf8*/ LDR         R0, [SP, #8] 
    /*0001abfc*/ LDR         R1, [SP, #4] 
    /*0001ac00*/ BL          0x000000000001AC00          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001ac04*/ MOV         R0, #1 
    /*0001ac08*/ ADD         SP, SP, #16 
    /*0001ac0c*/ POP         {R4, PC} 
    HAL_DISP_SetIntfEnable_x1ac10:
    /*0001ac10*/ MOV         R0, #0 
    /*0001ac14*/ BX          LR 
FUNC_END HAL_DISP_SetIntfEnable


FUNC_BEGIN HAL_DISP_GetIntfEnable
    /*0001ac18*/ CMP         R0, #1 
    /*0001ac1c*/ BHI         HAL_DISP_GetIntfEnable_x1ac70
    /*0001ac20*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ac24*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ac28*/ PUSH        {R4, LR} 
    /*0001ac2c*/ SUB         SP, SP, #16 
    /*0001ac30*/ LDR         R3, [R3] 
    /*0001ac34*/ MOV         R4, R1 
    /*0001ac38*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001ac3c*/ ADD         R0, R3, R0, LSL #12 
    /*0001ac40*/ STR         R0, [SP, #12] 
    /*0001ac44*/ LDR         R3, [SP, #12] 
    /*0001ac48*/ STR         R3, [SP, #8] 
    /*0001ac4c*/ LDR         R0, [SP, #8] 
    /*0001ac50*/ BL          0x000000000001AC50          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ac54*/ STR         R0, [SP, #4] 
    /*0001ac58*/ MOV         R0, #1 
    /*0001ac5c*/ LDR         R3, [SP, #4] 
    /*0001ac60*/ LSR         R3, R3, #31 
    /*0001ac64*/ STR         R3, [R4] 
    /*0001ac68*/ ADD         SP, SP, #16 
    /*0001ac6c*/ POP         {R4, PC} 
    HAL_DISP_GetIntfEnable_x1ac70:
    /*0001ac70*/ MOV         R0, #0 
    /*0001ac74*/ BX          LR 
FUNC_END HAL_DISP_GetIntfEnable


FUNC_BEGIN HAL_DISP_GetIntState
    /*0001ac78*/ CMP         R0, #1 
    /*0001ac7c*/ BHI         HAL_DISP_GetIntState_x1acd4
    /*0001ac80*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ac84*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ac88*/ PUSH        {R4, LR} 
    /*0001ac8c*/ SUB         SP, SP, #16 
    /*0001ac90*/ LDR         R3, [R3] 
    /*0001ac94*/ MOV         R4, R1 
    /*0001ac98*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001ac9c*/ ADD         R3, R3, #136                @ 0x88 
    /*0001aca0*/ ADD         R3, R3, R0, LSL #12 
    /*0001aca4*/ STR         R3, [SP, #12] 
    /*0001aca8*/ LDR         R3, [SP, #12] 
    /*0001acac*/ STR         R3, [SP, #8] 
    /*0001acb0*/ LDR         R0, [SP, #8] 
    /*0001acb4*/ BL          0x000000000001ACB4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001acb8*/ STR         R0, [SP, #4] 
    /*0001acbc*/ MOV         R0, #1 
    /*0001acc0*/ LDR         R3, [SP, #4] 
    /*0001acc4*/ UBFX        R3, R3, #2, #1 
    /*0001acc8*/ STR         R3, [R4] 
    /*0001accc*/ ADD         SP, SP, #16 
    /*0001acd0*/ POP         {R4, PC} 
    HAL_DISP_GetIntState_x1acd4:
    /*0001acd4*/ MOV         R0, #0 
    /*0001acd8*/ BX          LR 
FUNC_END HAL_DISP_GetIntState


FUNC_BEGIN HAL_DISP_GetIntStateVblank
    /*0001acdc*/ CMP         R0, #1 
    /*0001ace0*/ BLS         HAL_DISP_GetIntStateVblank_x1acec
    /*0001ace4*/ MOV         R0, #0 
    /*0001ace8*/ BX          LR 
    HAL_DISP_GetIntStateVblank_x1acec:
    /*0001acec*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001acf0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001acf4*/ PUSH        {R4, LR} 
    /*0001acf8*/ SUB         SP, SP, #16 
    /*0001acfc*/ LDR         R3, [R3] 
    /*0001ad00*/ MOV         R4, R1 
    /*0001ad04*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001ad08*/ ADD         R3, R3, #136                @ 0x88 
    /*0001ad0c*/ ADD         R0, R3, R0, LSL #12 
    /*0001ad10*/ STR         R0, [SP, #12] 
    /*0001ad14*/ LDR         R3, [SP, #12] 
    /*0001ad18*/ STR         R3, [SP, #8] 
    /*0001ad1c*/ LDR         R0, [SP, #8] 
    /*0001ad20*/ BL          0x000000000001AD20          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ad24*/ STR         R0, [SP, #4] 
    /*0001ad28*/ MOV         R0, #1 
    /*0001ad2c*/ LDR         R3, [SP, #4] 
    /*0001ad30*/ UBFX        R3, R3, #1, #1 
    /*0001ad34*/ STR         R3, [R4] 
    /*0001ad38*/ ADD         SP, SP, #16 
    /*0001ad3c*/ POP         {R4, PC} 
FUNC_END HAL_DISP_GetIntStateVblank


FUNC_BEGIN HAL_DISP_GetIntStateVbackBlank
    /*0001ad40*/ CMP         R0, #1 
    /*0001ad44*/ BLS         HAL_DISP_GetIntStateVbackBlank_x1ad50
    /*0001ad48*/ MOV         R0, #0 
    /*0001ad4c*/ BX          LR 
    HAL_DISP_GetIntStateVbackBlank_x1ad50:
    /*0001ad50*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ad54*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ad58*/ PUSH        {R4, LR} 
    /*0001ad5c*/ SUB         SP, SP, #16 
    /*0001ad60*/ LDR         R3, [R3] 
    /*0001ad64*/ MOV         R4, R1 
    /*0001ad68*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001ad6c*/ ADD         R3, R3, #136                @ 0x88 
    /*0001ad70*/ ADD         R0, R3, R0, LSL #12 
    /*0001ad74*/ STR         R0, [SP, #12] 
    /*0001ad78*/ LDR         R3, [SP, #12] 
    /*0001ad7c*/ STR         R3, [SP, #8] 
    /*0001ad80*/ LDR         R0, [SP, #8] 
    /*0001ad84*/ BL          0x000000000001AD84          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ad88*/ STR         R0, [SP, #4] 
    /*0001ad8c*/ MOV         R0, #1 
    /*0001ad90*/ LDR         R3, [SP, #4] 
    /*0001ad94*/ AND         R3, R3, R0 
    /*0001ad98*/ STR         R3, [R4] 
    /*0001ad9c*/ ADD         SP, SP, #16 
    /*0001ada0*/ POP         {R4, PC} 
FUNC_END HAL_DISP_GetIntStateVbackBlank


FUNC_BEGIN HAL_DISP_GetIntStateVcnt
    /*0001ada4*/ CMP         R0, #1 
    /*0001ada8*/ BLS         HAL_DISP_GetIntStateVcnt_x1adb4
    /*0001adac*/ MOV         R0, #0 
    /*0001adb0*/ BX          LR 
    HAL_DISP_GetIntStateVcnt_x1adb4:
    /*0001adb4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001adb8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001adbc*/ PUSH        {R4, LR} 
    /*0001adc0*/ SUB         SP, SP, #16 
    /*0001adc4*/ LDR         R3, [R3] 
    /*0001adc8*/ MOV         R4, R1 
    /*0001adcc*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001add0*/ ADD         R3, R3, #136                @ 0x88 
    /*0001add4*/ ADD         R0, R3, R0, LSL #12 
    /*0001add8*/ STR         R0, [SP, #12] 
    /*0001addc*/ LDR         R3, [SP, #12] 
    /*0001ade0*/ STR         R3, [SP, #8] 
    /*0001ade4*/ LDR         R0, [SP, #8] 
    /*0001ade8*/ BL          0x000000000001ADE8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001adec*/ STR         R0, [SP, #4] 
    /*0001adf0*/ MOV         R0, #1 
    /*0001adf4*/ LDR         R3, [SP, #4] 
    /*0001adf8*/ UBFX        R3, R3, #3, #13 
    /*0001adfc*/ STR         R3, [R4] 
    /*0001ae00*/ ADD         SP, SP, #16 
    /*0001ae04*/ POP         {R4, PC} 
FUNC_END HAL_DISP_GetIntStateVcnt


FUNC_BEGIN HAL_DISP_GetIntStateVfb
    /*0001ae08*/ CMP         R0, #1 
    /*0001ae0c*/ BLS         HAL_DISP_GetIntStateVfb_x1ae18
    /*0001ae10*/ MOV         R0, #0 
    /*0001ae14*/ BX          LR 
    HAL_DISP_GetIntStateVfb_x1ae18:
    /*0001ae18*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ae1c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ae20*/ PUSH        {R4, LR} 
    /*0001ae24*/ SUB         SP, SP, #16 
    /*0001ae28*/ LDR         R3, [R3] 
    /*0001ae2c*/ MOV         R4, R1 
    /*0001ae30*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001ae34*/ ADD         R3, R3, #8 
    /*0001ae38*/ ADD         R0, R3, R0, LSL #12 
    /*0001ae3c*/ STR         R0, [SP, #12] 
    /*0001ae40*/ LDR         R3, [SP, #12] 
    /*0001ae44*/ STR         R3, [SP, #8] 
    /*0001ae48*/ LDR         R0, [SP, #8] 
    /*0001ae4c*/ BL          0x000000000001AE4C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ae50*/ STR         R0, [SP, #4] 
    /*0001ae54*/ MOV         R0, #1 
    /*0001ae58*/ LDR         R3, [SP, #4] 
    /*0001ae5c*/ UXTH        R3, R3 
    /*0001ae60*/ STR         R3, [R4] 
    /*0001ae64*/ ADD         SP, SP, #16 
    /*0001ae68*/ POP         {R4, PC} 
FUNC_END HAL_DISP_GetIntStateVfb


FUNC_BEGIN HAL_DISP_GetIntStateVbb
    /*0001ae6c*/ CMP         R0, #1 
    /*0001ae70*/ BLS         HAL_DISP_GetIntStateVbb_x1ae7c
    /*0001ae74*/ MOV         R0, #0 
    /*0001ae78*/ BX          LR 
    HAL_DISP_GetIntStateVbb_x1ae7c:
    /*0001ae7c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ae80*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ae84*/ PUSH        {R4, LR} 
    /*0001ae88*/ SUB         SP, SP, #16 
    /*0001ae8c*/ LDR         R3, [R3] 
    /*0001ae90*/ MOV         R4, R1 
    /*0001ae94*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001ae98*/ ADD         R3, R3, #4 
    /*0001ae9c*/ ADD         R0, R3, R0, LSL #12 
    /*0001aea0*/ STR         R0, [SP, #12] 
    /*0001aea4*/ LDR         R3, [SP, #12] 
    /*0001aea8*/ STR         R3, [SP, #8] 
    /*0001aeac*/ LDR         R0, [SP, #8] 
    /*0001aeb0*/ BL          0x000000000001AEB0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001aeb4*/ STR         R0, [SP, #4] 
    /*0001aeb8*/ MOV         R0, #1 
    /*0001aebc*/ LDR         R3, [SP, #4] 
    /*0001aec0*/ LSR         R3, R3, #16 
    /*0001aec4*/ STR         R3, [R4] 
    /*0001aec8*/ ADD         SP, SP, #16 
    /*0001aecc*/ POP         {R4, PC} 
FUNC_END HAL_DISP_GetIntStateVbb


FUNC_BEGIN HAL_DISP_GetIntStateHbb
    /*0001aed0*/ CMP         R0, #1 
    /*0001aed4*/ BLS         HAL_DISP_GetIntStateHbb_x1aee0
    /*0001aed8*/ MOV         R0, #0 
    /*0001aedc*/ BX          LR 
    HAL_DISP_GetIntStateHbb_x1aee0:
    /*0001aee0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001aee4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001aee8*/ PUSH        {R4, LR} 
    /*0001aeec*/ SUB         SP, SP, #16 
    /*0001aef0*/ LDR         R3, [R3] 
    /*0001aef4*/ MOV         R4, R1 
    /*0001aef8*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001aefc*/ ADD         R3, R3, #12 
    /*0001af00*/ ADD         R0, R3, R0, LSL #12 
    /*0001af04*/ STR         R0, [SP, #12] 
    /*0001af08*/ LDR         R3, [SP, #12] 
    /*0001af0c*/ STR         R3, [SP, #8] 
    /*0001af10*/ LDR         R0, [SP, #8] 
    /*0001af14*/ BL          0x000000000001AF14          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001af18*/ STR         R0, [SP, #4] 
    /*0001af1c*/ MOV         R0, #1 
    /*0001af20*/ LDR         R3, [SP, #4] 
    /*0001af24*/ LSR         R3, R3, #16 
    /*0001af28*/ STR         R3, [R4] 
    /*0001af2c*/ ADD         SP, SP, #16 
    /*0001af30*/ POP         {R4, PC} 
FUNC_END HAL_DISP_GetIntStateHbb


FUNC_BEGIN HAL_DISP_GetIntStateHfb
    /*0001af34*/ CMP         R0, #1 
    /*0001af38*/ BLS         HAL_DISP_GetIntStateHfb_x1af44
    /*0001af3c*/ MOV         R0, #0 
    /*0001af40*/ BX          LR 
    HAL_DISP_GetIntStateHfb_x1af44:
    /*0001af44*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001af48*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001af4c*/ PUSH        {R4, LR} 
    /*0001af50*/ SUB         SP, SP, #16 
    /*0001af54*/ LDR         R3, [R3] 
    /*0001af58*/ MOV         R4, R1 
    /*0001af5c*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001af60*/ ADD         R3, R3, #16 
    /*0001af64*/ ADD         R0, R3, R0, LSL #12 
    /*0001af68*/ STR         R0, [SP, #12] 
    /*0001af6c*/ LDR         R3, [SP, #12] 
    /*0001af70*/ STR         R3, [SP, #8] 
    /*0001af74*/ LDR         R0, [SP, #8] 
    /*0001af78*/ BL          0x000000000001AF78          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001af7c*/ STR         R0, [SP, #4] 
    /*0001af80*/ MOV         R0, #1 
    /*0001af84*/ LDR         R3, [SP, #4] 
    /*0001af88*/ UXTH        R3, R3 
    /*0001af8c*/ STR         R3, [R4] 
    /*0001af90*/ ADD         SP, SP, #16 
    /*0001af94*/ POP         {R4, PC} 
FUNC_END HAL_DISP_GetIntStateHfb


FUNC_BEGIN HAL_DISP_GetIntStateHact
    /*0001af98*/ CMP         R0, #1 
    /*0001af9c*/ BLS         HAL_DISP_GetIntStateHact_x1afa8
    /*0001afa0*/ MOV         R0, #0 
    /*0001afa4*/ BX          LR 
    HAL_DISP_GetIntStateHact_x1afa8:
    /*0001afa8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001afac*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001afb0*/ PUSH        {R4, LR} 
    /*0001afb4*/ SUB         SP, SP, #16 
    /*0001afb8*/ LDR         R3, [R3] 
    /*0001afbc*/ MOV         R4, R1 
    /*0001afc0*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001afc4*/ ADD         R3, R3, #12 
    /*0001afc8*/ ADD         R0, R3, R0, LSL #12 
    /*0001afcc*/ STR         R0, [SP, #12] 
    /*0001afd0*/ LDR         R3, [SP, #12] 
    /*0001afd4*/ STR         R3, [SP, #8] 
    /*0001afd8*/ LDR         R0, [SP, #8] 
    /*0001afdc*/ BL          0x000000000001AFDC          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001afe0*/ STR         R0, [SP, #4] 
    /*0001afe4*/ MOV         R0, #1 
    /*0001afe8*/ LDR         R3, [SP, #4] 
    /*0001afec*/ UXTH        R3, R3 
    /*0001aff0*/ STR         R3, [R4] 
    /*0001aff4*/ ADD         SP, SP, #16 
    /*0001aff8*/ POP         {R4, PC} 
FUNC_END HAL_DISP_GetIntStateHact


FUNC_BEGIN HAL_DISP_SetIntfSync
    /*0001affc*/ CMP         R0, #1 
    /*0001b000*/ BHI         HAL_DISP_SetIntfSync_x1b330
    /*0001b004*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001b008*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001b00c*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001b010*/ SUB         SP, SP, #76                 @ 0x4c 
    /*0001b014*/ LSL         R5, R0, #12 
    /*0001b018*/ MOV         R4, R1 
    /*0001b01c*/ LDR         R3, [R6] 
    /*0001b020*/ MOV         R7, R2 
    /*0001b024*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001b028*/ ADD         R3, R3, R5 
    /*0001b02c*/ STR         R3, [SP, #48]               @ 0x30 
    /*0001b030*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0001b034*/ STR         R3, [SP, #36]               @ 0x24 
    /*0001b038*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001b03c*/ BL          0x000000000001B03C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b040*/ LDR         R1, [R4, #4] 
    /*0001b044*/ LDR         R2, [R7, #8] 
    /*0001b048*/ STR         R0, [SP, #4] 
    /*0001b04c*/ LDR         R3, [SP, #4] 
    /*0001b050*/ BFI         R3, R1, #4, #1 
    /*0001b054*/ STR         R3, [SP, #4] 
    /*0001b058*/ LDR         R3, [SP, #4] 
    /*0001b05c*/ LDR         R1, [R7, #4] 
    /*0001b060*/ BFI         R3, R2, #6, #1 
    /*0001b064*/ STR         R3, [SP, #4] 
    /*0001b068*/ LDR         R3, [SP, #4] 
    /*0001b06c*/ LDR         R2, [R7, #12] 
    /*0001b070*/ BFI         R3, R1, #5, #1 
    /*0001b074*/ STR         R3, [SP, #4] 
    /*0001b078*/ LDR         R3, [SP, #4] 
    /*0001b07c*/ BFI         R3, R2, #7, #1 
    /*0001b080*/ STR         R3, [SP, #4] 
    /*0001b084*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001b088*/ LDR         R1, [SP, #4] 
    /*0001b08c*/ BL          0x000000000001B08C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001b090*/ LDR         R3, [R6] 
    /*0001b094*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001b098*/ ADD         R3, R3, #12 
    /*0001b09c*/ ADD         R3, R3, R5 
    /*0001b0a0*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0001b0a4*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0001b0a8*/ STR         R3, [SP, #36]               @ 0x24 
    /*0001b0ac*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001b0b0*/ BL          0x000000000001B0B0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b0b4*/ LDRH        R2, [R4, #16] 
    /*0001b0b8*/ LDRH        R3, [R4, #18] 
    /*0001b0bc*/ SUB         R2, R2, #1 
    /*0001b0c0*/ SUB         R3, R3, #1 
    /*0001b0c4*/ UXTH        R2, R2 
    /*0001b0c8*/ UXTH        R3, R3 
    /*0001b0cc*/ STR         R0, [SP, #16] 
    /*0001b0d0*/ LDR         R1, [SP, #16] 
    /*0001b0d4*/ BFI         R1, R2, #0, #16 
    /*0001b0d8*/ STR         R1, [SP, #16] 
    /*0001b0dc*/ LDR         R2, [SP, #16] 
    /*0001b0e0*/ BFI         R2, R3, #16, #16 
    /*0001b0e4*/ STR         R2, [SP, #16] 
    /*0001b0e8*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001b0ec*/ LDR         R1, [SP, #16] 
    /*0001b0f0*/ BL          0x000000000001B0F0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001b0f4*/ LDR         R3, [R6] 
    /*0001b0f8*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001b0fc*/ ADD         R3, R3, #16 
    /*0001b100*/ ADD         R3, R3, R5 
    /*0001b104*/ STR         R3, [SP, #40]               @ 0x28 
    /*0001b108*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0001b10c*/ STR         R3, [SP, #36]               @ 0x24 
    /*0001b110*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001b114*/ BL          0x000000000001B114          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b118*/ LDRH        R3, [R4, #22] 
    /*0001b11c*/ CMP         R3, #0 
    /*0001b120*/ SUBNE       R3, R3, #1 
    /*0001b124*/ MOVEQ       R2, R3 
    /*0001b128*/ UXTHNE      R2, R3 
    /*0001b12c*/ LDRH        R3, [R4, #20] 
    /*0001b130*/ SUB         R3, R3, #1 
    /*0001b134*/ UXTH        R3, R3 
    /*0001b138*/ STR         R0, [SP, #20] 
    /*0001b13c*/ LDR         R1, [SP, #20] 
    /*0001b140*/ BFI         R1, R2, #16, #16 
    /*0001b144*/ STR         R1, [SP, #20] 
    /*0001b148*/ LDR         R2, [SP, #20] 
    /*0001b14c*/ BFI         R2, R3, #0, #16 
    /*0001b150*/ STR         R2, [SP, #20] 
    /*0001b154*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001b158*/ LDR         R1, [SP, #20] 
    /*0001b15c*/ BL          0x000000000001B15C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001b160*/ LDR         R3, [R6] 
    /*0001b164*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001b168*/ ADD         R3, R3, #4 
    /*0001b16c*/ ADD         R3, R3, R5 
    /*0001b170*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001b174*/ LDR         R3, [SP, #68]               @ 0x44 
    /*0001b178*/ STR         R3, [SP, #36]               @ 0x24 
    /*0001b17c*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001b180*/ BL          0x000000000001B180          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b184*/ LDRH        R2, [R4, #10] 
    /*0001b188*/ LDRH        R3, [R4, #12] 
    /*0001b18c*/ SUB         R2, R2, #1 
    /*0001b190*/ SUB         R3, R3, #1 
    /*0001b194*/ UXTH        R2, R2 
    /*0001b198*/ UXTH        R3, R3 
    /*0001b19c*/ STR         R0, [SP, #8] 
    /*0001b1a0*/ LDR         R1, [SP, #8] 
    /*0001b1a4*/ BFI         R1, R2, #0, #16 
    /*0001b1a8*/ STR         R1, [SP, #8] 
    /*0001b1ac*/ LDR         R2, [SP, #8] 
    /*0001b1b0*/ BFI         R2, R3, #16, #16 
    /*0001b1b4*/ STR         R2, [SP, #8] 
    /*0001b1b8*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001b1bc*/ LDR         R1, [SP, #8] 
    /*0001b1c0*/ BL          0x000000000001B1C0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001b1c4*/ LDR         R3, [R6] 
    /*0001b1c8*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001b1cc*/ ADD         R3, R3, #8 
    /*0001b1d0*/ ADD         R3, R3, R5 
    /*0001b1d4*/ STR         R3, [SP, #64]               @ 0x40 
    /*0001b1d8*/ LDR         R3, [SP, #64]               @ 0x40 
    /*0001b1dc*/ STR         R3, [SP, #36]               @ 0x24 
    /*0001b1e0*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001b1e4*/ BL          0x000000000001B1E4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b1e8*/ LDRH        R3, [R4, #14] 
    /*0001b1ec*/ SUB         R3, R3, #1 
    /*0001b1f0*/ UXTH        R3, R3 
    /*0001b1f4*/ STR         R0, [SP, #12] 
    /*0001b1f8*/ LDR         R2, [SP, #12] 
    /*0001b1fc*/ BFI         R2, R3, #0, #16 
    /*0001b200*/ STR         R2, [SP, #12] 
    /*0001b204*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001b208*/ LDR         R1, [SP, #12] 
    /*0001b20c*/ BL          0x000000000001B20C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001b210*/ LDR         R3, [R6] 
    /*0001b214*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001b218*/ ADD         R3, R3, #20 
    /*0001b21c*/ ADD         R3, R3, R5 
    /*0001b220*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0001b224*/ LDR         R3, [SP, #60]               @ 0x3c 
    /*0001b228*/ STR         R3, [SP, #36]               @ 0x24 
    /*0001b22c*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001b230*/ BL          0x000000000001B230          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b234*/ LDRH        R2, [R4, #24] 
    /*0001b238*/ LDRH        R3, [R4, #26] 
    /*0001b23c*/ SUB         R2, R2, #1 
    /*0001b240*/ SUB         R3, R3, #1 
    /*0001b244*/ UXTH        R2, R2 
    /*0001b248*/ UXTH        R3, R3 
    /*0001b24c*/ STR         R0, [SP, #24] 
    /*0001b250*/ LDR         R1, [SP, #24] 
    /*0001b254*/ BFI         R1, R2, #0, #16 
    /*0001b258*/ STR         R1, [SP, #24] 
    /*0001b25c*/ LDR         R2, [SP, #24] 
    /*0001b260*/ BFI         R2, R3, #16, #16 
    /*0001b264*/ STR         R2, [SP, #24] 
    /*0001b268*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001b26c*/ LDR         R1, [SP, #24] 
    /*0001b270*/ BL          0x000000000001B270          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001b274*/ LDR         R3, [R6] 
    /*0001b278*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001b27c*/ ADD         R3, R3, #24 
    /*0001b280*/ ADD         R3, R3, R5 
    /*0001b284*/ STR         R3, [SP, #56]               @ 0x38 
    /*0001b288*/ LDR         R3, [SP, #56]               @ 0x38 
    /*0001b28c*/ STR         R3, [SP, #36]               @ 0x24 
    /*0001b290*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001b294*/ BL          0x000000000001B294          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b298*/ LDRH        R3, [R4, #28] 
    /*0001b29c*/ SUB         R3, R3, #1 
    /*0001b2a0*/ UXTH        R3, R3 
    /*0001b2a4*/ STR         R0, [SP, #28] 
    /*0001b2a8*/ LDR         R2, [SP, #28] 
    /*0001b2ac*/ BFI         R2, R3, #0, #16 
    /*0001b2b0*/ STR         R2, [SP, #28] 
    /*0001b2b4*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001b2b8*/ LDR         R1, [SP, #28] 
    /*0001b2bc*/ BL          0x000000000001B2BC          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001b2c0*/ LDR         R0, [R6] 
    /*0001b2c4*/ ADD         R0, R0, #53248              @ 0xd000 
    /*0001b2c8*/ ADD         R0, R0, #28 
    /*0001b2cc*/ ADD         R5, R0, R5 
    /*0001b2d0*/ STR         R5, [SP, #52]               @ 0x34 
    /*0001b2d4*/ LDR         R3, [SP, #52]               @ 0x34 
    /*0001b2d8*/ STR         R3, [SP, #36]               @ 0x24 
    /*0001b2dc*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001b2e0*/ BL          0x000000000001B2E0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b2e4*/ LDRH        R2, [R4, #30] 
    /*0001b2e8*/ LDRH        R3, [R4, #32] 
    /*0001b2ec*/ SUB         R2, R2, #1 
    /*0001b2f0*/ SUB         R3, R3, #1 
    /*0001b2f4*/ UXTH        R2, R2 
    /*0001b2f8*/ UXTB        R3, R3 
    /*0001b2fc*/ STR         R0, [SP, #32] 
    /*0001b300*/ LDR         R1, [SP, #32] 
    /*0001b304*/ BFI         R1, R2, #0, #16 
    /*0001b308*/ STR         R1, [SP, #32] 
    /*0001b30c*/ LDR         R2, [SP, #32] 
    /*0001b310*/ BFI         R2, R3, #16, #8 
    /*0001b314*/ STR         R2, [SP, #32] 
    /*0001b318*/ LDR         R0, [SP, #36]               @ 0x24 
    /*0001b31c*/ LDR         R1, [SP, #32] 
    /*0001b320*/ BL          0x000000000001B320          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001b324*/ MOV         R0, #1 
    /*0001b328*/ ADD         SP, SP, #76                 @ 0x4c 
    /*0001b32c*/ POP         {R4, R5, R6, R7, PC} 
    HAL_DISP_SetIntfSync_x1b330:
    /*0001b330*/ MOV         R0, #0 
    /*0001b334*/ BX          LR 
FUNC_END HAL_DISP_SetIntfSync


FUNC_BEGIN HAL_DISP_SetDevMultiChnEn
    /*0001b338*/ CMP         R0, #1 
    /*0001b33c*/ PUSH        {R4, LR} 
    /*0001b340*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001b344*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001b348*/ SUB         SP, SP, #16 
    /*0001b34c*/ MOVHI       R3, #0 
    /*0001b350*/ MOV         R4, R1 
    /*0001b354*/ LDRLS       R3, [R3] 
    /*0001b358*/ ADDLS       R3, R3, #53248              @ 0xd000 
    /*0001b35c*/ ADDLS       R3, R3, #28 
    /*0001b360*/ ADDLS       R3, R3, R0, LSL #12 
    /*0001b364*/ STRLS       R3, [SP, #12] 
    /*0001b368*/ LDRLS       R3, [SP, #12] 
    /*0001b36c*/ STR         R3, [SP, #8] 
    /*0001b370*/ LDR         R0, [SP, #8] 
    /*0001b374*/ BL          0x000000000001B374          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b378*/ STR         R0, [SP, #4] 
    /*0001b37c*/ LDR         R3, [SP, #4] 
    /*0001b380*/ BFI         R3, R4, #27, #2 
    /*0001b384*/ STR         R3, [SP, #4] 
    /*0001b388*/ LDR         R0, [SP, #8] 
    /*0001b38c*/ LDR         R1, [SP, #4] 
    /*0001b390*/ BL          0x000000000001B390          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001b394*/ MOV         R0, #1 
    /*0001b398*/ ADD         SP, SP, #16 
    /*0001b39c*/ POP         {R4, PC} 
FUNC_END HAL_DISP_SetDevMultiChnEn


FUNC_BEGIN HAL_DISP_SetIntfSyncInv
    /*0001b3a0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001b3a4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001b3a8*/ PUSH        {R4, LR} 
    /*0001b3ac*/ MOV         R4, R1 
    /*0001b3b0*/ LDR         R1, [R3] 
    /*0001b3b4*/ SUB         SP, SP, #8 
    /*0001b3b8*/ ADD         R1, R1, #53504              @ 0xd100 
    /*0001b3bc*/ ADD         R1, R1, #8 
    /*0001b3c0*/ BL          0x000000000001B3C0          @ Vou_GetIntfAbsAddr [R_ARM_CALL: .text+0x1aa10] 
    /*0001b3c4*/ STR         R0, [SP, #4] 
    /*0001b3c8*/ LDR         R0, [SP, #4] 
    /*0001b3cc*/ BL          0x000000000001B3CC          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b3d0*/ LDM         R4, {R1, R2} 
    /*0001b3d4*/ STR         R0, [SP] 
    /*0001b3d8*/ LDR         R3, [SP] 
    /*0001b3dc*/ BFI         R3, R1, #3, #1 
    /*0001b3e0*/ STR         R3, [SP] 
    /*0001b3e4*/ LDR         R3, [SP] 
    /*0001b3e8*/ LDR         R1, [R4, #8] 
    /*0001b3ec*/ BFI         R3, R2, #2, #1 
    /*0001b3f0*/ STR         R3, [SP] 
    /*0001b3f4*/ LDR         R3, [SP] 
    /*0001b3f8*/ LDR         R2, [R4, #12] 
    /*0001b3fc*/ BFI         R3, R1, #1, #1 
    /*0001b400*/ STR         R3, [SP] 
    /*0001b404*/ LDR         R3, [SP] 
    /*0001b408*/ BFI         R3, R2, #0, #1 
    /*0001b40c*/ STR         R3, [SP] 
    /*0001b410*/ LDR         R0, [SP, #4] 
    /*0001b414*/ LDR         R1, [SP] 
    /*0001b418*/ BL          0x000000000001B418          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001b41c*/ MOV         R0, #1 
    /*0001b420*/ ADD         SP, SP, #8 
    /*0001b424*/ POP         {R4, PC} 
FUNC_END HAL_DISP_SetIntfSyncInv


FUNC_BEGIN HAL_DISP_SetLcdSerialPerd
    /*0001b428*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001b42c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001b430*/ PUSH        {R4, LR} 
    /*0001b434*/ SUB         SP, SP, #8 
    /*0001b438*/ LDR         R3, [R3] 
    /*0001b43c*/ MOV         R4, R0 
    /*0001b440*/ ADD         R3, R3, #54016              @ 0xd300 
    /*0001b444*/ STR         R3, [SP, #4] 
    /*0001b448*/ LDR         R3, [SP, #4] 
    /*0001b44c*/ STR         R3, [SP] 
    /*0001b450*/ LDR         R0, [SP] 
    /*0001b454*/ BL          0x000000000001B454          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b458*/ MOV         R1, R0 
    /*0001b45c*/ LDR         R0, [SP] 
    /*0001b460*/ BFI         R1, R4, #28, #1 
    /*0001b464*/ BL          0x000000000001B464          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001b468*/ MOV         R0, #1 
    /*0001b46c*/ ADD         SP, SP, #8 
    /*0001b470*/ POP         {R4, PC} 
FUNC_END HAL_DISP_SetLcdSerialPerd


FUNC_BEGIN HAL_DISP_SetIntfCtrl
    /*0001b474*/ SUB         R2, R0, #8 
    /*0001b478*/ BICS        R2, R2, #8 
    /*0001b47c*/ PUSH        {R4, LR} 
    /*0001b480*/ MOV         R4, R1 
    /*0001b484*/ SUB         SP, SP, #8 
    /*0001b488*/ BEQ         HAL_DISP_SetIntfCtrl_x1b5b0
    /*0001b48c*/ SUB         R2, R0, #512                @ 0x200 
    /*0001b490*/ MOV         R3, R0 
    /*0001b494*/ BIC         R2, R2, #512                @ 0x200 
    /*0001b498*/ CMP         R2, #0 
    /*0001b49c*/ CMPNE       R0, #64                     @ 0x40 
    /*0001b4a0*/ MOVEQ       R2, #1 
    /*0001b4a4*/ MOVNE       R2, #0 
    /*0001b4a8*/ BEQ         HAL_DISP_SetIntfCtrl_x1b548
    /*0001b4ac*/ SUB         R1, R0, #2048               @ 0x800 
    /*0001b4b0*/ BICS        R1, R1, #2048               @ 0x800 
    /*0001b4b4*/ BEQ         HAL_DISP_SetIntfCtrl_x1b548
    /*0001b4b8*/ CMP         R0, #8192                   @ 0x2000 
    /*0001b4bc*/ BEQ         HAL_DISP_SetIntfCtrl_x1b548
    /*0001b4c0*/ SUB         R0, R0, #16384              @ 0x4000 
    /*0001b4c4*/ BIC         R0, R0, #16384              @ 0x4000 
    /*0001b4c8*/ CMP         R0, #0 
    /*0001b4cc*/ CMPNE       R3, #32 
    /*0001b4d0*/ MOVEQ       R0, #1 
    /*0001b4d4*/ MOVNE       R0, #0 
    /*0001b4d8*/ BNE         HAL_DISP_SetIntfCtrl_x1b5a8
    /*0001b4dc*/ MOVW        R1, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001b4e0*/ MOVT        R1, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001b4e4*/ CMP         R3, #16384                  @ 0x4000 
    /*0001b4e8*/ LDR         R1, [R1] 
    /*0001b4ec*/ ADD         R1, R1, #53504              @ 0xd100 
    /*0001b4f0*/ BEQ         HAL_DISP_SetIntfCtrl_x1b5c0
    /*0001b4f4*/ CMP         R3, #32768                  @ 0x8000 
    /*0001b4f8*/ BEQ         HAL_DISP_SetIntfCtrl_x1b5c0
    /*0001b4fc*/ CMP         R3, #32 
    /*0001b500*/ BEQ         HAL_DISP_SetIntfCtrl_x1b5c4
    HAL_DISP_SetIntfCtrl_x1b504:
    /*0001b504*/ STR         R2, [SP] 
    /*0001b508*/ LDR         R0, [SP] 
    /*0001b50c*/ BL          0x000000000001B50C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b510*/ LDRB        R3, [R4] 
    /*0001b514*/ UBFX        R2, R3, #4, #2 
    /*0001b518*/ UBFX        IP, R3, #2, #2 
    /*0001b51c*/ MOV         R1, R0 
    /*0001b520*/ BFI         R1, R2, #4, #2 
    /*0001b524*/ BFI         R1, IP, #2, #2 
    /*0001b528*/ UBFX        R2, R3, #1, #1 
    /*0001b52c*/ BFI         R1, R2, #1, #1 
    /*0001b530*/ LDR         R0, [SP] 
    /*0001b534*/ BFI         R1, R3, #0, #1 
    /*0001b538*/ BL          0x000000000001B538          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001b53c*/ MOV         R0, #1 
    /*0001b540*/ ADD         SP, SP, #8 
    /*0001b544*/ POP         {R4, PC} 
    HAL_DISP_SetIntfCtrl_x1b548:
    /*0001b548*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001b54c*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001b550*/ MOV         R0, R3 
    /*0001b554*/ LDR         R1, [R2] 
    HAL_DISP_SetIntfCtrl_x1b558:
    /*0001b558*/ ADD         R1, R1, #53504              @ 0xd100 
    /*0001b55c*/ BL          0x000000000001B55C          @ Vou_GetIntfAbsAddr [R_ARM_CALL: .text+0x1aa10] 
    /*0001b560*/ STR         R0, [SP] 
    /*0001b564*/ LDR         R0, [SP] 
    /*0001b568*/ BL          0x000000000001B568          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b56c*/ LDRB        R3, [R4, #3] 
    /*0001b570*/ UBFX        LR, R3, #5, #1 
    /*0001b574*/ UBFX        IP, R3, #3, #1 
    /*0001b578*/ LSR         R4, R3, #7 
    /*0001b57c*/ UBFX        R2, R3, #2, #1 
    /*0001b580*/ UBFX        R3, R3, #1, #1 
    /*0001b584*/ MOV         R1, R0 
    /*0001b588*/ BFI         R1, R4, #31, #1 
    /*0001b58c*/ BFI         R1, LR, #29, #1 
    /*0001b590*/ LDR         R0, [SP] 
    /*0001b594*/ BFI         R1, IP, #27, #1 
    /*0001b598*/ BFI         R1, R2, #26, #1 
    /*0001b59c*/ BFI         R1, R3, #25, #1 
    /*0001b5a0*/ BL          0x000000000001B5A0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001b5a4*/ MOV         R0, #1 
    HAL_DISP_SetIntfCtrl_x1b5a8:
    /*0001b5a8*/ ADD         SP, SP, #8 
    /*0001b5ac*/ POP         {R4, PC} 
    HAL_DISP_SetIntfCtrl_x1b5b0:
    /*0001b5b0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001b5b4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001b5b8*/ LDR         R1, [R3] 
    /*0001b5bc*/ B           HAL_DISP_SetIntfCtrl_x1b558
    HAL_DISP_SetIntfCtrl_x1b5c0:
    /*0001b5c0*/ ADD         R1, R1, #128                @ 0x80 
    HAL_DISP_SetIntfCtrl_x1b5c4:
    /*0001b5c4*/ STR         R1, [SP, #4] 
    /*0001b5c8*/ LDR         R2, [SP, #4] 
    /*0001b5cc*/ B           HAL_DISP_SetIntfCtrl_x1b504
FUNC_END HAL_DISP_SetIntfCtrl


FUNC_BEGIN HAL_DISP_GetDispIoP
    /*0001b5d0*/ CMP         R0, #1 
    /*0001b5d4*/ BHI         HAL_DISP_GetDispIoP_x1b624
    /*0001b5d8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001b5dc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001b5e0*/ PUSH        {R4, LR} 
    /*0001b5e4*/ SUB         SP, SP, #8 
    /*0001b5e8*/ LDR         R3, [R3] 
    /*0001b5ec*/ MOV         R4, R1 
    /*0001b5f0*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001b5f4*/ ADD         R0, R3, R0, LSL #12 
    /*0001b5f8*/ STR         R0, [SP, #4] 
    /*0001b5fc*/ LDR         R3, [SP, #4] 
    /*0001b600*/ STR         R3, [SP] 
    /*0001b604*/ LDR         R0, [SP] 
    /*0001b608*/ BL          0x000000000001B608          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b60c*/ MOV         R3, #1 
    /*0001b610*/ UBFX        R0, R0, #4, #1 
    /*0001b614*/ STR         R0, [R4] 
    /*0001b618*/ MOV         R0, R3 
    /*0001b61c*/ ADD         SP, SP, #8 
    /*0001b620*/ POP         {R4, PC} 
    HAL_DISP_GetDispIoP_x1b624:
    /*0001b624*/ MOV         R3, #0 
    /*0001b628*/ MOV         R0, R3 
    /*0001b62c*/ BX          LR 
FUNC_END HAL_DISP_GetDispIoP


FUNC_BEGIN HAL_DISP_SetIntfMuxSel
    /*0001b630*/ PUSH        {R4, R5, LR} 
    /*0001b634*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001b638*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001b63c*/ SUB         SP, SP, #12 
    /*0001b640*/ MOV         R5, R1 
    /*0001b644*/ LDR         R3, [R4] 
    /*0001b648*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001b64c*/ ADD         R3, R3, #144                @ 0x90 
    /*0001b650*/ STR         R3, [SP, #4] 
    /*0001b654*/ LDR         R0, [SP, #4] 
    /*0001b658*/ BL          0x000000000001B658          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b65c*/ CMP         R5, #1024                   @ 0x400 
    /*0001b660*/ STR         R0, [SP] 
    /*0001b664*/ BEQ         HAL_DISP_SetIntfMuxSel_x1b740
    /*0001b668*/ BHI         HAL_DISP_SetIntfMuxSel_x1b6d8
    /*0001b66c*/ CMP         R5, #16 
    /*0001b670*/ BEQ         HAL_DISP_SetIntfMuxSel_x1b6bc
    /*0001b674*/ BHI         HAL_DISP_SetIntfMuxSel_x1b730
    /*0001b678*/ CMP         R5, #8 
    /*0001b67c*/ BNE         HAL_DISP_SetIntfMuxSel_x1b720
    /*0001b680*/ LDR         R3, [SP] 
    /*0001b684*/ MOV         R2, #1 
    /*0001b688*/ BFI         R3, R2, #28, #4 
    /*0001b68c*/ STR         R3, [SP] 
    /*0001b690*/ LDR         R3, [SP] 
    /*0001b694*/ BFC         R3, #8, #4 
    /*0001b698*/ STR         R3, [SP] 
    HAL_DISP_SetIntfMuxSel_x1b69c:
    /*0001b69c*/ LDR         R0, [R4] 
    /*0001b6a0*/ LDR         R1, [SP] 
    /*0001b6a4*/ ADD         R0, R0, #53248              @ 0xd000 
    /*0001b6a8*/ ADD         R0, R0, #144                @ 0x90 
    /*0001b6ac*/ BL          0x000000000001B6AC          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001b6b0*/ MOV         R0, #1 
    /*0001b6b4*/ ADD         SP, SP, #12 
    /*0001b6b8*/ POP         {R4, R5, PC} 
    HAL_DISP_SetIntfMuxSel_x1b6bc:
    /*0001b6bc*/ LDR         R3, [SP] 
    /*0001b6c0*/ BFC         R3, #28, #4 
    /*0001b6c4*/ STR         R3, [SP] 
    /*0001b6c8*/ LDR         R3, [SP] 
    /*0001b6cc*/ BFC         R3, #8, #4 
    /*0001b6d0*/ STR         R3, [SP] 
    /*0001b6d4*/ B           HAL_DISP_SetIntfMuxSel_x1b69c
    HAL_DISP_SetIntfMuxSel_x1b6d8:
    /*0001b6d8*/ CMP         R5, #8192                   @ 0x2000 
    /*0001b6dc*/ BEQ         HAL_DISP_SetIntfMuxSel_x1b740
    /*0001b6e0*/ BLS         HAL_DISP_SetIntfMuxSel_x1b710
    /*0001b6e4*/ CMP         R5, #16384                  @ 0x4000 
    /*0001b6e8*/ BEQ         HAL_DISP_SetIntfMuxSel_x1b6f4
    /*0001b6ec*/ CMP         R5, #32768                  @ 0x8000 
    /*0001b6f0*/ BNE         HAL_DISP_SetIntfMuxSel_x1b720
    HAL_DISP_SetIntfMuxSel_x1b6f4:
    /*0001b6f4*/ LDR         R3, [SP] 
    /*0001b6f8*/ BFC         R3, #28, #4 
    /*0001b6fc*/ STR         R3, [SP] 
    /*0001b700*/ LDR         R3, [SP] 
    /*0001b704*/ BFC         R3, #0, #4 
    /*0001b708*/ STR         R3, [SP] 
    /*0001b70c*/ B           HAL_DISP_SetIntfMuxSel_x1b69c
    HAL_DISP_SetIntfMuxSel_x1b710:
    /*0001b710*/ CMP         R5, #2048                   @ 0x800 
    /*0001b714*/ BEQ         HAL_DISP_SetIntfMuxSel_x1b740
    /*0001b718*/ CMP         R5, #4096                   @ 0x1000 
    /*0001b71c*/ BEQ         HAL_DISP_SetIntfMuxSel_x1b740
    HAL_DISP_SetIntfMuxSel_x1b720:
    /*0001b720*/ LDR         R3, [SP] 
    /*0001b724*/ ORR         R3, R3, #-268435456         @ 0xf0000000 
    /*0001b728*/ STR         R3, [SP] 
    /*0001b72c*/ B           HAL_DISP_SetIntfMuxSel_x1b69c
    HAL_DISP_SetIntfMuxSel_x1b730:
    /*0001b730*/ CMP         R5, #64                     @ 0x40 
    /*0001b734*/ BEQ         HAL_DISP_SetIntfMuxSel_x1b740
    /*0001b738*/ CMP         R5, #512                    @ 0x200 
    /*0001b73c*/ BNE         HAL_DISP_SetIntfMuxSel_x1b720
    HAL_DISP_SetIntfMuxSel_x1b740:
    /*0001b740*/ LDR         R3, [SP] 
    /*0001b744*/ MOV         R2, #2 
    /*0001b748*/ BFI         R3, R2, #28, #4 
    /*0001b74c*/ STR         R3, [SP] 
    /*0001b750*/ LDR         R3, [SP] 
    /*0001b754*/ BFC         R3, #4, #4 
    /*0001b758*/ STR         R3, [SP] 
    /*0001b75c*/ B           HAL_DISP_SetIntfMuxSel_x1b69c
FUNC_END HAL_DISP_SetIntfMuxSel


FUNC_BEGIN HAL_DISP_SetIntfClip
    /*0001b760*/ PUSH        {R4, R5, R6, LR} 
    /*0001b764*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001b768*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001b76c*/ SUB         SP, SP, #16 
    /*0001b770*/ MOV         R4, R2 
    /*0001b774*/ MOV         R6, R1 
    /*0001b778*/ LDR         R3, [R5] 
    /*0001b77c*/ ADD         R3, R3, #53760              @ 0xd200 
    /*0001b780*/ ADD         R3, R3, #16 
    /*0001b784*/ STR         R3, [SP, #12] 
    /*0001b788*/ LDR         R0, [SP, #12] 
    /*0001b78c*/ BL          0x000000000001B78C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b790*/ LDRH        R2, [R4] 
    /*0001b794*/ STR         R0, [SP, #4] 
    /*0001b798*/ LDR         R3, [SP, #4] 
    /*0001b79c*/ BFI         R3, R6, #31, #1 
    /*0001b7a0*/ STR         R3, [SP, #4] 
    /*0001b7a4*/ LDR         R3, [SP, #4] 
    /*0001b7a8*/ LDRH        R1, [R4, #2] 
    /*0001b7ac*/ BFI         R3, R2, #20, #10 
    /*0001b7b0*/ STR         R3, [SP, #4] 
    /*0001b7b4*/ LDR         R3, [SP, #4] 
    /*0001b7b8*/ LDRH        R2, [R4, #4] 
    /*0001b7bc*/ BFI         R3, R1, #10, #10 
    /*0001b7c0*/ STR         R3, [SP, #4] 
    /*0001b7c4*/ LDR         R3, [SP, #4] 
    /*0001b7c8*/ BFI         R3, R2, #0, #10 
    /*0001b7cc*/ STR         R3, [SP, #4] 
    /*0001b7d0*/ LDR         R0, [SP, #12] 
    /*0001b7d4*/ LDR         R1, [SP, #4] 
    /*0001b7d8*/ BL          0x000000000001B7D8          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001b7dc*/ LDR         R3, [R5] 
    /*0001b7e0*/ ADD         R3, R3, #53760              @ 0xd200 
    /*0001b7e4*/ ADD         R3, R3, #20 
    /*0001b7e8*/ STR         R3, [SP, #12] 
    /*0001b7ec*/ LDR         R0, [SP, #12] 
    /*0001b7f0*/ BL          0x000000000001B7F0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b7f4*/ LDRH        R2, [R4, #6] 
    /*0001b7f8*/ LDRH        R1, [R4, #8] 
    /*0001b7fc*/ STR         R0, [SP, #8] 
    /*0001b800*/ LDR         R3, [SP, #8] 
    /*0001b804*/ BFI         R3, R2, #20, #10 
    /*0001b808*/ STR         R3, [SP, #8] 
    /*0001b80c*/ LDR         R3, [SP, #8] 
    /*0001b810*/ LDRH        R2, [R4, #10] 
    /*0001b814*/ BFI         R3, R1, #10, #10 
    /*0001b818*/ STR         R3, [SP, #8] 
    /*0001b81c*/ LDR         R3, [SP, #8] 
    /*0001b820*/ BFI         R3, R2, #0, #10 
    /*0001b824*/ STR         R3, [SP, #8] 
    /*0001b828*/ LDR         R0, [SP, #12] 
    /*0001b82c*/ LDR         R1, [SP, #8] 
    /*0001b830*/ BL          0x000000000001B830          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001b834*/ MOV         R0, #1 
    /*0001b838*/ ADD         SP, SP, #16 
    /*0001b83c*/ POP         {R4, R5, R6, PC} 
FUNC_END HAL_DISP_SetIntfClip


FUNC_BEGIN HAL_DISP_SetIntvsyncTeMode
    /*0001b840*/ CMP         R0, #1 
    /*0001b844*/ BHI         HAL_DISP_SetIntvsyncTeMode_x1b8a8
    /*0001b848*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001b84c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001b850*/ PUSH        {R4, LR} 
    /*0001b854*/ SUB         SP, SP, #16 
    /*0001b858*/ LDR         R3, [R3] 
    /*0001b85c*/ MOV         R4, R1 
    /*0001b860*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001b864*/ ADD         R3, R3, #44                 @ 0x2c 
    /*0001b868*/ ADD         R3, R3, R0, LSL #12 
    /*0001b86c*/ STR         R3, [SP, #12] 
    /*0001b870*/ LDR         R3, [SP, #12] 
    /*0001b874*/ STR         R3, [SP, #8] 
    /*0001b878*/ LDR         R0, [SP, #8] 
    /*0001b87c*/ BL          0x000000000001B87C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b880*/ STR         R0, [SP, #4] 
    /*0001b884*/ LDR         R3, [SP, #4] 
    /*0001b888*/ BFI         R3, R4, #20, #1 
    /*0001b88c*/ STR         R3, [SP, #4] 
    /*0001b890*/ LDR         R0, [SP, #8] 
    /*0001b894*/ LDR         R1, [SP, #4] 
    /*0001b898*/ BL          0x000000000001B898          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001b89c*/ MOV         R0, #1 
    /*0001b8a0*/ ADD         SP, SP, #16 
    /*0001b8a4*/ POP         {R4, PC} 
    HAL_DISP_SetIntvsyncTeMode_x1b8a8:
    /*0001b8a8*/ MOV         R0, #0 
    /*0001b8ac*/ BX          LR 
FUNC_END HAL_DISP_SetIntvsyncTeMode


FUNC_BEGIN HAL_DISP_SetVtThdMode
    /*0001b8b0*/ CMP         R0, #1 
    /*0001b8b4*/ BHI         HAL_DISP_SetVtThdMode_x1b918
    /*0001b8b8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001b8bc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001b8c0*/ PUSH        {R4, LR} 
    /*0001b8c4*/ SUB         SP, SP, #16 
    /*0001b8c8*/ LDR         R3, [R3] 
    /*0001b8cc*/ MOV         R4, R1 
    /*0001b8d0*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001b8d4*/ ADD         R3, R3, #36                 @ 0x24 
    /*0001b8d8*/ ADD         R3, R3, R0, LSL #12 
    /*0001b8dc*/ STR         R3, [SP, #12] 
    /*0001b8e0*/ LDR         R3, [SP, #12] 
    /*0001b8e4*/ STR         R3, [SP, #8] 
    /*0001b8e8*/ LDR         R0, [SP, #8] 
    /*0001b8ec*/ BL          0x000000000001B8EC          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b8f0*/ STR         R0, [SP, #4] 
    /*0001b8f4*/ LDR         R3, [SP, #4] 
    /*0001b8f8*/ BFI         R3, R4, #15, #1 
    /*0001b8fc*/ STR         R3, [SP, #4] 
    /*0001b900*/ LDR         R0, [SP, #8] 
    /*0001b904*/ LDR         R1, [SP, #4] 
    /*0001b908*/ BL          0x000000000001B908          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001b90c*/ MOV         R0, #1 
    /*0001b910*/ ADD         SP, SP, #16 
    /*0001b914*/ POP         {R4, PC} 
    HAL_DISP_SetVtThdMode_x1b918:
    /*0001b918*/ MOV         R0, #0 
    /*0001b91c*/ BX          LR 
FUNC_END HAL_DISP_SetVtThdMode


FUNC_BEGIN HAL_DISP_GetVtThdMode
    /*0001b920*/ CMP         R0, #1 
    /*0001b924*/ BHI         HAL_DISP_GetVtThdMode_x1b97c
    /*0001b928*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001b92c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001b930*/ PUSH        {R4, LR} 
    /*0001b934*/ SUB         SP, SP, #16 
    /*0001b938*/ LDR         R3, [R3] 
    /*0001b93c*/ MOV         R4, R1 
    /*0001b940*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001b944*/ ADD         R3, R3, #36                 @ 0x24 
    /*0001b948*/ ADD         R3, R3, R0, LSL #12 
    /*0001b94c*/ STR         R3, [SP, #12] 
    /*0001b950*/ LDR         R3, [SP, #12] 
    /*0001b954*/ STR         R3, [SP, #8] 
    /*0001b958*/ LDR         R0, [SP, #8] 
    /*0001b95c*/ BL          0x000000000001B95C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b960*/ STR         R0, [SP, #4] 
    /*0001b964*/ MOV         R0, #1 
    /*0001b968*/ LDR         R3, [SP, #4] 
    /*0001b96c*/ UBFX        R3, R3, #15, #1 
    /*0001b970*/ STR         R3, [R4] 
    /*0001b974*/ ADD         SP, SP, #16 
    /*0001b978*/ POP         {R4, PC} 
    HAL_DISP_GetVtThdMode_x1b97c:
    /*0001b97c*/ MOV         R0, #0 
    /*0001b980*/ BX          LR 
FUNC_END HAL_DISP_GetVtThdMode


FUNC_BEGIN HAL_DISP_SetVtThd
    /*0001b984*/ CMP         R0, #1 
    /*0001b988*/ BHI         HAL_DISP_SetVtThd_x1b9fc
    /*0001b98c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001b990*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001b994*/ PUSH        {R4, LR} 
    /*0001b998*/ SUB         SP, SP, #16 
    /*0001b99c*/ LDR         R3, [R3] 
    /*0001b9a0*/ MOV         R4, R1 
    /*0001b9a4*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001b9a8*/ ADD         R3, R3, #36                 @ 0x24 
    /*0001b9ac*/ ADD         R3, R3, R0, LSL #12 
    /*0001b9b0*/ STR         R3, [SP, #12] 
    /*0001b9b4*/ LDR         R3, [SP, #12] 
    /*0001b9b8*/ STR         R3, [SP, #8] 
    /*0001b9bc*/ LDR         R0, [SP, #8] 
    /*0001b9c0*/ BL          0x000000000001B9C0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001b9c4*/ UBFX        R1, R4, #0, #13 
    /*0001b9c8*/ STR         R0, [SP, #4] 
    /*0001b9cc*/ LDR         R3, [SP, #4] 
    /*0001b9d0*/ BFI         R3, R1, #0, #13 
    /*0001b9d4*/ STR         R3, [SP, #4] 
    /*0001b9d8*/ LDR         R3, [SP, #4] 
    /*0001b9dc*/ BFI         R3, R1, #16, #13 
    /*0001b9e0*/ STR         R3, [SP, #4] 
    /*0001b9e4*/ LDR         R0, [SP, #8] 
    /*0001b9e8*/ LDR         R1, [SP, #4] 
    /*0001b9ec*/ BL          0x000000000001B9EC          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001b9f0*/ MOV         R0, #1 
    /*0001b9f4*/ ADD         SP, SP, #16 
    /*0001b9f8*/ POP         {R4, PC} 
    HAL_DISP_SetVtThd_x1b9fc:
    /*0001b9fc*/ MOV         R0, #0 
    /*0001ba00*/ BX          LR 
FUNC_END HAL_DISP_SetVtThd


FUNC_BEGIN HAL_DISP_SetIntMask
    /*0001ba04*/ PUSH        {R4, R5, LR} 
    /*0001ba08*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ba0c*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ba10*/ MOV         R5, R0 
    /*0001ba14*/ SUB         SP, SP, #12 
    /*0001ba18*/ LDR         R0, [R4] 
    /*0001ba1c*/ ADD         R0, R0, #12 
    /*0001ba20*/ BL          0x000000000001BA20          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ba24*/ STR         R0, [SP, #4] 
    /*0001ba28*/ LDR         R3, [SP, #4] 
    /*0001ba2c*/ LDR         R0, [R4] 
    /*0001ba30*/ ORR         R3, R3, R5 
    /*0001ba34*/ STR         R3, [SP, #4] 
    /*0001ba38*/ LDR         R1, [SP, #4] 
    /*0001ba3c*/ ADD         R0, R0, #12 
    /*0001ba40*/ BL          0x000000000001BA40          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001ba44*/ MOV         R0, #1 
    /*0001ba48*/ ADD         SP, SP, #12 
    /*0001ba4c*/ POP         {R4, R5, PC} 
FUNC_END HAL_DISP_SetIntMask


FUNC_BEGIN HAL_DISP_ClrIntMask
    /*0001ba50*/ PUSH        {R4, R5, LR} 
    /*0001ba54*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ba58*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ba5c*/ MOV         R5, R0 
    /*0001ba60*/ SUB         SP, SP, #12 
    /*0001ba64*/ LDR         R0, [R4] 
    /*0001ba68*/ ADD         R0, R0, #12 
    /*0001ba6c*/ BL          0x000000000001BA6C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ba70*/ STR         R0, [SP, #4] 
    /*0001ba74*/ LDR         R3, [SP, #4] 
    /*0001ba78*/ LDR         R0, [R4] 
    /*0001ba7c*/ BIC         R3, R3, R5 
    /*0001ba80*/ STR         R3, [SP, #4] 
    /*0001ba84*/ LDR         R1, [SP, #4] 
    /*0001ba88*/ ADD         R0, R0, #12 
    /*0001ba8c*/ BL          0x000000000001BA8C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001ba90*/ MOV         R0, #1 
    /*0001ba94*/ ADD         SP, SP, #12 
    /*0001ba98*/ POP         {R4, R5, PC} 
FUNC_END HAL_DISP_ClrIntMask


FUNC_BEGIN HAL_DISP_SetIntMask1
    /*0001ba9c*/ PUSH        {R4, R5, LR} 
    /*0001baa0*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001baa4*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001baa8*/ MOV         R5, R0 
    /*0001baac*/ SUB         SP, SP, #12 
    /*0001bab0*/ LDR         R0, [R4] 
    /*0001bab4*/ ADD         R0, R0, #28 
    /*0001bab8*/ BL          0x000000000001BAB8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001babc*/ STR         R0, [SP, #4] 
    /*0001bac0*/ LDR         R3, [SP, #4] 
    /*0001bac4*/ LDR         R0, [R4] 
    /*0001bac8*/ ORR         R3, R3, R5 
    /*0001bacc*/ STR         R3, [SP, #4] 
    /*0001bad0*/ LDR         R1, [SP, #4] 
    /*0001bad4*/ ADD         R0, R0, #28 
    /*0001bad8*/ BL          0x000000000001BAD8          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001badc*/ LDR         R0, [R4] 
    /*0001bae0*/ ADD         R0, R0, #28 
    /*0001bae4*/ BL          0x000000000001BAE4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001bae8*/ MOV         R3, R0 
    /*0001baec*/ MOV         R0, #1 
    /*0001baf0*/ STR         R3, [SP, #4] 
    /*0001baf4*/ ADD         SP, SP, #12 
    /*0001baf8*/ POP         {R4, R5, PC} 
FUNC_END HAL_DISP_SetIntMask1


FUNC_BEGIN HAL_DISP_ClrIntMask1
    /*0001bafc*/ PUSH        {R4, R5, LR} 
    /*0001bb00*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001bb04*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001bb08*/ MOV         R5, R0 
    /*0001bb0c*/ SUB         SP, SP, #12 
    /*0001bb10*/ LDR         R0, [R4] 
    /*0001bb14*/ ADD         R0, R0, #28 
    /*0001bb18*/ BL          0x000000000001BB18          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001bb1c*/ STR         R0, [SP, #4] 
    /*0001bb20*/ LDR         R3, [SP, #4] 
    /*0001bb24*/ LDR         R0, [R4] 
    /*0001bb28*/ BIC         R3, R3, R5 
    /*0001bb2c*/ STR         R3, [SP, #4] 
    /*0001bb30*/ LDR         R1, [SP, #4] 
    /*0001bb34*/ ADD         R0, R0, #28 
    /*0001bb38*/ BL          0x000000000001BB38          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001bb3c*/ MOV         R0, #1 
    /*0001bb40*/ ADD         SP, SP, #12 
    /*0001bb44*/ POP         {R4, R5, PC} 
FUNC_END HAL_DISP_ClrIntMask1


FUNC_BEGIN HAL_DISP_GetIntStatus
    /*0001bb48*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001bb4c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001bb50*/ PUSH        {R4, LR} 
    /*0001bb54*/ MOV         R4, R0 
    /*0001bb58*/ LDR         R0, [R3] 
    /*0001bb5c*/ SUB         SP, SP, #8 
    /*0001bb60*/ ADD         R0, R0, #8 
    /*0001bb64*/ BL          0x000000000001BB64          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001bb68*/ STR         R0, [SP, #4] 
    /*0001bb6c*/ LDR         R0, [SP, #4] 
    /*0001bb70*/ AND         R0, R0, R4 
    /*0001bb74*/ ADD         SP, SP, #8 
    /*0001bb78*/ POP         {R4, PC} 
FUNC_END HAL_DISP_GetIntStatus


FUNC_BEGIN HAL_DISP_GetOriIntStatus
    /*0001bb7c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001bb80*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001bb84*/ PUSH        {R4, LR} 
    /*0001bb88*/ MOV         R4, R0 
    /*0001bb8c*/ LDR         R0, [R3] 
    /*0001bb90*/ SUB         SP, SP, #8 
    /*0001bb94*/ ADD         R0, R0, #4 
    /*0001bb98*/ BL          0x000000000001BB98          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001bb9c*/ STR         R0, [SP, #4] 
    /*0001bba0*/ LDR         R0, [SP, #4] 
    /*0001bba4*/ AND         R0, R0, R4 
    /*0001bba8*/ ADD         SP, SP, #8 
    /*0001bbac*/ POP         {R4, PC} 
FUNC_END HAL_DISP_GetOriIntStatus


FUNC_BEGIN HAL_DISP_ClearIntStatus
    /*0001bbb0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001bbb4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001bbb8*/ PUSH        {R4, LR} 
    /*0001bbbc*/ MOV         R1, R0 
    /*0001bbc0*/ LDR         R0, [R3] 
    /*0001bbc4*/ ADD         R0, R0, #8 
    /*0001bbc8*/ BL          0x000000000001BBC8          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001bbcc*/ MOV         R0, #1 
    /*0001bbd0*/ POP         {R4, PC} 
FUNC_END HAL_DISP_ClearIntStatus


FUNC_BEGIN HAL_INTF_BT_SetDfirEn
    /*0001bbd4*/ PUSH        {R4, R5, R6, LR} 
    /*0001bbd8*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001bbdc*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001bbe0*/ MOV         R5, R0 
    /*0001bbe4*/ LDR         R0, [R4] 
    /*0001bbe8*/ ADD         R0, R0, #53760              @ 0xd200 
    /*0001bbec*/ BL          0x000000000001BBEC          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001bbf0*/ MOV         R1, R0 
    /*0001bbf4*/ LDR         R0, [R4] 
    /*0001bbf8*/ BFI         R1, R5, #30, #1 
    /*0001bbfc*/ ADD         R0, R0, #53760              @ 0xd200 
    /*0001bc00*/ BL          0x000000000001BC00          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001bc04*/ MOV         R0, #1 
    /*0001bc08*/ POP         {R4, R5, R6, PC} 
FUNC_END HAL_INTF_BT_SetDfirEn


FUNC_BEGIN HAL_DISP_SetRegUp
    /*0001bc0c*/ CMP         R0, #1 
    /*0001bc10*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001bc14*/ SUB         SP, SP, #20 
    /*0001bc18*/ BHI         HAL_DISP_SetRegUp_x1bc68
    /*0001bc1c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001bc20*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001bc24*/ LDR         R3, [R3] 
    /*0001bc28*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001bc2c*/ ADD         R0, R3, R0, LSL #12 
    /*0001bc30*/ STR         R0, [SP, #12] 
    /*0001bc34*/ LDR         R3, [SP, #12] 
    /*0001bc38*/ STR         R3, [SP, #8] 
    /*0001bc3c*/ LDR         R0, [SP, #8] 
    /*0001bc40*/ BL          0x000000000001BC40          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001bc44*/ STR         R0, [SP, #4] 
    /*0001bc48*/ LDR         R3, [SP, #4] 
    /*0001bc4c*/ ORR         R3, R3, #1 
    /*0001bc50*/ STR         R3, [SP, #4] 
    /*0001bc54*/ LDR         R0, [SP, #8] 
    /*0001bc58*/ LDR         R1, [SP, #4] 
    /*0001bc5c*/ BL          0x000000000001BC5C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001bc60*/ ADD         SP, SP, #20 
    /*0001bc64*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    HAL_DISP_SetRegUp_x1bc68:
    /*0001bc68*/ MOVW        R0, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8d00] 
    /*0001bc6c*/ MOVT        R0, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8d00] 
    /*0001bc70*/ BL          0x000000000001BC70          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0001bc74*/ ADD         SP, SP, #20 
    /*0001bc78*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END HAL_DISP_SetRegUp


FUNC_BEGIN HAL_DISP_GetRegUp
    /*0001bc7c*/ CMP         R0, #1 
    /*0001bc80*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001bc84*/ MOVWLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001bc88*/ MOVTLS      R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001bc8c*/ SUB         SP, SP, #20 
    /*0001bc90*/ MOVHI       R3, #0 
    /*0001bc94*/ LDRLS       R3, [R3] 
    /*0001bc98*/ ADDLS       R3, R3, #53248              @ 0xd000 
    /*0001bc9c*/ ADDLS       R0, R3, R0, LSL #12 
    /*0001bca0*/ STRLS       R0, [SP, #12] 
    /*0001bca4*/ LDRLS       R3, [SP, #12] 
    /*0001bca8*/ STR         R3, [SP, #8] 
    /*0001bcac*/ LDR         R0, [SP, #8] 
    /*0001bcb0*/ BL          0x000000000001BCB0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001bcb4*/ STR         R0, [SP, #4] 
    /*0001bcb8*/ LDR         R0, [SP, #4] 
    /*0001bcbc*/ AND         R0, R0, #1 
    /*0001bcc0*/ ADD         SP, SP, #20 
    /*0001bcc4*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END HAL_DISP_GetRegUp


FUNC_BEGIN HAL_DISP_SetDitherRoundUnlim
    /*0001bcc8*/ CMP         R0, #1 
    /*0001bccc*/ BHI         HAL_DISP_SetDitherRoundUnlim_x1bd30
    /*0001bcd0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001bcd4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001bcd8*/ PUSH        {R4, LR} 
    /*0001bcdc*/ SUB         SP, SP, #16 
    /*0001bce0*/ LDR         R3, [R3] 
    /*0001bce4*/ MOV         R4, R1 
    /*0001bce8*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001bcec*/ ADD         R3, R3, #176                @ 0xb0 
    /*0001bcf0*/ ADD         R3, R3, R0, LSL #12 
    /*0001bcf4*/ STR         R3, [SP, #12] 
    /*0001bcf8*/ LDR         R3, [SP, #12] 
    /*0001bcfc*/ STR         R3, [SP, #8] 
    /*0001bd00*/ LDR         R0, [SP, #8] 
    /*0001bd04*/ BL          0x000000000001BD04          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001bd08*/ STR         R0, [SP, #4] 
    /*0001bd0c*/ LDR         R3, [SP, #4] 
    /*0001bd10*/ BFI         R3, R4, #6, #1 
    /*0001bd14*/ STR         R3, [SP, #4] 
    /*0001bd18*/ LDR         R0, [SP, #8] 
    /*0001bd1c*/ LDR         R1, [SP, #4] 
    /*0001bd20*/ BL          0x000000000001BD20          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001bd24*/ MOV         R0, #1 
    /*0001bd28*/ ADD         SP, SP, #16 
    /*0001bd2c*/ POP         {R4, PC} 
    HAL_DISP_SetDitherRoundUnlim_x1bd30:
    /*0001bd30*/ MOV         R0, #0 
    /*0001bd34*/ BX          LR 
FUNC_END HAL_DISP_SetDitherRoundUnlim


FUNC_BEGIN HAL_DISP_SetDitherDataInOut
    /*0001bd38*/ CMP         R0, #1 
    /*0001bd3c*/ BHI         HAL_DISP_SetDitherDataInOut_x1bdb0
    /*0001bd40*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001bd44*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001bd48*/ PUSH        {R4, R5, LR} 
    /*0001bd4c*/ SUB         SP, SP, #20 
    /*0001bd50*/ LDR         R3, [R3] 
    /*0001bd54*/ MOV         R5, R2 
    /*0001bd58*/ MOV         R4, R1 
    /*0001bd5c*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001bd60*/ ADD         R3, R3, #176                @ 0xb0 
    /*0001bd64*/ ADD         R3, R3, R0, LSL #12 
    /*0001bd68*/ STR         R3, [SP, #12] 
    /*0001bd6c*/ LDR         R3, [SP, #12] 
    /*0001bd70*/ STR         R3, [SP, #8] 
    /*0001bd74*/ LDR         R0, [SP, #8] 
    /*0001bd78*/ BL          0x000000000001BD78          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001bd7c*/ STR         R0, [SP, #4] 
    /*0001bd80*/ LDR         R3, [SP, #4] 
    /*0001bd84*/ BFI         R3, R4, #7, #3 
    /*0001bd88*/ STR         R3, [SP, #4] 
    /*0001bd8c*/ LDR         R3, [SP, #4] 
    /*0001bd90*/ BFI         R3, R5, #10, #3 
    /*0001bd94*/ STR         R3, [SP, #4] 
    /*0001bd98*/ LDR         R0, [SP, #8] 
    /*0001bd9c*/ LDR         R1, [SP, #4] 
    /*0001bda0*/ BL          0x000000000001BDA0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001bda4*/ MOV         R0, #1 
    /*0001bda8*/ ADD         SP, SP, #20 
    /*0001bdac*/ POP         {R4, R5, PC} 
    HAL_DISP_SetDitherDataInOut_x1bdb0:
    /*0001bdb0*/ MOV         R0, #0 
    /*0001bdb4*/ BX          LR 
FUNC_END HAL_DISP_SetDitherDataInOut


FUNC_BEGIN HAL_DISP_SetDitherEn
    /*0001bdb8*/ CMP         R0, #1 
    /*0001bdbc*/ BHI         HAL_DISP_SetDitherEn_x1be20
    /*0001bdc0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001bdc4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001bdc8*/ PUSH        {R4, LR} 
    /*0001bdcc*/ SUB         SP, SP, #16 
    /*0001bdd0*/ LDR         R3, [R3] 
    /*0001bdd4*/ MOV         R4, R1 
    /*0001bdd8*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001bddc*/ ADD         R3, R3, #176                @ 0xb0 
    /*0001bde0*/ ADD         R3, R3, R0, LSL #12 
    /*0001bde4*/ STR         R3, [SP, #12] 
    /*0001bde8*/ LDR         R3, [SP, #12] 
    /*0001bdec*/ STR         R3, [SP, #8] 
    /*0001bdf0*/ LDR         R0, [SP, #8] 
    /*0001bdf4*/ BL          0x000000000001BDF4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001bdf8*/ STR         R0, [SP, #4] 
    /*0001bdfc*/ LDR         R3, [SP, #4] 
    /*0001be00*/ BFI         R3, R4, #5, #1 
    /*0001be04*/ STR         R3, [SP, #4] 
    /*0001be08*/ LDR         R0, [SP, #8] 
    /*0001be0c*/ LDR         R1, [SP, #4] 
    /*0001be10*/ BL          0x000000000001BE10          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001be14*/ MOV         R0, #1 
    /*0001be18*/ ADD         SP, SP, #16 
    /*0001be1c*/ POP         {R4, PC} 
    HAL_DISP_SetDitherEn_x1be20:
    /*0001be20*/ MOV         R0, #0 
    /*0001be24*/ BX          LR 
FUNC_END HAL_DISP_SetDitherEn


FUNC_BEGIN HAL_DISP_SetDitherMode
    /*0001be28*/ CMP         R0, #1 
    /*0001be2c*/ BHI         HAL_DISP_SetDitherMode_x1be90
    /*0001be30*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001be34*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001be38*/ PUSH        {R4, LR} 
    /*0001be3c*/ SUB         SP, SP, #16 
    /*0001be40*/ LDR         R3, [R3] 
    /*0001be44*/ MOV         R4, R1 
    /*0001be48*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001be4c*/ ADD         R3, R3, #176                @ 0xb0 
    /*0001be50*/ ADD         R3, R3, R0, LSL #12 
    /*0001be54*/ STR         R3, [SP, #12] 
    /*0001be58*/ LDR         R3, [SP, #12] 
    /*0001be5c*/ STR         R3, [SP, #8] 
    /*0001be60*/ LDR         R0, [SP, #8] 
    /*0001be64*/ BL          0x000000000001BE64          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001be68*/ STR         R0, [SP, #4] 
    /*0001be6c*/ LDR         R3, [SP, #4] 
    /*0001be70*/ BFI         R3, R4, #4, #1 
    /*0001be74*/ STR         R3, [SP, #4] 
    /*0001be78*/ LDR         R0, [SP, #8] 
    /*0001be7c*/ LDR         R1, [SP, #4] 
    /*0001be80*/ BL          0x000000000001BE80          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001be84*/ MOV         R0, #1 
    /*0001be88*/ ADD         SP, SP, #16 
    /*0001be8c*/ POP         {R4, PC} 
    HAL_DISP_SetDitherMode_x1be90:
    /*0001be90*/ MOV         R0, #0 
    /*0001be94*/ BX          LR 
FUNC_END HAL_DISP_SetDitherMode


FUNC_BEGIN HAL_DISP_SetDitherRound
    /*0001be98*/ CMP         R0, #1 
    /*0001be9c*/ BHI         HAL_DISP_SetDitherRound_x1bf00
    /*0001bea0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001bea4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001bea8*/ PUSH        {R4, LR} 
    /*0001beac*/ SUB         SP, SP, #16 
    /*0001beb0*/ LDR         R3, [R3] 
    /*0001beb4*/ MOV         R4, R1 
    /*0001beb8*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001bebc*/ ADD         R3, R3, #176                @ 0xb0 
    /*0001bec0*/ ADD         R3, R3, R0, LSL #12 
    /*0001bec4*/ STR         R3, [SP, #12] 
    /*0001bec8*/ LDR         R3, [SP, #12] 
    /*0001becc*/ STR         R3, [SP, #8] 
    /*0001bed0*/ LDR         R0, [SP, #8] 
    /*0001bed4*/ BL          0x000000000001BED4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001bed8*/ STR         R0, [SP, #4] 
    /*0001bedc*/ LDR         R3, [SP, #4] 
    /*0001bee0*/ BFI         R3, R4, #3, #1 
    /*0001bee4*/ STR         R3, [SP, #4] 
    /*0001bee8*/ LDR         R0, [SP, #8] 
    /*0001beec*/ LDR         R1, [SP, #4] 
    /*0001bef0*/ BL          0x000000000001BEF0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001bef4*/ MOV         R0, #1 
    /*0001bef8*/ ADD         SP, SP, #16 
    /*0001befc*/ POP         {R4, PC} 
    HAL_DISP_SetDitherRound_x1bf00:
    /*0001bf00*/ MOV         R0, #0 
    /*0001bf04*/ BX          LR 
FUNC_END HAL_DISP_SetDitherRound


FUNC_BEGIN HAL_DISP_SetDitherDomainMode
    /*0001bf08*/ CMP         R0, #1 
    /*0001bf0c*/ BHI         HAL_DISP_SetDitherDomainMode_x1bf70
    /*0001bf10*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001bf14*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001bf18*/ PUSH        {R4, LR} 
    /*0001bf1c*/ SUB         SP, SP, #16 
    /*0001bf20*/ LDR         R3, [R3] 
    /*0001bf24*/ MOV         R4, R1 
    /*0001bf28*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001bf2c*/ ADD         R3, R3, #176                @ 0xb0 
    /*0001bf30*/ ADD         R3, R3, R0, LSL #12 
    /*0001bf34*/ STR         R3, [SP, #12] 
    /*0001bf38*/ LDR         R3, [SP, #12] 
    /*0001bf3c*/ STR         R3, [SP, #8] 
    /*0001bf40*/ LDR         R0, [SP, #8] 
    /*0001bf44*/ BL          0x000000000001BF44          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001bf48*/ STR         R0, [SP, #4] 
    /*0001bf4c*/ LDR         R3, [SP, #4] 
    /*0001bf50*/ BFI         R3, R4, #2, #1 
    /*0001bf54*/ STR         R3, [SP, #4] 
    /*0001bf58*/ LDR         R0, [SP, #8] 
    /*0001bf5c*/ LDR         R1, [SP, #4] 
    /*0001bf60*/ BL          0x000000000001BF60          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001bf64*/ MOV         R0, #1 
    /*0001bf68*/ ADD         SP, SP, #16 
    /*0001bf6c*/ POP         {R4, PC} 
    HAL_DISP_SetDitherDomainMode_x1bf70:
    /*0001bf70*/ MOV         R0, #0 
    /*0001bf74*/ BX          LR 
FUNC_END HAL_DISP_SetDitherDomainMode


FUNC_BEGIN HAL_DISP_SetDitherTapMode
    /*0001bf78*/ CMP         R0, #1 
    /*0001bf7c*/ BHI         HAL_DISP_SetDitherTapMode_x1bfe0
    /*0001bf80*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001bf84*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001bf88*/ PUSH        {R4, LR} 
    /*0001bf8c*/ SUB         SP, SP, #16 
    /*0001bf90*/ LDR         R3, [R3] 
    /*0001bf94*/ MOV         R4, R1 
    /*0001bf98*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001bf9c*/ ADD         R3, R3, #176                @ 0xb0 
    /*0001bfa0*/ ADD         R3, R3, R0, LSL #12 
    /*0001bfa4*/ STR         R3, [SP, #12] 
    /*0001bfa8*/ LDR         R3, [SP, #12] 
    /*0001bfac*/ STR         R3, [SP, #8] 
    /*0001bfb0*/ LDR         R0, [SP, #8] 
    /*0001bfb4*/ BL          0x000000000001BFB4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001bfb8*/ STR         R0, [SP, #4] 
    /*0001bfbc*/ LDR         R3, [SP, #4] 
    /*0001bfc0*/ BFI         R3, R4, #0, #2 
    /*0001bfc4*/ STR         R3, [SP, #4] 
    /*0001bfc8*/ LDR         R0, [SP, #8] 
    /*0001bfcc*/ LDR         R1, [SP, #4] 
    /*0001bfd0*/ BL          0x000000000001BFD0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001bfd4*/ MOV         R0, #1 
    /*0001bfd8*/ ADD         SP, SP, #16 
    /*0001bfdc*/ POP         {R4, PC} 
    HAL_DISP_SetDitherTapMode_x1bfe0:
    /*0001bfe0*/ MOV         R0, #0 
    /*0001bfe4*/ BX          LR 
FUNC_END HAL_DISP_SetDitherTapMode


FUNC_BEGIN HAL_DISP_SetDitherSed
    /*0001bfe8*/ CMP         R0, #1 
    /*0001bfec*/ BHI         HAL_DISP_SetDitherSed_x1c454
    /*0001bff0*/ PUSH        {R4, R5, R6, LR} 
    /*0001bff4*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001bff8*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001bffc*/ SUB         SP, SP, #136                @ 0x88 
    /*0001c000*/ LSL         R4, R0, #12 
    /*0001c004*/ MOV         R5, R1 
    /*0001c008*/ LDR         R3, [R6] 
    /*0001c00c*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001c010*/ ADD         R3, R3, #180                @ 0xb4 
    /*0001c014*/ ADD         R3, R3, R4 
    /*0001c018*/ STR         R3, [SP, #132]              @ 0x84 
    /*0001c01c*/ LDR         R3, [SP, #132]              @ 0x84 
    /*0001c020*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001c024*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c028*/ BL          0x000000000001C028          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c02c*/ LDR         R2, [R5] 
    /*0001c030*/ STR         R0, [SP, #4] 
    /*0001c034*/ LDR         R3, [SP, #4] 
    /*0001c038*/ BFI         R3, R2, #0, #31 
    /*0001c03c*/ STR         R3, [SP, #4] 
    /*0001c040*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c044*/ LDR         R1, [SP, #4] 
    /*0001c048*/ BL          0x000000000001C048          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c04c*/ LDR         R3, [R6] 
    /*0001c050*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001c054*/ ADD         R3, R3, #184                @ 0xb8 
    /*0001c058*/ ADD         R3, R3, R4 
    /*0001c05c*/ STR         R3, [SP, #128]              @ 0x80 
    /*0001c060*/ LDR         R3, [SP, #128]              @ 0x80 
    /*0001c064*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001c068*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c06c*/ BL          0x000000000001C06C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c070*/ LDR         R2, [R5, #4] 
    /*0001c074*/ STR         R0, [SP, #8] 
    /*0001c078*/ LDR         R3, [SP, #8] 
    /*0001c07c*/ BFI         R3, R2, #0, #31 
    /*0001c080*/ STR         R3, [SP, #8] 
    /*0001c084*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c088*/ LDR         R1, [SP, #8] 
    /*0001c08c*/ BL          0x000000000001C08C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c090*/ LDR         R3, [R6] 
    /*0001c094*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001c098*/ ADD         R3, R3, #188                @ 0xbc 
    /*0001c09c*/ ADD         R3, R3, R4 
    /*0001c0a0*/ STR         R3, [SP, #124]              @ 0x7c 
    /*0001c0a4*/ LDR         R3, [SP, #124]              @ 0x7c 
    /*0001c0a8*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001c0ac*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c0b0*/ BL          0x000000000001C0B0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c0b4*/ LDR         R2, [R5, #8] 
    /*0001c0b8*/ STR         R0, [SP, #12] 
    /*0001c0bc*/ LDR         R3, [SP, #12] 
    /*0001c0c0*/ BFI         R3, R2, #0, #31 
    /*0001c0c4*/ STR         R3, [SP, #12] 
    /*0001c0c8*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c0cc*/ LDR         R1, [SP, #12] 
    /*0001c0d0*/ BL          0x000000000001C0D0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c0d4*/ LDR         R3, [R6] 
    /*0001c0d8*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001c0dc*/ ADD         R3, R3, #192                @ 0xc0 
    /*0001c0e0*/ ADD         R3, R3, R4 
    /*0001c0e4*/ STR         R3, [SP, #120]              @ 0x78 
    /*0001c0e8*/ LDR         R3, [SP, #120]              @ 0x78 
    /*0001c0ec*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001c0f0*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c0f4*/ BL          0x000000000001C0F4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c0f8*/ LDR         R2, [R5, #12] 
    /*0001c0fc*/ STR         R0, [SP, #16] 
    /*0001c100*/ LDR         R3, [SP, #16] 
    /*0001c104*/ BFI         R3, R2, #0, #31 
    /*0001c108*/ STR         R3, [SP, #16] 
    /*0001c10c*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c110*/ LDR         R1, [SP, #16] 
    /*0001c114*/ BL          0x000000000001C114          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c118*/ LDR         R3, [R6] 
    /*0001c11c*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001c120*/ ADD         R3, R3, #196                @ 0xc4 
    /*0001c124*/ ADD         R3, R3, R4 
    /*0001c128*/ STR         R3, [SP, #116]              @ 0x74 
    /*0001c12c*/ LDR         R3, [SP, #116]              @ 0x74 
    /*0001c130*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001c134*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c138*/ BL          0x000000000001C138          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c13c*/ LDR         R2, [R5, #16] 
    /*0001c140*/ STR         R0, [SP, #20] 
    /*0001c144*/ LDR         R3, [SP, #20] 
    /*0001c148*/ BFI         R3, R2, #0, #31 
    /*0001c14c*/ STR         R3, [SP, #20] 
    /*0001c150*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c154*/ LDR         R1, [SP, #20] 
    /*0001c158*/ BL          0x000000000001C158          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c15c*/ LDR         R3, [R6] 
    /*0001c160*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001c164*/ ADD         R3, R3, #200                @ 0xc8 
    /*0001c168*/ ADD         R3, R3, R4 
    /*0001c16c*/ STR         R3, [SP, #112]              @ 0x70 
    /*0001c170*/ LDR         R3, [SP, #112]              @ 0x70 
    /*0001c174*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001c178*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c17c*/ BL          0x000000000001C17C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c180*/ LDR         R2, [R5, #20] 
    /*0001c184*/ STR         R0, [SP, #24] 
    /*0001c188*/ LDR         R3, [SP, #24] 
    /*0001c18c*/ BFI         R3, R2, #0, #31 
    /*0001c190*/ STR         R3, [SP, #24] 
    /*0001c194*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c198*/ LDR         R1, [SP, #24] 
    /*0001c19c*/ BL          0x000000000001C19C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c1a0*/ LDR         R3, [R6] 
    /*0001c1a4*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001c1a8*/ ADD         R3, R3, #204                @ 0xcc 
    /*0001c1ac*/ ADD         R3, R3, R4 
    /*0001c1b0*/ STR         R3, [SP, #108]              @ 0x6c 
    /*0001c1b4*/ LDR         R3, [SP, #108]              @ 0x6c 
    /*0001c1b8*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001c1bc*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c1c0*/ BL          0x000000000001C1C0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c1c4*/ LDR         R2, [R5, #24] 
    /*0001c1c8*/ STR         R0, [SP, #28] 
    /*0001c1cc*/ LDR         R3, [SP, #28] 
    /*0001c1d0*/ BFI         R3, R2, #0, #31 
    /*0001c1d4*/ STR         R3, [SP, #28] 
    /*0001c1d8*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c1dc*/ LDR         R1, [SP, #28] 
    /*0001c1e0*/ BL          0x000000000001C1E0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c1e4*/ LDR         R3, [R6] 
    /*0001c1e8*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001c1ec*/ ADD         R3, R3, #208                @ 0xd0 
    /*0001c1f0*/ ADD         R3, R3, R4 
    /*0001c1f4*/ STR         R3, [SP, #104]              @ 0x68 
    /*0001c1f8*/ LDR         R3, [SP, #104]              @ 0x68 
    /*0001c1fc*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001c200*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c204*/ BL          0x000000000001C204          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c208*/ LDR         R2, [R5, #28] 
    /*0001c20c*/ STR         R0, [SP, #32] 
    /*0001c210*/ LDR         R3, [SP, #32] 
    /*0001c214*/ BFI         R3, R2, #0, #31 
    /*0001c218*/ STR         R3, [SP, #32] 
    /*0001c21c*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c220*/ LDR         R1, [SP, #32] 
    /*0001c224*/ BL          0x000000000001C224          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c228*/ LDR         R3, [R6] 
    /*0001c22c*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001c230*/ ADD         R3, R3, #212                @ 0xd4 
    /*0001c234*/ ADD         R3, R3, R4 
    /*0001c238*/ STR         R3, [SP, #100]              @ 0x64 
    /*0001c23c*/ LDR         R3, [SP, #100]              @ 0x64 
    /*0001c240*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001c244*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c248*/ BL          0x000000000001C248          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c24c*/ LDR         R2, [R5, #32] 
    /*0001c250*/ STR         R0, [SP, #36]               @ 0x24 
    /*0001c254*/ LDR         R3, [SP, #36]               @ 0x24 
    /*0001c258*/ BFI         R3, R2, #0, #31 
    /*0001c25c*/ STR         R3, [SP, #36]               @ 0x24 
    /*0001c260*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c264*/ LDR         R1, [SP, #36]               @ 0x24 
    /*0001c268*/ BL          0x000000000001C268          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c26c*/ LDR         R3, [R6] 
    /*0001c270*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001c274*/ ADD         R3, R3, #216                @ 0xd8 
    /*0001c278*/ ADD         R3, R3, R4 
    /*0001c27c*/ STR         R3, [SP, #96]               @ 0x60 
    /*0001c280*/ LDR         R3, [SP, #96]               @ 0x60 
    /*0001c284*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001c288*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c28c*/ BL          0x000000000001C28C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c290*/ LDR         R2, [R5, #36]               @ 0x24 
    /*0001c294*/ STR         R0, [SP, #40]               @ 0x28 
    /*0001c298*/ LDR         R3, [SP, #40]               @ 0x28 
    /*0001c29c*/ BFI         R3, R2, #0, #31 
    /*0001c2a0*/ STR         R3, [SP, #40]               @ 0x28 
    /*0001c2a4*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c2a8*/ LDR         R1, [SP, #40]               @ 0x28 
    /*0001c2ac*/ BL          0x000000000001C2AC          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c2b0*/ LDR         R3, [R6] 
    /*0001c2b4*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001c2b8*/ ADD         R3, R3, #220                @ 0xdc 
    /*0001c2bc*/ ADD         R3, R3, R4 
    /*0001c2c0*/ STR         R3, [SP, #92]               @ 0x5c 
    /*0001c2c4*/ LDR         R3, [SP, #92]               @ 0x5c 
    /*0001c2c8*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001c2cc*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c2d0*/ BL          0x000000000001C2D0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c2d4*/ LDR         R2, [R5, #40]               @ 0x28 
    /*0001c2d8*/ STR         R0, [SP, #44]               @ 0x2c 
    /*0001c2dc*/ LDR         R3, [SP, #44]               @ 0x2c 
    /*0001c2e0*/ BFI         R3, R2, #0, #31 
    /*0001c2e4*/ STR         R3, [SP, #44]               @ 0x2c 
    /*0001c2e8*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c2ec*/ LDR         R1, [SP, #44]               @ 0x2c 
    /*0001c2f0*/ BL          0x000000000001C2F0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c2f4*/ LDR         R3, [R6] 
    /*0001c2f8*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001c2fc*/ ADD         R3, R3, #224                @ 0xe0 
    /*0001c300*/ ADD         R3, R3, R4 
    /*0001c304*/ STR         R3, [SP, #88]               @ 0x58 
    /*0001c308*/ LDR         R3, [SP, #88]               @ 0x58 
    /*0001c30c*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001c310*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c314*/ BL          0x000000000001C314          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c318*/ LDR         R2, [R5, #44]               @ 0x2c 
    /*0001c31c*/ STR         R0, [SP, #48]               @ 0x30 
    /*0001c320*/ LDR         R3, [SP, #48]               @ 0x30 
    /*0001c324*/ BFI         R3, R2, #0, #31 
    /*0001c328*/ STR         R3, [SP, #48]               @ 0x30 
    /*0001c32c*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c330*/ LDR         R1, [SP, #48]               @ 0x30 
    /*0001c334*/ BL          0x000000000001C334          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c338*/ LDR         R3, [R6] 
    /*0001c33c*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001c340*/ ADD         R3, R3, #228                @ 0xe4 
    /*0001c344*/ ADD         R3, R3, R4 
    /*0001c348*/ STR         R3, [SP, #84]               @ 0x54 
    /*0001c34c*/ LDR         R3, [SP, #84]               @ 0x54 
    /*0001c350*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001c354*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c358*/ BL          0x000000000001C358          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c35c*/ LDR         R2, [R5, #48]               @ 0x30 
    /*0001c360*/ STR         R0, [SP, #52]               @ 0x34 
    /*0001c364*/ LDR         R3, [SP, #52]               @ 0x34 
    /*0001c368*/ BFI         R3, R2, #0, #31 
    /*0001c36c*/ STR         R3, [SP, #52]               @ 0x34 
    /*0001c370*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c374*/ LDR         R1, [SP, #52]               @ 0x34 
    /*0001c378*/ BL          0x000000000001C378          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c37c*/ LDR         R3, [R6] 
    /*0001c380*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001c384*/ ADD         R3, R3, #232                @ 0xe8 
    /*0001c388*/ ADD         R3, R3, R4 
    /*0001c38c*/ STR         R3, [SP, #80]               @ 0x50 
    /*0001c390*/ LDR         R3, [SP, #80]               @ 0x50 
    /*0001c394*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001c398*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c39c*/ BL          0x000000000001C39C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c3a0*/ LDR         R2, [R5, #52]               @ 0x34 
    /*0001c3a4*/ STR         R0, [SP, #56]               @ 0x38 
    /*0001c3a8*/ LDR         R3, [SP, #56]               @ 0x38 
    /*0001c3ac*/ BFI         R3, R2, #0, #31 
    /*0001c3b0*/ STR         R3, [SP, #56]               @ 0x38 
    /*0001c3b4*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c3b8*/ LDR         R1, [SP, #56]               @ 0x38 
    /*0001c3bc*/ BL          0x000000000001C3BC          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c3c0*/ LDR         R3, [R6] 
    /*0001c3c4*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001c3c8*/ ADD         R3, R3, #236                @ 0xec 
    /*0001c3cc*/ ADD         R3, R3, R4 
    /*0001c3d0*/ STR         R3, [SP, #76]               @ 0x4c 
    /*0001c3d4*/ LDR         R3, [SP, #76]               @ 0x4c 
    /*0001c3d8*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001c3dc*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c3e0*/ BL          0x000000000001C3E0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c3e4*/ LDR         R2, [R5, #56]               @ 0x38 
    /*0001c3e8*/ STR         R0, [SP, #60]               @ 0x3c 
    /*0001c3ec*/ LDR         R3, [SP, #60]               @ 0x3c 
    /*0001c3f0*/ BFI         R3, R2, #0, #31 
    /*0001c3f4*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0001c3f8*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c3fc*/ LDR         R1, [SP, #60]               @ 0x3c 
    /*0001c400*/ BL          0x000000000001C400          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c404*/ LDR         R0, [R6] 
    /*0001c408*/ ADD         R0, R0, #53248              @ 0xd000 
    /*0001c40c*/ ADD         R0, R0, #240                @ 0xf0 
    /*0001c410*/ ADD         R4, R0, R4 
    /*0001c414*/ STR         R4, [SP, #72]               @ 0x48 
    /*0001c418*/ LDR         R3, [SP, #72]               @ 0x48 
    /*0001c41c*/ STR         R3, [SP, #68]               @ 0x44 
    /*0001c420*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c424*/ BL          0x000000000001C424          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c428*/ LDR         R2, [R5, #60]               @ 0x3c 
    /*0001c42c*/ STR         R0, [SP, #64]               @ 0x40 
    /*0001c430*/ LDR         R3, [SP, #64]               @ 0x40 
    /*0001c434*/ BFI         R3, R2, #0, #31 
    /*0001c438*/ STR         R3, [SP, #64]               @ 0x40 
    /*0001c43c*/ LDR         R0, [SP, #68]               @ 0x44 
    /*0001c440*/ LDR         R1, [SP, #64]               @ 0x40 
    /*0001c444*/ BL          0x000000000001C444          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c448*/ MOV         R0, #1 
    /*0001c44c*/ ADD         SP, SP, #136                @ 0x88 
    /*0001c450*/ POP         {R4, R5, R6, PC} 
    HAL_DISP_SetDitherSed_x1c454:
    /*0001c454*/ MOV         R0, #0 
    /*0001c458*/ BX          LR 
FUNC_END HAL_DISP_SetDitherSed


FUNC_BEGIN HAL_DISP_SetDitherThrMinMax
    /*0001c45c*/ CMP         R0, #1 
    /*0001c460*/ BHI         HAL_DISP_SetDitherThrMinMax_x1c4dc
    /*0001c464*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001c468*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001c46c*/ PUSH        {R4, R5, LR} 
    /*0001c470*/ SUB         SP, SP, #20 
    /*0001c474*/ LDR         R3, [R3] 
    /*0001c478*/ MOV         R5, R2 
    /*0001c47c*/ MOV         R4, R1 
    /*0001c480*/ ADD         R3, R3, #53248              @ 0xd000 
    /*0001c484*/ ADD         R3, R3, #244                @ 0xf4 
    /*0001c488*/ ADD         R3, R3, R0, LSL #12 
    /*0001c48c*/ STR         R3, [SP, #12] 
    /*0001c490*/ LDR         R3, [SP, #12] 
    /*0001c494*/ STR         R3, [SP, #8] 
    /*0001c498*/ LDR         R0, [SP, #8] 
    /*0001c49c*/ BL          0x000000000001C49C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c4a0*/ UXTH        R1, R4 
    /*0001c4a4*/ UXTH        R2, R5 
    /*0001c4a8*/ STR         R0, [SP, #4] 
    /*0001c4ac*/ LDR         R3, [SP, #4] 
    /*0001c4b0*/ BFI         R3, R1, #0, #16 
    /*0001c4b4*/ STR         R3, [SP, #4] 
    /*0001c4b8*/ LDR         R3, [SP, #4] 
    /*0001c4bc*/ BFI         R3, R2, #16, #16 
    /*0001c4c0*/ STR         R3, [SP, #4] 
    /*0001c4c4*/ LDR         R0, [SP, #8] 
    /*0001c4c8*/ LDR         R1, [SP, #4] 
    /*0001c4cc*/ BL          0x000000000001C4CC          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c4d0*/ MOV         R0, #1 
    /*0001c4d4*/ ADD         SP, SP, #20 
    /*0001c4d8*/ POP         {R4, R5, PC} 
    HAL_DISP_SetDitherThrMinMax_x1c4dc:
    /*0001c4dc*/ MOV         R0, #0 
    /*0001c4e0*/ BX          LR 
FUNC_END HAL_DISP_SetDitherThrMinMax


FUNC_BEGIN HAL_VIDEO_SetLayerUpMode
    /*0001c4e4*/ CMP         R0, #0 
    /*0001c4e8*/ BNE         HAL_VIDEO_SetLayerUpMode_x1c530
    /*0001c4ec*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001c4f0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001c4f4*/ PUSH        {R4, LR} 
    /*0001c4f8*/ SUB         SP, SP, #8 
    /*0001c4fc*/ LDR         R3, [R3] 
    /*0001c500*/ MOV         R4, R1 
    /*0001c504*/ ADD         R3, R3, #4096               @ 0x1000 
    /*0001c508*/ STR         R3, [SP, #4] 
    /*0001c50c*/ LDR         R0, [SP, #4] 
    /*0001c510*/ BL          0x000000000001C510          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c514*/ MOV         R1, R0 
    /*0001c518*/ LDR         R0, [SP, #4] 
    /*0001c51c*/ BFI         R1, R4, #29, #1 
    /*0001c520*/ BL          0x000000000001C520          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c524*/ MOV         R0, #1 
    /*0001c528*/ ADD         SP, SP, #8 
    /*0001c52c*/ POP         {R4, PC} 
    HAL_VIDEO_SetLayerUpMode_x1c530:
    /*0001c530*/ MOV         R0, #0 
    /*0001c534*/ BX          LR 
FUNC_END HAL_VIDEO_SetLayerUpMode


FUNC_BEGIN HAL_VIDEO_SetLayerAlpha
    /*0001c538*/ CMP         R0, #0 
    /*0001c53c*/ BNE         HAL_VIDEO_SetLayerAlpha_x1c598
    /*0001c540*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001c544*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001c548*/ PUSH        {R4, LR} 
    /*0001c54c*/ SUB         SP, SP, #8 
    /*0001c550*/ LDR         R3, [R3] 
    /*0001c554*/ MOV         R4, R1 
    /*0001c558*/ ADD         R3, R3, #4224               @ 0x1080 
    /*0001c55c*/ ADD         R3, R3, #20 
    /*0001c560*/ STR         R3, [SP, #4] 
    /*0001c564*/ LDR         R0, [SP, #4] 
    /*0001c568*/ BL          0x000000000001C568          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c56c*/ UXTB        R1, R4 
    /*0001c570*/ STR         R0, [SP] 
    /*0001c574*/ LDR         R3, [SP] 
    /*0001c578*/ BFI         R3, R1, #0, #8 
    /*0001c57c*/ STR         R3, [SP] 
    /*0001c580*/ LDR         R0, [SP, #4] 
    /*0001c584*/ LDR         R1, [SP] 
    /*0001c588*/ BL          0x000000000001C588          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c58c*/ MOV         R0, #1 
    /*0001c590*/ ADD         SP, SP, #8 
    /*0001c594*/ POP         {R4, PC} 
    HAL_VIDEO_SetLayerAlpha_x1c598:
    /*0001c598*/ MOV         R0, #0 
    /*0001c59c*/ BX          LR 
FUNC_END HAL_VIDEO_SetLayerAlpha


FUNC_BEGIN HAL_VIDEO_SetLayerDispRect
    /*0001c5a0*/ CMP         R0, #0 
    /*0001c5a4*/ PUSH        {R4, R5, LR} 
    /*0001c5a8*/ MOV         R4, R1 
    /*0001c5ac*/ SUB         SP, SP, #28 
    /*0001c5b0*/ BEQ         HAL_VIDEO_SetLayerDispRect_x1c68c
    /*0001c5b4*/ CMP         R0, #3 
    /*0001c5b8*/ BEQ         HAL_VIDEO_SetLayerDispRect_x1c5c8
    /*0001c5bc*/ MOV         R0, #0 
    /*0001c5c0*/ ADD         SP, SP, #28 
    /*0001c5c4*/ POP         {R4, R5, PC} 
    HAL_VIDEO_SetLayerDispRect_x1c5c8:
    /*0001c5c8*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001c5cc*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001c5d0*/ LDR         R3, [R5] 
    /*0001c5d4*/ ADD         R3, R3, #28672              @ 0x7000 
    /*0001c5d8*/ ADD         R3, R3, #128                @ 0x80 
    /*0001c5dc*/ STR         R3, [SP, #20] 
    /*0001c5e0*/ LDR         R0, [SP, #20] 
    /*0001c5e4*/ BL          0x000000000001C5E4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c5e8*/ LDRH        R1, [R4] 
    /*0001c5ec*/ LDRH        R2, [R4, #4] 
    /*0001c5f0*/ STR         R0, [SP, #12] 
    /*0001c5f4*/ LDR         R3, [SP, #12] 
    /*0001c5f8*/ BFI         R3, R1, #0, #16 
    /*0001c5fc*/ STR         R3, [SP, #12] 
    /*0001c600*/ LDR         R3, [SP, #12] 
    /*0001c604*/ BFI         R3, R2, #16, #16 
    /*0001c608*/ STR         R3, [SP, #12] 
    /*0001c60c*/ LDR         R0, [SP, #20] 
    /*0001c610*/ LDR         R1, [SP, #12] 
    /*0001c614*/ BL          0x000000000001C614          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c618*/ LDR         R3, [R5] 
    /*0001c61c*/ ADD         R3, R3, #28672              @ 0x7000 
    /*0001c620*/ ADD         R3, R3, #132                @ 0x84 
    /*0001c624*/ STR         R3, [SP, #20] 
    /*0001c628*/ LDR         R0, [SP, #20] 
    /*0001c62c*/ BL          0x000000000001C62C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c630*/ LDR         R3, [R4, #8] 
    /*0001c634*/ LDR         R2, [R4] 
    /*0001c638*/ ADD         R2, R2, R3 
    /*0001c63c*/ LDR         R3, [R4, #4] 
    /*0001c640*/ SUB         R2, R2, #1 
    /*0001c644*/ UXTH        R2, R2 
    /*0001c648*/ STR         R0, [SP, #16] 
    /*0001c64c*/ LDR         R0, [R4, #12] 
    /*0001c650*/ LDR         R1, [SP, #16] 
    /*0001c654*/ ADD         R3, R3, R0 
    /*0001c658*/ BFI         R1, R2, #0, #16 
    /*0001c65c*/ SUB         R3, R3, #1 
    /*0001c660*/ STR         R1, [SP, #16] 
    /*0001c664*/ LDR         R2, [SP, #16] 
    /*0001c668*/ UXTH        R3, R3 
    /*0001c66c*/ BFI         R2, R3, #16, #16 
    /*0001c670*/ STR         R2, [SP, #16] 
    /*0001c674*/ LDR         R0, [SP, #20] 
    /*0001c678*/ LDR         R1, [SP, #16] 
    /*0001c67c*/ BL          0x000000000001C67C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c680*/ MOV         R0, #1 
    /*0001c684*/ ADD         SP, SP, #28 
    /*0001c688*/ POP         {R4, R5, PC} 
    HAL_VIDEO_SetLayerDispRect_x1c68c:
    /*0001c68c*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001c690*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001c694*/ LDR         R3, [R5] 
    /*0001c698*/ ADD         R3, R3, #4224               @ 0x1080 
    /*0001c69c*/ STR         R3, [SP, #20] 
    /*0001c6a0*/ LDR         R0, [SP, #20] 
    /*0001c6a4*/ BL          0x000000000001C6A4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c6a8*/ LDRH        R1, [R4] 
    /*0001c6ac*/ LDRH        R2, [R4, #4] 
    /*0001c6b0*/ STR         R0, [SP, #4] 
    /*0001c6b4*/ LDR         R3, [SP, #4] 
    /*0001c6b8*/ BFI         R3, R1, #0, #16 
    /*0001c6bc*/ STR         R3, [SP, #4] 
    /*0001c6c0*/ LDR         R3, [SP, #4] 
    /*0001c6c4*/ BFI         R3, R2, #16, #16 
    /*0001c6c8*/ STR         R3, [SP, #4] 
    /*0001c6cc*/ LDR         R0, [SP, #20] 
    /*0001c6d0*/ LDR         R1, [SP, #4] 
    /*0001c6d4*/ BL          0x000000000001C6D4          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c6d8*/ LDR         R3, [R5] 
    /*0001c6dc*/ ADD         R3, R3, #4224               @ 0x1080 
    /*0001c6e0*/ ADD         R3, R3, #4 
    /*0001c6e4*/ STR         R3, [SP, #20] 
    /*0001c6e8*/ LDR         R0, [SP, #20] 
    /*0001c6ec*/ BL          0x000000000001C6EC          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c6f0*/ LDR         R3, [R4, #8] 
    /*0001c6f4*/ LDR         R2, [R4] 
    /*0001c6f8*/ ADD         R2, R2, R3 
    /*0001c6fc*/ LDR         R3, [R4, #4] 
    /*0001c700*/ SUB         R2, R2, #1 
    /*0001c704*/ UXTH        R2, R2 
    /*0001c708*/ STR         R0, [SP, #8] 
    /*0001c70c*/ LDR         R0, [R4, #12] 
    /*0001c710*/ LDR         R1, [SP, #8] 
    /*0001c714*/ ADD         R3, R3, R0 
    /*0001c718*/ BFI         R1, R2, #0, #16 
    /*0001c71c*/ SUB         R3, R3, #1 
    /*0001c720*/ STR         R1, [SP, #8] 
    /*0001c724*/ LDR         R2, [SP, #8] 
    /*0001c728*/ UXTH        R3, R3 
    /*0001c72c*/ BFI         R2, R3, #16, #16 
    /*0001c730*/ STR         R2, [SP, #8] 
    /*0001c734*/ LDR         R0, [SP, #20] 
    /*0001c738*/ LDR         R1, [SP, #8] 
    /*0001c73c*/ BL          0x000000000001C73C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c740*/ MOV         R0, #1 
    /*0001c744*/ ADD         SP, SP, #28 
    /*0001c748*/ POP         {R4, R5, PC} 
FUNC_END HAL_VIDEO_SetLayerDispRect


FUNC_BEGIN HAL_VIDEO_SetLayerVideoRect
    /*0001c74c*/ CMP         R0, #0 
    /*0001c750*/ PUSH        {R4, R5, LR} 
    /*0001c754*/ MOV         R4, R1 
    /*0001c758*/ SUB         SP, SP, #28 
    /*0001c75c*/ BEQ         HAL_VIDEO_SetLayerVideoRect_x1c838
    /*0001c760*/ CMP         R0, #3 
    /*0001c764*/ BEQ         HAL_VIDEO_SetLayerVideoRect_x1c774
    /*0001c768*/ MOV         R0, #0 
    /*0001c76c*/ ADD         SP, SP, #28 
    /*0001c770*/ POP         {R4, R5, PC} 
    HAL_VIDEO_SetLayerVideoRect_x1c774:
    /*0001c774*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001c778*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001c77c*/ LDR         R3, [R5] 
    /*0001c780*/ ADD         R3, R3, #28672              @ 0x7000 
    /*0001c784*/ ADD         R3, R3, #136                @ 0x88 
    /*0001c788*/ STR         R3, [SP, #20] 
    /*0001c78c*/ LDR         R0, [SP, #20] 
    /*0001c790*/ BL          0x000000000001C790          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c794*/ LDRH        R1, [R4] 
    /*0001c798*/ LDRH        R2, [R4, #4] 
    /*0001c79c*/ STR         R0, [SP, #12] 
    /*0001c7a0*/ LDR         R3, [SP, #12] 
    /*0001c7a4*/ BFI         R3, R1, #0, #16 
    /*0001c7a8*/ STR         R3, [SP, #12] 
    /*0001c7ac*/ LDR         R3, [SP, #12] 
    /*0001c7b0*/ BFI         R3, R2, #16, #16 
    /*0001c7b4*/ STR         R3, [SP, #12] 
    /*0001c7b8*/ LDR         R0, [SP, #20] 
    /*0001c7bc*/ LDR         R1, [SP, #12] 
    /*0001c7c0*/ BL          0x000000000001C7C0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c7c4*/ LDR         R3, [R5] 
    /*0001c7c8*/ ADD         R3, R3, #28672              @ 0x7000 
    /*0001c7cc*/ ADD         R3, R3, #140                @ 0x8c 
    /*0001c7d0*/ STR         R3, [SP, #20] 
    /*0001c7d4*/ LDR         R0, [SP, #20] 
    /*0001c7d8*/ BL          0x000000000001C7D8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c7dc*/ LDR         R3, [R4, #8] 
    /*0001c7e0*/ LDR         R2, [R4] 
    /*0001c7e4*/ ADD         R2, R2, R3 
    /*0001c7e8*/ LDR         R3, [R4, #4] 
    /*0001c7ec*/ SUB         R2, R2, #1 
    /*0001c7f0*/ UXTH        R2, R2 
    /*0001c7f4*/ STR         R0, [SP, #16] 
    /*0001c7f8*/ LDR         R0, [R4, #12] 
    /*0001c7fc*/ LDR         R1, [SP, #16] 
    /*0001c800*/ ADD         R3, R3, R0 
    /*0001c804*/ BFI         R1, R2, #0, #16 
    /*0001c808*/ SUB         R3, R3, #1 
    /*0001c80c*/ STR         R1, [SP, #16] 
    /*0001c810*/ LDR         R2, [SP, #16] 
    /*0001c814*/ UXTH        R3, R3 
    /*0001c818*/ BFI         R2, R3, #16, #16 
    /*0001c81c*/ STR         R2, [SP, #16] 
    /*0001c820*/ LDR         R0, [SP, #20] 
    /*0001c824*/ LDR         R1, [SP, #16] 
    /*0001c828*/ BL          0x000000000001C828          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c82c*/ MOV         R0, #1 
    /*0001c830*/ ADD         SP, SP, #28 
    /*0001c834*/ POP         {R4, R5, PC} 
    HAL_VIDEO_SetLayerVideoRect_x1c838:
    /*0001c838*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001c83c*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001c840*/ LDR         R3, [R5] 
    /*0001c844*/ ADD         R3, R3, #4224               @ 0x1080 
    /*0001c848*/ ADD         R3, R3, #8 
    /*0001c84c*/ STR         R3, [SP, #20] 
    /*0001c850*/ LDR         R0, [SP, #20] 
    /*0001c854*/ BL          0x000000000001C854          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c858*/ LDRH        R1, [R4] 
    /*0001c85c*/ LDRH        R2, [R4, #4] 
    /*0001c860*/ STR         R0, [SP, #4] 
    /*0001c864*/ LDR         R3, [SP, #4] 
    /*0001c868*/ BFI         R3, R1, #0, #16 
    /*0001c86c*/ STR         R3, [SP, #4] 
    /*0001c870*/ LDR         R3, [SP, #4] 
    /*0001c874*/ BFI         R3, R2, #16, #16 
    /*0001c878*/ STR         R3, [SP, #4] 
    /*0001c87c*/ LDR         R0, [SP, #20] 
    /*0001c880*/ LDR         R1, [SP, #4] 
    /*0001c884*/ BL          0x000000000001C884          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c888*/ LDR         R3, [R5] 
    /*0001c88c*/ ADD         R3, R3, #4224               @ 0x1080 
    /*0001c890*/ ADD         R3, R3, #12 
    /*0001c894*/ STR         R3, [SP, #20] 
    /*0001c898*/ LDR         R0, [SP, #20] 
    /*0001c89c*/ BL          0x000000000001C89C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c8a0*/ LDR         R3, [R4, #8] 
    /*0001c8a4*/ LDR         R2, [R4] 
    /*0001c8a8*/ ADD         R2, R2, R3 
    /*0001c8ac*/ LDR         R3, [R4, #4] 
    /*0001c8b0*/ SUB         R2, R2, #1 
    /*0001c8b4*/ UXTH        R2, R2 
    /*0001c8b8*/ STR         R0, [SP, #8] 
    /*0001c8bc*/ LDR         R0, [R4, #12] 
    /*0001c8c0*/ LDR         R1, [SP, #8] 
    /*0001c8c4*/ ADD         R3, R3, R0 
    /*0001c8c8*/ BFI         R1, R2, #0, #16 
    /*0001c8cc*/ SUB         R3, R3, #1 
    /*0001c8d0*/ STR         R1, [SP, #8] 
    /*0001c8d4*/ LDR         R2, [SP, #8] 
    /*0001c8d8*/ UXTH        R3, R3 
    /*0001c8dc*/ BFI         R2, R3, #16, #16 
    /*0001c8e0*/ STR         R2, [SP, #8] 
    /*0001c8e4*/ LDR         R0, [SP, #20] 
    /*0001c8e8*/ LDR         R1, [SP, #8] 
    /*0001c8ec*/ BL          0x000000000001C8EC          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c8f0*/ MOV         R0, #1 
    /*0001c8f4*/ ADD         SP, SP, #28 
    /*0001c8f8*/ POP         {R4, R5, PC} 
FUNC_END HAL_VIDEO_SetLayerVideoRect


FUNC_BEGIN HAL_VIDEO_SetMultiAreaLAddr
    /*0001c8fc*/ PUSH        {R4, R5, R6, LR} 
    /*0001c900*/ SUBS        R6, R0, #0 
    /*0001c904*/ SUB         SP, SP, #16 
    /*0001c908*/ MOVNE       R0, #0 
    /*0001c90c*/ BNE         HAL_VIDEO_SetMultiAreaLAddr_x1c988
    /*0001c910*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001c914*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001c918*/ MOV         R1, R2 
    /*0001c91c*/ MOV         R5, R3 
    /*0001c920*/ LDR         R2, [R4] 
    /*0001c924*/ ADD         R2, R2, #65536              @ 0x10000 
    /*0001c928*/ ADD         R2, R2, #596                @ 0x254 
    /*0001c92c*/ STR         R2, [SP, #12] 
    /*0001c930*/ LDR         R0, [SP, #12] 
    /*0001c934*/ BL          0x000000000001C934          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c938*/ LDR         R2, [R4] 
    /*0001c93c*/ MOV         R1, R6 
    /*0001c940*/ ADD         R2, R2, #65536              @ 0x10000 
    /*0001c944*/ ADD         R2, R2, #592                @ 0x250 
    /*0001c948*/ STR         R2, [SP, #8] 
    /*0001c94c*/ LDR         R0, [SP, #8] 
    /*0001c950*/ BL          0x000000000001C950          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c954*/ LDR         R2, [R4] 
    /*0001c958*/ ADD         R2, R2, #65536              @ 0x10000 
    /*0001c95c*/ ADD         R2, R2, #624                @ 0x270 
    /*0001c960*/ STR         R2, [SP, #4] 
    /*0001c964*/ LDR         R4, [SP, #4] 
    /*0001c968*/ MOV         R0, R4 
    /*0001c96c*/ BL          0x000000000001C96C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c970*/ LSR         R1, R0, #16 
    /*0001c974*/ MOV         R0, R4 
    /*0001c978*/ LSL         R1, R1, #16 
    /*0001c97c*/ ORR         R1, R1, R5 
    /*0001c980*/ BL          0x000000000001C980          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001c984*/ MOV         R0, #1 
    HAL_VIDEO_SetMultiAreaLAddr_x1c988:
    /*0001c988*/ ADD         SP, SP, #16 
    /*0001c98c*/ POP         {R4, R5, R6, PC} 
FUNC_END HAL_VIDEO_SetMultiAreaLAddr


FUNC_BEGIN HAL_VIDEO_GetMultiAreaLAddr
    /*0001c990*/ CMP         R0, #0 
    /*0001c994*/ BNE         HAL_VIDEO_GetMultiAreaLAddr_x1c9f8
    /*0001c998*/ PUSH        {R4, R5, R6, LR} 
    /*0001c99c*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001c9a0*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001c9a4*/ SUB         SP, SP, #8 
    /*0001c9a8*/ MOV         R5, R3 
    /*0001c9ac*/ MOV         R6, R2 
    /*0001c9b0*/ LDR         R1, [R4] 
    /*0001c9b4*/ ADD         R1, R1, #65536              @ 0x10000 
    /*0001c9b8*/ ADD         R1, R1, #596                @ 0x254 
    /*0001c9bc*/ STR         R1, [SP, #4] 
    /*0001c9c0*/ LDR         R0, [SP, #4] 
    /*0001c9c4*/ BL          0x000000000001C9C4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c9c8*/ STR         R0, [R6] 
    /*0001c9cc*/ LDR         R2, [R4] 
    /*0001c9d0*/ ADD         R2, R2, #65536              @ 0x10000 
    /*0001c9d4*/ ADD         R2, R2, #592                @ 0x250 
    /*0001c9d8*/ STR         R2, [SP] 
    /*0001c9dc*/ LDR         R0, [SP] 
    /*0001c9e0*/ BL          0x000000000001C9E0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001c9e4*/ MOV         R3, #1 
    /*0001c9e8*/ STR         R0, [R5] 
    /*0001c9ec*/ MOV         R0, R3 
    /*0001c9f0*/ ADD         SP, SP, #8 
    /*0001c9f4*/ POP         {R4, R5, R6, PC} 
    HAL_VIDEO_GetMultiAreaLAddr_x1c9f8:
    /*0001c9f8*/ MOV         R3, #0 
    /*0001c9fc*/ MOV         R0, R3 
    /*0001ca00*/ BX          LR 
FUNC_END HAL_VIDEO_GetMultiAreaLAddr


FUNC_BEGIN HAL_VIDEO_SetMultiAreaCAddr
    /*0001ca04*/ PUSH        {R4, R5, R6, LR} 
    /*0001ca08*/ SUBS        R6, R0, #0 
    /*0001ca0c*/ SUB         SP, SP, #16 
    /*0001ca10*/ MOVNE       R0, #0 
    /*0001ca14*/ BNE         HAL_VIDEO_SetMultiAreaCAddr_x1ca8c
    /*0001ca18*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ca1c*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ca20*/ MOV         R1, R2 
    /*0001ca24*/ MOV         R5, R3 
    /*0001ca28*/ LDR         R2, [R4] 
    /*0001ca2c*/ ADD         R2, R2, #65536              @ 0x10000 
    /*0001ca30*/ ADD         R2, R2, #604                @ 0x25c 
    /*0001ca34*/ STR         R2, [SP, #12] 
    /*0001ca38*/ LDR         R0, [SP, #12] 
    /*0001ca3c*/ BL          0x000000000001CA3C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001ca40*/ LDR         R2, [R4] 
    /*0001ca44*/ MOV         R1, R6 
    /*0001ca48*/ ADD         R2, R2, #65536              @ 0x10000 
    /*0001ca4c*/ ADD         R2, R2, #600                @ 0x258 
    /*0001ca50*/ STR         R2, [SP, #8] 
    /*0001ca54*/ LDR         R0, [SP, #8] 
    /*0001ca58*/ BL          0x000000000001CA58          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001ca5c*/ LDR         R2, [R4] 
    /*0001ca60*/ ADD         R2, R2, #65536              @ 0x10000 
    /*0001ca64*/ ADD         R2, R2, #624                @ 0x270 
    /*0001ca68*/ STR         R2, [SP, #4] 
    /*0001ca6c*/ LDR         R4, [SP, #4] 
    /*0001ca70*/ MOV         R0, R4 
    /*0001ca74*/ BL          0x000000000001CA74          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ca78*/ UXTH        R1, R0 
    /*0001ca7c*/ MOV         R0, R4 
    /*0001ca80*/ ORR         R1, R1, R5, LSL #16 
    /*0001ca84*/ BL          0x000000000001CA84          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001ca88*/ MOV         R0, #1 
    HAL_VIDEO_SetMultiAreaCAddr_x1ca8c:
    /*0001ca8c*/ ADD         SP, SP, #16 
    /*0001ca90*/ POP         {R4, R5, R6, PC} 
FUNC_END HAL_VIDEO_SetMultiAreaCAddr


FUNC_BEGIN HAL_VIDEO_GetMultiAreaCAddr
    /*0001ca94*/ CMP         R0, #0 
    /*0001ca98*/ BNE         HAL_VIDEO_GetMultiAreaCAddr_x1cafc
    /*0001ca9c*/ PUSH        {R4, R5, R6, LR} 
    /*0001caa0*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001caa4*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001caa8*/ SUB         SP, SP, #8 
    /*0001caac*/ MOV         R5, R3 
    /*0001cab0*/ MOV         R6, R2 
    /*0001cab4*/ LDR         R1, [R4] 
    /*0001cab8*/ ADD         R1, R1, #65536              @ 0x10000 
    /*0001cabc*/ ADD         R1, R1, #604                @ 0x25c 
    /*0001cac0*/ STR         R1, [SP, #4] 
    /*0001cac4*/ LDR         R0, [SP, #4] 
    /*0001cac8*/ BL          0x000000000001CAC8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001cacc*/ STR         R0, [R6] 
    /*0001cad0*/ LDR         R2, [R4] 
    /*0001cad4*/ ADD         R2, R2, #65536              @ 0x10000 
    /*0001cad8*/ ADD         R2, R2, #600                @ 0x258 
    /*0001cadc*/ STR         R2, [SP] 
    /*0001cae0*/ LDR         R0, [SP] 
    /*0001cae4*/ BL          0x000000000001CAE4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001cae8*/ MOV         R3, #1 
    /*0001caec*/ STR         R0, [R5] 
    /*0001caf0*/ MOV         R0, R3 
    /*0001caf4*/ ADD         SP, SP, #8 
    /*0001caf8*/ POP         {R4, R5, R6, PC} 
    HAL_VIDEO_GetMultiAreaCAddr_x1cafc:
    /*0001cafc*/ MOV         R3, #0 
    /*0001cb00*/ MOV         R0, R3 
    /*0001cb04*/ BX          LR 
FUNC_END HAL_VIDEO_GetMultiAreaCAddr


FUNC_BEGIN HAL_LAYER_SetZmeInfo
    /*0001cb08*/ CMP         R0, #0 
    /*0001cb0c*/ BEQ         HAL_LAYER_SetZmeInfo_x1cb18
    /*0001cb10*/ MOV         R0, #0 
    /*0001cb14*/ BX          LR 
    HAL_LAYER_SetZmeInfo_x1cb18:
    /*0001cb18*/ PUSH        {R4, R5, LR} 
    /*0001cb1c*/ MOV         R4, R2 
    /*0001cb20*/ MOVW        R2, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001cb24*/ MOVT        R2, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001cb28*/ SUB         SP, SP, #12 
    /*0001cb2c*/ MOV         R5, R3 
    /*0001cb30*/ LDR         R2, [R2] 
    /*0001cb34*/ ADD         R2, R2, #5120               @ 0x1400 
    /*0001cb38*/ STR         R2, [SP, #4] 
    /*0001cb3c*/ LDR         R0, [SP, #4] 
    /*0001cb40*/ BL          0x000000000001CB40          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001cb44*/ SUB         R2, R4, #1 
    /*0001cb48*/ UXTH        R2, R2 
    /*0001cb4c*/ STR         R0, [SP] 
    /*0001cb50*/ LDR         R1, [SP] 
    /*0001cb54*/ ORR         R1, R1, #524288             @ 0x80000 
    /*0001cb58*/ STR         R1, [SP] 
    /*0001cb5c*/ LDR         R1, [SP] 
    /*0001cb60*/ ORR         R1, R1, #262144             @ 0x40000 
    /*0001cb64*/ STR         R1, [SP] 
    /*0001cb68*/ LDR         R3, [SP] 
    /*0001cb6c*/ BFI         R3, R2, #0, #16 
    /*0001cb70*/ STR         R3, [SP] 
    /*0001cb74*/ LDR         R3, [SP] 
    /*0001cb78*/ BFI         R3, R5, #16, #2 
    /*0001cb7c*/ STR         R3, [SP] 
    /*0001cb80*/ LDR         R0, [SP, #4] 
    /*0001cb84*/ LDR         R1, [SP] 
    /*0001cb88*/ BL          0x000000000001CB88          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001cb8c*/ MOV         R0, #1 
    /*0001cb90*/ ADD         SP, SP, #12 
    /*0001cb94*/ POP         {R4, R5, PC} 
FUNC_END HAL_LAYER_SetZmeInfo


FUNC_BEGIN HAL_LAYER_SetZmeEnable
    /*0001cb98*/ CMP         R0, #0 
    /*0001cb9c*/ BNE         HAL_LAYER_SetZmeEnable_x1cd90
    /*0001cba0*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001cba4*/ SUB         R6, R1, #10 
    /*0001cba8*/ CLZ         R6, R6 
    /*0001cbac*/ BICS        R3, R1, #4 
    /*0001cbb0*/ SUB         SP, SP, #20 
    /*0001cbb4*/ MOV         R5, R2 
    /*0001cbb8*/ LSR         R6, R6, #5 
    /*0001cbbc*/ MOV         R4, R1 
    /*0001cbc0*/ ORREQ       R3, R6, #1 
    /*0001cbc4*/ MOVNE       R3, R6 
    /*0001cbc8*/ CMP         R3, #0 
    /*0001cbcc*/ BNE         HAL_LAYER_SetZmeEnable_x1ccbc
    /*0001cbd0*/ CMP         R4, #10 
    /*0001cbd4*/ BHI         HAL_LAYER_SetZmeEnable_x1cc24
    HAL_LAYER_SetZmeEnable_x1cbd8:
    /*0001cbd8*/ MOVW        R3, #1042                   @ 0x412 
    /*0001cbdc*/ MVN         R3, R3, LSR R4 
    /*0001cbe0*/ TST         R3, #1 
    /*0001cbe4*/ BNE         HAL_LAYER_SetZmeEnable_x1cc24
    /*0001cbe8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001cbec*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001cbf0*/ LDR         R3, [R3] 
    /*0001cbf4*/ ADD         R3, R3, #87040              @ 0x15400 
    /*0001cbf8*/ ADD         R3, R3, #4 
    /*0001cbfc*/ STR         R3, [SP, #12] 
    /*0001cc00*/ LDR         R0, [SP, #12] 
    /*0001cc04*/ BL          0x000000000001CC04          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001cc08*/ STR         R0, [SP] 
    /*0001cc0c*/ LDR         R3, [SP] 
    /*0001cc10*/ BFI         R3, R5, #30, #1 
    /*0001cc14*/ STR         R3, [SP] 
    /*0001cc18*/ LDR         R0, [SP, #12] 
    /*0001cc1c*/ LDR         R1, [SP] 
    /*0001cc20*/ BL          0x000000000001CC20          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    HAL_LAYER_SetZmeEnable_x1cc24:
    /*0001cc24*/ BIC         R7, R4, #8 
    /*0001cc28*/ CMP         R4, #5 
    /*0001cc2c*/ CMPNE       R7, #2 
    /*0001cc30*/ MOVEQ       R7, #1 
    /*0001cc34*/ MOVNE       R7, #0 
    /*0001cc38*/ BEQ         HAL_LAYER_SetZmeEnable_x1cd04
    HAL_LAYER_SetZmeEnable_x1cc3c:
    /*0001cc3c*/ SUB         R4, R4, #3 
    /*0001cc40*/ BICS        R3, R4, #2 
    /*0001cc44*/ ORREQ       R6, R6, #1 
    /*0001cc48*/ CMP         R6, #0 
    /*0001cc4c*/ BNE         HAL_LAYER_SetZmeEnable_x1cd44
    /*0001cc50*/ CMP         R7, #0 
    /*0001cc54*/ MOVEQ       R0, #1 
    /*0001cc58*/ BNE         HAL_LAYER_SetZmeEnable_x1cc64
    HAL_LAYER_SetZmeEnable_x1cc5c:
    /*0001cc5c*/ ADD         SP, SP, #20 
    /*0001cc60*/ POP         {R4, R5, R6, R7, PC} 
    HAL_LAYER_SetZmeEnable_x1cc64:
    /*0001cc64*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001cc68*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001cc6c*/ AND         R5, R5, #1 
    /*0001cc70*/ LDR         R3, [R3] 
    /*0001cc74*/ ADD         R3, R3, #5120               @ 0x1400 
    /*0001cc78*/ ADD         R3, R3, #4 
    /*0001cc7c*/ STR         R3, [SP, #12] 
    /*0001cc80*/ LDR         R0, [SP, #12] 
    /*0001cc84*/ BL          0x000000000001CC84          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001cc88*/ STR         R0, [SP, #8] 
    /*0001cc8c*/ LDR         R3, [SP, #8] 
    /*0001cc90*/ BFI         R3, R5, #30, #1 
    /*0001cc94*/ STR         R3, [SP, #8] 
    /*0001cc98*/ LDR         R3, [SP, #8] 
    /*0001cc9c*/ BFI         R3, R5, #28, #1 
    /*0001cca0*/ STR         R3, [SP, #8] 
    /*0001cca4*/ LDR         R0, [SP, #12] 
    /*0001cca8*/ LDR         R1, [SP, #8] 
    /*0001ccac*/ BL          0x000000000001CCAC          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001ccb0*/ MOV         R0, #1 
    /*0001ccb4*/ ADD         SP, SP, #20 
    /*0001ccb8*/ POP         {R4, R5, R6, R7, PC} 
    HAL_LAYER_SetZmeEnable_x1ccbc:
    /*0001ccbc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ccc0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ccc4*/ LDR         R3, [R3] 
    /*0001ccc8*/ ADD         R3, R3, #87040              @ 0x15400 
    /*0001cccc*/ ADD         R3, R3, #4 
    /*0001ccd0*/ STR         R3, [SP, #12] 
    /*0001ccd4*/ LDR         R0, [SP, #12] 
    /*0001ccd8*/ BL          0x000000000001CCD8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ccdc*/ STR         R0, [SP] 
    /*0001cce0*/ LDR         R3, [SP] 
    /*0001cce4*/ BFI         R3, R5, #31, #1 
    /*0001cce8*/ STR         R3, [SP] 
    /*0001ccec*/ LDR         R0, [SP, #12] 
    /*0001ccf0*/ LDR         R1, [SP] 
    /*0001ccf4*/ BL          0x000000000001CCF4          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001ccf8*/ CMP         R4, #10 
    /*0001ccfc*/ BHI         HAL_LAYER_SetZmeEnable_x1cc24
    /*0001cd00*/ B           HAL_LAYER_SetZmeEnable_x1cbd8
    HAL_LAYER_SetZmeEnable_x1cd04:
    /*0001cd04*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001cd08*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001cd0c*/ LDR         R3, [R3] 
    /*0001cd10*/ ADD         R3, R3, #87040              @ 0x15400 
    /*0001cd14*/ ADD         R3, R3, #260                @ 0x104 
    /*0001cd18*/ STR         R3, [SP, #12] 
    /*0001cd1c*/ LDR         R0, [SP, #12] 
    /*0001cd20*/ BL          0x000000000001CD20          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001cd24*/ STR         R0, [SP, #4] 
    /*0001cd28*/ LDR         R3, [SP, #4] 
    /*0001cd2c*/ BFI         R3, R5, #31, #1 
    /*0001cd30*/ STR         R3, [SP, #4] 
    /*0001cd34*/ LDR         R0, [SP, #12] 
    /*0001cd38*/ LDR         R1, [SP, #4] 
    /*0001cd3c*/ BL          0x000000000001CD3C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001cd40*/ B           HAL_LAYER_SetZmeEnable_x1cc3c
    HAL_LAYER_SetZmeEnable_x1cd44:
    /*0001cd44*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001cd48*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001cd4c*/ LDR         R3, [R3] 
    /*0001cd50*/ ADD         R3, R3, #87040              @ 0x15400 
    /*0001cd54*/ ADD         R3, R3, #260                @ 0x104 
    /*0001cd58*/ STR         R3, [SP, #12] 
    /*0001cd5c*/ LDR         R0, [SP, #12] 
    /*0001cd60*/ BL          0x000000000001CD60          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001cd64*/ STR         R0, [SP, #4] 
    /*0001cd68*/ LDR         R3, [SP, #4] 
    /*0001cd6c*/ BFI         R3, R5, #30, #1 
    /*0001cd70*/ STR         R3, [SP, #4] 
    /*0001cd74*/ LDR         R0, [SP, #12] 
    /*0001cd78*/ LDR         R1, [SP, #4] 
    /*0001cd7c*/ BL          0x000000000001CD7C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001cd80*/ CMP         R7, #0 
    /*0001cd84*/ MOVEQ       R0, #1 
    /*0001cd88*/ BEQ         HAL_LAYER_SetZmeEnable_x1cc5c
    /*0001cd8c*/ B           HAL_LAYER_SetZmeEnable_x1cc64
    HAL_LAYER_SetZmeEnable_x1cd90:
    /*0001cd90*/ MOV         R0, #0 
    /*0001cd94*/ BX          LR 
FUNC_END HAL_LAYER_SetZmeEnable


FUNC_BEGIN HAL_LAYER_SetZmeFirEnable
    /*0001cd98*/ CMP         R0, #0 
    /*0001cd9c*/ BNE         HAL_LAYER_SetZmeFirEnable_x1cf24
    /*0001cda0*/ PUSH        {R4, R5, R6, LR} 
    /*0001cda4*/ SUB         R6, R1, #10 
    /*0001cda8*/ CLZ         R6, R6 
    /*0001cdac*/ BICS        R3, R1, #4 
    /*0001cdb0*/ SUB         SP, SP, #8 
    /*0001cdb4*/ MOV         R5, R2 
    /*0001cdb8*/ LSR         R6, R6, #5 
    /*0001cdbc*/ MOV         R4, R1 
    /*0001cdc0*/ ORREQ       R3, R6, #1 
    /*0001cdc4*/ MOVNE       R3, R6 
    /*0001cdc8*/ CMP         R3, #0 
    /*0001cdcc*/ BNE         HAL_LAYER_SetZmeFirEnable_x1ce48
    /*0001cdd0*/ CMP         R4, #10 
    /*0001cdd4*/ BHI         HAL_LAYER_SetZmeFirEnable_x1ce18
    HAL_LAYER_SetZmeFirEnable_x1cdd8:
    /*0001cdd8*/ MOVW        R3, #1042                   @ 0x412 
    /*0001cddc*/ MVN         R3, R3, LSR R4 
    /*0001cde0*/ TST         R3, #1 
    /*0001cde4*/ BNE         HAL_LAYER_SetZmeFirEnable_x1ce18
    /*0001cde8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001cdec*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001cdf0*/ LDR         R3, [R3] 
    /*0001cdf4*/ ADD         R3, R3, #87040              @ 0x15400 
    /*0001cdf8*/ ADD         R3, R3, #4 
    /*0001cdfc*/ STR         R3, [SP, #4] 
    /*0001ce00*/ LDR         R0, [SP, #4] 
    /*0001ce04*/ BL          0x000000000001CE04          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ce08*/ MOV         R1, R0 
    /*0001ce0c*/ LDR         R0, [SP, #4] 
    /*0001ce10*/ BFI         R1, R5, #30, #1 
    /*0001ce14*/ BL          0x000000000001CE14          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    HAL_LAYER_SetZmeFirEnable_x1ce18:
    /*0001ce18*/ BIC         R3, R4, #8 
    /*0001ce1c*/ CMP         R4, #5 
    /*0001ce20*/ CMPNE       R3, #2 
    /*0001ce24*/ BEQ         HAL_LAYER_SetZmeFirEnable_x1ce84
    HAL_LAYER_SetZmeFirEnable_x1ce28:
    /*0001ce28*/ SUB         R4, R4, #3 
    /*0001ce2c*/ BICS        R3, R4, #2 
    /*0001ce30*/ ORREQ       R6, R6, #1 
    /*0001ce34*/ CMP         R6, #0 
    /*0001ce38*/ MOVEQ       R0, #1 
    /*0001ce3c*/ BNE         HAL_LAYER_SetZmeFirEnable_x1ceb8
    /*0001ce40*/ ADD         SP, SP, #8 
    /*0001ce44*/ POP         {R4, R5, R6, PC} 
    HAL_LAYER_SetZmeFirEnable_x1ce48:
    /*0001ce48*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ce4c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ce50*/ LDR         R3, [R3] 
    /*0001ce54*/ ADD         R3, R3, #87040              @ 0x15400 
    /*0001ce58*/ ADD         R3, R3, #4 
    /*0001ce5c*/ STR         R3, [SP, #4] 
    /*0001ce60*/ LDR         R0, [SP, #4] 
    /*0001ce64*/ BL          0x000000000001CE64          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ce68*/ MOV         R1, R0 
    /*0001ce6c*/ LDR         R0, [SP, #4] 
    /*0001ce70*/ BFI         R1, R5, #31, #1 
    /*0001ce74*/ BL          0x000000000001CE74          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001ce78*/ CMP         R4, #10 
    /*0001ce7c*/ BHI         HAL_LAYER_SetZmeFirEnable_x1ce18
    /*0001ce80*/ B           HAL_LAYER_SetZmeFirEnable_x1cdd8
    HAL_LAYER_SetZmeFirEnable_x1ce84:
    /*0001ce84*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ce88*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ce8c*/ LDR         R3, [R3] 
    /*0001ce90*/ ADD         R3, R3, #87040              @ 0x15400 
    /*0001ce94*/ ADD         R3, R3, #260                @ 0x104 
    /*0001ce98*/ STR         R3, [SP, #4] 
    /*0001ce9c*/ LDR         R0, [SP, #4] 
    /*0001cea0*/ BL          0x000000000001CEA0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001cea4*/ MOV         R1, R0 
    /*0001cea8*/ LDR         R0, [SP, #4] 
    /*0001ceac*/ BFI         R1, R5, #31, #1 
    /*0001ceb0*/ BL          0x000000000001CEB0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001ceb4*/ B           HAL_LAYER_SetZmeFirEnable_x1ce28
    HAL_LAYER_SetZmeFirEnable_x1ceb8:
    /*0001ceb8*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001cebc*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001cec0*/ AND         R5, R5, #1 
    /*0001cec4*/ LDR         R3, [R4] 
    /*0001cec8*/ ADD         R3, R3, #87040              @ 0x15400 
    /*0001cecc*/ ADD         R3, R3, #260                @ 0x104 
    /*0001ced0*/ STR         R3, [SP, #4] 
    /*0001ced4*/ LDR         R0, [SP, #4] 
    /*0001ced8*/ BL          0x000000000001CED8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001cedc*/ MOV         R1, R0 
    /*0001cee0*/ LDR         R0, [SP, #4] 
    /*0001cee4*/ BFI         R1, R5, #30, #1 
    /*0001cee8*/ BL          0x000000000001CEE8          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001ceec*/ LDR         R3, [R4] 
    /*0001cef0*/ ADD         R3, R3, #5120               @ 0x1400 
    /*0001cef4*/ ADD         R3, R3, #4 
    /*0001cef8*/ STR         R3, [SP, #4] 
    /*0001cefc*/ LDR         R0, [SP, #4] 
    /*0001cf00*/ BL          0x000000000001CF00          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001cf04*/ MOV         R1, R0 
    /*0001cf08*/ BFI         R1, R5, #30, #1 
    /*0001cf0c*/ LDR         R0, [SP, #4] 
    /*0001cf10*/ BFI         R1, R5, #28, #1 
    /*0001cf14*/ BL          0x000000000001CF14          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001cf18*/ MOV         R0, #1 
    /*0001cf1c*/ ADD         SP, SP, #8 
    /*0001cf20*/ POP         {R4, R5, R6, PC} 
    HAL_LAYER_SetZmeFirEnable_x1cf24:
    /*0001cf24*/ MOV         R0, #0 
    /*0001cf28*/ BX          LR 
FUNC_END HAL_LAYER_SetZmeFirEnable


FUNC_BEGIN HAL_LAYER_SetZmeMscEnable
    /*0001cf2c*/ CMP         R0, #2 
    /*0001cf30*/ MOVHI       R0, #0 
    /*0001cf34*/ MOVLS       R0, #1 
    /*0001cf38*/ BX          LR 
FUNC_END HAL_LAYER_SetZmeMscEnable


FUNC_BEGIN HAL_VIDEO_GetVDcmpLumaState
    /*0001cf3c*/ MOV         R0, #1 
    /*0001cf40*/ BX          LR 
FUNC_END HAL_VIDEO_GetVDcmpLumaState


FUNC_BEGIN HAL_VIDEO_GetVDcmpChromaState
    /*0001cf44*/ MOV         R0, #1 
    /*0001cf48*/ BX          LR 
FUNC_END HAL_VIDEO_GetVDcmpChromaState


FUNC_BEGIN HAL_VIDEO_ClrVDcmpLumaState
    /*0001cf4c*/ MOV         R0, #1 
    /*0001cf50*/ BX          LR 
FUNC_END HAL_VIDEO_ClrVDcmpLumaState


FUNC_BEGIN HAL_VIDEO_ClrVDcmpChromaState
    /*0001cf54*/ MOV         R0, #1 
    /*0001cf58*/ BX          LR 
FUNC_END HAL_VIDEO_ClrVDcmpChromaState


FUNC_BEGIN HAL_VIDEO_SetAllAreaDisable
    /*0001cf5c*/ CLZ         R0, R0 
    /*0001cf60*/ LSR         R0, R0, #5 
    /*0001cf64*/ BX          LR 
FUNC_END HAL_VIDEO_SetAllAreaDisable


FUNC_BEGIN HAL_LAYER_EnableLayer
    /*0001cf68*/ CMP         R0, #0 
    /*0001cf6c*/ PUSH        {R4, LR} 
    /*0001cf70*/ MOV         R4, R1 
    /*0001cf74*/ SUB         SP, SP, #16 
    /*0001cf78*/ BEQ         HAL_LAYER_EnableLayer_x1cfd4
    /*0001cf7c*/ CMP         R0, #3 
    /*0001cf80*/ BEQ         HAL_LAYER_EnableLayer_x1cf90
    /*0001cf84*/ MOV         R0, #0 
    /*0001cf88*/ ADD         SP, SP, #16 
    /*0001cf8c*/ POP         {R4, PC} 
    HAL_LAYER_EnableLayer_x1cf90:
    /*0001cf90*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001cf94*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001cf98*/ LDR         R3, [R3] 
    /*0001cf9c*/ ADD         R3, R3, #28672              @ 0x7000 
    /*0001cfa0*/ STR         R3, [SP, #12] 
    /*0001cfa4*/ LDR         R0, [SP, #12] 
    /*0001cfa8*/ BL          0x000000000001CFA8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001cfac*/ STR         R0, [SP, #8] 
    /*0001cfb0*/ LDR         R3, [SP, #8] 
    /*0001cfb4*/ BFI         R3, R4, #31, #1 
    /*0001cfb8*/ STR         R3, [SP, #8] 
    /*0001cfbc*/ LDR         R0, [SP, #12] 
    /*0001cfc0*/ LDR         R1, [SP, #8] 
    /*0001cfc4*/ BL          0x000000000001CFC4          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001cfc8*/ MOV         R0, #1 
    /*0001cfcc*/ ADD         SP, SP, #16 
    /*0001cfd0*/ POP         {R4, PC} 
    HAL_LAYER_EnableLayer_x1cfd4:
    /*0001cfd4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001cfd8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001cfdc*/ LDR         R3, [R3] 
    /*0001cfe0*/ ADD         R3, R3, #4096               @ 0x1000 
    /*0001cfe4*/ STR         R3, [SP, #12] 
    /*0001cfe8*/ LDR         R0, [SP, #12] 
    /*0001cfec*/ BL          0x000000000001CFEC          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001cff0*/ STR         R0, [SP, #4] 
    /*0001cff4*/ LDR         R3, [SP, #4] 
    /*0001cff8*/ BFI         R3, R4, #31, #1 
    /*0001cffc*/ STR         R3, [SP, #4] 
    /*0001d000*/ LDR         R0, [SP, #12] 
    /*0001d004*/ LDR         R1, [SP, #4] 
    /*0001d008*/ BL          0x000000000001D008          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d00c*/ MOV         R0, #1 
    /*0001d010*/ ADD         SP, SP, #16 
    /*0001d014*/ POP         {R4, PC} 
FUNC_END HAL_LAYER_EnableLayer


FUNC_BEGIN HAL_LAYER_GetLayerEnable
    /*0001d018*/ CMP         R0, #0 
    /*0001d01c*/ PUSH        {R4, LR} 
    /*0001d020*/ MOV         R4, R1 
    /*0001d024*/ SUB         SP, SP, #16 
    /*0001d028*/ BEQ         HAL_LAYER_GetLayerEnable_x1d078
    /*0001d02c*/ CMP         R0, #3 
    /*0001d030*/ BEQ         HAL_LAYER_GetLayerEnable_x1d040
    /*0001d034*/ MOV         R0, #0 
    /*0001d038*/ ADD         SP, SP, #16 
    /*0001d03c*/ POP         {R4, PC} 
    HAL_LAYER_GetLayerEnable_x1d040:
    /*0001d040*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d044*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d048*/ LDR         R3, [R3] 
    /*0001d04c*/ ADD         R3, R3, #28672              @ 0x7000 
    /*0001d050*/ STR         R3, [SP, #12] 
    /*0001d054*/ LDR         R0, [SP, #12] 
    /*0001d058*/ BL          0x000000000001D058          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d05c*/ STR         R0, [SP, #8] 
    /*0001d060*/ MOV         R0, #1 
    /*0001d064*/ LDR         R3, [SP, #8] 
    /*0001d068*/ LSR         R3, R3, #31 
    /*0001d06c*/ STR         R3, [R4] 
    /*0001d070*/ ADD         SP, SP, #16 
    /*0001d074*/ POP         {R4, PC} 
    HAL_LAYER_GetLayerEnable_x1d078:
    /*0001d078*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d07c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d080*/ LDR         R3, [R3] 
    /*0001d084*/ ADD         R3, R3, #4096               @ 0x1000 
    /*0001d088*/ STR         R3, [SP, #12] 
    /*0001d08c*/ LDR         R0, [SP, #12] 
    /*0001d090*/ BL          0x000000000001D090          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d094*/ STR         R0, [SP, #4] 
    /*0001d098*/ MOV         R0, #1 
    /*0001d09c*/ LDR         R3, [SP, #4] 
    /*0001d0a0*/ LSR         R3, R3, #31 
    /*0001d0a4*/ STR         R3, [R4] 
    /*0001d0a8*/ ADD         SP, SP, #16 
    /*0001d0ac*/ POP         {R4, PC} 
FUNC_END HAL_LAYER_GetLayerEnable


FUNC_BEGIN HAL_LAYER_SetLayerDataFmt
    /*0001d0b0*/ SUBS        R3, R0, #0 
    /*0001d0b4*/ PUSH        {R4, LR} 
    /*0001d0b8*/ MOV         R4, R1 
    /*0001d0bc*/ SUB         SP, SP, #16 
    /*0001d0c0*/ BNE         HAL_LAYER_SetLayerDataFmt_x1d114
    /*0001d0c4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d0c8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d0cc*/ LDR         R3, [R3] 
    /*0001d0d0*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001d0d4*/ ADD         R3, R3, #576                @ 0x240 
    /*0001d0d8*/ STR         R3, [SP, #12] 
    /*0001d0dc*/ LDR         R3, [SP, #12] 
    /*0001d0e0*/ STR         R3, [SP, #8] 
    /*0001d0e4*/ LDR         R0, [SP, #8] 
    /*0001d0e8*/ BL          0x000000000001D0E8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d0ec*/ STR         R0, [SP] 
    /*0001d0f0*/ LDR         R3, [SP] 
    /*0001d0f4*/ BFI         R3, R4, #0, #3 
    /*0001d0f8*/ STR         R3, [SP] 
    /*0001d0fc*/ LDR         R0, [SP, #8] 
    /*0001d100*/ LDR         R1, [SP] 
    /*0001d104*/ BL          0x000000000001D104          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d108*/ MOV         R0, #1 
    HAL_LAYER_SetLayerDataFmt_x1d10c:
    /*0001d10c*/ ADD         SP, SP, #16 
    /*0001d110*/ POP         {R4, PC} 
    HAL_LAYER_SetLayerDataFmt_x1d114:
    /*0001d114*/ CMP         R3, #3 
    /*0001d118*/ MOVNE       R0, #0 
    /*0001d11c*/ BNE         HAL_LAYER_SetLayerDataFmt_x1d10c
    /*0001d120*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d124*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d128*/ UXTB        R4, R4 
    /*0001d12c*/ LDR         R1, [R3] 
    /*0001d130*/ ADD         R1, R1, #68608              @ 0x10c00 
    /*0001d134*/ ADD         R1, R1, #576                @ 0x240 
    /*0001d138*/ BL          0x000000000001D138          @ Vou_GetGfxAbsAddr [R_ARM_CALL: .text+0x1aad8] 
    /*0001d13c*/ STR         R0, [SP, #8] 
    /*0001d140*/ LDR         R0, [SP, #8] 
    /*0001d144*/ BL          0x000000000001D144          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d148*/ STR         R0, [SP, #4] 
    /*0001d14c*/ LDR         R3, [SP, #4] 
    /*0001d150*/ BFI         R3, R4, #0, #8 
    /*0001d154*/ STR         R3, [SP, #4] 
    /*0001d158*/ LDR         R0, [SP, #8] 
    /*0001d15c*/ LDR         R1, [SP, #4] 
    /*0001d160*/ BL          0x000000000001D160          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d164*/ MOV         R0, #1 
    /*0001d168*/ B           HAL_LAYER_SetLayerDataFmt_x1d10c
FUNC_END HAL_LAYER_SetLayerDataFmt


FUNC_BEGIN HAL_LAYER_SetLayerBitWidth
    /*0001d16c*/ CMP         R0, #0 
    /*0001d170*/ BNE         HAL_LAYER_SetLayerBitWidth_x1d1d0
    /*0001d174*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d178*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d17c*/ PUSH        {R4, LR} 
    /*0001d180*/ SUB         SP, SP, #16 
    /*0001d184*/ LDR         R3, [R3] 
    /*0001d188*/ MOV         R4, R1 
    /*0001d18c*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001d190*/ ADD         R3, R3, #576                @ 0x240 
    /*0001d194*/ STR         R3, [SP, #12] 
    /*0001d198*/ LDR         R3, [SP, #12] 
    /*0001d19c*/ STR         R3, [SP, #8] 
    /*0001d1a0*/ LDR         R0, [SP, #8] 
    /*0001d1a4*/ BL          0x000000000001D1A4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d1a8*/ STR         R0, [SP, #4] 
    /*0001d1ac*/ LDR         R3, [SP, #4] 
    /*0001d1b0*/ BFI         R3, R4, #8, #2 
    /*0001d1b4*/ STR         R3, [SP, #4] 
    /*0001d1b8*/ LDR         R0, [SP, #8] 
    /*0001d1bc*/ LDR         R1, [SP, #4] 
    /*0001d1c0*/ BL          0x000000000001D1C0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d1c4*/ MOV         R0, #1 
    /*0001d1c8*/ ADD         SP, SP, #16 
    /*0001d1cc*/ POP         {R4, PC} 
    HAL_LAYER_SetLayerBitWidth_x1d1d0:
    /*0001d1d0*/ MOV         R0, #0 
    /*0001d1d4*/ BX          LR 
FUNC_END HAL_LAYER_SetLayerBitWidth


FUNC_BEGIN HAL_LAYER_SetSrcResolution
    /*0001d1d8*/ CMP         R0, #0 
    /*0001d1dc*/ BNE         HAL_LAYER_SetSrcResolution_x1d244
    /*0001d1e0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d1e4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d1e8*/ PUSH        {R4, LR} 
    /*0001d1ec*/ SUB         SP, SP, #8 
    /*0001d1f0*/ LDR         R3, [R3] 
    /*0001d1f4*/ MOV         R4, R1 
    /*0001d1f8*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001d1fc*/ ADD         R3, R3, #580                @ 0x244 
    /*0001d200*/ STR         R3, [SP, #4] 
    /*0001d204*/ LDR         R3, [SP, #4] 
    /*0001d208*/ STR         R3, [SP] 
    /*0001d20c*/ LDR         R0, [SP] 
    /*0001d210*/ BL          0x000000000001D210          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d214*/ LDR         R2, [R4, #8] 
    /*0001d218*/ LDR         R3, [R4, #12] 
    /*0001d21c*/ SUB         R2, R2, #1 
    /*0001d220*/ SUB         R3, R3, #1 
    /*0001d224*/ MOV         R1, R0 
    /*0001d228*/ BFI         R1, R2, #0, #16 
    /*0001d22c*/ LDR         R0, [SP] 
    /*0001d230*/ BFI         R1, R3, #16, #16 
    /*0001d234*/ BL          0x000000000001D234          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d238*/ MOV         R0, #1 
    /*0001d23c*/ ADD         SP, SP, #8 
    /*0001d240*/ POP         {R4, PC} 
    HAL_LAYER_SetSrcResolution_x1d244:
    /*0001d244*/ MOV         R0, #0 
    /*0001d248*/ BX          LR 
FUNC_END HAL_LAYER_SetSrcResolution


FUNC_BEGIN HAL_LAYER_GetLayerDataFmt
    /*0001d24c*/ CMP         R0, #0 
    /*0001d250*/ BNE         HAL_LAYER_GetLayerDataFmt_x1d2a4
    /*0001d254*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d258*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d25c*/ PUSH        {R4, LR} 
    /*0001d260*/ SUB         SP, SP, #16 
    /*0001d264*/ LDR         R3, [R3] 
    /*0001d268*/ MOV         R4, R1 
    /*0001d26c*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001d270*/ ADD         R3, R3, #576                @ 0x240 
    /*0001d274*/ STR         R3, [SP, #12] 
    /*0001d278*/ LDR         R3, [SP, #12] 
    /*0001d27c*/ STR         R3, [SP, #8] 
    /*0001d280*/ LDR         R0, [SP, #8] 
    /*0001d284*/ BL          0x000000000001D284          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d288*/ STR         R0, [SP, #4] 
    /*0001d28c*/ MOV         R0, #1 
    /*0001d290*/ LDR         R3, [SP, #4] 
    /*0001d294*/ AND         R3, R3, #7 
    /*0001d298*/ STR         R3, [R4] 
    /*0001d29c*/ ADD         SP, SP, #16 
    /*0001d2a0*/ POP         {R4, PC} 
    HAL_LAYER_GetLayerDataFmt_x1d2a4:
    /*0001d2a4*/ MOV         R0, #0 
    /*0001d2a8*/ BX          LR 
FUNC_END HAL_LAYER_GetLayerDataFmt


FUNC_BEGIN HAL_VIDEO_CVFIR_SetOutHeight
    /*0001d2ac*/ CMP         R0, #0 
    /*0001d2b0*/ BXNE        LR 
    /*0001d2b4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d2b8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d2bc*/ PUSH        {R4, LR} 
    /*0001d2c0*/ SUB         SP, SP, #8 
    /*0001d2c4*/ LDR         R3, [R3] 
    /*0001d2c8*/ MOV         R4, R1 
    /*0001d2cc*/ SUB         R4, R4, #1 
    /*0001d2d0*/ ADD         R3, R3, #5120               @ 0x1400 
    /*0001d2d4*/ STR         R3, [SP, #4] 
    /*0001d2d8*/ LDR         R0, [SP, #4] 
    /*0001d2dc*/ BL          0x000000000001D2DC          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d2e0*/ MOV         R1, R0 
    /*0001d2e4*/ LDR         R0, [SP, #4] 
    /*0001d2e8*/ BFI         R1, R4, #0, #16 
    /*0001d2ec*/ BL          0x000000000001D2EC          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d2f0*/ ADD         SP, SP, #8 
    /*0001d2f4*/ POP         {R4, PC} 
FUNC_END HAL_VIDEO_CVFIR_SetOutHeight


FUNC_BEGIN HAL_VIDEO_CVFIR_SetOutFmt
    /*0001d2f8*/ CMP         R0, #0 
    /*0001d2fc*/ BXNE        LR 
    /*0001d300*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d304*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d308*/ PUSH        {R4, LR} 
    /*0001d30c*/ SUB         SP, SP, #8 
    /*0001d310*/ LDR         R3, [R3] 
    /*0001d314*/ MOV         R4, R1 
    /*0001d318*/ ADD         R3, R3, #5120               @ 0x1400 
    /*0001d31c*/ STR         R3, [SP, #4] 
    /*0001d320*/ LDR         R0, [SP, #4] 
    /*0001d324*/ BL          0x000000000001D324          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d328*/ MOV         R1, R0 
    /*0001d32c*/ LDR         R0, [SP, #4] 
    /*0001d330*/ BFI         R1, R4, #16, #2 
    /*0001d334*/ BL          0x000000000001D334          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d338*/ ADD         SP, SP, #8 
    /*0001d33c*/ POP         {R4, PC} 
FUNC_END HAL_VIDEO_CVFIR_SetOutFmt


FUNC_BEGIN HAL_VIDEO_CVFIR_SetOutPro
    /*0001d340*/ CMP         R0, #0 
    /*0001d344*/ BXNE        LR 
    /*0001d348*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d34c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d350*/ PUSH        {R4, LR} 
    /*0001d354*/ SUB         SP, SP, #8 
    /*0001d358*/ LDR         R3, [R3] 
    /*0001d35c*/ MOV         R4, R1 
    /*0001d360*/ ADD         R3, R3, #5120               @ 0x1400 
    /*0001d364*/ STR         R3, [SP, #4] 
    /*0001d368*/ LDR         R0, [SP, #4] 
    /*0001d36c*/ BL          0x000000000001D36C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d370*/ MOV         R1, R0 
    /*0001d374*/ LDR         R0, [SP, #4] 
    /*0001d378*/ BFI         R1, R4, #18, #1 
    /*0001d37c*/ BL          0x000000000001D37C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d380*/ ADD         SP, SP, #8 
    /*0001d384*/ POP         {R4, PC} 
FUNC_END HAL_VIDEO_CVFIR_SetOutPro


FUNC_BEGIN HAL_VIDEO_CVFIR_SetVzmeCkGtEn
    /*0001d388*/ CMP         R0, #0 
    /*0001d38c*/ BXNE        LR 
    /*0001d390*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d394*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d398*/ PUSH        {R4, LR} 
    /*0001d39c*/ SUB         SP, SP, #8 
    /*0001d3a0*/ LDR         R3, [R3] 
    /*0001d3a4*/ MOV         R4, R1 
    /*0001d3a8*/ ADD         R3, R3, #5120               @ 0x1400 
    /*0001d3ac*/ STR         R3, [SP, #4] 
    /*0001d3b0*/ LDR         R0, [SP, #4] 
    /*0001d3b4*/ BL          0x000000000001D3B4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d3b8*/ MOV         R1, R0 
    /*0001d3bc*/ LDR         R0, [SP, #4] 
    /*0001d3c0*/ BFI         R1, R4, #19, #1 
    /*0001d3c4*/ BL          0x000000000001D3C4          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d3c8*/ ADD         SP, SP, #8 
    /*0001d3cc*/ POP         {R4, PC} 
FUNC_END HAL_VIDEO_CVFIR_SetVzmeCkGtEn


FUNC_BEGIN HAL_VIDEO_CVFIR_SetCvfirEn
    /*0001d3d0*/ CMP         R0, #0 
    /*0001d3d4*/ BXNE        LR 
    /*0001d3d8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d3dc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d3e0*/ PUSH        {R4, LR} 
    /*0001d3e4*/ SUB         SP, SP, #8 
    /*0001d3e8*/ LDR         R3, [R3] 
    /*0001d3ec*/ MOV         R4, R1 
    /*0001d3f0*/ ADD         R3, R3, #5120               @ 0x1400 
    /*0001d3f4*/ ADD         R3, R3, #4 
    /*0001d3f8*/ STR         R3, [SP, #4] 
    /*0001d3fc*/ LDR         R0, [SP, #4] 
    /*0001d400*/ BL          0x000000000001D400          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d404*/ MOV         R1, R0 
    /*0001d408*/ LDR         R0, [SP, #4] 
    /*0001d40c*/ BFI         R1, R4, #30, #1 
    /*0001d410*/ BL          0x000000000001D410          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d414*/ ADD         SP, SP, #8 
    /*0001d418*/ POP         {R4, PC} 
FUNC_END HAL_VIDEO_CVFIR_SetCvfirEn


FUNC_BEGIN HAL_VIDEO_CVFIR_SetCvmidEn
    /*0001d41c*/ CMP         R0, #0 
    /*0001d420*/ BXNE        LR 
    /*0001d424*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d428*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d42c*/ PUSH        {R4, LR} 
    /*0001d430*/ SUB         SP, SP, #8 
    /*0001d434*/ LDR         R3, [R3] 
    /*0001d438*/ MOV         R4, R1 
    /*0001d43c*/ ADD         R3, R3, #5120               @ 0x1400 
    /*0001d440*/ ADD         R3, R3, #4 
    /*0001d444*/ STR         R3, [SP, #4] 
    /*0001d448*/ LDR         R0, [SP, #4] 
    /*0001d44c*/ BL          0x000000000001D44C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d450*/ MOV         R1, R0 
    /*0001d454*/ LDR         R0, [SP, #4] 
    /*0001d458*/ BFI         R1, R4, #28, #1 
    /*0001d45c*/ BL          0x000000000001D45C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d460*/ ADD         SP, SP, #8 
    /*0001d464*/ POP         {R4, PC} 
FUNC_END HAL_VIDEO_CVFIR_SetCvmidEn


FUNC_BEGIN HAL_VIDEO_CVFIR_SetCvfirMode
    /*0001d468*/ CMP         R0, #0 
    /*0001d46c*/ BXNE        LR 
    /*0001d470*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d474*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d478*/ PUSH        {R4, LR} 
    /*0001d47c*/ SUB         SP, SP, #8 
    /*0001d480*/ LDR         R3, [R3] 
    /*0001d484*/ MOV         R4, R1 
    /*0001d488*/ ADD         R3, R3, #5120               @ 0x1400 
    /*0001d48c*/ ADD         R3, R3, #4 
    /*0001d490*/ STR         R3, [SP, #4] 
    /*0001d494*/ LDR         R0, [SP, #4] 
    /*0001d498*/ BL          0x000000000001D498          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d49c*/ MOV         R1, R0 
    /*0001d4a0*/ LDR         R0, [SP, #4] 
    /*0001d4a4*/ BFI         R1, R4, #25, #1 
    /*0001d4a8*/ BL          0x000000000001D4A8          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d4ac*/ ADD         SP, SP, #8 
    /*0001d4b0*/ POP         {R4, PC} 
FUNC_END HAL_VIDEO_CVFIR_SetCvfirMode


FUNC_BEGIN HAL_VIDEO_CVFIR_SetVratio
    /*0001d4b4*/ CMP         R0, #0 
    /*0001d4b8*/ BXNE        LR 
    /*0001d4bc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d4c0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d4c4*/ PUSH        {R4, LR} 
    /*0001d4c8*/ SUB         SP, SP, #8 
    /*0001d4cc*/ LDR         R3, [R3] 
    /*0001d4d0*/ MOV         R4, R1 
    /*0001d4d4*/ ADD         R3, R3, #5120               @ 0x1400 
    /*0001d4d8*/ ADD         R3, R3, #4 
    /*0001d4dc*/ STR         R3, [SP, #4] 
    /*0001d4e0*/ LDR         R0, [SP, #4] 
    /*0001d4e4*/ BL          0x000000000001D4E4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d4e8*/ MOV         R1, R0 
    /*0001d4ec*/ LDR         R0, [SP, #4] 
    /*0001d4f0*/ BFI         R1, R4, #0, #16 
    /*0001d4f4*/ BL          0x000000000001D4F4          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d4f8*/ ADD         SP, SP, #8 
    /*0001d4fc*/ POP         {R4, PC} 
FUNC_END HAL_VIDEO_CVFIR_SetVratio


FUNC_BEGIN HAL_VIDEO_CVFIR_SetVChromaOffset
    /*0001d500*/ CMP         R0, #0 
    /*0001d504*/ BXNE        LR 
    /*0001d508*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d50c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d510*/ PUSH        {R4, LR} 
    /*0001d514*/ SUB         SP, SP, #8 
    /*0001d518*/ LDR         R3, [R3] 
    /*0001d51c*/ MOV         R4, R1 
    /*0001d520*/ ADD         R3, R3, #5120               @ 0x1400 
    /*0001d524*/ ADD         R3, R3, #8 
    /*0001d528*/ STR         R3, [SP, #4] 
    /*0001d52c*/ LDR         R0, [SP, #4] 
    /*0001d530*/ BL          0x000000000001D530          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d534*/ MOV         R1, R0 
    /*0001d538*/ LDR         R0, [SP, #4] 
    /*0001d53c*/ BFI         R1, R4, #0, #16 
    /*0001d540*/ BL          0x000000000001D540          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d544*/ ADD         SP, SP, #8 
    /*0001d548*/ POP         {R4, PC} 
FUNC_END HAL_VIDEO_CVFIR_SetVChromaOffset


FUNC_BEGIN HAL_VIDEO_CVFIR_SetVbChromaOffset
    /*0001d54c*/ CMP         R0, #0 
    /*0001d550*/ BXNE        LR 
    /*0001d554*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d558*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d55c*/ PUSH        {R4, LR} 
    /*0001d560*/ SUB         SP, SP, #8 
    /*0001d564*/ LDR         R3, [R3] 
    /*0001d568*/ MOV         R4, R1 
    /*0001d56c*/ ADD         R3, R3, #5120               @ 0x1400 
    /*0001d570*/ ADD         R3, R3, #12 
    /*0001d574*/ STR         R3, [SP, #4] 
    /*0001d578*/ LDR         R0, [SP, #4] 
    /*0001d57c*/ BL          0x000000000001D57C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d580*/ MOV         R1, R0 
    /*0001d584*/ LDR         R0, [SP, #4] 
    /*0001d588*/ BFI         R1, R4, #0, #16 
    /*0001d58c*/ BL          0x000000000001D58C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d590*/ ADD         SP, SP, #8 
    /*0001d594*/ POP         {R4, PC} 
FUNC_END HAL_VIDEO_CVFIR_SetVbChromaOffset


FUNC_BEGIN HAL_VIDEO_CVFIR_SetCoef
    /*0001d598*/ CMP         R0, #0 
    /*0001d59c*/ BXNE        LR 
    /*0001d5a0*/ PUSH        {R4, R5, LR} 
    /*0001d5a4*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d5a8*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d5ac*/ SUB         SP, SP, #12 
    /*0001d5b0*/ MOV         R4, R1 
    /*0001d5b4*/ LDR         R3, [R5] 
    /*0001d5b8*/ ADD         R3, R3, #5120               @ 0x1400 
    /*0001d5bc*/ ADD         R3, R3, #48                 @ 0x30 
    /*0001d5c0*/ STR         R3, [SP, #4] 
    /*0001d5c4*/ LDR         R0, [SP, #4] 
    /*0001d5c8*/ BL          0x000000000001D5C8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d5cc*/ LDR         R3, [R4] 
    /*0001d5d0*/ LDR         R2, [R4, #4] 
    /*0001d5d4*/ MOV         R1, R0 
    /*0001d5d8*/ BFI         R1, R3, #20, #10 
    /*0001d5dc*/ LDR         R3, [R4, #8] 
    /*0001d5e0*/ BFI         R1, R2, #10, #10 
    /*0001d5e4*/ LDR         R0, [SP, #4] 
    /*0001d5e8*/ BFI         R1, R3, #0, #10 
    /*0001d5ec*/ BL          0x000000000001D5EC          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d5f0*/ LDR         R3, [R5] 
    /*0001d5f4*/ ADD         R3, R3, #5120               @ 0x1400 
    /*0001d5f8*/ ADD         R3, R3, #52                 @ 0x34 
    /*0001d5fc*/ STR         R3, [SP, #4] 
    /*0001d600*/ LDR         R0, [SP, #4] 
    /*0001d604*/ BL          0x000000000001D604          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d608*/ LDR         R3, [R4, #12] 
    /*0001d60c*/ LDR         R2, [R4, #16] 
    /*0001d610*/ MOV         R1, R0 
    /*0001d614*/ BFI         R1, R3, #20, #10 
    /*0001d618*/ LDR         R3, [R4, #20] 
    /*0001d61c*/ BFI         R1, R2, #10, #10 
    /*0001d620*/ LDR         R0, [SP, #4] 
    /*0001d624*/ BFI         R1, R3, #0, #10 
    /*0001d628*/ BL          0x000000000001D628          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d62c*/ LDR         R3, [R5] 
    /*0001d630*/ ADD         R3, R3, #5120               @ 0x1400 
    /*0001d634*/ ADD         R3, R3, #56                 @ 0x38 
    /*0001d638*/ STR         R3, [SP, #4] 
    /*0001d63c*/ LDR         R0, [SP, #4] 
    /*0001d640*/ BL          0x000000000001D640          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d644*/ LDR         R2, [R4, #24] 
    /*0001d648*/ LDR         R3, [R4, #28] 
    /*0001d64c*/ MOV         R1, R0 
    /*0001d650*/ BFI         R1, R2, #10, #10 
    /*0001d654*/ LDR         R0, [SP, #4] 
    /*0001d658*/ BFI         R1, R3, #0, #10 
    /*0001d65c*/ BL          0x000000000001D65C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d660*/ ADD         SP, SP, #12 
    /*0001d664*/ POP         {R4, R5, PC} 
FUNC_END HAL_VIDEO_CVFIR_SetCoef


FUNC_BEGIN HAL_VIDEO_HFIR_SetCkGtEn
    /*0001d668*/ CMP         R0, #0 
    /*0001d66c*/ BXNE        LR 
    /*0001d670*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d674*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d678*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001d67c*/ SUB         SP, SP, #12 
    /*0001d680*/ LDR         R3, [R3] 
    /*0001d684*/ ADD         R3, R3, #5376               @ 0x1500 
    /*0001d688*/ STR         R3, [SP, #4] 
    /*0001d68c*/ LDR         R0, [SP, #4] 
    /*0001d690*/ BL          0x000000000001D690          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d694*/ LDR         R3, [SP, #4] 
    /*0001d698*/ ORR         R1, R0, #16 
    /*0001d69c*/ MOV         R0, R3 
    /*0001d6a0*/ BL          0x000000000001D6A0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d6a4*/ ADD         SP, SP, #12 
    /*0001d6a8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END HAL_VIDEO_HFIR_SetCkGtEn


FUNC_BEGIN HAL_VIDEO_HFIR_SetMidEn
    /*0001d6ac*/ CMP         R0, #0 
    /*0001d6b0*/ BXNE        LR 
    /*0001d6b4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d6b8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d6bc*/ PUSH        {R4, LR} 
    /*0001d6c0*/ SUB         SP, SP, #8 
    /*0001d6c4*/ LDR         R3, [R3] 
    /*0001d6c8*/ MOV         R4, R1 
    /*0001d6cc*/ ADD         R3, R3, #5376               @ 0x1500 
    /*0001d6d0*/ STR         R3, [SP, #4] 
    /*0001d6d4*/ LDR         R0, [SP, #4] 
    /*0001d6d8*/ BL          0x000000000001D6D8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d6dc*/ MOV         R1, R0 
    /*0001d6e0*/ LDR         R0, [SP, #4] 
    /*0001d6e4*/ BFI         R1, R4, #3, #1 
    /*0001d6e8*/ BL          0x000000000001D6E8          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d6ec*/ ADD         SP, SP, #8 
    /*0001d6f0*/ POP         {R4, PC} 
FUNC_END HAL_VIDEO_HFIR_SetMidEn


FUNC_BEGIN HAL_VIDEO_HFIR_SetHfirMode
    /*0001d6f4*/ CMP         R0, #0 
    /*0001d6f8*/ BXNE        LR 
    /*0001d6fc*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d700*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d704*/ PUSH        {R4, LR} 
    /*0001d708*/ SUB         SP, SP, #8 
    /*0001d70c*/ LDR         R3, [R3] 
    /*0001d710*/ MOV         R4, R1 
    /*0001d714*/ ADD         R3, R3, #5376               @ 0x1500 
    /*0001d718*/ STR         R3, [SP, #4] 
    /*0001d71c*/ LDR         R0, [SP, #4] 
    /*0001d720*/ BL          0x000000000001D720          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d724*/ MOV         R1, R0 
    /*0001d728*/ LDR         R0, [SP, #4] 
    /*0001d72c*/ BFI         R1, R4, #1, #2 
    /*0001d730*/ BL          0x000000000001D730          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d734*/ ADD         SP, SP, #8 
    /*0001d738*/ POP         {R4, PC} 
FUNC_END HAL_VIDEO_HFIR_SetHfirMode


FUNC_BEGIN HAL_VIDEO_HFIR_SetCoef
    /*0001d73c*/ CMP         R0, #0 
    /*0001d740*/ BXNE        LR 
    /*0001d744*/ PUSH        {R4, R5, LR} 
    /*0001d748*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d74c*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d750*/ SUB         SP, SP, #12 
    /*0001d754*/ MOV         R4, R1 
    /*0001d758*/ LDR         R3, [R5] 
    /*0001d75c*/ ADD         R3, R3, #5376               @ 0x1500 
    /*0001d760*/ ADD         R3, R3, #4 
    /*0001d764*/ STR         R3, [SP, #4] 
    /*0001d768*/ LDR         R0, [SP, #4] 
    /*0001d76c*/ BL          0x000000000001D76C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d770*/ LDM         R4, {R2, R3} 
    /*0001d774*/ MOV         R1, R0 
    /*0001d778*/ BFI         R1, R2, #0, #10 
    /*0001d77c*/ BFI         R1, R3, #16, #10 
    /*0001d780*/ LDR         R0, [SP, #4] 
    /*0001d784*/ BL          0x000000000001D784          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d788*/ LDR         R3, [R5] 
    /*0001d78c*/ ADD         R3, R3, #5376               @ 0x1500 
    /*0001d790*/ ADD         R3, R3, #8 
    /*0001d794*/ STR         R3, [SP, #4] 
    /*0001d798*/ LDR         R0, [SP, #4] 
    /*0001d79c*/ BL          0x000000000001D79C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d7a0*/ LDR         R2, [R4, #8] 
    /*0001d7a4*/ LDR         R3, [R4, #12] 
    /*0001d7a8*/ MOV         R1, R0 
    /*0001d7ac*/ BFI         R1, R2, #0, #10 
    /*0001d7b0*/ BFI         R1, R3, #16, #10 
    /*0001d7b4*/ LDR         R0, [SP, #4] 
    /*0001d7b8*/ BL          0x000000000001D7B8          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d7bc*/ LDR         R3, [R5] 
    /*0001d7c0*/ ADD         R3, R3, #5376               @ 0x1500 
    /*0001d7c4*/ ADD         R3, R3, #12 
    /*0001d7c8*/ STR         R3, [SP, #4] 
    /*0001d7cc*/ LDR         R0, [SP, #4] 
    /*0001d7d0*/ BL          0x000000000001D7D0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d7d4*/ LDR         R2, [R4, #16] 
    /*0001d7d8*/ LDR         R3, [R4, #20] 
    /*0001d7dc*/ MOV         R1, R0 
    /*0001d7e0*/ BFI         R1, R2, #0, #10 
    /*0001d7e4*/ BFI         R1, R3, #16, #10 
    /*0001d7e8*/ LDR         R0, [SP, #4] 
    /*0001d7ec*/ BL          0x000000000001D7EC          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d7f0*/ LDR         R3, [R5] 
    /*0001d7f4*/ ADD         R3, R3, #5376               @ 0x1500 
    /*0001d7f8*/ ADD         R3, R3, #16 
    /*0001d7fc*/ STR         R3, [SP, #4] 
    /*0001d800*/ LDR         R0, [SP, #4] 
    /*0001d804*/ BL          0x000000000001D804          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d808*/ LDR         R2, [R4, #24] 
    /*0001d80c*/ LDR         R3, [R4, #28] 
    /*0001d810*/ MOV         R1, R0 
    /*0001d814*/ BFI         R1, R2, #0, #10 
    /*0001d818*/ LDR         R0, [SP, #4] 
    /*0001d81c*/ BFI         R1, R3, #16, #10 
    /*0001d820*/ BL          0x000000000001D820          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d824*/ ADD         SP, SP, #12 
    /*0001d828*/ POP         {R4, R5, PC} 
FUNC_END HAL_VIDEO_HFIR_SetCoef


FUNC_BEGIN HAL_LAYER_CSC_SetEnable
    /*0001d82c*/ CMP         R0, #0 
    /*0001d830*/ PUSH        {R4, LR} 
    /*0001d834*/ MOV         R4, R1 
    /*0001d838*/ SUB         SP, SP, #8 
    /*0001d83c*/ BNE         HAL_LAYER_CSC_SetEnable_x1d874
    /*0001d840*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d844*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d848*/ LDR         R3, [R3] 
    /*0001d84c*/ ADD         R3, R3, #4608               @ 0x1200 
    /*0001d850*/ STR         R3, [SP] 
    /*0001d854*/ LDR         R0, [SP] 
    /*0001d858*/ BL          0x000000000001D858          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d85c*/ MOV         R1, R0 
    /*0001d860*/ LDR         R0, [SP] 
    /*0001d864*/ BFI         R1, R4, #0, #1 
    /*0001d868*/ BL          0x000000000001D868          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    HAL_LAYER_CSC_SetEnable_x1d86c:
    /*0001d86c*/ ADD         SP, SP, #8 
    /*0001d870*/ POP         {R4, PC} 
    HAL_LAYER_CSC_SetEnable_x1d874:
    /*0001d874*/ SUB         R3, R0, #3 
    /*0001d878*/ CMP         R3, #1 
    /*0001d87c*/ BHI         HAL_LAYER_CSC_SetEnable_x1d86c
    /*0001d880*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d884*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d888*/ CMP         R0, #3 
    /*0001d88c*/ LDR         R3, [R3] 
    /*0001d890*/ MOVNE       R3, #0 
    /*0001d894*/ ADDEQ       R3, R3, #28928              @ 0x7100 
    /*0001d898*/ STR         R3, [SP, #4] 
    /*0001d89c*/ LDR         R0, [SP, #4] 
    /*0001d8a0*/ BL          0x000000000001D8A0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d8a4*/ MOV         R1, R0 
    /*0001d8a8*/ LDR         R0, [SP, #4] 
    /*0001d8ac*/ BFI         R1, R4, #0, #1 
    /*0001d8b0*/ BL          0x000000000001D8B0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d8b4*/ ADD         SP, SP, #8 
    /*0001d8b8*/ POP         {R4, PC} 
FUNC_END HAL_LAYER_CSC_SetEnable


FUNC_BEGIN HAL_LAYER_CSC_SetCkGtEn
    /*0001d8bc*/ CMP         R0, #0 
    /*0001d8c0*/ PUSH        {R4, LR} 
    /*0001d8c4*/ MOV         R4, R1 
    /*0001d8c8*/ SUB         SP, SP, #8 
    /*0001d8cc*/ BNE         HAL_LAYER_CSC_SetCkGtEn_x1d904
    /*0001d8d0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d8d4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d8d8*/ LDR         R3, [R3] 
    /*0001d8dc*/ ADD         R3, R3, #4608               @ 0x1200 
    /*0001d8e0*/ STR         R3, [SP] 
    /*0001d8e4*/ LDR         R0, [SP] 
    /*0001d8e8*/ BL          0x000000000001D8E8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d8ec*/ MOV         R1, R0 
    /*0001d8f0*/ LDR         R0, [SP] 
    /*0001d8f4*/ BFI         R1, R4, #2, #1 
    /*0001d8f8*/ BL          0x000000000001D8F8          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    HAL_LAYER_CSC_SetCkGtEn_x1d8fc:
    /*0001d8fc*/ ADD         SP, SP, #8 
    /*0001d900*/ POP         {R4, PC} 
    HAL_LAYER_CSC_SetCkGtEn_x1d904:
    /*0001d904*/ SUB         R3, R0, #3 
    /*0001d908*/ CMP         R3, #1 
    /*0001d90c*/ BHI         HAL_LAYER_CSC_SetCkGtEn_x1d8fc
    /*0001d910*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d914*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d918*/ CMP         R0, #3 
    /*0001d91c*/ LDR         R3, [R3] 
    /*0001d920*/ MOVNE       R3, #0 
    /*0001d924*/ ADDEQ       R3, R3, #28928              @ 0x7100 
    /*0001d928*/ STR         R3, [SP, #4] 
    /*0001d92c*/ LDR         R0, [SP, #4] 
    /*0001d930*/ BL          0x000000000001D930          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d934*/ MOV         R1, R0 
    /*0001d938*/ LDR         R0, [SP, #4] 
    /*0001d93c*/ BFI         R1, R4, #2, #1 
    /*0001d940*/ BL          0x000000000001D940          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d944*/ ADD         SP, SP, #8 
    /*0001d948*/ POP         {R4, PC} 
FUNC_END HAL_LAYER_CSC_SetCkGtEn


FUNC_BEGIN HAL_LAYER_CSC_SetCoef
    /*0001d94c*/ CMP         R0, #0 
    /*0001d950*/ PUSH        {R4, R5, LR} 
    /*0001d954*/ MOV         R4, R1 
    /*0001d958*/ SUB         SP, SP, #12 
    /*0001d95c*/ BNE         HAL_LAYER_CSC_SetCoef_x1dafc
    /*0001d960*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001d964*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001d968*/ LDR         R3, [R5] 
    /*0001d96c*/ ADD         R3, R3, #4608               @ 0x1200 
    /*0001d970*/ ADD         R3, R3, #4 
    /*0001d974*/ STR         R3, [SP, #4] 
    /*0001d978*/ LDR         R0, [SP, #4] 
    /*0001d97c*/ BL          0x000000000001D97C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d980*/ LDR         R3, [R4] 
    /*0001d984*/ MOV         R1, R0 
    /*0001d988*/ LDR         R0, [SP, #4] 
    /*0001d98c*/ BFI         R1, R3, #0, #16 
    /*0001d990*/ BL          0x000000000001D990          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d994*/ LDR         R3, [R5] 
    /*0001d998*/ ADD         R3, R3, #4608               @ 0x1200 
    /*0001d99c*/ ADD         R3, R3, #8 
    /*0001d9a0*/ STR         R3, [SP, #4] 
    /*0001d9a4*/ LDR         R0, [SP, #4] 
    /*0001d9a8*/ BL          0x000000000001D9A8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d9ac*/ LDR         R3, [R4, #4] 
    /*0001d9b0*/ MOV         R1, R0 
    /*0001d9b4*/ LDR         R0, [SP, #4] 
    /*0001d9b8*/ BFI         R1, R3, #0, #16 
    /*0001d9bc*/ BL          0x000000000001D9BC          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d9c0*/ LDR         R3, [R5] 
    /*0001d9c4*/ ADD         R3, R3, #4608               @ 0x1200 
    /*0001d9c8*/ ADD         R3, R3, #12 
    /*0001d9cc*/ STR         R3, [SP, #4] 
    /*0001d9d0*/ LDR         R0, [SP, #4] 
    /*0001d9d4*/ BL          0x000000000001D9D4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001d9d8*/ LDR         R3, [R4, #8] 
    /*0001d9dc*/ MOV         R1, R0 
    /*0001d9e0*/ LDR         R0, [SP, #4] 
    /*0001d9e4*/ BFI         R1, R3, #0, #16 
    /*0001d9e8*/ BL          0x000000000001D9E8          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001d9ec*/ LDR         R3, [R5] 
    /*0001d9f0*/ ADD         R3, R3, #4608               @ 0x1200 
    /*0001d9f4*/ ADD         R3, R3, #16 
    /*0001d9f8*/ STR         R3, [SP, #4] 
    /*0001d9fc*/ LDR         R0, [SP, #4] 
    /*0001da00*/ BL          0x000000000001DA00          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001da04*/ LDR         R3, [R4, #12] 
    /*0001da08*/ MOV         R1, R0 
    /*0001da0c*/ LDR         R0, [SP, #4] 
    /*0001da10*/ BFI         R1, R3, #0, #16 
    /*0001da14*/ BL          0x000000000001DA14          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001da18*/ LDR         R3, [R5] 
    /*0001da1c*/ ADD         R3, R3, #4608               @ 0x1200 
    /*0001da20*/ ADD         R3, R3, #20 
    /*0001da24*/ STR         R3, [SP, #4] 
    /*0001da28*/ LDR         R0, [SP, #4] 
    /*0001da2c*/ BL          0x000000000001DA2C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001da30*/ LDR         R3, [R4, #16] 
    /*0001da34*/ MOV         R1, R0 
    /*0001da38*/ LDR         R0, [SP, #4] 
    /*0001da3c*/ BFI         R1, R3, #0, #16 
    /*0001da40*/ BL          0x000000000001DA40          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001da44*/ LDR         R3, [R5] 
    /*0001da48*/ ADD         R3, R3, #4608               @ 0x1200 
    /*0001da4c*/ ADD         R3, R3, #24 
    /*0001da50*/ STR         R3, [SP, #4] 
    /*0001da54*/ LDR         R0, [SP, #4] 
    /*0001da58*/ BL          0x000000000001DA58          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001da5c*/ LDR         R3, [R4, #20] 
    /*0001da60*/ MOV         R1, R0 
    /*0001da64*/ LDR         R0, [SP, #4] 
    /*0001da68*/ BFI         R1, R3, #0, #16 
    /*0001da6c*/ BL          0x000000000001DA6C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001da70*/ LDR         R3, [R5] 
    /*0001da74*/ ADD         R3, R3, #4608               @ 0x1200 
    /*0001da78*/ ADD         R3, R3, #28 
    /*0001da7c*/ STR         R3, [SP, #4] 
    /*0001da80*/ LDR         R0, [SP, #4] 
    /*0001da84*/ BL          0x000000000001DA84          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001da88*/ LDR         R3, [R4, #24] 
    /*0001da8c*/ MOV         R1, R0 
    /*0001da90*/ LDR         R0, [SP, #4] 
    /*0001da94*/ BFI         R1, R3, #0, #16 
    /*0001da98*/ BL          0x000000000001DA98          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001da9c*/ LDR         R3, [R5] 
    /*0001daa0*/ ADD         R3, R3, #4608               @ 0x1200 
    /*0001daa4*/ ADD         R3, R3, #32 
    /*0001daa8*/ STR         R3, [SP, #4] 
    /*0001daac*/ LDR         R0, [SP, #4] 
    /*0001dab0*/ BL          0x000000000001DAB0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001dab4*/ LDR         R3, [R4, #28] 
    /*0001dab8*/ MOV         R1, R0 
    /*0001dabc*/ LDR         R0, [SP, #4] 
    /*0001dac0*/ BFI         R1, R3, #0, #16 
    /*0001dac4*/ BL          0x000000000001DAC4          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001dac8*/ LDR         R3, [R5] 
    /*0001dacc*/ ADD         R3, R3, #4608               @ 0x1200 
    /*0001dad0*/ ADD         R3, R3, #36                 @ 0x24 
    /*0001dad4*/ STR         R3, [SP, #4] 
    HAL_LAYER_CSC_SetCoef_x1dad8:
    /*0001dad8*/ LDR         R0, [SP, #4] 
    /*0001dadc*/ BL          0x000000000001DADC          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001dae0*/ LDR         R3, [R4, #32] 
    /*0001dae4*/ MOV         R1, R0 
    /*0001dae8*/ LDR         R0, [SP, #4] 
    /*0001daec*/ BFI         R1, R3, #0, #16 
    /*0001daf0*/ BL          0x000000000001DAF0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    HAL_LAYER_CSC_SetCoef_x1daf4:
    /*0001daf4*/ ADD         SP, SP, #12 
    /*0001daf8*/ POP         {R4, R5, PC} 
    HAL_LAYER_CSC_SetCoef_x1dafc:
    /*0001dafc*/ SUB         R3, R0, #3 
    /*0001db00*/ CMP         R3, #1 
    /*0001db04*/ BHI         HAL_LAYER_CSC_SetCoef_x1daf4
    /*0001db08*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001db0c*/ CMP         R0, #3 
    /*0001db10*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001db14*/ LDR         R3, [R5] 
    /*0001db18*/ BNE         HAL_LAYER_CSC_SetCoef_x1dc8c
    /*0001db1c*/ ADD         R3, R3, #28928              @ 0x7100 
    /*0001db20*/ ADD         R3, R3, #4 
    /*0001db24*/ STR         R3, [SP, #4] 
    /*0001db28*/ LDR         R0, [SP, #4] 
    /*0001db2c*/ BL          0x000000000001DB2C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001db30*/ LDR         R3, [R4] 
    /*0001db34*/ MOV         R1, R0 
    /*0001db38*/ LDR         R0, [SP, #4] 
    /*0001db3c*/ BFI         R1, R3, #0, #16 
    /*0001db40*/ BL          0x000000000001DB40          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001db44*/ LDR         R3, [R5] 
    /*0001db48*/ ADD         R3, R3, #28928              @ 0x7100 
    /*0001db4c*/ ADD         R3, R3, #8 
    /*0001db50*/ STR         R3, [SP, #4] 
    /*0001db54*/ LDR         R0, [SP, #4] 
    /*0001db58*/ BL          0x000000000001DB58          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001db5c*/ LDR         R3, [R4, #4] 
    /*0001db60*/ MOV         R1, R0 
    /*0001db64*/ LDR         R0, [SP, #4] 
    /*0001db68*/ BFI         R1, R3, #0, #16 
    /*0001db6c*/ BL          0x000000000001DB6C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001db70*/ LDR         R3, [R5] 
    /*0001db74*/ ADD         R3, R3, #28928              @ 0x7100 
    /*0001db78*/ ADD         R3, R3, #12 
    /*0001db7c*/ STR         R3, [SP, #4] 
    /*0001db80*/ LDR         R0, [SP, #4] 
    /*0001db84*/ BL          0x000000000001DB84          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001db88*/ LDR         R3, [R4, #8] 
    /*0001db8c*/ MOV         R1, R0 
    /*0001db90*/ LDR         R0, [SP, #4] 
    /*0001db94*/ BFI         R1, R3, #0, #16 
    /*0001db98*/ BL          0x000000000001DB98          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001db9c*/ LDR         R3, [R5] 
    /*0001dba0*/ ADD         R3, R3, #28928              @ 0x7100 
    /*0001dba4*/ ADD         R3, R3, #16 
    /*0001dba8*/ STR         R3, [SP, #4] 
    /*0001dbac*/ LDR         R0, [SP, #4] 
    /*0001dbb0*/ BL          0x000000000001DBB0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001dbb4*/ LDR         R3, [R4, #12] 
    /*0001dbb8*/ MOV         R1, R0 
    /*0001dbbc*/ LDR         R0, [SP, #4] 
    /*0001dbc0*/ BFI         R1, R3, #0, #16 
    /*0001dbc4*/ BL          0x000000000001DBC4          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001dbc8*/ LDR         R3, [R5] 
    /*0001dbcc*/ ADD         R3, R3, #28928              @ 0x7100 
    /*0001dbd0*/ ADD         R3, R3, #20 
    /*0001dbd4*/ STR         R3, [SP, #4] 
    /*0001dbd8*/ LDR         R0, [SP, #4] 
    /*0001dbdc*/ BL          0x000000000001DBDC          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001dbe0*/ LDR         R3, [R4, #16] 
    /*0001dbe4*/ MOV         R1, R0 
    /*0001dbe8*/ LDR         R0, [SP, #4] 
    /*0001dbec*/ BFI         R1, R3, #0, #16 
    /*0001dbf0*/ BL          0x000000000001DBF0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001dbf4*/ LDR         R3, [R5] 
    /*0001dbf8*/ ADD         R3, R3, #28928              @ 0x7100 
    /*0001dbfc*/ ADD         R3, R3, #24 
    /*0001dc00*/ STR         R3, [SP, #4] 
    /*0001dc04*/ LDR         R0, [SP, #4] 
    /*0001dc08*/ BL          0x000000000001DC08          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001dc0c*/ LDR         R3, [R4, #20] 
    /*0001dc10*/ MOV         R1, R0 
    /*0001dc14*/ LDR         R0, [SP, #4] 
    /*0001dc18*/ BFI         R1, R3, #0, #16 
    /*0001dc1c*/ BL          0x000000000001DC1C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001dc20*/ LDR         R3, [R5] 
    /*0001dc24*/ ADD         R3, R3, #28928              @ 0x7100 
    /*0001dc28*/ ADD         R3, R3, #28 
    /*0001dc2c*/ STR         R3, [SP, #4] 
    /*0001dc30*/ LDR         R0, [SP, #4] 
    /*0001dc34*/ BL          0x000000000001DC34          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001dc38*/ LDR         R3, [R4, #24] 
    /*0001dc3c*/ MOV         R1, R0 
    /*0001dc40*/ LDR         R0, [SP, #4] 
    /*0001dc44*/ BFI         R1, R3, #0, #16 
    /*0001dc48*/ BL          0x000000000001DC48          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001dc4c*/ LDR         R3, [R5] 
    /*0001dc50*/ ADD         R3, R3, #28928              @ 0x7100 
    /*0001dc54*/ ADD         R3, R3, #32 
    /*0001dc58*/ STR         R3, [SP, #4] 
    /*0001dc5c*/ LDR         R0, [SP, #4] 
    /*0001dc60*/ BL          0x000000000001DC60          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001dc64*/ LDR         R3, [R4, #28] 
    /*0001dc68*/ MOV         R1, R0 
    /*0001dc6c*/ LDR         R0, [SP, #4] 
    /*0001dc70*/ BFI         R1, R3, #0, #16 
    /*0001dc74*/ BL          0x000000000001DC74          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001dc78*/ LDR         R5, [R5] 
    /*0001dc7c*/ ADD         R5, R5, #28928              @ 0x7100 
    /*0001dc80*/ ADD         R5, R5, #36                 @ 0x24 
    HAL_LAYER_CSC_SetCoef_x1dc84:
    /*0001dc84*/ STR         R5, [SP, #4] 
    /*0001dc88*/ B           HAL_LAYER_CSC_SetCoef_x1dad8
    HAL_LAYER_CSC_SetCoef_x1dc8c:
    /*0001dc8c*/ MOV         R5, #0 
    /*0001dc90*/ STR         R5, [SP, #4] 
    /*0001dc94*/ LDR         R0, [SP, #4] 
    /*0001dc98*/ BL          0x000000000001DC98          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001dc9c*/ LDR         R3, [R4] 
    /*0001dca0*/ MOV         R1, R0 
    /*0001dca4*/ LDR         R0, [SP, #4] 
    /*0001dca8*/ BFI         R1, R3, #0, #16 
    /*0001dcac*/ BL          0x000000000001DCAC          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001dcb0*/ STR         R5, [SP, #4] 
    /*0001dcb4*/ LDR         R0, [SP, #4] 
    /*0001dcb8*/ BL          0x000000000001DCB8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001dcbc*/ LDR         R3, [R4, #4] 
    /*0001dcc0*/ MOV         R1, R0 
    /*0001dcc4*/ LDR         R0, [SP, #4] 
    /*0001dcc8*/ BFI         R1, R3, #0, #16 
    /*0001dccc*/ BL          0x000000000001DCCC          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001dcd0*/ STR         R5, [SP, #4] 
    /*0001dcd4*/ LDR         R0, [SP, #4] 
    /*0001dcd8*/ BL          0x000000000001DCD8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001dcdc*/ LDR         R3, [R4, #8] 
    /*0001dce0*/ MOV         R1, R0 
    /*0001dce4*/ LDR         R0, [SP, #4] 
    /*0001dce8*/ BFI         R1, R3, #0, #16 
    /*0001dcec*/ BL          0x000000000001DCEC          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001dcf0*/ STR         R5, [SP, #4] 
    /*0001dcf4*/ LDR         R0, [SP, #4] 
    /*0001dcf8*/ BL          0x000000000001DCF8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001dcfc*/ LDR         R3, [R4, #12] 
    /*0001dd00*/ MOV         R1, R0 
    /*0001dd04*/ LDR         R0, [SP, #4] 
    /*0001dd08*/ BFI         R1, R3, #0, #16 
    /*0001dd0c*/ BL          0x000000000001DD0C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001dd10*/ STR         R5, [SP, #4] 
    /*0001dd14*/ LDR         R0, [SP, #4] 
    /*0001dd18*/ BL          0x000000000001DD18          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001dd1c*/ LDR         R3, [R4, #16] 
    /*0001dd20*/ MOV         R1, R0 
    /*0001dd24*/ LDR         R0, [SP, #4] 
    /*0001dd28*/ BFI         R1, R3, #0, #16 
    /*0001dd2c*/ BL          0x000000000001DD2C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001dd30*/ STR         R5, [SP, #4] 
    /*0001dd34*/ LDR         R0, [SP, #4] 
    /*0001dd38*/ BL          0x000000000001DD38          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001dd3c*/ LDR         R3, [R4, #20] 
    /*0001dd40*/ MOV         R1, R0 
    /*0001dd44*/ LDR         R0, [SP, #4] 
    /*0001dd48*/ BFI         R1, R3, #0, #16 
    /*0001dd4c*/ BL          0x000000000001DD4C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001dd50*/ STR         R5, [SP, #4] 
    /*0001dd54*/ LDR         R0, [SP, #4] 
    /*0001dd58*/ BL          0x000000000001DD58          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001dd5c*/ LDR         R3, [R4, #24] 
    /*0001dd60*/ MOV         R1, R0 
    /*0001dd64*/ LDR         R0, [SP, #4] 
    /*0001dd68*/ BFI         R1, R3, #0, #16 
    /*0001dd6c*/ BL          0x000000000001DD6C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001dd70*/ STR         R5, [SP, #4] 
    /*0001dd74*/ LDR         R0, [SP, #4] 
    /*0001dd78*/ BL          0x000000000001DD78          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001dd7c*/ LDR         R3, [R4, #28] 
    /*0001dd80*/ MOV         R1, R0 
    /*0001dd84*/ LDR         R0, [SP, #4] 
    /*0001dd88*/ BFI         R1, R3, #0, #16 
    /*0001dd8c*/ BL          0x000000000001DD8C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001dd90*/ B           HAL_LAYER_CSC_SetCoef_x1dc84
FUNC_END HAL_LAYER_CSC_SetCoef


FUNC_BEGIN HAL_LAYER_CSC_SetDcCoef
    /*0001dd94*/ PUSH        {R4, R5, R6, LR} 
    /*0001dd98*/ SUBS        R5, R0, #0 
    /*0001dd9c*/ SUB         SP, SP, #8 
    /*0001dda0*/ MOV         R4, R1 
    /*0001dda4*/ BNE         HAL_LAYER_CSC_SetDcCoef_x1debc
    /*0001dda8*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ddac*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ddb0*/ LDR         R3, [R5] 
    /*0001ddb4*/ ADD         R3, R3, #4608               @ 0x1200 
    /*0001ddb8*/ ADD         R3, R3, #44                 @ 0x2c 
    /*0001ddbc*/ STR         R3, [SP, #4] 
    /*0001ddc0*/ LDR         R0, [SP, #4] 
    /*0001ddc4*/ BL          0x000000000001DDC4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ddc8*/ LDR         R3, [R4] 
    /*0001ddcc*/ MOV         R1, R0 
    /*0001ddd0*/ LDR         R0, [SP, #4] 
    /*0001ddd4*/ BFI         R1, R3, #0, #11 
    /*0001ddd8*/ BL          0x000000000001DDD8          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001dddc*/ LDR         R3, [R5] 
    /*0001dde0*/ ADD         R3, R3, #4608               @ 0x1200 
    /*0001dde4*/ ADD         R3, R3, #48                 @ 0x30 
    /*0001dde8*/ STR         R3, [SP, #4] 
    /*0001ddec*/ LDR         R0, [SP, #4] 
    /*0001ddf0*/ BL          0x000000000001DDF0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ddf4*/ LDR         R3, [R4, #4] 
    /*0001ddf8*/ MOV         R1, R0 
    /*0001ddfc*/ LDR         R0, [SP, #4] 
    /*0001de00*/ BFI         R1, R3, #0, #11 
    /*0001de04*/ BL          0x000000000001DE04          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001de08*/ LDR         R3, [R5] 
    /*0001de0c*/ ADD         R3, R3, #4608               @ 0x1200 
    /*0001de10*/ ADD         R3, R3, #52                 @ 0x34 
    /*0001de14*/ STR         R3, [SP, #4] 
    /*0001de18*/ LDR         R0, [SP, #4] 
    /*0001de1c*/ BL          0x000000000001DE1C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001de20*/ LDR         R3, [R4, #8] 
    /*0001de24*/ MOV         R1, R0 
    /*0001de28*/ LDR         R0, [SP, #4] 
    /*0001de2c*/ BFI         R1, R3, #0, #11 
    /*0001de30*/ BL          0x000000000001DE30          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001de34*/ LDR         R3, [R5] 
    /*0001de38*/ ADD         R3, R3, #4608               @ 0x1200 
    /*0001de3c*/ ADD         R3, R3, #56                 @ 0x38 
    /*0001de40*/ STR         R3, [SP, #4] 
    /*0001de44*/ LDR         R0, [SP, #4] 
    /*0001de48*/ BL          0x000000000001DE48          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001de4c*/ LDR         R3, [R4, #12] 
    /*0001de50*/ MOV         R1, R0 
    /*0001de54*/ LDR         R0, [SP, #4] 
    /*0001de58*/ BFI         R1, R3, #0, #11 
    /*0001de5c*/ BL          0x000000000001DE5C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001de60*/ LDR         R3, [R5] 
    /*0001de64*/ ADD         R3, R3, #4608               @ 0x1200 
    /*0001de68*/ ADD         R3, R3, #60                 @ 0x3c 
    /*0001de6c*/ STR         R3, [SP, #4] 
    /*0001de70*/ LDR         R0, [SP, #4] 
    /*0001de74*/ BL          0x000000000001DE74          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001de78*/ LDR         R3, [R4, #16] 
    /*0001de7c*/ MOV         R1, R0 
    /*0001de80*/ LDR         R0, [SP, #4] 
    /*0001de84*/ BFI         R1, R3, #0, #11 
    /*0001de88*/ BL          0x000000000001DE88          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001de8c*/ LDR         R3, [R5] 
    /*0001de90*/ ADD         R3, R3, #4672               @ 0x1240 
    HAL_LAYER_CSC_SetDcCoef_x1de94:
    /*0001de94*/ STR         R3, [SP, #4] 
    /*0001de98*/ LDR         R0, [SP, #4] 
    /*0001de9c*/ BL          0x000000000001DE9C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001dea0*/ LDR         R3, [R4, #20] 
    /*0001dea4*/ MOV         R1, R0 
    /*0001dea8*/ LDR         R0, [SP, #4] 
    /*0001deac*/ BFI         R1, R3, #0, #11 
    /*0001deb0*/ BL          0x000000000001DEB0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    HAL_LAYER_CSC_SetDcCoef_x1deb4:
    /*0001deb4*/ ADD         SP, SP, #8 
    /*0001deb8*/ POP         {R4, R5, R6, PC} 
    HAL_LAYER_CSC_SetDcCoef_x1debc:
    /*0001debc*/ SUB         R3, R5, #3 
    /*0001dec0*/ CMP         R3, #1 
    /*0001dec4*/ BHI         HAL_LAYER_CSC_SetDcCoef_x1deb4
    /*0001dec8*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001decc*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ded0*/ CMP         R5, #3 
    /*0001ded4*/ LDR         R3, [R6] 
    /*0001ded8*/ MOVNE       R3, #0 
    /*0001dedc*/ ADDEQ       R3, R3, #28928              @ 0x7100 
    /*0001dee0*/ ADDEQ       R3, R3, #44                 @ 0x2c 
    /*0001dee4*/ STR         R3, [SP, #4] 
    /*0001dee8*/ LDR         R0, [SP, #4] 
    /*0001deec*/ BL          0x000000000001DEEC          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001def0*/ LDR         R3, [R4] 
    /*0001def4*/ MOV         R1, R0 
    /*0001def8*/ LDR         R0, [SP, #4] 
    /*0001defc*/ BFI         R1, R3, #0, #11 
    /*0001df00*/ BL          0x000000000001DF00          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001df04*/ LDR         R3, [R6] 
    /*0001df08*/ CMP         R5, #3 
    /*0001df0c*/ ADDEQ       R3, R3, #28928              @ 0x7100 
    /*0001df10*/ ADDEQ       R3, R3, #48                 @ 0x30 
    /*0001df14*/ MOVNE       R3, #0 
    /*0001df18*/ STR         R3, [SP, #4] 
    /*0001df1c*/ LDR         R0, [SP, #4] 
    /*0001df20*/ BL          0x000000000001DF20          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001df24*/ LDR         R3, [R4, #4] 
    /*0001df28*/ MOV         R1, R0 
    /*0001df2c*/ LDR         R0, [SP, #4] 
    /*0001df30*/ BFI         R1, R3, #0, #11 
    /*0001df34*/ BL          0x000000000001DF34          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001df38*/ LDR         R3, [R6] 
    /*0001df3c*/ CMP         R5, #3 
    /*0001df40*/ ADDEQ       R3, R3, #28928              @ 0x7100 
    /*0001df44*/ ADDEQ       R3, R3, #52                 @ 0x34 
    /*0001df48*/ MOVNE       R3, #0 
    /*0001df4c*/ STR         R3, [SP, #4] 
    /*0001df50*/ LDR         R0, [SP, #4] 
    /*0001df54*/ BL          0x000000000001DF54          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001df58*/ LDR         R3, [R4, #8] 
    /*0001df5c*/ MOV         R1, R0 
    /*0001df60*/ LDR         R0, [SP, #4] 
    /*0001df64*/ BFI         R1, R3, #0, #11 
    /*0001df68*/ BL          0x000000000001DF68          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001df6c*/ LDR         R3, [R6] 
    /*0001df70*/ CMP         R5, #3 
    /*0001df74*/ ADDEQ       R3, R3, #28928              @ 0x7100 
    /*0001df78*/ ADDEQ       R3, R3, #56                 @ 0x38 
    /*0001df7c*/ MOVNE       R3, #0 
    /*0001df80*/ STR         R3, [SP, #4] 
    /*0001df84*/ LDR         R0, [SP, #4] 
    /*0001df88*/ BL          0x000000000001DF88          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001df8c*/ LDR         R3, [R4, #12] 
    /*0001df90*/ MOV         R1, R0 
    /*0001df94*/ LDR         R0, [SP, #4] 
    /*0001df98*/ BFI         R1, R3, #0, #11 
    /*0001df9c*/ BL          0x000000000001DF9C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001dfa0*/ LDR         R3, [R6] 
    /*0001dfa4*/ CMP         R5, #3 
    /*0001dfa8*/ ADDEQ       R3, R3, #28928              @ 0x7100 
    /*0001dfac*/ ADDEQ       R3, R3, #60                 @ 0x3c 
    /*0001dfb0*/ MOVNE       R3, #0 
    /*0001dfb4*/ STR         R3, [SP, #4] 
    /*0001dfb8*/ LDR         R0, [SP, #4] 
    /*0001dfbc*/ BL          0x000000000001DFBC          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001dfc0*/ LDR         R3, [R4, #16] 
    /*0001dfc4*/ MOV         R1, R0 
    /*0001dfc8*/ LDR         R0, [SP, #4] 
    /*0001dfcc*/ BFI         R1, R3, #0, #11 
    /*0001dfd0*/ BL          0x000000000001DFD0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001dfd4*/ LDR         R3, [R6] 
    /*0001dfd8*/ CMP         R5, #3 
    /*0001dfdc*/ ADDEQ       R3, R3, #28928              @ 0x7100 
    /*0001dfe0*/ ADDEQ       R3, R3, #64                 @ 0x40 
    /*0001dfe4*/ MOVNE       R3, #0 
    /*0001dfe8*/ B           HAL_LAYER_CSC_SetDcCoef_x1de94
FUNC_END HAL_LAYER_CSC_SetDcCoef


FUNC_BEGIN HAL_LAYER_CSC_SetParam
    /*0001dfec*/ PUSH        {R4, R5, R6, LR} 
    /*0001dff0*/ SUBS        R5, R0, #0 
    /*0001dff4*/ SUB         SP, SP, #8 
    /*0001dff8*/ MOV         R4, R1 
    /*0001dffc*/ BNE         HAL_LAYER_CSC_SetParam_x1e0ec
    /*0001e000*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e004*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e008*/ LDR         R3, [R5] 
    /*0001e00c*/ ADD         R3, R3, #4608               @ 0x1200 
    /*0001e010*/ ADD         R3, R3, #40                 @ 0x28 
    /*0001e014*/ STR         R3, [SP, #4] 
    /*0001e018*/ LDR         R0, [SP, #4] 
    /*0001e01c*/ BL          0x000000000001E01C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e020*/ LDR         R3, [R4] 
    /*0001e024*/ MOV         R1, R0 
    /*0001e028*/ LDR         R0, [SP, #4] 
    /*0001e02c*/ BFI         R1, R3, #0, #4 
    /*0001e030*/ BL          0x000000000001E030          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e034*/ LDR         R3, [R5] 
    /*0001e038*/ ADD         R3, R3, #4672               @ 0x1240 
    /*0001e03c*/ ADD         R3, R3, #4 
    /*0001e040*/ STR         R3, [SP, #4] 
    /*0001e044*/ LDR         R0, [SP, #4] 
    /*0001e048*/ BL          0x000000000001E048          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e04c*/ LDR         R3, [R4, #4] 
    /*0001e050*/ MOV         R1, R0 
    /*0001e054*/ LDR         R0, [SP, #4] 
    /*0001e058*/ BFI         R1, R3, #0, #10 
    /*0001e05c*/ BL          0x000000000001E05C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e060*/ LDR         R3, [R5] 
    /*0001e064*/ ADD         R3, R3, #4672               @ 0x1240 
    /*0001e068*/ ADD         R3, R3, #8 
    /*0001e06c*/ STR         R3, [SP, #4] 
    /*0001e070*/ LDR         R0, [SP, #4] 
    /*0001e074*/ BL          0x000000000001E074          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e078*/ LDR         R3, [R4, #4] 
    /*0001e07c*/ MOV         R1, R0 
    /*0001e080*/ LDR         R0, [SP, #4] 
    /*0001e084*/ BFI         R1, R3, #0, #10 
    /*0001e088*/ BL          0x000000000001E088          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e08c*/ LDR         R3, [R5] 
    /*0001e090*/ ADD         R3, R3, #4672               @ 0x1240 
    /*0001e094*/ ADD         R3, R3, #12 
    /*0001e098*/ STR         R3, [SP, #4] 
    /*0001e09c*/ LDR         R0, [SP, #4] 
    /*0001e0a0*/ BL          0x000000000001E0A0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e0a4*/ LDR         R3, [R4, #8] 
    /*0001e0a8*/ MOV         R1, R0 
    /*0001e0ac*/ LDR         R0, [SP, #4] 
    /*0001e0b0*/ BFI         R1, R3, #0, #10 
    /*0001e0b4*/ BL          0x000000000001E0B4          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e0b8*/ LDR         R3, [R5] 
    /*0001e0bc*/ ADD         R3, R3, #4672               @ 0x1240 
    /*0001e0c0*/ ADD         R3, R3, #16 
    HAL_LAYER_CSC_SetParam_x1e0c4:
    /*0001e0c4*/ STR         R3, [SP, #4] 
    /*0001e0c8*/ LDR         R0, [SP, #4] 
    /*0001e0cc*/ BL          0x000000000001E0CC          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e0d0*/ LDR         R3, [R4, #8] 
    /*0001e0d4*/ MOV         R1, R0 
    /*0001e0d8*/ LDR         R0, [SP, #4] 
    /*0001e0dc*/ BFI         R1, R3, #0, #10 
    /*0001e0e0*/ BL          0x000000000001E0E0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    HAL_LAYER_CSC_SetParam_x1e0e4:
    /*0001e0e4*/ ADD         SP, SP, #8 
    /*0001e0e8*/ POP         {R4, R5, R6, PC} 
    HAL_LAYER_CSC_SetParam_x1e0ec:
    /*0001e0ec*/ SUB         R3, R5, #3 
    /*0001e0f0*/ CMP         R3, #1 
    /*0001e0f4*/ BHI         HAL_LAYER_CSC_SetParam_x1e0e4
    /*0001e0f8*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e0fc*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e100*/ CMP         R5, #3 
    /*0001e104*/ LDR         R3, [R6] 
    /*0001e108*/ MOVNE       R3, #0 
    /*0001e10c*/ ADDEQ       R3, R3, #28928              @ 0x7100 
    /*0001e110*/ ADDEQ       R3, R3, #40                 @ 0x28 
    /*0001e114*/ STR         R3, [SP, #4] 
    /*0001e118*/ LDR         R0, [SP, #4] 
    /*0001e11c*/ BL          0x000000000001E11C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e120*/ LDR         R3, [R4] 
    /*0001e124*/ MOV         R1, R0 
    /*0001e128*/ LDR         R0, [SP, #4] 
    /*0001e12c*/ BFI         R1, R3, #0, #4 
    /*0001e130*/ BL          0x000000000001E130          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e134*/ LDR         R3, [R6] 
    /*0001e138*/ CMP         R5, #3 
    /*0001e13c*/ ADDEQ       R3, R3, #28928              @ 0x7100 
    /*0001e140*/ ADDEQ       R3, R3, #68                 @ 0x44 
    /*0001e144*/ MOVNE       R3, #0 
    /*0001e148*/ STR         R3, [SP, #4] 
    /*0001e14c*/ LDR         R0, [SP, #4] 
    /*0001e150*/ BL          0x000000000001E150          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e154*/ LDR         R3, [R4, #4] 
    /*0001e158*/ MOV         R1, R0 
    /*0001e15c*/ LDR         R0, [SP, #4] 
    /*0001e160*/ BFI         R1, R3, #0, #10 
    /*0001e164*/ BL          0x000000000001E164          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e168*/ LDR         R3, [R6] 
    /*0001e16c*/ CMP         R5, #3 
    /*0001e170*/ ADDEQ       R3, R3, #28928              @ 0x7100 
    /*0001e174*/ ADDEQ       R3, R3, #72                 @ 0x48 
    /*0001e178*/ MOVNE       R3, #0 
    /*0001e17c*/ STR         R3, [SP, #4] 
    /*0001e180*/ LDR         R0, [SP, #4] 
    /*0001e184*/ BL          0x000000000001E184          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e188*/ LDR         R3, [R4, #4] 
    /*0001e18c*/ MOV         R1, R0 
    /*0001e190*/ LDR         R0, [SP, #4] 
    /*0001e194*/ BFI         R1, R3, #0, #10 
    /*0001e198*/ BL          0x000000000001E198          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e19c*/ LDR         R3, [R6] 
    /*0001e1a0*/ CMP         R5, #3 
    /*0001e1a4*/ ADDEQ       R3, R3, #28928              @ 0x7100 
    /*0001e1a8*/ ADDEQ       R3, R3, #76                 @ 0x4c 
    /*0001e1ac*/ MOVNE       R3, #0 
    /*0001e1b0*/ STR         R3, [SP, #4] 
    /*0001e1b4*/ LDR         R0, [SP, #4] 
    /*0001e1b8*/ BL          0x000000000001E1B8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e1bc*/ LDR         R3, [R4, #8] 
    /*0001e1c0*/ MOV         R1, R0 
    /*0001e1c4*/ LDR         R0, [SP, #4] 
    /*0001e1c8*/ BFI         R1, R3, #0, #10 
    /*0001e1cc*/ BL          0x000000000001E1CC          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e1d0*/ LDR         R3, [R6] 
    /*0001e1d4*/ CMP         R5, #3 
    /*0001e1d8*/ ADDEQ       R3, R3, #28928              @ 0x7100 
    /*0001e1dc*/ ADDEQ       R3, R3, #80                 @ 0x50 
    /*0001e1e0*/ MOVNE       R3, #0 
    /*0001e1e4*/ B           HAL_LAYER_CSC_SetParam_x1e0c4
FUNC_END HAL_LAYER_CSC_SetParam


FUNC_BEGIN HAL_LAYER_SetCscCoef
    /*0001e1e8*/ CMP         R0, #4 
    /*0001e1ec*/ BLS         HAL_LAYER_SetCscCoef_x1e1f8
    /*0001e1f0*/ MOV         R0, #0 
    /*0001e1f4*/ BX          LR 
    HAL_LAYER_SetCscCoef_x1e1f8:
    /*0001e1f8*/ PUSH        {R4, R5, R6, LR} 
    /*0001e1fc*/ MOV         R4, R0 
    /*0001e200*/ MOV         R5, R1 
    /*0001e204*/ ADD         R1, R1, #36                 @ 0x24 
    /*0001e208*/ BL          0x000000000001E208          @ HAL_LAYER_CSC_SetDcCoef [R_ARM_CALL: .text+0x1dd94] 
    /*0001e20c*/ MOV         R1, R5 
    /*0001e210*/ MOV         R0, R4 
    /*0001e214*/ BL          0x000000000001E214          @ HAL_LAYER_CSC_SetCoef [R_ARM_CALL: .text+0x1d94c] 
    /*0001e218*/ MOV         R0, R4 
    /*0001e21c*/ ADD         R1, R5, #60                 @ 0x3c 
    /*0001e220*/ BL          0x000000000001E220          @ HAL_LAYER_CSC_SetParam [R_ARM_CALL: .text+0x1dfec] 
    /*0001e224*/ MOV         R0, #1 
    /*0001e228*/ POP         {R4, R5, R6, PC} 
FUNC_END HAL_LAYER_SetCscCoef


FUNC_BEGIN HAL_LAYER_SetCscMode
    /*0001e22c*/ CMP         R0, #4 
    /*0001e230*/ MOVHI       R0, #0 
    /*0001e234*/ MOVLS       R0, #1 
    /*0001e238*/ BX          LR 
FUNC_END HAL_LAYER_SetCscMode


FUNC_BEGIN HAL_LAYER_SetCscEn
    /*0001e23c*/ CMP         R0, #4 
    /*0001e240*/ BLS         HAL_LAYER_SetCscEn_x1e24c
    /*0001e244*/ MOV         R0, #0 
    /*0001e248*/ BX          LR 
    HAL_LAYER_SetCscEn_x1e24c:
    /*0001e24c*/ PUSH        {R4, R5, R6, LR} 
    /*0001e250*/ MOV         R4, R0 
    /*0001e254*/ MOV         R5, R1 
    /*0001e258*/ BL          0x000000000001E258          @ HAL_LAYER_CSC_SetCkGtEn [R_ARM_CALL: .text+0x1d8bc] 
    /*0001e25c*/ MOV         R0, R4 
    /*0001e260*/ MOV         R1, R5 
    /*0001e264*/ BL          0x000000000001E264          @ HAL_LAYER_CSC_SetEnable [R_ARM_CALL: .text+0x1d82c] 
    /*0001e268*/ MOV         R0, #1 
    /*0001e26c*/ POP         {R4, R5, R6, PC} 
FUNC_END HAL_LAYER_SetCscEn


FUNC_BEGIN HAL_LAYER_SetLayerInRect
    /*0001e270*/ SUBS        R2, R0, #0 
    /*0001e274*/ PUSH        {R4, LR} 
    /*0001e278*/ MOV         R4, R1 
    /*0001e27c*/ SUB         SP, SP, #8 
    /*0001e280*/ BNE         HAL_LAYER_SetLayerInRect_x1e2dc
    /*0001e284*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e288*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e28c*/ LDR         R3, [R3] 
    /*0001e290*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001e294*/ ADD         R3, R3, #588                @ 0x24c 
    /*0001e298*/ STR         R3, [SP, #4] 
    /*0001e29c*/ LDR         R3, [SP, #4] 
    /*0001e2a0*/ STR         R3, [SP] 
    HAL_LAYER_SetLayerInRect_x1e2a4:
    /*0001e2a4*/ LDR         R0, [SP] 
    /*0001e2a8*/ BL          0x000000000001E2A8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e2ac*/ LDR         R2, [R4, #8] 
    /*0001e2b0*/ LDR         R3, [R4, #12] 
    /*0001e2b4*/ SUB         R2, R2, #1 
    /*0001e2b8*/ SUB         R3, R3, #1 
    /*0001e2bc*/ MOV         R1, R0 
    /*0001e2c0*/ BFI         R1, R2, #0, #16 
    /*0001e2c4*/ LDR         R0, [SP] 
    /*0001e2c8*/ BFI         R1, R3, #16, #16 
    /*0001e2cc*/ BL          0x000000000001E2CC          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e2d0*/ MOV         R0, #1 
    HAL_LAYER_SetLayerInRect_x1e2d4:
    /*0001e2d4*/ ADD         SP, SP, #8 
    /*0001e2d8*/ POP         {R4, PC} 
    HAL_LAYER_SetLayerInRect_x1e2dc:
    /*0001e2dc*/ SUB         R3, R2, #3 
    /*0001e2e0*/ CMP         R2, #6 
    /*0001e2e4*/ CMPNE       R3, #1 
    /*0001e2e8*/ MOVHI       R3, #0 
    /*0001e2ec*/ MOVLS       R3, #1 
    /*0001e2f0*/ MOVHI       R0, R3 
    /*0001e2f4*/ BHI         HAL_LAYER_SetLayerInRect_x1e2d4
    /*0001e2f8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e2fc*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e300*/ LDR         R1, [R3] 
    /*0001e304*/ ADD         R1, R1, #68608              @ 0x10c00 
    /*0001e308*/ ADD         R1, R1, #588                @ 0x24c 
    /*0001e30c*/ BL          0x000000000001E30C          @ Vou_GetGfxAbsAddr [R_ARM_CALL: .text+0x1aad8] 
    /*0001e310*/ STR         R0, [SP] 
    /*0001e314*/ B           HAL_LAYER_SetLayerInRect_x1e2a4
FUNC_END HAL_LAYER_SetLayerInRect


FUNC_BEGIN HAL_LAYER_SetLayerSrcCropXY
    /*0001e318*/ CMP         R0, #0 
    /*0001e31c*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001e320*/ SUB         SP, SP, #12 
    /*0001e324*/ BNE         HAL_LAYER_SetLayerSrcCropXY_x1e374
    /*0001e328*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e32c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e330*/ LDR         R0, [R1] 
    /*0001e334*/ MOV         R2, #0 
    /*0001e338*/ LDR         R3, [R3] 
    /*0001e33c*/ LDR         R1, [R1, #4] 
    /*0001e340*/ BFI         R2, R0, #0, #16 
    /*0001e344*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001e348*/ ADD         R3, R3, #584                @ 0x248 
    /*0001e34c*/ STR         R3, [SP, #4] 
    /*0001e350*/ LDR         R3, [SP, #4] 
    /*0001e354*/ BFI         R2, R1, #16, #16 
    /*0001e358*/ MOV         R1, R2 
    /*0001e35c*/ STR         R3, [SP] 
    /*0001e360*/ LDR         R0, [SP] 
    /*0001e364*/ BL          0x000000000001E364          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e368*/ MOV         R0, #1 
    /*0001e36c*/ ADD         SP, SP, #12 
    /*0001e370*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    HAL_LAYER_SetLayerSrcCropXY_x1e374:
    /*0001e374*/ MOVW        R3, #3185                   @ 0xc71 
    /*0001e378*/ MOVW        R2, #0                      @ .LANCHOR1 [R_ARM_MOVW_ABS_NC: .rodata+0x108c] 
    /*0001e37c*/ MOVW        R1, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8d34] 
    /*0001e380*/ MOVT        R2, #0                      @ .LANCHOR1 [R_ARM_MOVT_ABS: .rodata+0x108c] 
    /*0001e384*/ MOVT        R1, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8d34] 
    /*0001e388*/ MOVW        R0, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8d8c] 
    /*0001e38c*/ MOVT        R0, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8d8c] 
    /*0001e390*/ BL          0x000000000001E390          @ osal_printk [R_ARM_CALL: +0x0] 
    /*0001e394*/ MOV         R0, #0 
    /*0001e398*/ ADD         SP, SP, #12 
    /*0001e39c*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END HAL_LAYER_SetLayerSrcCropXY


FUNC_BEGIN HAL_LAYER_SetLayerOutRect
    /*0001e3a0*/ MOV         R0, #0 
    /*0001e3a4*/ BX          LR 
FUNC_END HAL_LAYER_SetLayerOutRect


FUNC_BEGIN HAL_LAYER_SetLayerGAlpha
    /*0001e3a8*/ CMP         R0, #0 
    /*0001e3ac*/ BNE         HAL_LAYER_SetLayerGAlpha_x1e400
    /*0001e3b0*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e3b4*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e3b8*/ PUSH        {R4, LR} 
    /*0001e3bc*/ SUB         SP, SP, #8 
    /*0001e3c0*/ LDR         R3, [R3] 
    /*0001e3c4*/ MOV         R4, R1 
    /*0001e3c8*/ ADD         R3, R3, #4096               @ 0x1000 
    /*0001e3cc*/ STR         R3, [SP, #4] 
    /*0001e3d0*/ LDR         R0, [SP, #4] 
    /*0001e3d4*/ BL          0x000000000001E3D4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e3d8*/ STR         R0, [SP] 
    /*0001e3dc*/ LDR         R3, [SP] 
    /*0001e3e0*/ BFI         R3, R4, #0, #8 
    /*0001e3e4*/ STR         R3, [SP] 
    /*0001e3e8*/ LDR         R0, [SP, #4] 
    /*0001e3ec*/ LDR         R1, [SP] 
    /*0001e3f0*/ BL          0x000000000001E3F0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e3f4*/ MOV         R0, #1 
    /*0001e3f8*/ ADD         SP, SP, #8 
    /*0001e3fc*/ POP         {R4, PC} 
    HAL_LAYER_SetLayerGAlpha_x1e400:
    /*0001e400*/ MOV         R0, #0 
    /*0001e404*/ BX          LR 
FUNC_END HAL_LAYER_SetLayerGAlpha


FUNC_BEGIN HAL_LAYER_GetLayerGAlpha
    /*0001e408*/ CMP         R0, #0 
    /*0001e40c*/ PUSH        {R4, LR} 
    /*0001e410*/ MOV         R4, R1 
    /*0001e414*/ SUB         SP, SP, #16 
    /*0001e418*/ BEQ         HAL_LAYER_GetLayerGAlpha_x1e464
    /*0001e41c*/ CMP         R0, #3 
    /*0001e420*/ BEQ         HAL_LAYER_GetLayerGAlpha_x1e430
    /*0001e424*/ MOV         R0, #0 
    /*0001e428*/ ADD         SP, SP, #16 
    /*0001e42c*/ POP         {R4, PC} 
    HAL_LAYER_GetLayerGAlpha_x1e430:
    /*0001e430*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e434*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e438*/ LDR         R3, [R3] 
    /*0001e43c*/ ADD         R3, R3, #28672              @ 0x7000 
    /*0001e440*/ STR         R3, [SP, #12] 
    /*0001e444*/ LDR         R0, [SP, #12] 
    /*0001e448*/ BL          0x000000000001E448          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e44c*/ STR         R0, [SP, #8] 
    /*0001e450*/ MOV         R0, #1 
    /*0001e454*/ LDR         R3, [SP, #8] 
    /*0001e458*/ STRB        R3, [R4] 
    /*0001e45c*/ ADD         SP, SP, #16 
    /*0001e460*/ POP         {R4, PC} 
    HAL_LAYER_GetLayerGAlpha_x1e464:
    /*0001e464*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e468*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e46c*/ LDR         R3, [R3] 
    /*0001e470*/ ADD         R3, R3, #4096               @ 0x1000 
    /*0001e474*/ STR         R3, [SP, #12] 
    /*0001e478*/ LDR         R0, [SP, #12] 
    /*0001e47c*/ BL          0x000000000001E47C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e480*/ STR         R0, [SP, #4] 
    /*0001e484*/ MOV         R0, #1 
    /*0001e488*/ LDR         R3, [SP, #4] 
    /*0001e48c*/ STRB        R3, [R4] 
    /*0001e490*/ ADD         SP, SP, #16 
    /*0001e494*/ POP         {R4, PC} 
FUNC_END HAL_LAYER_GetLayerGAlpha


FUNC_BEGIN HAL_LAYER_SetVerRatio
    /*0001e498*/ CMP         R0, #0 
    /*0001e49c*/ PUSH        {R4, LR} 
    /*0001e4a0*/ MOV         R4, R1 
    /*0001e4a4*/ SUB         SP, SP, #16 
    /*0001e4a8*/ BNE         HAL_LAYER_SetVerRatio_x1e4f8
    /*0001e4ac*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e4b0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e4b4*/ UXTH        R4, R4 
    /*0001e4b8*/ LDR         R3, [R3] 
    /*0001e4bc*/ ADD         R3, R3, #87040              @ 0x15400 
    /*0001e4c0*/ ADD         R3, R3, #260                @ 0x104 
    /*0001e4c4*/ STR         R3, [SP, #12] 
    /*0001e4c8*/ LDR         R0, [SP, #12] 
    /*0001e4cc*/ BL          0x000000000001E4CC          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e4d0*/ STR         R0, [SP] 
    /*0001e4d4*/ LDR         R3, [SP] 
    /*0001e4d8*/ BFI         R3, R4, #0, #16 
    /*0001e4dc*/ STR         R3, [SP] 
    /*0001e4e0*/ LDR         R0, [SP, #12] 
    /*0001e4e4*/ LDR         R1, [SP] 
    /*0001e4e8*/ BL          0x000000000001E4E8          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e4ec*/ MOV         R0, #1 
    HAL_LAYER_SetVerRatio_x1e4f0:
    /*0001e4f0*/ ADD         SP, SP, #16 
    /*0001e4f4*/ POP         {R4, PC} 
    HAL_LAYER_SetVerRatio_x1e4f8:
    /*0001e4f8*/ CMP         R0, #3 
    /*0001e4fc*/ BEQ         HAL_LAYER_SetVerRatio_x1e548
    /*0001e500*/ CMP         R0, #7 
    /*0001e504*/ MOVNE       R0, #0 
    /*0001e508*/ BNE         HAL_LAYER_SetVerRatio_x1e4f0
    /*0001e50c*/ MOV         R3, #0 
    /*0001e510*/ STR         R3, [SP, #12] 
    /*0001e514*/ LDR         R0, [SP, #12] 
    /*0001e518*/ UXTH        R4, R4 
    /*0001e51c*/ BL          0x000000000001E51C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e520*/ STR         R0, [SP, #8] 
    /*0001e524*/ LDR         R3, [SP, #8] 
    /*0001e528*/ BFI         R3, R4, #0, #16 
    /*0001e52c*/ STR         R3, [SP, #8] 
    /*0001e530*/ LDR         R0, [SP, #12] 
    /*0001e534*/ LDR         R1, [SP, #8] 
    /*0001e538*/ BL          0x000000000001E538          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e53c*/ MOV         R0, #1 
    /*0001e540*/ ADD         SP, SP, #16 
    /*0001e544*/ POP         {R4, PC} 
    HAL_LAYER_SetVerRatio_x1e548:
    /*0001e548*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e54c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e550*/ UXTH        R4, R4 
    /*0001e554*/ LDR         R3, [R3] 
    /*0001e558*/ ADD         R3, R3, #29440              @ 0x7300 
    /*0001e55c*/ ADD         R3, R3, #132                @ 0x84 
    /*0001e560*/ STR         R3, [SP, #12] 
    /*0001e564*/ LDR         R0, [SP, #12] 
    /*0001e568*/ BL          0x000000000001E568          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e56c*/ STR         R0, [SP, #4] 
    /*0001e570*/ LDR         R3, [SP, #4] 
    /*0001e574*/ BFI         R3, R4, #0, #16 
    /*0001e578*/ STR         R3, [SP, #4] 
    /*0001e57c*/ LDR         R0, [SP, #12] 
    /*0001e580*/ LDR         R1, [SP, #4] 
    /*0001e584*/ BL          0x000000000001E584          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e588*/ MOV         R0, #1 
    /*0001e58c*/ ADD         SP, SP, #16 
    /*0001e590*/ POP         {R4, PC} 
FUNC_END HAL_LAYER_SetVerRatio


FUNC_BEGIN HAL_LAYER_SetHorRatio
    /*0001e594*/ CMP         R0, #0 
    /*0001e598*/ PUSH        {R4, LR} 
    /*0001e59c*/ MOV         R4, R1 
    /*0001e5a0*/ SUB         SP, SP, #16 
    /*0001e5a4*/ BNE         HAL_LAYER_SetHorRatio_x1e5f0
    /*0001e5a8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e5ac*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e5b0*/ LDR         R3, [R3] 
    /*0001e5b4*/ ADD         R3, R3, #87040              @ 0x15400 
    /*0001e5b8*/ ADD         R3, R3, #4 
    /*0001e5bc*/ STR         R3, [SP, #12] 
    /*0001e5c0*/ LDR         R0, [SP, #12] 
    /*0001e5c4*/ BL          0x000000000001E5C4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e5c8*/ STR         R0, [SP] 
    /*0001e5cc*/ LDR         R3, [SP] 
    /*0001e5d0*/ BFI         R3, R4, #0, #24 
    /*0001e5d4*/ STR         R3, [SP] 
    /*0001e5d8*/ LDR         R0, [SP, #12] 
    /*0001e5dc*/ LDR         R1, [SP] 
    /*0001e5e0*/ BL          0x000000000001E5E0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e5e4*/ MOV         R0, #1 
    HAL_LAYER_SetHorRatio_x1e5e8:
    /*0001e5e8*/ ADD         SP, SP, #16 
    /*0001e5ec*/ POP         {R4, PC} 
    HAL_LAYER_SetHorRatio_x1e5f0:
    /*0001e5f0*/ CMP         R0, #3 
    /*0001e5f4*/ BEQ         HAL_LAYER_SetHorRatio_x1e63c
    /*0001e5f8*/ CMP         R0, #7 
    /*0001e5fc*/ MOVNE       R0, #0 
    /*0001e600*/ BNE         HAL_LAYER_SetHorRatio_x1e5e8
    /*0001e604*/ MOV         R3, #0 
    /*0001e608*/ STR         R3, [SP, #12] 
    /*0001e60c*/ LDR         R0, [SP, #12] 
    /*0001e610*/ BL          0x000000000001E610          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e614*/ STR         R0, [SP, #8] 
    /*0001e618*/ LDR         R3, [SP, #8] 
    /*0001e61c*/ BFI         R3, R4, #0, #24 
    /*0001e620*/ STR         R3, [SP, #8] 
    /*0001e624*/ LDR         R0, [SP, #12] 
    /*0001e628*/ LDR         R1, [SP, #8] 
    /*0001e62c*/ BL          0x000000000001E62C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e630*/ MOV         R0, #1 
    /*0001e634*/ ADD         SP, SP, #16 
    /*0001e638*/ POP         {R4, PC} 
    HAL_LAYER_SetHorRatio_x1e63c:
    /*0001e63c*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e640*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e644*/ LDR         R3, [R3] 
    /*0001e648*/ ADD         R3, R3, #29440              @ 0x7300 
    /*0001e64c*/ ADD         R3, R3, #4 
    /*0001e650*/ STR         R3, [SP, #12] 
    /*0001e654*/ LDR         R0, [SP, #12] 
    /*0001e658*/ BL          0x000000000001E658          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e65c*/ STR         R0, [SP, #4] 
    /*0001e660*/ LDR         R3, [SP, #4] 
    /*0001e664*/ BFI         R3, R4, #0, #24 
    /*0001e668*/ STR         R3, [SP, #4] 
    /*0001e66c*/ LDR         R0, [SP, #12] 
    /*0001e670*/ LDR         R1, [SP, #4] 
    /*0001e674*/ BL          0x000000000001E674          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e678*/ MOV         R0, #1 
    /*0001e67c*/ ADD         SP, SP, #16 
    /*0001e680*/ POP         {R4, PC} 
FUNC_END HAL_LAYER_SetHorRatio


FUNC_BEGIN HAL_DISP_SetBt1120Bypass
    /*0001e684*/ MOV         R0, #1 
    /*0001e688*/ BX          LR 
FUNC_END HAL_DISP_SetBt1120Bypass


FUNC_BEGIN HAL_LAYER_SetRegUp
    /*0001e68c*/ CMP         R0, #0 
    /*0001e690*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001e694*/ SUB         SP, SP, #12 
    /*0001e698*/ BEQ         HAL_LAYER_SetRegUp_x1e6ec
    /*0001e69c*/ CMP         R0, #3 
    /*0001e6a0*/ BNE         HAL_LAYER_SetRegUp_x1e6e0
    /*0001e6a4*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e6a8*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e6ac*/ LDR         R3, [R3] 
    /*0001e6b0*/ ADD         R3, R3, #28672              @ 0x7000 
    HAL_LAYER_SetRegUp_x1e6b4:
    /*0001e6b4*/ ADD         R3, R3, #4 
    /*0001e6b8*/ STR         R3, [SP, #4] 
    /*0001e6bc*/ LDR         R0, [SP, #4] 
    /*0001e6c0*/ BL          0x000000000001E6C0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e6c4*/ LDR         R3, [SP, #4] 
    /*0001e6c8*/ ORR         R1, R0, #1 
    /*0001e6cc*/ MOV         R0, R3 
    /*0001e6d0*/ BL          0x000000000001E6D0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e6d4*/ MOV         R0, #1 
    /*0001e6d8*/ ADD         SP, SP, #12 
    /*0001e6dc*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    HAL_LAYER_SetRegUp_x1e6e0:
    /*0001e6e0*/ MOV         R0, #0 
    /*0001e6e4*/ ADD         SP, SP, #12 
    /*0001e6e8*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
    HAL_LAYER_SetRegUp_x1e6ec:
    /*0001e6ec*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e6f0*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e6f4*/ LDR         R3, [R3] 
    /*0001e6f8*/ ADD         R3, R3, #4096               @ 0x1000 
    /*0001e6fc*/ B           HAL_LAYER_SetRegUp_x1e6b4
FUNC_END HAL_LAYER_SetRegUp


FUNC_BEGIN HAL_LAYER_SetLayerBgColor
    /*0001e700*/ CMP         R0, #0 
    /*0001e704*/ BNE         HAL_LAYER_SetLayerBgColor_x1e780
    /*0001e708*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e70c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e710*/ PUSH        {R4, LR} 
    /*0001e714*/ SUB         SP, SP, #8 
    /*0001e718*/ LDR         R3, [R3] 
    /*0001e71c*/ MOV         R4, R1 
    /*0001e720*/ ADD         R3, R3, #4224               @ 0x1080 
    /*0001e724*/ ADD         R3, R3, #16 
    /*0001e728*/ STR         R3, [SP, #4] 
    /*0001e72c*/ LDR         R0, [SP, #4] 
    /*0001e730*/ BL          0x000000000001E730          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e734*/ LDRH        R2, [R4] 
    /*0001e738*/ LDRH        R1, [R4, #2] 
    /*0001e73c*/ STR         R0, [SP] 
    /*0001e740*/ LDR         R3, [SP] 
    /*0001e744*/ BFI         R3, R2, #20, #10 
    /*0001e748*/ STR         R3, [SP] 
    /*0001e74c*/ LDR         R3, [SP] 
    /*0001e750*/ LDRH        R2, [R4, #4] 
    /*0001e754*/ BFI         R3, R1, #10, #10 
    /*0001e758*/ STR         R3, [SP] 
    /*0001e75c*/ LDR         R3, [SP] 
    /*0001e760*/ BFI         R3, R2, #0, #10 
    /*0001e764*/ STR         R3, [SP] 
    /*0001e768*/ LDR         R0, [SP, #4] 
    /*0001e76c*/ LDR         R1, [SP] 
    /*0001e770*/ BL          0x000000000001E770          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e774*/ MOV         R0, #1 
    /*0001e778*/ ADD         SP, SP, #8 
    /*0001e77c*/ POP         {R4, PC} 
    HAL_LAYER_SetLayerBgColor_x1e780:
    /*0001e780*/ MOV         R0, #0 
    /*0001e784*/ BX          LR 
FUNC_END HAL_LAYER_SetLayerBgColor


FUNC_BEGIN HAL_CBM_SetCbmBkg
    /*0001e788*/ PUSH        {R4, R5, R6, LR} 
    /*0001e78c*/ SUBS        R4, R0, #0 
    /*0001e790*/ MOV         R5, R1 
    /*0001e794*/ BEQ         HAL_CBM_SetCbmBkg_x1e7a8
    /*0001e798*/ CMP         R4, #1 
    /*0001e79c*/ BEQ         HAL_CBM_SetCbmBkg_x1e7ec
    /*0001e7a0*/ MOV         R0, #0 
    /*0001e7a4*/ POP         {R4, R5, R6, PC} 
    HAL_CBM_SetCbmBkg_x1e7a8:
    /*0001e7a8*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e7ac*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e7b0*/ LDR         R0, [R4] 
    /*0001e7b4*/ ADD         R0, R0, #768                @ 0x300 
    /*0001e7b8*/ BL          0x000000000001E7B8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e7bc*/ LDRH        R3, [R5, #2] 
    /*0001e7c0*/ LDRH        R2, [R5, #4] 
    /*0001e7c4*/ MOV         R1, R0 
    /*0001e7c8*/ LDR         R0, [R4] 
    /*0001e7cc*/ BFI         R1, R3, #20, #10 
    /*0001e7d0*/ LDRH        R3, [R5, #6] 
    /*0001e7d4*/ BFI         R1, R2, #10, #10 
    /*0001e7d8*/ ADD         R0, R0, #768                @ 0x300 
    /*0001e7dc*/ BFI         R1, R3, #0, #10 
    /*0001e7e0*/ BL          0x000000000001E7E0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e7e4*/ MOV         R0, #1 
    /*0001e7e8*/ POP         {R4, R5, R6, PC} 
    HAL_CBM_SetCbmBkg_x1e7ec:
    /*0001e7ec*/ MOVW        R6, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e7f0*/ MOVT        R6, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e7f4*/ LDR         R0, [R6] 
    /*0001e7f8*/ ADD         R0, R0, #896                @ 0x380 
    /*0001e7fc*/ BL          0x000000000001E7FC          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e800*/ LDRH        R3, [R5, #2] 
    /*0001e804*/ LDRH        R2, [R5, #4] 
    /*0001e808*/ MOV         R1, R0 
    /*0001e80c*/ LDR         R0, [R6] 
    /*0001e810*/ BFI         R1, R3, #20, #10 
    /*0001e814*/ LDRH        R3, [R5, #6] 
    /*0001e818*/ BFI         R1, R2, #10, #10 
    /*0001e81c*/ ADD         R0, R0, #896                @ 0x380 
    /*0001e820*/ BFI         R1, R3, #0, #10 
    /*0001e824*/ BL          0x000000000001E824          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e828*/ MOV         R0, R4 
    /*0001e82c*/ POP         {R4, R5, R6, PC} 
FUNC_END HAL_CBM_SetCbmBkg


FUNC_BEGIN HAL_CBM_SetCbmMixerPrio
    /*0001e830*/ PUSH        {R4, R5, R6, LR} 
    /*0001e834*/ SUBS        R4, R2, #0 
    /*0001e838*/ BNE         HAL_CBM_SetCbmMixerPrio_x1e858
    /*0001e83c*/ CMP         R0, #0 
    /*0001e840*/ MOV         R6, R1 
    /*0001e844*/ BEQ         HAL_CBM_SetCbmMixerPrio_x1e860
    /*0001e848*/ CMP         R0, #3 
    /*0001e84c*/ BEQ         HAL_CBM_SetCbmMixerPrio_x1e8c8
    /*0001e850*/ CMN         R0, #1 
    /*0001e854*/ BEQ         HAL_CBM_SetCbmMixerPrio_x1e864
    HAL_CBM_SetCbmMixerPrio_x1e858:
    /*0001e858*/ MOV         R0, #0 
    /*0001e85c*/ POP         {R4, R5, R6, PC} 
    HAL_CBM_SetCbmMixerPrio_x1e860:
    /*0001e860*/ MOV         R4, #1 
    HAL_CBM_SetCbmMixerPrio_x1e864:
    /*0001e864*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e868*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e86c*/ LDR         R0, [R5] 
    /*0001e870*/ ADD         R0, R0, #776                @ 0x308 
    /*0001e874*/ BL          0x000000000001E874          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e878*/ CMP         R6, #3 
    /*0001e87c*/ LDRLS       PC, [PC, R6, LSL #2] 
    /*0001e880*/ B           HAL_CBM_SetCbmMixerPrio_x1e858
    /*0001e884*/ ANDEQ       LR, R1, R0, ASR #17 
    /*0001e888*/ @           <UNDEFINED> instruction: 0x0001e8b8 
    /*0001e88c*/ @           <UNDEFINED> instruction: 0x0001e8b0 
    /*0001e890*/ MULEQ       R1, R4, R8 
    /*0001e894*/ BFI         R0, R4, #12, #4 
    HAL_CBM_SetCbmMixerPrio_x1e898:
    /*0001e898*/ LDR         R3, [R5] 
    /*0001e89c*/ MOV         R1, R0 
    /*0001e8a0*/ ADD         R0, R3, #776                @ 0x308 
    /*0001e8a4*/ BL          0x000000000001E8A4          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e8a8*/ MOV         R0, #1 
    /*0001e8ac*/ POP         {R4, R5, R6, PC} 
    /*0001e8b0*/ BFI         R0, R4, #8, #4 
    /*0001e8b4*/ B           HAL_CBM_SetCbmMixerPrio_x1e898
    /*0001e8b8*/ BFI         R0, R4, #4, #4 
    /*0001e8bc*/ B           HAL_CBM_SetCbmMixerPrio_x1e898
    /*0001e8c0*/ BFI         R0, R4, #0, #4 
    /*0001e8c4*/ B           HAL_CBM_SetCbmMixerPrio_x1e898
    HAL_CBM_SetCbmMixerPrio_x1e8c8:
    /*0001e8c8*/ MOV         R4, #2 
    /*0001e8cc*/ B           HAL_CBM_SetCbmMixerPrio_x1e864
FUNC_END HAL_CBM_SetCbmMixerPrio


FUNC_BEGIN HAL_DCMP_SEG_SetIceEn
    /*0001e8d0*/ PUSH        {R4, R5, R6, R7, LR} 
    /*0001e8d4*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e8d8*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e8dc*/ MOV         R7, R0 
    /*0001e8e0*/ ADD         R1, R1, R7, LSL #4 
    /*0001e8e4*/ SUB         SP, SP, #12 
    /*0001e8e8*/ LDR         R0, [R4] 
    /*0001e8ec*/ AND         R5, R2, #1 
    /*0001e8f0*/ LSL         R6, R1, #5 
    /*0001e8f4*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001e8f8*/ ADD         R0, R0, #896                @ 0x380 
    /*0001e8fc*/ ADD         R0, R0, R6 
    /*0001e900*/ BL          0x000000000001E900          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e904*/ LDR         R3, [R4] 
    /*0001e908*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001e90c*/ ADD         R3, R3, #896                @ 0x380 
    /*0001e910*/ BIC         R1, R0, #1 
    /*0001e914*/ ADD         R0, R3, R6 
    /*0001e918*/ ORR         R1, R1, R5 
    /*0001e91c*/ BL          0x000000000001E91C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e920*/ CMP         R7, #0 
    /*0001e924*/ LDREQ       R3, [R4] 
    /*0001e928*/ MOVNE       R4, #0 
    /*0001e92c*/ ADDEQ       R3, R3, #65536              @ 0x10000 
    /*0001e930*/ ADDEQ       R3, R3, #960                @ 0x3c0 
    /*0001e934*/ STREQ       R3, [SP, #4] 
    /*0001e938*/ LDREQ       R4, [SP, #4] 
    /*0001e93c*/ MOV         R0, R4 
    /*0001e940*/ BL          0x000000000001E940          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e944*/ BIC         R1, R0, #1 
    /*0001e948*/ MOV         R0, R4 
    /*0001e94c*/ ORR         R1, R1, R5 
    /*0001e950*/ BL          0x000000000001E950          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001e954*/ ADD         SP, SP, #12 
    /*0001e958*/ POP         {R4, R5, R6, R7, PC} 
FUNC_END HAL_DCMP_SEG_SetIceEn


FUNC_BEGIN HAL_DCMP_SEG_SetBsErr
    /*0001e95c*/ PUSH        {R4, R5, R6, LR} 
    /*0001e960*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e964*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e968*/ ADD         R1, R1, R0, LSL #4 
    /*0001e96c*/ MOV         R6, R2 
    /*0001e970*/ LDR         R0, [R5] 
    /*0001e974*/ LSL         R4, R1, #5 
    /*0001e978*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001e97c*/ ADD         R0, R0, #912                @ 0x390 
    /*0001e980*/ ADD         R0, R0, R4 
    /*0001e984*/ BL          0x000000000001E984          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e988*/ LDR         R3, [R5] 
    /*0001e98c*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001e990*/ ADD         R3, R3, #912                @ 0x390 
    /*0001e994*/ MOV         R1, R0 
    /*0001e998*/ ADD         R0, R3, R4 
    /*0001e99c*/ BFI         R1, R6, #0, #1 
    /*0001e9a0*/ POP         {R4, R5, R6, LR} 
    HAL_DCMP_SEG_SetBsErr_x1e9a4:
    /*0001e9a4*/ B           HAL_DCMP_SEG_SetBsErr_x1e9a4@ HAL_WriteReg [R_ARM_JUMP24: .text+0x1a88c] 
FUNC_END HAL_DCMP_SEG_SetBsErr


FUNC_BEGIN HAL_DCMP_SEG_GetBsErr
    /*0001e9a8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e9ac*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e9b0*/ PUSH        {R4, LR} 
    /*0001e9b4*/ ADD         R0, R1, R0, LSL #4 
    /*0001e9b8*/ LDR         R3, [R3] 
    /*0001e9bc*/ MOV         R4, R2 
    /*0001e9c0*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001e9c4*/ ADD         R3, R3, #912                @ 0x390 
    /*0001e9c8*/ ADD         R0, R3, R0, LSL #5 
    /*0001e9cc*/ BL          0x000000000001E9CC          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001e9d0*/ AND         R0, R0, #1 
    /*0001e9d4*/ STR         R0, [R4] 
    /*0001e9d8*/ POP         {R4, PC} 
FUNC_END HAL_DCMP_SEG_GetBsErr


FUNC_BEGIN HAL_DCMP_SEG_SetConsume
    /*0001e9dc*/ PUSH        {R4, R5, R6, LR} 
    /*0001e9e0*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001e9e4*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001e9e8*/ ADD         R1, R1, R0, LSL #4 
    /*0001e9ec*/ MOV         R6, R2 
    /*0001e9f0*/ LDR         R0, [R5] 
    /*0001e9f4*/ LSL         R4, R1, #5 
    /*0001e9f8*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001e9fc*/ ADD         R0, R0, #912                @ 0x390 
    /*0001ea00*/ ADD         R0, R0, R4 
    /*0001ea04*/ BL          0x000000000001EA04          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ea08*/ LDR         R3, [R5] 
    /*0001ea0c*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001ea10*/ ADD         R3, R3, #912                @ 0x390 
    /*0001ea14*/ MOV         R1, R0 
    /*0001ea18*/ ADD         R0, R3, R4 
    /*0001ea1c*/ BFI         R1, R6, #2, #1 
    /*0001ea20*/ POP         {R4, R5, R6, LR} 
    HAL_DCMP_SEG_SetConsume_x1ea24:
    /*0001ea24*/ B           HAL_DCMP_SEG_SetConsume_x1ea24@ HAL_WriteReg [R_ARM_JUMP24: .text+0x1a88c] 
FUNC_END HAL_DCMP_SEG_SetConsume


FUNC_BEGIN HAL_DCMP_SEG_GetConsume
    /*0001ea28*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ea2c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ea30*/ PUSH        {R4, LR} 
    /*0001ea34*/ ADD         R0, R1, R0, LSL #4 
    /*0001ea38*/ LDR         R3, [R3] 
    /*0001ea3c*/ MOV         R4, R2 
    /*0001ea40*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001ea44*/ ADD         R3, R3, #912                @ 0x390 
    /*0001ea48*/ ADD         R0, R3, R0, LSL #5 
    /*0001ea4c*/ BL          0x000000000001EA4C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ea50*/ UBFX        R0, R0, #2, #1 
    /*0001ea54*/ STR         R0, [R4] 
    /*0001ea58*/ POP         {R4, PC} 
FUNC_END HAL_DCMP_SEG_GetConsume


FUNC_BEGIN HAL_DCMP_SEG_SetForgive
    /*0001ea5c*/ PUSH        {R4, R5, R6, LR} 
    /*0001ea60*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ea64*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ea68*/ ADD         R1, R1, R0, LSL #4 
    /*0001ea6c*/ MOV         R6, R2 
    /*0001ea70*/ LDR         R0, [R5] 
    /*0001ea74*/ LSL         R4, R1, #5 
    /*0001ea78*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001ea7c*/ ADD         R0, R0, #912                @ 0x390 
    /*0001ea80*/ ADD         R0, R0, R4 
    /*0001ea84*/ BL          0x000000000001EA84          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ea88*/ LDR         R3, [R5] 
    /*0001ea8c*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001ea90*/ ADD         R3, R3, #912                @ 0x390 
    /*0001ea94*/ MOV         R1, R0 
    /*0001ea98*/ ADD         R0, R3, R4 
    /*0001ea9c*/ BFI         R1, R6, #1, #1 
    /*0001eaa0*/ POP         {R4, R5, R6, LR} 
    HAL_DCMP_SEG_SetForgive_x1eaa4:
    /*0001eaa4*/ B           HAL_DCMP_SEG_SetForgive_x1eaa4@ HAL_WriteReg [R_ARM_JUMP24: .text+0x1a88c] 
FUNC_END HAL_DCMP_SEG_SetForgive


FUNC_BEGIN HAL_DCMP_SEG_GetForgive
    /*0001eaa8*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001eaac*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001eab0*/ PUSH        {R4, LR} 
    /*0001eab4*/ ADD         R0, R1, R0, LSL #4 
    /*0001eab8*/ LDR         R3, [R3] 
    /*0001eabc*/ MOV         R4, R2 
    /*0001eac0*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001eac4*/ ADD         R3, R3, #912                @ 0x390 
    /*0001eac8*/ ADD         R0, R3, R0, LSL #5 
    /*0001eacc*/ BL          0x000000000001EACC          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ead0*/ UBFX        R0, R0, #1, #1 
    /*0001ead4*/ STR         R0, [R4] 
    /*0001ead8*/ POP         {R4, PC} 
FUNC_END HAL_DCMP_SEG_GetForgive


FUNC_BEGIN VDP_DCMP_SetIsLossless
    /*0001eadc*/ PUSH        {R4, R5, R6, LR} 
    /*0001eae0*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001eae4*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001eae8*/ ADD         R1, R1, R0, LSL #4 
    /*0001eaec*/ SUB         SP, SP, #8 
    /*0001eaf0*/ MOV         R6, R2 
    /*0001eaf4*/ LDR         R0, [R5] 
    /*0001eaf8*/ LSL         R4, R1, #5 
    /*0001eafc*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001eb00*/ ADD         R0, R0, #896                @ 0x380 
    /*0001eb04*/ ADD         R0, R0, R4 
    /*0001eb08*/ BL          0x000000000001EB08          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001eb0c*/ STR         R0, [SP, #4] 
    /*0001eb10*/ LDR         R0, [R5] 
    /*0001eb14*/ LDR         R3, [SP, #4] 
    /*0001eb18*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001eb1c*/ BFI         R3, R6, #1, #1 
    /*0001eb20*/ ADD         R0, R0, #896                @ 0x380 
    /*0001eb24*/ STR         R3, [SP, #4] 
    /*0001eb28*/ ADD         R0, R0, R4 
    /*0001eb2c*/ LDR         R1, [SP, #4] 
    /*0001eb30*/ BL          0x000000000001EB30          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001eb34*/ ADD         SP, SP, #8 
    /*0001eb38*/ POP         {R4, R5, R6, PC} 
FUNC_END VDP_DCMP_SetIsLossless


FUNC_BEGIN VDP_DCMP_SetCmpMode
    /*0001eb3c*/ PUSH        {R4, R5, R6, LR} 
    /*0001eb40*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001eb44*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001eb48*/ ADD         R1, R1, R0, LSL #4 
    /*0001eb4c*/ SUB         SP, SP, #8 
    /*0001eb50*/ MOV         R6, R2 
    /*0001eb54*/ LDR         R0, [R5] 
    /*0001eb58*/ LSL         R4, R1, #5 
    /*0001eb5c*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001eb60*/ ADD         R0, R0, #896                @ 0x380 
    /*0001eb64*/ ADD         R0, R0, R4 
    /*0001eb68*/ BL          0x000000000001EB68          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001eb6c*/ STR         R0, [SP, #4] 
    /*0001eb70*/ LDR         R0, [R5] 
    /*0001eb74*/ LDR         R3, [SP, #4] 
    /*0001eb78*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001eb7c*/ BFI         R3, R6, #2, #1 
    /*0001eb80*/ ADD         R0, R0, #896                @ 0x380 
    /*0001eb84*/ STR         R3, [SP, #4] 
    /*0001eb88*/ ADD         R0, R0, R4 
    /*0001eb8c*/ LDR         R1, [SP, #4] 
    /*0001eb90*/ BL          0x000000000001EB90          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001eb94*/ ADD         SP, SP, #8 
    /*0001eb98*/ POP         {R4, R5, R6, PC} 
FUNC_END VDP_DCMP_SetCmpMode


FUNC_BEGIN VDP_DCMP_SetIceEn
    /*0001eb9c*/ PUSH        {R4, R5, R6, LR} 
    /*0001eba0*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001eba4*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001eba8*/ ADD         R1, R1, R0, LSL #4 
    /*0001ebac*/ SUB         SP, SP, #8 
    /*0001ebb0*/ MOV         R6, R2 
    /*0001ebb4*/ LDR         R0, [R5] 
    /*0001ebb8*/ LSL         R4, R1, #5 
    /*0001ebbc*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001ebc0*/ ADD         R0, R0, #896                @ 0x380 
    /*0001ebc4*/ ADD         R0, R0, R4 
    /*0001ebc8*/ BL          0x000000000001EBC8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ebcc*/ STR         R0, [SP, #4] 
    /*0001ebd0*/ LDR         R0, [R5] 
    /*0001ebd4*/ LDR         R3, [SP, #4] 
    /*0001ebd8*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001ebdc*/ BFI         R3, R6, #0, #1 
    /*0001ebe0*/ ADD         R0, R0, #896                @ 0x380 
    /*0001ebe4*/ STR         R3, [SP, #4] 
    /*0001ebe8*/ ADD         R0, R0, R4 
    /*0001ebec*/ LDR         R1, [SP, #4] 
    /*0001ebf0*/ BL          0x000000000001EBF0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001ebf4*/ ADD         SP, SP, #8 
    /*0001ebf8*/ POP         {R4, R5, R6, PC} 
FUNC_END VDP_DCMP_SetIceEn


FUNC_BEGIN VDP_DCMP_SetFrameHeight
    /*0001ebfc*/ PUSH        {R4, R5, R6, LR} 
    /*0001ec00*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ec04*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ec08*/ ADD         R1, R1, R0, LSL #4 
    /*0001ec0c*/ SUB         SP, SP, #8 
    /*0001ec10*/ MOV         R6, R2 
    /*0001ec14*/ LDR         R0, [R5] 
    /*0001ec18*/ LSL         R4, R1, #5 
    /*0001ec1c*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001ec20*/ ADD         R0, R0, #900                @ 0x384 
    /*0001ec24*/ ADD         R0, R0, R4 
    /*0001ec28*/ BL          0x000000000001EC28          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ec2c*/ STR         R0, [SP, #4] 
    /*0001ec30*/ LDR         R0, [R5] 
    /*0001ec34*/ LDR         R3, [SP, #4] 
    /*0001ec38*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001ec3c*/ BFI         R3, R6, #16, #14 
    /*0001ec40*/ ADD         R0, R0, #900                @ 0x384 
    /*0001ec44*/ STR         R3, [SP, #4] 
    /*0001ec48*/ ADD         R0, R0, R4 
    /*0001ec4c*/ LDR         R1, [SP, #4] 
    /*0001ec50*/ BL          0x000000000001EC50          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001ec54*/ ADD         SP, SP, #8 
    /*0001ec58*/ POP         {R4, R5, R6, PC} 
FUNC_END VDP_DCMP_SetFrameHeight


FUNC_BEGIN VDP_DCMP_SetFrameWidth
    /*0001ec5c*/ PUSH        {R4, R5, R6, LR} 
    /*0001ec60*/ MOVW        R5, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ec64*/ MOVT        R5, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ec68*/ ADD         R1, R1, R0, LSL #4 
    /*0001ec6c*/ SUB         SP, SP, #8 
    /*0001ec70*/ MOV         R6, R2 
    /*0001ec74*/ LDR         R0, [R5] 
    /*0001ec78*/ LSL         R4, R1, #5 
    /*0001ec7c*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001ec80*/ ADD         R0, R0, #900                @ 0x384 
    /*0001ec84*/ ADD         R0, R0, R4 
    /*0001ec88*/ BL          0x000000000001EC88          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ec8c*/ STR         R0, [SP, #4] 
    /*0001ec90*/ LDR         R0, [R5] 
    /*0001ec94*/ LDR         R3, [SP, #4] 
    /*0001ec98*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001ec9c*/ BFI         R3, R6, #0, #14 
    /*0001eca0*/ ADD         R0, R0, #900                @ 0x384 
    /*0001eca4*/ STR         R3, [SP, #4] 
    /*0001eca8*/ ADD         R0, R0, R4 
    /*0001ecac*/ LDR         R1, [SP, #4] 
    /*0001ecb0*/ BL          0x000000000001ECB0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001ecb4*/ ADD         SP, SP, #8 
    /*0001ecb8*/ POP         {R4, R5, R6, PC} 
FUNC_END VDP_DCMP_SetFrameWidth


FUNC_BEGIN VDP_FDR_VID_SetMrgEnable
    /*0001ecbc*/ PUSH        {R4, R5, R6, LR} 
    /*0001ecc0*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ecc4*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ecc8*/ LSL         R5, R0, #9 
    /*0001eccc*/ MOV         R6, R1 
    /*0001ecd0*/ LDR         R0, [R4] 
    /*0001ecd4*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001ecd8*/ ADD         R0, R0, #512                @ 0x200 
    /*0001ecdc*/ ADD         R0, R0, R5 
    /*0001ece0*/ BL          0x000000000001ECE0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ece4*/ LDR         R3, [R4] 
    /*0001ece8*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001ecec*/ ADD         R3, R3, #512                @ 0x200 
    /*0001ecf0*/ BFI         R0, R6, #19, #1 
    /*0001ecf4*/ MOV         R1, R0 
    /*0001ecf8*/ ADD         R0, R3, R5 
    /*0001ecfc*/ POP         {R4, R5, R6, LR} 
    VDP_FDR_VID_SetMrgEnable_x1ed00:
    /*0001ed00*/ B           VDP_FDR_VID_SetMrgEnable_x1ed00@ HAL_WriteReg [R_ARM_JUMP24: .text+0x1a88c] 
FUNC_END VDP_FDR_VID_SetMrgEnable


FUNC_BEGIN VDP_FDR_VID_SetMrgMuteMode
    /*0001ed04*/ PUSH        {R4, R5, R6, LR} 
    /*0001ed08*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ed0c*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ed10*/ LSL         R5, R0, #9 
    /*0001ed14*/ MOV         R6, R1 
    /*0001ed18*/ LDR         R0, [R4] 
    /*0001ed1c*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001ed20*/ ADD         R0, R0, #512                @ 0x200 
    /*0001ed24*/ ADD         R0, R0, R5 
    /*0001ed28*/ BL          0x000000000001ED28          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ed2c*/ LDR         R3, [R4] 
    /*0001ed30*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001ed34*/ ADD         R3, R3, #512                @ 0x200 
    /*0001ed38*/ BFI         R0, R6, #20, #1 
    /*0001ed3c*/ MOV         R1, R0 
    /*0001ed40*/ ADD         R0, R3, R5 
    /*0001ed44*/ POP         {R4, R5, R6, LR} 
    VDP_FDR_VID_SetMrgMuteMode_x1ed48:
    /*0001ed48*/ B           VDP_FDR_VID_SetMrgMuteMode_x1ed48@ HAL_WriteReg [R_ARM_JUMP24: .text+0x1a88c] 
FUNC_END VDP_FDR_VID_SetMrgMuteMode


FUNC_BEGIN VDP_FDR_VID_SetVhdaddrH
    /*0001ed4c*/ PUSH        {R4, R5, R6, LR} 
    /*0001ed50*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ed54*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ed58*/ LSL         R5, R0, #9 
    /*0001ed5c*/ SUB         SP, SP, #8 
    /*0001ed60*/ MOV         R6, R1 
    /*0001ed64*/ LDR         R0, [R4] 
    /*0001ed68*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001ed6c*/ ADD         R0, R0, #592                @ 0x250 
    /*0001ed70*/ ADD         R0, R0, R5 
    /*0001ed74*/ BL          0x000000000001ED74          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ed78*/ LDR         R3, [R4] 
    /*0001ed7c*/ STR         R0, [SP, #4] 
    /*0001ed80*/ ADD         R0, R3, #65536              @ 0x10000 
    /*0001ed84*/ STR         R6, [SP, #4] 
    /*0001ed88*/ ADD         R0, R0, #592                @ 0x250 
    /*0001ed8c*/ LDR         R1, [SP, #4] 
    /*0001ed90*/ ADD         R0, R0, R5 
    /*0001ed94*/ BL          0x000000000001ED94          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001ed98*/ ADD         SP, SP, #8 
    /*0001ed9c*/ POP         {R4, R5, R6, PC} 
FUNC_END VDP_FDR_VID_SetVhdaddrH


FUNC_BEGIN VDP_FDR_VID_SetVhdaddrL
    /*0001eda0*/ PUSH        {R4, R5, R6, LR} 
    /*0001eda4*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001eda8*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001edac*/ LSL         R5, R0, #9 
    /*0001edb0*/ SUB         SP, SP, #8 
    /*0001edb4*/ MOV         R6, R1 
    /*0001edb8*/ LDR         R0, [R4] 
    /*0001edbc*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001edc0*/ ADD         R0, R0, #596                @ 0x254 
    /*0001edc4*/ ADD         R0, R0, R5 
    /*0001edc8*/ BL          0x000000000001EDC8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001edcc*/ LDR         R3, [R4] 
    /*0001edd0*/ STR         R0, [SP, #4] 
    /*0001edd4*/ ADD         R0, R3, #65536              @ 0x10000 
    /*0001edd8*/ STR         R6, [SP, #4] 
    /*0001eddc*/ ADD         R0, R0, #596                @ 0x254 
    /*0001ede0*/ LDR         R1, [SP, #4] 
    /*0001ede4*/ ADD         R0, R0, R5 
    /*0001ede8*/ BL          0x000000000001EDE8          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001edec*/ ADD         SP, SP, #8 
    /*0001edf0*/ POP         {R4, R5, R6, PC} 
FUNC_END VDP_FDR_VID_SetVhdaddrL


FUNC_BEGIN VDP_FDR_VID_SetVhdcaddrH
    /*0001edf4*/ PUSH        {R4, R5, R6, LR} 
    /*0001edf8*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001edfc*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ee00*/ LSL         R5, R0, #9 
    /*0001ee04*/ SUB         SP, SP, #8 
    /*0001ee08*/ MOV         R6, R1 
    /*0001ee0c*/ LDR         R0, [R4] 
    /*0001ee10*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001ee14*/ ADD         R0, R0, #600                @ 0x258 
    /*0001ee18*/ ADD         R0, R0, R5 
    /*0001ee1c*/ BL          0x000000000001EE1C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ee20*/ LDR         R3, [R4] 
    /*0001ee24*/ STR         R0, [SP, #4] 
    /*0001ee28*/ ADD         R0, R3, #65536              @ 0x10000 
    /*0001ee2c*/ STR         R6, [SP, #4] 
    /*0001ee30*/ ADD         R0, R0, #600                @ 0x258 
    /*0001ee34*/ LDR         R1, [SP, #4] 
    /*0001ee38*/ ADD         R0, R0, R5 
    /*0001ee3c*/ BL          0x000000000001EE3C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001ee40*/ ADD         SP, SP, #8 
    /*0001ee44*/ POP         {R4, R5, R6, PC} 
FUNC_END VDP_FDR_VID_SetVhdcaddrH


FUNC_BEGIN VDP_FDR_VID_SetVhdcaddrL
    /*0001ee48*/ PUSH        {R4, R5, R6, LR} 
    /*0001ee4c*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ee50*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ee54*/ LSL         R5, R0, #9 
    /*0001ee58*/ SUB         SP, SP, #8 
    /*0001ee5c*/ MOV         R6, R1 
    /*0001ee60*/ LDR         R0, [R4] 
    /*0001ee64*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001ee68*/ ADD         R0, R0, #604                @ 0x25c 
    /*0001ee6c*/ ADD         R0, R0, R5 
    /*0001ee70*/ BL          0x000000000001EE70          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ee74*/ LDR         R3, [R4] 
    /*0001ee78*/ STR         R0, [SP, #4] 
    /*0001ee7c*/ ADD         R0, R3, #65536              @ 0x10000 
    /*0001ee80*/ STR         R6, [SP, #4] 
    /*0001ee84*/ ADD         R0, R0, #604                @ 0x25c 
    /*0001ee88*/ LDR         R1, [SP, #4] 
    /*0001ee8c*/ ADD         R0, R0, R5 
    /*0001ee90*/ BL          0x000000000001EE90          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001ee94*/ ADD         SP, SP, #8 
    /*0001ee98*/ POP         {R4, R5, R6, PC} 
FUNC_END VDP_FDR_VID_SetVhdcaddrL


FUNC_BEGIN VDP_FDR_VID_SetVhdnaddrH
    /*0001ee9c*/ PUSH        {R4, R5, R6, LR} 
    /*0001eea0*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001eea4*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001eea8*/ LSL         R5, R0, #9 
    /*0001eeac*/ SUB         SP, SP, #8 
    /*0001eeb0*/ MOV         R6, R1 
    /*0001eeb4*/ LDR         R0, [R4] 
    /*0001eeb8*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001eebc*/ ADD         R0, R0, #608                @ 0x260 
    /*0001eec0*/ ADD         R0, R0, R5 
    /*0001eec4*/ BL          0x000000000001EEC4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001eec8*/ LDR         R3, [R4] 
    /*0001eecc*/ STR         R0, [SP, #4] 
    /*0001eed0*/ ADD         R0, R3, #65536              @ 0x10000 
    /*0001eed4*/ STR         R6, [SP, #4] 
    /*0001eed8*/ ADD         R0, R0, #608                @ 0x260 
    /*0001eedc*/ LDR         R1, [SP, #4] 
    /*0001eee0*/ ADD         R0, R0, R5 
    /*0001eee4*/ BL          0x000000000001EEE4          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001eee8*/ ADD         SP, SP, #8 
    /*0001eeec*/ POP         {R4, R5, R6, PC} 
FUNC_END VDP_FDR_VID_SetVhdnaddrH


FUNC_BEGIN VDP_FDR_VID_SetVhdnaddrL
    /*0001eef0*/ PUSH        {R4, R5, R6, LR} 
    /*0001eef4*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001eef8*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001eefc*/ LSL         R5, R0, #9 
    /*0001ef00*/ SUB         SP, SP, #8 
    /*0001ef04*/ MOV         R6, R1 
    /*0001ef08*/ LDR         R0, [R4] 
    /*0001ef0c*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001ef10*/ ADD         R0, R0, #612                @ 0x264 
    /*0001ef14*/ ADD         R0, R0, R5 
    /*0001ef18*/ BL          0x000000000001EF18          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ef1c*/ LDR         R3, [R4] 
    /*0001ef20*/ STR         R0, [SP, #4] 
    /*0001ef24*/ ADD         R0, R3, #65536              @ 0x10000 
    /*0001ef28*/ STR         R6, [SP, #4] 
    /*0001ef2c*/ ADD         R0, R0, #612                @ 0x264 
    /*0001ef30*/ LDR         R1, [SP, #4] 
    /*0001ef34*/ ADD         R0, R0, R5 
    /*0001ef38*/ BL          0x000000000001EF38          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001ef3c*/ ADD         SP, SP, #8 
    /*0001ef40*/ POP         {R4, R5, R6, PC} 
FUNC_END VDP_FDR_VID_SetVhdnaddrL


FUNC_BEGIN VDP_FDR_VID_SetVhdncaddrH
    /*0001ef44*/ PUSH        {R4, R5, R6, LR} 
    /*0001ef48*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001ef4c*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001ef50*/ LSL         R5, R0, #9 
    /*0001ef54*/ SUB         SP, SP, #8 
    /*0001ef58*/ MOV         R6, R1 
    /*0001ef5c*/ LDR         R0, [R4] 
    /*0001ef60*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001ef64*/ ADD         R0, R0, #616                @ 0x268 
    /*0001ef68*/ ADD         R0, R0, R5 
    /*0001ef6c*/ BL          0x000000000001EF6C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001ef70*/ LDR         R3, [R4] 
    /*0001ef74*/ STR         R0, [SP, #4] 
    /*0001ef78*/ ADD         R0, R3, #65536              @ 0x10000 
    /*0001ef7c*/ STR         R6, [SP, #4] 
    /*0001ef80*/ ADD         R0, R0, #616                @ 0x268 
    /*0001ef84*/ LDR         R1, [SP, #4] 
    /*0001ef88*/ ADD         R0, R0, R5 
    /*0001ef8c*/ BL          0x000000000001EF8C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001ef90*/ ADD         SP, SP, #8 
    /*0001ef94*/ POP         {R4, R5, R6, PC} 
FUNC_END VDP_FDR_VID_SetVhdncaddrH


FUNC_BEGIN VDP_FDR_VID_SetVhdncaddrL
    /*0001ef98*/ PUSH        {R4, R5, R6, LR} 
    /*0001ef9c*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001efa0*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001efa4*/ LSL         R5, R0, #9 
    /*0001efa8*/ SUB         SP, SP, #8 
    /*0001efac*/ MOV         R6, R1 
    /*0001efb0*/ LDR         R0, [R4] 
    /*0001efb4*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001efb8*/ ADD         R0, R0, #620                @ 0x26c 
    /*0001efbc*/ ADD         R0, R0, R5 
    /*0001efc0*/ BL          0x000000000001EFC0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001efc4*/ LDR         R3, [R4] 
    /*0001efc8*/ STR         R0, [SP, #4] 
    /*0001efcc*/ ADD         R0, R3, #65536              @ 0x10000 
    /*0001efd0*/ STR         R6, [SP, #4] 
    /*0001efd4*/ ADD         R0, R0, #620                @ 0x26c 
    /*0001efd8*/ LDR         R1, [SP, #4] 
    /*0001efdc*/ ADD         R0, R0, R5 
    /*0001efe0*/ BL          0x000000000001EFE0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001efe4*/ ADD         SP, SP, #8 
    /*0001efe8*/ POP         {R4, R5, R6, PC} 
FUNC_END VDP_FDR_VID_SetVhdncaddrL


FUNC_BEGIN VDP_FDR_VID_SetChmStride
    /*0001efec*/ PUSH        {R4, R5, R6, LR} 
    /*0001eff0*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001eff4*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001eff8*/ LSL         R5, R0, #9 
    /*0001effc*/ MOV         R6, R1 
    /*0001f000*/ LDR         R0, [R4] 
    /*0001f004*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001f008*/ ADD         R0, R0, #624                @ 0x270 
    /*0001f00c*/ ADD         R0, R0, R5 
    /*0001f010*/ BL          0x000000000001F010          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001f014*/ LDR         R3, [R4] 
    /*0001f018*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001f01c*/ ADD         R3, R3, #624                @ 0x270 
    /*0001f020*/ UXTH        R1, R0 
    /*0001f024*/ ADD         R0, R3, R5 
    /*0001f028*/ ORR         R1, R1, R6, LSL #16 
    /*0001f02c*/ POP         {R4, R5, R6, LR} 
    VDP_FDR_VID_SetChmStride_x1f030:
    /*0001f030*/ B           VDP_FDR_VID_SetChmStride_x1f030@ HAL_WriteReg [R_ARM_JUMP24: .text+0x1a88c] 
FUNC_END VDP_FDR_VID_SetChmStride


FUNC_BEGIN VDP_FDR_VID_SetLmStride
    /*0001f034*/ PUSH        {R4, R5, R6, LR} 
    /*0001f038*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001f03c*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001f040*/ LSL         R5, R0, #9 
    /*0001f044*/ MOV         R6, R1 
    /*0001f048*/ LDR         R0, [R4] 
    /*0001f04c*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001f050*/ ADD         R0, R0, #624                @ 0x270 
    /*0001f054*/ ADD         R0, R0, R5 
    /*0001f058*/ BL          0x000000000001F058          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001f05c*/ LDR         R3, [R4] 
    /*0001f060*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001f064*/ ADD         R3, R3, #624                @ 0x270 
    /*0001f068*/ BFI         R0, R6, #0, #16 
    /*0001f06c*/ MOV         R1, R0 
    /*0001f070*/ ADD         R0, R3, R5 
    /*0001f074*/ POP         {R4, R5, R6, LR} 
    VDP_FDR_VID_SetLmStride_x1f078:
    /*0001f078*/ B           VDP_FDR_VID_SetLmStride_x1f078@ HAL_WriteReg [R_ARM_JUMP24: .text+0x1a88c] 
FUNC_END VDP_FDR_VID_SetLmStride


FUNC_BEGIN VDP_FDR_VID_SetChmTileStride
    /*0001f07c*/ PUSH        {R4, R5, R6, LR} 
    /*0001f080*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001f084*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001f088*/ LSL         R5, R0, #9 
    /*0001f08c*/ MOV         R6, R1 
    /*0001f090*/ LDR         R0, [R4] 
    /*0001f094*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001f098*/ ADD         R0, R0, #628                @ 0x274 
    /*0001f09c*/ ADD         R0, R0, R5 
    /*0001f0a0*/ BL          0x000000000001F0A0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001f0a4*/ LDR         R3, [R4] 
    /*0001f0a8*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001f0ac*/ ADD         R3, R3, #628                @ 0x274 
    /*0001f0b0*/ UXTH        R1, R0 
    /*0001f0b4*/ ADD         R0, R3, R5 
    /*0001f0b8*/ ORR         R1, R1, R6, LSL #16 
    /*0001f0bc*/ POP         {R4, R5, R6, LR} 
    VDP_FDR_VID_SetChmTileStride_x1f0c0:
    /*0001f0c0*/ B           VDP_FDR_VID_SetChmTileStride_x1f0c0@ HAL_WriteReg [R_ARM_JUMP24: .text+0x1a88c] 
FUNC_END VDP_FDR_VID_SetChmTileStride


FUNC_BEGIN VDP_FDR_VID_SetLmTileStride
    /*0001f0c4*/ PUSH        {R4, R5, R6, LR} 
    /*0001f0c8*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001f0cc*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001f0d0*/ LSL         R5, R0, #9 
    /*0001f0d4*/ MOV         R6, R1 
    /*0001f0d8*/ LDR         R0, [R4] 
    /*0001f0dc*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001f0e0*/ ADD         R0, R0, #628                @ 0x274 
    /*0001f0e4*/ ADD         R0, R0, R5 
    /*0001f0e8*/ BL          0x000000000001F0E8          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001f0ec*/ LDR         R3, [R4] 
    /*0001f0f0*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001f0f4*/ ADD         R3, R3, #628                @ 0x274 
    /*0001f0f8*/ BFI         R0, R6, #0, #16 
    /*0001f0fc*/ MOV         R1, R0 
    /*0001f100*/ ADD         R0, R3, R5 
    /*0001f104*/ POP         {R4, R5, R6, LR} 
    VDP_FDR_VID_SetLmTileStride_x1f108:
    /*0001f108*/ B           VDP_FDR_VID_SetLmTileStride_x1f108@ HAL_WriteReg [R_ARM_JUMP24: .text+0x1a88c] 
FUNC_END VDP_FDR_VID_SetLmTileStride


FUNC_BEGIN VDP_FDR_VID_SetChmHeadStride
    /*0001f10c*/ PUSH        {R4, R5, R6, LR} 
    /*0001f110*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001f114*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001f118*/ LSL         R5, R0, #9 
    /*0001f11c*/ MOV         R6, R1 
    /*0001f120*/ LDR         R0, [R4] 
    /*0001f124*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001f128*/ ADD         R0, R0, #632                @ 0x278 
    /*0001f12c*/ ADD         R0, R0, R5 
    /*0001f130*/ BL          0x000000000001F130          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001f134*/ LDR         R3, [R4] 
    /*0001f138*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001f13c*/ ADD         R3, R3, #632                @ 0x278 
    /*0001f140*/ UXTH        R1, R0 
    /*0001f144*/ ADD         R0, R3, R5 
    /*0001f148*/ ORR         R1, R1, R6, LSL #16 
    /*0001f14c*/ POP         {R4, R5, R6, LR} 
    VDP_FDR_VID_SetChmHeadStride_x1f150:
    /*0001f150*/ B           VDP_FDR_VID_SetChmHeadStride_x1f150@ HAL_WriteReg [R_ARM_JUMP24: .text+0x1a88c] 
FUNC_END VDP_FDR_VID_SetChmHeadStride


FUNC_BEGIN VDP_FDR_VID_SetLmHeadStride
    /*0001f154*/ PUSH        {R4, R5, R6, LR} 
    /*0001f158*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001f15c*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001f160*/ LSL         R5, R0, #9 
    /*0001f164*/ MOV         R6, R1 
    /*0001f168*/ LDR         R0, [R4] 
    /*0001f16c*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001f170*/ ADD         R0, R0, #632                @ 0x278 
    /*0001f174*/ ADD         R0, R0, R5 
    /*0001f178*/ BL          0x000000000001F178          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001f17c*/ LDR         R3, [R4] 
    /*0001f180*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001f184*/ ADD         R3, R3, #632                @ 0x278 
    /*0001f188*/ BFI         R0, R6, #0, #16 
    /*0001f18c*/ MOV         R1, R0 
    /*0001f190*/ ADD         R0, R3, R5 
    /*0001f194*/ POP         {R4, R5, R6, LR} 
    VDP_FDR_VID_SetLmHeadStride_x1f198:
    /*0001f198*/ B           VDP_FDR_VID_SetLmHeadStride_x1f198@ HAL_WriteReg [R_ARM_JUMP24: .text+0x1a88c] 
FUNC_END VDP_FDR_VID_SetLmHeadStride


FUNC_BEGIN VDP_FDR_VID_SetHVhdaddrL
    /*0001f19c*/ PUSH        {R4, R5, R6, LR} 
    /*0001f1a0*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001f1a4*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001f1a8*/ LSL         R5, R0, #9 
    /*0001f1ac*/ SUB         SP, SP, #8 
    /*0001f1b0*/ MOV         R6, R1 
    /*0001f1b4*/ LDR         R0, [R4] 
    /*0001f1b8*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001f1bc*/ ADD         R0, R0, #660                @ 0x294 
    /*0001f1c0*/ ADD         R0, R0, R5 
    /*0001f1c4*/ BL          0x000000000001F1C4          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001f1c8*/ LDR         R3, [R4] 
    /*0001f1cc*/ STR         R0, [SP, #4] 
    /*0001f1d0*/ ADD         R0, R3, #65536              @ 0x10000 
    /*0001f1d4*/ STR         R6, [SP, #4] 
    /*0001f1d8*/ ADD         R0, R0, #660                @ 0x294 
    /*0001f1dc*/ LDR         R1, [SP, #4] 
    /*0001f1e0*/ ADD         R0, R0, R5 
    /*0001f1e4*/ BL          0x000000000001F1E4          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001f1e8*/ ADD         SP, SP, #8 
    /*0001f1ec*/ POP         {R4, R5, R6, PC} 
FUNC_END VDP_FDR_VID_SetHVhdaddrL


FUNC_BEGIN VDP_FDR_VID_SetHVhdcaddrH
    /*0001f1f0*/ PUSH        {R4, R5, R6, LR} 
    /*0001f1f4*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001f1f8*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001f1fc*/ LSL         R5, R0, #9 
    /*0001f200*/ SUB         SP, SP, #8 
    /*0001f204*/ MOV         R6, R1 
    /*0001f208*/ LDR         R0, [R4] 
    /*0001f20c*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001f210*/ ADD         R0, R0, #664                @ 0x298 
    /*0001f214*/ ADD         R0, R0, R5 
    /*0001f218*/ BL          0x000000000001F218          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001f21c*/ LDR         R3, [R4] 
    /*0001f220*/ STR         R0, [SP, #4] 
    /*0001f224*/ ADD         R0, R3, #65536              @ 0x10000 
    /*0001f228*/ STR         R6, [SP, #4] 
    /*0001f22c*/ ADD         R0, R0, #664                @ 0x298 
    /*0001f230*/ LDR         R1, [SP, #4] 
    /*0001f234*/ ADD         R0, R0, R5 
    /*0001f238*/ BL          0x000000000001F238          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001f23c*/ ADD         SP, SP, #8 
    /*0001f240*/ POP         {R4, R5, R6, PC} 
FUNC_END VDP_FDR_VID_SetHVhdcaddrH


FUNC_BEGIN VDP_FDR_VID_SetHVhdcaddrL
    /*0001f244*/ PUSH        {R4, R5, R6, LR} 
    /*0001f248*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001f24c*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001f250*/ LSL         R5, R0, #9 
    /*0001f254*/ SUB         SP, SP, #8 
    /*0001f258*/ MOV         R6, R1 
    /*0001f25c*/ LDR         R0, [R4] 
    /*0001f260*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001f264*/ ADD         R0, R0, #668                @ 0x29c 
    /*0001f268*/ ADD         R0, R0, R5 
    /*0001f26c*/ BL          0x000000000001F26C          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001f270*/ LDR         R3, [R4] 
    /*0001f274*/ STR         R0, [SP, #4] 
    /*0001f278*/ ADD         R0, R3, #65536              @ 0x10000 
    /*0001f27c*/ STR         R6, [SP, #4] 
    /*0001f280*/ ADD         R0, R0, #668                @ 0x29c 
    /*0001f284*/ LDR         R1, [SP, #4] 
    /*0001f288*/ ADD         R0, R0, R5 
    /*0001f28c*/ BL          0x000000000001F28C          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001f290*/ ADD         SP, SP, #8 
    /*0001f294*/ POP         {R4, R5, R6, PC} 
FUNC_END VDP_FDR_VID_SetHVhdcaddrL


FUNC_BEGIN VDP_FDR_VID_SetHVhdaddrH
    /*0001f298*/ PUSH        {R4, R5, R6, LR} 
    /*0001f29c*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001f2a0*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001f2a4*/ LSL         R5, R0, #9 
    /*0001f2a8*/ SUB         SP, SP, #8 
    /*0001f2ac*/ MOV         R6, R1 
    /*0001f2b0*/ LDR         R0, [R4] 
    /*0001f2b4*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001f2b8*/ ADD         R0, R0, #656                @ 0x290 
    /*0001f2bc*/ ADD         R0, R0, R5 
    /*0001f2c0*/ BL          0x000000000001F2C0          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001f2c4*/ LDR         R3, [R4] 
    /*0001f2c8*/ STR         R0, [SP, #4] 
    /*0001f2cc*/ ADD         R0, R3, #65536              @ 0x10000 
    /*0001f2d0*/ STR         R6, [SP, #4] 
    /*0001f2d4*/ ADD         R0, R0, #656                @ 0x290 
    /*0001f2d8*/ LDR         R1, [SP, #4] 
    /*0001f2dc*/ ADD         R0, R0, R5 
    /*0001f2e0*/ BL          0x000000000001F2E0          @ HAL_WriteReg [R_ARM_CALL: .text+0x1a88c] 
    /*0001f2e4*/ ADD         SP, SP, #8 
    /*0001f2e8*/ POP         {R4, R5, R6, PC} 
FUNC_END VDP_FDR_VID_SetHVhdaddrH


FUNC_BEGIN HAL_FDR_VID_SetDcmpEn
    /*0001f2ec*/ PUSH        {R4, R5, R6, LR} 
    /*0001f2f0*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001f2f4*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001f2f8*/ LSL         R5, R0, #9 
    /*0001f2fc*/ MOV         R6, R1 
    /*0001f300*/ LDR         R0, [R4] 
    /*0001f304*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001f308*/ ADD         R0, R0, #576                @ 0x240 
    /*0001f30c*/ ADD         R0, R0, R5 
    /*0001f310*/ BL          0x000000000001F310          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001f314*/ LDR         R3, [R4] 
    /*0001f318*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001f31c*/ ADD         R3, R3, #576                @ 0x240 
    /*0001f320*/ BFI         R0, R6, #20, #1 
    /*0001f324*/ MOV         R1, R0 
    /*0001f328*/ ADD         R0, R3, R5 
    /*0001f32c*/ POP         {R4, R5, R6, LR} 
    HAL_FDR_VID_SetDcmpEn_x1f330:
    /*0001f330*/ B           HAL_FDR_VID_SetDcmpEn_x1f330@ HAL_WriteReg [R_ARM_JUMP24: .text+0x1a88c] 
FUNC_END HAL_FDR_VID_SetDcmpEn


FUNC_BEGIN HAL_FDR_VID_SetVidOutUVOrder
    /*0001f334*/ PUSH        {R4, R5, R6, LR} 
    /*0001f338*/ MOVW        R4, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001f33c*/ MOVT        R4, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001f340*/ LSL         R5, R0, #9 
    /*0001f344*/ MOV         R6, R1 
    /*0001f348*/ LDR         R0, [R4] 
    /*0001f34c*/ ADD         R0, R0, #65536              @ 0x10000 
    /*0001f350*/ ADD         R0, R0, #528                @ 0x210 
    /*0001f354*/ ADD         R0, R0, R5 
    /*0001f358*/ BL          0x000000000001F358          @ HAL_ReadReg [R_ARM_CALL: .text+0x1a90c] 
    /*0001f35c*/ LDR         R3, [R4] 
    /*0001f360*/ ADD         R3, R3, #65536              @ 0x10000 
    /*0001f364*/ ADD         R3, R3, #528                @ 0x210 
    /*0001f368*/ BFI         R0, R6, #4, #1 
    /*0001f36c*/ MOV         R1, R0 
    /*0001f370*/ ADD         R0, R3, R5 
    /*0001f374*/ POP         {R4, R5, R6, LR} 
    HAL_FDR_VID_SetVidOutUVOrder_x1f378:
    /*0001f378*/ B           HAL_FDR_VID_SetVidOutUVOrder_x1f378@ HAL_WriteReg [R_ARM_JUMP24: .text+0x1a88c] 
FUNC_END HAL_FDR_VID_SetVidOutUVOrder


FUNC_BEGIN GRAPHICS_DRV_CheckDevId
    /*0001f37c*/ CMP         R0, #2 
    /*0001f380*/ MOVW        R0, #32769                  @ 0x8001 
    /*0001f384*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0001f388*/ MOVLS       R0, #0 
    /*0001f38c*/ BX          LR 
FUNC_END GRAPHICS_DRV_CheckDevId


FUNC_BEGIN GRAPHIC_DRV_GetHalLayer
    /*0001f390*/ CMP         R0, #1 
    /*0001f394*/ BEQ         GRAPHIC_DRV_GetHalLayer_x1f3cc
    /*0001f398*/ BCC         GRAPHIC_DRV_GetHalLayer_x1f3bc
    /*0001f39c*/ CMP         R0, #2 
    /*0001f3a0*/ BNE         GRAPHIC_DRV_GetHalLayer_x1f3b4
    /*0001f3a4*/ MOV         R3, #6 
    /*0001f3a8*/ MOV         R0, #0 
    /*0001f3ac*/ STR         R3, [R1] 
    /*0001f3b0*/ BX          LR 
    GRAPHIC_DRV_GetHalLayer_x1f3b4:
    /*0001f3b4*/ MVN         R0, #0 
    /*0001f3b8*/ BX          LR 
    GRAPHIC_DRV_GetHalLayer_x1f3bc:
    /*0001f3bc*/ MOV         R3, #3 
    /*0001f3c0*/ MOV         R0, #0 
    /*0001f3c4*/ STR         R3, [R1] 
    /*0001f3c8*/ BX          LR 
    GRAPHIC_DRV_GetHalLayer_x1f3cc:
    /*0001f3cc*/ MOV         R3, #4 
    /*0001f3d0*/ MOV         R0, #0 
    /*0001f3d4*/ STR         R3, [R1] 
    /*0001f3d8*/ BX          LR 
FUNC_END GRAPHIC_DRV_GetHalLayer


FUNC_BEGIN GRAPHIC_DRV_GetLayerIndex
    /*0001f3dc*/ CMP         R0, #4 
    /*0001f3e0*/ BEQ         GRAPHIC_DRV_GetLayerIndex_x1f41c
    /*0001f3e4*/ CMP         R0, #6 
    /*0001f3e8*/ BEQ         GRAPHIC_DRV_GetLayerIndex_x1f40c
    /*0001f3ec*/ CMP         R0, #3 
    /*0001f3f0*/ BEQ         GRAPHIC_DRV_GetLayerIndex_x1f400
    /*0001f3f4*/ MOVW        R0, #32872                  @ 0x8068 
    /*0001f3f8*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0001f3fc*/ BX          LR 
    GRAPHIC_DRV_GetLayerIndex_x1f400:
    /*0001f400*/ MOV         R0, #0 
    /*0001f404*/ STR         R0, [R1] 
    /*0001f408*/ BX          LR 
    GRAPHIC_DRV_GetLayerIndex_x1f40c:
    /*0001f40c*/ MOV         R3, #2 
    /*0001f410*/ MOV         R0, #0 
    /*0001f414*/ STR         R3, [R1] 
    /*0001f418*/ BX          LR 
    GRAPHIC_DRV_GetLayerIndex_x1f41c:
    /*0001f41c*/ MOV         R3, #1 
    /*0001f420*/ MOV         R0, #0 
    /*0001f424*/ STR         R3, [R1] 
    /*0001f428*/ BX          LR 
FUNC_END GRAPHIC_DRV_GetLayerIndex


FUNC_BEGIN GRAPHIC_DRV_GetLayerID
    /*0001f42c*/ CMP         R0, #4 
    /*0001f430*/ BEQ         GRAPHIC_DRV_GetLayerID_x1f44c
    /*0001f434*/ CMP         R0, #6 
    /*0001f438*/ BEQ         GRAPHIC_DRV_GetLayerID_x1f44c
    /*0001f43c*/ CMP         R0, #3 
    /*0001f440*/ BEQ         GRAPHIC_DRV_GetLayerID_x1f44c
    /*0001f444*/ MVN         R0, #0 
    /*0001f448*/ BX          LR 
    GRAPHIC_DRV_GetLayerID_x1f44c:
    /*0001f44c*/ STR         R0, [R1] 
    /*0001f450*/ MOV         R0, #0 
    /*0001f454*/ BX          LR 
FUNC_END GRAPHIC_DRV_GetLayerID


FUNC_BEGIN GRAPHIC_DRV_GetScanMode
    /*0001f458*/ PUSH        {R4, LR} 
    /*0001f45c*/ BL          0x000000000001F45C          @ HAL_DISP_GetDispIoP [R_ARM_CALL: .text+0x1b5d0] 
    /*0001f460*/ ADDS        R0, R0, #0 
    /*0001f464*/ MOVNE       R0, #1 
    /*0001f468*/ POP         {R4, PC} 
FUNC_END GRAPHIC_DRV_GetScanMode


FUNC_BEGIN GRAPHIC_DRV_GetLayerWbcIntState
    /*0001f46c*/ BX          LR 
FUNC_END GRAPHIC_DRV_GetLayerWbcIntState


FUNC_BEGIN GRAPHIC_DRV_GetIntState
    /*0001f470*/ PUSH        {R4, LR} 
    /*0001f474*/ BL          0x000000000001F474          @ HAL_DISP_GetIntState [R_ARM_CALL: .text+0x1ac78] 
    /*0001f478*/ MOV         R0, #1 
    /*0001f47c*/ POP         {R4, PC} 
FUNC_END GRAPHIC_DRV_GetIntState


FUNC_BEGIN GRAPHIC_DRV_CheckGraphicBindSupport
    /*0001f480*/ PUSH        {LR}                        @ (str lr, [sp, #-4]!) 
    /*0001f484*/ SUB         SP, SP, #12 
    /*0001f488*/ MOVW        R2, #901                    @ 0x385 
    /*0001f48c*/ MOV         R1, #15 
    /*0001f490*/ STR         R2, [SP] 
    /*0001f494*/ MOVW        R3, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .rodata+0x10a8] 
    /*0001f498*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8db0] 
    /*0001f49c*/ MOVT        R3, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .rodata+0x10a8] 
    /*0001f4a0*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8db0] 
    /*0001f4a4*/ MOV         R0, #3 
    /*0001f4a8*/ BL          0x000000000001F4A8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f4ac*/ MOV         R1, #15 
    /*0001f4b0*/ MOVW        R2, #0                      @ .LC1 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8dcc] 
    /*0001f4b4*/ MOV         R0, #3 
    /*0001f4b8*/ MOVT        R2, #0                      @ .LC1 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8dcc] 
    /*0001f4bc*/ BL          0x000000000001F4BC          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f4c0*/ MOVW        R0, #32776                  @ 0x8008 
    /*0001f4c4*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0001f4c8*/ ADD         SP, SP, #12 
    /*0001f4cc*/ POP         {PC}                        @ (ldr pc, [sp], #4) 
FUNC_END GRAPHIC_DRV_CheckGraphicBindSupport


FUNC_BEGIN GRAPHIC_DRV_GraphicBindDev
    /*0001f4d0*/ MOV         R0, #0 
    /*0001f4d4*/ BX          LR 
FUNC_END GRAPHIC_DRV_GraphicBindDev


FUNC_BEGIN GRAPHIC_DRV_GraphicUnBindDev
    /*0001f4d8*/ MOV         R0, #0 
    /*0001f4dc*/ BX          LR 
FUNC_END GRAPHIC_DRV_GraphicUnBindDev


FUNC_BEGIN GRAPHIC_DRV_Lock_Init
    /*0001f4e0*/ PUSH        {R4, LR} 
    /*0001f4e4*/ MOVW        R4, #0                      @ s_astGfxLayerCtx [R_ARM_MOVW_ABS_NC: .bss+0x3434] 
    /*0001f4e8*/ MOVT        R4, #0                      @ s_astGfxLayerCtx [R_ARM_MOVT_ABS: .bss+0x3434] 
    /*0001f4ec*/ MOV         R2, #80                     @ 0x50 
    /*0001f4f0*/ MOV         R1, #0 
    /*0001f4f4*/ MOV         R0, R4 
    /*0001f4f8*/ BL          0x000000000001F4F8          @ osal_memset [R_ARM_CALL: +0x0] 
    /*0001f4fc*/ ADD         R0, R4, #64                 @ 0x40 
    /*0001f500*/ BL          0x000000000001F500          @ osal_spin_lock_init [R_ARM_CALL: +0x0] 
    /*0001f504*/ MOV         R0, #0 
    /*0001f508*/ POP         {R4, PC} 
FUNC_END GRAPHIC_DRV_Lock_Init


FUNC_BEGIN GRAPHIC_DRV_Lock_Exit
    /*0001f50c*/ PUSH        {R4, LR} 
    /*0001f510*/ LDR         R0, [PC, #8]                @ 0x000000000001f520 
    /*0001f514*/ BL          0x000000000001F514          @ osal_spin_lock_destory [R_ARM_CALL: +0x0] 
    /*0001f518*/ MOV         R0, #0 
    /*0001f51c*/ POP         {R4, PC} 
    /*0001f520*/ ANDEQ       R0, R0, R0, ASR #32         @ s_astGfxLayerCtx [R_ARM_ABS32: .bss+0x3434] 
FUNC_END GRAPHIC_DRV_Lock_Exit


FUNC_BEGIN GRAPHIC_DRV_Init
    /*0001f524*/ MOVW        R3, #0                      @ s_astGfxLayerCtx [R_ARM_MOVW_ABS_NC: .bss+0x3434] 
    /*0001f528*/ MOVT        R3, #0                      @ s_astGfxLayerCtx [R_ARM_MOVT_ABS: .bss+0x3434] 
    /*0001f52c*/ MOV         R1, #0 
    /*0001f530*/ MOV         R0, #3 
    /*0001f534*/ MOV         R2, #1 
    /*0001f538*/ STR         R0, [R3] 
    /*0001f53c*/ STR         R2, [R3, #8] 
    /*0001f540*/ MOV         R0, #6 
    /*0001f544*/ MOV         R2, #9 
    /*0001f548*/ STR         R0, [R3, #76]               @ 0x4c 
    /*0001f54c*/ STR         R2, [R3, #32] 
    /*0001f550*/ MOV         R0, #13 
    /*0001f554*/ MOVW        R2, #1023                   @ 0x3ff 
    /*0001f558*/ STR         R0, [R3, #52]               @ 0x34 
    /*0001f55c*/ STR         R2, [R3, #60]               @ 0x3c 
    /*0001f560*/ MOV         R0, R1 
    /*0001f564*/ MOV         R2, #50                     @ 0x32 
    /*0001f568*/ STR         R1, [R3, #12] 
    /*0001f56c*/ STR         R1, [R3, #56]               @ 0x38 
    /*0001f570*/ STR         R2, [R3, #36]               @ 0x24 
    /*0001f574*/ STR         R2, [R3, #40]               @ 0x28 
    /*0001f578*/ STR         R2, [R3, #44]               @ 0x2c 
    /*0001f57c*/ STR         R2, [R3, #48]               @ 0x30 
    /*0001f580*/ BX          LR 
FUNC_END GRAPHIC_DRV_Init


FUNC_BEGIN GRAPHIC_DRV_Exit
    /*0001f584*/ MOV         R0, #0 
    /*0001f588*/ BX          LR 
FUNC_END GRAPHIC_DRV_Exit


FUNC_BEGIN GRAPHIC_DRV_IsChipSupportCsc
    /*0001f58c*/ MOV         R0, #1 
    /*0001f590*/ BX          LR 
FUNC_END GRAPHIC_DRV_IsChipSupportCsc


FUNC_BEGIN GRAPHIC_DRV_CheckCscCoef
    /*0001f594*/ PUSH        {R4, LR} 
    /*0001f598*/ MOV         R4, R1 
    /*0001f59c*/ LDR         R3, [R1] 
    /*0001f5a0*/ SUB         SP, SP, #8 
    /*0001f5a4*/ SUB         R0, R3, #5 
    /*0001f5a8*/ BIC         R0, R0, #4 
    /*0001f5ac*/ CMP         R3, #0 
    /*0001f5b0*/ CMPNE       R0, #1 
    /*0001f5b4*/ MOVHI       R0, #1 
    /*0001f5b8*/ MOVLS       R0, #0 
    /*0001f5bc*/ BHI         GRAPHIC_DRV_CheckCscCoef_x1f708
    /*0001f5c0*/ LDR         R3, [R1, #8] 
    /*0001f5c4*/ CMP         R3, #100                    @ 0x64 
    /*0001f5c8*/ BHI         GRAPHIC_DRV_CheckCscCoef_x1f5f8
    /*0001f5cc*/ LDR         R3, [R1, #12] 
    /*0001f5d0*/ CMP         R3, #100                    @ 0x64 
    /*0001f5d4*/ BHI         GRAPHIC_DRV_CheckCscCoef_x1f63c
    /*0001f5d8*/ LDR         R3, [R1, #4] 
    /*0001f5dc*/ CMP         R3, #100                    @ 0x64 
    /*0001f5e0*/ BHI         GRAPHIC_DRV_CheckCscCoef_x1f680
    /*0001f5e4*/ LDR         R3, [R1, #16] 
    /*0001f5e8*/ CMP         R3, #100                    @ 0x64 
    /*0001f5ec*/ BHI         GRAPHIC_DRV_CheckCscCoef_x1f6c4
    GRAPHIC_DRV_CheckCscCoef_x1f5f0:
    /*0001f5f0*/ ADD         SP, SP, #8 
    /*0001f5f4*/ POP         {R4, PC} 
    GRAPHIC_DRV_CheckCscCoef_x1f5f8:
    /*0001f5f8*/ MOVW        R3, #1039                   @ 0x40f 
    /*0001f5fc*/ MOV         R1, #15 
    /*0001f600*/ STR         R3, [SP] 
    /*0001f604*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8db0] 
    /*0001f608*/ LDR         R3, [PC, #316]              @ 0x000000000001f74c 
    /*0001f60c*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8db0] 
    /*0001f610*/ MOV         R0, #3 
    /*0001f614*/ BL          0x000000000001F614          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f618*/ LDR         R3, [R4, #8] 
    /*0001f61c*/ MOVW        R2, #0                      @ .LC3 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8e30] 
    /*0001f620*/ MOV         R1, #15 
    /*0001f624*/ MOVT        R2, #0                      @ .LC3 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8e30] 
    /*0001f628*/ MOV         R0, #3 
    /*0001f62c*/ BL          0x000000000001F62C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f630*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001f634*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0001f638*/ B           GRAPHIC_DRV_CheckCscCoef_x1f5f0
    GRAPHIC_DRV_CheckCscCoef_x1f63c:
    /*0001f63c*/ MOVW        R3, #1044                   @ 0x414 
    /*0001f640*/ MOV         R1, #15 
    /*0001f644*/ STR         R3, [SP] 
    /*0001f648*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8db0] 
    /*0001f64c*/ LDR         R3, [PC, #248]              @ 0x000000000001f74c 
    /*0001f650*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8db0] 
    /*0001f654*/ MOV         R0, #3 
    /*0001f658*/ BL          0x000000000001F658          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f65c*/ LDR         R3, [R4, #12] 
    /*0001f660*/ MOVW        R2, #0                      @ .LC4 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8e60] 
    /*0001f664*/ MOV         R1, #15 
    /*0001f668*/ MOVT        R2, #0                      @ .LC4 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8e60] 
    /*0001f66c*/ MOV         R0, #3 
    /*0001f670*/ BL          0x000000000001F670          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f674*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001f678*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0001f67c*/ B           GRAPHIC_DRV_CheckCscCoef_x1f5f0
    GRAPHIC_DRV_CheckCscCoef_x1f680:
    /*0001f680*/ MOVW        R3, #1049                   @ 0x419 
    /*0001f684*/ MOV         R1, #15 
    /*0001f688*/ STR         R3, [SP] 
    /*0001f68c*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8db0] 
    /*0001f690*/ LDR         R3, [PC, #180]              @ 0x000000000001f74c 
    /*0001f694*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8db0] 
    /*0001f698*/ MOV         R0, #3 
    /*0001f69c*/ BL          0x000000000001F69C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f6a0*/ LDR         R3, [R4, #4] 
    /*0001f6a4*/ MOVW        R2, #0                      @ .LC5 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8e8c] 
    /*0001f6a8*/ MOV         R1, #15 
    /*0001f6ac*/ MOVT        R2, #0                      @ .LC5 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8e8c] 
    /*0001f6b0*/ MOV         R0, #3 
    /*0001f6b4*/ BL          0x000000000001F6B4          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f6b8*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001f6bc*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0001f6c0*/ B           GRAPHIC_DRV_CheckCscCoef_x1f5f0
    GRAPHIC_DRV_CheckCscCoef_x1f6c4:
    /*0001f6c4*/ MOVW        R3, #1054                   @ 0x41e 
    /*0001f6c8*/ MOV         R1, #15 
    /*0001f6cc*/ STR         R3, [SP] 
    /*0001f6d0*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8db0] 
    /*0001f6d4*/ LDR         R3, [PC, #112]              @ 0x000000000001f74c 
    /*0001f6d8*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8db0] 
    /*0001f6dc*/ MOV         R0, #3 
    /*0001f6e0*/ BL          0x000000000001F6E0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f6e4*/ LDR         R3, [R4, #16] 
    /*0001f6e8*/ MOVW        R2, #0                      @ .LC6 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8eb8] 
    /*0001f6ec*/ MOV         R1, #15 
    /*0001f6f0*/ MOVT        R2, #0                      @ .LC6 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8eb8] 
    /*0001f6f4*/ MOV         R0, #3 
    /*0001f6f8*/ BL          0x000000000001F6F8          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f6fc*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001f700*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0001f704*/ B           GRAPHIC_DRV_CheckCscCoef_x1f5f0
    GRAPHIC_DRV_CheckCscCoef_x1f708:
    /*0001f708*/ MOVW        R3, #1031                   @ 0x407 
    /*0001f70c*/ MOV         R1, #15 
    /*0001f710*/ STR         R3, [SP] 
    /*0001f714*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8db0] 
    /*0001f718*/ LDR         R3, [PC, #44]               @ 0x000000000001f74c 
    /*0001f71c*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8db0] 
    /*0001f720*/ MOV         R0, #3 
    /*0001f724*/ BL          0x000000000001F724          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f728*/ LDR         R3, [R4] 
    /*0001f72c*/ MOVW        R2, #0                      @ .LC2 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8df4] 
    /*0001f730*/ MOV         R1, #15 
    /*0001f734*/ MOVT        R2, #0                      @ .LC2 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8df4] 
    /*0001f738*/ MOV         R0, #3 
    /*0001f73c*/ BL          0x000000000001F73C          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f740*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001f744*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0001f748*/ B           GRAPHIC_DRV_CheckCscCoef_x1f5f0
    /*0001f74c*/ ANDEQ       R1, R0, IP, ASR #1 
FUNC_END GRAPHIC_DRV_CheckCscCoef


FUNC_BEGIN GRAPHIC_DRV_SetCscCoef
    /*0001f750*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*0001f754*/ CMP         R0, #4 
    /*0001f758*/ SUB         SP, SP, #100                @ 0x64 
    /*0001f75c*/ MOV         R5, R0 
    /*0001f760*/ MOV         R4, R1 
    /*0001f764*/ STR         R2, [SP, #16] 
    /*0001f768*/ BEQ         GRAPHIC_DRV_SetCscCoef_x1f9c8
    /*0001f76c*/ CMP         R0, #6 
    /*0001f770*/ BEQ         GRAPHIC_DRV_SetCscCoef_x1f9ac
    /*0001f774*/ CMP         R0, #3 
    /*0001f778*/ BEQ         GRAPHIC_DRV_SetCscCoef_x1f7c0
    /*0001f77c*/ MOVW        R3, #1074                   @ 0x432 
    /*0001f780*/ MOV         R1, #15 
    /*0001f784*/ STR         R3, [SP] 
    /*0001f788*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8db0] 
    /*0001f78c*/ LDR         R3, [PC, #668]              @ 0x000000000001fa30 
    /*0001f790*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8db0] 
    /*0001f794*/ MOV         R0, #3 
    /*0001f798*/ BL          0x000000000001F798          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f79c*/ MOV         R3, R5 
    /*0001f7a0*/ MOVW        R2, #0                      @ .LC8 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8f20] 
    /*0001f7a4*/ MOV         R1, #15 
    /*0001f7a8*/ MOVT        R2, #0                      @ .LC8 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8f20] 
    /*0001f7ac*/ MOV         R0, #3 
    /*0001f7b0*/ BL          0x000000000001F7B0          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001f7b4*/ MOV         R0, #0 
    GRAPHIC_DRV_SetCscCoef_x1f7b8:
    /*0001f7b8*/ ADD         SP, SP, #100                @ 0x64 
    /*0001f7bc*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GRAPHIC_DRV_SetCscCoef_x1f7c0:
    /*0001f7c0*/ MOV         R3, #0 
    /*0001f7c4*/ STR         R3, [SP, #20] 
    GRAPHIC_DRV_SetCscCoef_x1f7c8:
    /*0001f7c8*/ LDR         R3, [R4] 
    /*0001f7cc*/ CMP         R3, #5 
    /*0001f7d0*/ BEQ         GRAPHIC_DRV_SetCscCoef_x1f9c0
    GRAPHIC_DRV_SetCscCoef_x1f7d4:
    /*0001f7d4*/ CMP         R3, #6 
    /*0001f7d8*/ BEQ         GRAPHIC_DRV_SetCscCoef_x1f9d4
    /*0001f7dc*/ CMP         R3, #9 
    /*0001f7e0*/ BEQ         GRAPHIC_DRV_SetCscCoef_x1f9dc
    /*0001f7e4*/ CMP         R3, #10 
    /*0001f7e8*/ BEQ         GRAPHIC_DRV_SetCscCoef_x1f9e4
    /*0001f7ec*/ CMP         R3, #0 
    /*0001f7f0*/ MOVEQ       IP, #3 
    /*0001f7f4*/ BNE         GRAPHIC_DRV_SetCscCoef_x1f9ec
    GRAPHIC_DRV_SetCscCoef_x1f7f8:
    /*0001f7f8*/ LDMIB       R4, {R0, R1, R2} 
    /*0001f7fc*/ ADD         R7, SP, #24 
    /*0001f800*/ LDR         R3, [R4, #16] 
    /*0001f804*/ STR         IP, [SP] 
    /*0001f808*/ STR         R7, [SP, #4] 
    /*0001f80c*/ BL          0x000000000001F80C          @ VOU_DRV_CalcCscMatrix [R_ARM_CALL: .text+0x15f3c] 
    /*0001f810*/ LDR         IP, [SP, #24] 
    /*0001f814*/ LDR         R8, [SP, #28] 
    /*0001f818*/ MOVW        R3, #19923                  @ 0x4dd3 
    /*0001f81c*/ MOVT        R3, #4194                   @ 0x1062 
    /*0001f820*/ LDR         R6, [SP, #32] 
    /*0001f824*/ LSL         IP, IP, #13 
    /*0001f828*/ MOV         R1, R7 
    /*0001f82c*/ LSL         R2, R8, #13 
    /*0001f830*/ LDR         SL, [SP, #36]               @ 0x24 
    /*0001f834*/ SMULL       R8, R9, IP, R3 
    /*0001f838*/ ASR         IP, IP, #31 
    /*0001f83c*/ LSL         R6, R6, #13 
    /*0001f840*/ ASR         R7, R2, #31 
    /*0001f844*/ MOV         R0, R5 
    /*0001f848*/ LDR         R5, [SP, #40]               @ 0x28 
    /*0001f84c*/ LSL         SL, SL, #13 
    /*0001f850*/ LDR         FP, [SP, #44]               @ 0x2c 
    /*0001f854*/ MOV         LR, #0 
    /*0001f858*/ STR         LR, [SP, #88]               @ 0x58 
    /*0001f85c*/ RSB         IP, IP, R9, ASR #6 
    /*0001f860*/ LSL         R5, R5, #13 
    /*0001f864*/ SMULL       R8, R9, R2, R3 
    /*0001f868*/ ASR         R8, R6, #31 
    /*0001f86c*/ LDR         LR, [SP, #48]               @ 0x30 
    /*0001f870*/ LSL         FP, FP, #13 
    /*0001f874*/ LDR         R2, [SP, #56]               @ 0x38 
    /*0001f878*/ STR         IP, [SP, #24] 
    /*0001f87c*/ LSL         LR, LR, #13 
    /*0001f880*/ LDR         IP, [SP, #52]               @ 0x34 
    /*0001f884*/ RSB         R7, R7, R9, ASR #6 
    /*0001f888*/ STR         R7, [SP, #28] 
    /*0001f88c*/ SMULL       R6, R7, R6, R3 
    /*0001f890*/ LSL         IP, IP, #13 
    /*0001f894*/ LSL         R2, R2, #13 
    /*0001f898*/ STRD        R6, [SP, #8] 
    /*0001f89c*/ LDR         R9, [SP, #12] 
    /*0001f8a0*/ SMULL       R6, R7, SL, R3 
    /*0001f8a4*/ RSB         R8, R8, R9, ASR #6 
    /*0001f8a8*/ STR         R8, [SP, #32] 
    /*0001f8ac*/ ASR         SL, SL, #31 
    /*0001f8b0*/ SMULL       R8, R9, R5, R3 
    /*0001f8b4*/ ASR         R5, R5, #31 
    /*0001f8b8*/ RSB         SL, SL, R7, ASR #6 
    /*0001f8bc*/ STR         SL, [SP, #36]               @ 0x24 
    /*0001f8c0*/ SMULL       R6, R7, FP, R3 
    /*0001f8c4*/ ASR         FP, FP, #31 
    /*0001f8c8*/ RSB         R5, R5, R9, ASR #6 
    /*0001f8cc*/ STR         R5, [SP, #40]               @ 0x28 
    /*0001f8d0*/ SMULL       R8, R9, LR, R3 
    /*0001f8d4*/ ASR         LR, LR, #31 
    /*0001f8d8*/ RSB         FP, FP, R7, ASR #6 
    /*0001f8dc*/ LDR         R5, [SP, #64]               @ 0x40 
    /*0001f8e0*/ SMULL       R6, R7, IP, R3 
    /*0001f8e4*/ ASR         IP, IP, #31 
    /*0001f8e8*/ RSB         LR, LR, R9, ASR #6 
    /*0001f8ec*/ STR         LR, [SP, #48]               @ 0x30 
    /*0001f8f0*/ SMULL       R8, R9, R2, R3 
    /*0001f8f4*/ LDR         R3, [SP, #60]               @ 0x3c 
    /*0001f8f8*/ ASR         R2, R2, #31 
    /*0001f8fc*/ LDR         LR, [SP, #68]               @ 0x44 
    /*0001f900*/ RSB         IP, IP, R7, ASR #6 
    /*0001f904*/ STR         IP, [SP, #52]               @ 0x34 
    /*0001f908*/ LSL         R3, R3, #2 
    /*0001f90c*/ MOVW        IP, #1023                   @ 0x3ff 
    /*0001f910*/ STR         R3, [SP, #60]               @ 0x3c 
    /*0001f914*/ LSL         LR, LR, #2 
    /*0001f918*/ STR         IP, [SP, #92]               @ 0x5c 
    /*0001f91c*/ RSB         R2, R2, R9, ASR #6 
    /*0001f920*/ LDR         R3, [SP, #80]               @ 0x50 
    /*0001f924*/ MOV         IP, #13 
    /*0001f928*/ STR         R2, [SP, #56]               @ 0x38 
    /*0001f92c*/ LSL         R5, R5, #2 
    /*0001f930*/ STR         IP, [SP, #84]               @ 0x54 
    /*0001f934*/ LDR         R2, [SP, #76]               @ 0x4c 
    /*0001f938*/ LSL         R3, R3, #2 
    /*0001f93c*/ LDR         IP, [SP, #72]               @ 0x48 
    /*0001f940*/ STR         LR, [SP, #68]               @ 0x44 
    /*0001f944*/ STR         R5, [SP, #64]               @ 0x40 
    /*0001f948*/ LSL         R2, R2, #2 
    /*0001f94c*/ LSL         IP, IP, #2 
    /*0001f950*/ STR         FP, [SP, #44]               @ 0x2c 
    /*0001f954*/ STR         IP, [SP, #72]               @ 0x48 
    /*0001f958*/ MOVW        R5, #0                      @ s_astGfxLayerCtx [R_ARM_MOVW_ABS_NC: .bss+0x3434] 
    /*0001f95c*/ STR         R2, [SP, #76]               @ 0x4c 
    /*0001f960*/ MOVT        R5, #0                      @ s_astGfxLayerCtx [R_ARM_MOVT_ABS: .bss+0x3434] 
    /*0001f964*/ STR         R3, [SP, #80]               @ 0x50 
    /*0001f968*/ BL          0x000000000001F968          @ HAL_LAYER_SetCscCoef [R_ARM_CALL: .text+0x1e1e8] 
    /*0001f96c*/ LDR         R3, [SP, #20] 
    /*0001f970*/ MOV         R0, #80                     @ 0x50 
    /*0001f974*/ MOV         R1, R4 
    /*0001f978*/ MOV         R2, #20 
    /*0001f97c*/ MUL         R4, R0, R3 
    /*0001f980*/ ADD         R0, R4, #32 
    /*0001f984*/ ADD         R0, R5, R0 
    /*0001f988*/ BL          0x000000000001F988          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001f98c*/ ADD         R0, R4, #52                 @ 0x34 
    /*0001f990*/ ADD         R0, R5, R0 
    /*0001f994*/ LDR         R1, [SP, #16] 
    /*0001f998*/ MOV         R2, #12 
    /*0001f99c*/ BL          0x000000000001F99C          @ osal_memcpy [R_ARM_CALL: +0x0] 
    /*0001f9a0*/ MOV         R0, #0 
    /*0001f9a4*/ ADD         SP, SP, #100                @ 0x64 
    /*0001f9a8*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    GRAPHIC_DRV_SetCscCoef_x1f9ac:
    /*0001f9ac*/ MOV         R3, #2 
    /*0001f9b0*/ STR         R3, [SP, #20] 
    /*0001f9b4*/ LDR         R3, [R4] 
    /*0001f9b8*/ CMP         R3, #5 
    /*0001f9bc*/ BNE         GRAPHIC_DRV_SetCscCoef_x1f7d4
    GRAPHIC_DRV_SetCscCoef_x1f9c0:
    /*0001f9c0*/ MOV         IP, #9 
    /*0001f9c4*/ B           GRAPHIC_DRV_SetCscCoef_x1f7f8
    GRAPHIC_DRV_SetCscCoef_x1f9c8:
    /*0001f9c8*/ MOV         R3, #1 
    /*0001f9cc*/ STR         R3, [SP, #20] 
    /*0001f9d0*/ B           GRAPHIC_DRV_SetCscCoef_x1f7c8
    GRAPHIC_DRV_SetCscCoef_x1f9d4:
    /*0001f9d4*/ MOV         IP, #10 
    /*0001f9d8*/ B           GRAPHIC_DRV_SetCscCoef_x1f7f8
    GRAPHIC_DRV_SetCscCoef_x1f9dc:
    /*0001f9dc*/ MOV         IP, #14 
    /*0001f9e0*/ B           GRAPHIC_DRV_SetCscCoef_x1f7f8
    GRAPHIC_DRV_SetCscCoef_x1f9e4:
    /*0001f9e4*/ MOV         IP, #15 
    /*0001f9e8*/ B           GRAPHIC_DRV_SetCscCoef_x1f7f8
    GRAPHIC_DRV_SetCscCoef_x1f9ec:
    /*0001f9ec*/ MOVW        R3, #1100                   @ 0x44c 
    /*0001f9f0*/ MOV         R1, #15 
    /*0001f9f4*/ STR         R3, [SP] 
    /*0001f9f8*/ MOVW        R2, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8db0] 
    /*0001f9fc*/ LDR         R3, [PC, #44]               @ 0x000000000001fa30 
    /*0001fa00*/ MOVT        R2, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8db0] 
    /*0001fa04*/ MOV         R0, #3 
    /*0001fa08*/ BL          0x000000000001FA08          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001fa0c*/ LDR         R3, [R4] 
    /*0001fa10*/ MOVW        R2, #0                      @ .LC7 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8ee8] 
    /*0001fa14*/ MOV         R1, #15 
    /*0001fa18*/ MOVT        R2, #0                      @ .LC7 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8ee8] 
    /*0001fa1c*/ MOV         R0, #3 
    /*0001fa20*/ BL          0x000000000001FA20          @ HI_LOG [R_ARM_CALL: +0x0] 
    /*0001fa24*/ MOVW        R0, #32771                  @ 0x8003 
    /*0001fa28*/ MOVT        R0, #40975                  @ 0xa00f 
    /*0001fa2c*/ B           GRAPHIC_DRV_SetCscCoef_x1f7b8
    /*0001fa30*/ ANDEQ       R1, R0, R8, ROR #1 
FUNC_END GRAPHIC_DRV_SetCscCoef


FUNC_BEGIN GRAPHIC_DRV_ShowProc
    /*0001fa34*/ MOV         R0, #0 
    /*0001fa38*/ BX          LR 
FUNC_END GRAPHIC_DRV_ShowProc


FUNC_BEGIN hi35xx_vo_remove
    /*0001fa3c*/ PUSH        {R4, LR} 
    /*0001fa40*/ BL          0x000000000001FA40          @ VOU_ModExit [R_ARM_CALL: .text+0x3c1c] 
    /*0001fa44*/ MOVW        R3, #0                      @ pVoReg [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001fa48*/ MOVT        R3, #0                      @ pVoReg [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001fa4c*/ MOV         R2, #0 
    /*0001fa50*/ MOV         R0, R2 
    /*0001fa54*/ STR         R2, [R3] 
    /*0001fa58*/ POP         {R4, PC} 
FUNC_END hi35xx_vo_remove


FUNC_BEGIN hi35xx_vo_probe
    /*0001fa5c*/ PUSH        {R4, R5, R6, LR} 
    /*0001fa60*/ MOV         R2, #0 
    /*0001fa64*/ MOV         R1, #512                    @ 0x200 
    /*0001fa68*/ MOV         R4, R0 
    /*0001fa6c*/ BL          0x000000000001FA6C          @ osal_platform_get_resource [R_ARM_CALL: +0x0] 
    /*0001fa70*/ ADD         R5, R4, #16 
    /*0001fa74*/ MOV         R1, R0 
    /*0001fa78*/ MOV         R0, R5 
    /*0001fa7c*/ BL          0x000000000001FA7C          @ devm_ioremap_resource [R_ARM_CALL: +0x0] 
    /*0001fa80*/ MOVW        R3, #0                      @ pVoReg [R_ARM_MOVW_ABS_NC: .bss+0x5f38] 
    /*0001fa84*/ MOVT        R3, #0                      @ pVoReg [R_ARM_MOVT_ABS: .bss+0x5f38] 
    /*0001fa88*/ CMN         R0, #4096                   @ 0x1000 
    /*0001fa8c*/ STR         R0, [R3] 
    /*0001fa90*/ POPHI       {R4, R5, R6, PC} 
    /*0001fa94*/ MOV         R0, R4 
    /*0001fa98*/ MOV         R1, #0 
    /*0001fa9c*/ BL          0x000000000001FA9C          @ osal_platform_get_irq [R_ARM_CALL: +0x0] 
    /*0001faa0*/ MOVW        R3, #0                      @ vou_irq [R_ARM_MOVW_ABS_NC: .data+0x14] 
    /*0001faa4*/ MOVT        R3, #0                      @ vou_irq [R_ARM_MOVT_ABS: .data+0x14] 
    /*0001faa8*/ CMP         R0, #0 
    /*0001faac*/ STR         R0, [R3] 
    /*0001fab0*/ BEQ         hi35xx_vo_probe_x1fac0
    hi35xx_vo_probe_x1fab4:
    /*0001fab4*/ BL          0x000000000001FAB4          @ VOU_ModInit [R_ARM_CALL: .text+0x39c0] 
    /*0001fab8*/ MOV         R0, #0 
    /*0001fabc*/ POP         {R4, R5, R6, PC} 
    hi35xx_vo_probe_x1fac0:
    /*0001fac0*/ MOV         R0, R5 
    /*0001fac4*/ MOVW        R1, #0                      @ .LC0 [R_ARM_MOVW_ABS_NC: .rodata.str1.4+0x8f3c] 
    /*0001fac8*/ MOVT        R1, #0                      @ .LC0 [R_ARM_MOVT_ABS: .rodata.str1.4+0x8f3c] 
    /*0001facc*/ BL          0x000000000001FACC          @ dev_err [R_ARM_CALL: +0x0] 
    /*0001fad0*/ B           hi35xx_vo_probe_x1fab4
FUNC_END hi35xx_vo_probe


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .init.text
@ Size: 0xc
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN hi35xx_vo_driver_init
    /*00000000*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0xc1c] 
    /*00000004*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0xc1c] 
    hi35xx_vo_driver_init_x8:
    /*00000008*/ B           hi35xx_vo_driver_init_x8    @ osal_platform_driver_register [R_ARM_JUMP24: +0x0] 
FUNC_END hi35xx_vo_driver_init


FUNC_BEGIN init_module
    /*00000000*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0xc1c] 
    /*00000004*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0xc1c] 
    init_module_x8:
    /*00000008*/ B           init_module_x8              @ osal_platform_driver_register [R_ARM_JUMP24: +0x0] 
FUNC_END init_module


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .exit.text
@ Size: 0xc
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN hi35xx_vo_driver_exit
    /*00000000*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0xc1c] 
    /*00000004*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0xc1c] 
    hi35xx_vo_driver_exit_x8:
    /*00000008*/ B           hi35xx_vo_driver_exit_x8    @ osal_platform_driver_unregister [R_ARM_JUMP24: +0x0] 
FUNC_END hi35xx_vo_driver_exit


FUNC_BEGIN cleanup_module
    /*00000000*/ MOVW        R0, #0                      @ .LANCHOR0 [R_ARM_MOVW_ABS_NC: .data+0xc1c] 
    /*00000004*/ MOVT        R0, #0                      @ .LANCHOR0 [R_ARM_MOVT_ABS: .data+0xc1c] 
    cleanup_module_x8:
    /*00000008*/ B           cleanup_module_x8           @ osal_platform_driver_unregister [R_ARM_JUMP24: +0x0] 
FUNC_END cleanup_module



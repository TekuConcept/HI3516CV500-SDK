@
@ -- FILES --
@

@ svprt_userproc.c


unsigned char data[0] = {
};

unsigned char bss[0];

unsigned char data.rel.local.g_stUprocParam[1116] = {
    /*0000*/ 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0010*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0020*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0030*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0040*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0050*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0060*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0070*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0080*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0090*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00a0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00b0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00c0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00d0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00e0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*00f0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0100*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0110*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0120*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0130*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0140*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0150*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0160*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0170*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0180*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0190*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*01a0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*01b0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*01c0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*01d0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*01e0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*01f0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0200*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0210*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0220*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0230*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0240*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0250*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0260*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0270*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0280*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0290*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*02a0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*02b0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*02c0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*02d0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*02e0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*02f0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0300*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0310*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0320*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0330*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0340*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0350*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0360*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0370*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0380*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0390*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*03a0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*03b0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*03c0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*03d0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*03e0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*03f0*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0400*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0410*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0420*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
    /*0430*/ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 
    /*0440*/ 0xbc, 0x00, 0x00, 0x00, 0x3c, 0x01, 0x00, 0x00, 0xbc, 0x01, 0x00, 0x00, 0x3c, 0x02, 0x00, 0x00, 
    /*0450*/ 0xbc, 0x02, 0x00, 0x00, 0x3c, 0x03, 0x00, 0x00, 0xbc, 0x03, 0x00, 0x00, 
};

unsigned char rel.data.rel.local.g_stUprocParam[64] = {
    /*0000*/ 0x3c, 0x04, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 
    /*0010*/ 0x44, 0x04, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x48, 0x04, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 
    /*0020*/ 0x4c, 0x04, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x50, 0x04, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 
    /*0030*/ 0x54, 0x04, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 0x58, 0x04, 0x00, 0x00, 0x02, 0x40, 0x00, 0x00, 
};

_RODATA_HI_PROC_PRINTF_STR1_4_0000: .ascii "<%d>Func:%s, Line:%d, userproc log buffer(size:%d) overflow.\n\n\0\0",
_RODATA_HI_PROC_PRINTF_STR1_4_0040: .ascii "<%d>Func:%s, Line:%d, format buff error.\n\n\0"


_RODATA_MPI_UPROC_ADDDIR_STR1_4_0000: .ascii "<%d>Func:%s, Line:%d, Invalid dir name!\n\n\0\0\0",
_RODATA_MPI_UPROC_ADDDIR_STR1_4_002c: .ascii "<%d>Func:%s, Line:%d, proc created dir %s fail.\n\n\0"


_RODATA_MPI_UPROC_ADDENTRY_STR1_4_0000: .ascii "<%d>Func:%s, Line:%d, Invalid param!\n\n\0\0",
_RODATA_MPI_UPROC_ADDENTRY_STR1_4_0028: .ascii "<%d>Func:%s, Line:%d, Invalid entry name!\n\n\0",
_RODATA_MPI_UPROC_ADDENTRY_STR1_4_0054: .ascii "<%d>Func:%s, Line:%d, Need one valid func at least!\n\n\0\0\0",
_RODATA_MPI_UPROC_ADDENTRY_STR1_4_008c: .ascii "<%d>Func:%s, Line:%d, copy entry name error!\n\n\0\0",
_RODATA_MPI_UPROC_ADDENTRY_STR1_4_00bc: .ascii "<%d>Func:%s, Line:%d, copy entry parent error!\n\n\0\0\0\0",
_RODATA_MPI_UPROC_ADDENTRY_STR1_4_00f0: .ascii "<%d>Func:%s, Line:%d, proc created entry %s fail:%d.\n\n\0"


_RODATA_MPI_UPROC_INIT_STR1_4_0000: .ascii "<%d>Func:%s, Line:%d, UPROC_LOCK error\n\n\0\0\0\0",
_RODATA_MPI_UPROC_INIT_STR1_4_002c: .ascii "/dev/hi_userproc\0\0\0\0",
_RODATA_MPI_UPROC_INIT_STR1_4_0040: .ascii "<%d>Func:%s, Line:%d, UPROC_UNLOCK error\n\n\0\0",
_RODATA_MPI_UPROC_INIT_STR1_4_006c: .ascii "<%d>Func:%s, Line:%d, Create userproc thread err!\n\n\0",
_RODATA_MPI_UPROC_INIT_STR1_4_00a0: .ascii ""


_RODATA_MPI_UPROC_THREAD_STR1_4_0000: .ascii "<%d>Func:%s, Line:%d, map usrproc log buffer failed.\n\n\0\0",
_RODATA_MPI_UPROC_THREAD_STR1_4_0038: .ascii "Hi_pTUproc\0\0",
_RODATA_MPI_UPROC_THREAD_STR1_4_0044: .ascii "__read\0\0",
_RODATA_MPI_UPROC_THREAD_STR1_4_004c: .ascii "<%d>Func:%s, Line:%d, proc print fail.\n\n\0"


_RODATA___FUNCTION___8066_0000: .ascii "HI_PROC_Printf\0"


_RODATA___FUNCTION___8072_0000: .ascii "MPI_UPROC_Init\0"


_RODATA___FUNCTION___8080_0000: .ascii "MPI_UPROC_DeInit\0"


_RODATA___FUNCTION___8087_0000: .ascii "MPI_UPROC_AddDir\0"


_RODATA___FUNCTION___8096_0000: .ascii "MPI_UPROC_RemoveDir\0",
_RODATA___FUNCTION___8096_0014: .ascii ""


_RODATA___FUNCTION___8106_0000: .ascii "MPI_UPROC_AddEntry\0"


_RODATA___FUNCTION___8116_0000: .ascii "MPI_UPROC_RemoveEntry\0"


_RODATA___FUNCTION___8137_0000: .ascii "MPI_UPROC_Thread\0"


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.MPI_UPROC_Thread
@ Size: 0x310
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN MPI_UPROC_Thread
    /*00000000*/ MOV         IP, #8192                   @ 0x2000 
    /*00000004*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, FP, LR} 
    /*00000008*/ VPUSH       {D8} 
    /*0000000c*/ SUB         IP, SP, IP 
    /*00000010*/ STR         R0, [IP, #3456]             @ 0xd80 
    /*00000014*/ LDR         R3, WORD_02d8               @ LDR         R3, [PC, #700]              @ 0x00000000000002d8 
    /*00000018*/ SUB         SP, SP, #596                @ 0x254 
    /*0000001c*/ LDR         R2, WORD_02dc               @ LDR         R2, [PC, #696]              @ 0x00000000000002dc 
    /*00000020*/ MOV         R0, #4096                   @ 0x1000 
    /*00000024*/ ADD         R3, PC, R3 
    /*00000028*/ VLDR        D16, [PC, #664]             @ 0x00000000000002c8 
    /*0000002c*/ LDR         R3, [R3, R2] 
    /*00000030*/ STR         R3, [SP, #8] 
    /*00000034*/ LDR         R3, [R3] 
    /*00000038*/ VSTR        D16, [SP, #16] 
    /*0000003c*/ STR         R3, [SP, #588]              @ 0x24c 
    /*00000040*/ BL          malloc
    /*00000044*/ STR         R0, [SP, #24] 
    /*00000048*/ CMP         R0, #0 
    /*0000004c*/ BEQ         MPI_UPROC_Thread_x298
    /*00000050*/ LDR         FP, WORD_02e0               @ LDR         FP, [PC, #648]              @ 0x00000000000002e0 
    /*00000054*/ MOV         R3, #0 
    /*00000058*/ LDR         R1, WORD_02e4               @ LDR         R1, [PC, #644]              @ 0x00000000000002e4 
    /*0000005c*/ MOV         R2, R3 
    /*00000060*/ ADD         FP, PC, FP 
    /*00000064*/ MOV         R0, #15 
    /*00000068*/ STR         R3, [SP] 
    /*0000006c*/ ADD         R8, FP, #1072               @ 0x430 
    /*00000070*/ ADD         R1, PC, R1 
    /*00000074*/ MOVW        R7, #261                    @ 0x105 
    /*00000078*/ MOVT        R7, #33316                  @ 0x8224 
    /*0000007c*/ MOVW        SL, #263                    @ 0x107 
    /*00000080*/ MOVT        SL, #16396                  @ 0x400c 
    /*00000084*/ MOVW        R9, #262                    @ 0x106 
    /*00000088*/ MOVT        R9, #16396                  @ 0x400c 
    /*0000008c*/ BL          prctl
    /*00000090*/ STR         FP, [SP, #12] 
    /*00000094*/ ADD         R8, R8, #12 
    /*00000098*/ VLDR        D8, [PC, #560]              @ 0x00000000000002d0 
    /*0000009c*/ B           MPI_UPROC_Thread_xbc
    MPI_UPROC_Thread_xa0:
    /*000000a0*/ LDR         R0, WORD_02e8               @ LDR         R0, [PC, #576]              @ 0x00000000000002e8 
    /*000000a4*/ ADD         R0, PC, R0 
    /*000000a8*/ ADD         R0, R0, #36                 @ 0x24 
    /*000000ac*/ BL          pthread_mutex_unlock
    /*000000b0*/ MOV         R1, #0 
    /*000000b4*/ ADD         R0, SP, #16 
    /*000000b8*/ BL          nanosleep
    MPI_UPROC_Thread_xbc:
    /*000000bc*/ LDR         R4, WORD_02ec               @ LDR         R4, [PC, #552]              @ 0x00000000000002ec 
    /*000000c0*/ ADD         R4, PC, R4 
    /*000000c4*/ LDR         R5, [R4, #4] 
    /*000000c8*/ CMP         R5, #0 
    /*000000cc*/ BNE         MPI_UPROC_Thread_x26c
    /*000000d0*/ ADD         R0, R4, #36                 @ 0x24 
    /*000000d4*/ BL          pthread_mutex_lock
    /*000000d8*/ MOV         R3, #264                    @ 0x108 
    /*000000dc*/ MOV         R2, R5 
    /*000000e0*/ ADD         R5, SP, #40                 @ 0x28 
    /*000000e4*/ MOV         R1, R3 
    /*000000e8*/ MOV         R0, R5 
    /*000000ec*/ BL          memset_s
    /*000000f0*/ LDR         R0, [R4] 
    /*000000f4*/ MOV         R2, R5 
    /*000000f8*/ MOV         R1, R7 
    /*000000fc*/ BL          ioctl
    /*00000100*/ SUBS        R6, R0, #0 
    /*00000104*/ BNE         MPI_UPROC_Thread_xa0
    /*00000108*/ LDRB        R3, [SP, #48]               @ 0x30 
    /*0000010c*/ CMP         R3, #0 
    /*00000110*/ BEQ         MPI_UPROC_Thread_xa0
    /*00000114*/ LDR         R0, [SP, #24] 
    /*00000118*/ ADD         IP, SP, #28 
    /*0000011c*/ MOV         R3, #4096                   @ 0x1000 
    /*00000120*/ MOV         R2, R6 
    /*00000124*/ MOV         R1, R3 
    /*00000128*/ ADD         R5, SP, #48                 @ 0x30 
    /*0000012c*/ VST1.32     {D8}, [IP] 
    /*00000130*/ BL          memset_s
    /*00000134*/ LDR         R0, WORD_02f0               @ LDR         R0, [PC, #436]              @ 0x00000000000002f0 
    /*00000138*/ MOV         R1, R5 
    /*0000013c*/ ADD         R0, PC, R0 
    /*00000140*/ BL          strcmp
    /*00000144*/ CMP         R0, #0 
    /*00000148*/ BNE         MPI_UPROC_Thread_x198
    /*0000014c*/ LDR         R3, [SP, #560]              @ 0x230 
    /*00000150*/ ADD         R5, SP, #24 
    /*00000154*/ LDR         R1, [SP, #568]              @ 0x238 
    /*00000158*/ MOV         R0, R5 
    /*0000015c*/ BLX         R3 
    /*00000160*/ LDR         R0, [R4] 
    /*00000164*/ MOV         R2, R5 
    /*00000168*/ MOV         R1, R9 
    /*0000016c*/ BL          ioctl
    /*00000170*/ CMP         R0, #0 
    /*00000174*/ BEQ         MPI_UPROC_Thread_xa0
    /*00000178*/ LDR         R2, WORD_02f4               @ LDR         R2, [PC, #372]              @ 0x00000000000002f4 
    /*0000017c*/ MOVW        R3, #487                    @ 0x1e7 
    /*00000180*/ LDR         R0, WORD_02f8               @ LDR         R0, [PC, #368]              @ 0x00000000000002f8 
    /*00000184*/ MOV         R1, #1 
    /*00000188*/ ADD         R2, PC, R2 
    /*0000018c*/ ADD         R0, PC, R0 
    /*00000190*/ BL          printf
    /*00000194*/ B           MPI_UPROC_Thread_xa0
    MPI_UPROC_Thread_x198:
    /*00000198*/ LDR         FP, [SP, #564]              @ 0x234 
    /*0000019c*/ MOV         R3, #1024                   @ 0x400 
    /*000001a0*/ MOV         R1, R3 
    /*000001a4*/ ADD         R0, R4, #60                 @ 0x3c 
    /*000001a8*/ MOV         R2, R6 
    /*000001ac*/ BL          memset_s
    /*000001b0*/ LDRB        R3, [SP, #48]               @ 0x30 
    /*000001b4*/ CMP         R3, #0 
    /*000001b8*/ BEQ         MPI_UPROC_Thread_x2b8
    /*000001bc*/ LDR         IP, WORD_02fc               @ LDR         IP, [PC, #312]              @ 0x00000000000002fc 
    /*000001c0*/ MOV         R1, R6 
    /*000001c4*/ MOV         R2, R6 
    /*000001c8*/ ADD         IP, PC, IP 
    /*000001cc*/ B           MPI_UPROC_Thread_x1f0
    MPI_UPROC_Thread_x1d0:
    /*000001d0*/ CMP         R2, #126                    @ 0x7e 
    /*000001d4*/ ADDLS       R0, IP, R1, LSL #7 
    /*000001d8*/ ADDLS       R0, R0, R2 
    /*000001dc*/ ADDLS       R2, R2, #1 
    /*000001e0*/ STRBLS      R3, [R0, #60]               @ 0x3c 
    /*000001e4*/ LDRB        R3, [R5, #1]! 
    /*000001e8*/ CMP         R3, #0 
    /*000001ec*/ BEQ         MPI_UPROC_Thread_x218
    MPI_UPROC_Thread_x1f0:
    /*000001f0*/ CMP         R3, #32 
    /*000001f4*/ BNE         MPI_UPROC_Thread_x1d0
    /*000001f8*/ CMP         R2, #0 
    /*000001fc*/ ADDNE       R1, R1, #1 
    /*00000200*/ CMP         R1, #7 
    /*00000204*/ BHI         MPI_UPROC_Thread_x21c
    /*00000208*/ LDRB        R3, [R5, #1]! 
    /*0000020c*/ MOV         R2, #0 
    /*00000210*/ CMP         R3, #0 
    /*00000214*/ BNE         MPI_UPROC_Thread_x1f0
    MPI_UPROC_Thread_x218:
    /*00000218*/ ADD         R1, R1, #1 
    MPI_UPROC_Thread_x21c:
    /*0000021c*/ LDR         R3, [SP, #568]              @ 0x238 
    /*00000220*/ ADD         R4, SP, #24 
    /*00000224*/ MOV         R2, R8 
    /*00000228*/ MOV         R0, R4 
    /*0000022c*/ BLX         FP 
    /*00000230*/ LDR         R3, [SP, #12] 
    /*00000234*/ MOV         R2, R4 
    /*00000238*/ MOV         R1, SL 
    /*0000023c*/ LDR         R0, [R3] 
    /*00000240*/ BL          ioctl
    /*00000244*/ CMP         R0, #0 
    /*00000248*/ BEQ         MPI_UPROC_Thread_xa0
    /*0000024c*/ LDR         R2, WORD_0300               @ LDR         R2, [PC, #172]              @ 0x0000000000000300 
    /*00000250*/ MOVW        R3, #499                    @ 0x1f3 
    /*00000254*/ LDR         R0, WORD_0304               @ LDR         R0, [PC, #168]              @ 0x0000000000000304 
    /*00000258*/ MOV         R1, #1 
    /*0000025c*/ ADD         R2, PC, R2 
    /*00000260*/ ADD         R0, PC, R0 
    /*00000264*/ BL          printf
    /*00000268*/ B           MPI_UPROC_Thread_xa0
    MPI_UPROC_Thread_x26c:
    /*0000026c*/ LDR         R0, [SP, #24] 
    /*00000270*/ BL          free
    MPI_UPROC_Thread_x274:
    /*00000274*/ LDR         R3, [SP, #8] 
    /*00000278*/ MOV         R0, #0 
    /*0000027c*/ LDR         R2, [SP, #588]              @ 0x24c 
    /*00000280*/ LDR         R3, [R3] 
    /*00000284*/ CMP         R2, R3 
    /*00000288*/ BNE         MPI_UPROC_Thread_x2c0
    /*0000028c*/ ADD         SP, SP, #596                @ 0x254 
    /*00000290*/ VPOP        {D8} 
    /*00000294*/ POP         {R4, R5, R6, R7, R8, R9, SL, FP, PC} 
    MPI_UPROC_Thread_x298:
    /*00000298*/ LDR         R2, WORD_0308               @ LDR         R2, [PC, #104]              @ 0x0000000000000308 
    /*0000029c*/ MOV         R3, #444                    @ 0x1bc 
    /*000002a0*/ LDR         R0, WORD_030c               @ LDR         R0, [PC, #100]              @ 0x000000000000030c 
    /*000002a4*/ MOV         R1, #1 
    /*000002a8*/ ADD         R2, PC, R2 
    /*000002ac*/ ADD         R0, PC, R0 
    /*000002b0*/ BL          printf
    /*000002b4*/ B           MPI_UPROC_Thread_x274
    MPI_UPROC_Thread_x2b8:
    /*000002b8*/ MOV         R1, #1 
    /*000002bc*/ B           MPI_UPROC_Thread_x21c
    MPI_UPROC_Thread_x2c0:
    /*000002c0*/ BL          __stack_chk_fail
    /*000002c4*/ NOP         {0} 
    /*000002c8*/ ANDEQ       R0, R0, R0 
    /*000002cc*/ ADDSEQ      R9, R8, R0, LSL #13 
    /*000002d0*/ ANDEQ       R1, R0, R0 
    /*000002d4*/ ANDEQ       R0, R0, R0 
    /*000002d8*/ WORD_02d8: .word 0x000002ac
    /*000002dc*/ WORD_02dc: .word 0x00000000
    /*000002e0*/ WORD_02e0: .word 0x00000278
    /*000002e4*/ WORD_02e4: .word 0x0000026c
    /*000002e8*/ WORD_02e8: .word 0x0000023c
    /*000002ec*/ WORD_02ec: .word 0x00000224
    /*000002f0*/ WORD_02f0: .word 0x000001ac
    /*000002f4*/ WORD_02f4: .word 0x00000164
    /*000002f8*/ WORD_02f8: .word 0x00000164
    /*000002fc*/ WORD_02fc: .word 0x0000012c
    /*00000300*/ WORD_0300: .word 0x0000009c
    /*00000304*/ WORD_0304: .word 0x0000009c
    /*00000308*/ WORD_0308: .word 0x00000058
    /*0000030c*/ WORD_030c: .word 0x00000058
FUNC_END MPI_UPROC_Thread


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.HI_PROC_Printf
@ Size: 0xf8
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN HI_PROC_Printf
    /*00000000*/ MOV         IP, #8192                   @ 0x2000 
    /*00000004*/ PUSH        {R1, R2, R3} 
    /*00000008*/ PUSH        {R4, R5, R6, LR} 
    /*0000000c*/ SUB         IP, SP, IP 
    /*00000010*/ STR         R0, [IP, #4060]             @ 0xfdc 
    /*00000014*/ SUB         SP, SP, #20 
    /*00000018*/ SUBS        R4, R0, #0 
    /*0000001c*/ LDR         R3, [SP, #36]               @ 0x24 
    /*00000020*/ BEQ         HI_PROC_Printf_xc0
    /*00000024*/ LDR         R1, [R4] 
    /*00000028*/ CMP         R3, #0 
    /*0000002c*/ CMPNE       R1, #0 
    /*00000030*/ MOVEQ       R6, #1 
    /*00000034*/ MOVNE       R6, #0 
    /*00000038*/ BEQ         HI_PROC_Printf_xc0
    /*0000003c*/ LDR         R2, [R4, #4] 
    /*00000040*/ LDR         R0, [R4, #8] 
    /*00000044*/ CMP         R0, R2 
    /*00000048*/ BCS         HI_PROC_Printf_x98
    /*0000004c*/ SUB         R2, R2, R0 
    /*00000050*/ ADD         IP, SP, #40                 @ 0x28 
    /*00000054*/ ADD         R0, R1, R0 
    /*00000058*/ MOV         R1, R2 
    /*0000005c*/ STR         IP, [SP] 
    /*00000060*/ STR         IP, [SP, #12] 
    /*00000064*/ BL          vsnprintf_s
    /*00000068*/ CMN         R0, #1 
    /*0000006c*/ MOV         R5, R0 
    /*00000070*/ BEQ         HI_PROC_Printf_xc8
    /*00000074*/ LDR         R3, [R4, #8] 
    /*00000078*/ MOV         R5, R6 
    /*0000007c*/ ADD         R3, R3, R0 
    /*00000080*/ STR         R3, [R4, #8] 
    HI_PROC_Printf_x84:
    /*00000084*/ MOV         R0, R5 
    /*00000088*/ ADD         SP, SP, #20 
    /*0000008c*/ POP         {R4, R5, R6, LR} 
    /*00000090*/ ADD         SP, SP, #12 
    /*00000094*/ BX          LR 
    HI_PROC_Printf_x98:
    /*00000098*/ STR         R2, [SP] 
    /*0000009c*/ MOV         R3, #129                    @ 0x81 
    /*000000a0*/ LDR         R2, WORD_00e8               @ LDR         R2, [PC, #64]               @ 0x00000000000000e8 
    /*000000a4*/ MOV         R1, #1 
    /*000000a8*/ LDR         R0, WORD_00ec               @ LDR         R0, [PC, #60]               @ 0x00000000000000ec 
    /*000000ac*/ MVN         R5, #0 
    /*000000b0*/ ADD         R2, PC, R2 
    /*000000b4*/ ADD         R0, PC, R0 
    /*000000b8*/ BL          printf
    /*000000bc*/ B           HI_PROC_Printf_x84
    HI_PROC_Printf_xc0:
    /*000000c0*/ MVN         R5, #0 
    /*000000c4*/ B           HI_PROC_Printf_x84
    HI_PROC_Printf_xc8:
    /*000000c8*/ LDR         R2, WORD_00f0               @ LDR         R2, [PC, #32]               @ 0x00000000000000f0 
    /*000000cc*/ MOV         R3, #142                    @ 0x8e 
    /*000000d0*/ LDR         R0, WORD_00f4               @ LDR         R0, [PC, #28]               @ 0x00000000000000f4 
    /*000000d4*/ MOV         R1, #1 
    /*000000d8*/ ADD         R2, PC, R2 
    /*000000dc*/ ADD         R0, PC, R0 
    /*000000e0*/ BL          printf
    /*000000e4*/ B           HI_PROC_Printf_x84
    /*000000e8*/ WORD_00e8: .word 0x00000030
    /*000000ec*/ WORD_00ec: .word 0x00000030
    /*000000f0*/ WORD_00f0: .word 0x00000010
    /*000000f4*/ WORD_00f4: .word 0x00000010
FUNC_END HI_PROC_Printf


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.MPI_UPROC_Init
@ Size: 0x1a0
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN MPI_UPROC_Init
    /*00000000*/ MOV         IP, #8192                   @ 0x2000 
    /*00000004*/ PUSH        {R4, R5, R6, LR} 
    /*00000008*/ SUB         IP, SP, IP 
    /*0000000c*/ STR         R0, [IP, #4080]             @ 0xff0 
    /*00000010*/ LDR         R0, WORD_0164               @ LDR         R0, [PC, #332]              @ 0x0000000000000164 
    /*00000014*/ ADD         R0, PC, R0 
    /*00000018*/ ADD         R0, R0, #12 
    /*0000001c*/ BL          pthread_mutex_lock
    /*00000020*/ CMP         R0, #0 
    /*00000024*/ BNE         MPI_UPROC_Init_x7c
    MPI_UPROC_Init_x28:
    /*00000028*/ LDR         R5, WORD_0168               @ LDR         R5, [PC, #312]              @ 0x0000000000000168 
    /*0000002c*/ ADD         R5, PC, R5 
    /*00000030*/ LDR         R4, [R5] 
    /*00000034*/ CMN         R4, #1 
    /*00000038*/ BEQ         MPI_UPROC_Init_x9c
    MPI_UPROC_Init_x3c:
    /*0000003c*/ LDR         R0, WORD_016c               @ LDR         R0, [PC, #296]              @ 0x000000000000016c 
    /*00000040*/ ADD         R0, PC, R0 
    /*00000044*/ ADD         R0, R0, #12 
    /*00000048*/ BL          pthread_mutex_unlock
    /*0000004c*/ SUBS        R4, R0, #0 
    /*00000050*/ BEQ         MPI_UPROC_Init_x74
    /*00000054*/ LDR         R2, WORD_0170               @ LDR         R2, [PC, #276]              @ 0x0000000000000170 
    /*00000058*/ MOV         R3, #179                    @ 0xb3 
    /*0000005c*/ LDR         R0, WORD_0174               @ LDR         R0, [PC, #272]              @ 0x0000000000000174 
    /*00000060*/ MOV         R1, #1 
    /*00000064*/ ADD         R2, PC, R2 
    /*00000068*/ MOV         R4, #0 
    /*0000006c*/ ADD         R0, PC, R0 
    /*00000070*/ BL          printf
    MPI_UPROC_Init_x74:
    /*00000074*/ MOV         R0, R4 
    /*00000078*/ POP         {R4, R5, R6, PC} 
    MPI_UPROC_Init_x7c:
    /*0000007c*/ LDR         R2, WORD_0178               @ LDR         R2, [PC, #244]              @ 0x0000000000000178 
    /*00000080*/ MOV         R3, #155                    @ 0x9b 
    /*00000084*/ LDR         R0, WORD_017c               @ LDR         R0, [PC, #240]              @ 0x000000000000017c 
    /*00000088*/ MOV         R1, #1 
    /*0000008c*/ ADD         R2, PC, R2 
    /*00000090*/ ADD         R0, PC, R0 
    /*00000094*/ BL          printf
    /*00000098*/ B           MPI_UPROC_Init_x28
    MPI_UPROC_Init_x9c:
    /*0000009c*/ LDR         R0, WORD_0180               @ LDR         R0, [PC, #220]              @ 0x0000000000000180 
    /*000000a0*/ MOV         R1, #2 
    /*000000a4*/ ADD         R0, PC, R0 
    /*000000a8*/ BL          open
    /*000000ac*/ STR         R0, [R5] 
    /*000000b0*/ CMP         R0, #0 
    /*000000b4*/ BLE         MPI_UPROC_Init_x134
    /*000000b8*/ LDR         R2, WORD_0184               @ LDR         R2, [PC, #196]              @ 0x0000000000000184 
    /*000000bc*/ MOV         R3, #0 
    /*000000c0*/ STR         R3, [R5, #4] 
    /*000000c4*/ MOV         R1, R3 
    /*000000c8*/ ADD         R2, PC, R2 
    /*000000cc*/ ADD         R0, R5, #8 
    /*000000d0*/ BL          pthread_create
    /*000000d4*/ CMP         R0, #0 
    /*000000d8*/ BEQ         MPI_UPROC_Init_x3c
    /*000000dc*/ LDR         R0, [R5] 
    /*000000e0*/ BL          close
    /*000000e4*/ MOV         R0, R5 
    /*000000e8*/ STR         R4, [R0], #12 
    /*000000ec*/ BL          pthread_mutex_unlock
    /*000000f0*/ CMP         R0, #0 
    /*000000f4*/ BEQ         MPI_UPROC_Init_x114
    /*000000f8*/ LDR         R2, WORD_0188               @ LDR         R2, [PC, #136]              @ 0x0000000000000188 
    /*000000fc*/ MOV         R3, #173                    @ 0xad 
    /*00000100*/ LDR         R0, WORD_018c               @ LDR         R0, [PC, #132]              @ 0x000000000000018c 
    /*00000104*/ MOV         R1, #1 
    /*00000108*/ ADD         R2, PC, R2 
    /*0000010c*/ ADD         R0, PC, R0 
    /*00000110*/ BL          printf
    MPI_UPROC_Init_x114:
    /*00000114*/ LDR         R2, WORD_0190               @ LDR         R2, [PC, #116]              @ 0x0000000000000190 
    /*00000118*/ MOV         R3, #174                    @ 0xae 
    /*0000011c*/ LDR         R0, WORD_0194               @ LDR         R0, [PC, #112]              @ 0x0000000000000194 
    /*00000120*/ MOV         R1, #0 
    /*00000124*/ ADD         R2, PC, R2 
    /*00000128*/ ADD         R0, PC, R0 
    /*0000012c*/ BL          printf
    /*00000130*/ B           MPI_UPROC_Init_x74
    MPI_UPROC_Init_x134:
    /*00000134*/ ADD         R0, R5, #12 
    /*00000138*/ BL          pthread_mutex_unlock
    /*0000013c*/ CMP         R0, #0 
    /*00000140*/ BEQ         MPI_UPROC_Init_x74
    /*00000144*/ LDR         R2, WORD_0198               @ LDR         R2, [PC, #76]               @ 0x0000000000000198 
    /*00000148*/ MOV         R3, #162                    @ 0xa2 
    /*0000014c*/ LDR         R0, WORD_019c               @ LDR         R0, [PC, #72]               @ 0x000000000000019c 
    /*00000150*/ MOV         R1, #1 
    /*00000154*/ ADD         R2, PC, R2 
    /*00000158*/ ADD         R0, PC, R0 
    /*0000015c*/ BL          printf
    /*00000160*/ B           MPI_UPROC_Init_x74
    /*00000164*/ WORD_0164: .word 0x00000148
    /*00000168*/ WORD_0168: .word 0x00000134
    /*0000016c*/ WORD_016c: .word 0x00000124
    /*00000170*/ WORD_0170: .word 0x00000104
    /*00000174*/ WORD_0174: .word 0x00000100
    /*00000178*/ WORD_0178: .word 0x000000e4
    /*0000017c*/ WORD_017c: .word 0x000000e4
    /*00000180*/ WORD_0180: .word 0x000000d4
    /*00000184*/ WORD_0184: .word 0x000000b4
    /*00000188*/ WORD_0188: .word 0x00000078
    /*0000018c*/ WORD_018c: .word 0x00000078
    /*00000190*/ WORD_0190: .word 0x00000064
    /*00000194*/ WORD_0194: .word 0x00000064
    /*00000198*/ WORD_0198: .word 0x0000003c
    /*0000019c*/ WORD_019c: .word 0x0000003c
FUNC_END MPI_UPROC_Init


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.MPI_UPROC_DeInit
@ Size: 0xd8
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN MPI_UPROC_DeInit
    /*00000000*/ MOV         IP, #8192                   @ 0x2000 
    /*00000004*/ PUSH        {R4, LR} 
    /*00000008*/ SUB         IP, SP, IP 
    /*0000000c*/ STR         R0, [IP, #4088]             @ 0xff8 
    /*00000010*/ LDR         R0, WORD_00bc               @ LDR         R0, [PC, #164]              @ 0x00000000000000bc 
    /*00000014*/ ADD         R0, PC, R0 
    /*00000018*/ ADD         R0, R0, #12 
    /*0000001c*/ BL          pthread_mutex_lock
    /*00000020*/ CMP         R0, #0 
    /*00000024*/ BNE         MPI_UPROC_DeInit_x9c
    MPI_UPROC_DeInit_x28:
    /*00000028*/ LDR         R4, WORD_00c0               @ LDR         R4, [PC, #144]              @ 0x00000000000000c0 
    /*0000002c*/ ADD         R4, PC, R4 
    /*00000030*/ LDR         R3, [R4] 
    /*00000034*/ CMN         R3, #1 
    /*00000038*/ BEQ         MPI_UPROC_DeInit_x60
    /*0000003c*/ LDR         R0, [R4, #8] 
    /*00000040*/ MOV         R3, #1 
    /*00000044*/ STR         R3, [R4, #4] 
    /*00000048*/ MOV         R1, #0 
    /*0000004c*/ BL          pthread_join
    /*00000050*/ LDR         R0, [R4] 
    /*00000054*/ BL          close
    /*00000058*/ MVN         R3, #0 
    /*0000005c*/ STR         R3, [R4] 
    MPI_UPROC_DeInit_x60:
    /*00000060*/ LDR         R0, WORD_00c4               @ LDR         R0, [PC, #92]               @ 0x00000000000000c4 
    /*00000064*/ ADD         R0, PC, R0 
    /*00000068*/ ADD         R0, R0, #12 
    /*0000006c*/ BL          pthread_mutex_unlock
    /*00000070*/ CMP         R0, #0 
    /*00000074*/ BEQ         MPI_UPROC_DeInit_x94
    /*00000078*/ LDR         R2, WORD_00c8               @ LDR         R2, [PC, #72]               @ 0x00000000000000c8 
    /*0000007c*/ MOV         R3, #197                    @ 0xc5 
    /*00000080*/ LDR         R0, WORD_00cc               @ LDR         R0, [PC, #68]               @ 0x00000000000000cc 
    /*00000084*/ MOV         R1, #1 
    /*00000088*/ ADD         R2, PC, R2 
    /*0000008c*/ ADD         R0, PC, R0 
    /*00000090*/ BL          printf
    MPI_UPROC_DeInit_x94:
    /*00000094*/ MOV         R0, #0 
    /*00000098*/ POP         {R4, PC} 
    MPI_UPROC_DeInit_x9c:
    /*0000009c*/ LDR         R2, WORD_00d0               @ LDR         R2, [PC, #44]               @ 0x00000000000000d0 
    /*000000a0*/ MOV         R3, #186                    @ 0xba 
    /*000000a4*/ LDR         R0, WORD_00d4               @ LDR         R0, [PC, #40]               @ 0x00000000000000d4 
    /*000000a8*/ MOV         R1, #1 
    /*000000ac*/ ADD         R2, PC, R2 
    /*000000b0*/ ADD         R0, PC, R0 
    /*000000b4*/ BL          printf
    /*000000b8*/ B           MPI_UPROC_DeInit_x28
    /*000000bc*/ WORD_00bc: .word 0x000000a0
    /*000000c0*/ WORD_00c0: .word 0x0000008c
    /*000000c4*/ WORD_00c4: .word 0x00000058
    /*000000c8*/ WORD_00c8: .word 0x00000038
    /*000000cc*/ WORD_00cc: .word 0x00000038
    /*000000d0*/ WORD_00d0: .word 0x0000001c
    /*000000d4*/ WORD_00d4: .word 0x0000001c
FUNC_END MPI_UPROC_DeInit


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.MPI_UPROC_AddDir
@ Size: 0x1ec
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN MPI_UPROC_AddDir
    /*00000000*/ MOV         IP, #8192                   @ 0x2000 
    /*00000004*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00000008*/ SUB         IP, SP, IP 
    /*0000000c*/ STR         R0, [IP, #3928]             @ 0xf58 
    /*00000010*/ LDR         R3, WORD_01b0               @ LDR         R3, [PC, #408]              @ 0x00000000000001b0 
    /*00000014*/ SUB         SP, SP, #148                @ 0x94 
    /*00000018*/ LDR         R2, WORD_01b4               @ LDR         R2, [PC, #404]              @ 0x00000000000001b4 
    /*0000001c*/ ADD         R6, SP, #12 
    /*00000020*/ ADD         R3, PC, R3 
    /*00000024*/ MOV         R4, R0 
    /*00000028*/ MOV         R0, R6 
    /*0000002c*/ LDR         R7, [R3, R2] 
    /*00000030*/ MOV         R2, #128                    @ 0x80 
    /*00000034*/ LDR         R1, [R7] 
    /*00000038*/ STR         R1, [SP, #140]              @ 0x8c 
    /*0000003c*/ MOV         R1, #0 
    /*00000040*/ BL          memset
    /*00000044*/ CMP         R4, #0 
    /*00000048*/ BEQ         MPI_UPROC_AddDir_x188
    /*0000004c*/ LDRB        R3, [R4] 
    /*00000050*/ CMP         R3, #0 
    /*00000054*/ BEQ         MPI_UPROC_AddDir_x188
    /*00000058*/ MOV         R0, R4 
    /*0000005c*/ BL          strlen
    /*00000060*/ CMP         R0, #127                    @ 0x7f 
    /*00000064*/ BHI         MPI_UPROC_AddDir_x188
    /*00000068*/ LDR         R0, WORD_01b8               @ LDR         R0, [PC, #328]              @ 0x00000000000001b8 
    /*0000006c*/ ADD         R0, PC, R0 
    /*00000070*/ ADD         R0, R0, #12 
    /*00000074*/ BL          pthread_mutex_lock
    /*00000078*/ CMP         R0, #0 
    /*0000007c*/ BNE         MPI_UPROC_AddDir_x11c
    MPI_UPROC_AddDir_x80:
    /*00000080*/ LDR         R0, WORD_01bc               @ LDR         R0, [PC, #308]              @ 0x00000000000001bc 
    /*00000084*/ ADD         R0, PC, R0 
    /*00000088*/ ADD         R0, R0, #12 
    /*0000008c*/ LDR         R5, [R0, #-12] 
    /*00000090*/ CMN         R5, #1 
    /*00000094*/ BEQ         MPI_UPROC_AddDir_x13c
    /*00000098*/ BL          pthread_mutex_unlock
    /*0000009c*/ CMP         R0, #0 
    /*000000a0*/ BNE         MPI_UPROC_AddDir_x168
    MPI_UPROC_AddDir_xa4:
    /*000000a4*/ MOV         R3, #127                    @ 0x7f 
    /*000000a8*/ MOV         R2, R4 
    /*000000ac*/ MOV         R1, #128                    @ 0x80 
    /*000000b0*/ MOV         R0, R6 
    /*000000b4*/ BL          memcpy_s
    /*000000b8*/ LDR         R3, WORD_01c0               @ LDR         R3, [PC, #256]              @ 0x00000000000001c0 
    /*000000bc*/ MOVW        R1, #259                    @ 0x103 
    /*000000c0*/ MOVT        R1, #16512                  @ 0x4080 
    /*000000c4*/ MOV         R2, R6 
    /*000000c8*/ ADD         R3, PC, R3 
    /*000000cc*/ LDR         R0, [R3] 
    /*000000d0*/ BL          ioctl
    /*000000d4*/ SUBS        R5, R0, #0 
    /*000000d8*/ BNE         MPI_UPROC_AddDir_xf8
    MPI_UPROC_AddDir_xdc:
    /*000000dc*/ LDR         R2, [SP, #140]              @ 0x8c 
    /*000000e0*/ MOV         R0, R5 
    /*000000e4*/ LDR         R3, [R7] 
    /*000000e8*/ CMP         R2, R3 
    /*000000ec*/ BNE         MPI_UPROC_AddDir_x1ac
    /*000000f0*/ ADD         SP, SP, #148                @ 0x94 
    /*000000f4*/ POP         {R4, R5, R6, R7, PC} 
    MPI_UPROC_AddDir_xf8:
    /*000000f8*/ LDR         R2, WORD_01c4               @ LDR         R2, [PC, #196]              @ 0x00000000000001c4 
    /*000000fc*/ MOV         R3, #222                    @ 0xde 
    /*00000100*/ LDR         R0, WORD_01c8               @ LDR         R0, [PC, #192]              @ 0x00000000000001c8 
    /*00000104*/ MOV         R1, #1 
    /*00000108*/ STR         R4, [SP] 
    /*0000010c*/ ADD         R2, PC, R2 
    /*00000110*/ ADD         R0, PC, R0 
    /*00000114*/ BL          printf
    /*00000118*/ B           MPI_UPROC_AddDir_xdc
    MPI_UPROC_AddDir_x11c:
    /*0000011c*/ LDR         R2, WORD_01cc               @ LDR         R2, [PC, #168]              @ 0x00000000000001cc 
    /*00000120*/ MOV         R3, #214                    @ 0xd6 
    /*00000124*/ LDR         R0, WORD_01d0               @ LDR         R0, [PC, #164]              @ 0x00000000000001d0 
    /*00000128*/ MOV         R1, #1 
    /*0000012c*/ ADD         R2, PC, R2 
    /*00000130*/ ADD         R0, PC, R0 
    /*00000134*/ BL          printf
    /*00000138*/ B           MPI_UPROC_AddDir_x80
    MPI_UPROC_AddDir_x13c:
    /*0000013c*/ BL          pthread_mutex_unlock
    /*00000140*/ CMP         R0, #0 
    /*00000144*/ BEQ         MPI_UPROC_AddDir_xdc
    /*00000148*/ LDR         R2, WORD_01d4               @ LDR         R2, [PC, #132]              @ 0x00000000000001d4 
    /*0000014c*/ MOV         R3, #214                    @ 0xd6 
    /*00000150*/ LDR         R0, WORD_01d8               @ LDR         R0, [PC, #128]              @ 0x00000000000001d8 
    /*00000154*/ MOV         R1, #1 
    /*00000158*/ ADD         R2, PC, R2 
    /*0000015c*/ ADD         R0, PC, R0 
    /*00000160*/ BL          printf
    /*00000164*/ B           MPI_UPROC_AddDir_xdc
    MPI_UPROC_AddDir_x168:
    /*00000168*/ LDR         R2, WORD_01dc               @ LDR         R2, [PC, #108]              @ 0x00000000000001dc 
    /*0000016c*/ MOV         R3, #214                    @ 0xd6 
    /*00000170*/ LDR         R0, WORD_01e0               @ LDR         R0, [PC, #104]              @ 0x00000000000001e0 
    /*00000174*/ MOV         R1, #1 
    /*00000178*/ ADD         R2, PC, R2 
    /*0000017c*/ ADD         R0, PC, R0 
    /*00000180*/ BL          printf
    /*00000184*/ B           MPI_UPROC_AddDir_xa4
    MPI_UPROC_AddDir_x188:
    /*00000188*/ LDR         R2, WORD_01e4               @ LDR         R2, [PC, #84]               @ 0x00000000000001e4 
    /*0000018c*/ MOV         R3, #210                    @ 0xd2 
    /*00000190*/ LDR         R0, WORD_01e8               @ LDR         R0, [PC, #80]               @ 0x00000000000001e8 
    /*00000194*/ MOV         R1, #1 
    /*00000198*/ ADD         R2, PC, R2 
    /*0000019c*/ MVN         R5, #0 
    /*000001a0*/ ADD         R0, PC, R0 
    /*000001a4*/ BL          printf
    /*000001a8*/ B           MPI_UPROC_AddDir_xdc
    MPI_UPROC_AddDir_x1ac:
    /*000001ac*/ BL          __stack_chk_fail
    /*000001b0*/ WORD_01b0: .word 0x00000188
    /*000001b4*/ WORD_01b4: .word 0x00000000
    /*000001b8*/ WORD_01b8: .word 0x00000144
    /*000001bc*/ WORD_01bc: .word 0x00000130
    /*000001c0*/ WORD_01c0: .word 0x000000f0
    /*000001c4*/ WORD_01c4: .word 0x000000b0
    /*000001c8*/ WORD_01c8: .word 0x000000b0
    /*000001cc*/ WORD_01cc: .word 0x00000098
    /*000001d0*/ WORD_01d0: .word 0x00000098
    /*000001d4*/ WORD_01d4: .word 0x00000074
    /*000001d8*/ WORD_01d8: .word 0x00000074
    /*000001dc*/ WORD_01dc: .word 0x0000005c
    /*000001e0*/ WORD_01e0: .word 0x0000005c
    /*000001e4*/ WORD_01e4: .word 0x00000044
    /*000001e8*/ WORD_01e8: .word 0x00000040
FUNC_END MPI_UPROC_AddDir


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.MPI_UPROC_RemoveDir
@ Size: 0x1bc
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN MPI_UPROC_RemoveDir
    /*00000000*/ MOV         IP, #8192                   @ 0x2000 
    /*00000004*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00000008*/ SUB         IP, SP, IP 
    /*0000000c*/ STR         R0, [IP, #3936]             @ 0xf60 
    /*00000010*/ LDR         R3, WORD_0188               @ LDR         R3, [PC, #368]              @ 0x0000000000000188 
    /*00000014*/ SUB         SP, SP, #140                @ 0x8c 
    /*00000018*/ LDR         R2, WORD_018c               @ LDR         R2, [PC, #364]              @ 0x000000000000018c 
    /*0000001c*/ ADD         R6, SP, #4 
    /*00000020*/ ADD         R3, PC, R3 
    /*00000024*/ MOV         R4, R0 
    /*00000028*/ MOV         R0, R6 
    /*0000002c*/ LDR         R7, [R3, R2] 
    /*00000030*/ MOV         R2, #128                    @ 0x80 
    /*00000034*/ LDR         R1, [R7] 
    /*00000038*/ STR         R1, [SP, #132]              @ 0x84 
    /*0000003c*/ MOV         R1, #0 
    /*00000040*/ BL          memset
    /*00000044*/ CMP         R4, #0 
    /*00000048*/ BEQ         MPI_UPROC_RemoveDir_x160
    /*0000004c*/ LDRB        R3, [R4] 
    /*00000050*/ CMP         R3, #0 
    /*00000054*/ BEQ         MPI_UPROC_RemoveDir_x160
    /*00000058*/ MOV         R0, R4 
    /*0000005c*/ BL          strlen
    /*00000060*/ CMP         R0, #127                    @ 0x7f 
    /*00000064*/ BHI         MPI_UPROC_RemoveDir_x160
    /*00000068*/ LDR         R0, WORD_0190               @ LDR         R0, [PC, #288]              @ 0x0000000000000190 
    /*0000006c*/ ADD         R0, PC, R0 
    /*00000070*/ ADD         R0, R0, #12 
    /*00000074*/ BL          pthread_mutex_lock
    /*00000078*/ CMP         R0, #0 
    /*0000007c*/ BNE         MPI_UPROC_RemoveDir_xf4
    MPI_UPROC_RemoveDir_x80:
    /*00000080*/ LDR         R0, WORD_0194               @ LDR         R0, [PC, #268]              @ 0x0000000000000194 
    /*00000084*/ ADD         R0, PC, R0 
    /*00000088*/ ADD         R0, R0, #12 
    /*0000008c*/ LDR         R5, [R0, #-12] 
    /*00000090*/ CMN         R5, #1 
    /*00000094*/ BEQ         MPI_UPROC_RemoveDir_x114
    /*00000098*/ BL          pthread_mutex_unlock
    /*0000009c*/ CMP         R0, #0 
    /*000000a0*/ BNE         MPI_UPROC_RemoveDir_x140
    MPI_UPROC_RemoveDir_xa4:
    /*000000a4*/ MOV         R2, R4 
    /*000000a8*/ MOV         R3, #127                    @ 0x7f 
    /*000000ac*/ MOV         R1, #128                    @ 0x80 
    /*000000b0*/ MOV         R0, R6 
    /*000000b4*/ BL          memcpy_s
    /*000000b8*/ LDR         R3, WORD_0198               @ LDR         R3, [PC, #216]              @ 0x0000000000000198 
    /*000000bc*/ MOV         R1, #260                    @ 0x104 
    /*000000c0*/ MOVT        R1, #16512                  @ 0x4080 
    /*000000c4*/ MOV         R2, R6 
    /*000000c8*/ ADD         R3, PC, R3 
    /*000000cc*/ LDR         R0, [R3] 
    /*000000d0*/ BL          ioctl
    /*000000d4*/ MOV         R5, R0 
    MPI_UPROC_RemoveDir_xd8:
    /*000000d8*/ LDR         R2, [SP, #132]              @ 0x84 
    /*000000dc*/ MOV         R0, R5 
    /*000000e0*/ LDR         R3, [R7] 
    /*000000e4*/ CMP         R2, R3 
    /*000000e8*/ BNE         MPI_UPROC_RemoveDir_x184
    /*000000ec*/ ADD         SP, SP, #140                @ 0x8c 
    /*000000f0*/ POP         {R4, R5, R6, R7, PC} 
    MPI_UPROC_RemoveDir_xf4:
    /*000000f4*/ LDR         R2, WORD_019c               @ LDR         R2, [PC, #160]              @ 0x000000000000019c 
    /*000000f8*/ MOV         R3, #244                    @ 0xf4 
    /*000000fc*/ LDR         R0, WORD_01a0               @ LDR         R0, [PC, #156]              @ 0x00000000000001a0 
    /*00000100*/ MOV         R1, #1 
    /*00000104*/ ADD         R2, PC, R2 
    /*00000108*/ ADD         R0, PC, R0 
    /*0000010c*/ BL          printf
    /*00000110*/ B           MPI_UPROC_RemoveDir_x80
    MPI_UPROC_RemoveDir_x114:
    /*00000114*/ BL          pthread_mutex_unlock
    /*00000118*/ CMP         R0, #0 
    /*0000011c*/ BEQ         MPI_UPROC_RemoveDir_xd8
    /*00000120*/ LDR         R2, WORD_01a4               @ LDR         R2, [PC, #124]              @ 0x00000000000001a4 
    /*00000124*/ MOV         R3, #244                    @ 0xf4 
    /*00000128*/ LDR         R0, WORD_01a8               @ LDR         R0, [PC, #120]              @ 0x00000000000001a8 
    /*0000012c*/ MOV         R1, #1 
    /*00000130*/ ADD         R2, PC, R2 
    /*00000134*/ ADD         R0, PC, R0 
    /*00000138*/ BL          printf
    /*0000013c*/ B           MPI_UPROC_RemoveDir_xd8
    MPI_UPROC_RemoveDir_x140:
    /*00000140*/ LDR         R2, WORD_01ac               @ LDR         R2, [PC, #100]              @ 0x00000000000001ac 
    /*00000144*/ MOV         R3, #244                    @ 0xf4 
    /*00000148*/ LDR         R0, WORD_01b0               @ LDR         R0, [PC, #96]               @ 0x00000000000001b0 
    /*0000014c*/ MOV         R1, #1 
    /*00000150*/ ADD         R2, PC, R2 
    /*00000154*/ ADD         R0, PC, R0 
    /*00000158*/ BL          printf
    /*0000015c*/ B           MPI_UPROC_RemoveDir_xa4
    MPI_UPROC_RemoveDir_x160:
    /*00000160*/ LDR         R2, WORD_01b4               @ LDR         R2, [PC, #76]               @ 0x00000000000001b4 
    /*00000164*/ MOV         R3, #240                    @ 0xf0 
    /*00000168*/ LDR         R0, WORD_01b8               @ LDR         R0, [PC, #72]               @ 0x00000000000001b8 
    /*0000016c*/ MOV         R1, #1 
    /*00000170*/ ADD         R2, PC, R2 
    /*00000174*/ MVN         R5, #0 
    /*00000178*/ ADD         R0, PC, R0 
    /*0000017c*/ BL          printf
    /*00000180*/ B           MPI_UPROC_RemoveDir_xd8
    MPI_UPROC_RemoveDir_x184:
    /*00000184*/ BL          __stack_chk_fail
    /*00000188*/ WORD_0188: .word 0x00000160
    /*0000018c*/ WORD_018c: .word 0x00000000
    /*00000190*/ WORD_0190: .word 0x0000011c
    /*00000194*/ WORD_0194: .word 0x00000108
    /*00000198*/ WORD_0198: .word 0x000000c8
    /*0000019c*/ WORD_019c: .word 0x00000090
    /*000001a0*/ WORD_01a0: .word 0x00000090
    /*000001a4*/ WORD_01a4: .word 0x0000006c
    /*000001a8*/ WORD_01a8: .word 0x0000006c
    /*000001ac*/ WORD_01ac: .word 0x00000054
    /*000001b0*/ WORD_01b0: .word 0x00000054
    /*000001b4*/ WORD_01b4: .word 0x0000003c
    /*000001b8*/ WORD_01b8: .word 0x00000038
FUNC_END MPI_UPROC_RemoveDir


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.MPI_UPROC_AddEntry
@ Size: 0x360
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN MPI_UPROC_AddEntry
    /*00000000*/ MOV         IP, #8192                   @ 0x2000 
    /*00000004*/ PUSH        {R4, R5, R6, LR} 
    /*00000008*/ SUB         IP, SP, IP 
    /*0000000c*/ STR         R0, [IP, #3784]             @ 0xec8 
    /*00000010*/ LDR         R3, WORD_02fc               @ LDR         R3, [PC, #740]              @ 0x00000000000002fc 
    /*00000014*/ SUB         SP, SP, #296                @ 0x128 
    /*00000018*/ LDR         R2, WORD_0300               @ LDR         R2, [PC, #736]              @ 0x0000000000000300 
    /*0000001c*/ ADD         R3, PC, R3 
    /*00000020*/ CMN         R0, #1 
    /*00000024*/ CMPNE       R1, #0 
    /*00000028*/ LDR         R6, [R3, R2] 
    /*0000002c*/ LDR         R3, [R6] 
    /*00000030*/ STR         R3, [SP, #292]              @ 0x124 
    /*00000034*/ BEQ         MPI_UPROC_AddEntry_x2d4
    /*00000038*/ LDR         R0, [R1] 
    /*0000003c*/ MOV         R4, R1 
    /*00000040*/ CMP         R0, #0 
    /*00000044*/ BEQ         MPI_UPROC_AddEntry_x28c
    /*00000048*/ LDRB        R3, [R0] 
    /*0000004c*/ CMP         R3, #0 
    /*00000050*/ BEQ         MPI_UPROC_AddEntry_x28c
    /*00000054*/ BL          strlen
    /*00000058*/ CMP         R0, #127                    @ 0x7f 
    /*0000005c*/ BHI         MPI_UPROC_AddEntry_x28c
    /*00000060*/ LDR         R0, [R4, #4] 
    /*00000064*/ CMP         R0, #0 
    /*00000068*/ BEQ         MPI_UPROC_AddEntry_x84
    /*0000006c*/ LDRB        R3, [R0] 
    /*00000070*/ CMP         R3, #0 
    /*00000074*/ BEQ         MPI_UPROC_AddEntry_x2b0
    /*00000078*/ BL          strlen
    /*0000007c*/ CMP         R0, #127                    @ 0x7f 
    /*00000080*/ BHI         MPI_UPROC_AddEntry_x2b0
    MPI_UPROC_AddEntry_x84:
    /*00000084*/ LDR         R3, [R4, #8] 
    /*00000088*/ CMP         R3, #0 
    /*0000008c*/ BEQ         MPI_UPROC_AddEntry_x1a4
    MPI_UPROC_AddEntry_x90:
    /*00000090*/ LDR         R0, WORD_0304               @ LDR         R0, [PC, #620]              @ 0x0000000000000304 
    /*00000094*/ ADD         R0, PC, R0 
    /*00000098*/ ADD         R0, R0, #12 
    /*0000009c*/ BL          pthread_mutex_lock
    /*000000a0*/ CMP         R0, #0 
    /*000000a4*/ BNE         MPI_UPROC_AddEntry_x1d4
    MPI_UPROC_AddEntry_xa8:
    /*000000a8*/ LDR         R0, WORD_0308               @ LDR         R0, [PC, #600]              @ 0x0000000000000308 
    /*000000ac*/ ADD         R0, PC, R0 
    /*000000b0*/ ADD         R0, R0, #12 
    /*000000b4*/ LDR         R5, [R0, #-12] 
    /*000000b8*/ CMN         R5, #1 
    /*000000bc*/ BEQ         MPI_UPROC_AddEntry_x1f4
    /*000000c0*/ BL          pthread_mutex_unlock
    /*000000c4*/ CMP         R0, #0 
    /*000000c8*/ BNE         MPI_UPROC_AddEntry_x24c
    MPI_UPROC_AddEntry_xcc:
    /*000000cc*/ MOV         R3, #284                    @ 0x11c 
    /*000000d0*/ ADD         R5, SP, #8 
    /*000000d4*/ MOV         R1, R3 
    /*000000d8*/ MOV         R2, #0 
    /*000000dc*/ MOV         R0, R5 
    /*000000e0*/ BL          memset_s
    /*000000e4*/ LDR         R2, [R4] 
    /*000000e8*/ MOV         R0, R5 
    /*000000ec*/ MOV         R3, #127                    @ 0x7f 
    /*000000f0*/ MOV         R1, #128                    @ 0x80 
    /*000000f4*/ BL          strncpy_s
    /*000000f8*/ CMP         R0, #0 
    /*000000fc*/ BNE         MPI_UPROC_AddEntry_x220
    /*00000100*/ LDR         R2, [R4, #4] 
    /*00000104*/ CMP         R2, #0 
    /*00000108*/ BEQ         MPI_UPROC_AddEntry_x124
    MPI_UPROC_AddEntry_x10c:
    /*0000010c*/ MOV         R3, #127                    @ 0x7f 
    /*00000110*/ MOV         R1, #128                    @ 0x80 
    /*00000114*/ ADD         R0, SP, #136                @ 0x88 
    /*00000118*/ BL          strncpy_s
    /*0000011c*/ CMP         R0, #0 
    /*00000120*/ BNE         MPI_UPROC_AddEntry_x26c
    MPI_UPROC_AddEntry_x124:
    /*00000124*/ LDR         R3, WORD_030c               @ LDR         R3, [PC, #480]              @ 0x000000000000030c 
    /*00000128*/ ADD         R2, R4, #8 
    /*0000012c*/ LDR         IP, [R4, #16] 
    /*00000130*/ MOVW        R1, #257                    @ 0x101 
    /*00000134*/ VLD1.32     {D16}, [R2] 
    /*00000138*/ ADD         R3, PC, R3 
    /*0000013c*/ MOV         R2, R5 
    /*00000140*/ MOVT        R1, #49436                  @ 0xc11c 
    /*00000144*/ LDR         R0, [R3] 
    /*00000148*/ VSTR        D16, [SP, #264]             @ 0x108 
    /*0000014c*/ STR         IP, [SP, #272]              @ 0x110 
    /*00000150*/ BL          ioctl
    /*00000154*/ SUBS        R5, R0, #0 
    /*00000158*/ BNE         MPI_UPROC_AddEntry_x178
    MPI_UPROC_AddEntry_x15c:
    /*0000015c*/ LDR         R2, [SP, #292]              @ 0x124 
    /*00000160*/ MOV         R0, R5 
    /*00000164*/ LDR         R3, [R6] 
    /*00000168*/ CMP         R2, R3 
    /*0000016c*/ BNE         MPI_UPROC_AddEntry_x2f8
    /*00000170*/ ADD         SP, SP, #296                @ 0x128 
    /*00000174*/ POP         {R4, R5, R6, PC} 
    MPI_UPROC_AddEntry_x178:
    /*00000178*/ STR         R5, [SP, #4] 
    /*0000017c*/ MOVW        R3, #321                    @ 0x141 
    /*00000180*/ LDR         R0, [R4] 
    /*00000184*/ MOV         R1, #1 
    /*00000188*/ LDR         R2, WORD_0310               @ LDR         R2, [PC, #384]              @ 0x0000000000000310 
    /*0000018c*/ STR         R0, [SP] 
    /*00000190*/ LDR         R0, WORD_0314               @ LDR         R0, [PC, #380]              @ 0x0000000000000314 
    /*00000194*/ ADD         R2, PC, R2 
    /*00000198*/ ADD         R0, PC, R0 
    /*0000019c*/ BL          printf
    /*000001a0*/ B           MPI_UPROC_AddEntry_x15c
    MPI_UPROC_AddEntry_x1a4:
    /*000001a4*/ LDR         R3, [R4, #12] 
    /*000001a8*/ CMP         R3, #0 
    /*000001ac*/ BNE         MPI_UPROC_AddEntry_x90
    /*000001b0*/ LDR         R2, WORD_0318               @ LDR         R2, [PC, #352]              @ 0x0000000000000318 
    /*000001b4*/ MOVW        R3, #290                    @ 0x122 
    /*000001b8*/ LDR         R0, WORD_031c               @ LDR         R0, [PC, #348]              @ 0x000000000000031c 
    /*000001bc*/ MOV         R1, #1 
    /*000001c0*/ ADD         R2, PC, R2 
    /*000001c4*/ MVN         R5, #0 
    /*000001c8*/ ADD         R0, PC, R0 
    /*000001cc*/ BL          printf
    /*000001d0*/ B           MPI_UPROC_AddEntry_x15c
    MPI_UPROC_AddEntry_x1d4:
    /*000001d4*/ LDR         R2, WORD_0320               @ LDR         R2, [PC, #324]              @ 0x0000000000000320 
    /*000001d8*/ MOVW        R3, #294                    @ 0x126 
    /*000001dc*/ LDR         R0, WORD_0324               @ LDR         R0, [PC, #320]              @ 0x0000000000000324 
    /*000001e0*/ MOV         R1, #1 
    /*000001e4*/ ADD         R2, PC, R2 
    /*000001e8*/ ADD         R0, PC, R0 
    /*000001ec*/ BL          printf
    /*000001f0*/ B           MPI_UPROC_AddEntry_xa8
    MPI_UPROC_AddEntry_x1f4:
    /*000001f4*/ BL          pthread_mutex_unlock
    /*000001f8*/ CMP         R0, #0 
    /*000001fc*/ BEQ         MPI_UPROC_AddEntry_x15c
    /*00000200*/ LDR         R2, WORD_0328               @ LDR         R2, [PC, #288]              @ 0x0000000000000328 
    /*00000204*/ MOVW        R3, #294                    @ 0x126 
    /*00000208*/ LDR         R0, WORD_032c               @ LDR         R0, [PC, #284]              @ 0x000000000000032c 
    /*0000020c*/ MOV         R1, #1 
    /*00000210*/ ADD         R2, PC, R2 
    /*00000214*/ ADD         R0, PC, R0 
    /*00000218*/ BL          printf
    /*0000021c*/ B           MPI_UPROC_AddEntry_x15c
    MPI_UPROC_AddEntry_x220:
    /*00000220*/ LDR         R2, WORD_0330               @ LDR         R2, [PC, #264]              @ 0x0000000000000330 
    /*00000224*/ MOV         R3, #304                    @ 0x130 
    /*00000228*/ LDR         R0, WORD_0334               @ LDR         R0, [PC, #260]              @ 0x0000000000000334 
    /*0000022c*/ MOV         R1, #1 
    /*00000230*/ ADD         R2, PC, R2 
    /*00000234*/ ADD         R0, PC, R0 
    /*00000238*/ BL          printf
    /*0000023c*/ LDR         R2, [R4, #4] 
    /*00000240*/ CMP         R2, #0 
    /*00000244*/ BNE         MPI_UPROC_AddEntry_x10c
    /*00000248*/ B           MPI_UPROC_AddEntry_x124
    MPI_UPROC_AddEntry_x24c:
    /*0000024c*/ LDR         R2, WORD_0338               @ LDR         R2, [PC, #228]              @ 0x0000000000000338 
    /*00000250*/ MOVW        R3, #294                    @ 0x126 
    /*00000254*/ LDR         R0, WORD_033c               @ LDR         R0, [PC, #224]              @ 0x000000000000033c 
    /*00000258*/ MOV         R1, #1 
    /*0000025c*/ ADD         R2, PC, R2 
    /*00000260*/ ADD         R0, PC, R0 
    /*00000264*/ BL          printf
    /*00000268*/ B           MPI_UPROC_AddEntry_xcc
    MPI_UPROC_AddEntry_x26c:
    /*0000026c*/ LDR         R2, WORD_0340               @ LDR         R2, [PC, #204]              @ 0x0000000000000340 
    /*00000270*/ MOVW        R3, #311                    @ 0x137 
    /*00000274*/ LDR         R0, WORD_0344               @ LDR         R0, [PC, #200]              @ 0x0000000000000344 
    /*00000278*/ MOV         R1, #1 
    /*0000027c*/ ADD         R2, PC, R2 
    /*00000280*/ ADD         R0, PC, R0 
    /*00000284*/ BL          printf
    /*00000288*/ B           MPI_UPROC_AddEntry_x124
    MPI_UPROC_AddEntry_x28c:
    /*0000028c*/ LDR         R2, WORD_0348               @ LDR         R2, [PC, #180]              @ 0x0000000000000348 
    /*00000290*/ MOVW        R3, #277                    @ 0x115 
    /*00000294*/ LDR         R0, WORD_034c               @ LDR         R0, [PC, #176]              @ 0x000000000000034c 
    /*00000298*/ MOV         R1, #1 
    /*0000029c*/ ADD         R2, PC, R2 
    /*000002a0*/ MVN         R5, #0 
    /*000002a4*/ ADD         R0, PC, R0 
    /*000002a8*/ BL          printf
    /*000002ac*/ B           MPI_UPROC_AddEntry_x15c
    MPI_UPROC_AddEntry_x2b0:
    /*000002b0*/ LDR         R2, WORD_0350               @ LDR         R2, [PC, #152]              @ 0x0000000000000350 
    /*000002b4*/ MOV         R3, #284                    @ 0x11c 
    /*000002b8*/ LDR         R0, WORD_0354               @ LDR         R0, [PC, #148]              @ 0x0000000000000354 
    /*000002bc*/ MOV         R1, #1 
    /*000002c0*/ ADD         R2, PC, R2 
    /*000002c4*/ MVN         R5, #0 
    /*000002c8*/ ADD         R0, PC, R0 
    /*000002cc*/ BL          printf
    /*000002d0*/ B           MPI_UPROC_AddEntry_x15c
    MPI_UPROC_AddEntry_x2d4:
    /*000002d4*/ LDR         R2, WORD_0358               @ LDR         R2, [PC, #124]              @ 0x0000000000000358 
    /*000002d8*/ MOVW        R3, #270                    @ 0x10e 
    /*000002dc*/ LDR         R0, WORD_035c               @ LDR         R0, [PC, #120]              @ 0x000000000000035c 
    /*000002e0*/ MOV         R1, #1 
    /*000002e4*/ ADD         R2, PC, R2 
    /*000002e8*/ MVN         R5, #0 
    /*000002ec*/ ADD         R0, PC, R0 
    /*000002f0*/ BL          printf
    /*000002f4*/ B           MPI_UPROC_AddEntry_x15c
    MPI_UPROC_AddEntry_x2f8:
    /*000002f8*/ BL          __stack_chk_fail
    /*000002fc*/ WORD_02fc: .word 0x000002d8
    /*00000300*/ WORD_0300: .word 0x00000000
    /*00000304*/ WORD_0304: .word 0x00000268
    /*00000308*/ WORD_0308: .word 0x00000254
    /*0000030c*/ WORD_030c: .word 0x000001cc
    /*00000310*/ WORD_0310: .word 0x00000174
    /*00000314*/ WORD_0314: .word 0x00000174
    /*00000318*/ WORD_0318: .word 0x00000150
    /*0000031c*/ WORD_031c: .word 0x0000014c
    /*00000320*/ WORD_0320: .word 0x00000134
    /*00000324*/ WORD_0324: .word 0x00000134
    /*00000328*/ WORD_0328: .word 0x00000110
    /*0000032c*/ WORD_032c: .word 0x00000110
    /*00000330*/ WORD_0330: .word 0x000000f8
    /*00000334*/ WORD_0334: .word 0x000000f8
    /*00000338*/ WORD_0338: .word 0x000000d4
    /*0000033c*/ WORD_033c: .word 0x000000d4
    /*00000340*/ WORD_0340: .word 0x000000bc
    /*00000344*/ WORD_0344: .word 0x000000bc
    /*00000348*/ WORD_0348: .word 0x000000a4
    /*0000034c*/ WORD_034c: .word 0x000000a0
    /*00000350*/ WORD_0350: .word 0x00000088
    /*00000354*/ WORD_0354: .word 0x00000084
    /*00000358*/ WORD_0358: .word 0x0000006c
    /*0000035c*/ WORD_035c: .word 0x00000068
FUNC_END MPI_UPROC_AddEntry


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.MPI_UPROC_RemoveEntry
@ Size: 0x2b0
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN MPI_UPROC_RemoveEntry
    /*00000000*/ MOV         IP, #8192                   @ 0x2000 
    /*00000004*/ PUSH        {R4, R5, R6, LR} 
    /*00000008*/ SUB         IP, SP, IP 
    /*0000000c*/ STR         R0, [IP, #3792]             @ 0xed0 
    /*00000010*/ LDR         R3, WORD_0260               @ LDR         R3, [PC, #584]              @ 0x0000000000000260 
    /*00000014*/ SUB         SP, SP, #288                @ 0x120 
    /*00000018*/ LDR         R2, WORD_0264               @ LDR         R2, [PC, #580]              @ 0x0000000000000264 
    /*0000001c*/ ADD         R3, PC, R3 
    /*00000020*/ CMN         R0, #1 
    /*00000024*/ CMPNE       R1, #0 
    /*00000028*/ LDR         R6, [R3, R2] 
    /*0000002c*/ LDR         R3, [R6] 
    /*00000030*/ STR         R3, [SP, #284]              @ 0x11c 
    /*00000034*/ BEQ         MPI_UPROC_RemoveEntry_x238
    /*00000038*/ LDR         R0, [R1] 
    /*0000003c*/ MOV         R4, R1 
    /*00000040*/ CMP         R0, #0 
    /*00000044*/ BEQ         MPI_UPROC_RemoveEntry_x1f0
    /*00000048*/ LDRB        R3, [R0] 
    /*0000004c*/ CMP         R3, #0 
    /*00000050*/ BEQ         MPI_UPROC_RemoveEntry_x1f0
    /*00000054*/ BL          strlen
    /*00000058*/ CMP         R0, #127                    @ 0x7f 
    /*0000005c*/ BHI         MPI_UPROC_RemoveEntry_x1f0
    /*00000060*/ LDR         R0, [R4, #4] 
    /*00000064*/ CMP         R0, #0 
    /*00000068*/ BEQ         MPI_UPROC_RemoveEntry_x84
    /*0000006c*/ LDRB        R3, [R0] 
    /*00000070*/ CMP         R3, #0 
    /*00000074*/ BEQ         MPI_UPROC_RemoveEntry_x214
    /*00000078*/ BL          strlen
    /*0000007c*/ CMP         R0, #127                    @ 0x7f 
    /*00000080*/ BHI         MPI_UPROC_RemoveEntry_x214
    MPI_UPROC_RemoveEntry_x84:
    /*00000084*/ LDR         R0, WORD_0268               @ LDR         R0, [PC, #476]              @ 0x0000000000000268 
    /*00000088*/ ADD         R0, PC, R0 
    /*0000008c*/ ADD         R0, R0, #12 
    /*00000090*/ BL          pthread_mutex_lock
    /*00000094*/ CMP         R0, #0 
    /*00000098*/ BNE         MPI_UPROC_RemoveEntry_x164
    MPI_UPROC_RemoveEntry_x9c:
    /*0000009c*/ LDR         R0, WORD_026c               @ LDR         R0, [PC, #456]              @ 0x000000000000026c 
    /*000000a0*/ ADD         R0, PC, R0 
    /*000000a4*/ ADD         R0, R0, #12 
    /*000000a8*/ LDR         R5, [R0, #-12] 
    /*000000ac*/ CMN         R5, #1 
    /*000000b0*/ BEQ         MPI_UPROC_RemoveEntry_x184
    /*000000b4*/ BL          pthread_mutex_unlock
    /*000000b8*/ CMP         R0, #0 
    /*000000bc*/ BNE         MPI_UPROC_RemoveEntry_x1b0
    MPI_UPROC_RemoveEntry_xc0:
    /*000000c0*/ LDR         R0, WORD_0270               @ LDR         R0, [PC, #424]              @ 0x0000000000000270 
    /*000000c4*/ MOV         R5, SP 
    /*000000c8*/ ADD         R0, PC, R0 
    /*000000cc*/ ADD         R0, R0, #36                 @ 0x24 
    /*000000d0*/ BL          pthread_mutex_lock
    /*000000d4*/ MOV         R3, #284                    @ 0x11c 
    /*000000d8*/ MOV         R2, #0 
    /*000000dc*/ MOV         R1, R3 
    /*000000e0*/ MOV         R0, SP 
    /*000000e4*/ BL          memset_s
    /*000000e8*/ LDR         R2, [R4] 
    /*000000ec*/ MOV         R0, SP 
    /*000000f0*/ MOV         R3, #127                    @ 0x7f 
    /*000000f4*/ MOV         R1, #128                    @ 0x80 
    /*000000f8*/ BL          strncpy_s
    /*000000fc*/ LDR         R2, [R4, #4] 
    /*00000100*/ CMP         R2, #0 
    /*00000104*/ BEQ         MPI_UPROC_RemoveEntry_x120
    /*00000108*/ MOV         R1, #128                    @ 0x80 
    /*0000010c*/ MOV         R3, #127                    @ 0x7f 
    /*00000110*/ ADD         R0, SP, R1 
    /*00000114*/ BL          strncpy_s
    /*00000118*/ CMP         R0, #0 
    /*0000011c*/ BNE         MPI_UPROC_RemoveEntry_x1d0
    MPI_UPROC_RemoveEntry_x120:
    /*00000120*/ LDR         R4, WORD_0274               @ LDR         R4, [PC, #332]              @ 0x0000000000000274 
    /*00000124*/ MOVW        R1, #258                    @ 0x102 
    /*00000128*/ MOVT        R1, #16668                  @ 0x411c 
    /*0000012c*/ MOV         R2, R5 
    /*00000130*/ ADD         R4, PC, R4 
    /*00000134*/ LDR         R0, [R4], #36               @ 0x24 
    /*00000138*/ BL          ioctl
    /*0000013c*/ MOV         R5, R0 
    /*00000140*/ MOV         R0, R4 
    /*00000144*/ BL          pthread_mutex_unlock
    MPI_UPROC_RemoveEntry_x148:
    /*00000148*/ LDR         R2, [SP, #284]              @ 0x11c 
    /*0000014c*/ MOV         R0, R5 
    /*00000150*/ LDR         R3, [R6] 
    /*00000154*/ CMP         R2, R3 
    /*00000158*/ BNE         MPI_UPROC_RemoveEntry_x25c
    /*0000015c*/ ADD         SP, SP, #288                @ 0x120 
    /*00000160*/ POP         {R4, R5, R6, PC} 
    MPI_UPROC_RemoveEntry_x164:
    /*00000164*/ LDR         R2, WORD_0278               @ LDR         R2, [PC, #268]              @ 0x0000000000000278 
    /*00000168*/ MOVW        R3, #357                    @ 0x165 
    /*0000016c*/ LDR         R0, WORD_027c               @ LDR         R0, [PC, #264]              @ 0x000000000000027c 
    /*00000170*/ MOV         R1, #1 
    /*00000174*/ ADD         R2, PC, R2 
    /*00000178*/ ADD         R0, PC, R0 
    /*0000017c*/ BL          printf
    /*00000180*/ B           MPI_UPROC_RemoveEntry_x9c
    MPI_UPROC_RemoveEntry_x184:
    /*00000184*/ BL          pthread_mutex_unlock
    /*00000188*/ CMP         R0, #0 
    /*0000018c*/ BEQ         MPI_UPROC_RemoveEntry_x148
    /*00000190*/ LDR         R2, WORD_0280               @ LDR         R2, [PC, #232]              @ 0x0000000000000280 
    /*00000194*/ MOVW        R3, #357                    @ 0x165 
    /*00000198*/ LDR         R0, WORD_0284               @ LDR         R0, [PC, #228]              @ 0x0000000000000284 
    /*0000019c*/ MOV         R1, #1 
    /*000001a0*/ ADD         R2, PC, R2 
    /*000001a4*/ ADD         R0, PC, R0 
    /*000001a8*/ BL          printf
    /*000001ac*/ B           MPI_UPROC_RemoveEntry_x148
    MPI_UPROC_RemoveEntry_x1b0:
    /*000001b0*/ LDR         R2, WORD_0288               @ LDR         R2, [PC, #208]              @ 0x0000000000000288 
    /*000001b4*/ MOVW        R3, #357                    @ 0x165 
    /*000001b8*/ LDR         R0, WORD_028c               @ LDR         R0, [PC, #204]              @ 0x000000000000028c 
    /*000001bc*/ MOV         R1, #1 
    /*000001c0*/ ADD         R2, PC, R2 
    /*000001c4*/ ADD         R0, PC, R0 
    /*000001c8*/ BL          printf
    /*000001cc*/ B           MPI_UPROC_RemoveEntry_xc0
    MPI_UPROC_RemoveEntry_x1d0:
    /*000001d0*/ LDR         R2, WORD_0290               @ LDR         R2, [PC, #184]              @ 0x0000000000000290 
    /*000001d4*/ MOVW        R3, #375                    @ 0x177 
    /*000001d8*/ LDR         R0, WORD_0294               @ LDR         R0, [PC, #180]              @ 0x0000000000000294 
    /*000001dc*/ MOV         R1, #1 
    /*000001e0*/ ADD         R2, PC, R2 
    /*000001e4*/ ADD         R0, PC, R0 
    /*000001e8*/ BL          printf
    /*000001ec*/ B           MPI_UPROC_RemoveEntry_x120
    MPI_UPROC_RemoveEntry_x1f0:
    /*000001f0*/ LDR         R2, WORD_0298               @ LDR         R2, [PC, #160]              @ 0x0000000000000298 
    /*000001f4*/ MOVW        R3, #346                    @ 0x15a 
    /*000001f8*/ LDR         R0, WORD_029c               @ LDR         R0, [PC, #156]              @ 0x000000000000029c 
    /*000001fc*/ MOV         R1, #1 
    /*00000200*/ ADD         R2, PC, R2 
    /*00000204*/ MVN         R5, #0 
    /*00000208*/ ADD         R0, PC, R0 
    /*0000020c*/ BL          printf
    /*00000210*/ B           MPI_UPROC_RemoveEntry_x148
    MPI_UPROC_RemoveEntry_x214:
    /*00000214*/ LDR         R2, WORD_02a0               @ LDR         R2, [PC, #132]              @ 0x00000000000002a0 
    /*00000218*/ MOVW        R3, #353                    @ 0x161 
    /*0000021c*/ LDR         R0, WORD_02a4               @ LDR         R0, [PC, #128]              @ 0x00000000000002a4 
    /*00000220*/ MOV         R1, #1 
    /*00000224*/ ADD         R2, PC, R2 
    /*00000228*/ MVN         R5, #0 
    /*0000022c*/ ADD         R0, PC, R0 
    /*00000230*/ BL          printf
    /*00000234*/ B           MPI_UPROC_RemoveEntry_x148
    MPI_UPROC_RemoveEntry_x238:
    /*00000238*/ LDR         R2, WORD_02a8               @ LDR         R2, [PC, #104]              @ 0x00000000000002a8 
    /*0000023c*/ MOVW        R3, #339                    @ 0x153 
    /*00000240*/ LDR         R0, WORD_02ac               @ LDR         R0, [PC, #100]              @ 0x00000000000002ac 
    /*00000244*/ MOV         R1, #1 
    /*00000248*/ ADD         R2, PC, R2 
    /*0000024c*/ MVN         R5, #0 
    /*00000250*/ ADD         R0, PC, R0 
    /*00000254*/ BL          printf
    /*00000258*/ B           MPI_UPROC_RemoveEntry_x148
    MPI_UPROC_RemoveEntry_x25c:
    /*0000025c*/ BL          __stack_chk_fail
    /*00000260*/ WORD_0260: .word 0x0000023c
    /*00000264*/ WORD_0264: .word 0x00000000
    /*00000268*/ WORD_0268: .word 0x000001d8
    /*0000026c*/ WORD_026c: .word 0x000001c4
    /*00000270*/ WORD_0270: .word 0x000001a0
    /*00000274*/ WORD_0274: .word 0x0000013c
    /*00000278*/ WORD_0278: .word 0x000000fc
    /*0000027c*/ WORD_027c: .word 0x000000fc
    /*00000280*/ WORD_0280: .word 0x000000d8
    /*00000284*/ WORD_0284: .word 0x000000d8
    /*00000288*/ WORD_0288: .word 0x000000c0
    /*0000028c*/ WORD_028c: .word 0x000000c0
    /*00000290*/ WORD_0290: .word 0x000000a8
    /*00000294*/ WORD_0294: .word 0x000000a8
    /*00000298*/ WORD_0298: .word 0x00000090
    /*0000029c*/ WORD_029c: .word 0x0000008c
    /*000002a0*/ WORD_02a0: .word 0x00000074
    /*000002a4*/ WORD_02a4: .word 0x00000070
    /*000002a8*/ WORD_02a8: .word 0x00000058
    /*000002ac*/ WORD_02ac: .word 0x00000054
FUNC_END MPI_UPROC_RemoveEntry


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.HI_PROC_Init
@ Size: 0x1a0
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN HI_PROC_Init
    /*00000000*/ MOV         IP, #8192                   @ 0x2000 
    /*00000004*/ PUSH        {R4, R5, R6, LR} 
    /*00000008*/ SUB         IP, SP, IP 
    /*0000000c*/ STR         R0, [IP, #4080]             @ 0xff0 
    /*00000010*/ LDR         R0, WORD_0164               @ LDR         R0, [PC, #332]              @ 0x0000000000000164 
    /*00000014*/ ADD         R0, PC, R0 
    /*00000018*/ ADD         R0, R0, #12 
    /*0000001c*/ BL          pthread_mutex_lock
    /*00000020*/ CMP         R0, #0 
    /*00000024*/ BNE         HI_PROC_Init_x7c
    HI_PROC_Init_x28:
    /*00000028*/ LDR         R5, WORD_0168               @ LDR         R5, [PC, #312]              @ 0x0000000000000168 
    /*0000002c*/ ADD         R5, PC, R5 
    /*00000030*/ LDR         R4, [R5] 
    /*00000034*/ CMN         R4, #1 
    /*00000038*/ BEQ         HI_PROC_Init_x9c
    HI_PROC_Init_x3c:
    /*0000003c*/ LDR         R0, WORD_016c               @ LDR         R0, [PC, #296]              @ 0x000000000000016c 
    /*00000040*/ ADD         R0, PC, R0 
    /*00000044*/ ADD         R0, R0, #12 
    /*00000048*/ BL          pthread_mutex_unlock
    /*0000004c*/ SUBS        R4, R0, #0 
    /*00000050*/ BEQ         HI_PROC_Init_x74
    /*00000054*/ LDR         R2, WORD_0170               @ LDR         R2, [PC, #276]              @ 0x0000000000000170 
    /*00000058*/ MOV         R3, #179                    @ 0xb3 
    /*0000005c*/ LDR         R0, WORD_0174               @ LDR         R0, [PC, #272]              @ 0x0000000000000174 
    /*00000060*/ MOV         R1, #1 
    /*00000064*/ ADD         R2, PC, R2 
    /*00000068*/ MOV         R4, #0 
    /*0000006c*/ ADD         R0, PC, R0 
    /*00000070*/ BL          printf
    HI_PROC_Init_x74:
    /*00000074*/ MOV         R0, R4 
    /*00000078*/ POP         {R4, R5, R6, PC} 
    HI_PROC_Init_x7c:
    /*0000007c*/ LDR         R2, WORD_0178               @ LDR         R2, [PC, #244]              @ 0x0000000000000178 
    /*00000080*/ MOV         R3, #155                    @ 0x9b 
    /*00000084*/ LDR         R0, WORD_017c               @ LDR         R0, [PC, #240]              @ 0x000000000000017c 
    /*00000088*/ MOV         R1, #1 
    /*0000008c*/ ADD         R2, PC, R2 
    /*00000090*/ ADD         R0, PC, R0 
    /*00000094*/ BL          printf
    /*00000098*/ B           HI_PROC_Init_x28
    HI_PROC_Init_x9c:
    /*0000009c*/ LDR         R0, WORD_0180               @ LDR         R0, [PC, #220]              @ 0x0000000000000180 
    /*000000a0*/ MOV         R1, #2 
    /*000000a4*/ ADD         R0, PC, R0 
    /*000000a8*/ BL          open
    /*000000ac*/ STR         R0, [R5] 
    /*000000b0*/ CMP         R0, #0 
    /*000000b4*/ BLE         HI_PROC_Init_x134
    /*000000b8*/ LDR         R2, WORD_0184               @ LDR         R2, [PC, #196]              @ 0x0000000000000184 
    /*000000bc*/ MOV         R3, #0 
    /*000000c0*/ STR         R3, [R5, #4] 
    /*000000c4*/ MOV         R1, R3 
    /*000000c8*/ ADD         R2, PC, R2 
    /*000000cc*/ ADD         R0, R5, #8 
    /*000000d0*/ BL          pthread_create
    /*000000d4*/ CMP         R0, #0 
    /*000000d8*/ BEQ         HI_PROC_Init_x3c
    /*000000dc*/ LDR         R0, [R5] 
    /*000000e0*/ BL          close
    /*000000e4*/ MOV         R0, R5 
    /*000000e8*/ STR         R4, [R0], #12 
    /*000000ec*/ BL          pthread_mutex_unlock
    /*000000f0*/ CMP         R0, #0 
    /*000000f4*/ BEQ         HI_PROC_Init_x114
    /*000000f8*/ LDR         R2, WORD_0188               @ LDR         R2, [PC, #136]              @ 0x0000000000000188 
    /*000000fc*/ MOV         R3, #173                    @ 0xad 
    /*00000100*/ LDR         R0, WORD_018c               @ LDR         R0, [PC, #132]              @ 0x000000000000018c 
    /*00000104*/ MOV         R1, #1 
    /*00000108*/ ADD         R2, PC, R2 
    /*0000010c*/ ADD         R0, PC, R0 
    /*00000110*/ BL          printf
    HI_PROC_Init_x114:
    /*00000114*/ LDR         R2, WORD_0190               @ LDR         R2, [PC, #116]              @ 0x0000000000000190 
    /*00000118*/ MOV         R3, #174                    @ 0xae 
    /*0000011c*/ LDR         R0, WORD_0194               @ LDR         R0, [PC, #112]              @ 0x0000000000000194 
    /*00000120*/ MOV         R1, #0 
    /*00000124*/ ADD         R2, PC, R2 
    /*00000128*/ ADD         R0, PC, R0 
    /*0000012c*/ BL          printf
    /*00000130*/ B           HI_PROC_Init_x74
    HI_PROC_Init_x134:
    /*00000134*/ ADD         R0, R5, #12 
    /*00000138*/ BL          pthread_mutex_unlock
    /*0000013c*/ CMP         R0, #0 
    /*00000140*/ BEQ         HI_PROC_Init_x74
    /*00000144*/ LDR         R2, WORD_0198               @ LDR         R2, [PC, #76]               @ 0x0000000000000198 
    /*00000148*/ MOV         R3, #162                    @ 0xa2 
    /*0000014c*/ LDR         R0, WORD_019c               @ LDR         R0, [PC, #72]               @ 0x000000000000019c 
    /*00000150*/ MOV         R1, #1 
    /*00000154*/ ADD         R2, PC, R2 
    /*00000158*/ ADD         R0, PC, R0 
    /*0000015c*/ BL          printf
    /*00000160*/ B           HI_PROC_Init_x74
    /*00000164*/ WORD_0164: .word 0x00000148
    /*00000168*/ WORD_0168: .word 0x00000134
    /*0000016c*/ WORD_016c: .word 0x00000124
    /*00000170*/ WORD_0170: .word 0x00000104
    /*00000174*/ WORD_0174: .word 0x00000100
    /*00000178*/ WORD_0178: .word 0x000000e4
    /*0000017c*/ WORD_017c: .word 0x000000e4
    /*00000180*/ WORD_0180: .word 0x000000d4
    /*00000184*/ WORD_0184: .word 0x000000b4
    /*00000188*/ WORD_0188: .word 0x00000078
    /*0000018c*/ WORD_018c: .word 0x00000078
    /*00000190*/ WORD_0190: .word 0x00000064
    /*00000194*/ WORD_0194: .word 0x00000064
    /*00000198*/ WORD_0198: .word 0x0000003c
    /*0000019c*/ WORD_019c: .word 0x0000003c
FUNC_END HI_PROC_Init


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.HI_PROC_DeInit
@ Size: 0xd8
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN HI_PROC_DeInit
    /*00000000*/ MOV         IP, #8192                   @ 0x2000 
    /*00000004*/ PUSH        {R4, LR} 
    /*00000008*/ SUB         IP, SP, IP 
    /*0000000c*/ STR         R0, [IP, #4088]             @ 0xff8 
    /*00000010*/ LDR         R0, WORD_00bc               @ LDR         R0, [PC, #164]              @ 0x00000000000000bc 
    /*00000014*/ ADD         R0, PC, R0 
    /*00000018*/ ADD         R0, R0, #12 
    /*0000001c*/ BL          pthread_mutex_lock
    /*00000020*/ CMP         R0, #0 
    /*00000024*/ BNE         HI_PROC_DeInit_x9c
    HI_PROC_DeInit_x28:
    /*00000028*/ LDR         R4, WORD_00c0               @ LDR         R4, [PC, #144]              @ 0x00000000000000c0 
    /*0000002c*/ ADD         R4, PC, R4 
    /*00000030*/ LDR         R3, [R4] 
    /*00000034*/ CMN         R3, #1 
    /*00000038*/ BEQ         HI_PROC_DeInit_x60
    /*0000003c*/ LDR         R0, [R4, #8] 
    /*00000040*/ MOV         R3, #1 
    /*00000044*/ STR         R3, [R4, #4] 
    /*00000048*/ MOV         R1, #0 
    /*0000004c*/ BL          pthread_join
    /*00000050*/ LDR         R0, [R4] 
    /*00000054*/ BL          close
    /*00000058*/ MVN         R3, #0 
    /*0000005c*/ STR         R3, [R4] 
    HI_PROC_DeInit_x60:
    /*00000060*/ LDR         R0, WORD_00c4               @ LDR         R0, [PC, #92]               @ 0x00000000000000c4 
    /*00000064*/ ADD         R0, PC, R0 
    /*00000068*/ ADD         R0, R0, #12 
    /*0000006c*/ BL          pthread_mutex_unlock
    /*00000070*/ CMP         R0, #0 
    /*00000074*/ BEQ         HI_PROC_DeInit_x94
    /*00000078*/ LDR         R2, WORD_00c8               @ LDR         R2, [PC, #72]               @ 0x00000000000000c8 
    /*0000007c*/ MOV         R3, #197                    @ 0xc5 
    /*00000080*/ LDR         R0, WORD_00cc               @ LDR         R0, [PC, #68]               @ 0x00000000000000cc 
    /*00000084*/ MOV         R1, #1 
    /*00000088*/ ADD         R2, PC, R2 
    /*0000008c*/ ADD         R0, PC, R0 
    /*00000090*/ BL          printf
    HI_PROC_DeInit_x94:
    /*00000094*/ MOV         R0, #0 
    /*00000098*/ POP         {R4, PC} 
    HI_PROC_DeInit_x9c:
    /*0000009c*/ LDR         R2, WORD_00d0               @ LDR         R2, [PC, #44]               @ 0x00000000000000d0 
    /*000000a0*/ MOV         R3, #186                    @ 0xba 
    /*000000a4*/ LDR         R0, WORD_00d4               @ LDR         R0, [PC, #40]               @ 0x00000000000000d4 
    /*000000a8*/ MOV         R1, #1 
    /*000000ac*/ ADD         R2, PC, R2 
    /*000000b0*/ ADD         R0, PC, R0 
    /*000000b4*/ BL          printf
    /*000000b8*/ B           HI_PROC_DeInit_x28
    /*000000bc*/ WORD_00bc: .word 0x000000a0
    /*000000c0*/ WORD_00c0: .word 0x0000008c
    /*000000c4*/ WORD_00c4: .word 0x00000058
    /*000000c8*/ WORD_00c8: .word 0x00000038
    /*000000cc*/ WORD_00cc: .word 0x00000038
    /*000000d0*/ WORD_00d0: .word 0x0000001c
    /*000000d4*/ WORD_00d4: .word 0x0000001c
FUNC_END HI_PROC_DeInit


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.HI_PROC_AddDir
@ Size: 0x1ec
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN HI_PROC_AddDir
    /*00000000*/ MOV         IP, #8192                   @ 0x2000 
    /*00000004*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00000008*/ SUB         IP, SP, IP 
    /*0000000c*/ STR         R0, [IP, #3928]             @ 0xf58 
    /*00000010*/ LDR         R3, WORD_01b0               @ LDR         R3, [PC, #408]              @ 0x00000000000001b0 
    /*00000014*/ SUB         SP, SP, #148                @ 0x94 
    /*00000018*/ LDR         R2, WORD_01b4               @ LDR         R2, [PC, #404]              @ 0x00000000000001b4 
    /*0000001c*/ ADD         R6, SP, #12 
    /*00000020*/ ADD         R3, PC, R3 
    /*00000024*/ MOV         R4, R0 
    /*00000028*/ MOV         R0, R6 
    /*0000002c*/ LDR         R7, [R3, R2] 
    /*00000030*/ MOV         R2, #128                    @ 0x80 
    /*00000034*/ LDR         R1, [R7] 
    /*00000038*/ STR         R1, [SP, #140]              @ 0x8c 
    /*0000003c*/ MOV         R1, #0 
    /*00000040*/ BL          memset
    /*00000044*/ CMP         R4, #0 
    /*00000048*/ BEQ         HI_PROC_AddDir_x188
    /*0000004c*/ LDRB        R3, [R4] 
    /*00000050*/ CMP         R3, #0 
    /*00000054*/ BEQ         HI_PROC_AddDir_x188
    /*00000058*/ MOV         R0, R4 
    /*0000005c*/ BL          strlen
    /*00000060*/ CMP         R0, #127                    @ 0x7f 
    /*00000064*/ BHI         HI_PROC_AddDir_x188
    /*00000068*/ LDR         R0, WORD_01b8               @ LDR         R0, [PC, #328]              @ 0x00000000000001b8 
    /*0000006c*/ ADD         R0, PC, R0 
    /*00000070*/ ADD         R0, R0, #12 
    /*00000074*/ BL          pthread_mutex_lock
    /*00000078*/ CMP         R0, #0 
    /*0000007c*/ BNE         HI_PROC_AddDir_x11c
    HI_PROC_AddDir_x80:
    /*00000080*/ LDR         R0, WORD_01bc               @ LDR         R0, [PC, #308]              @ 0x00000000000001bc 
    /*00000084*/ ADD         R0, PC, R0 
    /*00000088*/ ADD         R0, R0, #12 
    /*0000008c*/ LDR         R5, [R0, #-12] 
    /*00000090*/ CMN         R5, #1 
    /*00000094*/ BEQ         HI_PROC_AddDir_x13c
    /*00000098*/ BL          pthread_mutex_unlock
    /*0000009c*/ CMP         R0, #0 
    /*000000a0*/ BNE         HI_PROC_AddDir_x168
    HI_PROC_AddDir_xa4:
    /*000000a4*/ MOV         R3, #127                    @ 0x7f 
    /*000000a8*/ MOV         R2, R4 
    /*000000ac*/ MOV         R1, #128                    @ 0x80 
    /*000000b0*/ MOV         R0, R6 
    /*000000b4*/ BL          memcpy_s
    /*000000b8*/ LDR         R3, WORD_01c0               @ LDR         R3, [PC, #256]              @ 0x00000000000001c0 
    /*000000bc*/ MOVW        R1, #259                    @ 0x103 
    /*000000c0*/ MOVT        R1, #16512                  @ 0x4080 
    /*000000c4*/ MOV         R2, R6 
    /*000000c8*/ ADD         R3, PC, R3 
    /*000000cc*/ LDR         R0, [R3] 
    /*000000d0*/ BL          ioctl
    /*000000d4*/ SUBS        R5, R0, #0 
    /*000000d8*/ BNE         HI_PROC_AddDir_xf8
    HI_PROC_AddDir_xdc:
    /*000000dc*/ LDR         R2, [SP, #140]              @ 0x8c 
    /*000000e0*/ MOV         R0, R5 
    /*000000e4*/ LDR         R3, [R7] 
    /*000000e8*/ CMP         R2, R3 
    /*000000ec*/ BNE         HI_PROC_AddDir_x1ac
    /*000000f0*/ ADD         SP, SP, #148                @ 0x94 
    /*000000f4*/ POP         {R4, R5, R6, R7, PC} 
    HI_PROC_AddDir_xf8:
    /*000000f8*/ LDR         R2, WORD_01c4               @ LDR         R2, [PC, #196]              @ 0x00000000000001c4 
    /*000000fc*/ MOV         R3, #222                    @ 0xde 
    /*00000100*/ LDR         R0, WORD_01c8               @ LDR         R0, [PC, #192]              @ 0x00000000000001c8 
    /*00000104*/ MOV         R1, #1 
    /*00000108*/ STR         R4, [SP] 
    /*0000010c*/ ADD         R2, PC, R2 
    /*00000110*/ ADD         R0, PC, R0 
    /*00000114*/ BL          printf
    /*00000118*/ B           HI_PROC_AddDir_xdc
    HI_PROC_AddDir_x11c:
    /*0000011c*/ LDR         R2, WORD_01cc               @ LDR         R2, [PC, #168]              @ 0x00000000000001cc 
    /*00000120*/ MOV         R3, #214                    @ 0xd6 
    /*00000124*/ LDR         R0, WORD_01d0               @ LDR         R0, [PC, #164]              @ 0x00000000000001d0 
    /*00000128*/ MOV         R1, #1 
    /*0000012c*/ ADD         R2, PC, R2 
    /*00000130*/ ADD         R0, PC, R0 
    /*00000134*/ BL          printf
    /*00000138*/ B           HI_PROC_AddDir_x80
    HI_PROC_AddDir_x13c:
    /*0000013c*/ BL          pthread_mutex_unlock
    /*00000140*/ CMP         R0, #0 
    /*00000144*/ BEQ         HI_PROC_AddDir_xdc
    /*00000148*/ LDR         R2, WORD_01d4               @ LDR         R2, [PC, #132]              @ 0x00000000000001d4 
    /*0000014c*/ MOV         R3, #214                    @ 0xd6 
    /*00000150*/ LDR         R0, WORD_01d8               @ LDR         R0, [PC, #128]              @ 0x00000000000001d8 
    /*00000154*/ MOV         R1, #1 
    /*00000158*/ ADD         R2, PC, R2 
    /*0000015c*/ ADD         R0, PC, R0 
    /*00000160*/ BL          printf
    /*00000164*/ B           HI_PROC_AddDir_xdc
    HI_PROC_AddDir_x168:
    /*00000168*/ LDR         R2, WORD_01dc               @ LDR         R2, [PC, #108]              @ 0x00000000000001dc 
    /*0000016c*/ MOV         R3, #214                    @ 0xd6 
    /*00000170*/ LDR         R0, WORD_01e0               @ LDR         R0, [PC, #104]              @ 0x00000000000001e0 
    /*00000174*/ MOV         R1, #1 
    /*00000178*/ ADD         R2, PC, R2 
    /*0000017c*/ ADD         R0, PC, R0 
    /*00000180*/ BL          printf
    /*00000184*/ B           HI_PROC_AddDir_xa4
    HI_PROC_AddDir_x188:
    /*00000188*/ LDR         R2, WORD_01e4               @ LDR         R2, [PC, #84]               @ 0x00000000000001e4 
    /*0000018c*/ MOV         R3, #210                    @ 0xd2 
    /*00000190*/ LDR         R0, WORD_01e8               @ LDR         R0, [PC, #80]               @ 0x00000000000001e8 
    /*00000194*/ MOV         R1, #1 
    /*00000198*/ ADD         R2, PC, R2 
    /*0000019c*/ MVN         R5, #0 
    /*000001a0*/ ADD         R0, PC, R0 
    /*000001a4*/ BL          printf
    /*000001a8*/ B           HI_PROC_AddDir_xdc
    HI_PROC_AddDir_x1ac:
    /*000001ac*/ BL          __stack_chk_fail
    /*000001b0*/ WORD_01b0: .word 0x00000188
    /*000001b4*/ WORD_01b4: .word 0x00000000
    /*000001b8*/ WORD_01b8: .word 0x00000144
    /*000001bc*/ WORD_01bc: .word 0x00000130
    /*000001c0*/ WORD_01c0: .word 0x000000f0
    /*000001c4*/ WORD_01c4: .word 0x000000b0
    /*000001c8*/ WORD_01c8: .word 0x000000b0
    /*000001cc*/ WORD_01cc: .word 0x00000098
    /*000001d0*/ WORD_01d0: .word 0x00000098
    /*000001d4*/ WORD_01d4: .word 0x00000074
    /*000001d8*/ WORD_01d8: .word 0x00000074
    /*000001dc*/ WORD_01dc: .word 0x0000005c
    /*000001e0*/ WORD_01e0: .word 0x0000005c
    /*000001e4*/ WORD_01e4: .word 0x00000044
    /*000001e8*/ WORD_01e8: .word 0x00000040
FUNC_END HI_PROC_AddDir


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.HI_PROC_RemoveDir
@ Size: 0x1bc
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN HI_PROC_RemoveDir
    /*00000000*/ MOV         IP, #8192                   @ 0x2000 
    /*00000004*/ PUSH        {R4, R5, R6, R7, LR} 
    /*00000008*/ SUB         IP, SP, IP 
    /*0000000c*/ STR         R0, [IP, #3936]             @ 0xf60 
    /*00000010*/ LDR         R3, WORD_0188               @ LDR         R3, [PC, #368]              @ 0x0000000000000188 
    /*00000014*/ SUB         SP, SP, #140                @ 0x8c 
    /*00000018*/ LDR         R2, WORD_018c               @ LDR         R2, [PC, #364]              @ 0x000000000000018c 
    /*0000001c*/ ADD         R6, SP, #4 
    /*00000020*/ ADD         R3, PC, R3 
    /*00000024*/ MOV         R4, R0 
    /*00000028*/ MOV         R0, R6 
    /*0000002c*/ LDR         R7, [R3, R2] 
    /*00000030*/ MOV         R2, #128                    @ 0x80 
    /*00000034*/ LDR         R1, [R7] 
    /*00000038*/ STR         R1, [SP, #132]              @ 0x84 
    /*0000003c*/ MOV         R1, #0 
    /*00000040*/ BL          memset
    /*00000044*/ CMP         R4, #0 
    /*00000048*/ BEQ         HI_PROC_RemoveDir_x160
    /*0000004c*/ LDRB        R3, [R4] 
    /*00000050*/ CMP         R3, #0 
    /*00000054*/ BEQ         HI_PROC_RemoveDir_x160
    /*00000058*/ MOV         R0, R4 
    /*0000005c*/ BL          strlen
    /*00000060*/ CMP         R0, #127                    @ 0x7f 
    /*00000064*/ BHI         HI_PROC_RemoveDir_x160
    /*00000068*/ LDR         R0, WORD_0190               @ LDR         R0, [PC, #288]              @ 0x0000000000000190 
    /*0000006c*/ ADD         R0, PC, R0 
    /*00000070*/ ADD         R0, R0, #12 
    /*00000074*/ BL          pthread_mutex_lock
    /*00000078*/ CMP         R0, #0 
    /*0000007c*/ BNE         HI_PROC_RemoveDir_xf4
    HI_PROC_RemoveDir_x80:
    /*00000080*/ LDR         R0, WORD_0194               @ LDR         R0, [PC, #268]              @ 0x0000000000000194 
    /*00000084*/ ADD         R0, PC, R0 
    /*00000088*/ ADD         R0, R0, #12 
    /*0000008c*/ LDR         R5, [R0, #-12] 
    /*00000090*/ CMN         R5, #1 
    /*00000094*/ BEQ         HI_PROC_RemoveDir_x114
    /*00000098*/ BL          pthread_mutex_unlock
    /*0000009c*/ CMP         R0, #0 
    /*000000a0*/ BNE         HI_PROC_RemoveDir_x140
    HI_PROC_RemoveDir_xa4:
    /*000000a4*/ MOV         R2, R4 
    /*000000a8*/ MOV         R3, #127                    @ 0x7f 
    /*000000ac*/ MOV         R1, #128                    @ 0x80 
    /*000000b0*/ MOV         R0, R6 
    /*000000b4*/ BL          memcpy_s
    /*000000b8*/ LDR         R3, WORD_0198               @ LDR         R3, [PC, #216]              @ 0x0000000000000198 
    /*000000bc*/ MOV         R1, #260                    @ 0x104 
    /*000000c0*/ MOVT        R1, #16512                  @ 0x4080 
    /*000000c4*/ MOV         R2, R6 
    /*000000c8*/ ADD         R3, PC, R3 
    /*000000cc*/ LDR         R0, [R3] 
    /*000000d0*/ BL          ioctl
    /*000000d4*/ MOV         R5, R0 
    HI_PROC_RemoveDir_xd8:
    /*000000d8*/ LDR         R2, [SP, #132]              @ 0x84 
    /*000000dc*/ MOV         R0, R5 
    /*000000e0*/ LDR         R3, [R7] 
    /*000000e4*/ CMP         R2, R3 
    /*000000e8*/ BNE         HI_PROC_RemoveDir_x184
    /*000000ec*/ ADD         SP, SP, #140                @ 0x8c 
    /*000000f0*/ POP         {R4, R5, R6, R7, PC} 
    HI_PROC_RemoveDir_xf4:
    /*000000f4*/ LDR         R2, WORD_019c               @ LDR         R2, [PC, #160]              @ 0x000000000000019c 
    /*000000f8*/ MOV         R3, #244                    @ 0xf4 
    /*000000fc*/ LDR         R0, WORD_01a0               @ LDR         R0, [PC, #156]              @ 0x00000000000001a0 
    /*00000100*/ MOV         R1, #1 
    /*00000104*/ ADD         R2, PC, R2 
    /*00000108*/ ADD         R0, PC, R0 
    /*0000010c*/ BL          printf
    /*00000110*/ B           HI_PROC_RemoveDir_x80
    HI_PROC_RemoveDir_x114:
    /*00000114*/ BL          pthread_mutex_unlock
    /*00000118*/ CMP         R0, #0 
    /*0000011c*/ BEQ         HI_PROC_RemoveDir_xd8
    /*00000120*/ LDR         R2, WORD_01a4               @ LDR         R2, [PC, #124]              @ 0x00000000000001a4 
    /*00000124*/ MOV         R3, #244                    @ 0xf4 
    /*00000128*/ LDR         R0, WORD_01a8               @ LDR         R0, [PC, #120]              @ 0x00000000000001a8 
    /*0000012c*/ MOV         R1, #1 
    /*00000130*/ ADD         R2, PC, R2 
    /*00000134*/ ADD         R0, PC, R0 
    /*00000138*/ BL          printf
    /*0000013c*/ B           HI_PROC_RemoveDir_xd8
    HI_PROC_RemoveDir_x140:
    /*00000140*/ LDR         R2, WORD_01ac               @ LDR         R2, [PC, #100]              @ 0x00000000000001ac 
    /*00000144*/ MOV         R3, #244                    @ 0xf4 
    /*00000148*/ LDR         R0, WORD_01b0               @ LDR         R0, [PC, #96]               @ 0x00000000000001b0 
    /*0000014c*/ MOV         R1, #1 
    /*00000150*/ ADD         R2, PC, R2 
    /*00000154*/ ADD         R0, PC, R0 
    /*00000158*/ BL          printf
    /*0000015c*/ B           HI_PROC_RemoveDir_xa4
    HI_PROC_RemoveDir_x160:
    /*00000160*/ LDR         R2, WORD_01b4               @ LDR         R2, [PC, #76]               @ 0x00000000000001b4 
    /*00000164*/ MOV         R3, #240                    @ 0xf0 
    /*00000168*/ LDR         R0, WORD_01b8               @ LDR         R0, [PC, #72]               @ 0x00000000000001b8 
    /*0000016c*/ MOV         R1, #1 
    /*00000170*/ ADD         R2, PC, R2 
    /*00000174*/ MVN         R5, #0 
    /*00000178*/ ADD         R0, PC, R0 
    /*0000017c*/ BL          printf
    /*00000180*/ B           HI_PROC_RemoveDir_xd8
    HI_PROC_RemoveDir_x184:
    /*00000184*/ BL          __stack_chk_fail
    /*00000188*/ WORD_0188: .word 0x00000160
    /*0000018c*/ WORD_018c: .word 0x00000000
    /*00000190*/ WORD_0190: .word 0x0000011c
    /*00000194*/ WORD_0194: .word 0x00000108
    /*00000198*/ WORD_0198: .word 0x000000c8
    /*0000019c*/ WORD_019c: .word 0x00000090
    /*000001a0*/ WORD_01a0: .word 0x00000090
    /*000001a4*/ WORD_01a4: .word 0x0000006c
    /*000001a8*/ WORD_01a8: .word 0x0000006c
    /*000001ac*/ WORD_01ac: .word 0x00000054
    /*000001b0*/ WORD_01b0: .word 0x00000054
    /*000001b4*/ WORD_01b4: .word 0x0000003c
    /*000001b8*/ WORD_01b8: .word 0x00000038
FUNC_END HI_PROC_RemoveDir


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.HI_PROC_AddEntry
@ Size: 0x4
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN HI_PROC_AddEntry
    HI_PROC_AddEntry_x0:
    /*00000000*/ B           HI_PROC_AddEntry_x0         @ MPI_UPROC_AddEntry [R_ARM_JUMP24: .text.MPI_UPROC_AddEntry+0x0] 
FUNC_END HI_PROC_AddEntry


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.HI_PROC_RemoveEntry
@ Size: 0x4
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN HI_PROC_RemoveEntry
    HI_PROC_RemoveEntry_x0:
    /*00000000*/ B           HI_PROC_RemoveEntry_x0      @ MPI_UPROC_RemoveEntry [R_ARM_JUMP24: .text.MPI_UPROC_RemoveEntry+0x0] 
FUNC_END HI_PROC_RemoveEntry



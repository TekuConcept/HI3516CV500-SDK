@
@ -- FILES --
@

@ imx458_sensor_ctl.c


unsigned char data[0] = {
};

unsigned char bss[0];

unsigned char bss.g_bStandby[16];

unsigned char data.g_fd[16] = {
    /*0000*/ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
};

_RODATA___FUNCTION___10697_0000: .ascii "imx458_i2c_init\0",
_RODATA___FUNCTION___10697_0010: .ascii ""


_RODATA___FUNCTION___10713_0000: .ascii "imx458_write_register\0"


_RODATA_GS_AU16SENSORCFGSEQ_0000: .ascii "\x04\0\x04\0",
_RODATA_GS_AU16SENSORCFGSEQ_0004: .ascii "\x04\0\x04\0",
_RODATA_GS_AU16SENSORCFGSEQ_0008: .ascii "\x04\0\x04\0",
_RODATA_GS_AU16SENSORCFGSEQ_000c: .ascii "\x04\0\x05\x03\xd8\0\xd6\0",
_RODATA_GS_AU16SENSORCFGSEQ_0014: .ascii "\xd6\0\xd8\0",
_RODATA_GS_AU16SENSORCFGSEQ_0018: .ascii "\xd8\0\xd8\0",
_RODATA_GS_AU16SENSORCFGSEQ_001c: .ascii "\xd8\0\x07\x03\x02\0\x04\0",
_RODATA_GS_AU16SENSORCFGSEQ_0024: .ascii "\x04\0\x02\0",
_RODATA_GS_AU16SENSORCFGSEQ_0028: .ascii "\x02\0\x02\0",
_RODATA_GS_AU16SENSORCFGSEQ_002c: .ascii "\x02\0\r\x03\0\0\x01\0",
_RODATA_GS_AU16SENSORCFGSEQ_0034: .ascii "\x01\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_0038: .ascii "\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_003c: .ascii "\0\0\x10\x03\x7f\0\x7f\0",
_RODATA_GS_AU16SENSORCFGSEQ_0044: .ascii "\x7f\0\x7f\0",
_RODATA_GS_AU16SENSORCFGSEQ_0048: .ascii "d\0\x7f\0",
_RODATA_GS_AU16SENSORCFGSEQ_004c: .ascii "\x7f\0HF\x1c\0\\0",
_RODATA_GS_AU16SENSORCFGSEQ_0054: .ascii "\\0\x1c\0",
_RODATA_GS_AU16SENSORCFGSEQ_0058: .ascii "\x1c\0\x1c\0",
_RODATA_GS_AU16SENSORCFGSEQ_005c: .ascii "\x1c\0!t\xd7\0\xd7\0",
_RODATA_GS_AU16SENSORCFGSEQ_0064: .ascii "\xd7\0\xd7\0",
_RODATA_GS_AU16SENSORCFGSEQ_0068: .ascii "\xd7\0\xd7\0",
_RODATA_GS_AU16SENSORCFGSEQ_006c: .ascii "\xd7\0#t\0\0\x04\0",
_RODATA_GS_AU16SENSORCFGSEQ_0074: .ascii "\x04\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_0078: .ascii "\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_007c: .ascii "\0\0\x04\x91\x14\0\x14\0",
_RODATA_GS_AU16SENSORCFGSEQ_0084: .ascii "\x14\0\x14\0",
_RODATA_GS_AU16SENSORCFGSEQ_0088: .ascii "\x14\0\x14\0",
_RODATA_GS_AU16SENSORCFGSEQ_008c: .ascii "\x14\0B\x03\xe8\0\xe8\0",
_RODATA_GS_AU16SENSORCFGSEQ_0094: .ascii "\xe8\0\xe8\0",
_RODATA_GS_AU16SENSORCFGSEQ_0098: .ascii "H\0\xe8\0",
_RODATA_GS_AU16SENSORCFGSEQ_009c: .ascii "\xe8\0C\x03\x0c\0\x12\0",
_RODATA_GS_AU16SENSORCFGSEQ_00a4: .ascii "\x06\0\t\0",
_RODATA_GS_AU16SENSORCFGSEQ_00a8: .ascii "\x04\0\x02\0",
_RODATA_GS_AU16SENSORCFGSEQ_00ac: .ascii "\x0c\0@\x03\x9c\0\xc3\0",
_RODATA_GS_AU16SENSORCFGSEQ_00b4: .ascii "A\0P\0",
_RODATA_GS_AU16SENSORCFGSEQ_00b8: .ascii "T\0\xf0\0",
_RODATA_GS_AU16SENSORCFGSEQ_00bc: .ascii "\x9c\0A\x03\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_00c4: .ascii "\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_00c8: .ascii "\xb6\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_00cc: .ascii "\0\0E\x03\x01\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_00d4: .ascii "\x03\0\x01\0",
_RODATA_GS_AU16SENSORCFGSEQ_00d8: .ascii "\x01\0\x01\0",
_RODATA_GS_AU16SENSORCFGSEQ_00dc: .ascii "\x01\0F\x03\xe0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_00e4: .ascii "\x1e\0\x80\0",
_RODATA_GS_AU16SENSORCFGSEQ_00e8: .ascii "\xe0\0\xe0\0",
_RODATA_GS_AU16SENSORCFGSEQ_00ec: .ascii "\x80\0G\x03\x10\0\x10\0",
_RODATA_GS_AU16SENSORCFGSEQ_00f4: .ascii "\x10\0\x10\0",
_RODATA_GS_AU16SENSORCFGSEQ_00f8: .ascii "\x0f\0\x10\0",
_RODATA_GS_AU16SENSORCFGSEQ_00fc: .ascii "\x10\0H\x03o\0o\0",
_RODATA_GS_AU16SENSORCFGSEQ_0104: .ascii "o\0o\0",
_RODATA_GS_AU16SENSORCFGSEQ_0108: .ascii "\xb9\0o\0",
_RODATA_GS_AU16SENSORCFGSEQ_010c: .ascii "o\0I\x03\n\0\x0c\0",
_RODATA_GS_AU16SENSORCFGSEQ_0114: .ascii "\t\0\n\0",
_RODATA_GS_AU16SENSORCFGSEQ_0118: .ascii "\n\0\n\0",
_RODATA_GS_AU16SENSORCFGSEQ_011c: .ascii "\n\0J\x03O\0/\0",
_RODATA_GS_AU16SENSORCFGSEQ_0124: .ascii "\x11\0\xaf\0",
_RODATA_GS_AU16SENSORCFGSEQ_0128: .ascii "O\0O\0",
_RODATA_GS_AU16SENSORCFGSEQ_012c: .ascii "\xaf\0K\x03\x01\0\x01\0",
_RODATA_GS_AU16SENSORCFGSEQ_0134: .ascii "\x01\0\x01\0",
_RODATA_GS_AU16SENSORCFGSEQ_0138: .ascii "\x01\0\x03\0",
_RODATA_GS_AU16SENSORCFGSEQ_013c: .ascii "\x01\0\x85\x03\x01\0\x01\0",
_RODATA_GS_AU16SENSORCFGSEQ_0144: .ascii "\x01\0\x01\0",
_RODATA_GS_AU16SENSORCFGSEQ_0148: .ascii "\x01\0\x03\0",
_RODATA_GS_AU16SENSORCFGSEQ_014c: .ascii "\x01\0\x87\x03\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_0154: .ascii "\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_0158: .ascii "\x01\0\x01\0",
_RODATA_GS_AU16SENSORCFGSEQ_015c: .ascii "\0\0\0\t\x11\0\x11\0",
_RODATA_GS_AU16SENSORCFGSEQ_0164: .ascii "\x11\0\x11\0",
_RODATA_GS_AU16SENSORCFGSEQ_0168: .ascii "\x12\0\x12\0",
_RODATA_GS_AU16SENSORCFGSEQ_016c: .ascii "\x11\0\x01\t\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_0174: .ascii "\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_0178: .ascii "\x02\0\x02\0",
_RODATA_GS_AU16SENSORCFGSEQ_017c: .ascii "\0\0\x02\t\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_0184: .ascii "\0\0\x02\0",
_RODATA_GS_AU16SENSORCFGSEQ_0188: .ascii "\x01\0\x01\0",
_RODATA_GS_AU16SENSORCFGSEQ_018c: .ascii "\x02\0\x01\x04\x10\0\x10\0",
_RODATA_GS_AU16SENSORCFGSEQ_0194: .ascii "\x10\0\x18\0",
_RODATA_GS_AU16SENSORCFGSEQ_0198: .ascii " \00\0",
_RODATA_GS_AU16SENSORCFGSEQ_019c: .ascii "\x11\0\x05\x04\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_01a4: .ascii "\x02\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_01a8: .ascii "\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_01ac: .ascii "\0\0\x08\x04\xb8\0h\0",
_RODATA_GS_AU16SENSORCFGSEQ_01b4: .ascii "\xea\0B\0",
_RODATA_GS_AU16SENSORCFGSEQ_01b8: .ascii "\0\0\xb6\0",
_RODATA_GS_AU16SENSORCFGSEQ_01bc: .ascii "@\0\t\x04\0\0<\0",
_RODATA_GS_AU16SENSORCFGSEQ_01c4: .ascii "\0\0 \0",
_RODATA_GS_AU16SENSORCFGSEQ_01c8: .ascii "\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_01cc: .ascii "\x1c\0\x0b\x04\x0f\0\x0f\0",
_RODATA_GS_AU16SENSORCFGSEQ_01d4: .ascii "\n\0\x0f\0",
_RODATA_GS_AU16SENSORCFGSEQ_01d8: .ascii "\x0f\0\x0f\0",
_RODATA_GS_AU16SENSORCFGSEQ_01dc: .ascii "\x0f\0\x0c\x04\0\0\xa0\0",
_RODATA_GS_AU16SENSORCFGSEQ_01e4: .ascii "\x9c\0\xec\0",
_RODATA_GS_AU16SENSORCFGSEQ_01e8: .ascii "\x02\0\x02\0",
_RODATA_GS_AU16SENSORCFGSEQ_01ec: .ascii "\xf0\0\r\x04\x08\0\x0b\0",
_RODATA_GS_AU16SENSORCFGSEQ_01f4: .ascii "\x05\0\x08\0",
_RODATA_GS_AU16SENSORCFGSEQ_01f8: .ascii "\x04\0\x02\0",
_RODATA_GS_AU16SENSORCFGSEQ_01fc: .ascii "\x08\0\x0e\x04p\0\xb8\0",
_RODATA_GS_AU16SENSORCFGSEQ_0204: .ascii "\xf4\0\xf0\0",
_RODATA_GS_AU16SENSORCFGSEQ_0208: .ascii "8\0\xd0\0",
_RODATA_GS_AU16SENSORCFGSEQ_020c: .ascii "\xf8\0\x0f\x04\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_0214: .ascii "\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_0218: .ascii "\0\0\x01\0",
_RODATA_GS_AU16SENSORCFGSEQ_021c: .ascii "\0\0\r0\x0f\0\x0f\0",
_RODATA_GS_AU16SENSORCFGSEQ_0224: .ascii "\n\0\n\0",
_RODATA_GS_AU16SENSORCFGSEQ_0228: .ascii "\x07\0\x05\0",
_RODATA_GS_AU16SENSORCFGSEQ_022c: .ascii "\x0f\0L\x03\0\0\xa0\0",
_RODATA_GS_AU16SENSORCFGSEQ_0234: .ascii "\x9c\0\x9c\0",
_RODATA_GS_AU16SENSORCFGSEQ_0238: .ascii "\x80\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_023c: .ascii "\0\0M\x03\x08\0\x0b\0",
_RODATA_GS_AU16SENSORCFGSEQ_0244: .ascii "\x05\0\x05\0",
_RODATA_GS_AU16SENSORCFGSEQ_0248: .ascii "\x04\0\x02\0",
_RODATA_GS_AU16SENSORCFGSEQ_024c: .ascii "\x08\0N\x03p\0\xb8\0",
_RODATA_GS_AU16SENSORCFGSEQ_0254: .ascii "\xf4\0\xf4\0",
_RODATA_GS_AU16SENSORCFGSEQ_0258: .ascii "8\0\xd0\0",
_RODATA_GS_AU16SENSORCFGSEQ_025c: .ascii "p\0O\x03\x0c\0\x12\0",
_RODATA_GS_AU16SENSORCFGSEQ_0264: .ascii "\x06\0\t\0",
_RODATA_GS_AU16SENSORCFGSEQ_0268: .ascii "\x04\0\x02\0",
_RODATA_GS_AU16SENSORCFGSEQ_026c: .ascii "\x0c\0\x02\x02\x92\0\xb9\0",
_RODATA_GS_AU16SENSORCFGSEQ_0274: .ascii "7\0F\0",
_RODATA_GS_AU16SENSORCFGSEQ_0278: .ascii "J\0\xe6\0",
_RODATA_GS_AU16SENSORCFGSEQ_027c: .ascii "\x92\0\x03\x02\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_0284: .ascii "\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_0288: .ascii "\x01\0\x01\0",
_RODATA_GS_AU16SENSORCFGSEQ_028c: .ascii "\0\0\xcd{>\0>\0",
_RODATA_GS_AU16SENSORCFGSEQ_0294: .ascii ">\0>\0",
_RODATA_GS_AU16SENSORCFGSEQ_0298: .ascii ">\0>\0",
_RODATA_GS_AU16SENSORCFGSEQ_029c: .ascii ">\0\x10\x90P\0P\0",
_RODATA_GS_AU16SENSORCFGSEQ_02a4: .ascii "P\0P\0",
_RODATA_GS_AU16SENSORCFGSEQ_02a8: .ascii "P\0P\0",
_RODATA_GS_AU16SENSORCFGSEQ_02ac: .ascii "P\0\x19\x94P\0P\0",
_RODATA_GS_AU16SENSORCFGSEQ_02b4: .ascii "P\0P\0",
_RODATA_GS_AU16SENSORCFGSEQ_02b8: .ascii "P\0P\0",
_RODATA_GS_AU16SENSORCFGSEQ_02bc: .ascii "P\0\x1b\x94P\0P\0",
_RODATA_GS_AU16SENSORCFGSEQ_02c4: .ascii "P\0P\0",
_RODATA_GS_AU16SENSORCFGSEQ_02c8: .ascii "P\0P\0",
_RODATA_GS_AU16SENSORCFGSEQ_02cc: .ascii "P\0\x19\x95P\0P\0",
_RODATA_GS_AU16SENSORCFGSEQ_02d4: .ascii "P\0P\0",
_RODATA_GS_AU16SENSORCFGSEQ_02d8: .ascii "P\0P\0",
_RODATA_GS_AU16SENSORCFGSEQ_02dc: .ascii "P\0\x1b\x95\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_02e4: .ascii "\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_02e8: .ascii "\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_02ec: .ascii "\0\000\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_02f4: .ascii "\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_02f8: .ascii "\x05\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_02fc: .ascii "\0\0|@\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_0304: .ascii "\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_0308: .ascii "\x12\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_030c: .ascii "\0\0}@\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_0314: .ascii "\0\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_0318: .ascii "\x01\0\0\0",
_RODATA_GS_AU16SENSORCFGSEQ_031c: .ascii "\0\0\x7f@\t\0\t\0",
_RODATA_GS_AU16SENSORCFGSEQ_0324: .ascii "\t\0\t\0",
_RODATA_GS_AU16SENSORCFGSEQ_0328: .ascii "\x03\0\t\0",
_RODATA_GS_AU16SENSORCFGSEQ_032c: .ascii "\t\0)[\x19\0\x19\0",
_RODATA_GS_AU16SENSORCFGSEQ_0334: .ascii "\x19\0\x19\0",
_RODATA_GS_AU16SENSORCFGSEQ_0338: .ascii "\t\0\x19\0",
_RODATA_GS_AU16SENSORCFGSEQ_033c: .ascii "\x19\0/["


_RODATA_GS_AU16SENSORCFGSEQCOMM_0000: .ascii "\x18\06\x01\0\0Q0\0\0R0\x14\0!N\xcf\0\x11k\x08\0\xf0\x7f\x1b\0\xf3\x7f#\0\xf4\x7f\x01\0\xf7\x7f\0\0\xfd\x7f\xfe\0w\x7f\xfe\0\xa9\x7f\x81\0${\x07\0deA\0\rk\x04\0=e\x8c\0\x05k\xf9\0\x06ke\0\x08k\xfc\0\tk\xcf\0\nk\xd2\0\x0bk\x0e\0\0g\x0e\0\x07g\xed\0\x05_t\0\xd0\x94t\0\xd1\x94t\0\xd2\x94t\0\xd0\x95t\0\xd1\x95t\0\xd2\x95.\0\xcd\x94.\0\xce\x94.\0\xcf\x94.\0\xcd\x95.\0\xce\x95.\0\xcf\x95L\0\xca\x94L\0\xcb\x94L\0\xcc\x94L\0\xca\x95L\0\xcb\x95L\0\xcc\x952\0\x0e\x90\xff\0\xe2\x94\xff\0\xe3\x94\xff\0\xe4\x94\xff\0\xe2\x95\xff\0\xe3\x95\xff\0\xe4\x95n\0\xdf\x94n\0\xe0\x94n\0\xe1\x94n\0\xdf\x95n\0\xe0\x95n\0\xe1\x95\x01\0\xcc\x7f\0\0x{5\0\x01\x94#\0\x03\x94#\0\x05\x94\0\0\x06\x941\0\x07\x94\0\0\x08\x94\x1b\0\t\x94\0\0\n\x94\x15\0\x0b\x94?\0\r\x94?\0\x0f\x94?\0\x11\x94d\0\x13\x94d\0\x15\x94d\0\x17\x944\0\x1d\x94\x01\0\x1f\x94\x01\0!\x94\x01\0#\x94#\0%\x94#\0'\x94#\0)\x94/\0+\x94\x1a\0-\x94\x14\0/\x94?\01\x94?\03\x94?\05\x94k\07\x94|\09\x94\x81\0;\x94\x0f\0C\x94\x0f\0E\x94\x0f\0G\x94\x0f\0I\x94\x0f\0K\x94\x0f\0M\x94\x1e\0O\x94\x0f\0Q\x94\x0b\0S\x94(\0U\x94\x13\0W\x94\x0c\0Y\x94\0\0]\x94\0\0^\x94\0\0_\x94\0\0m\x94\x10\0o\x94\x10\0q\x94@\0s\x94.\0u\x94\x10\0w\x94\n\0x\x94\xe0\0{\x94\xe0\0|\x94\xe0\0}\x94\xe0\0~\x94\xe0\0\x7f\x94\xe0\0\x80\x94\x14\0\x83\x94\x14\0\x85\x94\x14\0\x87\x945\0\x01\x95\x14\0\x03\x95\x14\0\x05\x951\0\x07\x95\x1b\0\t\x95\x15\0\x0b\x95\x1e\0\r\x95\x1e\0\x0f\x95\x1e\0\x11\x95d\0\x13\x95d\0\x15\x95d\0\x17\x954\0\x1d\x95\x01\0\x1f\x95\x01\0!\x95\x01\0#\x95\x14\0%\x95\x14\0'\x95\x14\0)\x95/\0+\x95\x1a\0-\x95\x14\0/\x95\x1e\01\x95\x1e\03\x95\x1e\05\x95k\07\x95|\09\x95\x81\0;\x95\x0f\0C\x95\x0f\0E\x95\x0f\0G\x95\x0f\0I\x95\x0f\0K\x95\x0f\0M\x95\x15\0O\x95\x0b\0Q\x95\x08\0S\x95\x1c\0U\x95\r\0W\x95\x08\0Y\x95\0\0]\x95\0\0^\x95\0\0_\x95\0\0m\x95\x10\0o\x95\x10\0q\x95@\0s\x95.\0u\x95\x10\0w\x95\n\0x\x95\xe0\0{\x95\xe0\0|\x95\xe0\0}\x95\xe0\0~\x95\xe0\0\x7f\x95\xe0\0\x80\x95\x14\0\x83\x95\x14\0\x85\x95\x14\0\x87\x95\0\0x\x7f\0\0\x89\x7f\0\0\x93\x7f\x1b\0K\x92\n\0L\x92\x04\0\x04\x93\x04\0\x15\x93P\0P\x92<\0Q\x92\x14\0R\x92"


_RODATA_IMX458_ADDR_BYTE_0000: .ascii "\x02\0\0\0",
_RODATA_IMX458_ADDR_BYTE_0004: .ascii ""


_RODATA_IMX458_DATA_BYTE_0000: .ascii "\x01\0\0\0",
_RODATA_IMX458_DATA_BYTE_0004: .ascii ""


_RODATA_IMX458_I2C_ADDR_0000: .ascii "4"


_RODATA_IMX458_I2C_INIT_STR1_4_0000: .ascii "/dev/i2c-%u\0",
_RODATA_IMX458_I2C_INIT_STR1_4_000c: .ascii "[Func]:%s [Line]:%d [Info]:Open /dev/hi_i2c_drv-%u error!\n\0\0",
_RODATA_IMX458_I2C_INIT_STR1_4_0048: .ascii "[Func]:%s [Line]:%d [Info]:I2C_SLAVE_FORCE error!\n\0"


_RODATA_IMX458_INIT_STR1_4_0000: .ascii "IMX458 %s init succuss!\n\0"


_RODATA_IMX458_WRITE_REGISTER_STR1_4_0000: .ascii "[Func]:%s [Line]:%d [Info]:I2C_WRITE DATA error!\n\0"


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.imx458_i2c_init
@ Size: 0x144
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN imx458_i2c_init
    /*00000000*/ PUSH        {R4, R5, R6, R7, R8, R9, LR} 
    /*00000004*/ SUB         SP, SP, #36                 @ 0x24 
    /*00000008*/ LDR         R4, WORD_011c               @ LDR         R4, [PC, #268]              @ 0x000000000000011c 
    /*0000000c*/ LDR         R7, WORD_0120               @ LDR         R7, [PC, #268]              @ 0x0000000000000120 
    /*00000010*/ ADD         R4, PC, R4 
    /*00000014*/ LDR         R3, WORD_0124               @ LDR         R3, [PC, #264]              @ 0x0000000000000124 
    /*00000018*/ ADD         R7, PC, R7 
    /*0000001c*/ LDR         R5, [R4, R3] 
    /*00000020*/ LDR         R3, [R7, R0, LSL #2] 
    /*00000024*/ LDR         R2, [R5] 
    /*00000028*/ CMP         R3, #0 
    /*0000002c*/ STR         R2, [SP, #28] 
    /*00000030*/ BLT         imx458_i2c_init_x54
    imx458_i2c_init_x34:
    /*00000034*/ MOV         R8, #0 
    imx458_i2c_init_x38:
    /*00000038*/ LDR         R2, [SP, #28] 
    /*0000003c*/ MOV         R0, R8 
    /*00000040*/ LDR         R3, [R5] 
    /*00000044*/ CMP         R2, R3 
    /*00000048*/ BNE         imx458_i2c_init_x118
    /*0000004c*/ ADD         SP, SP, #36                 @ 0x24 
    /*00000050*/ POP         {R4, R5, R6, R7, R8, R9, PC} 
    imx458_i2c_init_x54:
    /*00000054*/ LDR         R3, WORD_0128               @ LDR         R3, [PC, #204]              @ 0x0000000000000128 
    /*00000058*/ MOV         R6, R0 
    /*0000005c*/ LDR         R2, WORD_012c               @ LDR         R2, [PC, #200]              @ 0x000000000000012c 
    /*00000060*/ ADD         R8, SP, #12 
    /*00000064*/ LDR         R3, [R4, R3] 
    /*00000068*/ MOV         R1, #16 
    /*0000006c*/ ADD         R2, PC, R2 
    /*00000070*/ MOV         R0, R8 
    /*00000074*/ LDRB        R9, [R3, R6] 
    /*00000078*/ MOV         R3, R9 
    /*0000007c*/ BL          snprintf
    /*00000080*/ MOV         R0, R8 
    /*00000084*/ MOV         R2, #384                    @ 0x180 
    /*00000088*/ MOV         R1, #2 
    /*0000008c*/ BL          open
    /*00000090*/ STR         R0, [R7, R6, LSL #2] 
    /*00000094*/ CMP         R0, #0 
    /*00000098*/ BLT         imx458_i2c_init_xe8
    /*0000009c*/ MOV         R2, #26 
    /*000000a0*/ MOVW        R1, #1798                   @ 0x706 
    /*000000a4*/ BL          ioctl
    /*000000a8*/ SUBS        R8, R0, #0 
    /*000000ac*/ BGE         imx458_i2c_init_x34
    /*000000b0*/ LDR         R1, WORD_0130               @ LDR         R1, [PC, #120]              @ 0x0000000000000130 
    /*000000b4*/ MOV         R3, #87                     @ 0x57 
    /*000000b8*/ LDR         R2, WORD_0134               @ LDR         R2, [PC, #116]              @ 0x0000000000000134 
    /*000000bc*/ LDR         R0, [R4, R1] 
    /*000000c0*/ LDR         R1, WORD_0138               @ LDR         R1, [PC, #112]              @ 0x0000000000000138 
    /*000000c4*/ ADD         R2, PC, R2 
    /*000000c8*/ ADD         R1, PC, R1 
    /*000000cc*/ LDR         R0, [R0] 
    /*000000d0*/ BL          fprintf
    /*000000d4*/ LDR         R0, [R7, R6, LSL #2] 
    /*000000d8*/ BL          close
    /*000000dc*/ MVN         R3, #0 
    /*000000e0*/ STR         R3, [R7, R6, LSL #2] 
    /*000000e4*/ B           imx458_i2c_init_x38
    imx458_i2c_init_xe8:
    /*000000e8*/ LDR         R1, WORD_0130               @ LDR         R1, [PC, #64]               @ 0x0000000000000130 
    /*000000ec*/ MOV         R3, #79                     @ 0x4f 
    /*000000f0*/ LDR         R2, WORD_013c               @ LDR         R2, [PC, #68]               @ 0x000000000000013c 
    /*000000f4*/ MVN         R8, #0 
    /*000000f8*/ LDR         R0, [R4, R1] 
    /*000000fc*/ LDR         R1, WORD_0140               @ LDR         R1, [PC, #60]               @ 0x0000000000000140 
    /*00000100*/ ADD         R2, PC, R2 
    /*00000104*/ ADD         R1, PC, R1 
    /*00000108*/ LDR         R0, [R0] 
    /*0000010c*/ STR         R9, [SP] 
    /*00000110*/ BL          fprintf
    /*00000114*/ B           imx458_i2c_init_x38
    imx458_i2c_init_x118:
    /*00000118*/ BL          __stack_chk_fail
    /*0000011c*/ WORD_011c: .word 0x00000104
    /*00000120*/ WORD_0120: .word 0x00000100
    /*00000124*/ WORD_0124: .word 0x00000000
    /*00000128*/ WORD_0128: .word 0x00000000
    /*0000012c*/ WORD_012c: .word 0x000000b8
    /*00000130*/ WORD_0130: .word 0x00000000
    /*00000134*/ WORD_0134: .word 0x00000068
    /*00000138*/ WORD_0138: .word 0x00000068
    /*0000013c*/ WORD_013c: .word 0x00000034
    /*00000140*/ WORD_0140: .word 0x00000034
FUNC_END imx458_i2c_init


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.imx458_i2c_exit
@ Size: 0x40
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN imx458_i2c_exit
    /*00000000*/ PUSH        {R4, R5, R6, LR} 
    /*00000004*/ LDR         R5, WORD_003c               @ LDR         R5, [PC, #48]               @ 0x000000000000003c 
    /*00000008*/ ADD         R5, PC, R5 
    /*0000000c*/ LDR         R3, [R5, R0, LSL #2] 
    /*00000010*/ CMP         R3, #0 
    /*00000014*/ BLT         imx458_i2c_exit_x34
    /*00000018*/ MOV         R4, R0 
    /*0000001c*/ MOV         R0, R3 
    /*00000020*/ BL          close
    /*00000024*/ MVN         R3, #0 
    /*00000028*/ MOV         R0, #0 
    /*0000002c*/ STR         R3, [R5, R4, LSL #2] 
    /*00000030*/ POP         {R4, R5, R6, PC} 
    imx458_i2c_exit_x34:
    /*00000034*/ MVN         R0, #0 
    /*00000038*/ POP         {R4, R5, R6, PC} 
    /*0000003c*/ WORD_003c: .word 0x0000002c
FUNC_END imx458_i2c_exit


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.imx458_read_register
@ Size: 0x8
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN imx458_read_register
    /*00000000*/ MOV         R0, #0 
    /*00000004*/ BX          LR 
FUNC_END imx458_read_register


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.imx458_write_register
@ Size: 0xc0
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN imx458_write_register
    /*00000000*/ PUSH        {R4, R5, LR} 
    /*00000004*/ SUB         SP, SP, #20 
    /*00000008*/ LDR         R4, WORD_00a8               @ LDR         R4, [PC, #152]              @ 0x00000000000000a8 
    /*0000000c*/ LDR         R3, WORD_00ac               @ LDR         R3, [PC, #152]              @ 0x00000000000000ac 
    /*00000010*/ ADD         R4, PC, R4 
    /*00000014*/ ADD         R3, PC, R3 
    /*00000018*/ LDR         IP, WORD_00b0               @ LDR         IP, [PC, #144]              @ 0x00000000000000b0 
    /*0000001c*/ LDR         R0, [R3, R0, LSL #2] 
    /*00000020*/ LDR         R5, [R4, IP] 
    /*00000024*/ CMP         R0, #0 
    /*00000028*/ LDR         R3, [R5] 
    /*0000002c*/ STR         R3, [SP, #12] 
    /*00000030*/ BLT         imx458_write_register_x5c
    /*00000034*/ STRB        R1, [SP, #5] 
    /*00000038*/ MOV         LR, R2 
    /*0000003c*/ ASR         R1, R1, #8 
    /*00000040*/ MOV         R2, #3 
    /*00000044*/ STRB        R1, [SP, #4] 
    /*00000048*/ ADD         R1, SP, #4 
    /*0000004c*/ STRB        LR, [SP, #6] 
    /*00000050*/ BL          write
    /*00000054*/ CMP         R0, #0 
    /*00000058*/ BLT         imx458_write_register_x78
    imx458_write_register_x5c:
    /*0000005c*/ MOV         R0, #0 
    imx458_write_register_x60:
    /*00000060*/ LDR         R2, [SP, #12] 
    /*00000064*/ LDR         R3, [R5] 
    /*00000068*/ CMP         R2, R3 
    /*0000006c*/ BNE         imx458_write_register_xa4
    /*00000070*/ ADD         SP, SP, #20 
    /*00000074*/ POP         {R4, R5, PC} 
    imx458_write_register_x78:
    /*00000078*/ LDR         R1, WORD_00b4               @ LDR         R1, [PC, #52]               @ 0x00000000000000b4 
    /*0000007c*/ MOV         R3, #153                    @ 0x99 
    /*00000080*/ LDR         R2, WORD_00b8               @ LDR         R2, [PC, #48]               @ 0x00000000000000b8 
    /*00000084*/ LDR         R0, [R4, R1] 
    /*00000088*/ LDR         R1, WORD_00bc               @ LDR         R1, [PC, #44]               @ 0x00000000000000bc 
    /*0000008c*/ ADD         R2, PC, R2 
    /*00000090*/ ADD         R1, PC, R1 
    /*00000094*/ LDR         R0, [R0] 
    /*00000098*/ BL          fprintf
    /*0000009c*/ MVN         R0, #0 
    /*000000a0*/ B           imx458_write_register_x60
    imx458_write_register_xa4:
    /*000000a4*/ BL          __stack_chk_fail
    /*000000a8*/ WORD_00a8: .word 0x00000090
    /*000000ac*/ WORD_00ac: .word 0x00000090
    /*000000b0*/ WORD_00b0: .word 0x00000000
    /*000000b4*/ WORD_00b4: .word 0x00000000
    /*000000b8*/ WORD_00b8: .word 0x00000024
    /*000000bc*/ WORD_00bc: .word 0x00000024
FUNC_END imx458_write_register


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.imx458_standby
@ Size: 0x2c
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN imx458_standby
    /*00000000*/ PUSH        {R4, LR} 
    /*00000004*/ MOV         R2, #0 
    /*00000008*/ MOV         R1, #256                    @ 0x100 
    /*0000000c*/ MOV         R4, R0 
    /*00000010*/ BL          imx458_write_register
    /*00000014*/ LDR         R3, WORD_0028               @ LDR         R3, [PC, #12]               @ 0x0000000000000028 
    /*00000018*/ MOV         R2, #1 
    /*0000001c*/ ADD         R3, PC, R3 
    /*00000020*/ STR         R2, [R3, R4, LSL #2] 
    /*00000024*/ POP         {R4, PC} 
    /*00000028*/ WORD_0028: .word 0x00000004
FUNC_END imx458_standby


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.imx458_restart
@ Size: 0x2c
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN imx458_restart
    /*00000000*/ PUSH        {R4, LR} 
    /*00000004*/ MOV         R2, #1 
    /*00000008*/ MOV         R1, #256                    @ 0x100 
    /*0000000c*/ MOV         R4, R0 
    /*00000010*/ BL          imx458_write_register
    /*00000014*/ LDR         R3, WORD_0028               @ LDR         R3, [PC, #12]               @ 0x0000000000000028 
    /*00000018*/ MOV         R2, #0 
    /*0000001c*/ ADD         R3, PC, R3 
    /*00000020*/ STR         R2, [R3, R4, LSL #2] 
    /*00000024*/ POP         {R4, PC} 
    /*00000028*/ WORD_0028: .word 0x00000004
FUNC_END imx458_restart


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.imx458_mirror_flip
@ Size: 0x30
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN imx458_mirror_flip
    /*00000000*/ CMP         R1, #2 
    /*00000004*/ BEQ         imx458_mirror_flip_x24
    /*00000008*/ CMP         R1, #3 
    /*0000000c*/ BEQ         imx458_mirror_flip_x24
    /*00000010*/ CMP         R1, #1 
    /*00000014*/ BEQ         imx458_mirror_flip_x24
    /*00000018*/ MOV         R2, #0 
    /*0000001c*/ MOVW        R1, #257                    @ 0x101 
    imx458_mirror_flip_x20:
    /*00000020*/ B           imx458_mirror_flip_x20      @ imx458_write_register [R_ARM_JUMP24: .text.imx458_write_register+0x0] 
    imx458_mirror_flip_x24:
    /*00000024*/ MOV         R2, R1 
    /*00000028*/ MOVW        R1, #257                    @ 0x101 
    imx458_mirror_flip_x2c:
    /*0000002c*/ B           imx458_mirror_flip_x2c      @ imx458_write_register [R_ARM_JUMP24: .text.imx458_write_register+0x0] 
FUNC_END imx458_mirror_flip


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.imx458_init
@ Size: 0x178
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN imx458_init
    /*00000000*/ PUSH        {R4, R5, R6, R7, R8, R9, SL, LR} 
    /*00000004*/ MOV         R5, R0 
    /*00000008*/ LDR         R7, WORD_0158               @ LDR         R7, [PC, #328]              @ 0x0000000000000158 
    /*0000000c*/ LDR         R3, WORD_015c               @ LDR         R3, [PC, #328]              @ 0x000000000000015c 
    /*00000010*/ ADD         R7, PC, R7 
    /*00000014*/ LDR         R6, [R7, R3] 
    /*00000018*/ LDR         R3, [R6, R0, LSL #2] 
    /*0000001c*/ LDR         R2, [R3] 
    /*00000020*/ LDRB        R8, [R3, #8] 
    /*00000024*/ CMP         R2, #0 
    /*00000028*/ BEQ         imx458_init_x12c
    /*0000002c*/ LDR         R3, WORD_0160               @ LDR         R3, [PC, #300]              @ 0x0000000000000160 
    /*00000030*/ ADD         R3, PC, R3 
    /*00000034*/ LDR         R3, [R3, R0, LSL #2] 
    /*00000038*/ CMP         R3, #0 
    /*0000003c*/ BNE         imx458_init_x7c
    imx458_init_x40:
    /*00000040*/ LDR         R9, WORD_0164               @ LDR         R9, [PC, #284]              @ 0x0000000000000164 
    /*00000044*/ MOV         R2, #24 
    /*00000048*/ MOVW        R1, #310                    @ 0x136 
    /*0000004c*/ ADD         R9, PC, R9 
    /*00000050*/ ADD         R4, R9, #4 
    /*00000054*/ ADD         R9, R9, #760                @ 0x2f8 
    /*00000058*/ B           imx458_init_x64
    imx458_init_x5c:
    /*0000005c*/ LDRH        R1, [R4, #-2] 
    /*00000060*/ LDRH        R2, [R4, #-4] 
    imx458_init_x64:
    /*00000064*/ UXTB        R2, R2 
    /*00000068*/ ADD         R4, R4, #4 
    /*0000006c*/ MOV         R0, R5 
    /*00000070*/ BL          imx458_write_register
    /*00000074*/ CMP         R9, R4 
    /*00000078*/ BNE         imx458_init_x5c
    imx458_init_x7c:
    /*0000007c*/ LDR         R4, WORD_0168               @ LDR         R4, [PC, #228]              @ 0x0000000000000168 
    /*00000080*/ MOVW        R1, #773                    @ 0x305 
    /*00000084*/ LSL         SL, R8, #1 
    /*00000088*/ ADD         R4, PC, R4 
    /*0000008c*/ ADD         R9, R4, #832                @ 0x340 
    /*00000090*/ B           imx458_init_x98
    imx458_init_x94:
    /*00000094*/ LDRH        R1, [R4, #14] 
    imx458_init_x98:
    /*00000098*/ LDRB        R2, [R4, SL] 
    /*0000009c*/ MOV         R0, R5 
    /*000000a0*/ ADD         R4, R4, #16 
    /*000000a4*/ BL          imx458_write_register
    /*000000a8*/ CMP         R9, R4 
    /*000000ac*/ BNE         imx458_init_x94
    /*000000b0*/ LDR         R3, [R6, R5, LSL #2] 
    /*000000b4*/ LDR         R2, [R3, #20] 
    /*000000b8*/ CMP         R2, #0 
    /*000000bc*/ BEQ         imx458_init_xf8
    /*000000c0*/ MOV         R2, #0 
    /*000000c4*/ MOV         R9, #24 
    imx458_init_xc8:
    /*000000c8*/ ADD         R4, R2, #1 
    /*000000cc*/ MOV         R0, R5 
    /*000000d0*/ MLA         R2, R9, R2, R3 
    /*000000d4*/ MLA         R3, R9, R4, R3 
    /*000000d8*/ LDR         R1, [R2, #36]               @ 0x24 
    /*000000dc*/ LDR         R2, [R3, #20] 
    /*000000e0*/ BL          imx458_write_register
    /*000000e4*/ LDR         R3, [R6, R5, LSL #2] 
    /*000000e8*/ MOV         R2, R4 
    /*000000ec*/ LDR         R1, [R3, #20] 
    /*000000f0*/ CMP         R1, R4 
    /*000000f4*/ BHI         imx458_init_xc8
    imx458_init_xf8:
    /*000000f8*/ MOV         R2, #1 
    /*000000fc*/ MOV         R0, R5 
    /*00000100*/ STR         R2, [R3] 
    /*00000104*/ BL          imx458_restart
    /*00000108*/ LDR         R2, WORD_016c               @ LDR         R2, [PC, #92]               @ 0x000000000000016c 
    /*0000010c*/ MOV         R3, #28 
    /*00000110*/ LDR         R0, WORD_0170               @ LDR         R0, [PC, #88]               @ 0x0000000000000170 
    /*00000114*/ LDR         R2, [R7, R2] 
    /*00000118*/ ADD         R0, PC, R0 
    /*0000011c*/ MLA         R8, R3, R8, R2 
    /*00000120*/ LDR         R1, [R8, #24] 
    /*00000124*/ POP         {R4, R5, R6, R7, R8, R9, SL, LR} 
    imx458_init_x128:
    /*00000128*/ B           imx458_init_x128            @ printf [R_ARM_JUMP24: +0x0] 
    imx458_init_x12c:
    /*0000012c*/ BL          imx458_i2c_init
    /*00000130*/ LDR         R3, WORD_0174               @ LDR         R3, [PC, #60]               @ 0x0000000000000174 
    /*00000134*/ ADD         R3, PC, R3 
    /*00000138*/ LDR         R3, [R3, R5, LSL #2] 
    /*0000013c*/ CMP         R3, #0 
    /*00000140*/ BEQ         imx458_init_x40
    /*00000144*/ LDR         R3, [R6, R5, LSL #2] 
    /*00000148*/ LDR         R3, [R3] 
    /*0000014c*/ CMP         R3, #0 
    /*00000150*/ BEQ         imx458_init_x40
    /*00000154*/ B           imx458_init_x7c
    /*00000158*/ WORD_0158: .word 0x00000140
    /*0000015c*/ WORD_015c: .word 0x00000000
    /*00000160*/ WORD_0160: .word 0x00000128
    /*00000164*/ WORD_0164: .word 0x00000110
    /*00000168*/ WORD_0168: .word 0x000000d8
    /*0000016c*/ WORD_016c: .word 0x00000000
    /*00000170*/ WORD_0170: .word 0x00000050
    /*00000174*/ WORD_0174: .word 0x00000038
FUNC_END imx458_init


@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
@ .text.imx458_exit
@ Size: 0x24
@ - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

FUNC_BEGIN imx458_exit
    /*00000000*/ PUSH        {R4, LR} 
    /*00000004*/ MOV         R4, R0 
    /*00000008*/ BL          imx458_i2c_exit
    /*0000000c*/ LDR         R3, WORD_0020               @ LDR         R3, [PC, #12]               @ 0x0000000000000020 
    /*00000010*/ MOV         R2, #0 
    /*00000014*/ ADD         R3, PC, R3 
    /*00000018*/ STR         R2, [R3, R4, LSL #2] 
    /*0000001c*/ POP         {R4, PC} 
    /*00000020*/ WORD_0020: .word 0x00000004
FUNC_END imx458_exit


